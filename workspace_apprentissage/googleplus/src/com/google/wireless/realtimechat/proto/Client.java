package com.google.wireless.realtimechat.proto;

import com.google.protobuf.ByteString;
import com.google.protobuf.CodedInputStream;
import com.google.protobuf.CodedOutputStream;
import com.google.protobuf.ExtensionRegistryLite;
import com.google.protobuf.GeneratedMessageLite;
import com.google.protobuf.GeneratedMessageLite.Builder;
import com.google.protobuf.Internal;
import com.google.protobuf.Internal.EnumLite;
import com.google.protobuf.Internal.EnumLiteMap;
import com.google.protobuf.InvalidProtocolBufferException;
import com.google.protobuf.LazyStringArrayList;
import com.google.protobuf.LazyStringList;
import com.google.protobuf.MessageLite;
import com.google.protobuf.MessageLiteOrBuilder;
import com.google.protobuf.UninitializedMessageException;
import com.google.protobuf.UnmodifiableLazyStringList;
import com.google.wireless.webapps.Version.ClientVersion;
import com.google.wireless.webapps.Version.ClientVersion.Builder;
import java.io.IOException;
import java.io.ObjectStreamException;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

public final class Client
{
  public static final class BatchCommand extends GeneratedMessageLite
    implements Client.BatchCommandOrBuilder
  {
    private static final BatchCommand defaultInstance;
    private static final long serialVersionUID;
    private Object androidNewUrl_;
    private int bitField0_;
    private Version.ClientVersion clientVersionMessage_;
    private Object clientVersion_;
    private List<Client.BunchCommand> command_;
    private Object iphoneNewUrl_;
    private boolean isAndroidDeprecated_;
    private boolean isIphoneDeprecated_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private List<Client.BunchClientRequest> request_;
    private List<Client.BunchServerResponse> response_;
    private List<Client.BunchServerStateUpdate> stateUpdate_;

    static
    {
      BatchCommand localBatchCommand = new BatchCommand();
      defaultInstance = localBatchCommand;
      localBatchCommand.command_ = Collections.emptyList();
      localBatchCommand.request_ = Collections.emptyList();
      localBatchCommand.response_ = Collections.emptyList();
      localBatchCommand.stateUpdate_ = Collections.emptyList();
      localBatchCommand.clientVersion_ = "";
      localBatchCommand.clientVersionMessage_ = Version.ClientVersion.getDefaultInstance();
      localBatchCommand.isIphoneDeprecated_ = false;
      localBatchCommand.isAndroidDeprecated_ = false;
      localBatchCommand.iphoneNewUrl_ = "";
      localBatchCommand.androidNewUrl_ = "";
    }

    private BatchCommand()
    {
    }

    private BatchCommand(Builder paramBuilder)
    {
      super();
    }

    private ByteString getAndroidNewUrlBytes()
    {
      Object localObject = this.androidNewUrl_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.androidNewUrl_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    private ByteString getClientVersionBytes()
    {
      Object localObject = this.clientVersion_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.clientVersion_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static BatchCommand getDefaultInstance()
    {
      return defaultInstance;
    }

    private ByteString getIphoneNewUrlBytes()
    {
      Object localObject = this.iphoneNewUrl_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.iphoneNewUrl_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static Builder newBuilder()
    {
      return Builder.access$80400();
    }

    public static BatchCommand parseFrom(byte[] paramArrayOfByte)
      throws InvalidProtocolBufferException
    {
      return Builder.access$80300((Builder)Builder.access$80400().mergeFrom(paramArrayOfByte));
    }

    public final String getAndroidNewUrl()
    {
      Object localObject1 = this.androidNewUrl_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.androidNewUrl_ = str;
      }
    }

    public final String getClientVersion()
    {
      Object localObject1 = this.clientVersion_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.clientVersion_ = str;
      }
    }

    public final Version.ClientVersion getClientVersionMessage()
    {
      return this.clientVersionMessage_;
    }

    public final Client.BunchCommand getCommand(int paramInt)
    {
      return (Client.BunchCommand)this.command_.get(paramInt);
    }

    public final int getCommandCount()
    {
      return this.command_.size();
    }

    public final List<Client.BunchCommand> getCommandList()
    {
      return this.command_;
    }

    public final Client.BunchCommandOrBuilder getCommandOrBuilder(int paramInt)
    {
      return (Client.BunchCommandOrBuilder)this.command_.get(paramInt);
    }

    public final List<? extends Client.BunchCommandOrBuilder> getCommandOrBuilderList()
    {
      return this.command_;
    }

    public final BatchCommand getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final String getIphoneNewUrl()
    {
      Object localObject1 = this.iphoneNewUrl_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.iphoneNewUrl_ = str;
      }
    }

    public final boolean getIsAndroidDeprecated()
    {
      return this.isAndroidDeprecated_;
    }

    public final boolean getIsIphoneDeprecated()
    {
      return this.isIphoneDeprecated_;
    }

    public final Client.BunchClientRequest getRequest(int paramInt)
    {
      return (Client.BunchClientRequest)this.request_.get(paramInt);
    }

    public final int getRequestCount()
    {
      return this.request_.size();
    }

    public final List<Client.BunchClientRequest> getRequestList()
    {
      return this.request_;
    }

    public final Client.BunchClientRequestOrBuilder getRequestOrBuilder(int paramInt)
    {
      return (Client.BunchClientRequestOrBuilder)this.request_.get(paramInt);
    }

    public final List<? extends Client.BunchClientRequestOrBuilder> getRequestOrBuilderList()
    {
      return this.request_;
    }

    public final Client.BunchServerResponse getResponse(int paramInt)
    {
      return (Client.BunchServerResponse)this.response_.get(paramInt);
    }

    public final int getResponseCount()
    {
      return this.response_.size();
    }

    public final List<Client.BunchServerResponse> getResponseList()
    {
      return this.response_;
    }

    public final Client.BunchServerResponseOrBuilder getResponseOrBuilder(int paramInt)
    {
      return (Client.BunchServerResponseOrBuilder)this.response_.get(paramInt);
    }

    public final List<? extends Client.BunchServerResponseOrBuilder> getResponseOrBuilderList()
    {
      return this.response_;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int j;
      for (int i2 = i; ; i2 = j)
      {
        return i2;
        j = 0;
        for (int k = 0; k < this.command_.size(); k++)
          j += CodedOutputStream.computeMessageSize(1, (MessageLite)this.command_.get(k));
        if ((0x1 & this.bitField0_) == 1)
          j += CodedOutputStream.computeBytesSize(2, getClientVersionBytes());
        if ((0x2 & this.bitField0_) == 2)
          j += CodedOutputStream.computeMessageSize(3, this.clientVersionMessage_);
        for (int m = 0; m < this.request_.size(); m++)
          j += CodedOutputStream.computeMessageSize(4, (MessageLite)this.request_.get(m));
        for (int n = 0; n < this.response_.size(); n++)
          j += CodedOutputStream.computeMessageSize(5, (MessageLite)this.response_.get(n));
        for (int i1 = 0; i1 < this.stateUpdate_.size(); i1++)
          j += CodedOutputStream.computeMessageSize(6, (MessageLite)this.stateUpdate_.get(i1));
        if ((0x4 & this.bitField0_) == 4)
          j += CodedOutputStream.computeBoolSize(7, this.isIphoneDeprecated_);
        if ((0x8 & this.bitField0_) == 8)
          j += CodedOutputStream.computeBoolSize(8, this.isAndroidDeprecated_);
        if ((0x10 & this.bitField0_) == 16)
          j += CodedOutputStream.computeBytesSize(9, getIphoneNewUrlBytes());
        if ((0x20 & this.bitField0_) == 32)
          j += CodedOutputStream.computeBytesSize(10, getAndroidNewUrlBytes());
        this.memoizedSerializedSize = j;
      }
    }

    public final Client.BunchServerStateUpdate getStateUpdate(int paramInt)
    {
      return (Client.BunchServerStateUpdate)this.stateUpdate_.get(paramInt);
    }

    public final int getStateUpdateCount()
    {
      return this.stateUpdate_.size();
    }

    public final List<Client.BunchServerStateUpdate> getStateUpdateList()
    {
      return this.stateUpdate_;
    }

    public final Client.BunchServerStateUpdateOrBuilder getStateUpdateOrBuilder(int paramInt)
    {
      return (Client.BunchServerStateUpdateOrBuilder)this.stateUpdate_.get(paramInt);
    }

    public final List<? extends Client.BunchServerStateUpdateOrBuilder> getStateUpdateOrBuilderList()
    {
      return this.stateUpdate_;
    }

    public final boolean hasAndroidNewUrl()
    {
      if ((0x20 & this.bitField0_) == 32);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasClientVersion()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean hasClientVersionMessage()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasIphoneNewUrl()
    {
      if ((0x10 & this.bitField0_) == 16);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasIsAndroidDeprecated()
    {
      if ((0x8 & this.bitField0_) == 8);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasIsIphoneDeprecated()
    {
      if ((0x4 & this.bitField0_) == 4);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      for (int i = 0; i < this.command_.size(); i++)
        paramCodedOutputStream.writeMessage(1, (MessageLite)this.command_.get(i));
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeBytes(2, getClientVersionBytes());
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeMessage(3, this.clientVersionMessage_);
      for (int j = 0; j < this.request_.size(); j++)
        paramCodedOutputStream.writeMessage(4, (MessageLite)this.request_.get(j));
      for (int k = 0; k < this.response_.size(); k++)
        paramCodedOutputStream.writeMessage(5, (MessageLite)this.response_.get(k));
      for (int m = 0; m < this.stateUpdate_.size(); m++)
        paramCodedOutputStream.writeMessage(6, (MessageLite)this.stateUpdate_.get(m));
      if ((0x4 & this.bitField0_) == 4)
        paramCodedOutputStream.writeBool(7, this.isIphoneDeprecated_);
      if ((0x8 & this.bitField0_) == 8)
        paramCodedOutputStream.writeBool(8, this.isAndroidDeprecated_);
      if ((0x10 & this.bitField0_) == 16)
        paramCodedOutputStream.writeBytes(9, getIphoneNewUrlBytes());
      if ((0x20 & this.bitField0_) == 32)
        paramCodedOutputStream.writeBytes(10, getAndroidNewUrlBytes());
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Client.BatchCommand, Builder>
      implements Client.BatchCommandOrBuilder
    {
      private Object androidNewUrl_ = "";
      private int bitField0_;
      private Version.ClientVersion clientVersionMessage_ = Version.ClientVersion.getDefaultInstance();
      private Object clientVersion_ = "";
      private List<Client.BunchCommand> command_ = Collections.emptyList();
      private Object iphoneNewUrl_ = "";
      private boolean isAndroidDeprecated_;
      private boolean isIphoneDeprecated_;
      private List<Client.BunchClientRequest> request_ = Collections.emptyList();
      private List<Client.BunchServerResponse> response_ = Collections.emptyList();
      private List<Client.BunchServerStateUpdate> stateUpdate_ = Collections.emptyList();

      private Client.BatchCommand buildPartial()
      {
        Client.BatchCommand localBatchCommand = new Client.BatchCommand(this, (byte)0);
        int i = this.bitField0_;
        if ((0x1 & this.bitField0_) == 1)
        {
          this.command_ = Collections.unmodifiableList(this.command_);
          this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        }
        Client.BatchCommand.access$80602(localBatchCommand, this.command_);
        if ((0x2 & this.bitField0_) == 2)
        {
          this.request_ = Collections.unmodifiableList(this.request_);
          this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        }
        Client.BatchCommand.access$80702(localBatchCommand, this.request_);
        if ((0x4 & this.bitField0_) == 4)
        {
          this.response_ = Collections.unmodifiableList(this.response_);
          this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        }
        Client.BatchCommand.access$80802(localBatchCommand, this.response_);
        if ((0x8 & this.bitField0_) == 8)
        {
          this.stateUpdate_ = Collections.unmodifiableList(this.stateUpdate_);
          this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        }
        Client.BatchCommand.access$80902(localBatchCommand, this.stateUpdate_);
        int j = i & 0x10;
        int k = 0;
        if (j == 16)
          k = 1;
        Client.BatchCommand.access$81002(localBatchCommand, this.clientVersion_);
        if ((i & 0x20) == 32)
          k |= 2;
        Client.BatchCommand.access$81102(localBatchCommand, this.clientVersionMessage_);
        if ((i & 0x40) == 64)
          k |= 4;
        Client.BatchCommand.access$81202(localBatchCommand, this.isIphoneDeprecated_);
        if ((i & 0x80) == 128)
          k |= 8;
        Client.BatchCommand.access$81302(localBatchCommand, this.isAndroidDeprecated_);
        if ((i & 0x100) == 256)
          k |= 16;
        Client.BatchCommand.access$81402(localBatchCommand, this.iphoneNewUrl_);
        if ((i & 0x200) == 512)
          k |= 32;
        Client.BatchCommand.access$81502(localBatchCommand, this.androidNewUrl_);
        Client.BatchCommand.access$81602(localBatchCommand, k);
        return localBatchCommand;
      }

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private void ensureCommandIsMutable()
      {
        if ((0x1 & this.bitField0_) != 1)
        {
          this.command_ = new ArrayList(this.command_);
          this.bitField0_ = (0x1 | this.bitField0_);
        }
      }

      private void ensureRequestIsMutable()
      {
        if ((0x2 & this.bitField0_) != 2)
        {
          this.request_ = new ArrayList(this.request_);
          this.bitField0_ = (0x2 | this.bitField0_);
        }
      }

      private void ensureResponseIsMutable()
      {
        if ((0x4 & this.bitField0_) != 4)
        {
          this.response_ = new ArrayList(this.response_);
          this.bitField0_ = (0x4 | this.bitField0_);
        }
      }

      private void ensureStateUpdateIsMutable()
      {
        if ((0x8 & this.bitField0_) != 8)
        {
          this.stateUpdate_ = new ArrayList(this.stateUpdate_);
          this.bitField0_ = (0x8 | this.bitField0_);
        }
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 10:
            Client.BunchCommand.Builder localBuilder4 = Client.BunchCommand.newBuilder();
            paramCodedInputStream.readMessage(localBuilder4, paramExtensionRegistryLite);
            addCommand(localBuilder4.buildPartial());
            break;
          case 18:
            this.bitField0_ = (0x10 | this.bitField0_);
            this.clientVersion_ = paramCodedInputStream.readBytes();
            break;
          case 26:
            Version.ClientVersion.Builder localBuilder3 = Version.ClientVersion.newBuilder();
            if (hasClientVersionMessage())
              localBuilder3.mergeFrom(getClientVersionMessage());
            paramCodedInputStream.readMessage(localBuilder3, paramExtensionRegistryLite);
            setClientVersionMessage(localBuilder3.buildPartial());
            break;
          case 34:
            Client.BunchClientRequest.Builder localBuilder2 = Client.BunchClientRequest.newBuilder();
            paramCodedInputStream.readMessage(localBuilder2, paramExtensionRegistryLite);
            addRequest(localBuilder2.buildPartial());
            break;
          case 42:
            Client.BunchServerResponse.Builder localBuilder1 = Client.BunchServerResponse.newBuilder();
            paramCodedInputStream.readMessage(localBuilder1, paramExtensionRegistryLite);
            addResponse(localBuilder1.buildPartial());
            break;
          case 50:
            Client.BunchServerStateUpdate.Builder localBuilder = Client.BunchServerStateUpdate.newBuilder();
            paramCodedInputStream.readMessage(localBuilder, paramExtensionRegistryLite);
            addStateUpdate(localBuilder.buildPartial());
            break;
          case 56:
            this.bitField0_ = (0x40 | this.bitField0_);
            this.isIphoneDeprecated_ = paramCodedInputStream.readBool();
            break;
          case 64:
            this.bitField0_ = (0x80 | this.bitField0_);
            this.isAndroidDeprecated_ = paramCodedInputStream.readBool();
            break;
          case 74:
            this.bitField0_ = (0x100 | this.bitField0_);
            this.iphoneNewUrl_ = paramCodedInputStream.readBytes();
            break;
          case 82:
          }
          this.bitField0_ = (0x200 | this.bitField0_);
          this.androidNewUrl_ = paramCodedInputStream.readBytes();
        }
      }

      public final Builder addAllCommand(Iterable<? extends Client.BunchCommand> paramIterable)
      {
        ensureCommandIsMutable();
        GeneratedMessageLite.Builder.addAll(paramIterable, this.command_);
        return this;
      }

      public final Builder addAllRequest(Iterable<? extends Client.BunchClientRequest> paramIterable)
      {
        ensureRequestIsMutable();
        GeneratedMessageLite.Builder.addAll(paramIterable, this.request_);
        return this;
      }

      public final Builder addAllResponse(Iterable<? extends Client.BunchServerResponse> paramIterable)
      {
        ensureResponseIsMutable();
        GeneratedMessageLite.Builder.addAll(paramIterable, this.response_);
        return this;
      }

      public final Builder addAllStateUpdate(Iterable<? extends Client.BunchServerStateUpdate> paramIterable)
      {
        ensureStateUpdateIsMutable();
        GeneratedMessageLite.Builder.addAll(paramIterable, this.stateUpdate_);
        return this;
      }

      public final Builder addCommand(int paramInt, Client.BunchCommand.Builder paramBuilder)
      {
        ensureCommandIsMutable();
        this.command_.add(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder addCommand(int paramInt, Client.BunchCommand paramBunchCommand)
      {
        if (paramBunchCommand == null)
          throw new NullPointerException();
        ensureCommandIsMutable();
        this.command_.add(paramInt, paramBunchCommand);
        return this;
      }

      public final Builder addCommand(Client.BunchCommand.Builder paramBuilder)
      {
        ensureCommandIsMutable();
        this.command_.add(paramBuilder.build());
        return this;
      }

      public final Builder addCommand(Client.BunchCommand paramBunchCommand)
      {
        if (paramBunchCommand == null)
          throw new NullPointerException();
        ensureCommandIsMutable();
        this.command_.add(paramBunchCommand);
        return this;
      }

      public final Builder addRequest(int paramInt, Client.BunchClientRequest.Builder paramBuilder)
      {
        ensureRequestIsMutable();
        this.request_.add(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder addRequest(int paramInt, Client.BunchClientRequest paramBunchClientRequest)
      {
        if (paramBunchClientRequest == null)
          throw new NullPointerException();
        ensureRequestIsMutable();
        this.request_.add(paramInt, paramBunchClientRequest);
        return this;
      }

      public final Builder addRequest(Client.BunchClientRequest.Builder paramBuilder)
      {
        ensureRequestIsMutable();
        this.request_.add(paramBuilder.build());
        return this;
      }

      public final Builder addRequest(Client.BunchClientRequest paramBunchClientRequest)
      {
        if (paramBunchClientRequest == null)
          throw new NullPointerException();
        ensureRequestIsMutable();
        this.request_.add(paramBunchClientRequest);
        return this;
      }

      public final Builder addResponse(int paramInt, Client.BunchServerResponse.Builder paramBuilder)
      {
        ensureResponseIsMutable();
        this.response_.add(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder addResponse(int paramInt, Client.BunchServerResponse paramBunchServerResponse)
      {
        if (paramBunchServerResponse == null)
          throw new NullPointerException();
        ensureResponseIsMutable();
        this.response_.add(paramInt, paramBunchServerResponse);
        return this;
      }

      public final Builder addResponse(Client.BunchServerResponse.Builder paramBuilder)
      {
        ensureResponseIsMutable();
        this.response_.add(paramBuilder.build());
        return this;
      }

      public final Builder addResponse(Client.BunchServerResponse paramBunchServerResponse)
      {
        if (paramBunchServerResponse == null)
          throw new NullPointerException();
        ensureResponseIsMutable();
        this.response_.add(paramBunchServerResponse);
        return this;
      }

      public final Builder addStateUpdate(int paramInt, Client.BunchServerStateUpdate.Builder paramBuilder)
      {
        ensureStateUpdateIsMutable();
        this.stateUpdate_.add(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder addStateUpdate(int paramInt, Client.BunchServerStateUpdate paramBunchServerStateUpdate)
      {
        if (paramBunchServerStateUpdate == null)
          throw new NullPointerException();
        ensureStateUpdateIsMutable();
        this.stateUpdate_.add(paramInt, paramBunchServerStateUpdate);
        return this;
      }

      public final Builder addStateUpdate(Client.BunchServerStateUpdate.Builder paramBuilder)
      {
        ensureStateUpdateIsMutable();
        this.stateUpdate_.add(paramBuilder.build());
        return this;
      }

      public final Builder addStateUpdate(Client.BunchServerStateUpdate paramBunchServerStateUpdate)
      {
        if (paramBunchServerStateUpdate == null)
          throw new NullPointerException();
        ensureStateUpdateIsMutable();
        this.stateUpdate_.add(paramBunchServerStateUpdate);
        return this;
      }

      public final Client.BatchCommand build()
      {
        Client.BatchCommand localBatchCommand = buildPartial();
        if (!localBatchCommand.isInitialized())
          throw new UninitializedMessageException();
        return localBatchCommand;
      }

      public final Builder clear()
      {
        super.clear();
        this.command_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.request_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.response_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.stateUpdate_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        this.clientVersion_ = "";
        this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        this.clientVersionMessage_ = Version.ClientVersion.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFDF & this.bitField0_);
        this.isIphoneDeprecated_ = false;
        this.bitField0_ = (0xFFFFFFBF & this.bitField0_);
        this.isAndroidDeprecated_ = false;
        this.bitField0_ = (0xFFFFFF7F & this.bitField0_);
        this.iphoneNewUrl_ = "";
        this.bitField0_ = (0xFFFFFEFF & this.bitField0_);
        this.androidNewUrl_ = "";
        this.bitField0_ = (0xFFFFFDFF & this.bitField0_);
        return this;
      }

      public final Builder clearAndroidNewUrl()
      {
        this.bitField0_ = (0xFFFFFDFF & this.bitField0_);
        this.androidNewUrl_ = Client.BatchCommand.getDefaultInstance().getAndroidNewUrl();
        return this;
      }

      public final Builder clearClientVersion()
      {
        this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        this.clientVersion_ = Client.BatchCommand.getDefaultInstance().getClientVersion();
        return this;
      }

      public final Builder clearClientVersionMessage()
      {
        this.clientVersionMessage_ = Version.ClientVersion.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFDF & this.bitField0_);
        return this;
      }

      public final Builder clearCommand()
      {
        this.command_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        return this;
      }

      public final Builder clearIphoneNewUrl()
      {
        this.bitField0_ = (0xFFFFFEFF & this.bitField0_);
        this.iphoneNewUrl_ = Client.BatchCommand.getDefaultInstance().getIphoneNewUrl();
        return this;
      }

      public final Builder clearIsAndroidDeprecated()
      {
        this.bitField0_ = (0xFFFFFF7F & this.bitField0_);
        this.isAndroidDeprecated_ = false;
        return this;
      }

      public final Builder clearIsIphoneDeprecated()
      {
        this.bitField0_ = (0xFFFFFFBF & this.bitField0_);
        this.isIphoneDeprecated_ = false;
        return this;
      }

      public final Builder clearRequest()
      {
        this.request_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        return this;
      }

      public final Builder clearResponse()
      {
        this.response_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        return this;
      }

      public final Builder clearStateUpdate()
      {
        this.stateUpdate_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        return this;
      }

      public final String getAndroidNewUrl()
      {
        Object localObject = this.androidNewUrl_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.androidNewUrl_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final String getClientVersion()
      {
        Object localObject = this.clientVersion_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.clientVersion_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final Version.ClientVersion getClientVersionMessage()
      {
        return this.clientVersionMessage_;
      }

      public final Client.BunchCommand getCommand(int paramInt)
      {
        return (Client.BunchCommand)this.command_.get(paramInt);
      }

      public final int getCommandCount()
      {
        return this.command_.size();
      }

      public final List<Client.BunchCommand> getCommandList()
      {
        return Collections.unmodifiableList(this.command_);
      }

      public final Client.BatchCommand getDefaultInstanceForType()
      {
        return Client.BatchCommand.getDefaultInstance();
      }

      public final String getIphoneNewUrl()
      {
        Object localObject = this.iphoneNewUrl_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.iphoneNewUrl_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final boolean getIsAndroidDeprecated()
      {
        return this.isAndroidDeprecated_;
      }

      public final boolean getIsIphoneDeprecated()
      {
        return this.isIphoneDeprecated_;
      }

      public final Client.BunchClientRequest getRequest(int paramInt)
      {
        return (Client.BunchClientRequest)this.request_.get(paramInt);
      }

      public final int getRequestCount()
      {
        return this.request_.size();
      }

      public final List<Client.BunchClientRequest> getRequestList()
      {
        return Collections.unmodifiableList(this.request_);
      }

      public final Client.BunchServerResponse getResponse(int paramInt)
      {
        return (Client.BunchServerResponse)this.response_.get(paramInt);
      }

      public final int getResponseCount()
      {
        return this.response_.size();
      }

      public final List<Client.BunchServerResponse> getResponseList()
      {
        return Collections.unmodifiableList(this.response_);
      }

      public final Client.BunchServerStateUpdate getStateUpdate(int paramInt)
      {
        return (Client.BunchServerStateUpdate)this.stateUpdate_.get(paramInt);
      }

      public final int getStateUpdateCount()
      {
        return this.stateUpdate_.size();
      }

      public final List<Client.BunchServerStateUpdate> getStateUpdateList()
      {
        return Collections.unmodifiableList(this.stateUpdate_);
      }

      public final boolean hasAndroidNewUrl()
      {
        if ((0x200 & this.bitField0_) == 512);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasClientVersion()
      {
        if ((0x10 & this.bitField0_) == 16);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasClientVersionMessage()
      {
        if ((0x20 & this.bitField0_) == 32);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasIphoneNewUrl()
      {
        if ((0x100 & this.bitField0_) == 256);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasIsAndroidDeprecated()
      {
        if ((0x80 & this.bitField0_) == 128);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasIsIphoneDeprecated()
      {
        if ((0x40 & this.bitField0_) == 64);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Client.BatchCommand paramBatchCommand)
      {
        if (paramBatchCommand == Client.BatchCommand.getDefaultInstance())
          return this;
        label52: label95: Version.ClientVersion localClientVersion;
        if (!paramBatchCommand.command_.isEmpty())
        {
          if (this.command_.isEmpty())
          {
            this.command_ = paramBatchCommand.command_;
            this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
          }
        }
        else
        {
          if (!paramBatchCommand.request_.isEmpty())
          {
            if (!this.request_.isEmpty())
              break label350;
            this.request_ = paramBatchCommand.request_;
            this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
          }
          if (!paramBatchCommand.response_.isEmpty())
          {
            if (!this.response_.isEmpty())
              break label371;
            this.response_ = paramBatchCommand.response_;
            this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
          }
          label138: if (!paramBatchCommand.stateUpdate_.isEmpty())
          {
            if (!this.stateUpdate_.isEmpty())
              break label392;
            this.stateUpdate_ = paramBatchCommand.stateUpdate_;
            this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
          }
          label181: if (paramBatchCommand.hasClientVersion())
            setClientVersion(paramBatchCommand.getClientVersion());
          if (paramBatchCommand.hasClientVersionMessage())
          {
            localClientVersion = paramBatchCommand.getClientVersionMessage();
            if (((0x20 & this.bitField0_) != 32) || (this.clientVersionMessage_ == Version.ClientVersion.getDefaultInstance()))
              break label413;
          }
        }
        label392: label413: for (this.clientVersionMessage_ = Version.ClientVersion.newBuilder(this.clientVersionMessage_).mergeFrom(localClientVersion).buildPartial(); ; this.clientVersionMessage_ = localClientVersion)
        {
          this.bitField0_ = (0x20 | this.bitField0_);
          if (paramBatchCommand.hasIsIphoneDeprecated())
            setIsIphoneDeprecated(paramBatchCommand.getIsIphoneDeprecated());
          if (paramBatchCommand.hasIsAndroidDeprecated())
            setIsAndroidDeprecated(paramBatchCommand.getIsAndroidDeprecated());
          if (paramBatchCommand.hasIphoneNewUrl())
            setIphoneNewUrl(paramBatchCommand.getIphoneNewUrl());
          if (!paramBatchCommand.hasAndroidNewUrl())
            break;
          setAndroidNewUrl(paramBatchCommand.getAndroidNewUrl());
          break;
          ensureCommandIsMutable();
          this.command_.addAll(paramBatchCommand.command_);
          break label52;
          label350: ensureRequestIsMutable();
          this.request_.addAll(paramBatchCommand.request_);
          break label95;
          label371: ensureResponseIsMutable();
          this.response_.addAll(paramBatchCommand.response_);
          break label138;
          ensureStateUpdateIsMutable();
          this.stateUpdate_.addAll(paramBatchCommand.stateUpdate_);
          break label181;
        }
      }

      public final Builder setAndroidNewUrl(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x200 | this.bitField0_);
        this.androidNewUrl_ = paramString;
        return this;
      }

      public final Builder setClientVersion(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x10 | this.bitField0_);
        this.clientVersion_ = paramString;
        return this;
      }

      public final Builder setClientVersionMessage(Version.ClientVersion.Builder paramBuilder)
      {
        this.clientVersionMessage_ = paramBuilder.build();
        this.bitField0_ = (0x20 | this.bitField0_);
        return this;
      }

      public final Builder setClientVersionMessage(Version.ClientVersion paramClientVersion)
      {
        if (paramClientVersion == null)
          throw new NullPointerException();
        this.clientVersionMessage_ = paramClientVersion;
        this.bitField0_ = (0x20 | this.bitField0_);
        return this;
      }

      public final Builder setCommand(int paramInt, Client.BunchCommand.Builder paramBuilder)
      {
        ensureCommandIsMutable();
        this.command_.set(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder setCommand(int paramInt, Client.BunchCommand paramBunchCommand)
      {
        if (paramBunchCommand == null)
          throw new NullPointerException();
        ensureCommandIsMutable();
        this.command_.set(paramInt, paramBunchCommand);
        return this;
      }

      public final Builder setIphoneNewUrl(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x100 | this.bitField0_);
        this.iphoneNewUrl_ = paramString;
        return this;
      }

      public final Builder setIsAndroidDeprecated(boolean paramBoolean)
      {
        this.bitField0_ = (0x80 | this.bitField0_);
        this.isAndroidDeprecated_ = paramBoolean;
        return this;
      }

      public final Builder setIsIphoneDeprecated(boolean paramBoolean)
      {
        this.bitField0_ = (0x40 | this.bitField0_);
        this.isIphoneDeprecated_ = paramBoolean;
        return this;
      }

      public final Builder setRequest(int paramInt, Client.BunchClientRequest.Builder paramBuilder)
      {
        ensureRequestIsMutable();
        this.request_.set(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder setRequest(int paramInt, Client.BunchClientRequest paramBunchClientRequest)
      {
        if (paramBunchClientRequest == null)
          throw new NullPointerException();
        ensureRequestIsMutable();
        this.request_.set(paramInt, paramBunchClientRequest);
        return this;
      }

      public final Builder setResponse(int paramInt, Client.BunchServerResponse.Builder paramBuilder)
      {
        ensureResponseIsMutable();
        this.response_.set(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder setResponse(int paramInt, Client.BunchServerResponse paramBunchServerResponse)
      {
        if (paramBunchServerResponse == null)
          throw new NullPointerException();
        ensureResponseIsMutable();
        this.response_.set(paramInt, paramBunchServerResponse);
        return this;
      }

      public final Builder setStateUpdate(int paramInt, Client.BunchServerStateUpdate.Builder paramBuilder)
      {
        ensureStateUpdateIsMutable();
        this.stateUpdate_.set(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder setStateUpdate(int paramInt, Client.BunchServerStateUpdate paramBunchServerStateUpdate)
      {
        if (paramBunchServerStateUpdate == null)
          throw new NullPointerException();
        ensureStateUpdateIsMutable();
        this.stateUpdate_.set(paramInt, paramBunchServerStateUpdate);
        return this;
      }
    }
  }

  public static abstract interface BatchCommandOrBuilder extends MessageLiteOrBuilder
  {
    public abstract String getAndroidNewUrl();

    public abstract String getClientVersion();

    public abstract Version.ClientVersion getClientVersionMessage();

    public abstract Client.BunchCommand getCommand(int paramInt);

    public abstract int getCommandCount();

    public abstract List<Client.BunchCommand> getCommandList();

    public abstract String getIphoneNewUrl();

    public abstract boolean getIsAndroidDeprecated();

    public abstract boolean getIsIphoneDeprecated();

    public abstract Client.BunchClientRequest getRequest(int paramInt);

    public abstract int getRequestCount();

    public abstract List<Client.BunchClientRequest> getRequestList();

    public abstract Client.BunchServerResponse getResponse(int paramInt);

    public abstract int getResponseCount();

    public abstract List<Client.BunchServerResponse> getResponseList();

    public abstract Client.BunchServerStateUpdate getStateUpdate(int paramInt);

    public abstract int getStateUpdateCount();

    public abstract List<Client.BunchServerStateUpdate> getStateUpdateList();

    public abstract boolean hasAndroidNewUrl();

    public abstract boolean hasClientVersion();

    public abstract boolean hasClientVersionMessage();

    public abstract boolean hasIphoneNewUrl();

    public abstract boolean hasIsAndroidDeprecated();

    public abstract boolean hasIsIphoneDeprecated();
  }

  public static final class BunchClientRequest extends GeneratedMessageLite
    implements Client.BunchClientRequestOrBuilder
  {
    private static final BunchClientRequest defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private Client.ChatMessageRequest chatMessageRequest_;
    private Client.ConversationJoinRequest conversationJoinRequest_;
    private Client.ConversationListRequest conversationListRequest_;
    private Client.ConversationPreferenceRequest conversationPreferenceRequest_;
    private Client.ConversationRenameRequest conversationRenameRequest_;
    private Client.NewConversationRequest conversationRequest_;
    private Client.ConversationSearchRequest conversationSearchRequest_;
    private Client.DeviceRegistrationRequest deviceRegistrationRequest_;
    private Client.EventSearchRequest eventSearchRequest_;
    private Client.EventStreamRequest eventStreamRequest_;
    private Client.GlobalConversationPreferencesRequest globalConversationPreferencesRequest_;
    private Client.HangoutInviteFinishRequest hangoutInviteFinishRequest_;
    private Client.HangoutInviteKeepAliveRequest hangoutInviteKeepAliveRequest_;
    private Client.HangoutInviteReplyRequest hangoutInviteReplyRequest_;
    private Client.HangoutInviteRequest hangoutInviteRequest_;
    private Client.HangoutRingFinishRequest hangoutRingFinishRequest_;
    private Client.InviteRequest inviteRequest_;
    private Client.LeaveConversationRequest leaveConversationRequest_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private Client.PingRequest pingRequest_;
    private Client.PresenceRequest presenceRequest_;
    private Client.ReceiptRequest receiptRequest_;
    private Client.ReplyToInviteRequest replyToInviteRequest_;
    private Object requestClientId_;
    private Client.SetAclsRequest setAclsRequest_;
    private Client.SuggestionsRequest suggestionsRequest_;
    private Client.TileEventRequest tileEventRequest_;
    private Client.TypingRequest typingRequest_;
    private Client.UserCreationRequest userCreationRequest_;
    private Client.UserInfoRequest userInfoRequest_;

    static
    {
      BunchClientRequest localBunchClientRequest = new BunchClientRequest();
      defaultInstance = localBunchClientRequest;
      localBunchClientRequest.requestClientId_ = "";
      localBunchClientRequest.chatMessageRequest_ = Client.ChatMessageRequest.getDefaultInstance();
      localBunchClientRequest.presenceRequest_ = Client.PresenceRequest.getDefaultInstance();
      localBunchClientRequest.typingRequest_ = Client.TypingRequest.getDefaultInstance();
      localBunchClientRequest.receiptRequest_ = Client.ReceiptRequest.getDefaultInstance();
      localBunchClientRequest.conversationRequest_ = Client.NewConversationRequest.getDefaultInstance();
      localBunchClientRequest.eventStreamRequest_ = Client.EventStreamRequest.getDefaultInstance();
      localBunchClientRequest.deviceRegistrationRequest_ = Client.DeviceRegistrationRequest.getDefaultInstance();
      localBunchClientRequest.pingRequest_ = Client.PingRequest.getDefaultInstance();
      localBunchClientRequest.conversationListRequest_ = Client.ConversationListRequest.getDefaultInstance();
      localBunchClientRequest.userCreationRequest_ = Client.UserCreationRequest.getDefaultInstance();
      localBunchClientRequest.inviteRequest_ = Client.InviteRequest.getDefaultInstance();
      localBunchClientRequest.leaveConversationRequest_ = Client.LeaveConversationRequest.getDefaultInstance();
      localBunchClientRequest.conversationRenameRequest_ = Client.ConversationRenameRequest.getDefaultInstance();
      localBunchClientRequest.tileEventRequest_ = Client.TileEventRequest.getDefaultInstance();
      localBunchClientRequest.conversationPreferenceRequest_ = Client.ConversationPreferenceRequest.getDefaultInstance();
      localBunchClientRequest.replyToInviteRequest_ = Client.ReplyToInviteRequest.getDefaultInstance();
      localBunchClientRequest.setAclsRequest_ = Client.SetAclsRequest.getDefaultInstance();
      localBunchClientRequest.userInfoRequest_ = Client.UserInfoRequest.getDefaultInstance();
      localBunchClientRequest.conversationSearchRequest_ = Client.ConversationSearchRequest.getDefaultInstance();
      localBunchClientRequest.eventSearchRequest_ = Client.EventSearchRequest.getDefaultInstance();
      localBunchClientRequest.suggestionsRequest_ = Client.SuggestionsRequest.getDefaultInstance();
      localBunchClientRequest.globalConversationPreferencesRequest_ = Client.GlobalConversationPreferencesRequest.getDefaultInstance();
      localBunchClientRequest.conversationJoinRequest_ = Client.ConversationJoinRequest.getDefaultInstance();
      localBunchClientRequest.hangoutInviteRequest_ = Client.HangoutInviteRequest.getDefaultInstance();
      localBunchClientRequest.hangoutInviteKeepAliveRequest_ = Client.HangoutInviteKeepAliveRequest.getDefaultInstance();
      localBunchClientRequest.hangoutInviteReplyRequest_ = Client.HangoutInviteReplyRequest.getDefaultInstance();
      localBunchClientRequest.hangoutInviteFinishRequest_ = Client.HangoutInviteFinishRequest.getDefaultInstance();
      localBunchClientRequest.hangoutRingFinishRequest_ = Client.HangoutRingFinishRequest.getDefaultInstance();
    }

    private BunchClientRequest()
    {
    }

    private BunchClientRequest(Builder paramBuilder)
    {
      super();
    }

    public static BunchClientRequest getDefaultInstance()
    {
      return defaultInstance;
    }

    private ByteString getRequestClientIdBytes()
    {
      Object localObject = this.requestClientId_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.requestClientId_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static Builder newBuilder()
    {
      return Builder.access$71600();
    }

    public static Builder newBuilder(BunchClientRequest paramBunchClientRequest)
    {
      return Builder.access$71600().mergeFrom(paramBunchClientRequest);
    }

    public final Client.ChatMessageRequest getChatMessageRequest()
    {
      return this.chatMessageRequest_;
    }

    public final Client.ConversationJoinRequest getConversationJoinRequest()
    {
      return this.conversationJoinRequest_;
    }

    public final Client.ConversationListRequest getConversationListRequest()
    {
      return this.conversationListRequest_;
    }

    public final Client.ConversationPreferenceRequest getConversationPreferenceRequest()
    {
      return this.conversationPreferenceRequest_;
    }

    public final Client.ConversationRenameRequest getConversationRenameRequest()
    {
      return this.conversationRenameRequest_;
    }

    public final Client.NewConversationRequest getConversationRequest()
    {
      return this.conversationRequest_;
    }

    public final Client.ConversationSearchRequest getConversationSearchRequest()
    {
      return this.conversationSearchRequest_;
    }

    public final BunchClientRequest getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final Client.DeviceRegistrationRequest getDeviceRegistrationRequest()
    {
      return this.deviceRegistrationRequest_;
    }

    public final Client.EventSearchRequest getEventSearchRequest()
    {
      return this.eventSearchRequest_;
    }

    public final Client.EventStreamRequest getEventStreamRequest()
    {
      return this.eventStreamRequest_;
    }

    public final Client.GlobalConversationPreferencesRequest getGlobalConversationPreferencesRequest()
    {
      return this.globalConversationPreferencesRequest_;
    }

    public final Client.HangoutInviteFinishRequest getHangoutInviteFinishRequest()
    {
      return this.hangoutInviteFinishRequest_;
    }

    public final Client.HangoutInviteKeepAliveRequest getHangoutInviteKeepAliveRequest()
    {
      return this.hangoutInviteKeepAliveRequest_;
    }

    public final Client.HangoutInviteReplyRequest getHangoutInviteReplyRequest()
    {
      return this.hangoutInviteReplyRequest_;
    }

    public final Client.HangoutInviteRequest getHangoutInviteRequest()
    {
      return this.hangoutInviteRequest_;
    }

    public final Client.HangoutRingFinishRequest getHangoutRingFinishRequest()
    {
      return this.hangoutRingFinishRequest_;
    }

    public final Client.InviteRequest getInviteRequest()
    {
      return this.inviteRequest_;
    }

    public final Client.LeaveConversationRequest getLeaveConversationRequest()
    {
      return this.leaveConversationRequest_;
    }

    public final Client.PingRequest getPingRequest()
    {
      return this.pingRequest_;
    }

    public final Client.PresenceRequest getPresenceRequest()
    {
      return this.presenceRequest_;
    }

    public final Client.ReceiptRequest getReceiptRequest()
    {
      return this.receiptRequest_;
    }

    public final Client.ReplyToInviteRequest getReplyToInviteRequest()
    {
      return this.replyToInviteRequest_;
    }

    public final String getRequestClientId()
    {
      Object localObject1 = this.requestClientId_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.requestClientId_ = str;
      }
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeBytesSize(1, getRequestClientIdBytes());
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeMessageSize(2, this.chatMessageRequest_);
        if ((0x4 & this.bitField0_) == 4)
          k += CodedOutputStream.computeMessageSize(3, this.presenceRequest_);
        if ((0x8 & this.bitField0_) == 8)
          k += CodedOutputStream.computeMessageSize(4, this.typingRequest_);
        if ((0x10 & this.bitField0_) == 16)
          k += CodedOutputStream.computeMessageSize(5, this.receiptRequest_);
        if ((0x20 & this.bitField0_) == 32)
          k += CodedOutputStream.computeMessageSize(6, this.conversationRequest_);
        if ((0x40 & this.bitField0_) == 64)
          k += CodedOutputStream.computeMessageSize(7, this.eventStreamRequest_);
        if ((0x80 & this.bitField0_) == 128)
          k += CodedOutputStream.computeMessageSize(8, this.deviceRegistrationRequest_);
        if ((0x100 & this.bitField0_) == 256)
          k += CodedOutputStream.computeMessageSize(9, this.pingRequest_);
        if ((0x200 & this.bitField0_) == 512)
          k += CodedOutputStream.computeMessageSize(10, this.conversationListRequest_);
        if ((0x400 & this.bitField0_) == 1024)
          k += CodedOutputStream.computeMessageSize(11, this.userCreationRequest_);
        if ((0x800 & this.bitField0_) == 2048)
          k += CodedOutputStream.computeMessageSize(12, this.inviteRequest_);
        if ((0x1000 & this.bitField0_) == 4096)
          k += CodedOutputStream.computeMessageSize(13, this.leaveConversationRequest_);
        if ((0x2000 & this.bitField0_) == 8192)
          k += CodedOutputStream.computeMessageSize(14, this.conversationRenameRequest_);
        if ((0x4000 & this.bitField0_) == 16384)
          k += CodedOutputStream.computeMessageSize(15, this.tileEventRequest_);
        if ((0x8000 & this.bitField0_) == 32768)
          k += CodedOutputStream.computeMessageSize(16, this.conversationPreferenceRequest_);
        if ((0x10000 & this.bitField0_) == 65536)
          k += CodedOutputStream.computeMessageSize(17, this.replyToInviteRequest_);
        if ((0x20000 & this.bitField0_) == 131072)
          k += CodedOutputStream.computeMessageSize(18, this.setAclsRequest_);
        if ((0x40000 & this.bitField0_) == 262144)
          k += CodedOutputStream.computeMessageSize(19, this.userInfoRequest_);
        if ((0x80000 & this.bitField0_) == 524288)
          k += CodedOutputStream.computeMessageSize(20, this.conversationSearchRequest_);
        if ((0x100000 & this.bitField0_) == 1048576)
          k += CodedOutputStream.computeMessageSize(21, this.eventSearchRequest_);
        if ((0x200000 & this.bitField0_) == 2097152)
          k += CodedOutputStream.computeMessageSize(22, this.suggestionsRequest_);
        if ((0x400000 & this.bitField0_) == 4194304)
          k += CodedOutputStream.computeMessageSize(23, this.globalConversationPreferencesRequest_);
        if ((0x800000 & this.bitField0_) == 8388608)
          k += CodedOutputStream.computeMessageSize(24, this.conversationJoinRequest_);
        if ((0x1000000 & this.bitField0_) == 16777216)
          k += CodedOutputStream.computeMessageSize(25, this.hangoutInviteRequest_);
        if ((0x2000000 & this.bitField0_) == 33554432)
          k += CodedOutputStream.computeMessageSize(26, this.hangoutInviteKeepAliveRequest_);
        if ((0x4000000 & this.bitField0_) == 67108864)
          k += CodedOutputStream.computeMessageSize(27, this.hangoutInviteReplyRequest_);
        if ((0x8000000 & this.bitField0_) == 134217728)
          k += CodedOutputStream.computeMessageSize(28, this.hangoutInviteFinishRequest_);
        if ((0x10000000 & this.bitField0_) == 268435456)
          k += CodedOutputStream.computeMessageSize(29, this.hangoutRingFinishRequest_);
        this.memoizedSerializedSize = k;
      }
    }

    public final Client.SetAclsRequest getSetAclsRequest()
    {
      return this.setAclsRequest_;
    }

    public final Client.SuggestionsRequest getSuggestionsRequest()
    {
      return this.suggestionsRequest_;
    }

    public final Client.TileEventRequest getTileEventRequest()
    {
      return this.tileEventRequest_;
    }

    public final Client.TypingRequest getTypingRequest()
    {
      return this.typingRequest_;
    }

    public final Client.UserCreationRequest getUserCreationRequest()
    {
      return this.userCreationRequest_;
    }

    public final Client.UserInfoRequest getUserInfoRequest()
    {
      return this.userInfoRequest_;
    }

    public final boolean hasChatMessageRequest()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasConversationJoinRequest()
    {
      if ((0x800000 & this.bitField0_) == 8388608);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasConversationListRequest()
    {
      if ((0x200 & this.bitField0_) == 512);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasConversationPreferenceRequest()
    {
      if ((0x8000 & this.bitField0_) == 32768);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasConversationRenameRequest()
    {
      if ((0x2000 & this.bitField0_) == 8192);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasConversationRequest()
    {
      if ((0x20 & this.bitField0_) == 32);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasConversationSearchRequest()
    {
      if ((0x80000 & this.bitField0_) == 524288);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasDeviceRegistrationRequest()
    {
      if ((0x80 & this.bitField0_) == 128);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasEventSearchRequest()
    {
      if ((0x100000 & this.bitField0_) == 1048576);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasEventStreamRequest()
    {
      if ((0x40 & this.bitField0_) == 64);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasGlobalConversationPreferencesRequest()
    {
      if ((0x400000 & this.bitField0_) == 4194304);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasHangoutInviteFinishRequest()
    {
      if ((0x8000000 & this.bitField0_) == 134217728);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasHangoutInviteKeepAliveRequest()
    {
      if ((0x2000000 & this.bitField0_) == 33554432);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasHangoutInviteReplyRequest()
    {
      if ((0x4000000 & this.bitField0_) == 67108864);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasHangoutInviteRequest()
    {
      if ((0x1000000 & this.bitField0_) == 16777216);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasHangoutRingFinishRequest()
    {
      if ((0x10000000 & this.bitField0_) == 268435456);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasInviteRequest()
    {
      if ((0x800 & this.bitField0_) == 2048);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasLeaveConversationRequest()
    {
      if ((0x1000 & this.bitField0_) == 4096);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasPingRequest()
    {
      if ((0x100 & this.bitField0_) == 256);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasPresenceRequest()
    {
      if ((0x4 & this.bitField0_) == 4);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasReceiptRequest()
    {
      if ((0x10 & this.bitField0_) == 16);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasReplyToInviteRequest()
    {
      if ((0x10000 & this.bitField0_) == 65536);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasRequestClientId()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean hasSetAclsRequest()
    {
      if ((0x20000 & this.bitField0_) == 131072);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasSuggestionsRequest()
    {
      if ((0x200000 & this.bitField0_) == 2097152);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasTileEventRequest()
    {
      if ((0x4000 & this.bitField0_) == 16384);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasTypingRequest()
    {
      if ((0x8 & this.bitField0_) == 8);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasUserCreationRequest()
    {
      if ((0x400 & this.bitField0_) == 1024);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasUserInfoRequest()
    {
      if ((0x40000 & this.bitField0_) == 262144);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeBytes(1, getRequestClientIdBytes());
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeMessage(2, this.chatMessageRequest_);
      if ((0x4 & this.bitField0_) == 4)
        paramCodedOutputStream.writeMessage(3, this.presenceRequest_);
      if ((0x8 & this.bitField0_) == 8)
        paramCodedOutputStream.writeMessage(4, this.typingRequest_);
      if ((0x10 & this.bitField0_) == 16)
        paramCodedOutputStream.writeMessage(5, this.receiptRequest_);
      if ((0x20 & this.bitField0_) == 32)
        paramCodedOutputStream.writeMessage(6, this.conversationRequest_);
      if ((0x40 & this.bitField0_) == 64)
        paramCodedOutputStream.writeMessage(7, this.eventStreamRequest_);
      if ((0x80 & this.bitField0_) == 128)
        paramCodedOutputStream.writeMessage(8, this.deviceRegistrationRequest_);
      if ((0x100 & this.bitField0_) == 256)
        paramCodedOutputStream.writeMessage(9, this.pingRequest_);
      if ((0x200 & this.bitField0_) == 512)
        paramCodedOutputStream.writeMessage(10, this.conversationListRequest_);
      if ((0x400 & this.bitField0_) == 1024)
        paramCodedOutputStream.writeMessage(11, this.userCreationRequest_);
      if ((0x800 & this.bitField0_) == 2048)
        paramCodedOutputStream.writeMessage(12, this.inviteRequest_);
      if ((0x1000 & this.bitField0_) == 4096)
        paramCodedOutputStream.writeMessage(13, this.leaveConversationRequest_);
      if ((0x2000 & this.bitField0_) == 8192)
        paramCodedOutputStream.writeMessage(14, this.conversationRenameRequest_);
      if ((0x4000 & this.bitField0_) == 16384)
        paramCodedOutputStream.writeMessage(15, this.tileEventRequest_);
      if ((0x8000 & this.bitField0_) == 32768)
        paramCodedOutputStream.writeMessage(16, this.conversationPreferenceRequest_);
      if ((0x10000 & this.bitField0_) == 65536)
        paramCodedOutputStream.writeMessage(17, this.replyToInviteRequest_);
      if ((0x20000 & this.bitField0_) == 131072)
        paramCodedOutputStream.writeMessage(18, this.setAclsRequest_);
      if ((0x40000 & this.bitField0_) == 262144)
        paramCodedOutputStream.writeMessage(19, this.userInfoRequest_);
      if ((0x80000 & this.bitField0_) == 524288)
        paramCodedOutputStream.writeMessage(20, this.conversationSearchRequest_);
      if ((0x100000 & this.bitField0_) == 1048576)
        paramCodedOutputStream.writeMessage(21, this.eventSearchRequest_);
      if ((0x200000 & this.bitField0_) == 2097152)
        paramCodedOutputStream.writeMessage(22, this.suggestionsRequest_);
      if ((0x400000 & this.bitField0_) == 4194304)
        paramCodedOutputStream.writeMessage(23, this.globalConversationPreferencesRequest_);
      if ((0x800000 & this.bitField0_) == 8388608)
        paramCodedOutputStream.writeMessage(24, this.conversationJoinRequest_);
      if ((0x1000000 & this.bitField0_) == 16777216)
        paramCodedOutputStream.writeMessage(25, this.hangoutInviteRequest_);
      if ((0x2000000 & this.bitField0_) == 33554432)
        paramCodedOutputStream.writeMessage(26, this.hangoutInviteKeepAliveRequest_);
      if ((0x4000000 & this.bitField0_) == 67108864)
        paramCodedOutputStream.writeMessage(27, this.hangoutInviteReplyRequest_);
      if ((0x8000000 & this.bitField0_) == 134217728)
        paramCodedOutputStream.writeMessage(28, this.hangoutInviteFinishRequest_);
      if ((0x10000000 & this.bitField0_) == 268435456)
        paramCodedOutputStream.writeMessage(29, this.hangoutRingFinishRequest_);
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Client.BunchClientRequest, Builder>
      implements Client.BunchClientRequestOrBuilder
    {
      private int bitField0_;
      private Client.ChatMessageRequest chatMessageRequest_ = Client.ChatMessageRequest.getDefaultInstance();
      private Client.ConversationJoinRequest conversationJoinRequest_ = Client.ConversationJoinRequest.getDefaultInstance();
      private Client.ConversationListRequest conversationListRequest_ = Client.ConversationListRequest.getDefaultInstance();
      private Client.ConversationPreferenceRequest conversationPreferenceRequest_ = Client.ConversationPreferenceRequest.getDefaultInstance();
      private Client.ConversationRenameRequest conversationRenameRequest_ = Client.ConversationRenameRequest.getDefaultInstance();
      private Client.NewConversationRequest conversationRequest_ = Client.NewConversationRequest.getDefaultInstance();
      private Client.ConversationSearchRequest conversationSearchRequest_ = Client.ConversationSearchRequest.getDefaultInstance();
      private Client.DeviceRegistrationRequest deviceRegistrationRequest_ = Client.DeviceRegistrationRequest.getDefaultInstance();
      private Client.EventSearchRequest eventSearchRequest_ = Client.EventSearchRequest.getDefaultInstance();
      private Client.EventStreamRequest eventStreamRequest_ = Client.EventStreamRequest.getDefaultInstance();
      private Client.GlobalConversationPreferencesRequest globalConversationPreferencesRequest_ = Client.GlobalConversationPreferencesRequest.getDefaultInstance();
      private Client.HangoutInviteFinishRequest hangoutInviteFinishRequest_ = Client.HangoutInviteFinishRequest.getDefaultInstance();
      private Client.HangoutInviteKeepAliveRequest hangoutInviteKeepAliveRequest_ = Client.HangoutInviteKeepAliveRequest.getDefaultInstance();
      private Client.HangoutInviteReplyRequest hangoutInviteReplyRequest_ = Client.HangoutInviteReplyRequest.getDefaultInstance();
      private Client.HangoutInviteRequest hangoutInviteRequest_ = Client.HangoutInviteRequest.getDefaultInstance();
      private Client.HangoutRingFinishRequest hangoutRingFinishRequest_ = Client.HangoutRingFinishRequest.getDefaultInstance();
      private Client.InviteRequest inviteRequest_ = Client.InviteRequest.getDefaultInstance();
      private Client.LeaveConversationRequest leaveConversationRequest_ = Client.LeaveConversationRequest.getDefaultInstance();
      private Client.PingRequest pingRequest_ = Client.PingRequest.getDefaultInstance();
      private Client.PresenceRequest presenceRequest_ = Client.PresenceRequest.getDefaultInstance();
      private Client.ReceiptRequest receiptRequest_ = Client.ReceiptRequest.getDefaultInstance();
      private Client.ReplyToInviteRequest replyToInviteRequest_ = Client.ReplyToInviteRequest.getDefaultInstance();
      private Object requestClientId_ = "";
      private Client.SetAclsRequest setAclsRequest_ = Client.SetAclsRequest.getDefaultInstance();
      private Client.SuggestionsRequest suggestionsRequest_ = Client.SuggestionsRequest.getDefaultInstance();
      private Client.TileEventRequest tileEventRequest_ = Client.TileEventRequest.getDefaultInstance();
      private Client.TypingRequest typingRequest_ = Client.TypingRequest.getDefaultInstance();
      private Client.UserCreationRequest userCreationRequest_ = Client.UserCreationRequest.getDefaultInstance();
      private Client.UserInfoRequest userInfoRequest_ = Client.UserInfoRequest.getDefaultInstance();

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 10:
            this.bitField0_ = (0x1 | this.bitField0_);
            this.requestClientId_ = paramCodedInputStream.readBytes();
            break;
          case 18:
            Client.ChatMessageRequest.Builder localBuilder27 = Client.ChatMessageRequest.newBuilder();
            if (hasChatMessageRequest())
              localBuilder27.mergeFrom(getChatMessageRequest());
            paramCodedInputStream.readMessage(localBuilder27, paramExtensionRegistryLite);
            setChatMessageRequest(localBuilder27.buildPartial());
            break;
          case 26:
            Client.PresenceRequest.Builder localBuilder26 = Client.PresenceRequest.newBuilder();
            if (hasPresenceRequest())
              localBuilder26.mergeFrom(getPresenceRequest());
            paramCodedInputStream.readMessage(localBuilder26, paramExtensionRegistryLite);
            setPresenceRequest(localBuilder26.buildPartial());
            break;
          case 34:
            Client.TypingRequest.Builder localBuilder25 = Client.TypingRequest.newBuilder();
            if (hasTypingRequest())
              localBuilder25.mergeFrom(getTypingRequest());
            paramCodedInputStream.readMessage(localBuilder25, paramExtensionRegistryLite);
            setTypingRequest(localBuilder25.buildPartial());
            break;
          case 42:
            Client.ReceiptRequest.Builder localBuilder24 = Client.ReceiptRequest.newBuilder();
            if (hasReceiptRequest())
              localBuilder24.mergeFrom(getReceiptRequest());
            paramCodedInputStream.readMessage(localBuilder24, paramExtensionRegistryLite);
            setReceiptRequest(localBuilder24.buildPartial());
            break;
          case 50:
            Client.NewConversationRequest.Builder localBuilder23 = Client.NewConversationRequest.newBuilder();
            if (hasConversationRequest())
              localBuilder23.mergeFrom(getConversationRequest());
            paramCodedInputStream.readMessage(localBuilder23, paramExtensionRegistryLite);
            setConversationRequest(localBuilder23.buildPartial());
            break;
          case 58:
            Client.EventStreamRequest.Builder localBuilder22 = Client.EventStreamRequest.newBuilder();
            if (hasEventStreamRequest())
              localBuilder22.mergeFrom(getEventStreamRequest());
            paramCodedInputStream.readMessage(localBuilder22, paramExtensionRegistryLite);
            setEventStreamRequest(localBuilder22.buildPartial());
            break;
          case 66:
            Client.DeviceRegistrationRequest.Builder localBuilder21 = Client.DeviceRegistrationRequest.newBuilder();
            if (hasDeviceRegistrationRequest())
              localBuilder21.mergeFrom(getDeviceRegistrationRequest());
            paramCodedInputStream.readMessage(localBuilder21, paramExtensionRegistryLite);
            setDeviceRegistrationRequest(localBuilder21.buildPartial());
            break;
          case 74:
            Client.PingRequest.Builder localBuilder20 = Client.PingRequest.newBuilder();
            if (hasPingRequest())
              localBuilder20.mergeFrom(getPingRequest());
            paramCodedInputStream.readMessage(localBuilder20, paramExtensionRegistryLite);
            setPingRequest(localBuilder20.buildPartial());
            break;
          case 82:
            Client.ConversationListRequest.Builder localBuilder19 = Client.ConversationListRequest.newBuilder();
            if (hasConversationListRequest())
              localBuilder19.mergeFrom(getConversationListRequest());
            paramCodedInputStream.readMessage(localBuilder19, paramExtensionRegistryLite);
            setConversationListRequest(localBuilder19.buildPartial());
            break;
          case 90:
            Client.UserCreationRequest.Builder localBuilder18 = Client.UserCreationRequest.newBuilder();
            if (hasUserCreationRequest())
              localBuilder18.mergeFrom(getUserCreationRequest());
            paramCodedInputStream.readMessage(localBuilder18, paramExtensionRegistryLite);
            setUserCreationRequest(localBuilder18.buildPartial());
            break;
          case 98:
            Client.InviteRequest.Builder localBuilder17 = Client.InviteRequest.newBuilder();
            if (hasInviteRequest())
              localBuilder17.mergeFrom(getInviteRequest());
            paramCodedInputStream.readMessage(localBuilder17, paramExtensionRegistryLite);
            setInviteRequest(localBuilder17.buildPartial());
            break;
          case 106:
            Client.LeaveConversationRequest.Builder localBuilder16 = Client.LeaveConversationRequest.newBuilder();
            if (hasLeaveConversationRequest())
              localBuilder16.mergeFrom(getLeaveConversationRequest());
            paramCodedInputStream.readMessage(localBuilder16, paramExtensionRegistryLite);
            setLeaveConversationRequest(localBuilder16.buildPartial());
            break;
          case 114:
            Client.ConversationRenameRequest.Builder localBuilder15 = Client.ConversationRenameRequest.newBuilder();
            if (hasConversationRenameRequest())
              localBuilder15.mergeFrom(getConversationRenameRequest());
            paramCodedInputStream.readMessage(localBuilder15, paramExtensionRegistryLite);
            setConversationRenameRequest(localBuilder15.buildPartial());
            break;
          case 122:
            Client.TileEventRequest.Builder localBuilder14 = Client.TileEventRequest.newBuilder();
            if (hasTileEventRequest())
              localBuilder14.mergeFrom(getTileEventRequest());
            paramCodedInputStream.readMessage(localBuilder14, paramExtensionRegistryLite);
            setTileEventRequest(localBuilder14.buildPartial());
            break;
          case 130:
            Client.ConversationPreferenceRequest.Builder localBuilder13 = Client.ConversationPreferenceRequest.newBuilder();
            if (hasConversationPreferenceRequest())
              localBuilder13.mergeFrom(getConversationPreferenceRequest());
            paramCodedInputStream.readMessage(localBuilder13, paramExtensionRegistryLite);
            setConversationPreferenceRequest(localBuilder13.buildPartial());
            break;
          case 138:
            Client.ReplyToInviteRequest.Builder localBuilder12 = Client.ReplyToInviteRequest.newBuilder();
            if (hasReplyToInviteRequest())
              localBuilder12.mergeFrom(getReplyToInviteRequest());
            paramCodedInputStream.readMessage(localBuilder12, paramExtensionRegistryLite);
            setReplyToInviteRequest(localBuilder12.buildPartial());
            break;
          case 146:
            Client.SetAclsRequest.Builder localBuilder11 = Client.SetAclsRequest.newBuilder();
            if (hasSetAclsRequest())
              localBuilder11.mergeFrom(getSetAclsRequest());
            paramCodedInputStream.readMessage(localBuilder11, paramExtensionRegistryLite);
            setSetAclsRequest(localBuilder11.buildPartial());
            break;
          case 154:
            Client.UserInfoRequest.Builder localBuilder10 = Client.UserInfoRequest.newBuilder();
            if (hasUserInfoRequest())
              localBuilder10.mergeFrom(getUserInfoRequest());
            paramCodedInputStream.readMessage(localBuilder10, paramExtensionRegistryLite);
            setUserInfoRequest(localBuilder10.buildPartial());
            break;
          case 162:
            Client.ConversationSearchRequest.Builder localBuilder9 = Client.ConversationSearchRequest.newBuilder();
            if (hasConversationSearchRequest())
              localBuilder9.mergeFrom(getConversationSearchRequest());
            paramCodedInputStream.readMessage(localBuilder9, paramExtensionRegistryLite);
            setConversationSearchRequest(localBuilder9.buildPartial());
            break;
          case 170:
            Client.EventSearchRequest.Builder localBuilder8 = Client.EventSearchRequest.newBuilder();
            if (hasEventSearchRequest())
              localBuilder8.mergeFrom(getEventSearchRequest());
            paramCodedInputStream.readMessage(localBuilder8, paramExtensionRegistryLite);
            setEventSearchRequest(localBuilder8.buildPartial());
            break;
          case 178:
            Client.SuggestionsRequest.Builder localBuilder7 = Client.SuggestionsRequest.newBuilder();
            if (hasSuggestionsRequest())
              localBuilder7.mergeFrom(getSuggestionsRequest());
            paramCodedInputStream.readMessage(localBuilder7, paramExtensionRegistryLite);
            setSuggestionsRequest(localBuilder7.buildPartial());
            break;
          case 186:
            Client.GlobalConversationPreferencesRequest.Builder localBuilder6 = Client.GlobalConversationPreferencesRequest.newBuilder();
            if (hasGlobalConversationPreferencesRequest())
              localBuilder6.mergeFrom(getGlobalConversationPreferencesRequest());
            paramCodedInputStream.readMessage(localBuilder6, paramExtensionRegistryLite);
            setGlobalConversationPreferencesRequest(localBuilder6.buildPartial());
            break;
          case 194:
            Client.ConversationJoinRequest.Builder localBuilder5 = Client.ConversationJoinRequest.newBuilder();
            if (hasConversationJoinRequest())
              localBuilder5.mergeFrom(getConversationJoinRequest());
            paramCodedInputStream.readMessage(localBuilder5, paramExtensionRegistryLite);
            setConversationJoinRequest(localBuilder5.buildPartial());
            break;
          case 202:
            Client.HangoutInviteRequest.Builder localBuilder4 = Client.HangoutInviteRequest.newBuilder();
            if (hasHangoutInviteRequest())
              localBuilder4.mergeFrom(getHangoutInviteRequest());
            paramCodedInputStream.readMessage(localBuilder4, paramExtensionRegistryLite);
            setHangoutInviteRequest(localBuilder4.buildPartial());
            break;
          case 210:
            Client.HangoutInviteKeepAliveRequest.Builder localBuilder3 = Client.HangoutInviteKeepAliveRequest.newBuilder();
            if (hasHangoutInviteKeepAliveRequest())
              localBuilder3.mergeFrom(getHangoutInviteKeepAliveRequest());
            paramCodedInputStream.readMessage(localBuilder3, paramExtensionRegistryLite);
            setHangoutInviteKeepAliveRequest(localBuilder3.buildPartial());
            break;
          case 218:
            Client.HangoutInviteReplyRequest.Builder localBuilder2 = Client.HangoutInviteReplyRequest.newBuilder();
            if (hasHangoutInviteReplyRequest())
              localBuilder2.mergeFrom(getHangoutInviteReplyRequest());
            paramCodedInputStream.readMessage(localBuilder2, paramExtensionRegistryLite);
            setHangoutInviteReplyRequest(localBuilder2.buildPartial());
            break;
          case 226:
            Client.HangoutInviteFinishRequest.Builder localBuilder1 = Client.HangoutInviteFinishRequest.newBuilder();
            if (hasHangoutInviteFinishRequest())
              localBuilder1.mergeFrom(getHangoutInviteFinishRequest());
            paramCodedInputStream.readMessage(localBuilder1, paramExtensionRegistryLite);
            setHangoutInviteFinishRequest(localBuilder1.buildPartial());
            break;
          case 234:
          }
          Client.HangoutRingFinishRequest.Builder localBuilder = Client.HangoutRingFinishRequest.newBuilder();
          if (hasHangoutRingFinishRequest())
            localBuilder.mergeFrom(getHangoutRingFinishRequest());
          paramCodedInputStream.readMessage(localBuilder, paramExtensionRegistryLite);
          setHangoutRingFinishRequest(localBuilder.buildPartial());
        }
      }

      public final Client.BunchClientRequest build()
      {
        Client.BunchClientRequest localBunchClientRequest = buildPartial();
        if (!localBunchClientRequest.isInitialized())
          throw new UninitializedMessageException();
        return localBunchClientRequest;
      }

      public final Client.BunchClientRequest buildPartial()
      {
        Client.BunchClientRequest localBunchClientRequest = new Client.BunchClientRequest(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Client.BunchClientRequest.access$71802(localBunchClientRequest, this.requestClientId_);
        if ((i & 0x2) == 2)
          k |= 2;
        Client.BunchClientRequest.access$71902(localBunchClientRequest, this.chatMessageRequest_);
        if ((i & 0x4) == 4)
          k |= 4;
        Client.BunchClientRequest.access$72002(localBunchClientRequest, this.presenceRequest_);
        if ((i & 0x8) == 8)
          k |= 8;
        Client.BunchClientRequest.access$72102(localBunchClientRequest, this.typingRequest_);
        if ((i & 0x10) == 16)
          k |= 16;
        Client.BunchClientRequest.access$72202(localBunchClientRequest, this.receiptRequest_);
        if ((i & 0x20) == 32)
          k |= 32;
        Client.BunchClientRequest.access$72302(localBunchClientRequest, this.conversationRequest_);
        if ((i & 0x40) == 64)
          k |= 64;
        Client.BunchClientRequest.access$72402(localBunchClientRequest, this.eventStreamRequest_);
        if ((i & 0x80) == 128)
          k |= 128;
        Client.BunchClientRequest.access$72502(localBunchClientRequest, this.deviceRegistrationRequest_);
        if ((i & 0x100) == 256)
          k |= 256;
        Client.BunchClientRequest.access$72602(localBunchClientRequest, this.pingRequest_);
        if ((i & 0x200) == 512)
          k |= 512;
        Client.BunchClientRequest.access$72702(localBunchClientRequest, this.conversationListRequest_);
        if ((i & 0x400) == 1024)
          k |= 1024;
        Client.BunchClientRequest.access$72802(localBunchClientRequest, this.userCreationRequest_);
        if ((i & 0x800) == 2048)
          k |= 2048;
        Client.BunchClientRequest.access$72902(localBunchClientRequest, this.inviteRequest_);
        if ((i & 0x1000) == 4096)
          k |= 4096;
        Client.BunchClientRequest.access$73002(localBunchClientRequest, this.leaveConversationRequest_);
        if ((i & 0x2000) == 8192)
          k |= 8192;
        Client.BunchClientRequest.access$73102(localBunchClientRequest, this.conversationRenameRequest_);
        if ((i & 0x4000) == 16384)
          k |= 16384;
        Client.BunchClientRequest.access$73202(localBunchClientRequest, this.tileEventRequest_);
        if ((i & 0x8000) == 32768)
          k |= 32768;
        Client.BunchClientRequest.access$73302(localBunchClientRequest, this.conversationPreferenceRequest_);
        if ((i & 0x10000) == 65536)
          k |= 65536;
        Client.BunchClientRequest.access$73402(localBunchClientRequest, this.replyToInviteRequest_);
        if ((i & 0x20000) == 131072)
          k |= 131072;
        Client.BunchClientRequest.access$73502(localBunchClientRequest, this.setAclsRequest_);
        if ((i & 0x40000) == 262144)
          k |= 262144;
        Client.BunchClientRequest.access$73602(localBunchClientRequest, this.userInfoRequest_);
        if ((i & 0x80000) == 524288)
          k |= 524288;
        Client.BunchClientRequest.access$73702(localBunchClientRequest, this.conversationSearchRequest_);
        if ((0x100000 & i) == 1048576)
          k |= 1048576;
        Client.BunchClientRequest.access$73802(localBunchClientRequest, this.eventSearchRequest_);
        if ((0x200000 & i) == 2097152)
          k |= 2097152;
        Client.BunchClientRequest.access$73902(localBunchClientRequest, this.suggestionsRequest_);
        if ((0x400000 & i) == 4194304)
          k |= 4194304;
        Client.BunchClientRequest.access$74002(localBunchClientRequest, this.globalConversationPreferencesRequest_);
        if ((0x800000 & i) == 8388608)
          k |= 8388608;
        Client.BunchClientRequest.access$74102(localBunchClientRequest, this.conversationJoinRequest_);
        if ((0x1000000 & i) == 16777216)
          k |= 16777216;
        Client.BunchClientRequest.access$74202(localBunchClientRequest, this.hangoutInviteRequest_);
        if ((0x2000000 & i) == 33554432)
          k |= 33554432;
        Client.BunchClientRequest.access$74302(localBunchClientRequest, this.hangoutInviteKeepAliveRequest_);
        if ((0x4000000 & i) == 67108864)
          k |= 67108864;
        Client.BunchClientRequest.access$74402(localBunchClientRequest, this.hangoutInviteReplyRequest_);
        if ((0x8000000 & i) == 134217728)
          k |= 134217728;
        Client.BunchClientRequest.access$74502(localBunchClientRequest, this.hangoutInviteFinishRequest_);
        if ((0x10000000 & i) == 268435456)
          k |= 268435456;
        Client.BunchClientRequest.access$74602(localBunchClientRequest, this.hangoutRingFinishRequest_);
        Client.BunchClientRequest.access$74702(localBunchClientRequest, k);
        return localBunchClientRequest;
      }

      public final Builder clear()
      {
        super.clear();
        this.requestClientId_ = "";
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.chatMessageRequest_ = Client.ChatMessageRequest.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.presenceRequest_ = Client.PresenceRequest.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.typingRequest_ = Client.TypingRequest.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        this.receiptRequest_ = Client.ReceiptRequest.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        this.conversationRequest_ = Client.NewConversationRequest.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFDF & this.bitField0_);
        this.eventStreamRequest_ = Client.EventStreamRequest.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFBF & this.bitField0_);
        this.deviceRegistrationRequest_ = Client.DeviceRegistrationRequest.getDefaultInstance();
        this.bitField0_ = (0xFFFFFF7F & this.bitField0_);
        this.pingRequest_ = Client.PingRequest.getDefaultInstance();
        this.bitField0_ = (0xFFFFFEFF & this.bitField0_);
        this.conversationListRequest_ = Client.ConversationListRequest.getDefaultInstance();
        this.bitField0_ = (0xFFFFFDFF & this.bitField0_);
        this.userCreationRequest_ = Client.UserCreationRequest.getDefaultInstance();
        this.bitField0_ = (0xFFFFFBFF & this.bitField0_);
        this.inviteRequest_ = Client.InviteRequest.getDefaultInstance();
        this.bitField0_ = (0xFFFFF7FF & this.bitField0_);
        this.leaveConversationRequest_ = Client.LeaveConversationRequest.getDefaultInstance();
        this.bitField0_ = (0xFFFFEFFF & this.bitField0_);
        this.conversationRenameRequest_ = Client.ConversationRenameRequest.getDefaultInstance();
        this.bitField0_ = (0xFFFFDFFF & this.bitField0_);
        this.tileEventRequest_ = Client.TileEventRequest.getDefaultInstance();
        this.bitField0_ = (0xFFFFBFFF & this.bitField0_);
        this.conversationPreferenceRequest_ = Client.ConversationPreferenceRequest.getDefaultInstance();
        this.bitField0_ = (0xFFFF7FFF & this.bitField0_);
        this.replyToInviteRequest_ = Client.ReplyToInviteRequest.getDefaultInstance();
        this.bitField0_ = (0xFFFEFFFF & this.bitField0_);
        this.setAclsRequest_ = Client.SetAclsRequest.getDefaultInstance();
        this.bitField0_ = (0xFFFDFFFF & this.bitField0_);
        this.userInfoRequest_ = Client.UserInfoRequest.getDefaultInstance();
        this.bitField0_ = (0xFFFBFFFF & this.bitField0_);
        this.conversationSearchRequest_ = Client.ConversationSearchRequest.getDefaultInstance();
        this.bitField0_ = (0xFFF7FFFF & this.bitField0_);
        this.eventSearchRequest_ = Client.EventSearchRequest.getDefaultInstance();
        this.bitField0_ = (0xFFEFFFFF & this.bitField0_);
        this.suggestionsRequest_ = Client.SuggestionsRequest.getDefaultInstance();
        this.bitField0_ = (0xFFDFFFFF & this.bitField0_);
        this.globalConversationPreferencesRequest_ = Client.GlobalConversationPreferencesRequest.getDefaultInstance();
        this.bitField0_ = (0xFFBFFFFF & this.bitField0_);
        this.conversationJoinRequest_ = Client.ConversationJoinRequest.getDefaultInstance();
        this.bitField0_ = (0xFF7FFFFF & this.bitField0_);
        this.hangoutInviteRequest_ = Client.HangoutInviteRequest.getDefaultInstance();
        this.bitField0_ = (0xFEFFFFFF & this.bitField0_);
        this.hangoutInviteKeepAliveRequest_ = Client.HangoutInviteKeepAliveRequest.getDefaultInstance();
        this.bitField0_ = (0xFDFFFFFF & this.bitField0_);
        this.hangoutInviteReplyRequest_ = Client.HangoutInviteReplyRequest.getDefaultInstance();
        this.bitField0_ = (0xFBFFFFFF & this.bitField0_);
        this.hangoutInviteFinishRequest_ = Client.HangoutInviteFinishRequest.getDefaultInstance();
        this.bitField0_ = (0xF7FFFFFF & this.bitField0_);
        this.hangoutRingFinishRequest_ = Client.HangoutRingFinishRequest.getDefaultInstance();
        this.bitField0_ = (0xEFFFFFFF & this.bitField0_);
        return this;
      }

      public final Builder clearChatMessageRequest()
      {
        this.chatMessageRequest_ = Client.ChatMessageRequest.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        return this;
      }

      public final Builder clearConversationJoinRequest()
      {
        this.conversationJoinRequest_ = Client.ConversationJoinRequest.getDefaultInstance();
        this.bitField0_ = (0xFF7FFFFF & this.bitField0_);
        return this;
      }

      public final Builder clearConversationListRequest()
      {
        this.conversationListRequest_ = Client.ConversationListRequest.getDefaultInstance();
        this.bitField0_ = (0xFFFFFDFF & this.bitField0_);
        return this;
      }

      public final Builder clearConversationPreferenceRequest()
      {
        this.conversationPreferenceRequest_ = Client.ConversationPreferenceRequest.getDefaultInstance();
        this.bitField0_ = (0xFFFF7FFF & this.bitField0_);
        return this;
      }

      public final Builder clearConversationRenameRequest()
      {
        this.conversationRenameRequest_ = Client.ConversationRenameRequest.getDefaultInstance();
        this.bitField0_ = (0xFFFFDFFF & this.bitField0_);
        return this;
      }

      public final Builder clearConversationRequest()
      {
        this.conversationRequest_ = Client.NewConversationRequest.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFDF & this.bitField0_);
        return this;
      }

      public final Builder clearConversationSearchRequest()
      {
        this.conversationSearchRequest_ = Client.ConversationSearchRequest.getDefaultInstance();
        this.bitField0_ = (0xFFF7FFFF & this.bitField0_);
        return this;
      }

      public final Builder clearDeviceRegistrationRequest()
      {
        this.deviceRegistrationRequest_ = Client.DeviceRegistrationRequest.getDefaultInstance();
        this.bitField0_ = (0xFFFFFF7F & this.bitField0_);
        return this;
      }

      public final Builder clearEventSearchRequest()
      {
        this.eventSearchRequest_ = Client.EventSearchRequest.getDefaultInstance();
        this.bitField0_ = (0xFFEFFFFF & this.bitField0_);
        return this;
      }

      public final Builder clearEventStreamRequest()
      {
        this.eventStreamRequest_ = Client.EventStreamRequest.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFBF & this.bitField0_);
        return this;
      }

      public final Builder clearGlobalConversationPreferencesRequest()
      {
        this.globalConversationPreferencesRequest_ = Client.GlobalConversationPreferencesRequest.getDefaultInstance();
        this.bitField0_ = (0xFFBFFFFF & this.bitField0_);
        return this;
      }

      public final Builder clearHangoutInviteFinishRequest()
      {
        this.hangoutInviteFinishRequest_ = Client.HangoutInviteFinishRequest.getDefaultInstance();
        this.bitField0_ = (0xF7FFFFFF & this.bitField0_);
        return this;
      }

      public final Builder clearHangoutInviteKeepAliveRequest()
      {
        this.hangoutInviteKeepAliveRequest_ = Client.HangoutInviteKeepAliveRequest.getDefaultInstance();
        this.bitField0_ = (0xFDFFFFFF & this.bitField0_);
        return this;
      }

      public final Builder clearHangoutInviteReplyRequest()
      {
        this.hangoutInviteReplyRequest_ = Client.HangoutInviteReplyRequest.getDefaultInstance();
        this.bitField0_ = (0xFBFFFFFF & this.bitField0_);
        return this;
      }

      public final Builder clearHangoutInviteRequest()
      {
        this.hangoutInviteRequest_ = Client.HangoutInviteRequest.getDefaultInstance();
        this.bitField0_ = (0xFEFFFFFF & this.bitField0_);
        return this;
      }

      public final Builder clearHangoutRingFinishRequest()
      {
        this.hangoutRingFinishRequest_ = Client.HangoutRingFinishRequest.getDefaultInstance();
        this.bitField0_ = (0xEFFFFFFF & this.bitField0_);
        return this;
      }

      public final Builder clearInviteRequest()
      {
        this.inviteRequest_ = Client.InviteRequest.getDefaultInstance();
        this.bitField0_ = (0xFFFFF7FF & this.bitField0_);
        return this;
      }

      public final Builder clearLeaveConversationRequest()
      {
        this.leaveConversationRequest_ = Client.LeaveConversationRequest.getDefaultInstance();
        this.bitField0_ = (0xFFFFEFFF & this.bitField0_);
        return this;
      }

      public final Builder clearPingRequest()
      {
        this.pingRequest_ = Client.PingRequest.getDefaultInstance();
        this.bitField0_ = (0xFFFFFEFF & this.bitField0_);
        return this;
      }

      public final Builder clearPresenceRequest()
      {
        this.presenceRequest_ = Client.PresenceRequest.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        return this;
      }

      public final Builder clearReceiptRequest()
      {
        this.receiptRequest_ = Client.ReceiptRequest.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        return this;
      }

      public final Builder clearReplyToInviteRequest()
      {
        this.replyToInviteRequest_ = Client.ReplyToInviteRequest.getDefaultInstance();
        this.bitField0_ = (0xFFFEFFFF & this.bitField0_);
        return this;
      }

      public final Builder clearRequestClientId()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.requestClientId_ = Client.BunchClientRequest.getDefaultInstance().getRequestClientId();
        return this;
      }

      public final Builder clearSetAclsRequest()
      {
        this.setAclsRequest_ = Client.SetAclsRequest.getDefaultInstance();
        this.bitField0_ = (0xFFFDFFFF & this.bitField0_);
        return this;
      }

      public final Builder clearSuggestionsRequest()
      {
        this.suggestionsRequest_ = Client.SuggestionsRequest.getDefaultInstance();
        this.bitField0_ = (0xFFDFFFFF & this.bitField0_);
        return this;
      }

      public final Builder clearTileEventRequest()
      {
        this.tileEventRequest_ = Client.TileEventRequest.getDefaultInstance();
        this.bitField0_ = (0xFFFFBFFF & this.bitField0_);
        return this;
      }

      public final Builder clearTypingRequest()
      {
        this.typingRequest_ = Client.TypingRequest.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        return this;
      }

      public final Builder clearUserCreationRequest()
      {
        this.userCreationRequest_ = Client.UserCreationRequest.getDefaultInstance();
        this.bitField0_ = (0xFFFFFBFF & this.bitField0_);
        return this;
      }

      public final Builder clearUserInfoRequest()
      {
        this.userInfoRequest_ = Client.UserInfoRequest.getDefaultInstance();
        this.bitField0_ = (0xFFFBFFFF & this.bitField0_);
        return this;
      }

      public final Client.ChatMessageRequest getChatMessageRequest()
      {
        return this.chatMessageRequest_;
      }

      public final Client.ConversationJoinRequest getConversationJoinRequest()
      {
        return this.conversationJoinRequest_;
      }

      public final Client.ConversationListRequest getConversationListRequest()
      {
        return this.conversationListRequest_;
      }

      public final Client.ConversationPreferenceRequest getConversationPreferenceRequest()
      {
        return this.conversationPreferenceRequest_;
      }

      public final Client.ConversationRenameRequest getConversationRenameRequest()
      {
        return this.conversationRenameRequest_;
      }

      public final Client.NewConversationRequest getConversationRequest()
      {
        return this.conversationRequest_;
      }

      public final Client.ConversationSearchRequest getConversationSearchRequest()
      {
        return this.conversationSearchRequest_;
      }

      public final Client.BunchClientRequest getDefaultInstanceForType()
      {
        return Client.BunchClientRequest.getDefaultInstance();
      }

      public final Client.DeviceRegistrationRequest getDeviceRegistrationRequest()
      {
        return this.deviceRegistrationRequest_;
      }

      public final Client.EventSearchRequest getEventSearchRequest()
      {
        return this.eventSearchRequest_;
      }

      public final Client.EventStreamRequest getEventStreamRequest()
      {
        return this.eventStreamRequest_;
      }

      public final Client.GlobalConversationPreferencesRequest getGlobalConversationPreferencesRequest()
      {
        return this.globalConversationPreferencesRequest_;
      }

      public final Client.HangoutInviteFinishRequest getHangoutInviteFinishRequest()
      {
        return this.hangoutInviteFinishRequest_;
      }

      public final Client.HangoutInviteKeepAliveRequest getHangoutInviteKeepAliveRequest()
      {
        return this.hangoutInviteKeepAliveRequest_;
      }

      public final Client.HangoutInviteReplyRequest getHangoutInviteReplyRequest()
      {
        return this.hangoutInviteReplyRequest_;
      }

      public final Client.HangoutInviteRequest getHangoutInviteRequest()
      {
        return this.hangoutInviteRequest_;
      }

      public final Client.HangoutRingFinishRequest getHangoutRingFinishRequest()
      {
        return this.hangoutRingFinishRequest_;
      }

      public final Client.InviteRequest getInviteRequest()
      {
        return this.inviteRequest_;
      }

      public final Client.LeaveConversationRequest getLeaveConversationRequest()
      {
        return this.leaveConversationRequest_;
      }

      public final Client.PingRequest getPingRequest()
      {
        return this.pingRequest_;
      }

      public final Client.PresenceRequest getPresenceRequest()
      {
        return this.presenceRequest_;
      }

      public final Client.ReceiptRequest getReceiptRequest()
      {
        return this.receiptRequest_;
      }

      public final Client.ReplyToInviteRequest getReplyToInviteRequest()
      {
        return this.replyToInviteRequest_;
      }

      public final String getRequestClientId()
      {
        Object localObject = this.requestClientId_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.requestClientId_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final Client.SetAclsRequest getSetAclsRequest()
      {
        return this.setAclsRequest_;
      }

      public final Client.SuggestionsRequest getSuggestionsRequest()
      {
        return this.suggestionsRequest_;
      }

      public final Client.TileEventRequest getTileEventRequest()
      {
        return this.tileEventRequest_;
      }

      public final Client.TypingRequest getTypingRequest()
      {
        return this.typingRequest_;
      }

      public final Client.UserCreationRequest getUserCreationRequest()
      {
        return this.userCreationRequest_;
      }

      public final Client.UserInfoRequest getUserInfoRequest()
      {
        return this.userInfoRequest_;
      }

      public final boolean hasChatMessageRequest()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasConversationJoinRequest()
      {
        if ((0x800000 & this.bitField0_) == 8388608);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasConversationListRequest()
      {
        if ((0x200 & this.bitField0_) == 512);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasConversationPreferenceRequest()
      {
        if ((0x8000 & this.bitField0_) == 32768);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasConversationRenameRequest()
      {
        if ((0x2000 & this.bitField0_) == 8192);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasConversationRequest()
      {
        if ((0x20 & this.bitField0_) == 32);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasConversationSearchRequest()
      {
        if ((0x80000 & this.bitField0_) == 524288);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasDeviceRegistrationRequest()
      {
        if ((0x80 & this.bitField0_) == 128);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasEventSearchRequest()
      {
        if ((0x100000 & this.bitField0_) == 1048576);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasEventStreamRequest()
      {
        if ((0x40 & this.bitField0_) == 64);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasGlobalConversationPreferencesRequest()
      {
        if ((0x400000 & this.bitField0_) == 4194304);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasHangoutInviteFinishRequest()
      {
        if ((0x8000000 & this.bitField0_) == 134217728);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasHangoutInviteKeepAliveRequest()
      {
        if ((0x2000000 & this.bitField0_) == 33554432);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasHangoutInviteReplyRequest()
      {
        if ((0x4000000 & this.bitField0_) == 67108864);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasHangoutInviteRequest()
      {
        if ((0x1000000 & this.bitField0_) == 16777216);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasHangoutRingFinishRequest()
      {
        if ((0x10000000 & this.bitField0_) == 268435456);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasInviteRequest()
      {
        if ((0x800 & this.bitField0_) == 2048);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasLeaveConversationRequest()
      {
        if ((0x1000 & this.bitField0_) == 4096);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasPingRequest()
      {
        if ((0x100 & this.bitField0_) == 256);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasPresenceRequest()
      {
        if ((0x4 & this.bitField0_) == 4);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasReceiptRequest()
      {
        if ((0x10 & this.bitField0_) == 16);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasReplyToInviteRequest()
      {
        if ((0x10000 & this.bitField0_) == 65536);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasRequestClientId()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean hasSetAclsRequest()
      {
        if ((0x20000 & this.bitField0_) == 131072);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasSuggestionsRequest()
      {
        if ((0x200000 & this.bitField0_) == 2097152);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasTileEventRequest()
      {
        if ((0x4000 & this.bitField0_) == 16384);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasTypingRequest()
      {
        if ((0x8 & this.bitField0_) == 8);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasUserCreationRequest()
      {
        if ((0x400 & this.bitField0_) == 1024);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasUserInfoRequest()
      {
        if ((0x40000 & this.bitField0_) == 262144);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Client.BunchClientRequest paramBunchClientRequest)
      {
        if (paramBunchClientRequest == Client.BunchClientRequest.getDefaultInstance());
        Client.ChatMessageRequest localChatMessageRequest;
        label77: Client.PresenceRequest localPresenceRequest;
        label139: Client.TypingRequest localTypingRequest;
        label203: Client.ReceiptRequest localReceiptRequest;
        label268: Client.NewConversationRequest localNewConversationRequest;
        label333: Client.EventStreamRequest localEventStreamRequest;
        label398: Client.DeviceRegistrationRequest localDeviceRegistrationRequest;
        label465: Client.PingRequest localPingRequest;
        label533: Client.ConversationListRequest localConversationListRequest;
        label601: Client.UserCreationRequest localUserCreationRequest;
        label669: Client.InviteRequest localInviteRequest;
        label737: Client.LeaveConversationRequest localLeaveConversationRequest;
        label805: Client.ConversationRenameRequest localConversationRenameRequest;
        label873: Client.TileEventRequest localTileEventRequest;
        label941: Client.ConversationPreferenceRequest localConversationPreferenceRequest;
        label1009: Client.ReplyToInviteRequest localReplyToInviteRequest;
        label1077: Client.SetAclsRequest localSetAclsRequest;
        label1145: Client.UserInfoRequest localUserInfoRequest;
        label1213: Client.ConversationSearchRequest localConversationSearchRequest;
        label1281: Client.EventSearchRequest localEventSearchRequest;
        label1349: Client.SuggestionsRequest localSuggestionsRequest;
        label1417: Client.GlobalConversationPreferencesRequest localGlobalConversationPreferencesRequest;
        label1485: Client.ConversationJoinRequest localConversationJoinRequest;
        label1553: Client.HangoutInviteRequest localHangoutInviteRequest;
        label1621: Client.HangoutInviteKeepAliveRequest localHangoutInviteKeepAliveRequest;
        label1689: Client.HangoutInviteReplyRequest localHangoutInviteReplyRequest;
        label1757: Client.HangoutInviteFinishRequest localHangoutInviteFinishRequest;
        label1823: 
        do
        {
          return this;
          if (paramBunchClientRequest.hasRequestClientId())
            setRequestClientId(paramBunchClientRequest.getRequestClientId());
          if (paramBunchClientRequest.hasChatMessageRequest())
          {
            localChatMessageRequest = paramBunchClientRequest.getChatMessageRequest();
            if (((0x2 & this.bitField0_) != 2) || (this.chatMessageRequest_ == Client.ChatMessageRequest.getDefaultInstance()))
              break;
            this.chatMessageRequest_ = Client.ChatMessageRequest.newBuilder(this.chatMessageRequest_).mergeFrom(localChatMessageRequest).buildPartial();
            this.bitField0_ = (0x2 | this.bitField0_);
          }
          if (paramBunchClientRequest.hasPresenceRequest())
          {
            localPresenceRequest = paramBunchClientRequest.getPresenceRequest();
            if (((0x4 & this.bitField0_) != 4) || (this.presenceRequest_ == Client.PresenceRequest.getDefaultInstance()))
              break label1913;
            this.presenceRequest_ = Client.PresenceRequest.newBuilder(this.presenceRequest_).mergeFrom(localPresenceRequest).buildPartial();
            this.bitField0_ = (0x4 | this.bitField0_);
          }
          if (paramBunchClientRequest.hasTypingRequest())
          {
            localTypingRequest = paramBunchClientRequest.getTypingRequest();
            if (((0x8 & this.bitField0_) != 8) || (this.typingRequest_ == Client.TypingRequest.getDefaultInstance()))
              break label1922;
            this.typingRequest_ = Client.TypingRequest.newBuilder(this.typingRequest_).mergeFrom(localTypingRequest).buildPartial();
            this.bitField0_ = (0x8 | this.bitField0_);
          }
          if (paramBunchClientRequest.hasReceiptRequest())
          {
            localReceiptRequest = paramBunchClientRequest.getReceiptRequest();
            if (((0x10 & this.bitField0_) != 16) || (this.receiptRequest_ == Client.ReceiptRequest.getDefaultInstance()))
              break label1931;
            this.receiptRequest_ = Client.ReceiptRequest.newBuilder(this.receiptRequest_).mergeFrom(localReceiptRequest).buildPartial();
            this.bitField0_ = (0x10 | this.bitField0_);
          }
          if (paramBunchClientRequest.hasConversationRequest())
          {
            localNewConversationRequest = paramBunchClientRequest.getConversationRequest();
            if (((0x20 & this.bitField0_) != 32) || (this.conversationRequest_ == Client.NewConversationRequest.getDefaultInstance()))
              break label1940;
            this.conversationRequest_ = Client.NewConversationRequest.newBuilder(this.conversationRequest_).mergeFrom(localNewConversationRequest).buildPartial();
            this.bitField0_ = (0x20 | this.bitField0_);
          }
          if (paramBunchClientRequest.hasEventStreamRequest())
          {
            localEventStreamRequest = paramBunchClientRequest.getEventStreamRequest();
            if (((0x40 & this.bitField0_) != 64) || (this.eventStreamRequest_ == Client.EventStreamRequest.getDefaultInstance()))
              break label1949;
            this.eventStreamRequest_ = Client.EventStreamRequest.newBuilder(this.eventStreamRequest_).mergeFrom(localEventStreamRequest).buildPartial();
            this.bitField0_ = (0x40 | this.bitField0_);
          }
          if (paramBunchClientRequest.hasDeviceRegistrationRequest())
          {
            localDeviceRegistrationRequest = paramBunchClientRequest.getDeviceRegistrationRequest();
            if (((0x80 & this.bitField0_) != 128) || (this.deviceRegistrationRequest_ == Client.DeviceRegistrationRequest.getDefaultInstance()))
              break label1958;
            this.deviceRegistrationRequest_ = Client.DeviceRegistrationRequest.newBuilder(this.deviceRegistrationRequest_).mergeFrom(localDeviceRegistrationRequest).buildPartial();
            this.bitField0_ = (0x80 | this.bitField0_);
          }
          if (paramBunchClientRequest.hasPingRequest())
          {
            localPingRequest = paramBunchClientRequest.getPingRequest();
            if (((0x100 & this.bitField0_) != 256) || (this.pingRequest_ == Client.PingRequest.getDefaultInstance()))
              break label1967;
            this.pingRequest_ = Client.PingRequest.newBuilder(this.pingRequest_).mergeFrom(localPingRequest).buildPartial();
            this.bitField0_ = (0x100 | this.bitField0_);
          }
          if (paramBunchClientRequest.hasConversationListRequest())
          {
            localConversationListRequest = paramBunchClientRequest.getConversationListRequest();
            if (((0x200 & this.bitField0_) != 512) || (this.conversationListRequest_ == Client.ConversationListRequest.getDefaultInstance()))
              break label1976;
            this.conversationListRequest_ = Client.ConversationListRequest.newBuilder(this.conversationListRequest_).mergeFrom(localConversationListRequest).buildPartial();
            this.bitField0_ = (0x200 | this.bitField0_);
          }
          if (paramBunchClientRequest.hasUserCreationRequest())
          {
            localUserCreationRequest = paramBunchClientRequest.getUserCreationRequest();
            if (((0x400 & this.bitField0_) != 1024) || (this.userCreationRequest_ == Client.UserCreationRequest.getDefaultInstance()))
              break label1985;
            this.userCreationRequest_ = Client.UserCreationRequest.newBuilder(this.userCreationRequest_).mergeFrom(localUserCreationRequest).buildPartial();
            this.bitField0_ = (0x400 | this.bitField0_);
          }
          if (paramBunchClientRequest.hasInviteRequest())
          {
            localInviteRequest = paramBunchClientRequest.getInviteRequest();
            if (((0x800 & this.bitField0_) != 2048) || (this.inviteRequest_ == Client.InviteRequest.getDefaultInstance()))
              break label1994;
            this.inviteRequest_ = Client.InviteRequest.newBuilder(this.inviteRequest_).mergeFrom(localInviteRequest).buildPartial();
            this.bitField0_ = (0x800 | this.bitField0_);
          }
          if (paramBunchClientRequest.hasLeaveConversationRequest())
          {
            localLeaveConversationRequest = paramBunchClientRequest.getLeaveConversationRequest();
            if (((0x1000 & this.bitField0_) != 4096) || (this.leaveConversationRequest_ == Client.LeaveConversationRequest.getDefaultInstance()))
              break label2003;
            this.leaveConversationRequest_ = Client.LeaveConversationRequest.newBuilder(this.leaveConversationRequest_).mergeFrom(localLeaveConversationRequest).buildPartial();
            this.bitField0_ = (0x1000 | this.bitField0_);
          }
          if (paramBunchClientRequest.hasConversationRenameRequest())
          {
            localConversationRenameRequest = paramBunchClientRequest.getConversationRenameRequest();
            if (((0x2000 & this.bitField0_) != 8192) || (this.conversationRenameRequest_ == Client.ConversationRenameRequest.getDefaultInstance()))
              break label2012;
            this.conversationRenameRequest_ = Client.ConversationRenameRequest.newBuilder(this.conversationRenameRequest_).mergeFrom(localConversationRenameRequest).buildPartial();
            this.bitField0_ = (0x2000 | this.bitField0_);
          }
          if (paramBunchClientRequest.hasTileEventRequest())
          {
            localTileEventRequest = paramBunchClientRequest.getTileEventRequest();
            if (((0x4000 & this.bitField0_) != 16384) || (this.tileEventRequest_ == Client.TileEventRequest.getDefaultInstance()))
              break label2021;
            this.tileEventRequest_ = Client.TileEventRequest.newBuilder(this.tileEventRequest_).mergeFrom(localTileEventRequest).buildPartial();
            this.bitField0_ = (0x4000 | this.bitField0_);
          }
          if (paramBunchClientRequest.hasConversationPreferenceRequest())
          {
            localConversationPreferenceRequest = paramBunchClientRequest.getConversationPreferenceRequest();
            if (((0x8000 & this.bitField0_) != 32768) || (this.conversationPreferenceRequest_ == Client.ConversationPreferenceRequest.getDefaultInstance()))
              break label2030;
            this.conversationPreferenceRequest_ = Client.ConversationPreferenceRequest.newBuilder(this.conversationPreferenceRequest_).mergeFrom(localConversationPreferenceRequest).buildPartial();
            this.bitField0_ = (0x8000 | this.bitField0_);
          }
          if (paramBunchClientRequest.hasReplyToInviteRequest())
          {
            localReplyToInviteRequest = paramBunchClientRequest.getReplyToInviteRequest();
            if (((0x10000 & this.bitField0_) != 65536) || (this.replyToInviteRequest_ == Client.ReplyToInviteRequest.getDefaultInstance()))
              break label2039;
            this.replyToInviteRequest_ = Client.ReplyToInviteRequest.newBuilder(this.replyToInviteRequest_).mergeFrom(localReplyToInviteRequest).buildPartial();
            this.bitField0_ = (0x10000 | this.bitField0_);
          }
          if (paramBunchClientRequest.hasSetAclsRequest())
          {
            localSetAclsRequest = paramBunchClientRequest.getSetAclsRequest();
            if (((0x20000 & this.bitField0_) != 131072) || (this.setAclsRequest_ == Client.SetAclsRequest.getDefaultInstance()))
              break label2048;
            this.setAclsRequest_ = Client.SetAclsRequest.newBuilder(this.setAclsRequest_).mergeFrom(localSetAclsRequest).buildPartial();
            this.bitField0_ = (0x20000 | this.bitField0_);
          }
          if (paramBunchClientRequest.hasUserInfoRequest())
          {
            localUserInfoRequest = paramBunchClientRequest.getUserInfoRequest();
            if (((0x40000 & this.bitField0_) != 262144) || (this.userInfoRequest_ == Client.UserInfoRequest.getDefaultInstance()))
              break label2057;
            this.userInfoRequest_ = Client.UserInfoRequest.newBuilder(this.userInfoRequest_).mergeFrom(localUserInfoRequest).buildPartial();
            this.bitField0_ = (0x40000 | this.bitField0_);
          }
          if (paramBunchClientRequest.hasConversationSearchRequest())
          {
            localConversationSearchRequest = paramBunchClientRequest.getConversationSearchRequest();
            if (((0x80000 & this.bitField0_) != 524288) || (this.conversationSearchRequest_ == Client.ConversationSearchRequest.getDefaultInstance()))
              break label2066;
            this.conversationSearchRequest_ = Client.ConversationSearchRequest.newBuilder(this.conversationSearchRequest_).mergeFrom(localConversationSearchRequest).buildPartial();
            this.bitField0_ = (0x80000 | this.bitField0_);
          }
          if (paramBunchClientRequest.hasEventSearchRequest())
          {
            localEventSearchRequest = paramBunchClientRequest.getEventSearchRequest();
            if (((0x100000 & this.bitField0_) != 1048576) || (this.eventSearchRequest_ == Client.EventSearchRequest.getDefaultInstance()))
              break label2075;
            this.eventSearchRequest_ = Client.EventSearchRequest.newBuilder(this.eventSearchRequest_).mergeFrom(localEventSearchRequest).buildPartial();
            this.bitField0_ = (0x100000 | this.bitField0_);
          }
          if (paramBunchClientRequest.hasSuggestionsRequest())
          {
            localSuggestionsRequest = paramBunchClientRequest.getSuggestionsRequest();
            if (((0x200000 & this.bitField0_) != 2097152) || (this.suggestionsRequest_ == Client.SuggestionsRequest.getDefaultInstance()))
              break label2084;
            this.suggestionsRequest_ = Client.SuggestionsRequest.newBuilder(this.suggestionsRequest_).mergeFrom(localSuggestionsRequest).buildPartial();
            this.bitField0_ = (0x200000 | this.bitField0_);
          }
          if (paramBunchClientRequest.hasGlobalConversationPreferencesRequest())
          {
            localGlobalConversationPreferencesRequest = paramBunchClientRequest.getGlobalConversationPreferencesRequest();
            if (((0x400000 & this.bitField0_) != 4194304) || (this.globalConversationPreferencesRequest_ == Client.GlobalConversationPreferencesRequest.getDefaultInstance()))
              break label2093;
            this.globalConversationPreferencesRequest_ = Client.GlobalConversationPreferencesRequest.newBuilder(this.globalConversationPreferencesRequest_).mergeFrom(localGlobalConversationPreferencesRequest).buildPartial();
            this.bitField0_ = (0x400000 | this.bitField0_);
          }
          if (paramBunchClientRequest.hasConversationJoinRequest())
          {
            localConversationJoinRequest = paramBunchClientRequest.getConversationJoinRequest();
            if (((0x800000 & this.bitField0_) != 8388608) || (this.conversationJoinRequest_ == Client.ConversationJoinRequest.getDefaultInstance()))
              break label2102;
            this.conversationJoinRequest_ = Client.ConversationJoinRequest.newBuilder(this.conversationJoinRequest_).mergeFrom(localConversationJoinRequest).buildPartial();
            this.bitField0_ = (0x800000 | this.bitField0_);
          }
          if (paramBunchClientRequest.hasHangoutInviteRequest())
          {
            localHangoutInviteRequest = paramBunchClientRequest.getHangoutInviteRequest();
            if (((0x1000000 & this.bitField0_) != 16777216) || (this.hangoutInviteRequest_ == Client.HangoutInviteRequest.getDefaultInstance()))
              break label2111;
            this.hangoutInviteRequest_ = Client.HangoutInviteRequest.newBuilder(this.hangoutInviteRequest_).mergeFrom(localHangoutInviteRequest).buildPartial();
            this.bitField0_ = (0x1000000 | this.bitField0_);
          }
          if (paramBunchClientRequest.hasHangoutInviteKeepAliveRequest())
          {
            localHangoutInviteKeepAliveRequest = paramBunchClientRequest.getHangoutInviteKeepAliveRequest();
            if (((0x2000000 & this.bitField0_) != 33554432) || (this.hangoutInviteKeepAliveRequest_ == Client.HangoutInviteKeepAliveRequest.getDefaultInstance()))
              break label2120;
            this.hangoutInviteKeepAliveRequest_ = Client.HangoutInviteKeepAliveRequest.newBuilder(this.hangoutInviteKeepAliveRequest_).mergeFrom(localHangoutInviteKeepAliveRequest).buildPartial();
            this.bitField0_ = (0x2000000 | this.bitField0_);
          }
          if (paramBunchClientRequest.hasHangoutInviteReplyRequest())
          {
            localHangoutInviteReplyRequest = paramBunchClientRequest.getHangoutInviteReplyRequest();
            if (((0x4000000 & this.bitField0_) != 67108864) || (this.hangoutInviteReplyRequest_ == Client.HangoutInviteReplyRequest.getDefaultInstance()))
              break label2129;
            this.hangoutInviteReplyRequest_ = Client.HangoutInviteReplyRequest.newBuilder(this.hangoutInviteReplyRequest_).mergeFrom(localHangoutInviteReplyRequest).buildPartial();
            this.bitField0_ = (0x4000000 | this.bitField0_);
          }
          if (paramBunchClientRequest.hasHangoutInviteFinishRequest())
          {
            localHangoutInviteFinishRequest = paramBunchClientRequest.getHangoutInviteFinishRequest();
            if (((0x8000000 & this.bitField0_) != 134217728) || (this.hangoutInviteFinishRequest_ == Client.HangoutInviteFinishRequest.getDefaultInstance()))
              break label2138;
            this.hangoutInviteFinishRequest_ = Client.HangoutInviteFinishRequest.newBuilder(this.hangoutInviteFinishRequest_).mergeFrom(localHangoutInviteFinishRequest).buildPartial();
            this.bitField0_ = (0x8000000 | this.bitField0_);
          }
        }
        while (!paramBunchClientRequest.hasHangoutRingFinishRequest());
        Client.HangoutRingFinishRequest localHangoutRingFinishRequest = paramBunchClientRequest.getHangoutRingFinishRequest();
        if (((0x10000000 & this.bitField0_) == 268435456) && (this.hangoutRingFinishRequest_ != Client.HangoutRingFinishRequest.getDefaultInstance()));
        for (this.hangoutRingFinishRequest_ = Client.HangoutRingFinishRequest.newBuilder(this.hangoutRingFinishRequest_).mergeFrom(localHangoutRingFinishRequest).buildPartial(); ; this.hangoutRingFinishRequest_ = localHangoutRingFinishRequest)
        {
          this.bitField0_ = (0x10000000 | this.bitField0_);
          break;
          this.chatMessageRequest_ = localChatMessageRequest;
          break label77;
          label1913: this.presenceRequest_ = localPresenceRequest;
          break label139;
          label1922: this.typingRequest_ = localTypingRequest;
          break label203;
          label1931: this.receiptRequest_ = localReceiptRequest;
          break label268;
          label1940: this.conversationRequest_ = localNewConversationRequest;
          break label333;
          label1949: this.eventStreamRequest_ = localEventStreamRequest;
          break label398;
          label1958: this.deviceRegistrationRequest_ = localDeviceRegistrationRequest;
          break label465;
          label1967: this.pingRequest_ = localPingRequest;
          break label533;
          label1976: this.conversationListRequest_ = localConversationListRequest;
          break label601;
          label1985: this.userCreationRequest_ = localUserCreationRequest;
          break label669;
          label1994: this.inviteRequest_ = localInviteRequest;
          break label737;
          label2003: this.leaveConversationRequest_ = localLeaveConversationRequest;
          break label805;
          label2012: this.conversationRenameRequest_ = localConversationRenameRequest;
          break label873;
          label2021: this.tileEventRequest_ = localTileEventRequest;
          break label941;
          label2030: this.conversationPreferenceRequest_ = localConversationPreferenceRequest;
          break label1009;
          label2039: this.replyToInviteRequest_ = localReplyToInviteRequest;
          break label1077;
          label2048: this.setAclsRequest_ = localSetAclsRequest;
          break label1145;
          label2057: this.userInfoRequest_ = localUserInfoRequest;
          break label1213;
          label2066: this.conversationSearchRequest_ = localConversationSearchRequest;
          break label1281;
          label2075: this.eventSearchRequest_ = localEventSearchRequest;
          break label1349;
          label2084: this.suggestionsRequest_ = localSuggestionsRequest;
          break label1417;
          label2093: this.globalConversationPreferencesRequest_ = localGlobalConversationPreferencesRequest;
          break label1485;
          label2102: this.conversationJoinRequest_ = localConversationJoinRequest;
          break label1553;
          label2111: this.hangoutInviteRequest_ = localHangoutInviteRequest;
          break label1621;
          label2120: this.hangoutInviteKeepAliveRequest_ = localHangoutInviteKeepAliveRequest;
          break label1689;
          label2129: this.hangoutInviteReplyRequest_ = localHangoutInviteReplyRequest;
          break label1757;
          label2138: this.hangoutInviteFinishRequest_ = localHangoutInviteFinishRequest;
          break label1823;
        }
      }

      public final Builder setChatMessageRequest(Client.ChatMessageRequest.Builder paramBuilder)
      {
        this.chatMessageRequest_ = paramBuilder.build();
        this.bitField0_ = (0x2 | this.bitField0_);
        return this;
      }

      public final Builder setChatMessageRequest(Client.ChatMessageRequest paramChatMessageRequest)
      {
        if (paramChatMessageRequest == null)
          throw new NullPointerException();
        this.chatMessageRequest_ = paramChatMessageRequest;
        this.bitField0_ = (0x2 | this.bitField0_);
        return this;
      }

      public final Builder setConversationJoinRequest(Client.ConversationJoinRequest.Builder paramBuilder)
      {
        this.conversationJoinRequest_ = paramBuilder.build();
        this.bitField0_ = (0x800000 | this.bitField0_);
        return this;
      }

      public final Builder setConversationJoinRequest(Client.ConversationJoinRequest paramConversationJoinRequest)
      {
        if (paramConversationJoinRequest == null)
          throw new NullPointerException();
        this.conversationJoinRequest_ = paramConversationJoinRequest;
        this.bitField0_ = (0x800000 | this.bitField0_);
        return this;
      }

      public final Builder setConversationListRequest(Client.ConversationListRequest.Builder paramBuilder)
      {
        this.conversationListRequest_ = paramBuilder.build();
        this.bitField0_ = (0x200 | this.bitField0_);
        return this;
      }

      public final Builder setConversationListRequest(Client.ConversationListRequest paramConversationListRequest)
      {
        if (paramConversationListRequest == null)
          throw new NullPointerException();
        this.conversationListRequest_ = paramConversationListRequest;
        this.bitField0_ = (0x200 | this.bitField0_);
        return this;
      }

      public final Builder setConversationPreferenceRequest(Client.ConversationPreferenceRequest.Builder paramBuilder)
      {
        this.conversationPreferenceRequest_ = paramBuilder.build();
        this.bitField0_ = (0x8000 | this.bitField0_);
        return this;
      }

      public final Builder setConversationPreferenceRequest(Client.ConversationPreferenceRequest paramConversationPreferenceRequest)
      {
        if (paramConversationPreferenceRequest == null)
          throw new NullPointerException();
        this.conversationPreferenceRequest_ = paramConversationPreferenceRequest;
        this.bitField0_ = (0x8000 | this.bitField0_);
        return this;
      }

      public final Builder setConversationRenameRequest(Client.ConversationRenameRequest.Builder paramBuilder)
      {
        this.conversationRenameRequest_ = paramBuilder.build();
        this.bitField0_ = (0x2000 | this.bitField0_);
        return this;
      }

      public final Builder setConversationRenameRequest(Client.ConversationRenameRequest paramConversationRenameRequest)
      {
        if (paramConversationRenameRequest == null)
          throw new NullPointerException();
        this.conversationRenameRequest_ = paramConversationRenameRequest;
        this.bitField0_ = (0x2000 | this.bitField0_);
        return this;
      }

      public final Builder setConversationRequest(Client.NewConversationRequest.Builder paramBuilder)
      {
        this.conversationRequest_ = paramBuilder.build();
        this.bitField0_ = (0x20 | this.bitField0_);
        return this;
      }

      public final Builder setConversationRequest(Client.NewConversationRequest paramNewConversationRequest)
      {
        if (paramNewConversationRequest == null)
          throw new NullPointerException();
        this.conversationRequest_ = paramNewConversationRequest;
        this.bitField0_ = (0x20 | this.bitField0_);
        return this;
      }

      public final Builder setConversationSearchRequest(Client.ConversationSearchRequest.Builder paramBuilder)
      {
        this.conversationSearchRequest_ = paramBuilder.build();
        this.bitField0_ = (0x80000 | this.bitField0_);
        return this;
      }

      public final Builder setConversationSearchRequest(Client.ConversationSearchRequest paramConversationSearchRequest)
      {
        if (paramConversationSearchRequest == null)
          throw new NullPointerException();
        this.conversationSearchRequest_ = paramConversationSearchRequest;
        this.bitField0_ = (0x80000 | this.bitField0_);
        return this;
      }

      public final Builder setDeviceRegistrationRequest(Client.DeviceRegistrationRequest.Builder paramBuilder)
      {
        this.deviceRegistrationRequest_ = paramBuilder.build();
        this.bitField0_ = (0x80 | this.bitField0_);
        return this;
      }

      public final Builder setDeviceRegistrationRequest(Client.DeviceRegistrationRequest paramDeviceRegistrationRequest)
      {
        if (paramDeviceRegistrationRequest == null)
          throw new NullPointerException();
        this.deviceRegistrationRequest_ = paramDeviceRegistrationRequest;
        this.bitField0_ = (0x80 | this.bitField0_);
        return this;
      }

      public final Builder setEventSearchRequest(Client.EventSearchRequest.Builder paramBuilder)
      {
        this.eventSearchRequest_ = paramBuilder.build();
        this.bitField0_ = (0x100000 | this.bitField0_);
        return this;
      }

      public final Builder setEventSearchRequest(Client.EventSearchRequest paramEventSearchRequest)
      {
        if (paramEventSearchRequest == null)
          throw new NullPointerException();
        this.eventSearchRequest_ = paramEventSearchRequest;
        this.bitField0_ = (0x100000 | this.bitField0_);
        return this;
      }

      public final Builder setEventStreamRequest(Client.EventStreamRequest.Builder paramBuilder)
      {
        this.eventStreamRequest_ = paramBuilder.build();
        this.bitField0_ = (0x40 | this.bitField0_);
        return this;
      }

      public final Builder setEventStreamRequest(Client.EventStreamRequest paramEventStreamRequest)
      {
        if (paramEventStreamRequest == null)
          throw new NullPointerException();
        this.eventStreamRequest_ = paramEventStreamRequest;
        this.bitField0_ = (0x40 | this.bitField0_);
        return this;
      }

      public final Builder setGlobalConversationPreferencesRequest(Client.GlobalConversationPreferencesRequest.Builder paramBuilder)
      {
        this.globalConversationPreferencesRequest_ = paramBuilder.build();
        this.bitField0_ = (0x400000 | this.bitField0_);
        return this;
      }

      public final Builder setGlobalConversationPreferencesRequest(Client.GlobalConversationPreferencesRequest paramGlobalConversationPreferencesRequest)
      {
        if (paramGlobalConversationPreferencesRequest == null)
          throw new NullPointerException();
        this.globalConversationPreferencesRequest_ = paramGlobalConversationPreferencesRequest;
        this.bitField0_ = (0x400000 | this.bitField0_);
        return this;
      }

      public final Builder setHangoutInviteFinishRequest(Client.HangoutInviteFinishRequest.Builder paramBuilder)
      {
        this.hangoutInviteFinishRequest_ = paramBuilder.build();
        this.bitField0_ = (0x8000000 | this.bitField0_);
        return this;
      }

      public final Builder setHangoutInviteFinishRequest(Client.HangoutInviteFinishRequest paramHangoutInviteFinishRequest)
      {
        if (paramHangoutInviteFinishRequest == null)
          throw new NullPointerException();
        this.hangoutInviteFinishRequest_ = paramHangoutInviteFinishRequest;
        this.bitField0_ = (0x8000000 | this.bitField0_);
        return this;
      }

      public final Builder setHangoutInviteKeepAliveRequest(Client.HangoutInviteKeepAliveRequest.Builder paramBuilder)
      {
        this.hangoutInviteKeepAliveRequest_ = paramBuilder.build();
        this.bitField0_ = (0x2000000 | this.bitField0_);
        return this;
      }

      public final Builder setHangoutInviteKeepAliveRequest(Client.HangoutInviteKeepAliveRequest paramHangoutInviteKeepAliveRequest)
      {
        if (paramHangoutInviteKeepAliveRequest == null)
          throw new NullPointerException();
        this.hangoutInviteKeepAliveRequest_ = paramHangoutInviteKeepAliveRequest;
        this.bitField0_ = (0x2000000 | this.bitField0_);
        return this;
      }

      public final Builder setHangoutInviteReplyRequest(Client.HangoutInviteReplyRequest.Builder paramBuilder)
      {
        this.hangoutInviteReplyRequest_ = paramBuilder.build();
        this.bitField0_ = (0x4000000 | this.bitField0_);
        return this;
      }

      public final Builder setHangoutInviteReplyRequest(Client.HangoutInviteReplyRequest paramHangoutInviteReplyRequest)
      {
        if (paramHangoutInviteReplyRequest == null)
          throw new NullPointerException();
        this.hangoutInviteReplyRequest_ = paramHangoutInviteReplyRequest;
        this.bitField0_ = (0x4000000 | this.bitField0_);
        return this;
      }

      public final Builder setHangoutInviteRequest(Client.HangoutInviteRequest.Builder paramBuilder)
      {
        this.hangoutInviteRequest_ = paramBuilder.build();
        this.bitField0_ = (0x1000000 | this.bitField0_);
        return this;
      }

      public final Builder setHangoutInviteRequest(Client.HangoutInviteRequest paramHangoutInviteRequest)
      {
        if (paramHangoutInviteRequest == null)
          throw new NullPointerException();
        this.hangoutInviteRequest_ = paramHangoutInviteRequest;
        this.bitField0_ = (0x1000000 | this.bitField0_);
        return this;
      }

      public final Builder setHangoutRingFinishRequest(Client.HangoutRingFinishRequest.Builder paramBuilder)
      {
        this.hangoutRingFinishRequest_ = paramBuilder.build();
        this.bitField0_ = (0x10000000 | this.bitField0_);
        return this;
      }

      public final Builder setHangoutRingFinishRequest(Client.HangoutRingFinishRequest paramHangoutRingFinishRequest)
      {
        if (paramHangoutRingFinishRequest == null)
          throw new NullPointerException();
        this.hangoutRingFinishRequest_ = paramHangoutRingFinishRequest;
        this.bitField0_ = (0x10000000 | this.bitField0_);
        return this;
      }

      public final Builder setInviteRequest(Client.InviteRequest.Builder paramBuilder)
      {
        this.inviteRequest_ = paramBuilder.build();
        this.bitField0_ = (0x800 | this.bitField0_);
        return this;
      }

      public final Builder setInviteRequest(Client.InviteRequest paramInviteRequest)
      {
        if (paramInviteRequest == null)
          throw new NullPointerException();
        this.inviteRequest_ = paramInviteRequest;
        this.bitField0_ = (0x800 | this.bitField0_);
        return this;
      }

      public final Builder setLeaveConversationRequest(Client.LeaveConversationRequest.Builder paramBuilder)
      {
        this.leaveConversationRequest_ = paramBuilder.build();
        this.bitField0_ = (0x1000 | this.bitField0_);
        return this;
      }

      public final Builder setLeaveConversationRequest(Client.LeaveConversationRequest paramLeaveConversationRequest)
      {
        if (paramLeaveConversationRequest == null)
          throw new NullPointerException();
        this.leaveConversationRequest_ = paramLeaveConversationRequest;
        this.bitField0_ = (0x1000 | this.bitField0_);
        return this;
      }

      public final Builder setPingRequest(Client.PingRequest.Builder paramBuilder)
      {
        this.pingRequest_ = paramBuilder.build();
        this.bitField0_ = (0x100 | this.bitField0_);
        return this;
      }

      public final Builder setPingRequest(Client.PingRequest paramPingRequest)
      {
        if (paramPingRequest == null)
          throw new NullPointerException();
        this.pingRequest_ = paramPingRequest;
        this.bitField0_ = (0x100 | this.bitField0_);
        return this;
      }

      public final Builder setPresenceRequest(Client.PresenceRequest.Builder paramBuilder)
      {
        this.presenceRequest_ = paramBuilder.build();
        this.bitField0_ = (0x4 | this.bitField0_);
        return this;
      }

      public final Builder setPresenceRequest(Client.PresenceRequest paramPresenceRequest)
      {
        if (paramPresenceRequest == null)
          throw new NullPointerException();
        this.presenceRequest_ = paramPresenceRequest;
        this.bitField0_ = (0x4 | this.bitField0_);
        return this;
      }

      public final Builder setReceiptRequest(Client.ReceiptRequest.Builder paramBuilder)
      {
        this.receiptRequest_ = paramBuilder.build();
        this.bitField0_ = (0x10 | this.bitField0_);
        return this;
      }

      public final Builder setReceiptRequest(Client.ReceiptRequest paramReceiptRequest)
      {
        if (paramReceiptRequest == null)
          throw new NullPointerException();
        this.receiptRequest_ = paramReceiptRequest;
        this.bitField0_ = (0x10 | this.bitField0_);
        return this;
      }

      public final Builder setReplyToInviteRequest(Client.ReplyToInviteRequest.Builder paramBuilder)
      {
        this.replyToInviteRequest_ = paramBuilder.build();
        this.bitField0_ = (0x10000 | this.bitField0_);
        return this;
      }

      public final Builder setReplyToInviteRequest(Client.ReplyToInviteRequest paramReplyToInviteRequest)
      {
        if (paramReplyToInviteRequest == null)
          throw new NullPointerException();
        this.replyToInviteRequest_ = paramReplyToInviteRequest;
        this.bitField0_ = (0x10000 | this.bitField0_);
        return this;
      }

      public final Builder setRequestClientId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x1 | this.bitField0_);
        this.requestClientId_ = paramString;
        return this;
      }

      public final Builder setSetAclsRequest(Client.SetAclsRequest.Builder paramBuilder)
      {
        this.setAclsRequest_ = paramBuilder.build();
        this.bitField0_ = (0x20000 | this.bitField0_);
        return this;
      }

      public final Builder setSetAclsRequest(Client.SetAclsRequest paramSetAclsRequest)
      {
        if (paramSetAclsRequest == null)
          throw new NullPointerException();
        this.setAclsRequest_ = paramSetAclsRequest;
        this.bitField0_ = (0x20000 | this.bitField0_);
        return this;
      }

      public final Builder setSuggestionsRequest(Client.SuggestionsRequest.Builder paramBuilder)
      {
        this.suggestionsRequest_ = paramBuilder.build();
        this.bitField0_ = (0x200000 | this.bitField0_);
        return this;
      }

      public final Builder setSuggestionsRequest(Client.SuggestionsRequest paramSuggestionsRequest)
      {
        if (paramSuggestionsRequest == null)
          throw new NullPointerException();
        this.suggestionsRequest_ = paramSuggestionsRequest;
        this.bitField0_ = (0x200000 | this.bitField0_);
        return this;
      }

      public final Builder setTileEventRequest(Client.TileEventRequest.Builder paramBuilder)
      {
        this.tileEventRequest_ = paramBuilder.build();
        this.bitField0_ = (0x4000 | this.bitField0_);
        return this;
      }

      public final Builder setTileEventRequest(Client.TileEventRequest paramTileEventRequest)
      {
        if (paramTileEventRequest == null)
          throw new NullPointerException();
        this.tileEventRequest_ = paramTileEventRequest;
        this.bitField0_ = (0x4000 | this.bitField0_);
        return this;
      }

      public final Builder setTypingRequest(Client.TypingRequest.Builder paramBuilder)
      {
        this.typingRequest_ = paramBuilder.build();
        this.bitField0_ = (0x8 | this.bitField0_);
        return this;
      }

      public final Builder setTypingRequest(Client.TypingRequest paramTypingRequest)
      {
        if (paramTypingRequest == null)
          throw new NullPointerException();
        this.typingRequest_ = paramTypingRequest;
        this.bitField0_ = (0x8 | this.bitField0_);
        return this;
      }

      public final Builder setUserCreationRequest(Client.UserCreationRequest.Builder paramBuilder)
      {
        this.userCreationRequest_ = paramBuilder.build();
        this.bitField0_ = (0x400 | this.bitField0_);
        return this;
      }

      public final Builder setUserCreationRequest(Client.UserCreationRequest paramUserCreationRequest)
      {
        if (paramUserCreationRequest == null)
          throw new NullPointerException();
        this.userCreationRequest_ = paramUserCreationRequest;
        this.bitField0_ = (0x400 | this.bitField0_);
        return this;
      }

      public final Builder setUserInfoRequest(Client.UserInfoRequest.Builder paramBuilder)
      {
        this.userInfoRequest_ = paramBuilder.build();
        this.bitField0_ = (0x40000 | this.bitField0_);
        return this;
      }

      public final Builder setUserInfoRequest(Client.UserInfoRequest paramUserInfoRequest)
      {
        if (paramUserInfoRequest == null)
          throw new NullPointerException();
        this.userInfoRequest_ = paramUserInfoRequest;
        this.bitField0_ = (0x40000 | this.bitField0_);
        return this;
      }
    }
  }

  public static abstract interface BunchClientRequestOrBuilder extends MessageLiteOrBuilder
  {
    public abstract Client.ChatMessageRequest getChatMessageRequest();

    public abstract Client.ConversationJoinRequest getConversationJoinRequest();

    public abstract Client.ConversationListRequest getConversationListRequest();

    public abstract Client.ConversationPreferenceRequest getConversationPreferenceRequest();

    public abstract Client.ConversationRenameRequest getConversationRenameRequest();

    public abstract Client.NewConversationRequest getConversationRequest();

    public abstract Client.ConversationSearchRequest getConversationSearchRequest();

    public abstract Client.DeviceRegistrationRequest getDeviceRegistrationRequest();

    public abstract Client.EventSearchRequest getEventSearchRequest();

    public abstract Client.EventStreamRequest getEventStreamRequest();

    public abstract Client.GlobalConversationPreferencesRequest getGlobalConversationPreferencesRequest();

    public abstract Client.HangoutInviteFinishRequest getHangoutInviteFinishRequest();

    public abstract Client.HangoutInviteKeepAliveRequest getHangoutInviteKeepAliveRequest();

    public abstract Client.HangoutInviteReplyRequest getHangoutInviteReplyRequest();

    public abstract Client.HangoutInviteRequest getHangoutInviteRequest();

    public abstract Client.HangoutRingFinishRequest getHangoutRingFinishRequest();

    public abstract Client.InviteRequest getInviteRequest();

    public abstract Client.LeaveConversationRequest getLeaveConversationRequest();

    public abstract Client.PingRequest getPingRequest();

    public abstract Client.PresenceRequest getPresenceRequest();

    public abstract Client.ReceiptRequest getReceiptRequest();

    public abstract Client.ReplyToInviteRequest getReplyToInviteRequest();

    public abstract String getRequestClientId();

    public abstract Client.SetAclsRequest getSetAclsRequest();

    public abstract Client.SuggestionsRequest getSuggestionsRequest();

    public abstract Client.TileEventRequest getTileEventRequest();

    public abstract Client.TypingRequest getTypingRequest();

    public abstract Client.UserCreationRequest getUserCreationRequest();

    public abstract Client.UserInfoRequest getUserInfoRequest();

    public abstract boolean hasChatMessageRequest();

    public abstract boolean hasConversationJoinRequest();

    public abstract boolean hasConversationListRequest();

    public abstract boolean hasConversationPreferenceRequest();

    public abstract boolean hasConversationRenameRequest();

    public abstract boolean hasConversationRequest();

    public abstract boolean hasConversationSearchRequest();

    public abstract boolean hasDeviceRegistrationRequest();

    public abstract boolean hasEventSearchRequest();

    public abstract boolean hasEventStreamRequest();

    public abstract boolean hasGlobalConversationPreferencesRequest();

    public abstract boolean hasHangoutInviteFinishRequest();

    public abstract boolean hasHangoutInviteKeepAliveRequest();

    public abstract boolean hasHangoutInviteReplyRequest();

    public abstract boolean hasHangoutInviteRequest();

    public abstract boolean hasHangoutRingFinishRequest();

    public abstract boolean hasInviteRequest();

    public abstract boolean hasLeaveConversationRequest();

    public abstract boolean hasPingRequest();

    public abstract boolean hasPresenceRequest();

    public abstract boolean hasReceiptRequest();

    public abstract boolean hasReplyToInviteRequest();

    public abstract boolean hasRequestClientId();

    public abstract boolean hasSetAclsRequest();

    public abstract boolean hasSuggestionsRequest();

    public abstract boolean hasTileEventRequest();

    public abstract boolean hasTypingRequest();

    public abstract boolean hasUserCreationRequest();

    public abstract boolean hasUserInfoRequest();
  }

  public static final class BunchCommand extends GeneratedMessageLite
    implements Client.BunchCommandOrBuilder
  {
    private static final BunchCommand defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private int bitField1_;
    private int bitField2_;
    private Client.ChatMessageRequest chatMessageRequest_;
    private Client.ChatMessageResponse chatMessageResponse_;
    private Client.ChatMessage chatMessage_;
    private Client.ConversationJoinRequest conversationJoinRequest_;
    private Client.ConversationJoinResponse conversationJoinResponse_;
    private Client.ConversationListRequest conversationListRequest_;
    private Client.ConversationListResponse conversationListResponse_;
    private Client.ConversationPreferenceRequest conversationPreferenceRequest_;
    private Client.ConversationPreferenceResponse conversationPreferenceResponse_;
    private Client.ConversationRenameRequest conversationRenameRequest_;
    private Client.ConversationRenameResponse conversationRenameResponse_;
    private Client.NewConversationRequest conversationRequest_;
    private Client.NewConversationResponse conversationResponse_;
    private Client.ConversationSearchRequest conversationSearchRequest_;
    private Client.ConversationSearchResponse conversationSearchResponse_;
    private Client.DeviceRegistrationRequest deviceRegistrationRequest_;
    private Client.DeviceRegistrationResponse deviceRegistrationResponse_;
    private Client.Error error_;
    private Client.EventSearchRequest eventSearchRequest_;
    private Client.EventSearchResponse eventSearchResponse_;
    private Client.EventStreamResponse eventSteamResponse_;
    private Client.EventStreamRequest eventStreamRequest_;
    private Client.GlobalConversationPreferencesRequest globalConversationPreferencesRequest_;
    private Client.GlobalConversationPreferencesResponse globalConversationPreferencesResponse_;
    private Client.GroupConversationRename groupConversationRename_;
    private Client.HangoutInviteFinishRequest hangoutInviteFinishRequest_;
    private Client.HangoutInviteFinishResponse hangoutInviteFinishResponse_;
    private Client.HangoutInviteKeepAliveRequest hangoutInviteKeepAliveRequest_;
    private Client.HangoutInviteKeepAliveResponse hangoutInviteKeepAliveResponse_;
    private Client.HangoutInviteReplyRequest hangoutInviteReplyRequest_;
    private Client.HangoutInviteReplyResponse hangoutInviteReplyResponse_;
    private Client.HangoutInviteRequest hangoutInviteRequest_;
    private Client.HangoutInviteResponse hangoutInviteResponse_;
    private Client.HangoutRingFinishRequest hangoutRingFinishRequest_;
    private Client.HangoutRingFinishResponse hangoutRingFinishResponse_;
    private Client.InvalidateLocalCache invalidateLocalCache_;
    private Client.InviteRequest inviteRequest_;
    private Client.InviteResponse inviteResponse_;
    private Client.LeaveConversationRequest leaveConversationRequest_;
    private Client.LeaveConversationResponse leaveConversationResponse_;
    private Client.MembershipChange membershipChange_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private Client.Migration migration_;
    private Client.PingRequest pingRequest_;
    private Client.PingResponse pingResponse_;
    private Client.PresenceRequest presenceRequest_;
    private Client.PresenceResponse presenceResponse_;
    private Client.Presence presence_;
    private Client.ReceiptRequest receiptRequest_;
    private Client.ReceiptResponse receiptResponse_;
    private Client.Receipt receipt_;
    private Client.ReplyToInviteRequest replyToInviteRequest_;
    private Client.ReplyToInviteResponse replyToInviteResponse_;
    private Object requestClientId_;
    private Client.SetAclsRequest setAclsRequest_;
    private Client.SetAclsResponse setAclsResponse_;
    private Client.SuggestionsRequest suggestionsRequest_;
    private Client.SuggestionsResponse suggestionsResponse_;
    private Client.TileEventRequest tileEventRequest_;
    private Client.TileEventResponse tileEventResponse_;
    private Client.TileEvent tileEvent_;
    private Client.TypingRequest typingRequest_;
    private Client.TypingResponse typingResponse_;
    private Client.Typing typing_;
    private Client.UserCreationRequest userCreationRequest_;
    private Client.UserCreationResponse userCreationResponse_;
    private Client.UserInfoRequest userInfoRequest_;
    private Client.UserInfoResponse userInfoResponse_;

    static
    {
      BunchCommand localBunchCommand = new BunchCommand();
      defaultInstance = localBunchCommand;
      localBunchCommand.requestClientId_ = "";
      localBunchCommand.chatMessage_ = Client.ChatMessage.getDefaultInstance();
      localBunchCommand.chatMessageRequest_ = Client.ChatMessageRequest.getDefaultInstance();
      localBunchCommand.chatMessageResponse_ = Client.ChatMessageResponse.getDefaultInstance();
      localBunchCommand.presenceRequest_ = Client.PresenceRequest.getDefaultInstance();
      localBunchCommand.presenceResponse_ = Client.PresenceResponse.getDefaultInstance();
      localBunchCommand.presence_ = Client.Presence.getDefaultInstance();
      localBunchCommand.typingRequest_ = Client.TypingRequest.getDefaultInstance();
      localBunchCommand.typingResponse_ = Client.TypingResponse.getDefaultInstance();
      localBunchCommand.typing_ = Client.Typing.getDefaultInstance();
      localBunchCommand.receipt_ = Client.Receipt.getDefaultInstance();
      localBunchCommand.receiptRequest_ = Client.ReceiptRequest.getDefaultInstance();
      localBunchCommand.receiptResponse_ = Client.ReceiptResponse.getDefaultInstance();
      localBunchCommand.membershipChange_ = Client.MembershipChange.getDefaultInstance();
      localBunchCommand.conversationRequest_ = Client.NewConversationRequest.getDefaultInstance();
      localBunchCommand.conversationResponse_ = Client.NewConversationResponse.getDefaultInstance();
      localBunchCommand.eventStreamRequest_ = Client.EventStreamRequest.getDefaultInstance();
      localBunchCommand.eventSteamResponse_ = Client.EventStreamResponse.getDefaultInstance();
      localBunchCommand.deviceRegistrationRequest_ = Client.DeviceRegistrationRequest.getDefaultInstance();
      localBunchCommand.deviceRegistrationResponse_ = Client.DeviceRegistrationResponse.getDefaultInstance();
      localBunchCommand.pingRequest_ = Client.PingRequest.getDefaultInstance();
      localBunchCommand.pingResponse_ = Client.PingResponse.getDefaultInstance();
      localBunchCommand.conversationListRequest_ = Client.ConversationListRequest.getDefaultInstance();
      localBunchCommand.conversationListResponse_ = Client.ConversationListResponse.getDefaultInstance();
      localBunchCommand.userCreationRequest_ = Client.UserCreationRequest.getDefaultInstance();
      localBunchCommand.userCreationResponse_ = Client.UserCreationResponse.getDefaultInstance();
      localBunchCommand.error_ = Client.Error.getDefaultInstance();
      localBunchCommand.inviteRequest_ = Client.InviteRequest.getDefaultInstance();
      localBunchCommand.leaveConversationRequest_ = Client.LeaveConversationRequest.getDefaultInstance();
      localBunchCommand.leaveConversationResponse_ = Client.LeaveConversationResponse.getDefaultInstance();
      localBunchCommand.conversationRenameRequest_ = Client.ConversationRenameRequest.getDefaultInstance();
      localBunchCommand.conversationRenameResponse_ = Client.ConversationRenameResponse.getDefaultInstance();
      localBunchCommand.groupConversationRename_ = Client.GroupConversationRename.getDefaultInstance();
      localBunchCommand.tileEventRequest_ = Client.TileEventRequest.getDefaultInstance();
      localBunchCommand.tileEventResponse_ = Client.TileEventResponse.getDefaultInstance();
      localBunchCommand.tileEvent_ = Client.TileEvent.getDefaultInstance();
      localBunchCommand.migration_ = Client.Migration.getDefaultInstance();
      localBunchCommand.conversationPreferenceRequest_ = Client.ConversationPreferenceRequest.getDefaultInstance();
      localBunchCommand.conversationPreferenceResponse_ = Client.ConversationPreferenceResponse.getDefaultInstance();
      localBunchCommand.replyToInviteRequest_ = Client.ReplyToInviteRequest.getDefaultInstance();
      localBunchCommand.setAclsRequest_ = Client.SetAclsRequest.getDefaultInstance();
      localBunchCommand.invalidateLocalCache_ = Client.InvalidateLocalCache.getDefaultInstance();
      localBunchCommand.inviteResponse_ = Client.InviteResponse.getDefaultInstance();
      localBunchCommand.replyToInviteResponse_ = Client.ReplyToInviteResponse.getDefaultInstance();
      localBunchCommand.setAclsResponse_ = Client.SetAclsResponse.getDefaultInstance();
      localBunchCommand.userInfoRequest_ = Client.UserInfoRequest.getDefaultInstance();
      localBunchCommand.userInfoResponse_ = Client.UserInfoResponse.getDefaultInstance();
      localBunchCommand.conversationSearchRequest_ = Client.ConversationSearchRequest.getDefaultInstance();
      localBunchCommand.conversationSearchResponse_ = Client.ConversationSearchResponse.getDefaultInstance();
      localBunchCommand.eventSearchRequest_ = Client.EventSearchRequest.getDefaultInstance();
      localBunchCommand.eventSearchResponse_ = Client.EventSearchResponse.getDefaultInstance();
      localBunchCommand.suggestionsRequest_ = Client.SuggestionsRequest.getDefaultInstance();
      localBunchCommand.suggestionsResponse_ = Client.SuggestionsResponse.getDefaultInstance();
      localBunchCommand.globalConversationPreferencesRequest_ = Client.GlobalConversationPreferencesRequest.getDefaultInstance();
      localBunchCommand.globalConversationPreferencesResponse_ = Client.GlobalConversationPreferencesResponse.getDefaultInstance();
      localBunchCommand.conversationJoinRequest_ = Client.ConversationJoinRequest.getDefaultInstance();
      localBunchCommand.conversationJoinResponse_ = Client.ConversationJoinResponse.getDefaultInstance();
      localBunchCommand.hangoutInviteRequest_ = Client.HangoutInviteRequest.getDefaultInstance();
      localBunchCommand.hangoutInviteResponse_ = Client.HangoutInviteResponse.getDefaultInstance();
      localBunchCommand.hangoutInviteKeepAliveRequest_ = Client.HangoutInviteKeepAliveRequest.getDefaultInstance();
      localBunchCommand.hangoutInviteKeepAliveResponse_ = Client.HangoutInviteKeepAliveResponse.getDefaultInstance();
      localBunchCommand.hangoutInviteReplyRequest_ = Client.HangoutInviteReplyRequest.getDefaultInstance();
      localBunchCommand.hangoutInviteReplyResponse_ = Client.HangoutInviteReplyResponse.getDefaultInstance();
      localBunchCommand.hangoutInviteFinishRequest_ = Client.HangoutInviteFinishRequest.getDefaultInstance();
      localBunchCommand.hangoutInviteFinishResponse_ = Client.HangoutInviteFinishResponse.getDefaultInstance();
      localBunchCommand.hangoutRingFinishRequest_ = Client.HangoutRingFinishRequest.getDefaultInstance();
      localBunchCommand.hangoutRingFinishResponse_ = Client.HangoutRingFinishResponse.getDefaultInstance();
    }

    private BunchCommand()
    {
    }

    private BunchCommand(Builder paramBuilder)
    {
      super();
    }

    public static BunchCommand getDefaultInstance()
    {
      return defaultInstance;
    }

    private ByteString getRequestClientIdBytes()
    {
      Object localObject = this.requestClientId_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.requestClientId_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static Builder newBuilder()
    {
      return Builder.access$64300();
    }

    public static Builder newBuilder(BunchCommand paramBunchCommand)
    {
      return Builder.access$64300().mergeFrom(paramBunchCommand);
    }

    public final Client.ChatMessage getChatMessage()
    {
      return this.chatMessage_;
    }

    public final Client.ChatMessageRequest getChatMessageRequest()
    {
      return this.chatMessageRequest_;
    }

    public final Client.ChatMessageResponse getChatMessageResponse()
    {
      return this.chatMessageResponse_;
    }

    public final Client.ConversationJoinRequest getConversationJoinRequest()
    {
      return this.conversationJoinRequest_;
    }

    public final Client.ConversationJoinResponse getConversationJoinResponse()
    {
      return this.conversationJoinResponse_;
    }

    public final Client.ConversationListRequest getConversationListRequest()
    {
      return this.conversationListRequest_;
    }

    public final Client.ConversationListResponse getConversationListResponse()
    {
      return this.conversationListResponse_;
    }

    public final Client.ConversationPreferenceRequest getConversationPreferenceRequest()
    {
      return this.conversationPreferenceRequest_;
    }

    public final Client.ConversationPreferenceResponse getConversationPreferenceResponse()
    {
      return this.conversationPreferenceResponse_;
    }

    public final Client.ConversationRenameRequest getConversationRenameRequest()
    {
      return this.conversationRenameRequest_;
    }

    public final Client.ConversationRenameResponse getConversationRenameResponse()
    {
      return this.conversationRenameResponse_;
    }

    public final Client.NewConversationRequest getConversationRequest()
    {
      return this.conversationRequest_;
    }

    public final Client.NewConversationResponse getConversationResponse()
    {
      return this.conversationResponse_;
    }

    public final Client.ConversationSearchRequest getConversationSearchRequest()
    {
      return this.conversationSearchRequest_;
    }

    public final Client.ConversationSearchResponse getConversationSearchResponse()
    {
      return this.conversationSearchResponse_;
    }

    public final BunchCommand getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final Client.DeviceRegistrationRequest getDeviceRegistrationRequest()
    {
      return this.deviceRegistrationRequest_;
    }

    public final Client.DeviceRegistrationResponse getDeviceRegistrationResponse()
    {
      return this.deviceRegistrationResponse_;
    }

    public final Client.Error getError()
    {
      return this.error_;
    }

    public final Client.EventSearchRequest getEventSearchRequest()
    {
      return this.eventSearchRequest_;
    }

    public final Client.EventSearchResponse getEventSearchResponse()
    {
      return this.eventSearchResponse_;
    }

    public final Client.EventStreamResponse getEventSteamResponse()
    {
      return this.eventSteamResponse_;
    }

    public final Client.EventStreamRequest getEventStreamRequest()
    {
      return this.eventStreamRequest_;
    }

    public final Client.GlobalConversationPreferencesRequest getGlobalConversationPreferencesRequest()
    {
      return this.globalConversationPreferencesRequest_;
    }

    public final Client.GlobalConversationPreferencesResponse getGlobalConversationPreferencesResponse()
    {
      return this.globalConversationPreferencesResponse_;
    }

    public final Client.GroupConversationRename getGroupConversationRename()
    {
      return this.groupConversationRename_;
    }

    public final Client.HangoutInviteFinishRequest getHangoutInviteFinishRequest()
    {
      return this.hangoutInviteFinishRequest_;
    }

    public final Client.HangoutInviteFinishResponse getHangoutInviteFinishResponse()
    {
      return this.hangoutInviteFinishResponse_;
    }

    public final Client.HangoutInviteKeepAliveRequest getHangoutInviteKeepAliveRequest()
    {
      return this.hangoutInviteKeepAliveRequest_;
    }

    public final Client.HangoutInviteKeepAliveResponse getHangoutInviteKeepAliveResponse()
    {
      return this.hangoutInviteKeepAliveResponse_;
    }

    public final Client.HangoutInviteReplyRequest getHangoutInviteReplyRequest()
    {
      return this.hangoutInviteReplyRequest_;
    }

    public final Client.HangoutInviteReplyResponse getHangoutInviteReplyResponse()
    {
      return this.hangoutInviteReplyResponse_;
    }

    public final Client.HangoutInviteRequest getHangoutInviteRequest()
    {
      return this.hangoutInviteRequest_;
    }

    public final Client.HangoutInviteResponse getHangoutInviteResponse()
    {
      return this.hangoutInviteResponse_;
    }

    public final Client.HangoutRingFinishRequest getHangoutRingFinishRequest()
    {
      return this.hangoutRingFinishRequest_;
    }

    public final Client.HangoutRingFinishResponse getHangoutRingFinishResponse()
    {
      return this.hangoutRingFinishResponse_;
    }

    public final Client.InvalidateLocalCache getInvalidateLocalCache()
    {
      return this.invalidateLocalCache_;
    }

    public final Client.InviteRequest getInviteRequest()
    {
      return this.inviteRequest_;
    }

    public final Client.InviteResponse getInviteResponse()
    {
      return this.inviteResponse_;
    }

    public final Client.LeaveConversationRequest getLeaveConversationRequest()
    {
      return this.leaveConversationRequest_;
    }

    public final Client.LeaveConversationResponse getLeaveConversationResponse()
    {
      return this.leaveConversationResponse_;
    }

    public final Client.MembershipChange getMembershipChange()
    {
      return this.membershipChange_;
    }

    public final Client.Migration getMigration()
    {
      return this.migration_;
    }

    public final Client.PingRequest getPingRequest()
    {
      return this.pingRequest_;
    }

    public final Client.PingResponse getPingResponse()
    {
      return this.pingResponse_;
    }

    public final Client.Presence getPresence()
    {
      return this.presence_;
    }

    public final Client.PresenceRequest getPresenceRequest()
    {
      return this.presenceRequest_;
    }

    public final Client.PresenceResponse getPresenceResponse()
    {
      return this.presenceResponse_;
    }

    public final Client.Receipt getReceipt()
    {
      return this.receipt_;
    }

    public final Client.ReceiptRequest getReceiptRequest()
    {
      return this.receiptRequest_;
    }

    public final Client.ReceiptResponse getReceiptResponse()
    {
      return this.receiptResponse_;
    }

    public final Client.ReplyToInviteRequest getReplyToInviteRequest()
    {
      return this.replyToInviteRequest_;
    }

    public final Client.ReplyToInviteResponse getReplyToInviteResponse()
    {
      return this.replyToInviteResponse_;
    }

    public final String getRequestClientId()
    {
      Object localObject1 = this.requestClientId_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.requestClientId_ = str;
      }
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeBytesSize(2, getRequestClientIdBytes());
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeMessageSize(3, this.chatMessage_);
        if ((0x10 & this.bitField0_) == 16)
          k += CodedOutputStream.computeMessageSize(4, this.presenceRequest_);
        if ((0x80 & this.bitField0_) == 128)
          k += CodedOutputStream.computeMessageSize(5, this.typingRequest_);
        if ((0x400 & this.bitField0_) == 1024)
          k += CodedOutputStream.computeMessageSize(6, this.receipt_);
        if ((0x2000 & this.bitField0_) == 8192)
          k += CodedOutputStream.computeMessageSize(7, this.membershipChange_);
        if ((0x4000 & this.bitField0_) == 16384)
          k += CodedOutputStream.computeMessageSize(8, this.conversationRequest_);
        if ((0x8000 & this.bitField0_) == 32768)
          k += CodedOutputStream.computeMessageSize(9, this.conversationResponse_);
        if ((0x10000 & this.bitField0_) == 65536)
          k += CodedOutputStream.computeMessageSize(10, this.eventStreamRequest_);
        if ((0x20000 & this.bitField0_) == 131072)
          k += CodedOutputStream.computeMessageSize(11, this.eventSteamResponse_);
        if ((0x40000 & this.bitField0_) == 262144)
          k += CodedOutputStream.computeMessageSize(12, this.deviceRegistrationRequest_);
        if ((0x80000 & this.bitField0_) == 524288)
          k += CodedOutputStream.computeMessageSize(13, this.deviceRegistrationResponse_);
        if ((0x100000 & this.bitField0_) == 1048576)
          k += CodedOutputStream.computeMessageSize(14, this.pingRequest_);
        if ((0x200000 & this.bitField0_) == 2097152)
          k += CodedOutputStream.computeMessageSize(15, this.pingResponse_);
        if ((0x400000 & this.bitField0_) == 4194304)
          k += CodedOutputStream.computeMessageSize(16, this.conversationListRequest_);
        if ((0x800000 & this.bitField0_) == 8388608)
          k += CodedOutputStream.computeMessageSize(17, this.conversationListResponse_);
        if ((0x1000000 & this.bitField0_) == 16777216)
          k += CodedOutputStream.computeMessageSize(18, this.userCreationRequest_);
        if ((0x2000000 & this.bitField0_) == 33554432)
          k += CodedOutputStream.computeMessageSize(19, this.userCreationResponse_);
        if ((0x4000000 & this.bitField0_) == 67108864)
          k += CodedOutputStream.computeMessageSize(20, this.error_);
        if ((0x8000000 & this.bitField0_) == 134217728)
          k += CodedOutputStream.computeMessageSize(21, this.inviteRequest_);
        if ((0x10000000 & this.bitField0_) == 268435456)
          k += CodedOutputStream.computeMessageSize(22, this.leaveConversationRequest_);
        if ((0x20000000 & this.bitField0_) == 536870912)
          k += CodedOutputStream.computeMessageSize(23, this.leaveConversationResponse_);
        if ((0x1 & this.bitField1_) == 1)
          k += CodedOutputStream.computeMessageSize(24, this.groupConversationRename_);
        if ((0x10 & this.bitField1_) == 16)
          k += CodedOutputStream.computeMessageSize(25, this.migration_);
        if ((0x20 & this.bitField1_) == 32)
          k += CodedOutputStream.computeMessageSize(26, this.conversationPreferenceRequest_);
        if ((0x40 & this.bitField1_) == 64)
          k += CodedOutputStream.computeMessageSize(27, this.conversationPreferenceResponse_);
        if ((0x80 & this.bitField1_) == 128)
          k += CodedOutputStream.computeMessageSize(28, this.replyToInviteRequest_);
        if ((0x100 & this.bitField1_) == 256)
          k += CodedOutputStream.computeMessageSize(29, this.setAclsRequest_);
        if ((0x200 & this.bitField1_) == 512)
          k += CodedOutputStream.computeMessageSize(30, this.invalidateLocalCache_);
        if ((0x400 & this.bitField1_) == 1024)
          k += CodedOutputStream.computeMessageSize(31, this.inviteResponse_);
        if ((0x800 & this.bitField1_) == 2048)
          k += CodedOutputStream.computeMessageSize(33, this.replyToInviteResponse_);
        if ((0x1000 & this.bitField1_) == 4096)
          k += CodedOutputStream.computeMessageSize(34, this.setAclsResponse_);
        if ((0x2000 & this.bitField1_) == 8192)
          k += CodedOutputStream.computeMessageSize(35, this.userInfoRequest_);
        if ((0x4000 & this.bitField1_) == 16384)
          k += CodedOutputStream.computeMessageSize(36, this.userInfoResponse_);
        if ((0x8000 & this.bitField1_) == 32768)
          k += CodedOutputStream.computeMessageSize(37, this.conversationSearchRequest_);
        if ((0x10000 & this.bitField1_) == 65536)
          k += CodedOutputStream.computeMessageSize(38, this.conversationSearchResponse_);
        if ((0x20 & this.bitField0_) == 32)
          k += CodedOutputStream.computeMessageSize(39, this.presenceResponse_);
        if ((0x40 & this.bitField0_) == 64)
          k += CodedOutputStream.computeMessageSize(40, this.presence_);
        if ((0x100 & this.bitField0_) == 256)
          k += CodedOutputStream.computeMessageSize(41, this.typingResponse_);
        if ((0x200 & this.bitField0_) == 512)
          k += CodedOutputStream.computeMessageSize(42, this.typing_);
        if ((0x20000 & this.bitField1_) == 131072)
          k += CodedOutputStream.computeMessageSize(43, this.eventSearchRequest_);
        if ((0x40000 & this.bitField1_) == 262144)
          k += CodedOutputStream.computeMessageSize(44, this.eventSearchResponse_);
        if ((0x40000000 & this.bitField0_) == 1073741824)
          k += CodedOutputStream.computeMessageSize(45, this.conversationRenameRequest_);
        if ((0x80000000 & this.bitField0_) == -2147483648)
          k += CodedOutputStream.computeMessageSize(46, this.conversationRenameResponse_);
        if ((0x4 & this.bitField0_) == 4)
          k += CodedOutputStream.computeMessageSize(47, this.chatMessageRequest_);
        if ((0x8 & this.bitField0_) == 8)
          k += CodedOutputStream.computeMessageSize(48, this.chatMessageResponse_);
        if ((0x800 & this.bitField0_) == 2048)
          k += CodedOutputStream.computeMessageSize(49, this.receiptRequest_);
        if ((0x1000 & this.bitField0_) == 4096)
          k += CodedOutputStream.computeMessageSize(50, this.receiptResponse_);
        if ((0x80000 & this.bitField1_) == 524288)
          k += CodedOutputStream.computeMessageSize(51, this.suggestionsRequest_);
        if ((0x100000 & this.bitField1_) == 1048576)
          k += CodedOutputStream.computeMessageSize(52, this.suggestionsResponse_);
        if ((0x2 & this.bitField1_) == 2)
          k += CodedOutputStream.computeMessageSize(53, this.tileEventRequest_);
        if ((0x4 & this.bitField1_) == 4)
          k += CodedOutputStream.computeMessageSize(54, this.tileEventResponse_);
        if ((0x8 & this.bitField1_) == 8)
          k += CodedOutputStream.computeMessageSize(55, this.tileEvent_);
        if ((0x200000 & this.bitField1_) == 2097152)
          k += CodedOutputStream.computeMessageSize(56, this.globalConversationPreferencesRequest_);
        if ((0x400000 & this.bitField1_) == 4194304)
          k += CodedOutputStream.computeMessageSize(57, this.globalConversationPreferencesResponse_);
        if ((0x800000 & this.bitField1_) == 8388608)
          k += CodedOutputStream.computeMessageSize(58, this.conversationJoinRequest_);
        if ((0x1000000 & this.bitField1_) == 16777216)
          k += CodedOutputStream.computeMessageSize(59, this.conversationJoinResponse_);
        if ((0x2000000 & this.bitField1_) == 33554432)
          k += CodedOutputStream.computeMessageSize(60, this.hangoutInviteRequest_);
        if ((0x4000000 & this.bitField1_) == 67108864)
          k += CodedOutputStream.computeMessageSize(61, this.hangoutInviteResponse_);
        if ((0x8000000 & this.bitField1_) == 134217728)
          k += CodedOutputStream.computeMessageSize(62, this.hangoutInviteKeepAliveRequest_);
        if ((0x10000000 & this.bitField1_) == 268435456)
          k += CodedOutputStream.computeMessageSize(63, this.hangoutInviteKeepAliveResponse_);
        if ((0x20000000 & this.bitField1_) == 536870912)
          k += CodedOutputStream.computeMessageSize(64, this.hangoutInviteReplyRequest_);
        if ((0x40000000 & this.bitField1_) == 1073741824)
          k += CodedOutputStream.computeMessageSize(65, this.hangoutInviteReplyResponse_);
        if ((0x80000000 & this.bitField1_) == -2147483648)
          k += CodedOutputStream.computeMessageSize(66, this.hangoutInviteFinishRequest_);
        if ((0x1 & this.bitField2_) == 1)
          k += CodedOutputStream.computeMessageSize(67, this.hangoutInviteFinishResponse_);
        if ((0x2 & this.bitField2_) == 2)
          k += CodedOutputStream.computeMessageSize(68, this.hangoutRingFinishRequest_);
        if ((0x4 & this.bitField2_) == 4)
          k += CodedOutputStream.computeMessageSize(69, this.hangoutRingFinishResponse_);
        this.memoizedSerializedSize = k;
      }
    }

    public final Client.SetAclsRequest getSetAclsRequest()
    {
      return this.setAclsRequest_;
    }

    public final Client.SetAclsResponse getSetAclsResponse()
    {
      return this.setAclsResponse_;
    }

    public final Client.SuggestionsRequest getSuggestionsRequest()
    {
      return this.suggestionsRequest_;
    }

    public final Client.SuggestionsResponse getSuggestionsResponse()
    {
      return this.suggestionsResponse_;
    }

    public final Client.TileEvent getTileEvent()
    {
      return this.tileEvent_;
    }

    public final Client.TileEventRequest getTileEventRequest()
    {
      return this.tileEventRequest_;
    }

    public final Client.TileEventResponse getTileEventResponse()
    {
      return this.tileEventResponse_;
    }

    public final Client.Typing getTyping()
    {
      return this.typing_;
    }

    public final Client.TypingRequest getTypingRequest()
    {
      return this.typingRequest_;
    }

    public final Client.TypingResponse getTypingResponse()
    {
      return this.typingResponse_;
    }

    public final Client.UserCreationRequest getUserCreationRequest()
    {
      return this.userCreationRequest_;
    }

    public final Client.UserCreationResponse getUserCreationResponse()
    {
      return this.userCreationResponse_;
    }

    public final Client.UserInfoRequest getUserInfoRequest()
    {
      return this.userInfoRequest_;
    }

    public final Client.UserInfoResponse getUserInfoResponse()
    {
      return this.userInfoResponse_;
    }

    public final boolean hasChatMessage()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasChatMessageRequest()
    {
      if ((0x4 & this.bitField0_) == 4);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasChatMessageResponse()
    {
      if ((0x8 & this.bitField0_) == 8);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasConversationJoinRequest()
    {
      if ((0x800000 & this.bitField1_) == 8388608);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasConversationJoinResponse()
    {
      if ((0x1000000 & this.bitField1_) == 16777216);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasConversationListRequest()
    {
      if ((0x400000 & this.bitField0_) == 4194304);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasConversationListResponse()
    {
      if ((0x800000 & this.bitField0_) == 8388608);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasConversationPreferenceRequest()
    {
      if ((0x20 & this.bitField1_) == 32);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasConversationPreferenceResponse()
    {
      if ((0x40 & this.bitField1_) == 64);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasConversationRenameRequest()
    {
      if ((0x40000000 & this.bitField0_) == 1073741824);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasConversationRenameResponse()
    {
      if ((0x80000000 & this.bitField0_) == -2147483648);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasConversationRequest()
    {
      if ((0x4000 & this.bitField0_) == 16384);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasConversationResponse()
    {
      if ((0x8000 & this.bitField0_) == 32768);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasConversationSearchRequest()
    {
      if ((0x8000 & this.bitField1_) == 32768);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasConversationSearchResponse()
    {
      if ((0x10000 & this.bitField1_) == 65536);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasDeviceRegistrationRequest()
    {
      if ((0x40000 & this.bitField0_) == 262144);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasDeviceRegistrationResponse()
    {
      if ((0x80000 & this.bitField0_) == 524288);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasError()
    {
      if ((0x4000000 & this.bitField0_) == 67108864);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasEventSearchRequest()
    {
      if ((0x20000 & this.bitField1_) == 131072);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasEventSearchResponse()
    {
      if ((0x40000 & this.bitField1_) == 262144);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasEventSteamResponse()
    {
      if ((0x20000 & this.bitField0_) == 131072);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasEventStreamRequest()
    {
      if ((0x10000 & this.bitField0_) == 65536);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasGlobalConversationPreferencesRequest()
    {
      if ((0x200000 & this.bitField1_) == 2097152);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasGlobalConversationPreferencesResponse()
    {
      if ((0x400000 & this.bitField1_) == 4194304);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasGroupConversationRename()
    {
      int i = 1;
      if ((0x1 & this.bitField1_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean hasHangoutInviteFinishRequest()
    {
      if ((0x80000000 & this.bitField1_) == -2147483648);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasHangoutInviteFinishResponse()
    {
      int i = 1;
      if ((0x1 & this.bitField2_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean hasHangoutInviteKeepAliveRequest()
    {
      if ((0x8000000 & this.bitField1_) == 134217728);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasHangoutInviteKeepAliveResponse()
    {
      if ((0x10000000 & this.bitField1_) == 268435456);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasHangoutInviteReplyRequest()
    {
      if ((0x20000000 & this.bitField1_) == 536870912);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasHangoutInviteReplyResponse()
    {
      if ((0x40000000 & this.bitField1_) == 1073741824);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasHangoutInviteRequest()
    {
      if ((0x2000000 & this.bitField1_) == 33554432);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasHangoutInviteResponse()
    {
      if ((0x4000000 & this.bitField1_) == 67108864);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasHangoutRingFinishRequest()
    {
      if ((0x2 & this.bitField2_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasHangoutRingFinishResponse()
    {
      if ((0x4 & this.bitField2_) == 4);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasInvalidateLocalCache()
    {
      if ((0x200 & this.bitField1_) == 512);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasInviteRequest()
    {
      if ((0x8000000 & this.bitField0_) == 134217728);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasInviteResponse()
    {
      if ((0x400 & this.bitField1_) == 1024);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasLeaveConversationRequest()
    {
      if ((0x10000000 & this.bitField0_) == 268435456);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasLeaveConversationResponse()
    {
      if ((0x20000000 & this.bitField0_) == 536870912);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasMembershipChange()
    {
      if ((0x2000 & this.bitField0_) == 8192);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasMigration()
    {
      if ((0x10 & this.bitField1_) == 16);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasPingRequest()
    {
      if ((0x100000 & this.bitField0_) == 1048576);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasPingResponse()
    {
      if ((0x200000 & this.bitField0_) == 2097152);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasPresence()
    {
      if ((0x40 & this.bitField0_) == 64);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasPresenceRequest()
    {
      if ((0x10 & this.bitField0_) == 16);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasPresenceResponse()
    {
      if ((0x20 & this.bitField0_) == 32);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasReceipt()
    {
      if ((0x400 & this.bitField0_) == 1024);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasReceiptRequest()
    {
      if ((0x800 & this.bitField0_) == 2048);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasReceiptResponse()
    {
      if ((0x1000 & this.bitField0_) == 4096);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasReplyToInviteRequest()
    {
      if ((0x80 & this.bitField1_) == 128);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasReplyToInviteResponse()
    {
      if ((0x800 & this.bitField1_) == 2048);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasRequestClientId()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean hasSetAclsRequest()
    {
      if ((0x100 & this.bitField1_) == 256);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasSetAclsResponse()
    {
      if ((0x1000 & this.bitField1_) == 4096);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasSuggestionsRequest()
    {
      if ((0x80000 & this.bitField1_) == 524288);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasSuggestionsResponse()
    {
      if ((0x100000 & this.bitField1_) == 1048576);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasTileEvent()
    {
      if ((0x8 & this.bitField1_) == 8);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasTileEventRequest()
    {
      if ((0x2 & this.bitField1_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasTileEventResponse()
    {
      if ((0x4 & this.bitField1_) == 4);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasTyping()
    {
      if ((0x200 & this.bitField0_) == 512);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasTypingRequest()
    {
      if ((0x80 & this.bitField0_) == 128);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasTypingResponse()
    {
      if ((0x100 & this.bitField0_) == 256);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasUserCreationRequest()
    {
      if ((0x1000000 & this.bitField0_) == 16777216);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasUserCreationResponse()
    {
      if ((0x2000000 & this.bitField0_) == 33554432);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasUserInfoRequest()
    {
      if ((0x2000 & this.bitField1_) == 8192);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasUserInfoResponse()
    {
      if ((0x4000 & this.bitField1_) == 16384);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeBytes(2, getRequestClientIdBytes());
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeMessage(3, this.chatMessage_);
      if ((0x10 & this.bitField0_) == 16)
        paramCodedOutputStream.writeMessage(4, this.presenceRequest_);
      if ((0x80 & this.bitField0_) == 128)
        paramCodedOutputStream.writeMessage(5, this.typingRequest_);
      if ((0x400 & this.bitField0_) == 1024)
        paramCodedOutputStream.writeMessage(6, this.receipt_);
      if ((0x2000 & this.bitField0_) == 8192)
        paramCodedOutputStream.writeMessage(7, this.membershipChange_);
      if ((0x4000 & this.bitField0_) == 16384)
        paramCodedOutputStream.writeMessage(8, this.conversationRequest_);
      if ((0x8000 & this.bitField0_) == 32768)
        paramCodedOutputStream.writeMessage(9, this.conversationResponse_);
      if ((0x10000 & this.bitField0_) == 65536)
        paramCodedOutputStream.writeMessage(10, this.eventStreamRequest_);
      if ((0x20000 & this.bitField0_) == 131072)
        paramCodedOutputStream.writeMessage(11, this.eventSteamResponse_);
      if ((0x40000 & this.bitField0_) == 262144)
        paramCodedOutputStream.writeMessage(12, this.deviceRegistrationRequest_);
      if ((0x80000 & this.bitField0_) == 524288)
        paramCodedOutputStream.writeMessage(13, this.deviceRegistrationResponse_);
      if ((0x100000 & this.bitField0_) == 1048576)
        paramCodedOutputStream.writeMessage(14, this.pingRequest_);
      if ((0x200000 & this.bitField0_) == 2097152)
        paramCodedOutputStream.writeMessage(15, this.pingResponse_);
      if ((0x400000 & this.bitField0_) == 4194304)
        paramCodedOutputStream.writeMessage(16, this.conversationListRequest_);
      if ((0x800000 & this.bitField0_) == 8388608)
        paramCodedOutputStream.writeMessage(17, this.conversationListResponse_);
      if ((0x1000000 & this.bitField0_) == 16777216)
        paramCodedOutputStream.writeMessage(18, this.userCreationRequest_);
      if ((0x2000000 & this.bitField0_) == 33554432)
        paramCodedOutputStream.writeMessage(19, this.userCreationResponse_);
      if ((0x4000000 & this.bitField0_) == 67108864)
        paramCodedOutputStream.writeMessage(20, this.error_);
      if ((0x8000000 & this.bitField0_) == 134217728)
        paramCodedOutputStream.writeMessage(21, this.inviteRequest_);
      if ((0x10000000 & this.bitField0_) == 268435456)
        paramCodedOutputStream.writeMessage(22, this.leaveConversationRequest_);
      if ((0x20000000 & this.bitField0_) == 536870912)
        paramCodedOutputStream.writeMessage(23, this.leaveConversationResponse_);
      if ((0x1 & this.bitField1_) == 1)
        paramCodedOutputStream.writeMessage(24, this.groupConversationRename_);
      if ((0x10 & this.bitField1_) == 16)
        paramCodedOutputStream.writeMessage(25, this.migration_);
      if ((0x20 & this.bitField1_) == 32)
        paramCodedOutputStream.writeMessage(26, this.conversationPreferenceRequest_);
      if ((0x40 & this.bitField1_) == 64)
        paramCodedOutputStream.writeMessage(27, this.conversationPreferenceResponse_);
      if ((0x80 & this.bitField1_) == 128)
        paramCodedOutputStream.writeMessage(28, this.replyToInviteRequest_);
      if ((0x100 & this.bitField1_) == 256)
        paramCodedOutputStream.writeMessage(29, this.setAclsRequest_);
      if ((0x200 & this.bitField1_) == 512)
        paramCodedOutputStream.writeMessage(30, this.invalidateLocalCache_);
      if ((0x400 & this.bitField1_) == 1024)
        paramCodedOutputStream.writeMessage(31, this.inviteResponse_);
      if ((0x800 & this.bitField1_) == 2048)
        paramCodedOutputStream.writeMessage(33, this.replyToInviteResponse_);
      if ((0x1000 & this.bitField1_) == 4096)
        paramCodedOutputStream.writeMessage(34, this.setAclsResponse_);
      if ((0x2000 & this.bitField1_) == 8192)
        paramCodedOutputStream.writeMessage(35, this.userInfoRequest_);
      if ((0x4000 & this.bitField1_) == 16384)
        paramCodedOutputStream.writeMessage(36, this.userInfoResponse_);
      if ((0x8000 & this.bitField1_) == 32768)
        paramCodedOutputStream.writeMessage(37, this.conversationSearchRequest_);
      if ((0x10000 & this.bitField1_) == 65536)
        paramCodedOutputStream.writeMessage(38, this.conversationSearchResponse_);
      if ((0x20 & this.bitField0_) == 32)
        paramCodedOutputStream.writeMessage(39, this.presenceResponse_);
      if ((0x40 & this.bitField0_) == 64)
        paramCodedOutputStream.writeMessage(40, this.presence_);
      if ((0x100 & this.bitField0_) == 256)
        paramCodedOutputStream.writeMessage(41, this.typingResponse_);
      if ((0x200 & this.bitField0_) == 512)
        paramCodedOutputStream.writeMessage(42, this.typing_);
      if ((0x20000 & this.bitField1_) == 131072)
        paramCodedOutputStream.writeMessage(43, this.eventSearchRequest_);
      if ((0x40000 & this.bitField1_) == 262144)
        paramCodedOutputStream.writeMessage(44, this.eventSearchResponse_);
      if ((0x40000000 & this.bitField0_) == 1073741824)
        paramCodedOutputStream.writeMessage(45, this.conversationRenameRequest_);
      if ((0x80000000 & this.bitField0_) == -2147483648)
        paramCodedOutputStream.writeMessage(46, this.conversationRenameResponse_);
      if ((0x4 & this.bitField0_) == 4)
        paramCodedOutputStream.writeMessage(47, this.chatMessageRequest_);
      if ((0x8 & this.bitField0_) == 8)
        paramCodedOutputStream.writeMessage(48, this.chatMessageResponse_);
      if ((0x800 & this.bitField0_) == 2048)
        paramCodedOutputStream.writeMessage(49, this.receiptRequest_);
      if ((0x1000 & this.bitField0_) == 4096)
        paramCodedOutputStream.writeMessage(50, this.receiptResponse_);
      if ((0x80000 & this.bitField1_) == 524288)
        paramCodedOutputStream.writeMessage(51, this.suggestionsRequest_);
      if ((0x100000 & this.bitField1_) == 1048576)
        paramCodedOutputStream.writeMessage(52, this.suggestionsResponse_);
      if ((0x2 & this.bitField1_) == 2)
        paramCodedOutputStream.writeMessage(53, this.tileEventRequest_);
      if ((0x4 & this.bitField1_) == 4)
        paramCodedOutputStream.writeMessage(54, this.tileEventResponse_);
      if ((0x8 & this.bitField1_) == 8)
        paramCodedOutputStream.writeMessage(55, this.tileEvent_);
      if ((0x200000 & this.bitField1_) == 2097152)
        paramCodedOutputStream.writeMessage(56, this.globalConversationPreferencesRequest_);
      if ((0x400000 & this.bitField1_) == 4194304)
        paramCodedOutputStream.writeMessage(57, this.globalConversationPreferencesResponse_);
      if ((0x800000 & this.bitField1_) == 8388608)
        paramCodedOutputStream.writeMessage(58, this.conversationJoinRequest_);
      if ((0x1000000 & this.bitField1_) == 16777216)
        paramCodedOutputStream.writeMessage(59, this.conversationJoinResponse_);
      if ((0x2000000 & this.bitField1_) == 33554432)
        paramCodedOutputStream.writeMessage(60, this.hangoutInviteRequest_);
      if ((0x4000000 & this.bitField1_) == 67108864)
        paramCodedOutputStream.writeMessage(61, this.hangoutInviteResponse_);
      if ((0x8000000 & this.bitField1_) == 134217728)
        paramCodedOutputStream.writeMessage(62, this.hangoutInviteKeepAliveRequest_);
      if ((0x10000000 & this.bitField1_) == 268435456)
        paramCodedOutputStream.writeMessage(63, this.hangoutInviteKeepAliveResponse_);
      if ((0x20000000 & this.bitField1_) == 536870912)
        paramCodedOutputStream.writeMessage(64, this.hangoutInviteReplyRequest_);
      if ((0x40000000 & this.bitField1_) == 1073741824)
        paramCodedOutputStream.writeMessage(65, this.hangoutInviteReplyResponse_);
      if ((0x80000000 & this.bitField1_) == -2147483648)
        paramCodedOutputStream.writeMessage(66, this.hangoutInviteFinishRequest_);
      if ((0x1 & this.bitField2_) == 1)
        paramCodedOutputStream.writeMessage(67, this.hangoutInviteFinishResponse_);
      if ((0x2 & this.bitField2_) == 2)
        paramCodedOutputStream.writeMessage(68, this.hangoutRingFinishRequest_);
      if ((0x4 & this.bitField2_) == 4)
        paramCodedOutputStream.writeMessage(69, this.hangoutRingFinishResponse_);
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Client.BunchCommand, Builder>
      implements Client.BunchCommandOrBuilder
    {
      private int bitField0_;
      private int bitField1_;
      private int bitField2_;
      private Client.ChatMessageRequest chatMessageRequest_ = Client.ChatMessageRequest.getDefaultInstance();
      private Client.ChatMessageResponse chatMessageResponse_ = Client.ChatMessageResponse.getDefaultInstance();
      private Client.ChatMessage chatMessage_ = Client.ChatMessage.getDefaultInstance();
      private Client.ConversationJoinRequest conversationJoinRequest_ = Client.ConversationJoinRequest.getDefaultInstance();
      private Client.ConversationJoinResponse conversationJoinResponse_ = Client.ConversationJoinResponse.getDefaultInstance();
      private Client.ConversationListRequest conversationListRequest_ = Client.ConversationListRequest.getDefaultInstance();
      private Client.ConversationListResponse conversationListResponse_ = Client.ConversationListResponse.getDefaultInstance();
      private Client.ConversationPreferenceRequest conversationPreferenceRequest_ = Client.ConversationPreferenceRequest.getDefaultInstance();
      private Client.ConversationPreferenceResponse conversationPreferenceResponse_ = Client.ConversationPreferenceResponse.getDefaultInstance();
      private Client.ConversationRenameRequest conversationRenameRequest_ = Client.ConversationRenameRequest.getDefaultInstance();
      private Client.ConversationRenameResponse conversationRenameResponse_ = Client.ConversationRenameResponse.getDefaultInstance();
      private Client.NewConversationRequest conversationRequest_ = Client.NewConversationRequest.getDefaultInstance();
      private Client.NewConversationResponse conversationResponse_ = Client.NewConversationResponse.getDefaultInstance();
      private Client.ConversationSearchRequest conversationSearchRequest_ = Client.ConversationSearchRequest.getDefaultInstance();
      private Client.ConversationSearchResponse conversationSearchResponse_ = Client.ConversationSearchResponse.getDefaultInstance();
      private Client.DeviceRegistrationRequest deviceRegistrationRequest_ = Client.DeviceRegistrationRequest.getDefaultInstance();
      private Client.DeviceRegistrationResponse deviceRegistrationResponse_ = Client.DeviceRegistrationResponse.getDefaultInstance();
      private Client.Error error_ = Client.Error.getDefaultInstance();
      private Client.EventSearchRequest eventSearchRequest_ = Client.EventSearchRequest.getDefaultInstance();
      private Client.EventSearchResponse eventSearchResponse_ = Client.EventSearchResponse.getDefaultInstance();
      private Client.EventStreamResponse eventSteamResponse_ = Client.EventStreamResponse.getDefaultInstance();
      private Client.EventStreamRequest eventStreamRequest_ = Client.EventStreamRequest.getDefaultInstance();
      private Client.GlobalConversationPreferencesRequest globalConversationPreferencesRequest_ = Client.GlobalConversationPreferencesRequest.getDefaultInstance();
      private Client.GlobalConversationPreferencesResponse globalConversationPreferencesResponse_ = Client.GlobalConversationPreferencesResponse.getDefaultInstance();
      private Client.GroupConversationRename groupConversationRename_ = Client.GroupConversationRename.getDefaultInstance();
      private Client.HangoutInviteFinishRequest hangoutInviteFinishRequest_ = Client.HangoutInviteFinishRequest.getDefaultInstance();
      private Client.HangoutInviteFinishResponse hangoutInviteFinishResponse_ = Client.HangoutInviteFinishResponse.getDefaultInstance();
      private Client.HangoutInviteKeepAliveRequest hangoutInviteKeepAliveRequest_ = Client.HangoutInviteKeepAliveRequest.getDefaultInstance();
      private Client.HangoutInviteKeepAliveResponse hangoutInviteKeepAliveResponse_ = Client.HangoutInviteKeepAliveResponse.getDefaultInstance();
      private Client.HangoutInviteReplyRequest hangoutInviteReplyRequest_ = Client.HangoutInviteReplyRequest.getDefaultInstance();
      private Client.HangoutInviteReplyResponse hangoutInviteReplyResponse_ = Client.HangoutInviteReplyResponse.getDefaultInstance();
      private Client.HangoutInviteRequest hangoutInviteRequest_ = Client.HangoutInviteRequest.getDefaultInstance();
      private Client.HangoutInviteResponse hangoutInviteResponse_ = Client.HangoutInviteResponse.getDefaultInstance();
      private Client.HangoutRingFinishRequest hangoutRingFinishRequest_ = Client.HangoutRingFinishRequest.getDefaultInstance();
      private Client.HangoutRingFinishResponse hangoutRingFinishResponse_ = Client.HangoutRingFinishResponse.getDefaultInstance();
      private Client.InvalidateLocalCache invalidateLocalCache_ = Client.InvalidateLocalCache.getDefaultInstance();
      private Client.InviteRequest inviteRequest_ = Client.InviteRequest.getDefaultInstance();
      private Client.InviteResponse inviteResponse_ = Client.InviteResponse.getDefaultInstance();
      private Client.LeaveConversationRequest leaveConversationRequest_ = Client.LeaveConversationRequest.getDefaultInstance();
      private Client.LeaveConversationResponse leaveConversationResponse_ = Client.LeaveConversationResponse.getDefaultInstance();
      private Client.MembershipChange membershipChange_ = Client.MembershipChange.getDefaultInstance();
      private Client.Migration migration_ = Client.Migration.getDefaultInstance();
      private Client.PingRequest pingRequest_ = Client.PingRequest.getDefaultInstance();
      private Client.PingResponse pingResponse_ = Client.PingResponse.getDefaultInstance();
      private Client.PresenceRequest presenceRequest_ = Client.PresenceRequest.getDefaultInstance();
      private Client.PresenceResponse presenceResponse_ = Client.PresenceResponse.getDefaultInstance();
      private Client.Presence presence_ = Client.Presence.getDefaultInstance();
      private Client.ReceiptRequest receiptRequest_ = Client.ReceiptRequest.getDefaultInstance();
      private Client.ReceiptResponse receiptResponse_ = Client.ReceiptResponse.getDefaultInstance();
      private Client.Receipt receipt_ = Client.Receipt.getDefaultInstance();
      private Client.ReplyToInviteRequest replyToInviteRequest_ = Client.ReplyToInviteRequest.getDefaultInstance();
      private Client.ReplyToInviteResponse replyToInviteResponse_ = Client.ReplyToInviteResponse.getDefaultInstance();
      private Object requestClientId_ = "";
      private Client.SetAclsRequest setAclsRequest_ = Client.SetAclsRequest.getDefaultInstance();
      private Client.SetAclsResponse setAclsResponse_ = Client.SetAclsResponse.getDefaultInstance();
      private Client.SuggestionsRequest suggestionsRequest_ = Client.SuggestionsRequest.getDefaultInstance();
      private Client.SuggestionsResponse suggestionsResponse_ = Client.SuggestionsResponse.getDefaultInstance();
      private Client.TileEventRequest tileEventRequest_ = Client.TileEventRequest.getDefaultInstance();
      private Client.TileEventResponse tileEventResponse_ = Client.TileEventResponse.getDefaultInstance();
      private Client.TileEvent tileEvent_ = Client.TileEvent.getDefaultInstance();
      private Client.TypingRequest typingRequest_ = Client.TypingRequest.getDefaultInstance();
      private Client.TypingResponse typingResponse_ = Client.TypingResponse.getDefaultInstance();
      private Client.Typing typing_ = Client.Typing.getDefaultInstance();
      private Client.UserCreationRequest userCreationRequest_ = Client.UserCreationRequest.getDefaultInstance();
      private Client.UserCreationResponse userCreationResponse_ = Client.UserCreationResponse.getDefaultInstance();
      private Client.UserInfoRequest userInfoRequest_ = Client.UserInfoRequest.getDefaultInstance();
      private Client.UserInfoResponse userInfoResponse_ = Client.UserInfoResponse.getDefaultInstance();

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 18:
            this.bitField0_ = (0x1 | this.bitField0_);
            this.requestClientId_ = paramCodedInputStream.readBytes();
            break;
          case 26:
            Client.ChatMessage.Builder localBuilder65 = Client.ChatMessage.newBuilder();
            if (hasChatMessage())
              localBuilder65.mergeFrom(getChatMessage());
            paramCodedInputStream.readMessage(localBuilder65, paramExtensionRegistryLite);
            setChatMessage(localBuilder65.buildPartial());
            break;
          case 34:
            Client.PresenceRequest.Builder localBuilder64 = Client.PresenceRequest.newBuilder();
            if (hasPresenceRequest())
              localBuilder64.mergeFrom(getPresenceRequest());
            paramCodedInputStream.readMessage(localBuilder64, paramExtensionRegistryLite);
            setPresenceRequest(localBuilder64.buildPartial());
            break;
          case 42:
            Client.TypingRequest.Builder localBuilder63 = Client.TypingRequest.newBuilder();
            if (hasTypingRequest())
              localBuilder63.mergeFrom(getTypingRequest());
            paramCodedInputStream.readMessage(localBuilder63, paramExtensionRegistryLite);
            setTypingRequest(localBuilder63.buildPartial());
            break;
          case 50:
            Client.Receipt.Builder localBuilder62 = Client.Receipt.newBuilder();
            if (hasReceipt())
              localBuilder62.mergeFrom(getReceipt());
            paramCodedInputStream.readMessage(localBuilder62, paramExtensionRegistryLite);
            setReceipt(localBuilder62.buildPartial());
            break;
          case 58:
            Client.MembershipChange.Builder localBuilder61 = Client.MembershipChange.newBuilder();
            if (hasMembershipChange())
              localBuilder61.mergeFrom(getMembershipChange());
            paramCodedInputStream.readMessage(localBuilder61, paramExtensionRegistryLite);
            setMembershipChange(localBuilder61.buildPartial());
            break;
          case 66:
            Client.NewConversationRequest.Builder localBuilder60 = Client.NewConversationRequest.newBuilder();
            if (hasConversationRequest())
              localBuilder60.mergeFrom(getConversationRequest());
            paramCodedInputStream.readMessage(localBuilder60, paramExtensionRegistryLite);
            setConversationRequest(localBuilder60.buildPartial());
            break;
          case 74:
            Client.NewConversationResponse.Builder localBuilder59 = Client.NewConversationResponse.newBuilder();
            if (hasConversationResponse())
              localBuilder59.mergeFrom(getConversationResponse());
            paramCodedInputStream.readMessage(localBuilder59, paramExtensionRegistryLite);
            setConversationResponse(localBuilder59.buildPartial());
            break;
          case 82:
            Client.EventStreamRequest.Builder localBuilder58 = Client.EventStreamRequest.newBuilder();
            if (hasEventStreamRequest())
              localBuilder58.mergeFrom(getEventStreamRequest());
            paramCodedInputStream.readMessage(localBuilder58, paramExtensionRegistryLite);
            setEventStreamRequest(localBuilder58.buildPartial());
            break;
          case 90:
            Client.EventStreamResponse.Builder localBuilder57 = Client.EventStreamResponse.newBuilder();
            if (hasEventSteamResponse())
              localBuilder57.mergeFrom(getEventSteamResponse());
            paramCodedInputStream.readMessage(localBuilder57, paramExtensionRegistryLite);
            setEventSteamResponse(localBuilder57.buildPartial());
            break;
          case 98:
            Client.DeviceRegistrationRequest.Builder localBuilder56 = Client.DeviceRegistrationRequest.newBuilder();
            if (hasDeviceRegistrationRequest())
              localBuilder56.mergeFrom(getDeviceRegistrationRequest());
            paramCodedInputStream.readMessage(localBuilder56, paramExtensionRegistryLite);
            setDeviceRegistrationRequest(localBuilder56.buildPartial());
            break;
          case 106:
            Client.DeviceRegistrationResponse.Builder localBuilder55 = Client.DeviceRegistrationResponse.newBuilder();
            if (hasDeviceRegistrationResponse())
              localBuilder55.mergeFrom(getDeviceRegistrationResponse());
            paramCodedInputStream.readMessage(localBuilder55, paramExtensionRegistryLite);
            setDeviceRegistrationResponse(localBuilder55.buildPartial());
            break;
          case 114:
            Client.PingRequest.Builder localBuilder54 = Client.PingRequest.newBuilder();
            if (hasPingRequest())
              localBuilder54.mergeFrom(getPingRequest());
            paramCodedInputStream.readMessage(localBuilder54, paramExtensionRegistryLite);
            setPingRequest(localBuilder54.buildPartial());
            break;
          case 122:
            Client.PingResponse.Builder localBuilder53 = Client.PingResponse.newBuilder();
            if (hasPingResponse())
              localBuilder53.mergeFrom(getPingResponse());
            paramCodedInputStream.readMessage(localBuilder53, paramExtensionRegistryLite);
            setPingResponse(localBuilder53.buildPartial());
            break;
          case 130:
            Client.ConversationListRequest.Builder localBuilder52 = Client.ConversationListRequest.newBuilder();
            if (hasConversationListRequest())
              localBuilder52.mergeFrom(getConversationListRequest());
            paramCodedInputStream.readMessage(localBuilder52, paramExtensionRegistryLite);
            setConversationListRequest(localBuilder52.buildPartial());
            break;
          case 138:
            Client.ConversationListResponse.Builder localBuilder51 = Client.ConversationListResponse.newBuilder();
            if (hasConversationListResponse())
              localBuilder51.mergeFrom(getConversationListResponse());
            paramCodedInputStream.readMessage(localBuilder51, paramExtensionRegistryLite);
            setConversationListResponse(localBuilder51.buildPartial());
            break;
          case 146:
            Client.UserCreationRequest.Builder localBuilder50 = Client.UserCreationRequest.newBuilder();
            if (hasUserCreationRequest())
              localBuilder50.mergeFrom(getUserCreationRequest());
            paramCodedInputStream.readMessage(localBuilder50, paramExtensionRegistryLite);
            setUserCreationRequest(localBuilder50.buildPartial());
            break;
          case 154:
            Client.UserCreationResponse.Builder localBuilder49 = Client.UserCreationResponse.newBuilder();
            if (hasUserCreationResponse())
              localBuilder49.mergeFrom(getUserCreationResponse());
            paramCodedInputStream.readMessage(localBuilder49, paramExtensionRegistryLite);
            setUserCreationResponse(localBuilder49.buildPartial());
            break;
          case 162:
            Client.Error.Builder localBuilder48 = Client.Error.newBuilder();
            if (hasError())
              localBuilder48.mergeFrom(getError());
            paramCodedInputStream.readMessage(localBuilder48, paramExtensionRegistryLite);
            setError(localBuilder48.buildPartial());
            break;
          case 170:
            Client.InviteRequest.Builder localBuilder47 = Client.InviteRequest.newBuilder();
            if (hasInviteRequest())
              localBuilder47.mergeFrom(getInviteRequest());
            paramCodedInputStream.readMessage(localBuilder47, paramExtensionRegistryLite);
            setInviteRequest(localBuilder47.buildPartial());
            break;
          case 178:
            Client.LeaveConversationRequest.Builder localBuilder46 = Client.LeaveConversationRequest.newBuilder();
            if (hasLeaveConversationRequest())
              localBuilder46.mergeFrom(getLeaveConversationRequest());
            paramCodedInputStream.readMessage(localBuilder46, paramExtensionRegistryLite);
            setLeaveConversationRequest(localBuilder46.buildPartial());
            break;
          case 186:
            Client.LeaveConversationResponse.Builder localBuilder45 = Client.LeaveConversationResponse.newBuilder();
            if (hasLeaveConversationResponse())
              localBuilder45.mergeFrom(getLeaveConversationResponse());
            paramCodedInputStream.readMessage(localBuilder45, paramExtensionRegistryLite);
            setLeaveConversationResponse(localBuilder45.buildPartial());
            break;
          case 194:
            Client.GroupConversationRename.Builder localBuilder44 = Client.GroupConversationRename.newBuilder();
            if (hasGroupConversationRename())
              localBuilder44.mergeFrom(getGroupConversationRename());
            paramCodedInputStream.readMessage(localBuilder44, paramExtensionRegistryLite);
            setGroupConversationRename(localBuilder44.buildPartial());
            break;
          case 202:
            Client.Migration.Builder localBuilder43 = Client.Migration.newBuilder();
            if (hasMigration())
              localBuilder43.mergeFrom(getMigration());
            paramCodedInputStream.readMessage(localBuilder43, paramExtensionRegistryLite);
            setMigration(localBuilder43.buildPartial());
            break;
          case 210:
            Client.ConversationPreferenceRequest.Builder localBuilder42 = Client.ConversationPreferenceRequest.newBuilder();
            if (hasConversationPreferenceRequest())
              localBuilder42.mergeFrom(getConversationPreferenceRequest());
            paramCodedInputStream.readMessage(localBuilder42, paramExtensionRegistryLite);
            setConversationPreferenceRequest(localBuilder42.buildPartial());
            break;
          case 218:
            Client.ConversationPreferenceResponse.Builder localBuilder41 = Client.ConversationPreferenceResponse.newBuilder();
            if (hasConversationPreferenceResponse())
              localBuilder41.mergeFrom(getConversationPreferenceResponse());
            paramCodedInputStream.readMessage(localBuilder41, paramExtensionRegistryLite);
            setConversationPreferenceResponse(localBuilder41.buildPartial());
            break;
          case 226:
            Client.ReplyToInviteRequest.Builder localBuilder40 = Client.ReplyToInviteRequest.newBuilder();
            if (hasReplyToInviteRequest())
              localBuilder40.mergeFrom(getReplyToInviteRequest());
            paramCodedInputStream.readMessage(localBuilder40, paramExtensionRegistryLite);
            setReplyToInviteRequest(localBuilder40.buildPartial());
            break;
          case 234:
            Client.SetAclsRequest.Builder localBuilder39 = Client.SetAclsRequest.newBuilder();
            if (hasSetAclsRequest())
              localBuilder39.mergeFrom(getSetAclsRequest());
            paramCodedInputStream.readMessage(localBuilder39, paramExtensionRegistryLite);
            setSetAclsRequest(localBuilder39.buildPartial());
            break;
          case 242:
            Client.InvalidateLocalCache.Builder localBuilder38 = Client.InvalidateLocalCache.newBuilder();
            if (hasInvalidateLocalCache())
              localBuilder38.mergeFrom(getInvalidateLocalCache());
            paramCodedInputStream.readMessage(localBuilder38, paramExtensionRegistryLite);
            setInvalidateLocalCache(localBuilder38.buildPartial());
            break;
          case 250:
            Client.InviteResponse.Builder localBuilder37 = Client.InviteResponse.newBuilder();
            if (hasInviteResponse())
              localBuilder37.mergeFrom(getInviteResponse());
            paramCodedInputStream.readMessage(localBuilder37, paramExtensionRegistryLite);
            setInviteResponse(localBuilder37.buildPartial());
            break;
          case 266:
            Client.ReplyToInviteResponse.Builder localBuilder36 = Client.ReplyToInviteResponse.newBuilder();
            if (hasReplyToInviteResponse())
              localBuilder36.mergeFrom(getReplyToInviteResponse());
            paramCodedInputStream.readMessage(localBuilder36, paramExtensionRegistryLite);
            setReplyToInviteResponse(localBuilder36.buildPartial());
            break;
          case 274:
            Client.SetAclsResponse.Builder localBuilder35 = Client.SetAclsResponse.newBuilder();
            if (hasSetAclsResponse())
              localBuilder35.mergeFrom(getSetAclsResponse());
            paramCodedInputStream.readMessage(localBuilder35, paramExtensionRegistryLite);
            setSetAclsResponse(localBuilder35.buildPartial());
            break;
          case 282:
            Client.UserInfoRequest.Builder localBuilder34 = Client.UserInfoRequest.newBuilder();
            if (hasUserInfoRequest())
              localBuilder34.mergeFrom(getUserInfoRequest());
            paramCodedInputStream.readMessage(localBuilder34, paramExtensionRegistryLite);
            setUserInfoRequest(localBuilder34.buildPartial());
            break;
          case 290:
            Client.UserInfoResponse.Builder localBuilder33 = Client.UserInfoResponse.newBuilder();
            if (hasUserInfoResponse())
              localBuilder33.mergeFrom(getUserInfoResponse());
            paramCodedInputStream.readMessage(localBuilder33, paramExtensionRegistryLite);
            setUserInfoResponse(localBuilder33.buildPartial());
            break;
          case 298:
            Client.ConversationSearchRequest.Builder localBuilder32 = Client.ConversationSearchRequest.newBuilder();
            if (hasConversationSearchRequest())
              localBuilder32.mergeFrom(getConversationSearchRequest());
            paramCodedInputStream.readMessage(localBuilder32, paramExtensionRegistryLite);
            setConversationSearchRequest(localBuilder32.buildPartial());
            break;
          case 306:
            Client.ConversationSearchResponse.Builder localBuilder31 = Client.ConversationSearchResponse.newBuilder();
            if (hasConversationSearchResponse())
              localBuilder31.mergeFrom(getConversationSearchResponse());
            paramCodedInputStream.readMessage(localBuilder31, paramExtensionRegistryLite);
            setConversationSearchResponse(localBuilder31.buildPartial());
            break;
          case 314:
            Client.PresenceResponse.Builder localBuilder30 = Client.PresenceResponse.newBuilder();
            if (hasPresenceResponse())
              localBuilder30.mergeFrom(getPresenceResponse());
            paramCodedInputStream.readMessage(localBuilder30, paramExtensionRegistryLite);
            setPresenceResponse(localBuilder30.buildPartial());
            break;
          case 322:
            Client.Presence.Builder localBuilder29 = Client.Presence.newBuilder();
            if (hasPresence())
              localBuilder29.mergeFrom(getPresence());
            paramCodedInputStream.readMessage(localBuilder29, paramExtensionRegistryLite);
            setPresence(localBuilder29.buildPartial());
            break;
          case 330:
            Client.TypingResponse.Builder localBuilder28 = Client.TypingResponse.newBuilder();
            if (hasTypingResponse())
              localBuilder28.mergeFrom(getTypingResponse());
            paramCodedInputStream.readMessage(localBuilder28, paramExtensionRegistryLite);
            setTypingResponse(localBuilder28.buildPartial());
            break;
          case 338:
            Client.Typing.Builder localBuilder27 = Client.Typing.newBuilder();
            if (hasTyping())
              localBuilder27.mergeFrom(getTyping());
            paramCodedInputStream.readMessage(localBuilder27, paramExtensionRegistryLite);
            setTyping(localBuilder27.buildPartial());
            break;
          case 346:
            Client.EventSearchRequest.Builder localBuilder26 = Client.EventSearchRequest.newBuilder();
            if (hasEventSearchRequest())
              localBuilder26.mergeFrom(getEventSearchRequest());
            paramCodedInputStream.readMessage(localBuilder26, paramExtensionRegistryLite);
            setEventSearchRequest(localBuilder26.buildPartial());
            break;
          case 354:
            Client.EventSearchResponse.Builder localBuilder25 = Client.EventSearchResponse.newBuilder();
            if (hasEventSearchResponse())
              localBuilder25.mergeFrom(getEventSearchResponse());
            paramCodedInputStream.readMessage(localBuilder25, paramExtensionRegistryLite);
            setEventSearchResponse(localBuilder25.buildPartial());
            break;
          case 362:
            Client.ConversationRenameRequest.Builder localBuilder24 = Client.ConversationRenameRequest.newBuilder();
            if (hasConversationRenameRequest())
              localBuilder24.mergeFrom(getConversationRenameRequest());
            paramCodedInputStream.readMessage(localBuilder24, paramExtensionRegistryLite);
            setConversationRenameRequest(localBuilder24.buildPartial());
            break;
          case 370:
            Client.ConversationRenameResponse.Builder localBuilder23 = Client.ConversationRenameResponse.newBuilder();
            if (hasConversationRenameResponse())
              localBuilder23.mergeFrom(getConversationRenameResponse());
            paramCodedInputStream.readMessage(localBuilder23, paramExtensionRegistryLite);
            setConversationRenameResponse(localBuilder23.buildPartial());
            break;
          case 378:
            Client.ChatMessageRequest.Builder localBuilder22 = Client.ChatMessageRequest.newBuilder();
            if (hasChatMessageRequest())
              localBuilder22.mergeFrom(getChatMessageRequest());
            paramCodedInputStream.readMessage(localBuilder22, paramExtensionRegistryLite);
            setChatMessageRequest(localBuilder22.buildPartial());
            break;
          case 386:
            Client.ChatMessageResponse.Builder localBuilder21 = Client.ChatMessageResponse.newBuilder();
            if (hasChatMessageResponse())
              localBuilder21.mergeFrom(getChatMessageResponse());
            paramCodedInputStream.readMessage(localBuilder21, paramExtensionRegistryLite);
            setChatMessageResponse(localBuilder21.buildPartial());
            break;
          case 394:
            Client.ReceiptRequest.Builder localBuilder20 = Client.ReceiptRequest.newBuilder();
            if (hasReceiptRequest())
              localBuilder20.mergeFrom(getReceiptRequest());
            paramCodedInputStream.readMessage(localBuilder20, paramExtensionRegistryLite);
            setReceiptRequest(localBuilder20.buildPartial());
            break;
          case 402:
            Client.ReceiptResponse.Builder localBuilder19 = Client.ReceiptResponse.newBuilder();
            if (hasReceiptResponse())
              localBuilder19.mergeFrom(getReceiptResponse());
            paramCodedInputStream.readMessage(localBuilder19, paramExtensionRegistryLite);
            setReceiptResponse(localBuilder19.buildPartial());
            break;
          case 410:
            Client.SuggestionsRequest.Builder localBuilder18 = Client.SuggestionsRequest.newBuilder();
            if (hasSuggestionsRequest())
              localBuilder18.mergeFrom(getSuggestionsRequest());
            paramCodedInputStream.readMessage(localBuilder18, paramExtensionRegistryLite);
            setSuggestionsRequest(localBuilder18.buildPartial());
            break;
          case 418:
            Client.SuggestionsResponse.Builder localBuilder17 = Client.SuggestionsResponse.newBuilder();
            if (hasSuggestionsResponse())
              localBuilder17.mergeFrom(getSuggestionsResponse());
            paramCodedInputStream.readMessage(localBuilder17, paramExtensionRegistryLite);
            setSuggestionsResponse(localBuilder17.buildPartial());
            break;
          case 426:
            Client.TileEventRequest.Builder localBuilder16 = Client.TileEventRequest.newBuilder();
            if (hasTileEventRequest())
              localBuilder16.mergeFrom(getTileEventRequest());
            paramCodedInputStream.readMessage(localBuilder16, paramExtensionRegistryLite);
            setTileEventRequest(localBuilder16.buildPartial());
            break;
          case 434:
            Client.TileEventResponse.Builder localBuilder15 = Client.TileEventResponse.newBuilder();
            if (hasTileEventResponse())
              localBuilder15.mergeFrom(getTileEventResponse());
            paramCodedInputStream.readMessage(localBuilder15, paramExtensionRegistryLite);
            setTileEventResponse(localBuilder15.buildPartial());
            break;
          case 442:
            Client.TileEvent.Builder localBuilder14 = Client.TileEvent.newBuilder();
            if (hasTileEvent())
              localBuilder14.mergeFrom(getTileEvent());
            paramCodedInputStream.readMessage(localBuilder14, paramExtensionRegistryLite);
            setTileEvent(localBuilder14.buildPartial());
            break;
          case 450:
            Client.GlobalConversationPreferencesRequest.Builder localBuilder13 = Client.GlobalConversationPreferencesRequest.newBuilder();
            if (hasGlobalConversationPreferencesRequest())
              localBuilder13.mergeFrom(getGlobalConversationPreferencesRequest());
            paramCodedInputStream.readMessage(localBuilder13, paramExtensionRegistryLite);
            setGlobalConversationPreferencesRequest(localBuilder13.buildPartial());
            break;
          case 458:
            Client.GlobalConversationPreferencesResponse.Builder localBuilder12 = Client.GlobalConversationPreferencesResponse.newBuilder();
            if (hasGlobalConversationPreferencesResponse())
              localBuilder12.mergeFrom(getGlobalConversationPreferencesResponse());
            paramCodedInputStream.readMessage(localBuilder12, paramExtensionRegistryLite);
            setGlobalConversationPreferencesResponse(localBuilder12.buildPartial());
            break;
          case 466:
            Client.ConversationJoinRequest.Builder localBuilder11 = Client.ConversationJoinRequest.newBuilder();
            if (hasConversationJoinRequest())
              localBuilder11.mergeFrom(getConversationJoinRequest());
            paramCodedInputStream.readMessage(localBuilder11, paramExtensionRegistryLite);
            setConversationJoinRequest(localBuilder11.buildPartial());
            break;
          case 474:
            Client.ConversationJoinResponse.Builder localBuilder10 = Client.ConversationJoinResponse.newBuilder();
            if (hasConversationJoinResponse())
              localBuilder10.mergeFrom(getConversationJoinResponse());
            paramCodedInputStream.readMessage(localBuilder10, paramExtensionRegistryLite);
            setConversationJoinResponse(localBuilder10.buildPartial());
            break;
          case 482:
            Client.HangoutInviteRequest.Builder localBuilder9 = Client.HangoutInviteRequest.newBuilder();
            if (hasHangoutInviteRequest())
              localBuilder9.mergeFrom(getHangoutInviteRequest());
            paramCodedInputStream.readMessage(localBuilder9, paramExtensionRegistryLite);
            setHangoutInviteRequest(localBuilder9.buildPartial());
            break;
          case 490:
            Client.HangoutInviteResponse.Builder localBuilder8 = Client.HangoutInviteResponse.newBuilder();
            if (hasHangoutInviteResponse())
              localBuilder8.mergeFrom(getHangoutInviteResponse());
            paramCodedInputStream.readMessage(localBuilder8, paramExtensionRegistryLite);
            setHangoutInviteResponse(localBuilder8.buildPartial());
            break;
          case 498:
            Client.HangoutInviteKeepAliveRequest.Builder localBuilder7 = Client.HangoutInviteKeepAliveRequest.newBuilder();
            if (hasHangoutInviteKeepAliveRequest())
              localBuilder7.mergeFrom(getHangoutInviteKeepAliveRequest());
            paramCodedInputStream.readMessage(localBuilder7, paramExtensionRegistryLite);
            setHangoutInviteKeepAliveRequest(localBuilder7.buildPartial());
            break;
          case 506:
            Client.HangoutInviteKeepAliveResponse.Builder localBuilder6 = Client.HangoutInviteKeepAliveResponse.newBuilder();
            if (hasHangoutInviteKeepAliveResponse())
              localBuilder6.mergeFrom(getHangoutInviteKeepAliveResponse());
            paramCodedInputStream.readMessage(localBuilder6, paramExtensionRegistryLite);
            setHangoutInviteKeepAliveResponse(localBuilder6.buildPartial());
            break;
          case 514:
            Client.HangoutInviteReplyRequest.Builder localBuilder5 = Client.HangoutInviteReplyRequest.newBuilder();
            if (hasHangoutInviteReplyRequest())
              localBuilder5.mergeFrom(getHangoutInviteReplyRequest());
            paramCodedInputStream.readMessage(localBuilder5, paramExtensionRegistryLite);
            setHangoutInviteReplyRequest(localBuilder5.buildPartial());
            break;
          case 522:
            Client.HangoutInviteReplyResponse.Builder localBuilder4 = Client.HangoutInviteReplyResponse.newBuilder();
            if (hasHangoutInviteReplyResponse())
              localBuilder4.mergeFrom(getHangoutInviteReplyResponse());
            paramCodedInputStream.readMessage(localBuilder4, paramExtensionRegistryLite);
            setHangoutInviteReplyResponse(localBuilder4.buildPartial());
            break;
          case 530:
            Client.HangoutInviteFinishRequest.Builder localBuilder3 = Client.HangoutInviteFinishRequest.newBuilder();
            if (hasHangoutInviteFinishRequest())
              localBuilder3.mergeFrom(getHangoutInviteFinishRequest());
            paramCodedInputStream.readMessage(localBuilder3, paramExtensionRegistryLite);
            setHangoutInviteFinishRequest(localBuilder3.buildPartial());
            break;
          case 538:
            Client.HangoutInviteFinishResponse.Builder localBuilder2 = Client.HangoutInviteFinishResponse.newBuilder();
            if (hasHangoutInviteFinishResponse())
              localBuilder2.mergeFrom(getHangoutInviteFinishResponse());
            paramCodedInputStream.readMessage(localBuilder2, paramExtensionRegistryLite);
            setHangoutInviteFinishResponse(localBuilder2.buildPartial());
            break;
          case 546:
            Client.HangoutRingFinishRequest.Builder localBuilder1 = Client.HangoutRingFinishRequest.newBuilder();
            if (hasHangoutRingFinishRequest())
              localBuilder1.mergeFrom(getHangoutRingFinishRequest());
            paramCodedInputStream.readMessage(localBuilder1, paramExtensionRegistryLite);
            setHangoutRingFinishRequest(localBuilder1.buildPartial());
            break;
          case 554:
          }
          Client.HangoutRingFinishResponse.Builder localBuilder = Client.HangoutRingFinishResponse.newBuilder();
          if (hasHangoutRingFinishResponse())
            localBuilder.mergeFrom(getHangoutRingFinishResponse());
          paramCodedInputStream.readMessage(localBuilder, paramExtensionRegistryLite);
          setHangoutRingFinishResponse(localBuilder.buildPartial());
        }
      }

      public final Client.BunchCommand build()
      {
        Client.BunchCommand localBunchCommand = buildPartial();
        if (!localBunchCommand.isInitialized())
          throw new UninitializedMessageException();
        return localBunchCommand;
      }

      public final Client.BunchCommand buildPartial()
      {
        Client.BunchCommand localBunchCommand = new Client.BunchCommand(this, (byte)0);
        int i = this.bitField0_;
        int j = this.bitField1_;
        int k = this.bitField2_;
        int m = i & 0x1;
        int n = 0;
        if (m == 1)
          n = 1;
        Client.BunchCommand.access$64502(localBunchCommand, this.requestClientId_);
        if ((i & 0x2) == 2)
          n |= 2;
        Client.BunchCommand.access$64602(localBunchCommand, this.chatMessage_);
        if ((i & 0x4) == 4)
          n |= 4;
        Client.BunchCommand.access$64702(localBunchCommand, this.chatMessageRequest_);
        if ((i & 0x8) == 8)
          n |= 8;
        Client.BunchCommand.access$64802(localBunchCommand, this.chatMessageResponse_);
        if ((i & 0x10) == 16)
          n |= 16;
        Client.BunchCommand.access$64902(localBunchCommand, this.presenceRequest_);
        if ((i & 0x20) == 32)
          n |= 32;
        Client.BunchCommand.access$65002(localBunchCommand, this.presenceResponse_);
        if ((i & 0x40) == 64)
          n |= 64;
        Client.BunchCommand.access$65102(localBunchCommand, this.presence_);
        if ((i & 0x80) == 128)
          n |= 128;
        Client.BunchCommand.access$65202(localBunchCommand, this.typingRequest_);
        if ((i & 0x100) == 256)
          n |= 256;
        Client.BunchCommand.access$65302(localBunchCommand, this.typingResponse_);
        if ((i & 0x200) == 512)
          n |= 512;
        Client.BunchCommand.access$65402(localBunchCommand, this.typing_);
        if ((i & 0x400) == 1024)
          n |= 1024;
        Client.BunchCommand.access$65502(localBunchCommand, this.receipt_);
        if ((i & 0x800) == 2048)
          n |= 2048;
        Client.BunchCommand.access$65602(localBunchCommand, this.receiptRequest_);
        if ((i & 0x1000) == 4096)
          n |= 4096;
        Client.BunchCommand.access$65702(localBunchCommand, this.receiptResponse_);
        if ((i & 0x2000) == 8192)
          n |= 8192;
        Client.BunchCommand.access$65802(localBunchCommand, this.membershipChange_);
        if ((i & 0x4000) == 16384)
          n |= 16384;
        Client.BunchCommand.access$65902(localBunchCommand, this.conversationRequest_);
        if ((i & 0x8000) == 32768)
          n |= 32768;
        Client.BunchCommand.access$66002(localBunchCommand, this.conversationResponse_);
        if ((i & 0x10000) == 65536)
          n |= 65536;
        Client.BunchCommand.access$66102(localBunchCommand, this.eventStreamRequest_);
        if ((i & 0x20000) == 131072)
          n |= 131072;
        Client.BunchCommand.access$66202(localBunchCommand, this.eventSteamResponse_);
        if ((i & 0x40000) == 262144)
          n |= 262144;
        Client.BunchCommand.access$66302(localBunchCommand, this.deviceRegistrationRequest_);
        if ((0x80000 & i) == 524288)
          n |= 524288;
        Client.BunchCommand.access$66402(localBunchCommand, this.deviceRegistrationResponse_);
        if ((0x100000 & i) == 1048576)
          n |= 1048576;
        Client.BunchCommand.access$66502(localBunchCommand, this.pingRequest_);
        if ((0x200000 & i) == 2097152)
          n |= 2097152;
        Client.BunchCommand.access$66602(localBunchCommand, this.pingResponse_);
        if ((0x400000 & i) == 4194304)
          n |= 4194304;
        Client.BunchCommand.access$66702(localBunchCommand, this.conversationListRequest_);
        if ((0x800000 & i) == 8388608)
          n |= 8388608;
        Client.BunchCommand.access$66802(localBunchCommand, this.conversationListResponse_);
        if ((0x1000000 & i) == 16777216)
          n |= 16777216;
        Client.BunchCommand.access$66902(localBunchCommand, this.userCreationRequest_);
        if ((0x2000000 & i) == 33554432)
          n |= 33554432;
        Client.BunchCommand.access$67002(localBunchCommand, this.userCreationResponse_);
        if ((0x4000000 & i) == 67108864)
          n |= 67108864;
        Client.BunchCommand.access$67102(localBunchCommand, this.error_);
        if ((0x8000000 & i) == 134217728)
          n |= 134217728;
        Client.BunchCommand.access$67202(localBunchCommand, this.inviteRequest_);
        if ((0x10000000 & i) == 268435456)
          n |= 268435456;
        Client.BunchCommand.access$67302(localBunchCommand, this.leaveConversationRequest_);
        if ((0x20000000 & i) == 536870912)
          n |= 536870912;
        Client.BunchCommand.access$67402(localBunchCommand, this.leaveConversationResponse_);
        if ((0x40000000 & i) == 1073741824)
          n |= 1073741824;
        Client.BunchCommand.access$67502(localBunchCommand, this.conversationRenameRequest_);
        if ((i & 0x80000000) == -2147483648)
          n |= -2147483648;
        Client.BunchCommand.access$67602(localBunchCommand, this.conversationRenameResponse_);
        int i1 = j & 0x1;
        int i2 = 0;
        if (i1 == 1)
          i2 = 1;
        Client.BunchCommand.access$67702(localBunchCommand, this.groupConversationRename_);
        if ((j & 0x2) == 2)
          i2 |= 2;
        Client.BunchCommand.access$67802(localBunchCommand, this.tileEventRequest_);
        if ((j & 0x4) == 4)
          i2 |= 4;
        Client.BunchCommand.access$67902(localBunchCommand, this.tileEventResponse_);
        if ((j & 0x8) == 8)
          i2 |= 8;
        Client.BunchCommand.access$68002(localBunchCommand, this.tileEvent_);
        if ((j & 0x10) == 16)
          i2 |= 16;
        Client.BunchCommand.access$68102(localBunchCommand, this.migration_);
        if ((j & 0x20) == 32)
          i2 |= 32;
        Client.BunchCommand.access$68202(localBunchCommand, this.conversationPreferenceRequest_);
        if ((j & 0x40) == 64)
          i2 |= 64;
        Client.BunchCommand.access$68302(localBunchCommand, this.conversationPreferenceResponse_);
        if ((j & 0x80) == 128)
          i2 |= 128;
        Client.BunchCommand.access$68402(localBunchCommand, this.replyToInviteRequest_);
        if ((j & 0x100) == 256)
          i2 |= 256;
        Client.BunchCommand.access$68502(localBunchCommand, this.setAclsRequest_);
        if ((j & 0x200) == 512)
          i2 |= 512;
        Client.BunchCommand.access$68602(localBunchCommand, this.invalidateLocalCache_);
        if ((j & 0x400) == 1024)
          i2 |= 1024;
        Client.BunchCommand.access$68702(localBunchCommand, this.inviteResponse_);
        if ((j & 0x800) == 2048)
          i2 |= 2048;
        Client.BunchCommand.access$68802(localBunchCommand, this.replyToInviteResponse_);
        if ((j & 0x1000) == 4096)
          i2 |= 4096;
        Client.BunchCommand.access$68902(localBunchCommand, this.setAclsResponse_);
        if ((j & 0x2000) == 8192)
          i2 |= 8192;
        Client.BunchCommand.access$69002(localBunchCommand, this.userInfoRequest_);
        if ((j & 0x4000) == 16384)
          i2 |= 16384;
        Client.BunchCommand.access$69102(localBunchCommand, this.userInfoResponse_);
        if ((j & 0x8000) == 32768)
          i2 |= 32768;
        Client.BunchCommand.access$69202(localBunchCommand, this.conversationSearchRequest_);
        if ((j & 0x10000) == 65536)
          i2 |= 65536;
        Client.BunchCommand.access$69302(localBunchCommand, this.conversationSearchResponse_);
        if ((j & 0x20000) == 131072)
          i2 |= 131072;
        Client.BunchCommand.access$69402(localBunchCommand, this.eventSearchRequest_);
        if ((j & 0x40000) == 262144)
          i2 |= 262144;
        Client.BunchCommand.access$69502(localBunchCommand, this.eventSearchResponse_);
        if ((0x80000 & j) == 524288)
          i2 |= 524288;
        Client.BunchCommand.access$69602(localBunchCommand, this.suggestionsRequest_);
        if ((0x100000 & j) == 1048576)
          i2 |= 1048576;
        Client.BunchCommand.access$69702(localBunchCommand, this.suggestionsResponse_);
        if ((0x200000 & j) == 2097152)
          i2 |= 2097152;
        Client.BunchCommand.access$69802(localBunchCommand, this.globalConversationPreferencesRequest_);
        if ((0x400000 & j) == 4194304)
          i2 |= 4194304;
        Client.BunchCommand.access$69902(localBunchCommand, this.globalConversationPreferencesResponse_);
        if ((0x800000 & j) == 8388608)
          i2 |= 8388608;
        Client.BunchCommand.access$70002(localBunchCommand, this.conversationJoinRequest_);
        if ((0x1000000 & j) == 16777216)
          i2 |= 16777216;
        Client.BunchCommand.access$70102(localBunchCommand, this.conversationJoinResponse_);
        if ((0x2000000 & j) == 33554432)
          i2 |= 33554432;
        Client.BunchCommand.access$70202(localBunchCommand, this.hangoutInviteRequest_);
        if ((0x4000000 & j) == 67108864)
          i2 |= 67108864;
        Client.BunchCommand.access$70302(localBunchCommand, this.hangoutInviteResponse_);
        if ((0x8000000 & j) == 134217728)
          i2 |= 134217728;
        Client.BunchCommand.access$70402(localBunchCommand, this.hangoutInviteKeepAliveRequest_);
        if ((0x10000000 & j) == 268435456)
          i2 |= 268435456;
        Client.BunchCommand.access$70502(localBunchCommand, this.hangoutInviteKeepAliveResponse_);
        if ((0x20000000 & j) == 536870912)
          i2 |= 536870912;
        Client.BunchCommand.access$70602(localBunchCommand, this.hangoutInviteReplyRequest_);
        if ((0x40000000 & j) == 1073741824)
          i2 |= 1073741824;
        Client.BunchCommand.access$70702(localBunchCommand, this.hangoutInviteReplyResponse_);
        if ((j & 0x80000000) == -2147483648)
          i2 |= -2147483648;
        Client.BunchCommand.access$70802(localBunchCommand, this.hangoutInviteFinishRequest_);
        int i3 = k & 0x1;
        int i4 = 0;
        if (i3 == 1)
          i4 = 1;
        Client.BunchCommand.access$70902(localBunchCommand, this.hangoutInviteFinishResponse_);
        if ((k & 0x2) == 2)
          i4 |= 2;
        Client.BunchCommand.access$71002(localBunchCommand, this.hangoutRingFinishRequest_);
        if ((k & 0x4) == 4)
          i4 |= 4;
        Client.BunchCommand.access$71102(localBunchCommand, this.hangoutRingFinishResponse_);
        Client.BunchCommand.access$71202(localBunchCommand, n);
        Client.BunchCommand.access$71302(localBunchCommand, i2);
        Client.BunchCommand.access$71402(localBunchCommand, i4);
        return localBunchCommand;
      }

      public final Builder clear()
      {
        super.clear();
        this.requestClientId_ = "";
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.chatMessage_ = Client.ChatMessage.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.chatMessageRequest_ = Client.ChatMessageRequest.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.chatMessageResponse_ = Client.ChatMessageResponse.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        this.presenceRequest_ = Client.PresenceRequest.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        this.presenceResponse_ = Client.PresenceResponse.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFDF & this.bitField0_);
        this.presence_ = Client.Presence.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFBF & this.bitField0_);
        this.typingRequest_ = Client.TypingRequest.getDefaultInstance();
        this.bitField0_ = (0xFFFFFF7F & this.bitField0_);
        this.typingResponse_ = Client.TypingResponse.getDefaultInstance();
        this.bitField0_ = (0xFFFFFEFF & this.bitField0_);
        this.typing_ = Client.Typing.getDefaultInstance();
        this.bitField0_ = (0xFFFFFDFF & this.bitField0_);
        this.receipt_ = Client.Receipt.getDefaultInstance();
        this.bitField0_ = (0xFFFFFBFF & this.bitField0_);
        this.receiptRequest_ = Client.ReceiptRequest.getDefaultInstance();
        this.bitField0_ = (0xFFFFF7FF & this.bitField0_);
        this.receiptResponse_ = Client.ReceiptResponse.getDefaultInstance();
        this.bitField0_ = (0xFFFFEFFF & this.bitField0_);
        this.membershipChange_ = Client.MembershipChange.getDefaultInstance();
        this.bitField0_ = (0xFFFFDFFF & this.bitField0_);
        this.conversationRequest_ = Client.NewConversationRequest.getDefaultInstance();
        this.bitField0_ = (0xFFFFBFFF & this.bitField0_);
        this.conversationResponse_ = Client.NewConversationResponse.getDefaultInstance();
        this.bitField0_ = (0xFFFF7FFF & this.bitField0_);
        this.eventStreamRequest_ = Client.EventStreamRequest.getDefaultInstance();
        this.bitField0_ = (0xFFFEFFFF & this.bitField0_);
        this.eventSteamResponse_ = Client.EventStreamResponse.getDefaultInstance();
        this.bitField0_ = (0xFFFDFFFF & this.bitField0_);
        this.deviceRegistrationRequest_ = Client.DeviceRegistrationRequest.getDefaultInstance();
        this.bitField0_ = (0xFFFBFFFF & this.bitField0_);
        this.deviceRegistrationResponse_ = Client.DeviceRegistrationResponse.getDefaultInstance();
        this.bitField0_ = (0xFFF7FFFF & this.bitField0_);
        this.pingRequest_ = Client.PingRequest.getDefaultInstance();
        this.bitField0_ = (0xFFEFFFFF & this.bitField0_);
        this.pingResponse_ = Client.PingResponse.getDefaultInstance();
        this.bitField0_ = (0xFFDFFFFF & this.bitField0_);
        this.conversationListRequest_ = Client.ConversationListRequest.getDefaultInstance();
        this.bitField0_ = (0xFFBFFFFF & this.bitField0_);
        this.conversationListResponse_ = Client.ConversationListResponse.getDefaultInstance();
        this.bitField0_ = (0xFF7FFFFF & this.bitField0_);
        this.userCreationRequest_ = Client.UserCreationRequest.getDefaultInstance();
        this.bitField0_ = (0xFEFFFFFF & this.bitField0_);
        this.userCreationResponse_ = Client.UserCreationResponse.getDefaultInstance();
        this.bitField0_ = (0xFDFFFFFF & this.bitField0_);
        this.error_ = Client.Error.getDefaultInstance();
        this.bitField0_ = (0xFBFFFFFF & this.bitField0_);
        this.inviteRequest_ = Client.InviteRequest.getDefaultInstance();
        this.bitField0_ = (0xF7FFFFFF & this.bitField0_);
        this.leaveConversationRequest_ = Client.LeaveConversationRequest.getDefaultInstance();
        this.bitField0_ = (0xEFFFFFFF & this.bitField0_);
        this.leaveConversationResponse_ = Client.LeaveConversationResponse.getDefaultInstance();
        this.bitField0_ = (0xDFFFFFFF & this.bitField0_);
        this.conversationRenameRequest_ = Client.ConversationRenameRequest.getDefaultInstance();
        this.bitField0_ = (0xBFFFFFFF & this.bitField0_);
        this.conversationRenameResponse_ = Client.ConversationRenameResponse.getDefaultInstance();
        this.bitField0_ = (0x7FFFFFFF & this.bitField0_);
        this.groupConversationRename_ = Client.GroupConversationRename.getDefaultInstance();
        this.bitField1_ = (0xFFFFFFFE & this.bitField1_);
        this.tileEventRequest_ = Client.TileEventRequest.getDefaultInstance();
        this.bitField1_ = (0xFFFFFFFD & this.bitField1_);
        this.tileEventResponse_ = Client.TileEventResponse.getDefaultInstance();
        this.bitField1_ = (0xFFFFFFFB & this.bitField1_);
        this.tileEvent_ = Client.TileEvent.getDefaultInstance();
        this.bitField1_ = (0xFFFFFFF7 & this.bitField1_);
        this.migration_ = Client.Migration.getDefaultInstance();
        this.bitField1_ = (0xFFFFFFEF & this.bitField1_);
        this.conversationPreferenceRequest_ = Client.ConversationPreferenceRequest.getDefaultInstance();
        this.bitField1_ = (0xFFFFFFDF & this.bitField1_);
        this.conversationPreferenceResponse_ = Client.ConversationPreferenceResponse.getDefaultInstance();
        this.bitField1_ = (0xFFFFFFBF & this.bitField1_);
        this.replyToInviteRequest_ = Client.ReplyToInviteRequest.getDefaultInstance();
        this.bitField1_ = (0xFFFFFF7F & this.bitField1_);
        this.setAclsRequest_ = Client.SetAclsRequest.getDefaultInstance();
        this.bitField1_ = (0xFFFFFEFF & this.bitField1_);
        this.invalidateLocalCache_ = Client.InvalidateLocalCache.getDefaultInstance();
        this.bitField1_ = (0xFFFFFDFF & this.bitField1_);
        this.inviteResponse_ = Client.InviteResponse.getDefaultInstance();
        this.bitField1_ = (0xFFFFFBFF & this.bitField1_);
        this.replyToInviteResponse_ = Client.ReplyToInviteResponse.getDefaultInstance();
        this.bitField1_ = (0xFFFFF7FF & this.bitField1_);
        this.setAclsResponse_ = Client.SetAclsResponse.getDefaultInstance();
        this.bitField1_ = (0xFFFFEFFF & this.bitField1_);
        this.userInfoRequest_ = Client.UserInfoRequest.getDefaultInstance();
        this.bitField1_ = (0xFFFFDFFF & this.bitField1_);
        this.userInfoResponse_ = Client.UserInfoResponse.getDefaultInstance();
        this.bitField1_ = (0xFFFFBFFF & this.bitField1_);
        this.conversationSearchRequest_ = Client.ConversationSearchRequest.getDefaultInstance();
        this.bitField1_ = (0xFFFF7FFF & this.bitField1_);
        this.conversationSearchResponse_ = Client.ConversationSearchResponse.getDefaultInstance();
        this.bitField1_ = (0xFFFEFFFF & this.bitField1_);
        this.eventSearchRequest_ = Client.EventSearchRequest.getDefaultInstance();
        this.bitField1_ = (0xFFFDFFFF & this.bitField1_);
        this.eventSearchResponse_ = Client.EventSearchResponse.getDefaultInstance();
        this.bitField1_ = (0xFFFBFFFF & this.bitField1_);
        this.suggestionsRequest_ = Client.SuggestionsRequest.getDefaultInstance();
        this.bitField1_ = (0xFFF7FFFF & this.bitField1_);
        this.suggestionsResponse_ = Client.SuggestionsResponse.getDefaultInstance();
        this.bitField1_ = (0xFFEFFFFF & this.bitField1_);
        this.globalConversationPreferencesRequest_ = Client.GlobalConversationPreferencesRequest.getDefaultInstance();
        this.bitField1_ = (0xFFDFFFFF & this.bitField1_);
        this.globalConversationPreferencesResponse_ = Client.GlobalConversationPreferencesResponse.getDefaultInstance();
        this.bitField1_ = (0xFFBFFFFF & this.bitField1_);
        this.conversationJoinRequest_ = Client.ConversationJoinRequest.getDefaultInstance();
        this.bitField1_ = (0xFF7FFFFF & this.bitField1_);
        this.conversationJoinResponse_ = Client.ConversationJoinResponse.getDefaultInstance();
        this.bitField1_ = (0xFEFFFFFF & this.bitField1_);
        this.hangoutInviteRequest_ = Client.HangoutInviteRequest.getDefaultInstance();
        this.bitField1_ = (0xFDFFFFFF & this.bitField1_);
        this.hangoutInviteResponse_ = Client.HangoutInviteResponse.getDefaultInstance();
        this.bitField1_ = (0xFBFFFFFF & this.bitField1_);
        this.hangoutInviteKeepAliveRequest_ = Client.HangoutInviteKeepAliveRequest.getDefaultInstance();
        this.bitField1_ = (0xF7FFFFFF & this.bitField1_);
        this.hangoutInviteKeepAliveResponse_ = Client.HangoutInviteKeepAliveResponse.getDefaultInstance();
        this.bitField1_ = (0xEFFFFFFF & this.bitField1_);
        this.hangoutInviteReplyRequest_ = Client.HangoutInviteReplyRequest.getDefaultInstance();
        this.bitField1_ = (0xDFFFFFFF & this.bitField1_);
        this.hangoutInviteReplyResponse_ = Client.HangoutInviteReplyResponse.getDefaultInstance();
        this.bitField1_ = (0xBFFFFFFF & this.bitField1_);
        this.hangoutInviteFinishRequest_ = Client.HangoutInviteFinishRequest.getDefaultInstance();
        this.bitField1_ = (0x7FFFFFFF & this.bitField1_);
        this.hangoutInviteFinishResponse_ = Client.HangoutInviteFinishResponse.getDefaultInstance();
        this.bitField2_ = (0xFFFFFFFE & this.bitField2_);
        this.hangoutRingFinishRequest_ = Client.HangoutRingFinishRequest.getDefaultInstance();
        this.bitField2_ = (0xFFFFFFFD & this.bitField2_);
        this.hangoutRingFinishResponse_ = Client.HangoutRingFinishResponse.getDefaultInstance();
        this.bitField2_ = (0xFFFFFFFB & this.bitField2_);
        return this;
      }

      public final Builder clearChatMessage()
      {
        this.chatMessage_ = Client.ChatMessage.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        return this;
      }

      public final Builder clearChatMessageRequest()
      {
        this.chatMessageRequest_ = Client.ChatMessageRequest.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        return this;
      }

      public final Builder clearChatMessageResponse()
      {
        this.chatMessageResponse_ = Client.ChatMessageResponse.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        return this;
      }

      public final Builder clearConversationJoinRequest()
      {
        this.conversationJoinRequest_ = Client.ConversationJoinRequest.getDefaultInstance();
        this.bitField1_ = (0xFF7FFFFF & this.bitField1_);
        return this;
      }

      public final Builder clearConversationJoinResponse()
      {
        this.conversationJoinResponse_ = Client.ConversationJoinResponse.getDefaultInstance();
        this.bitField1_ = (0xFEFFFFFF & this.bitField1_);
        return this;
      }

      public final Builder clearConversationListRequest()
      {
        this.conversationListRequest_ = Client.ConversationListRequest.getDefaultInstance();
        this.bitField0_ = (0xFFBFFFFF & this.bitField0_);
        return this;
      }

      public final Builder clearConversationListResponse()
      {
        this.conversationListResponse_ = Client.ConversationListResponse.getDefaultInstance();
        this.bitField0_ = (0xFF7FFFFF & this.bitField0_);
        return this;
      }

      public final Builder clearConversationPreferenceRequest()
      {
        this.conversationPreferenceRequest_ = Client.ConversationPreferenceRequest.getDefaultInstance();
        this.bitField1_ = (0xFFFFFFDF & this.bitField1_);
        return this;
      }

      public final Builder clearConversationPreferenceResponse()
      {
        this.conversationPreferenceResponse_ = Client.ConversationPreferenceResponse.getDefaultInstance();
        this.bitField1_ = (0xFFFFFFBF & this.bitField1_);
        return this;
      }

      public final Builder clearConversationRenameRequest()
      {
        this.conversationRenameRequest_ = Client.ConversationRenameRequest.getDefaultInstance();
        this.bitField0_ = (0xBFFFFFFF & this.bitField0_);
        return this;
      }

      public final Builder clearConversationRenameResponse()
      {
        this.conversationRenameResponse_ = Client.ConversationRenameResponse.getDefaultInstance();
        this.bitField0_ = (0x7FFFFFFF & this.bitField0_);
        return this;
      }

      public final Builder clearConversationRequest()
      {
        this.conversationRequest_ = Client.NewConversationRequest.getDefaultInstance();
        this.bitField0_ = (0xFFFFBFFF & this.bitField0_);
        return this;
      }

      public final Builder clearConversationResponse()
      {
        this.conversationResponse_ = Client.NewConversationResponse.getDefaultInstance();
        this.bitField0_ = (0xFFFF7FFF & this.bitField0_);
        return this;
      }

      public final Builder clearConversationSearchRequest()
      {
        this.conversationSearchRequest_ = Client.ConversationSearchRequest.getDefaultInstance();
        this.bitField1_ = (0xFFFF7FFF & this.bitField1_);
        return this;
      }

      public final Builder clearConversationSearchResponse()
      {
        this.conversationSearchResponse_ = Client.ConversationSearchResponse.getDefaultInstance();
        this.bitField1_ = (0xFFFEFFFF & this.bitField1_);
        return this;
      }

      public final Builder clearDeviceRegistrationRequest()
      {
        this.deviceRegistrationRequest_ = Client.DeviceRegistrationRequest.getDefaultInstance();
        this.bitField0_ = (0xFFFBFFFF & this.bitField0_);
        return this;
      }

      public final Builder clearDeviceRegistrationResponse()
      {
        this.deviceRegistrationResponse_ = Client.DeviceRegistrationResponse.getDefaultInstance();
        this.bitField0_ = (0xFFF7FFFF & this.bitField0_);
        return this;
      }

      public final Builder clearError()
      {
        this.error_ = Client.Error.getDefaultInstance();
        this.bitField0_ = (0xFBFFFFFF & this.bitField0_);
        return this;
      }

      public final Builder clearEventSearchRequest()
      {
        this.eventSearchRequest_ = Client.EventSearchRequest.getDefaultInstance();
        this.bitField1_ = (0xFFFDFFFF & this.bitField1_);
        return this;
      }

      public final Builder clearEventSearchResponse()
      {
        this.eventSearchResponse_ = Client.EventSearchResponse.getDefaultInstance();
        this.bitField1_ = (0xFFFBFFFF & this.bitField1_);
        return this;
      }

      public final Builder clearEventSteamResponse()
      {
        this.eventSteamResponse_ = Client.EventStreamResponse.getDefaultInstance();
        this.bitField0_ = (0xFFFDFFFF & this.bitField0_);
        return this;
      }

      public final Builder clearEventStreamRequest()
      {
        this.eventStreamRequest_ = Client.EventStreamRequest.getDefaultInstance();
        this.bitField0_ = (0xFFFEFFFF & this.bitField0_);
        return this;
      }

      public final Builder clearGlobalConversationPreferencesRequest()
      {
        this.globalConversationPreferencesRequest_ = Client.GlobalConversationPreferencesRequest.getDefaultInstance();
        this.bitField1_ = (0xFFDFFFFF & this.bitField1_);
        return this;
      }

      public final Builder clearGlobalConversationPreferencesResponse()
      {
        this.globalConversationPreferencesResponse_ = Client.GlobalConversationPreferencesResponse.getDefaultInstance();
        this.bitField1_ = (0xFFBFFFFF & this.bitField1_);
        return this;
      }

      public final Builder clearGroupConversationRename()
      {
        this.groupConversationRename_ = Client.GroupConversationRename.getDefaultInstance();
        this.bitField1_ = (0xFFFFFFFE & this.bitField1_);
        return this;
      }

      public final Builder clearHangoutInviteFinishRequest()
      {
        this.hangoutInviteFinishRequest_ = Client.HangoutInviteFinishRequest.getDefaultInstance();
        this.bitField1_ = (0x7FFFFFFF & this.bitField1_);
        return this;
      }

      public final Builder clearHangoutInviteFinishResponse()
      {
        this.hangoutInviteFinishResponse_ = Client.HangoutInviteFinishResponse.getDefaultInstance();
        this.bitField2_ = (0xFFFFFFFE & this.bitField2_);
        return this;
      }

      public final Builder clearHangoutInviteKeepAliveRequest()
      {
        this.hangoutInviteKeepAliveRequest_ = Client.HangoutInviteKeepAliveRequest.getDefaultInstance();
        this.bitField1_ = (0xF7FFFFFF & this.bitField1_);
        return this;
      }

      public final Builder clearHangoutInviteKeepAliveResponse()
      {
        this.hangoutInviteKeepAliveResponse_ = Client.HangoutInviteKeepAliveResponse.getDefaultInstance();
        this.bitField1_ = (0xEFFFFFFF & this.bitField1_);
        return this;
      }

      public final Builder clearHangoutInviteReplyRequest()
      {
        this.hangoutInviteReplyRequest_ = Client.HangoutInviteReplyRequest.getDefaultInstance();
        this.bitField1_ = (0xDFFFFFFF & this.bitField1_);
        return this;
      }

      public final Builder clearHangoutInviteReplyResponse()
      {
        this.hangoutInviteReplyResponse_ = Client.HangoutInviteReplyResponse.getDefaultInstance();
        this.bitField1_ = (0xBFFFFFFF & this.bitField1_);
        return this;
      }

      public final Builder clearHangoutInviteRequest()
      {
        this.hangoutInviteRequest_ = Client.HangoutInviteRequest.getDefaultInstance();
        this.bitField1_ = (0xFDFFFFFF & this.bitField1_);
        return this;
      }

      public final Builder clearHangoutInviteResponse()
      {
        this.hangoutInviteResponse_ = Client.HangoutInviteResponse.getDefaultInstance();
        this.bitField1_ = (0xFBFFFFFF & this.bitField1_);
        return this;
      }

      public final Builder clearHangoutRingFinishRequest()
      {
        this.hangoutRingFinishRequest_ = Client.HangoutRingFinishRequest.getDefaultInstance();
        this.bitField2_ = (0xFFFFFFFD & this.bitField2_);
        return this;
      }

      public final Builder clearHangoutRingFinishResponse()
      {
        this.hangoutRingFinishResponse_ = Client.HangoutRingFinishResponse.getDefaultInstance();
        this.bitField2_ = (0xFFFFFFFB & this.bitField2_);
        return this;
      }

      public final Builder clearInvalidateLocalCache()
      {
        this.invalidateLocalCache_ = Client.InvalidateLocalCache.getDefaultInstance();
        this.bitField1_ = (0xFFFFFDFF & this.bitField1_);
        return this;
      }

      public final Builder clearInviteRequest()
      {
        this.inviteRequest_ = Client.InviteRequest.getDefaultInstance();
        this.bitField0_ = (0xF7FFFFFF & this.bitField0_);
        return this;
      }

      public final Builder clearInviteResponse()
      {
        this.inviteResponse_ = Client.InviteResponse.getDefaultInstance();
        this.bitField1_ = (0xFFFFFBFF & this.bitField1_);
        return this;
      }

      public final Builder clearLeaveConversationRequest()
      {
        this.leaveConversationRequest_ = Client.LeaveConversationRequest.getDefaultInstance();
        this.bitField0_ = (0xEFFFFFFF & this.bitField0_);
        return this;
      }

      public final Builder clearLeaveConversationResponse()
      {
        this.leaveConversationResponse_ = Client.LeaveConversationResponse.getDefaultInstance();
        this.bitField0_ = (0xDFFFFFFF & this.bitField0_);
        return this;
      }

      public final Builder clearMembershipChange()
      {
        this.membershipChange_ = Client.MembershipChange.getDefaultInstance();
        this.bitField0_ = (0xFFFFDFFF & this.bitField0_);
        return this;
      }

      public final Builder clearMigration()
      {
        this.migration_ = Client.Migration.getDefaultInstance();
        this.bitField1_ = (0xFFFFFFEF & this.bitField1_);
        return this;
      }

      public final Builder clearPingRequest()
      {
        this.pingRequest_ = Client.PingRequest.getDefaultInstance();
        this.bitField0_ = (0xFFEFFFFF & this.bitField0_);
        return this;
      }

      public final Builder clearPingResponse()
      {
        this.pingResponse_ = Client.PingResponse.getDefaultInstance();
        this.bitField0_ = (0xFFDFFFFF & this.bitField0_);
        return this;
      }

      public final Builder clearPresence()
      {
        this.presence_ = Client.Presence.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFBF & this.bitField0_);
        return this;
      }

      public final Builder clearPresenceRequest()
      {
        this.presenceRequest_ = Client.PresenceRequest.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        return this;
      }

      public final Builder clearPresenceResponse()
      {
        this.presenceResponse_ = Client.PresenceResponse.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFDF & this.bitField0_);
        return this;
      }

      public final Builder clearReceipt()
      {
        this.receipt_ = Client.Receipt.getDefaultInstance();
        this.bitField0_ = (0xFFFFFBFF & this.bitField0_);
        return this;
      }

      public final Builder clearReceiptRequest()
      {
        this.receiptRequest_ = Client.ReceiptRequest.getDefaultInstance();
        this.bitField0_ = (0xFFFFF7FF & this.bitField0_);
        return this;
      }

      public final Builder clearReceiptResponse()
      {
        this.receiptResponse_ = Client.ReceiptResponse.getDefaultInstance();
        this.bitField0_ = (0xFFFFEFFF & this.bitField0_);
        return this;
      }

      public final Builder clearReplyToInviteRequest()
      {
        this.replyToInviteRequest_ = Client.ReplyToInviteRequest.getDefaultInstance();
        this.bitField1_ = (0xFFFFFF7F & this.bitField1_);
        return this;
      }

      public final Builder clearReplyToInviteResponse()
      {
        this.replyToInviteResponse_ = Client.ReplyToInviteResponse.getDefaultInstance();
        this.bitField1_ = (0xFFFFF7FF & this.bitField1_);
        return this;
      }

      public final Builder clearRequestClientId()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.requestClientId_ = Client.BunchCommand.getDefaultInstance().getRequestClientId();
        return this;
      }

      public final Builder clearSetAclsRequest()
      {
        this.setAclsRequest_ = Client.SetAclsRequest.getDefaultInstance();
        this.bitField1_ = (0xFFFFFEFF & this.bitField1_);
        return this;
      }

      public final Builder clearSetAclsResponse()
      {
        this.setAclsResponse_ = Client.SetAclsResponse.getDefaultInstance();
        this.bitField1_ = (0xFFFFEFFF & this.bitField1_);
        return this;
      }

      public final Builder clearSuggestionsRequest()
      {
        this.suggestionsRequest_ = Client.SuggestionsRequest.getDefaultInstance();
        this.bitField1_ = (0xFFF7FFFF & this.bitField1_);
        return this;
      }

      public final Builder clearSuggestionsResponse()
      {
        this.suggestionsResponse_ = Client.SuggestionsResponse.getDefaultInstance();
        this.bitField1_ = (0xFFEFFFFF & this.bitField1_);
        return this;
      }

      public final Builder clearTileEvent()
      {
        this.tileEvent_ = Client.TileEvent.getDefaultInstance();
        this.bitField1_ = (0xFFFFFFF7 & this.bitField1_);
        return this;
      }

      public final Builder clearTileEventRequest()
      {
        this.tileEventRequest_ = Client.TileEventRequest.getDefaultInstance();
        this.bitField1_ = (0xFFFFFFFD & this.bitField1_);
        return this;
      }

      public final Builder clearTileEventResponse()
      {
        this.tileEventResponse_ = Client.TileEventResponse.getDefaultInstance();
        this.bitField1_ = (0xFFFFFFFB & this.bitField1_);
        return this;
      }

      public final Builder clearTyping()
      {
        this.typing_ = Client.Typing.getDefaultInstance();
        this.bitField0_ = (0xFFFFFDFF & this.bitField0_);
        return this;
      }

      public final Builder clearTypingRequest()
      {
        this.typingRequest_ = Client.TypingRequest.getDefaultInstance();
        this.bitField0_ = (0xFFFFFF7F & this.bitField0_);
        return this;
      }

      public final Builder clearTypingResponse()
      {
        this.typingResponse_ = Client.TypingResponse.getDefaultInstance();
        this.bitField0_ = (0xFFFFFEFF & this.bitField0_);
        return this;
      }

      public final Builder clearUserCreationRequest()
      {
        this.userCreationRequest_ = Client.UserCreationRequest.getDefaultInstance();
        this.bitField0_ = (0xFEFFFFFF & this.bitField0_);
        return this;
      }

      public final Builder clearUserCreationResponse()
      {
        this.userCreationResponse_ = Client.UserCreationResponse.getDefaultInstance();
        this.bitField0_ = (0xFDFFFFFF & this.bitField0_);
        return this;
      }

      public final Builder clearUserInfoRequest()
      {
        this.userInfoRequest_ = Client.UserInfoRequest.getDefaultInstance();
        this.bitField1_ = (0xFFFFDFFF & this.bitField1_);
        return this;
      }

      public final Builder clearUserInfoResponse()
      {
        this.userInfoResponse_ = Client.UserInfoResponse.getDefaultInstance();
        this.bitField1_ = (0xFFFFBFFF & this.bitField1_);
        return this;
      }

      public final Client.ChatMessage getChatMessage()
      {
        return this.chatMessage_;
      }

      public final Client.ChatMessageRequest getChatMessageRequest()
      {
        return this.chatMessageRequest_;
      }

      public final Client.ChatMessageResponse getChatMessageResponse()
      {
        return this.chatMessageResponse_;
      }

      public final Client.ConversationJoinRequest getConversationJoinRequest()
      {
        return this.conversationJoinRequest_;
      }

      public final Client.ConversationJoinResponse getConversationJoinResponse()
      {
        return this.conversationJoinResponse_;
      }

      public final Client.ConversationListRequest getConversationListRequest()
      {
        return this.conversationListRequest_;
      }

      public final Client.ConversationListResponse getConversationListResponse()
      {
        return this.conversationListResponse_;
      }

      public final Client.ConversationPreferenceRequest getConversationPreferenceRequest()
      {
        return this.conversationPreferenceRequest_;
      }

      public final Client.ConversationPreferenceResponse getConversationPreferenceResponse()
      {
        return this.conversationPreferenceResponse_;
      }

      public final Client.ConversationRenameRequest getConversationRenameRequest()
      {
        return this.conversationRenameRequest_;
      }

      public final Client.ConversationRenameResponse getConversationRenameResponse()
      {
        return this.conversationRenameResponse_;
      }

      public final Client.NewConversationRequest getConversationRequest()
      {
        return this.conversationRequest_;
      }

      public final Client.NewConversationResponse getConversationResponse()
      {
        return this.conversationResponse_;
      }

      public final Client.ConversationSearchRequest getConversationSearchRequest()
      {
        return this.conversationSearchRequest_;
      }

      public final Client.ConversationSearchResponse getConversationSearchResponse()
      {
        return this.conversationSearchResponse_;
      }

      public final Client.BunchCommand getDefaultInstanceForType()
      {
        return Client.BunchCommand.getDefaultInstance();
      }

      public final Client.DeviceRegistrationRequest getDeviceRegistrationRequest()
      {
        return this.deviceRegistrationRequest_;
      }

      public final Client.DeviceRegistrationResponse getDeviceRegistrationResponse()
      {
        return this.deviceRegistrationResponse_;
      }

      public final Client.Error getError()
      {
        return this.error_;
      }

      public final Client.EventSearchRequest getEventSearchRequest()
      {
        return this.eventSearchRequest_;
      }

      public final Client.EventSearchResponse getEventSearchResponse()
      {
        return this.eventSearchResponse_;
      }

      public final Client.EventStreamResponse getEventSteamResponse()
      {
        return this.eventSteamResponse_;
      }

      public final Client.EventStreamRequest getEventStreamRequest()
      {
        return this.eventStreamRequest_;
      }

      public final Client.GlobalConversationPreferencesRequest getGlobalConversationPreferencesRequest()
      {
        return this.globalConversationPreferencesRequest_;
      }

      public final Client.GlobalConversationPreferencesResponse getGlobalConversationPreferencesResponse()
      {
        return this.globalConversationPreferencesResponse_;
      }

      public final Client.GroupConversationRename getGroupConversationRename()
      {
        return this.groupConversationRename_;
      }

      public final Client.HangoutInviteFinishRequest getHangoutInviteFinishRequest()
      {
        return this.hangoutInviteFinishRequest_;
      }

      public final Client.HangoutInviteFinishResponse getHangoutInviteFinishResponse()
      {
        return this.hangoutInviteFinishResponse_;
      }

      public final Client.HangoutInviteKeepAliveRequest getHangoutInviteKeepAliveRequest()
      {
        return this.hangoutInviteKeepAliveRequest_;
      }

      public final Client.HangoutInviteKeepAliveResponse getHangoutInviteKeepAliveResponse()
      {
        return this.hangoutInviteKeepAliveResponse_;
      }

      public final Client.HangoutInviteReplyRequest getHangoutInviteReplyRequest()
      {
        return this.hangoutInviteReplyRequest_;
      }

      public final Client.HangoutInviteReplyResponse getHangoutInviteReplyResponse()
      {
        return this.hangoutInviteReplyResponse_;
      }

      public final Client.HangoutInviteRequest getHangoutInviteRequest()
      {
        return this.hangoutInviteRequest_;
      }

      public final Client.HangoutInviteResponse getHangoutInviteResponse()
      {
        return this.hangoutInviteResponse_;
      }

      public final Client.HangoutRingFinishRequest getHangoutRingFinishRequest()
      {
        return this.hangoutRingFinishRequest_;
      }

      public final Client.HangoutRingFinishResponse getHangoutRingFinishResponse()
      {
        return this.hangoutRingFinishResponse_;
      }

      public final Client.InvalidateLocalCache getInvalidateLocalCache()
      {
        return this.invalidateLocalCache_;
      }

      public final Client.InviteRequest getInviteRequest()
      {
        return this.inviteRequest_;
      }

      public final Client.InviteResponse getInviteResponse()
      {
        return this.inviteResponse_;
      }

      public final Client.LeaveConversationRequest getLeaveConversationRequest()
      {
        return this.leaveConversationRequest_;
      }

      public final Client.LeaveConversationResponse getLeaveConversationResponse()
      {
        return this.leaveConversationResponse_;
      }

      public final Client.MembershipChange getMembershipChange()
      {
        return this.membershipChange_;
      }

      public final Client.Migration getMigration()
      {
        return this.migration_;
      }

      public final Client.PingRequest getPingRequest()
      {
        return this.pingRequest_;
      }

      public final Client.PingResponse getPingResponse()
      {
        return this.pingResponse_;
      }

      public final Client.Presence getPresence()
      {
        return this.presence_;
      }

      public final Client.PresenceRequest getPresenceRequest()
      {
        return this.presenceRequest_;
      }

      public final Client.PresenceResponse getPresenceResponse()
      {
        return this.presenceResponse_;
      }

      public final Client.Receipt getReceipt()
      {
        return this.receipt_;
      }

      public final Client.ReceiptRequest getReceiptRequest()
      {
        return this.receiptRequest_;
      }

      public final Client.ReceiptResponse getReceiptResponse()
      {
        return this.receiptResponse_;
      }

      public final Client.ReplyToInviteRequest getReplyToInviteRequest()
      {
        return this.replyToInviteRequest_;
      }

      public final Client.ReplyToInviteResponse getReplyToInviteResponse()
      {
        return this.replyToInviteResponse_;
      }

      public final String getRequestClientId()
      {
        Object localObject = this.requestClientId_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.requestClientId_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final Client.SetAclsRequest getSetAclsRequest()
      {
        return this.setAclsRequest_;
      }

      public final Client.SetAclsResponse getSetAclsResponse()
      {
        return this.setAclsResponse_;
      }

      public final Client.SuggestionsRequest getSuggestionsRequest()
      {
        return this.suggestionsRequest_;
      }

      public final Client.SuggestionsResponse getSuggestionsResponse()
      {
        return this.suggestionsResponse_;
      }

      public final Client.TileEvent getTileEvent()
      {
        return this.tileEvent_;
      }

      public final Client.TileEventRequest getTileEventRequest()
      {
        return this.tileEventRequest_;
      }

      public final Client.TileEventResponse getTileEventResponse()
      {
        return this.tileEventResponse_;
      }

      public final Client.Typing getTyping()
      {
        return this.typing_;
      }

      public final Client.TypingRequest getTypingRequest()
      {
        return this.typingRequest_;
      }

      public final Client.TypingResponse getTypingResponse()
      {
        return this.typingResponse_;
      }

      public final Client.UserCreationRequest getUserCreationRequest()
      {
        return this.userCreationRequest_;
      }

      public final Client.UserCreationResponse getUserCreationResponse()
      {
        return this.userCreationResponse_;
      }

      public final Client.UserInfoRequest getUserInfoRequest()
      {
        return this.userInfoRequest_;
      }

      public final Client.UserInfoResponse getUserInfoResponse()
      {
        return this.userInfoResponse_;
      }

      public final boolean hasChatMessage()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasChatMessageRequest()
      {
        if ((0x4 & this.bitField0_) == 4);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasChatMessageResponse()
      {
        if ((0x8 & this.bitField0_) == 8);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasConversationJoinRequest()
      {
        if ((0x800000 & this.bitField1_) == 8388608);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasConversationJoinResponse()
      {
        if ((0x1000000 & this.bitField1_) == 16777216);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasConversationListRequest()
      {
        if ((0x400000 & this.bitField0_) == 4194304);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasConversationListResponse()
      {
        if ((0x800000 & this.bitField0_) == 8388608);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasConversationPreferenceRequest()
      {
        if ((0x20 & this.bitField1_) == 32);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasConversationPreferenceResponse()
      {
        if ((0x40 & this.bitField1_) == 64);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasConversationRenameRequest()
      {
        if ((0x40000000 & this.bitField0_) == 1073741824);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasConversationRenameResponse()
      {
        if ((0x80000000 & this.bitField0_) == -2147483648);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasConversationRequest()
      {
        if ((0x4000 & this.bitField0_) == 16384);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasConversationResponse()
      {
        if ((0x8000 & this.bitField0_) == 32768);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasConversationSearchRequest()
      {
        if ((0x8000 & this.bitField1_) == 32768);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasConversationSearchResponse()
      {
        if ((0x10000 & this.bitField1_) == 65536);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasDeviceRegistrationRequest()
      {
        if ((0x40000 & this.bitField0_) == 262144);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasDeviceRegistrationResponse()
      {
        if ((0x80000 & this.bitField0_) == 524288);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasError()
      {
        if ((0x4000000 & this.bitField0_) == 67108864);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasEventSearchRequest()
      {
        if ((0x20000 & this.bitField1_) == 131072);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasEventSearchResponse()
      {
        if ((0x40000 & this.bitField1_) == 262144);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasEventSteamResponse()
      {
        if ((0x20000 & this.bitField0_) == 131072);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasEventStreamRequest()
      {
        if ((0x10000 & this.bitField0_) == 65536);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasGlobalConversationPreferencesRequest()
      {
        if ((0x200000 & this.bitField1_) == 2097152);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasGlobalConversationPreferencesResponse()
      {
        if ((0x400000 & this.bitField1_) == 4194304);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasGroupConversationRename()
      {
        int i = 1;
        if ((0x1 & this.bitField1_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean hasHangoutInviteFinishRequest()
      {
        if ((0x80000000 & this.bitField1_) == -2147483648);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasHangoutInviteFinishResponse()
      {
        int i = 1;
        if ((0x1 & this.bitField2_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean hasHangoutInviteKeepAliveRequest()
      {
        if ((0x8000000 & this.bitField1_) == 134217728);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasHangoutInviteKeepAliveResponse()
      {
        if ((0x10000000 & this.bitField1_) == 268435456);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasHangoutInviteReplyRequest()
      {
        if ((0x20000000 & this.bitField1_) == 536870912);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasHangoutInviteReplyResponse()
      {
        if ((0x40000000 & this.bitField1_) == 1073741824);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasHangoutInviteRequest()
      {
        if ((0x2000000 & this.bitField1_) == 33554432);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasHangoutInviteResponse()
      {
        if ((0x4000000 & this.bitField1_) == 67108864);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasHangoutRingFinishRequest()
      {
        if ((0x2 & this.bitField2_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasHangoutRingFinishResponse()
      {
        if ((0x4 & this.bitField2_) == 4);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasInvalidateLocalCache()
      {
        if ((0x200 & this.bitField1_) == 512);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasInviteRequest()
      {
        if ((0x8000000 & this.bitField0_) == 134217728);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasInviteResponse()
      {
        if ((0x400 & this.bitField1_) == 1024);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasLeaveConversationRequest()
      {
        if ((0x10000000 & this.bitField0_) == 268435456);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasLeaveConversationResponse()
      {
        if ((0x20000000 & this.bitField0_) == 536870912);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasMembershipChange()
      {
        if ((0x2000 & this.bitField0_) == 8192);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasMigration()
      {
        if ((0x10 & this.bitField1_) == 16);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasPingRequest()
      {
        if ((0x100000 & this.bitField0_) == 1048576);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasPingResponse()
      {
        if ((0x200000 & this.bitField0_) == 2097152);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasPresence()
      {
        if ((0x40 & this.bitField0_) == 64);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasPresenceRequest()
      {
        if ((0x10 & this.bitField0_) == 16);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasPresenceResponse()
      {
        if ((0x20 & this.bitField0_) == 32);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasReceipt()
      {
        if ((0x400 & this.bitField0_) == 1024);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasReceiptRequest()
      {
        if ((0x800 & this.bitField0_) == 2048);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasReceiptResponse()
      {
        if ((0x1000 & this.bitField0_) == 4096);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasReplyToInviteRequest()
      {
        if ((0x80 & this.bitField1_) == 128);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasReplyToInviteResponse()
      {
        if ((0x800 & this.bitField1_) == 2048);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasRequestClientId()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean hasSetAclsRequest()
      {
        if ((0x100 & this.bitField1_) == 256);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasSetAclsResponse()
      {
        if ((0x1000 & this.bitField1_) == 4096);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasSuggestionsRequest()
      {
        if ((0x80000 & this.bitField1_) == 524288);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasSuggestionsResponse()
      {
        if ((0x100000 & this.bitField1_) == 1048576);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasTileEvent()
      {
        if ((0x8 & this.bitField1_) == 8);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasTileEventRequest()
      {
        if ((0x2 & this.bitField1_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasTileEventResponse()
      {
        if ((0x4 & this.bitField1_) == 4);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasTyping()
      {
        if ((0x200 & this.bitField0_) == 512);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasTypingRequest()
      {
        if ((0x80 & this.bitField0_) == 128);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasTypingResponse()
      {
        if ((0x100 & this.bitField0_) == 256);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasUserCreationRequest()
      {
        if ((0x1000000 & this.bitField0_) == 16777216);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasUserCreationResponse()
      {
        if ((0x2000000 & this.bitField0_) == 33554432);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasUserInfoRequest()
      {
        if ((0x2000 & this.bitField1_) == 8192);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasUserInfoResponse()
      {
        if ((0x4000 & this.bitField1_) == 16384);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Client.BunchCommand paramBunchCommand)
      {
        if (paramBunchCommand == Client.BunchCommand.getDefaultInstance());
        Client.ChatMessage localChatMessage;
        label77: Client.ChatMessageRequest localChatMessageRequest;
        label139: Client.ChatMessageResponse localChatMessageResponse;
        label203: Client.PresenceRequest localPresenceRequest;
        label268: Client.PresenceResponse localPresenceResponse;
        label333: Client.Presence localPresence;
        label398: Client.TypingRequest localTypingRequest;
        label465: Client.TypingResponse localTypingResponse;
        label533: Client.Typing localTyping;
        label601: Client.Receipt localReceipt;
        label669: Client.ReceiptRequest localReceiptRequest;
        label737: Client.ReceiptResponse localReceiptResponse;
        label805: Client.MembershipChange localMembershipChange;
        label873: Client.NewConversationRequest localNewConversationRequest;
        label941: Client.NewConversationResponse localNewConversationResponse;
        label1009: Client.EventStreamRequest localEventStreamRequest;
        label1077: Client.EventStreamResponse localEventStreamResponse;
        label1145: Client.DeviceRegistrationRequest localDeviceRegistrationRequest;
        label1213: Client.DeviceRegistrationResponse localDeviceRegistrationResponse;
        label1281: Client.PingRequest localPingRequest;
        label1349: Client.PingResponse localPingResponse;
        label1417: Client.ConversationListRequest localConversationListRequest;
        label1485: Client.ConversationListResponse localConversationListResponse;
        label1553: Client.UserCreationRequest localUserCreationRequest;
        label1621: Client.UserCreationResponse localUserCreationResponse;
        label1689: Client.Error localError;
        label1757: Client.InviteRequest localInviteRequest;
        label1825: Client.LeaveConversationRequest localLeaveConversationRequest;
        label1893: Client.LeaveConversationResponse localLeaveConversationResponse;
        label1961: Client.ConversationRenameRequest localConversationRenameRequest;
        label2029: Client.ConversationRenameResponse localConversationRenameResponse;
        label2097: Client.GroupConversationRename localGroupConversationRename;
        label2161: Client.TileEventRequest localTileEventRequest;
        label2223: Client.TileEventResponse localTileEventResponse;
        label2285: Client.TileEvent localTileEvent;
        label2349: Client.Migration localMigration;
        label2414: Client.ConversationPreferenceRequest localConversationPreferenceRequest;
        label2479: Client.ConversationPreferenceResponse localConversationPreferenceResponse;
        label2544: Client.ReplyToInviteRequest localReplyToInviteRequest;
        label2611: Client.SetAclsRequest localSetAclsRequest;
        label2679: Client.InvalidateLocalCache localInvalidateLocalCache;
        label2747: Client.InviteResponse localInviteResponse;
        label2815: Client.ReplyToInviteResponse localReplyToInviteResponse;
        label2883: Client.SetAclsResponse localSetAclsResponse;
        label2951: Client.UserInfoRequest localUserInfoRequest;
        label3019: Client.UserInfoResponse localUserInfoResponse;
        label3087: Client.ConversationSearchRequest localConversationSearchRequest;
        label3155: Client.ConversationSearchResponse localConversationSearchResponse;
        label3223: Client.EventSearchRequest localEventSearchRequest;
        label3291: Client.EventSearchResponse localEventSearchResponse;
        label3359: Client.SuggestionsRequest localSuggestionsRequest;
        label3427: Client.SuggestionsResponse localSuggestionsResponse;
        label3495: Client.GlobalConversationPreferencesRequest localGlobalConversationPreferencesRequest;
        label3563: Client.GlobalConversationPreferencesResponse localGlobalConversationPreferencesResponse;
        label3631: Client.ConversationJoinRequest localConversationJoinRequest;
        label3699: Client.ConversationJoinResponse localConversationJoinResponse;
        label3767: Client.HangoutInviteRequest localHangoutInviteRequest;
        label3835: Client.HangoutInviteResponse localHangoutInviteResponse;
        label3903: Client.HangoutInviteKeepAliveRequest localHangoutInviteKeepAliveRequest;
        label3971: Client.HangoutInviteKeepAliveResponse localHangoutInviteKeepAliveResponse;
        label4039: Client.HangoutInviteReplyRequest localHangoutInviteReplyRequest;
        label4107: Client.HangoutInviteReplyResponse localHangoutInviteReplyResponse;
        label4175: Client.HangoutInviteFinishRequest localHangoutInviteFinishRequest;
        label4243: Client.HangoutInviteFinishResponse localHangoutInviteFinishResponse;
        label4307: Client.HangoutRingFinishRequest localHangoutRingFinishRequest;
        label4367: 
        do
        {
          return this;
          if (paramBunchCommand.hasRequestClientId())
            setRequestClientId(paramBunchCommand.getRequestClientId());
          if (paramBunchCommand.hasChatMessage())
          {
            localChatMessage = paramBunchCommand.getChatMessage();
            if (((0x2 & this.bitField0_) != 2) || (this.chatMessage_ == Client.ChatMessage.getDefaultInstance()))
              break;
            this.chatMessage_ = Client.ChatMessage.newBuilder(this.chatMessage_).mergeFrom(localChatMessage).buildPartial();
            this.bitField0_ = (0x2 | this.bitField0_);
          }
          if (paramBunchCommand.hasChatMessageRequest())
          {
            localChatMessageRequest = paramBunchCommand.getChatMessageRequest();
            if (((0x4 & this.bitField0_) != 4) || (this.chatMessageRequest_ == Client.ChatMessageRequest.getDefaultInstance()))
              break label4449;
            this.chatMessageRequest_ = Client.ChatMessageRequest.newBuilder(this.chatMessageRequest_).mergeFrom(localChatMessageRequest).buildPartial();
            this.bitField0_ = (0x4 | this.bitField0_);
          }
          if (paramBunchCommand.hasChatMessageResponse())
          {
            localChatMessageResponse = paramBunchCommand.getChatMessageResponse();
            if (((0x8 & this.bitField0_) != 8) || (this.chatMessageResponse_ == Client.ChatMessageResponse.getDefaultInstance()))
              break label4458;
            this.chatMessageResponse_ = Client.ChatMessageResponse.newBuilder(this.chatMessageResponse_).mergeFrom(localChatMessageResponse).buildPartial();
            this.bitField0_ = (0x8 | this.bitField0_);
          }
          if (paramBunchCommand.hasPresenceRequest())
          {
            localPresenceRequest = paramBunchCommand.getPresenceRequest();
            if (((0x10 & this.bitField0_) != 16) || (this.presenceRequest_ == Client.PresenceRequest.getDefaultInstance()))
              break label4467;
            this.presenceRequest_ = Client.PresenceRequest.newBuilder(this.presenceRequest_).mergeFrom(localPresenceRequest).buildPartial();
            this.bitField0_ = (0x10 | this.bitField0_);
          }
          if (paramBunchCommand.hasPresenceResponse())
          {
            localPresenceResponse = paramBunchCommand.getPresenceResponse();
            if (((0x20 & this.bitField0_) != 32) || (this.presenceResponse_ == Client.PresenceResponse.getDefaultInstance()))
              break label4476;
            this.presenceResponse_ = Client.PresenceResponse.newBuilder(this.presenceResponse_).mergeFrom(localPresenceResponse).buildPartial();
            this.bitField0_ = (0x20 | this.bitField0_);
          }
          if (paramBunchCommand.hasPresence())
          {
            localPresence = paramBunchCommand.getPresence();
            if (((0x40 & this.bitField0_) != 64) || (this.presence_ == Client.Presence.getDefaultInstance()))
              break label4485;
            this.presence_ = Client.Presence.newBuilder(this.presence_).mergeFrom(localPresence).buildPartial();
            this.bitField0_ = (0x40 | this.bitField0_);
          }
          if (paramBunchCommand.hasTypingRequest())
          {
            localTypingRequest = paramBunchCommand.getTypingRequest();
            if (((0x80 & this.bitField0_) != 128) || (this.typingRequest_ == Client.TypingRequest.getDefaultInstance()))
              break label4494;
            this.typingRequest_ = Client.TypingRequest.newBuilder(this.typingRequest_).mergeFrom(localTypingRequest).buildPartial();
            this.bitField0_ = (0x80 | this.bitField0_);
          }
          if (paramBunchCommand.hasTypingResponse())
          {
            localTypingResponse = paramBunchCommand.getTypingResponse();
            if (((0x100 & this.bitField0_) != 256) || (this.typingResponse_ == Client.TypingResponse.getDefaultInstance()))
              break label4503;
            this.typingResponse_ = Client.TypingResponse.newBuilder(this.typingResponse_).mergeFrom(localTypingResponse).buildPartial();
            this.bitField0_ = (0x100 | this.bitField0_);
          }
          if (paramBunchCommand.hasTyping())
          {
            localTyping = paramBunchCommand.getTyping();
            if (((0x200 & this.bitField0_) != 512) || (this.typing_ == Client.Typing.getDefaultInstance()))
              break label4512;
            this.typing_ = Client.Typing.newBuilder(this.typing_).mergeFrom(localTyping).buildPartial();
            this.bitField0_ = (0x200 | this.bitField0_);
          }
          if (paramBunchCommand.hasReceipt())
          {
            localReceipt = paramBunchCommand.getReceipt();
            if (((0x400 & this.bitField0_) != 1024) || (this.receipt_ == Client.Receipt.getDefaultInstance()))
              break label4521;
            this.receipt_ = Client.Receipt.newBuilder(this.receipt_).mergeFrom(localReceipt).buildPartial();
            this.bitField0_ = (0x400 | this.bitField0_);
          }
          if (paramBunchCommand.hasReceiptRequest())
          {
            localReceiptRequest = paramBunchCommand.getReceiptRequest();
            if (((0x800 & this.bitField0_) != 2048) || (this.receiptRequest_ == Client.ReceiptRequest.getDefaultInstance()))
              break label4530;
            this.receiptRequest_ = Client.ReceiptRequest.newBuilder(this.receiptRequest_).mergeFrom(localReceiptRequest).buildPartial();
            this.bitField0_ = (0x800 | this.bitField0_);
          }
          if (paramBunchCommand.hasReceiptResponse())
          {
            localReceiptResponse = paramBunchCommand.getReceiptResponse();
            if (((0x1000 & this.bitField0_) != 4096) || (this.receiptResponse_ == Client.ReceiptResponse.getDefaultInstance()))
              break label4539;
            this.receiptResponse_ = Client.ReceiptResponse.newBuilder(this.receiptResponse_).mergeFrom(localReceiptResponse).buildPartial();
            this.bitField0_ = (0x1000 | this.bitField0_);
          }
          if (paramBunchCommand.hasMembershipChange())
          {
            localMembershipChange = paramBunchCommand.getMembershipChange();
            if (((0x2000 & this.bitField0_) != 8192) || (this.membershipChange_ == Client.MembershipChange.getDefaultInstance()))
              break label4548;
            this.membershipChange_ = Client.MembershipChange.newBuilder(this.membershipChange_).mergeFrom(localMembershipChange).buildPartial();
            this.bitField0_ = (0x2000 | this.bitField0_);
          }
          if (paramBunchCommand.hasConversationRequest())
          {
            localNewConversationRequest = paramBunchCommand.getConversationRequest();
            if (((0x4000 & this.bitField0_) != 16384) || (this.conversationRequest_ == Client.NewConversationRequest.getDefaultInstance()))
              break label4557;
            this.conversationRequest_ = Client.NewConversationRequest.newBuilder(this.conversationRequest_).mergeFrom(localNewConversationRequest).buildPartial();
            this.bitField0_ = (0x4000 | this.bitField0_);
          }
          if (paramBunchCommand.hasConversationResponse())
          {
            localNewConversationResponse = paramBunchCommand.getConversationResponse();
            if (((0x8000 & this.bitField0_) != 32768) || (this.conversationResponse_ == Client.NewConversationResponse.getDefaultInstance()))
              break label4566;
            this.conversationResponse_ = Client.NewConversationResponse.newBuilder(this.conversationResponse_).mergeFrom(localNewConversationResponse).buildPartial();
            this.bitField0_ = (0x8000 | this.bitField0_);
          }
          if (paramBunchCommand.hasEventStreamRequest())
          {
            localEventStreamRequest = paramBunchCommand.getEventStreamRequest();
            if (((0x10000 & this.bitField0_) != 65536) || (this.eventStreamRequest_ == Client.EventStreamRequest.getDefaultInstance()))
              break label4575;
            this.eventStreamRequest_ = Client.EventStreamRequest.newBuilder(this.eventStreamRequest_).mergeFrom(localEventStreamRequest).buildPartial();
            this.bitField0_ = (0x10000 | this.bitField0_);
          }
          if (paramBunchCommand.hasEventSteamResponse())
          {
            localEventStreamResponse = paramBunchCommand.getEventSteamResponse();
            if (((0x20000 & this.bitField0_) != 131072) || (this.eventSteamResponse_ == Client.EventStreamResponse.getDefaultInstance()))
              break label4584;
            this.eventSteamResponse_ = Client.EventStreamResponse.newBuilder(this.eventSteamResponse_).mergeFrom(localEventStreamResponse).buildPartial();
            this.bitField0_ = (0x20000 | this.bitField0_);
          }
          if (paramBunchCommand.hasDeviceRegistrationRequest())
          {
            localDeviceRegistrationRequest = paramBunchCommand.getDeviceRegistrationRequest();
            if (((0x40000 & this.bitField0_) != 262144) || (this.deviceRegistrationRequest_ == Client.DeviceRegistrationRequest.getDefaultInstance()))
              break label4593;
            this.deviceRegistrationRequest_ = Client.DeviceRegistrationRequest.newBuilder(this.deviceRegistrationRequest_).mergeFrom(localDeviceRegistrationRequest).buildPartial();
            this.bitField0_ = (0x40000 | this.bitField0_);
          }
          if (paramBunchCommand.hasDeviceRegistrationResponse())
          {
            localDeviceRegistrationResponse = paramBunchCommand.getDeviceRegistrationResponse();
            if (((0x80000 & this.bitField0_) != 524288) || (this.deviceRegistrationResponse_ == Client.DeviceRegistrationResponse.getDefaultInstance()))
              break label4602;
            this.deviceRegistrationResponse_ = Client.DeviceRegistrationResponse.newBuilder(this.deviceRegistrationResponse_).mergeFrom(localDeviceRegistrationResponse).buildPartial();
            this.bitField0_ = (0x80000 | this.bitField0_);
          }
          if (paramBunchCommand.hasPingRequest())
          {
            localPingRequest = paramBunchCommand.getPingRequest();
            if (((0x100000 & this.bitField0_) != 1048576) || (this.pingRequest_ == Client.PingRequest.getDefaultInstance()))
              break label4611;
            this.pingRequest_ = Client.PingRequest.newBuilder(this.pingRequest_).mergeFrom(localPingRequest).buildPartial();
            this.bitField0_ = (0x100000 | this.bitField0_);
          }
          if (paramBunchCommand.hasPingResponse())
          {
            localPingResponse = paramBunchCommand.getPingResponse();
            if (((0x200000 & this.bitField0_) != 2097152) || (this.pingResponse_ == Client.PingResponse.getDefaultInstance()))
              break label4620;
            this.pingResponse_ = Client.PingResponse.newBuilder(this.pingResponse_).mergeFrom(localPingResponse).buildPartial();
            this.bitField0_ = (0x200000 | this.bitField0_);
          }
          if (paramBunchCommand.hasConversationListRequest())
          {
            localConversationListRequest = paramBunchCommand.getConversationListRequest();
            if (((0x400000 & this.bitField0_) != 4194304) || (this.conversationListRequest_ == Client.ConversationListRequest.getDefaultInstance()))
              break label4629;
            this.conversationListRequest_ = Client.ConversationListRequest.newBuilder(this.conversationListRequest_).mergeFrom(localConversationListRequest).buildPartial();
            this.bitField0_ = (0x400000 | this.bitField0_);
          }
          if (paramBunchCommand.hasConversationListResponse())
          {
            localConversationListResponse = paramBunchCommand.getConversationListResponse();
            if (((0x800000 & this.bitField0_) != 8388608) || (this.conversationListResponse_ == Client.ConversationListResponse.getDefaultInstance()))
              break label4638;
            this.conversationListResponse_ = Client.ConversationListResponse.newBuilder(this.conversationListResponse_).mergeFrom(localConversationListResponse).buildPartial();
            this.bitField0_ = (0x800000 | this.bitField0_);
          }
          if (paramBunchCommand.hasUserCreationRequest())
          {
            localUserCreationRequest = paramBunchCommand.getUserCreationRequest();
            if (((0x1000000 & this.bitField0_) != 16777216) || (this.userCreationRequest_ == Client.UserCreationRequest.getDefaultInstance()))
              break label4647;
            this.userCreationRequest_ = Client.UserCreationRequest.newBuilder(this.userCreationRequest_).mergeFrom(localUserCreationRequest).buildPartial();
            this.bitField0_ = (0x1000000 | this.bitField0_);
          }
          if (paramBunchCommand.hasUserCreationResponse())
          {
            localUserCreationResponse = paramBunchCommand.getUserCreationResponse();
            if (((0x2000000 & this.bitField0_) != 33554432) || (this.userCreationResponse_ == Client.UserCreationResponse.getDefaultInstance()))
              break label4656;
            this.userCreationResponse_ = Client.UserCreationResponse.newBuilder(this.userCreationResponse_).mergeFrom(localUserCreationResponse).buildPartial();
            this.bitField0_ = (0x2000000 | this.bitField0_);
          }
          if (paramBunchCommand.hasError())
          {
            localError = paramBunchCommand.getError();
            if (((0x4000000 & this.bitField0_) != 67108864) || (this.error_ == Client.Error.getDefaultInstance()))
              break label4665;
            this.error_ = Client.Error.newBuilder(this.error_).mergeFrom(localError).buildPartial();
            this.bitField0_ = (0x4000000 | this.bitField0_);
          }
          if (paramBunchCommand.hasInviteRequest())
          {
            localInviteRequest = paramBunchCommand.getInviteRequest();
            if (((0x8000000 & this.bitField0_) != 134217728) || (this.inviteRequest_ == Client.InviteRequest.getDefaultInstance()))
              break label4674;
            this.inviteRequest_ = Client.InviteRequest.newBuilder(this.inviteRequest_).mergeFrom(localInviteRequest).buildPartial();
            this.bitField0_ = (0x8000000 | this.bitField0_);
          }
          if (paramBunchCommand.hasLeaveConversationRequest())
          {
            localLeaveConversationRequest = paramBunchCommand.getLeaveConversationRequest();
            if (((0x10000000 & this.bitField0_) != 268435456) || (this.leaveConversationRequest_ == Client.LeaveConversationRequest.getDefaultInstance()))
              break label4683;
            this.leaveConversationRequest_ = Client.LeaveConversationRequest.newBuilder(this.leaveConversationRequest_).mergeFrom(localLeaveConversationRequest).buildPartial();
            this.bitField0_ = (0x10000000 | this.bitField0_);
          }
          if (paramBunchCommand.hasLeaveConversationResponse())
          {
            localLeaveConversationResponse = paramBunchCommand.getLeaveConversationResponse();
            if (((0x20000000 & this.bitField0_) != 536870912) || (this.leaveConversationResponse_ == Client.LeaveConversationResponse.getDefaultInstance()))
              break label4692;
            this.leaveConversationResponse_ = Client.LeaveConversationResponse.newBuilder(this.leaveConversationResponse_).mergeFrom(localLeaveConversationResponse).buildPartial();
            this.bitField0_ = (0x20000000 | this.bitField0_);
          }
          if (paramBunchCommand.hasConversationRenameRequest())
          {
            localConversationRenameRequest = paramBunchCommand.getConversationRenameRequest();
            if (((0x40000000 & this.bitField0_) != 1073741824) || (this.conversationRenameRequest_ == Client.ConversationRenameRequest.getDefaultInstance()))
              break label4701;
            this.conversationRenameRequest_ = Client.ConversationRenameRequest.newBuilder(this.conversationRenameRequest_).mergeFrom(localConversationRenameRequest).buildPartial();
            this.bitField0_ = (0x40000000 | this.bitField0_);
          }
          if (paramBunchCommand.hasConversationRenameResponse())
          {
            localConversationRenameResponse = paramBunchCommand.getConversationRenameResponse();
            if (((0x80000000 & this.bitField0_) != -2147483648) || (this.conversationRenameResponse_ == Client.ConversationRenameResponse.getDefaultInstance()))
              break label4710;
            this.conversationRenameResponse_ = Client.ConversationRenameResponse.newBuilder(this.conversationRenameResponse_).mergeFrom(localConversationRenameResponse).buildPartial();
            this.bitField0_ = (0x80000000 | this.bitField0_);
          }
          if (paramBunchCommand.hasGroupConversationRename())
          {
            localGroupConversationRename = paramBunchCommand.getGroupConversationRename();
            if (((0x1 & this.bitField1_) != 1) || (this.groupConversationRename_ == Client.GroupConversationRename.getDefaultInstance()))
              break label4719;
            this.groupConversationRename_ = Client.GroupConversationRename.newBuilder(this.groupConversationRename_).mergeFrom(localGroupConversationRename).buildPartial();
            this.bitField1_ = (0x1 | this.bitField1_);
          }
          if (paramBunchCommand.hasTileEventRequest())
          {
            localTileEventRequest = paramBunchCommand.getTileEventRequest();
            if (((0x2 & this.bitField1_) != 2) || (this.tileEventRequest_ == Client.TileEventRequest.getDefaultInstance()))
              break label4728;
            this.tileEventRequest_ = Client.TileEventRequest.newBuilder(this.tileEventRequest_).mergeFrom(localTileEventRequest).buildPartial();
            this.bitField1_ = (0x2 | this.bitField1_);
          }
          if (paramBunchCommand.hasTileEventResponse())
          {
            localTileEventResponse = paramBunchCommand.getTileEventResponse();
            if (((0x4 & this.bitField1_) != 4) || (this.tileEventResponse_ == Client.TileEventResponse.getDefaultInstance()))
              break label4737;
            this.tileEventResponse_ = Client.TileEventResponse.newBuilder(this.tileEventResponse_).mergeFrom(localTileEventResponse).buildPartial();
            this.bitField1_ = (0x4 | this.bitField1_);
          }
          if (paramBunchCommand.hasTileEvent())
          {
            localTileEvent = paramBunchCommand.getTileEvent();
            if (((0x8 & this.bitField1_) != 8) || (this.tileEvent_ == Client.TileEvent.getDefaultInstance()))
              break label4746;
            this.tileEvent_ = Client.TileEvent.newBuilder(this.tileEvent_).mergeFrom(localTileEvent).buildPartial();
            this.bitField1_ = (0x8 | this.bitField1_);
          }
          if (paramBunchCommand.hasMigration())
          {
            localMigration = paramBunchCommand.getMigration();
            if (((0x10 & this.bitField1_) != 16) || (this.migration_ == Client.Migration.getDefaultInstance()))
              break label4755;
            this.migration_ = Client.Migration.newBuilder(this.migration_).mergeFrom(localMigration).buildPartial();
            this.bitField1_ = (0x10 | this.bitField1_);
          }
          if (paramBunchCommand.hasConversationPreferenceRequest())
          {
            localConversationPreferenceRequest = paramBunchCommand.getConversationPreferenceRequest();
            if (((0x20 & this.bitField1_) != 32) || (this.conversationPreferenceRequest_ == Client.ConversationPreferenceRequest.getDefaultInstance()))
              break label4764;
            this.conversationPreferenceRequest_ = Client.ConversationPreferenceRequest.newBuilder(this.conversationPreferenceRequest_).mergeFrom(localConversationPreferenceRequest).buildPartial();
            this.bitField1_ = (0x20 | this.bitField1_);
          }
          if (paramBunchCommand.hasConversationPreferenceResponse())
          {
            localConversationPreferenceResponse = paramBunchCommand.getConversationPreferenceResponse();
            if (((0x40 & this.bitField1_) != 64) || (this.conversationPreferenceResponse_ == Client.ConversationPreferenceResponse.getDefaultInstance()))
              break label4773;
            this.conversationPreferenceResponse_ = Client.ConversationPreferenceResponse.newBuilder(this.conversationPreferenceResponse_).mergeFrom(localConversationPreferenceResponse).buildPartial();
            this.bitField1_ = (0x40 | this.bitField1_);
          }
          if (paramBunchCommand.hasReplyToInviteRequest())
          {
            localReplyToInviteRequest = paramBunchCommand.getReplyToInviteRequest();
            if (((0x80 & this.bitField1_) != 128) || (this.replyToInviteRequest_ == Client.ReplyToInviteRequest.getDefaultInstance()))
              break label4782;
            this.replyToInviteRequest_ = Client.ReplyToInviteRequest.newBuilder(this.replyToInviteRequest_).mergeFrom(localReplyToInviteRequest).buildPartial();
            this.bitField1_ = (0x80 | this.bitField1_);
          }
          if (paramBunchCommand.hasSetAclsRequest())
          {
            localSetAclsRequest = paramBunchCommand.getSetAclsRequest();
            if (((0x100 & this.bitField1_) != 256) || (this.setAclsRequest_ == Client.SetAclsRequest.getDefaultInstance()))
              break label4791;
            this.setAclsRequest_ = Client.SetAclsRequest.newBuilder(this.setAclsRequest_).mergeFrom(localSetAclsRequest).buildPartial();
            this.bitField1_ = (0x100 | this.bitField1_);
          }
          if (paramBunchCommand.hasInvalidateLocalCache())
          {
            localInvalidateLocalCache = paramBunchCommand.getInvalidateLocalCache();
            if (((0x200 & this.bitField1_) != 512) || (this.invalidateLocalCache_ == Client.InvalidateLocalCache.getDefaultInstance()))
              break label4800;
            this.invalidateLocalCache_ = Client.InvalidateLocalCache.newBuilder(this.invalidateLocalCache_).mergeFrom(localInvalidateLocalCache).buildPartial();
            this.bitField1_ = (0x200 | this.bitField1_);
          }
          if (paramBunchCommand.hasInviteResponse())
          {
            localInviteResponse = paramBunchCommand.getInviteResponse();
            if (((0x400 & this.bitField1_) != 1024) || (this.inviteResponse_ == Client.InviteResponse.getDefaultInstance()))
              break label4809;
            this.inviteResponse_ = Client.InviteResponse.newBuilder(this.inviteResponse_).mergeFrom(localInviteResponse).buildPartial();
            this.bitField1_ = (0x400 | this.bitField1_);
          }
          if (paramBunchCommand.hasReplyToInviteResponse())
          {
            localReplyToInviteResponse = paramBunchCommand.getReplyToInviteResponse();
            if (((0x800 & this.bitField1_) != 2048) || (this.replyToInviteResponse_ == Client.ReplyToInviteResponse.getDefaultInstance()))
              break label4818;
            this.replyToInviteResponse_ = Client.ReplyToInviteResponse.newBuilder(this.replyToInviteResponse_).mergeFrom(localReplyToInviteResponse).buildPartial();
            this.bitField1_ = (0x800 | this.bitField1_);
          }
          if (paramBunchCommand.hasSetAclsResponse())
          {
            localSetAclsResponse = paramBunchCommand.getSetAclsResponse();
            if (((0x1000 & this.bitField1_) != 4096) || (this.setAclsResponse_ == Client.SetAclsResponse.getDefaultInstance()))
              break label4827;
            this.setAclsResponse_ = Client.SetAclsResponse.newBuilder(this.setAclsResponse_).mergeFrom(localSetAclsResponse).buildPartial();
            this.bitField1_ = (0x1000 | this.bitField1_);
          }
          if (paramBunchCommand.hasUserInfoRequest())
          {
            localUserInfoRequest = paramBunchCommand.getUserInfoRequest();
            if (((0x2000 & this.bitField1_) != 8192) || (this.userInfoRequest_ == Client.UserInfoRequest.getDefaultInstance()))
              break label4836;
            this.userInfoRequest_ = Client.UserInfoRequest.newBuilder(this.userInfoRequest_).mergeFrom(localUserInfoRequest).buildPartial();
            this.bitField1_ = (0x2000 | this.bitField1_);
          }
          if (paramBunchCommand.hasUserInfoResponse())
          {
            localUserInfoResponse = paramBunchCommand.getUserInfoResponse();
            if (((0x4000 & this.bitField1_) != 16384) || (this.userInfoResponse_ == Client.UserInfoResponse.getDefaultInstance()))
              break label4845;
            this.userInfoResponse_ = Client.UserInfoResponse.newBuilder(this.userInfoResponse_).mergeFrom(localUserInfoResponse).buildPartial();
            this.bitField1_ = (0x4000 | this.bitField1_);
          }
          if (paramBunchCommand.hasConversationSearchRequest())
          {
            localConversationSearchRequest = paramBunchCommand.getConversationSearchRequest();
            if (((0x8000 & this.bitField1_) != 32768) || (this.conversationSearchRequest_ == Client.ConversationSearchRequest.getDefaultInstance()))
              break label4854;
            this.conversationSearchRequest_ = Client.ConversationSearchRequest.newBuilder(this.conversationSearchRequest_).mergeFrom(localConversationSearchRequest).buildPartial();
            this.bitField1_ = (0x8000 | this.bitField1_);
          }
          if (paramBunchCommand.hasConversationSearchResponse())
          {
            localConversationSearchResponse = paramBunchCommand.getConversationSearchResponse();
            if (((0x10000 & this.bitField1_) != 65536) || (this.conversationSearchResponse_ == Client.ConversationSearchResponse.getDefaultInstance()))
              break label4863;
            this.conversationSearchResponse_ = Client.ConversationSearchResponse.newBuilder(this.conversationSearchResponse_).mergeFrom(localConversationSearchResponse).buildPartial();
            this.bitField1_ = (0x10000 | this.bitField1_);
          }
          if (paramBunchCommand.hasEventSearchRequest())
          {
            localEventSearchRequest = paramBunchCommand.getEventSearchRequest();
            if (((0x20000 & this.bitField1_) != 131072) || (this.eventSearchRequest_ == Client.EventSearchRequest.getDefaultInstance()))
              break label4872;
            this.eventSearchRequest_ = Client.EventSearchRequest.newBuilder(this.eventSearchRequest_).mergeFrom(localEventSearchRequest).buildPartial();
            this.bitField1_ = (0x20000 | this.bitField1_);
          }
          if (paramBunchCommand.hasEventSearchResponse())
          {
            localEventSearchResponse = paramBunchCommand.getEventSearchResponse();
            if (((0x40000 & this.bitField1_) != 262144) || (this.eventSearchResponse_ == Client.EventSearchResponse.getDefaultInstance()))
              break label4881;
            this.eventSearchResponse_ = Client.EventSearchResponse.newBuilder(this.eventSearchResponse_).mergeFrom(localEventSearchResponse).buildPartial();
            this.bitField1_ = (0x40000 | this.bitField1_);
          }
          if (paramBunchCommand.hasSuggestionsRequest())
          {
            localSuggestionsRequest = paramBunchCommand.getSuggestionsRequest();
            if (((0x80000 & this.bitField1_) != 524288) || (this.suggestionsRequest_ == Client.SuggestionsRequest.getDefaultInstance()))
              break label4890;
            this.suggestionsRequest_ = Client.SuggestionsRequest.newBuilder(this.suggestionsRequest_).mergeFrom(localSuggestionsRequest).buildPartial();
            this.bitField1_ = (0x80000 | this.bitField1_);
          }
          if (paramBunchCommand.hasSuggestionsResponse())
          {
            localSuggestionsResponse = paramBunchCommand.getSuggestionsResponse();
            if (((0x100000 & this.bitField1_) != 1048576) || (this.suggestionsResponse_ == Client.SuggestionsResponse.getDefaultInstance()))
              break label4899;
            this.suggestionsResponse_ = Client.SuggestionsResponse.newBuilder(this.suggestionsResponse_).mergeFrom(localSuggestionsResponse).buildPartial();
            this.bitField1_ = (0x100000 | this.bitField1_);
          }
          if (paramBunchCommand.hasGlobalConversationPreferencesRequest())
          {
            localGlobalConversationPreferencesRequest = paramBunchCommand.getGlobalConversationPreferencesRequest();
            if (((0x200000 & this.bitField1_) != 2097152) || (this.globalConversationPreferencesRequest_ == Client.GlobalConversationPreferencesRequest.getDefaultInstance()))
              break label4908;
            this.globalConversationPreferencesRequest_ = Client.GlobalConversationPreferencesRequest.newBuilder(this.globalConversationPreferencesRequest_).mergeFrom(localGlobalConversationPreferencesRequest).buildPartial();
            this.bitField1_ = (0x200000 | this.bitField1_);
          }
          if (paramBunchCommand.hasGlobalConversationPreferencesResponse())
          {
            localGlobalConversationPreferencesResponse = paramBunchCommand.getGlobalConversationPreferencesResponse();
            if (((0x400000 & this.bitField1_) != 4194304) || (this.globalConversationPreferencesResponse_ == Client.GlobalConversationPreferencesResponse.getDefaultInstance()))
              break label4917;
            this.globalConversationPreferencesResponse_ = Client.GlobalConversationPreferencesResponse.newBuilder(this.globalConversationPreferencesResponse_).mergeFrom(localGlobalConversationPreferencesResponse).buildPartial();
            this.bitField1_ = (0x400000 | this.bitField1_);
          }
          if (paramBunchCommand.hasConversationJoinRequest())
          {
            localConversationJoinRequest = paramBunchCommand.getConversationJoinRequest();
            if (((0x800000 & this.bitField1_) != 8388608) || (this.conversationJoinRequest_ == Client.ConversationJoinRequest.getDefaultInstance()))
              break label4926;
            this.conversationJoinRequest_ = Client.ConversationJoinRequest.newBuilder(this.conversationJoinRequest_).mergeFrom(localConversationJoinRequest).buildPartial();
            this.bitField1_ = (0x800000 | this.bitField1_);
          }
          if (paramBunchCommand.hasConversationJoinResponse())
          {
            localConversationJoinResponse = paramBunchCommand.getConversationJoinResponse();
            if (((0x1000000 & this.bitField1_) != 16777216) || (this.conversationJoinResponse_ == Client.ConversationJoinResponse.getDefaultInstance()))
              break label4935;
            this.conversationJoinResponse_ = Client.ConversationJoinResponse.newBuilder(this.conversationJoinResponse_).mergeFrom(localConversationJoinResponse).buildPartial();
            this.bitField1_ = (0x1000000 | this.bitField1_);
          }
          if (paramBunchCommand.hasHangoutInviteRequest())
          {
            localHangoutInviteRequest = paramBunchCommand.getHangoutInviteRequest();
            if (((0x2000000 & this.bitField1_) != 33554432) || (this.hangoutInviteRequest_ == Client.HangoutInviteRequest.getDefaultInstance()))
              break label4944;
            this.hangoutInviteRequest_ = Client.HangoutInviteRequest.newBuilder(this.hangoutInviteRequest_).mergeFrom(localHangoutInviteRequest).buildPartial();
            this.bitField1_ = (0x2000000 | this.bitField1_);
          }
          if (paramBunchCommand.hasHangoutInviteResponse())
          {
            localHangoutInviteResponse = paramBunchCommand.getHangoutInviteResponse();
            if (((0x4000000 & this.bitField1_) != 67108864) || (this.hangoutInviteResponse_ == Client.HangoutInviteResponse.getDefaultInstance()))
              break label4953;
            this.hangoutInviteResponse_ = Client.HangoutInviteResponse.newBuilder(this.hangoutInviteResponse_).mergeFrom(localHangoutInviteResponse).buildPartial();
            this.bitField1_ = (0x4000000 | this.bitField1_);
          }
          if (paramBunchCommand.hasHangoutInviteKeepAliveRequest())
          {
            localHangoutInviteKeepAliveRequest = paramBunchCommand.getHangoutInviteKeepAliveRequest();
            if (((0x8000000 & this.bitField1_) != 134217728) || (this.hangoutInviteKeepAliveRequest_ == Client.HangoutInviteKeepAliveRequest.getDefaultInstance()))
              break label4962;
            this.hangoutInviteKeepAliveRequest_ = Client.HangoutInviteKeepAliveRequest.newBuilder(this.hangoutInviteKeepAliveRequest_).mergeFrom(localHangoutInviteKeepAliveRequest).buildPartial();
            this.bitField1_ = (0x8000000 | this.bitField1_);
          }
          if (paramBunchCommand.hasHangoutInviteKeepAliveResponse())
          {
            localHangoutInviteKeepAliveResponse = paramBunchCommand.getHangoutInviteKeepAliveResponse();
            if (((0x10000000 & this.bitField1_) != 268435456) || (this.hangoutInviteKeepAliveResponse_ == Client.HangoutInviteKeepAliveResponse.getDefaultInstance()))
              break label4971;
            this.hangoutInviteKeepAliveResponse_ = Client.HangoutInviteKeepAliveResponse.newBuilder(this.hangoutInviteKeepAliveResponse_).mergeFrom(localHangoutInviteKeepAliveResponse).buildPartial();
            this.bitField1_ = (0x10000000 | this.bitField1_);
          }
          if (paramBunchCommand.hasHangoutInviteReplyRequest())
          {
            localHangoutInviteReplyRequest = paramBunchCommand.getHangoutInviteReplyRequest();
            if (((0x20000000 & this.bitField1_) != 536870912) || (this.hangoutInviteReplyRequest_ == Client.HangoutInviteReplyRequest.getDefaultInstance()))
              break label4980;
            this.hangoutInviteReplyRequest_ = Client.HangoutInviteReplyRequest.newBuilder(this.hangoutInviteReplyRequest_).mergeFrom(localHangoutInviteReplyRequest).buildPartial();
            this.bitField1_ = (0x20000000 | this.bitField1_);
          }
          if (paramBunchCommand.hasHangoutInviteReplyResponse())
          {
            localHangoutInviteReplyResponse = paramBunchCommand.getHangoutInviteReplyResponse();
            if (((0x40000000 & this.bitField1_) != 1073741824) || (this.hangoutInviteReplyResponse_ == Client.HangoutInviteReplyResponse.getDefaultInstance()))
              break label4989;
            this.hangoutInviteReplyResponse_ = Client.HangoutInviteReplyResponse.newBuilder(this.hangoutInviteReplyResponse_).mergeFrom(localHangoutInviteReplyResponse).buildPartial();
            this.bitField1_ = (0x40000000 | this.bitField1_);
          }
          if (paramBunchCommand.hasHangoutInviteFinishRequest())
          {
            localHangoutInviteFinishRequest = paramBunchCommand.getHangoutInviteFinishRequest();
            if (((0x80000000 & this.bitField1_) != -2147483648) || (this.hangoutInviteFinishRequest_ == Client.HangoutInviteFinishRequest.getDefaultInstance()))
              break label4998;
            this.hangoutInviteFinishRequest_ = Client.HangoutInviteFinishRequest.newBuilder(this.hangoutInviteFinishRequest_).mergeFrom(localHangoutInviteFinishRequest).buildPartial();
            this.bitField1_ = (0x80000000 | this.bitField1_);
          }
          if (paramBunchCommand.hasHangoutInviteFinishResponse())
          {
            localHangoutInviteFinishResponse = paramBunchCommand.getHangoutInviteFinishResponse();
            if (((0x1 & this.bitField2_) != 1) || (this.hangoutInviteFinishResponse_ == Client.HangoutInviteFinishResponse.getDefaultInstance()))
              break label5007;
            this.hangoutInviteFinishResponse_ = Client.HangoutInviteFinishResponse.newBuilder(this.hangoutInviteFinishResponse_).mergeFrom(localHangoutInviteFinishResponse).buildPartial();
            this.bitField2_ = (0x1 | this.bitField2_);
          }
          if (paramBunchCommand.hasHangoutRingFinishRequest())
          {
            localHangoutRingFinishRequest = paramBunchCommand.getHangoutRingFinishRequest();
            if (((0x2 & this.bitField2_) != 2) || (this.hangoutRingFinishRequest_ == Client.HangoutRingFinishRequest.getDefaultInstance()))
              break label5016;
            this.hangoutRingFinishRequest_ = Client.HangoutRingFinishRequest.newBuilder(this.hangoutRingFinishRequest_).mergeFrom(localHangoutRingFinishRequest).buildPartial();
            this.bitField2_ = (0x2 | this.bitField2_);
          }
        }
        while (!paramBunchCommand.hasHangoutRingFinishResponse());
        Client.HangoutRingFinishResponse localHangoutRingFinishResponse = paramBunchCommand.getHangoutRingFinishResponse();
        if (((0x4 & this.bitField2_) == 4) && (this.hangoutRingFinishResponse_ != Client.HangoutRingFinishResponse.getDefaultInstance()));
        for (this.hangoutRingFinishResponse_ = Client.HangoutRingFinishResponse.newBuilder(this.hangoutRingFinishResponse_).mergeFrom(localHangoutRingFinishResponse).buildPartial(); ; this.hangoutRingFinishResponse_ = localHangoutRingFinishResponse)
        {
          this.bitField2_ = (0x4 | this.bitField2_);
          break;
          this.chatMessage_ = localChatMessage;
          break label77;
          label4449: this.chatMessageRequest_ = localChatMessageRequest;
          break label139;
          label4458: this.chatMessageResponse_ = localChatMessageResponse;
          break label203;
          label4467: this.presenceRequest_ = localPresenceRequest;
          break label268;
          label4476: this.presenceResponse_ = localPresenceResponse;
          break label333;
          label4485: this.presence_ = localPresence;
          break label398;
          label4494: this.typingRequest_ = localTypingRequest;
          break label465;
          label4503: this.typingResponse_ = localTypingResponse;
          break label533;
          label4512: this.typing_ = localTyping;
          break label601;
          label4521: this.receipt_ = localReceipt;
          break label669;
          label4530: this.receiptRequest_ = localReceiptRequest;
          break label737;
          label4539: this.receiptResponse_ = localReceiptResponse;
          break label805;
          label4548: this.membershipChange_ = localMembershipChange;
          break label873;
          label4557: this.conversationRequest_ = localNewConversationRequest;
          break label941;
          label4566: this.conversationResponse_ = localNewConversationResponse;
          break label1009;
          label4575: this.eventStreamRequest_ = localEventStreamRequest;
          break label1077;
          label4584: this.eventSteamResponse_ = localEventStreamResponse;
          break label1145;
          label4593: this.deviceRegistrationRequest_ = localDeviceRegistrationRequest;
          break label1213;
          label4602: this.deviceRegistrationResponse_ = localDeviceRegistrationResponse;
          break label1281;
          label4611: this.pingRequest_ = localPingRequest;
          break label1349;
          label4620: this.pingResponse_ = localPingResponse;
          break label1417;
          label4629: this.conversationListRequest_ = localConversationListRequest;
          break label1485;
          label4638: this.conversationListResponse_ = localConversationListResponse;
          break label1553;
          label4647: this.userCreationRequest_ = localUserCreationRequest;
          break label1621;
          label4656: this.userCreationResponse_ = localUserCreationResponse;
          break label1689;
          label4665: this.error_ = localError;
          break label1757;
          label4674: this.inviteRequest_ = localInviteRequest;
          break label1825;
          label4683: this.leaveConversationRequest_ = localLeaveConversationRequest;
          break label1893;
          label4692: this.leaveConversationResponse_ = localLeaveConversationResponse;
          break label1961;
          label4701: this.conversationRenameRequest_ = localConversationRenameRequest;
          break label2029;
          label4710: this.conversationRenameResponse_ = localConversationRenameResponse;
          break label2097;
          label4719: this.groupConversationRename_ = localGroupConversationRename;
          break label2161;
          label4728: this.tileEventRequest_ = localTileEventRequest;
          break label2223;
          label4737: this.tileEventResponse_ = localTileEventResponse;
          break label2285;
          label4746: this.tileEvent_ = localTileEvent;
          break label2349;
          label4755: this.migration_ = localMigration;
          break label2414;
          label4764: this.conversationPreferenceRequest_ = localConversationPreferenceRequest;
          break label2479;
          label4773: this.conversationPreferenceResponse_ = localConversationPreferenceResponse;
          break label2544;
          label4782: this.replyToInviteRequest_ = localReplyToInviteRequest;
          break label2611;
          label4791: this.setAclsRequest_ = localSetAclsRequest;
          break label2679;
          label4800: this.invalidateLocalCache_ = localInvalidateLocalCache;
          break label2747;
          label4809: this.inviteResponse_ = localInviteResponse;
          break label2815;
          label4818: this.replyToInviteResponse_ = localReplyToInviteResponse;
          break label2883;
          label4827: this.setAclsResponse_ = localSetAclsResponse;
          break label2951;
          label4836: this.userInfoRequest_ = localUserInfoRequest;
          break label3019;
          label4845: this.userInfoResponse_ = localUserInfoResponse;
          break label3087;
          label4854: this.conversationSearchRequest_ = localConversationSearchRequest;
          break label3155;
          label4863: this.conversationSearchResponse_ = localConversationSearchResponse;
          break label3223;
          label4872: this.eventSearchRequest_ = localEventSearchRequest;
          break label3291;
          label4881: this.eventSearchResponse_ = localEventSearchResponse;
          break label3359;
          label4890: this.suggestionsRequest_ = localSuggestionsRequest;
          break label3427;
          label4899: this.suggestionsResponse_ = localSuggestionsResponse;
          break label3495;
          label4908: this.globalConversationPreferencesRequest_ = localGlobalConversationPreferencesRequest;
          break label3563;
          label4917: this.globalConversationPreferencesResponse_ = localGlobalConversationPreferencesResponse;
          break label3631;
          label4926: this.conversationJoinRequest_ = localConversationJoinRequest;
          break label3699;
          label4935: this.conversationJoinResponse_ = localConversationJoinResponse;
          break label3767;
          label4944: this.hangoutInviteRequest_ = localHangoutInviteRequest;
          break label3835;
          label4953: this.hangoutInviteResponse_ = localHangoutInviteResponse;
          break label3903;
          label4962: this.hangoutInviteKeepAliveRequest_ = localHangoutInviteKeepAliveRequest;
          break label3971;
          label4971: this.hangoutInviteKeepAliveResponse_ = localHangoutInviteKeepAliveResponse;
          break label4039;
          label4980: this.hangoutInviteReplyRequest_ = localHangoutInviteReplyRequest;
          break label4107;
          label4989: this.hangoutInviteReplyResponse_ = localHangoutInviteReplyResponse;
          break label4175;
          label4998: this.hangoutInviteFinishRequest_ = localHangoutInviteFinishRequest;
          break label4243;
          label5007: this.hangoutInviteFinishResponse_ = localHangoutInviteFinishResponse;
          break label4307;
          label5016: this.hangoutRingFinishRequest_ = localHangoutRingFinishRequest;
          break label4367;
        }
      }

      public final Builder setChatMessage(Client.ChatMessage.Builder paramBuilder)
      {
        this.chatMessage_ = paramBuilder.build();
        this.bitField0_ = (0x2 | this.bitField0_);
        return this;
      }

      public final Builder setChatMessage(Client.ChatMessage paramChatMessage)
      {
        if (paramChatMessage == null)
          throw new NullPointerException();
        this.chatMessage_ = paramChatMessage;
        this.bitField0_ = (0x2 | this.bitField0_);
        return this;
      }

      public final Builder setChatMessageRequest(Client.ChatMessageRequest.Builder paramBuilder)
      {
        this.chatMessageRequest_ = paramBuilder.build();
        this.bitField0_ = (0x4 | this.bitField0_);
        return this;
      }

      public final Builder setChatMessageRequest(Client.ChatMessageRequest paramChatMessageRequest)
      {
        if (paramChatMessageRequest == null)
          throw new NullPointerException();
        this.chatMessageRequest_ = paramChatMessageRequest;
        this.bitField0_ = (0x4 | this.bitField0_);
        return this;
      }

      public final Builder setChatMessageResponse(Client.ChatMessageResponse.Builder paramBuilder)
      {
        this.chatMessageResponse_ = paramBuilder.build();
        this.bitField0_ = (0x8 | this.bitField0_);
        return this;
      }

      public final Builder setChatMessageResponse(Client.ChatMessageResponse paramChatMessageResponse)
      {
        if (paramChatMessageResponse == null)
          throw new NullPointerException();
        this.chatMessageResponse_ = paramChatMessageResponse;
        this.bitField0_ = (0x8 | this.bitField0_);
        return this;
      }

      public final Builder setConversationJoinRequest(Client.ConversationJoinRequest.Builder paramBuilder)
      {
        this.conversationJoinRequest_ = paramBuilder.build();
        this.bitField1_ = (0x800000 | this.bitField1_);
        return this;
      }

      public final Builder setConversationJoinRequest(Client.ConversationJoinRequest paramConversationJoinRequest)
      {
        if (paramConversationJoinRequest == null)
          throw new NullPointerException();
        this.conversationJoinRequest_ = paramConversationJoinRequest;
        this.bitField1_ = (0x800000 | this.bitField1_);
        return this;
      }

      public final Builder setConversationJoinResponse(Client.ConversationJoinResponse.Builder paramBuilder)
      {
        this.conversationJoinResponse_ = paramBuilder.build();
        this.bitField1_ = (0x1000000 | this.bitField1_);
        return this;
      }

      public final Builder setConversationJoinResponse(Client.ConversationJoinResponse paramConversationJoinResponse)
      {
        if (paramConversationJoinResponse == null)
          throw new NullPointerException();
        this.conversationJoinResponse_ = paramConversationJoinResponse;
        this.bitField1_ = (0x1000000 | this.bitField1_);
        return this;
      }

      public final Builder setConversationListRequest(Client.ConversationListRequest.Builder paramBuilder)
      {
        this.conversationListRequest_ = paramBuilder.build();
        this.bitField0_ = (0x400000 | this.bitField0_);
        return this;
      }

      public final Builder setConversationListRequest(Client.ConversationListRequest paramConversationListRequest)
      {
        if (paramConversationListRequest == null)
          throw new NullPointerException();
        this.conversationListRequest_ = paramConversationListRequest;
        this.bitField0_ = (0x400000 | this.bitField0_);
        return this;
      }

      public final Builder setConversationListResponse(Client.ConversationListResponse.Builder paramBuilder)
      {
        this.conversationListResponse_ = paramBuilder.build();
        this.bitField0_ = (0x800000 | this.bitField0_);
        return this;
      }

      public final Builder setConversationListResponse(Client.ConversationListResponse paramConversationListResponse)
      {
        if (paramConversationListResponse == null)
          throw new NullPointerException();
        this.conversationListResponse_ = paramConversationListResponse;
        this.bitField0_ = (0x800000 | this.bitField0_);
        return this;
      }

      public final Builder setConversationPreferenceRequest(Client.ConversationPreferenceRequest.Builder paramBuilder)
      {
        this.conversationPreferenceRequest_ = paramBuilder.build();
        this.bitField1_ = (0x20 | this.bitField1_);
        return this;
      }

      public final Builder setConversationPreferenceRequest(Client.ConversationPreferenceRequest paramConversationPreferenceRequest)
      {
        if (paramConversationPreferenceRequest == null)
          throw new NullPointerException();
        this.conversationPreferenceRequest_ = paramConversationPreferenceRequest;
        this.bitField1_ = (0x20 | this.bitField1_);
        return this;
      }

      public final Builder setConversationPreferenceResponse(Client.ConversationPreferenceResponse.Builder paramBuilder)
      {
        this.conversationPreferenceResponse_ = paramBuilder.build();
        this.bitField1_ = (0x40 | this.bitField1_);
        return this;
      }

      public final Builder setConversationPreferenceResponse(Client.ConversationPreferenceResponse paramConversationPreferenceResponse)
      {
        if (paramConversationPreferenceResponse == null)
          throw new NullPointerException();
        this.conversationPreferenceResponse_ = paramConversationPreferenceResponse;
        this.bitField1_ = (0x40 | this.bitField1_);
        return this;
      }

      public final Builder setConversationRenameRequest(Client.ConversationRenameRequest.Builder paramBuilder)
      {
        this.conversationRenameRequest_ = paramBuilder.build();
        this.bitField0_ = (0x40000000 | this.bitField0_);
        return this;
      }

      public final Builder setConversationRenameRequest(Client.ConversationRenameRequest paramConversationRenameRequest)
      {
        if (paramConversationRenameRequest == null)
          throw new NullPointerException();
        this.conversationRenameRequest_ = paramConversationRenameRequest;
        this.bitField0_ = (0x40000000 | this.bitField0_);
        return this;
      }

      public final Builder setConversationRenameResponse(Client.ConversationRenameResponse.Builder paramBuilder)
      {
        this.conversationRenameResponse_ = paramBuilder.build();
        this.bitField0_ = (0x80000000 | this.bitField0_);
        return this;
      }

      public final Builder setConversationRenameResponse(Client.ConversationRenameResponse paramConversationRenameResponse)
      {
        if (paramConversationRenameResponse == null)
          throw new NullPointerException();
        this.conversationRenameResponse_ = paramConversationRenameResponse;
        this.bitField0_ = (0x80000000 | this.bitField0_);
        return this;
      }

      public final Builder setConversationRequest(Client.NewConversationRequest.Builder paramBuilder)
      {
        this.conversationRequest_ = paramBuilder.build();
        this.bitField0_ = (0x4000 | this.bitField0_);
        return this;
      }

      public final Builder setConversationRequest(Client.NewConversationRequest paramNewConversationRequest)
      {
        if (paramNewConversationRequest == null)
          throw new NullPointerException();
        this.conversationRequest_ = paramNewConversationRequest;
        this.bitField0_ = (0x4000 | this.bitField0_);
        return this;
      }

      public final Builder setConversationResponse(Client.NewConversationResponse.Builder paramBuilder)
      {
        this.conversationResponse_ = paramBuilder.build();
        this.bitField0_ = (0x8000 | this.bitField0_);
        return this;
      }

      public final Builder setConversationResponse(Client.NewConversationResponse paramNewConversationResponse)
      {
        if (paramNewConversationResponse == null)
          throw new NullPointerException();
        this.conversationResponse_ = paramNewConversationResponse;
        this.bitField0_ = (0x8000 | this.bitField0_);
        return this;
      }

      public final Builder setConversationSearchRequest(Client.ConversationSearchRequest.Builder paramBuilder)
      {
        this.conversationSearchRequest_ = paramBuilder.build();
        this.bitField1_ = (0x8000 | this.bitField1_);
        return this;
      }

      public final Builder setConversationSearchRequest(Client.ConversationSearchRequest paramConversationSearchRequest)
      {
        if (paramConversationSearchRequest == null)
          throw new NullPointerException();
        this.conversationSearchRequest_ = paramConversationSearchRequest;
        this.bitField1_ = (0x8000 | this.bitField1_);
        return this;
      }

      public final Builder setConversationSearchResponse(Client.ConversationSearchResponse.Builder paramBuilder)
      {
        this.conversationSearchResponse_ = paramBuilder.build();
        this.bitField1_ = (0x10000 | this.bitField1_);
        return this;
      }

      public final Builder setConversationSearchResponse(Client.ConversationSearchResponse paramConversationSearchResponse)
      {
        if (paramConversationSearchResponse == null)
          throw new NullPointerException();
        this.conversationSearchResponse_ = paramConversationSearchResponse;
        this.bitField1_ = (0x10000 | this.bitField1_);
        return this;
      }

      public final Builder setDeviceRegistrationRequest(Client.DeviceRegistrationRequest.Builder paramBuilder)
      {
        this.deviceRegistrationRequest_ = paramBuilder.build();
        this.bitField0_ = (0x40000 | this.bitField0_);
        return this;
      }

      public final Builder setDeviceRegistrationRequest(Client.DeviceRegistrationRequest paramDeviceRegistrationRequest)
      {
        if (paramDeviceRegistrationRequest == null)
          throw new NullPointerException();
        this.deviceRegistrationRequest_ = paramDeviceRegistrationRequest;
        this.bitField0_ = (0x40000 | this.bitField0_);
        return this;
      }

      public final Builder setDeviceRegistrationResponse(Client.DeviceRegistrationResponse.Builder paramBuilder)
      {
        this.deviceRegistrationResponse_ = paramBuilder.build();
        this.bitField0_ = (0x80000 | this.bitField0_);
        return this;
      }

      public final Builder setDeviceRegistrationResponse(Client.DeviceRegistrationResponse paramDeviceRegistrationResponse)
      {
        if (paramDeviceRegistrationResponse == null)
          throw new NullPointerException();
        this.deviceRegistrationResponse_ = paramDeviceRegistrationResponse;
        this.bitField0_ = (0x80000 | this.bitField0_);
        return this;
      }

      public final Builder setError(Client.Error.Builder paramBuilder)
      {
        this.error_ = paramBuilder.build();
        this.bitField0_ = (0x4000000 | this.bitField0_);
        return this;
      }

      public final Builder setError(Client.Error paramError)
      {
        if (paramError == null)
          throw new NullPointerException();
        this.error_ = paramError;
        this.bitField0_ = (0x4000000 | this.bitField0_);
        return this;
      }

      public final Builder setEventSearchRequest(Client.EventSearchRequest.Builder paramBuilder)
      {
        this.eventSearchRequest_ = paramBuilder.build();
        this.bitField1_ = (0x20000 | this.bitField1_);
        return this;
      }

      public final Builder setEventSearchRequest(Client.EventSearchRequest paramEventSearchRequest)
      {
        if (paramEventSearchRequest == null)
          throw new NullPointerException();
        this.eventSearchRequest_ = paramEventSearchRequest;
        this.bitField1_ = (0x20000 | this.bitField1_);
        return this;
      }

      public final Builder setEventSearchResponse(Client.EventSearchResponse.Builder paramBuilder)
      {
        this.eventSearchResponse_ = paramBuilder.build();
        this.bitField1_ = (0x40000 | this.bitField1_);
        return this;
      }

      public final Builder setEventSearchResponse(Client.EventSearchResponse paramEventSearchResponse)
      {
        if (paramEventSearchResponse == null)
          throw new NullPointerException();
        this.eventSearchResponse_ = paramEventSearchResponse;
        this.bitField1_ = (0x40000 | this.bitField1_);
        return this;
      }

      public final Builder setEventSteamResponse(Client.EventStreamResponse.Builder paramBuilder)
      {
        this.eventSteamResponse_ = paramBuilder.build();
        this.bitField0_ = (0x20000 | this.bitField0_);
        return this;
      }

      public final Builder setEventSteamResponse(Client.EventStreamResponse paramEventStreamResponse)
      {
        if (paramEventStreamResponse == null)
          throw new NullPointerException();
        this.eventSteamResponse_ = paramEventStreamResponse;
        this.bitField0_ = (0x20000 | this.bitField0_);
        return this;
      }

      public final Builder setEventStreamRequest(Client.EventStreamRequest.Builder paramBuilder)
      {
        this.eventStreamRequest_ = paramBuilder.build();
        this.bitField0_ = (0x10000 | this.bitField0_);
        return this;
      }

      public final Builder setEventStreamRequest(Client.EventStreamRequest paramEventStreamRequest)
      {
        if (paramEventStreamRequest == null)
          throw new NullPointerException();
        this.eventStreamRequest_ = paramEventStreamRequest;
        this.bitField0_ = (0x10000 | this.bitField0_);
        return this;
      }

      public final Builder setGlobalConversationPreferencesRequest(Client.GlobalConversationPreferencesRequest.Builder paramBuilder)
      {
        this.globalConversationPreferencesRequest_ = paramBuilder.build();
        this.bitField1_ = (0x200000 | this.bitField1_);
        return this;
      }

      public final Builder setGlobalConversationPreferencesRequest(Client.GlobalConversationPreferencesRequest paramGlobalConversationPreferencesRequest)
      {
        if (paramGlobalConversationPreferencesRequest == null)
          throw new NullPointerException();
        this.globalConversationPreferencesRequest_ = paramGlobalConversationPreferencesRequest;
        this.bitField1_ = (0x200000 | this.bitField1_);
        return this;
      }

      public final Builder setGlobalConversationPreferencesResponse(Client.GlobalConversationPreferencesResponse.Builder paramBuilder)
      {
        this.globalConversationPreferencesResponse_ = paramBuilder.build();
        this.bitField1_ = (0x400000 | this.bitField1_);
        return this;
      }

      public final Builder setGlobalConversationPreferencesResponse(Client.GlobalConversationPreferencesResponse paramGlobalConversationPreferencesResponse)
      {
        if (paramGlobalConversationPreferencesResponse == null)
          throw new NullPointerException();
        this.globalConversationPreferencesResponse_ = paramGlobalConversationPreferencesResponse;
        this.bitField1_ = (0x400000 | this.bitField1_);
        return this;
      }

      public final Builder setGroupConversationRename(Client.GroupConversationRename.Builder paramBuilder)
      {
        this.groupConversationRename_ = paramBuilder.build();
        this.bitField1_ = (0x1 | this.bitField1_);
        return this;
      }

      public final Builder setGroupConversationRename(Client.GroupConversationRename paramGroupConversationRename)
      {
        if (paramGroupConversationRename == null)
          throw new NullPointerException();
        this.groupConversationRename_ = paramGroupConversationRename;
        this.bitField1_ = (0x1 | this.bitField1_);
        return this;
      }

      public final Builder setHangoutInviteFinishRequest(Client.HangoutInviteFinishRequest.Builder paramBuilder)
      {
        this.hangoutInviteFinishRequest_ = paramBuilder.build();
        this.bitField1_ = (0x80000000 | this.bitField1_);
        return this;
      }

      public final Builder setHangoutInviteFinishRequest(Client.HangoutInviteFinishRequest paramHangoutInviteFinishRequest)
      {
        if (paramHangoutInviteFinishRequest == null)
          throw new NullPointerException();
        this.hangoutInviteFinishRequest_ = paramHangoutInviteFinishRequest;
        this.bitField1_ = (0x80000000 | this.bitField1_);
        return this;
      }

      public final Builder setHangoutInviteFinishResponse(Client.HangoutInviteFinishResponse.Builder paramBuilder)
      {
        this.hangoutInviteFinishResponse_ = paramBuilder.build();
        this.bitField2_ = (0x1 | this.bitField2_);
        return this;
      }

      public final Builder setHangoutInviteFinishResponse(Client.HangoutInviteFinishResponse paramHangoutInviteFinishResponse)
      {
        if (paramHangoutInviteFinishResponse == null)
          throw new NullPointerException();
        this.hangoutInviteFinishResponse_ = paramHangoutInviteFinishResponse;
        this.bitField2_ = (0x1 | this.bitField2_);
        return this;
      }

      public final Builder setHangoutInviteKeepAliveRequest(Client.HangoutInviteKeepAliveRequest.Builder paramBuilder)
      {
        this.hangoutInviteKeepAliveRequest_ = paramBuilder.build();
        this.bitField1_ = (0x8000000 | this.bitField1_);
        return this;
      }

      public final Builder setHangoutInviteKeepAliveRequest(Client.HangoutInviteKeepAliveRequest paramHangoutInviteKeepAliveRequest)
      {
        if (paramHangoutInviteKeepAliveRequest == null)
          throw new NullPointerException();
        this.hangoutInviteKeepAliveRequest_ = paramHangoutInviteKeepAliveRequest;
        this.bitField1_ = (0x8000000 | this.bitField1_);
        return this;
      }

      public final Builder setHangoutInviteKeepAliveResponse(Client.HangoutInviteKeepAliveResponse.Builder paramBuilder)
      {
        this.hangoutInviteKeepAliveResponse_ = paramBuilder.build();
        this.bitField1_ = (0x10000000 | this.bitField1_);
        return this;
      }

      public final Builder setHangoutInviteKeepAliveResponse(Client.HangoutInviteKeepAliveResponse paramHangoutInviteKeepAliveResponse)
      {
        if (paramHangoutInviteKeepAliveResponse == null)
          throw new NullPointerException();
        this.hangoutInviteKeepAliveResponse_ = paramHangoutInviteKeepAliveResponse;
        this.bitField1_ = (0x10000000 | this.bitField1_);
        return this;
      }

      public final Builder setHangoutInviteReplyRequest(Client.HangoutInviteReplyRequest.Builder paramBuilder)
      {
        this.hangoutInviteReplyRequest_ = paramBuilder.build();
        this.bitField1_ = (0x20000000 | this.bitField1_);
        return this;
      }

      public final Builder setHangoutInviteReplyRequest(Client.HangoutInviteReplyRequest paramHangoutInviteReplyRequest)
      {
        if (paramHangoutInviteReplyRequest == null)
          throw new NullPointerException();
        this.hangoutInviteReplyRequest_ = paramHangoutInviteReplyRequest;
        this.bitField1_ = (0x20000000 | this.bitField1_);
        return this;
      }

      public final Builder setHangoutInviteReplyResponse(Client.HangoutInviteReplyResponse.Builder paramBuilder)
      {
        this.hangoutInviteReplyResponse_ = paramBuilder.build();
        this.bitField1_ = (0x40000000 | this.bitField1_);
        return this;
      }

      public final Builder setHangoutInviteReplyResponse(Client.HangoutInviteReplyResponse paramHangoutInviteReplyResponse)
      {
        if (paramHangoutInviteReplyResponse == null)
          throw new NullPointerException();
        this.hangoutInviteReplyResponse_ = paramHangoutInviteReplyResponse;
        this.bitField1_ = (0x40000000 | this.bitField1_);
        return this;
      }

      public final Builder setHangoutInviteRequest(Client.HangoutInviteRequest.Builder paramBuilder)
      {
        this.hangoutInviteRequest_ = paramBuilder.build();
        this.bitField1_ = (0x2000000 | this.bitField1_);
        return this;
      }

      public final Builder setHangoutInviteRequest(Client.HangoutInviteRequest paramHangoutInviteRequest)
      {
        if (paramHangoutInviteRequest == null)
          throw new NullPointerException();
        this.hangoutInviteRequest_ = paramHangoutInviteRequest;
        this.bitField1_ = (0x2000000 | this.bitField1_);
        return this;
      }

      public final Builder setHangoutInviteResponse(Client.HangoutInviteResponse.Builder paramBuilder)
      {
        this.hangoutInviteResponse_ = paramBuilder.build();
        this.bitField1_ = (0x4000000 | this.bitField1_);
        return this;
      }

      public final Builder setHangoutInviteResponse(Client.HangoutInviteResponse paramHangoutInviteResponse)
      {
        if (paramHangoutInviteResponse == null)
          throw new NullPointerException();
        this.hangoutInviteResponse_ = paramHangoutInviteResponse;
        this.bitField1_ = (0x4000000 | this.bitField1_);
        return this;
      }

      public final Builder setHangoutRingFinishRequest(Client.HangoutRingFinishRequest.Builder paramBuilder)
      {
        this.hangoutRingFinishRequest_ = paramBuilder.build();
        this.bitField2_ = (0x2 | this.bitField2_);
        return this;
      }

      public final Builder setHangoutRingFinishRequest(Client.HangoutRingFinishRequest paramHangoutRingFinishRequest)
      {
        if (paramHangoutRingFinishRequest == null)
          throw new NullPointerException();
        this.hangoutRingFinishRequest_ = paramHangoutRingFinishRequest;
        this.bitField2_ = (0x2 | this.bitField2_);
        return this;
      }

      public final Builder setHangoutRingFinishResponse(Client.HangoutRingFinishResponse.Builder paramBuilder)
      {
        this.hangoutRingFinishResponse_ = paramBuilder.build();
        this.bitField2_ = (0x4 | this.bitField2_);
        return this;
      }

      public final Builder setHangoutRingFinishResponse(Client.HangoutRingFinishResponse paramHangoutRingFinishResponse)
      {
        if (paramHangoutRingFinishResponse == null)
          throw new NullPointerException();
        this.hangoutRingFinishResponse_ = paramHangoutRingFinishResponse;
        this.bitField2_ = (0x4 | this.bitField2_);
        return this;
      }

      public final Builder setInvalidateLocalCache(Client.InvalidateLocalCache.Builder paramBuilder)
      {
        this.invalidateLocalCache_ = paramBuilder.build();
        this.bitField1_ = (0x200 | this.bitField1_);
        return this;
      }

      public final Builder setInvalidateLocalCache(Client.InvalidateLocalCache paramInvalidateLocalCache)
      {
        if (paramInvalidateLocalCache == null)
          throw new NullPointerException();
        this.invalidateLocalCache_ = paramInvalidateLocalCache;
        this.bitField1_ = (0x200 | this.bitField1_);
        return this;
      }

      public final Builder setInviteRequest(Client.InviteRequest.Builder paramBuilder)
      {
        this.inviteRequest_ = paramBuilder.build();
        this.bitField0_ = (0x8000000 | this.bitField0_);
        return this;
      }

      public final Builder setInviteRequest(Client.InviteRequest paramInviteRequest)
      {
        if (paramInviteRequest == null)
          throw new NullPointerException();
        this.inviteRequest_ = paramInviteRequest;
        this.bitField0_ = (0x8000000 | this.bitField0_);
        return this;
      }

      public final Builder setInviteResponse(Client.InviteResponse.Builder paramBuilder)
      {
        this.inviteResponse_ = paramBuilder.build();
        this.bitField1_ = (0x400 | this.bitField1_);
        return this;
      }

      public final Builder setInviteResponse(Client.InviteResponse paramInviteResponse)
      {
        if (paramInviteResponse == null)
          throw new NullPointerException();
        this.inviteResponse_ = paramInviteResponse;
        this.bitField1_ = (0x400 | this.bitField1_);
        return this;
      }

      public final Builder setLeaveConversationRequest(Client.LeaveConversationRequest.Builder paramBuilder)
      {
        this.leaveConversationRequest_ = paramBuilder.build();
        this.bitField0_ = (0x10000000 | this.bitField0_);
        return this;
      }

      public final Builder setLeaveConversationRequest(Client.LeaveConversationRequest paramLeaveConversationRequest)
      {
        if (paramLeaveConversationRequest == null)
          throw new NullPointerException();
        this.leaveConversationRequest_ = paramLeaveConversationRequest;
        this.bitField0_ = (0x10000000 | this.bitField0_);
        return this;
      }

      public final Builder setLeaveConversationResponse(Client.LeaveConversationResponse.Builder paramBuilder)
      {
        this.leaveConversationResponse_ = paramBuilder.build();
        this.bitField0_ = (0x20000000 | this.bitField0_);
        return this;
      }

      public final Builder setLeaveConversationResponse(Client.LeaveConversationResponse paramLeaveConversationResponse)
      {
        if (paramLeaveConversationResponse == null)
          throw new NullPointerException();
        this.leaveConversationResponse_ = paramLeaveConversationResponse;
        this.bitField0_ = (0x20000000 | this.bitField0_);
        return this;
      }

      public final Builder setMembershipChange(Client.MembershipChange.Builder paramBuilder)
      {
        this.membershipChange_ = paramBuilder.build();
        this.bitField0_ = (0x2000 | this.bitField0_);
        return this;
      }

      public final Builder setMembershipChange(Client.MembershipChange paramMembershipChange)
      {
        if (paramMembershipChange == null)
          throw new NullPointerException();
        this.membershipChange_ = paramMembershipChange;
        this.bitField0_ = (0x2000 | this.bitField0_);
        return this;
      }

      public final Builder setMigration(Client.Migration.Builder paramBuilder)
      {
        this.migration_ = paramBuilder.build();
        this.bitField1_ = (0x10 | this.bitField1_);
        return this;
      }

      public final Builder setMigration(Client.Migration paramMigration)
      {
        if (paramMigration == null)
          throw new NullPointerException();
        this.migration_ = paramMigration;
        this.bitField1_ = (0x10 | this.bitField1_);
        return this;
      }

      public final Builder setPingRequest(Client.PingRequest.Builder paramBuilder)
      {
        this.pingRequest_ = paramBuilder.build();
        this.bitField0_ = (0x100000 | this.bitField0_);
        return this;
      }

      public final Builder setPingRequest(Client.PingRequest paramPingRequest)
      {
        if (paramPingRequest == null)
          throw new NullPointerException();
        this.pingRequest_ = paramPingRequest;
        this.bitField0_ = (0x100000 | this.bitField0_);
        return this;
      }

      public final Builder setPingResponse(Client.PingResponse.Builder paramBuilder)
      {
        this.pingResponse_ = paramBuilder.build();
        this.bitField0_ = (0x200000 | this.bitField0_);
        return this;
      }

      public final Builder setPingResponse(Client.PingResponse paramPingResponse)
      {
        if (paramPingResponse == null)
          throw new NullPointerException();
        this.pingResponse_ = paramPingResponse;
        this.bitField0_ = (0x200000 | this.bitField0_);
        return this;
      }

      public final Builder setPresence(Client.Presence.Builder paramBuilder)
      {
        this.presence_ = paramBuilder.build();
        this.bitField0_ = (0x40 | this.bitField0_);
        return this;
      }

      public final Builder setPresence(Client.Presence paramPresence)
      {
        if (paramPresence == null)
          throw new NullPointerException();
        this.presence_ = paramPresence;
        this.bitField0_ = (0x40 | this.bitField0_);
        return this;
      }

      public final Builder setPresenceRequest(Client.PresenceRequest.Builder paramBuilder)
      {
        this.presenceRequest_ = paramBuilder.build();
        this.bitField0_ = (0x10 | this.bitField0_);
        return this;
      }

      public final Builder setPresenceRequest(Client.PresenceRequest paramPresenceRequest)
      {
        if (paramPresenceRequest == null)
          throw new NullPointerException();
        this.presenceRequest_ = paramPresenceRequest;
        this.bitField0_ = (0x10 | this.bitField0_);
        return this;
      }

      public final Builder setPresenceResponse(Client.PresenceResponse.Builder paramBuilder)
      {
        this.presenceResponse_ = paramBuilder.build();
        this.bitField0_ = (0x20 | this.bitField0_);
        return this;
      }

      public final Builder setPresenceResponse(Client.PresenceResponse paramPresenceResponse)
      {
        if (paramPresenceResponse == null)
          throw new NullPointerException();
        this.presenceResponse_ = paramPresenceResponse;
        this.bitField0_ = (0x20 | this.bitField0_);
        return this;
      }

      public final Builder setReceipt(Client.Receipt.Builder paramBuilder)
      {
        this.receipt_ = paramBuilder.build();
        this.bitField0_ = (0x400 | this.bitField0_);
        return this;
      }

      public final Builder setReceipt(Client.Receipt paramReceipt)
      {
        if (paramReceipt == null)
          throw new NullPointerException();
        this.receipt_ = paramReceipt;
        this.bitField0_ = (0x400 | this.bitField0_);
        return this;
      }

      public final Builder setReceiptRequest(Client.ReceiptRequest.Builder paramBuilder)
      {
        this.receiptRequest_ = paramBuilder.build();
        this.bitField0_ = (0x800 | this.bitField0_);
        return this;
      }

      public final Builder setReceiptRequest(Client.ReceiptRequest paramReceiptRequest)
      {
        if (paramReceiptRequest == null)
          throw new NullPointerException();
        this.receiptRequest_ = paramReceiptRequest;
        this.bitField0_ = (0x800 | this.bitField0_);
        return this;
      }

      public final Builder setReceiptResponse(Client.ReceiptResponse.Builder paramBuilder)
      {
        this.receiptResponse_ = paramBuilder.build();
        this.bitField0_ = (0x1000 | this.bitField0_);
        return this;
      }

      public final Builder setReceiptResponse(Client.ReceiptResponse paramReceiptResponse)
      {
        if (paramReceiptResponse == null)
          throw new NullPointerException();
        this.receiptResponse_ = paramReceiptResponse;
        this.bitField0_ = (0x1000 | this.bitField0_);
        return this;
      }

      public final Builder setReplyToInviteRequest(Client.ReplyToInviteRequest.Builder paramBuilder)
      {
        this.replyToInviteRequest_ = paramBuilder.build();
        this.bitField1_ = (0x80 | this.bitField1_);
        return this;
      }

      public final Builder setReplyToInviteRequest(Client.ReplyToInviteRequest paramReplyToInviteRequest)
      {
        if (paramReplyToInviteRequest == null)
          throw new NullPointerException();
        this.replyToInviteRequest_ = paramReplyToInviteRequest;
        this.bitField1_ = (0x80 | this.bitField1_);
        return this;
      }

      public final Builder setReplyToInviteResponse(Client.ReplyToInviteResponse.Builder paramBuilder)
      {
        this.replyToInviteResponse_ = paramBuilder.build();
        this.bitField1_ = (0x800 | this.bitField1_);
        return this;
      }

      public final Builder setReplyToInviteResponse(Client.ReplyToInviteResponse paramReplyToInviteResponse)
      {
        if (paramReplyToInviteResponse == null)
          throw new NullPointerException();
        this.replyToInviteResponse_ = paramReplyToInviteResponse;
        this.bitField1_ = (0x800 | this.bitField1_);
        return this;
      }

      public final Builder setRequestClientId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x1 | this.bitField0_);
        this.requestClientId_ = paramString;
        return this;
      }

      public final Builder setSetAclsRequest(Client.SetAclsRequest.Builder paramBuilder)
      {
        this.setAclsRequest_ = paramBuilder.build();
        this.bitField1_ = (0x100 | this.bitField1_);
        return this;
      }

      public final Builder setSetAclsRequest(Client.SetAclsRequest paramSetAclsRequest)
      {
        if (paramSetAclsRequest == null)
          throw new NullPointerException();
        this.setAclsRequest_ = paramSetAclsRequest;
        this.bitField1_ = (0x100 | this.bitField1_);
        return this;
      }

      public final Builder setSetAclsResponse(Client.SetAclsResponse.Builder paramBuilder)
      {
        this.setAclsResponse_ = paramBuilder.build();
        this.bitField1_ = (0x1000 | this.bitField1_);
        return this;
      }

      public final Builder setSetAclsResponse(Client.SetAclsResponse paramSetAclsResponse)
      {
        if (paramSetAclsResponse == null)
          throw new NullPointerException();
        this.setAclsResponse_ = paramSetAclsResponse;
        this.bitField1_ = (0x1000 | this.bitField1_);
        return this;
      }

      public final Builder setSuggestionsRequest(Client.SuggestionsRequest.Builder paramBuilder)
      {
        this.suggestionsRequest_ = paramBuilder.build();
        this.bitField1_ = (0x80000 | this.bitField1_);
        return this;
      }

      public final Builder setSuggestionsRequest(Client.SuggestionsRequest paramSuggestionsRequest)
      {
        if (paramSuggestionsRequest == null)
          throw new NullPointerException();
        this.suggestionsRequest_ = paramSuggestionsRequest;
        this.bitField1_ = (0x80000 | this.bitField1_);
        return this;
      }

      public final Builder setSuggestionsResponse(Client.SuggestionsResponse.Builder paramBuilder)
      {
        this.suggestionsResponse_ = paramBuilder.build();
        this.bitField1_ = (0x100000 | this.bitField1_);
        return this;
      }

      public final Builder setSuggestionsResponse(Client.SuggestionsResponse paramSuggestionsResponse)
      {
        if (paramSuggestionsResponse == null)
          throw new NullPointerException();
        this.suggestionsResponse_ = paramSuggestionsResponse;
        this.bitField1_ = (0x100000 | this.bitField1_);
        return this;
      }

      public final Builder setTileEvent(Client.TileEvent.Builder paramBuilder)
      {
        this.tileEvent_ = paramBuilder.build();
        this.bitField1_ = (0x8 | this.bitField1_);
        return this;
      }

      public final Builder setTileEvent(Client.TileEvent paramTileEvent)
      {
        if (paramTileEvent == null)
          throw new NullPointerException();
        this.tileEvent_ = paramTileEvent;
        this.bitField1_ = (0x8 | this.bitField1_);
        return this;
      }

      public final Builder setTileEventRequest(Client.TileEventRequest.Builder paramBuilder)
      {
        this.tileEventRequest_ = paramBuilder.build();
        this.bitField1_ = (0x2 | this.bitField1_);
        return this;
      }

      public final Builder setTileEventRequest(Client.TileEventRequest paramTileEventRequest)
      {
        if (paramTileEventRequest == null)
          throw new NullPointerException();
        this.tileEventRequest_ = paramTileEventRequest;
        this.bitField1_ = (0x2 | this.bitField1_);
        return this;
      }

      public final Builder setTileEventResponse(Client.TileEventResponse.Builder paramBuilder)
      {
        this.tileEventResponse_ = paramBuilder.build();
        this.bitField1_ = (0x4 | this.bitField1_);
        return this;
      }

      public final Builder setTileEventResponse(Client.TileEventResponse paramTileEventResponse)
      {
        if (paramTileEventResponse == null)
          throw new NullPointerException();
        this.tileEventResponse_ = paramTileEventResponse;
        this.bitField1_ = (0x4 | this.bitField1_);
        return this;
      }

      public final Builder setTyping(Client.Typing.Builder paramBuilder)
      {
        this.typing_ = paramBuilder.build();
        this.bitField0_ = (0x200 | this.bitField0_);
        return this;
      }

      public final Builder setTyping(Client.Typing paramTyping)
      {
        if (paramTyping == null)
          throw new NullPointerException();
        this.typing_ = paramTyping;
        this.bitField0_ = (0x200 | this.bitField0_);
        return this;
      }

      public final Builder setTypingRequest(Client.TypingRequest.Builder paramBuilder)
      {
        this.typingRequest_ = paramBuilder.build();
        this.bitField0_ = (0x80 | this.bitField0_);
        return this;
      }

      public final Builder setTypingRequest(Client.TypingRequest paramTypingRequest)
      {
        if (paramTypingRequest == null)
          throw new NullPointerException();
        this.typingRequest_ = paramTypingRequest;
        this.bitField0_ = (0x80 | this.bitField0_);
        return this;
      }

      public final Builder setTypingResponse(Client.TypingResponse.Builder paramBuilder)
      {
        this.typingResponse_ = paramBuilder.build();
        this.bitField0_ = (0x100 | this.bitField0_);
        return this;
      }

      public final Builder setTypingResponse(Client.TypingResponse paramTypingResponse)
      {
        if (paramTypingResponse == null)
          throw new NullPointerException();
        this.typingResponse_ = paramTypingResponse;
        this.bitField0_ = (0x100 | this.bitField0_);
        return this;
      }

      public final Builder setUserCreationRequest(Client.UserCreationRequest.Builder paramBuilder)
      {
        this.userCreationRequest_ = paramBuilder.build();
        this.bitField0_ = (0x1000000 | this.bitField0_);
        return this;
      }

      public final Builder setUserCreationRequest(Client.UserCreationRequest paramUserCreationRequest)
      {
        if (paramUserCreationRequest == null)
          throw new NullPointerException();
        this.userCreationRequest_ = paramUserCreationRequest;
        this.bitField0_ = (0x1000000 | this.bitField0_);
        return this;
      }

      public final Builder setUserCreationResponse(Client.UserCreationResponse.Builder paramBuilder)
      {
        this.userCreationResponse_ = paramBuilder.build();
        this.bitField0_ = (0x2000000 | this.bitField0_);
        return this;
      }

      public final Builder setUserCreationResponse(Client.UserCreationResponse paramUserCreationResponse)
      {
        if (paramUserCreationResponse == null)
          throw new NullPointerException();
        this.userCreationResponse_ = paramUserCreationResponse;
        this.bitField0_ = (0x2000000 | this.bitField0_);
        return this;
      }

      public final Builder setUserInfoRequest(Client.UserInfoRequest.Builder paramBuilder)
      {
        this.userInfoRequest_ = paramBuilder.build();
        this.bitField1_ = (0x2000 | this.bitField1_);
        return this;
      }

      public final Builder setUserInfoRequest(Client.UserInfoRequest paramUserInfoRequest)
      {
        if (paramUserInfoRequest == null)
          throw new NullPointerException();
        this.userInfoRequest_ = paramUserInfoRequest;
        this.bitField1_ = (0x2000 | this.bitField1_);
        return this;
      }

      public final Builder setUserInfoResponse(Client.UserInfoResponse.Builder paramBuilder)
      {
        this.userInfoResponse_ = paramBuilder.build();
        this.bitField1_ = (0x4000 | this.bitField1_);
        return this;
      }

      public final Builder setUserInfoResponse(Client.UserInfoResponse paramUserInfoResponse)
      {
        if (paramUserInfoResponse == null)
          throw new NullPointerException();
        this.userInfoResponse_ = paramUserInfoResponse;
        this.bitField1_ = (0x4000 | this.bitField1_);
        return this;
      }
    }
  }

  public static abstract interface BunchCommandOrBuilder extends MessageLiteOrBuilder
  {
    public abstract Client.ChatMessage getChatMessage();

    public abstract Client.ChatMessageRequest getChatMessageRequest();

    public abstract Client.ChatMessageResponse getChatMessageResponse();

    public abstract Client.ConversationJoinRequest getConversationJoinRequest();

    public abstract Client.ConversationJoinResponse getConversationJoinResponse();

    public abstract Client.ConversationListRequest getConversationListRequest();

    public abstract Client.ConversationListResponse getConversationListResponse();

    public abstract Client.ConversationPreferenceRequest getConversationPreferenceRequest();

    public abstract Client.ConversationPreferenceResponse getConversationPreferenceResponse();

    public abstract Client.ConversationRenameRequest getConversationRenameRequest();

    public abstract Client.ConversationRenameResponse getConversationRenameResponse();

    public abstract Client.NewConversationRequest getConversationRequest();

    public abstract Client.NewConversationResponse getConversationResponse();

    public abstract Client.ConversationSearchRequest getConversationSearchRequest();

    public abstract Client.ConversationSearchResponse getConversationSearchResponse();

    public abstract Client.DeviceRegistrationRequest getDeviceRegistrationRequest();

    public abstract Client.DeviceRegistrationResponse getDeviceRegistrationResponse();

    public abstract Client.Error getError();

    public abstract Client.EventSearchRequest getEventSearchRequest();

    public abstract Client.EventSearchResponse getEventSearchResponse();

    public abstract Client.EventStreamResponse getEventSteamResponse();

    public abstract Client.EventStreamRequest getEventStreamRequest();

    public abstract Client.GlobalConversationPreferencesRequest getGlobalConversationPreferencesRequest();

    public abstract Client.GlobalConversationPreferencesResponse getGlobalConversationPreferencesResponse();

    public abstract Client.GroupConversationRename getGroupConversationRename();

    public abstract Client.HangoutInviteFinishRequest getHangoutInviteFinishRequest();

    public abstract Client.HangoutInviteFinishResponse getHangoutInviteFinishResponse();

    public abstract Client.HangoutInviteKeepAliveRequest getHangoutInviteKeepAliveRequest();

    public abstract Client.HangoutInviteKeepAliveResponse getHangoutInviteKeepAliveResponse();

    public abstract Client.HangoutInviteReplyRequest getHangoutInviteReplyRequest();

    public abstract Client.HangoutInviteReplyResponse getHangoutInviteReplyResponse();

    public abstract Client.HangoutInviteRequest getHangoutInviteRequest();

    public abstract Client.HangoutInviteResponse getHangoutInviteResponse();

    public abstract Client.HangoutRingFinishRequest getHangoutRingFinishRequest();

    public abstract Client.HangoutRingFinishResponse getHangoutRingFinishResponse();

    public abstract Client.InvalidateLocalCache getInvalidateLocalCache();

    public abstract Client.InviteRequest getInviteRequest();

    public abstract Client.InviteResponse getInviteResponse();

    public abstract Client.LeaveConversationRequest getLeaveConversationRequest();

    public abstract Client.LeaveConversationResponse getLeaveConversationResponse();

    public abstract Client.MembershipChange getMembershipChange();

    public abstract Client.Migration getMigration();

    public abstract Client.PingRequest getPingRequest();

    public abstract Client.PingResponse getPingResponse();

    public abstract Client.Presence getPresence();

    public abstract Client.PresenceRequest getPresenceRequest();

    public abstract Client.PresenceResponse getPresenceResponse();

    public abstract Client.Receipt getReceipt();

    public abstract Client.ReceiptRequest getReceiptRequest();

    public abstract Client.ReceiptResponse getReceiptResponse();

    public abstract Client.ReplyToInviteRequest getReplyToInviteRequest();

    public abstract Client.ReplyToInviteResponse getReplyToInviteResponse();

    public abstract String getRequestClientId();

    public abstract Client.SetAclsRequest getSetAclsRequest();

    public abstract Client.SetAclsResponse getSetAclsResponse();

    public abstract Client.SuggestionsRequest getSuggestionsRequest();

    public abstract Client.SuggestionsResponse getSuggestionsResponse();

    public abstract Client.TileEvent getTileEvent();

    public abstract Client.TileEventRequest getTileEventRequest();

    public abstract Client.TileEventResponse getTileEventResponse();

    public abstract Client.Typing getTyping();

    public abstract Client.TypingRequest getTypingRequest();

    public abstract Client.TypingResponse getTypingResponse();

    public abstract Client.UserCreationRequest getUserCreationRequest();

    public abstract Client.UserCreationResponse getUserCreationResponse();

    public abstract Client.UserInfoRequest getUserInfoRequest();

    public abstract Client.UserInfoResponse getUserInfoResponse();

    public abstract boolean hasChatMessage();

    public abstract boolean hasChatMessageRequest();

    public abstract boolean hasChatMessageResponse();

    public abstract boolean hasConversationJoinRequest();

    public abstract boolean hasConversationJoinResponse();

    public abstract boolean hasConversationListRequest();

    public abstract boolean hasConversationListResponse();

    public abstract boolean hasConversationPreferenceRequest();

    public abstract boolean hasConversationPreferenceResponse();

    public abstract boolean hasConversationRenameRequest();

    public abstract boolean hasConversationRenameResponse();

    public abstract boolean hasConversationRequest();

    public abstract boolean hasConversationResponse();

    public abstract boolean hasConversationSearchRequest();

    public abstract boolean hasConversationSearchResponse();

    public abstract boolean hasDeviceRegistrationRequest();

    public abstract boolean hasDeviceRegistrationResponse();

    public abstract boolean hasError();

    public abstract boolean hasEventSearchRequest();

    public abstract boolean hasEventSearchResponse();

    public abstract boolean hasEventSteamResponse();

    public abstract boolean hasEventStreamRequest();

    public abstract boolean hasGlobalConversationPreferencesRequest();

    public abstract boolean hasGlobalConversationPreferencesResponse();

    public abstract boolean hasGroupConversationRename();

    public abstract boolean hasHangoutInviteFinishRequest();

    public abstract boolean hasHangoutInviteFinishResponse();

    public abstract boolean hasHangoutInviteKeepAliveRequest();

    public abstract boolean hasHangoutInviteKeepAliveResponse();

    public abstract boolean hasHangoutInviteReplyRequest();

    public abstract boolean hasHangoutInviteReplyResponse();

    public abstract boolean hasHangoutInviteRequest();

    public abstract boolean hasHangoutInviteResponse();

    public abstract boolean hasHangoutRingFinishRequest();

    public abstract boolean hasHangoutRingFinishResponse();

    public abstract boolean hasInvalidateLocalCache();

    public abstract boolean hasInviteRequest();

    public abstract boolean hasInviteResponse();

    public abstract boolean hasLeaveConversationRequest();

    public abstract boolean hasLeaveConversationResponse();

    public abstract boolean hasMembershipChange();

    public abstract boolean hasMigration();

    public abstract boolean hasPingRequest();

    public abstract boolean hasPingResponse();

    public abstract boolean hasPresence();

    public abstract boolean hasPresenceRequest();

    public abstract boolean hasPresenceResponse();

    public abstract boolean hasReceipt();

    public abstract boolean hasReceiptRequest();

    public abstract boolean hasReceiptResponse();

    public abstract boolean hasReplyToInviteRequest();

    public abstract boolean hasReplyToInviteResponse();

    public abstract boolean hasRequestClientId();

    public abstract boolean hasSetAclsRequest();

    public abstract boolean hasSetAclsResponse();

    public abstract boolean hasSuggestionsRequest();

    public abstract boolean hasSuggestionsResponse();

    public abstract boolean hasTileEvent();

    public abstract boolean hasTileEventRequest();

    public abstract boolean hasTileEventResponse();

    public abstract boolean hasTyping();

    public abstract boolean hasTypingRequest();

    public abstract boolean hasTypingResponse();

    public abstract boolean hasUserCreationRequest();

    public abstract boolean hasUserCreationResponse();

    public abstract boolean hasUserInfoRequest();

    public abstract boolean hasUserInfoResponse();
  }

  public static final class BunchResponse extends GeneratedMessageLite
    implements Client.BunchResponseOrBuilder
  {
    private static final BunchResponse defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private Data.ResponseStatus status_;
    private long timestamp_;

    static
    {
      BunchResponse localBunchResponse = new BunchResponse();
      defaultInstance = localBunchResponse;
      localBunchResponse.status_ = Data.ResponseStatus.OK;
      localBunchResponse.timestamp_ = 0L;
    }

    private BunchResponse()
    {
    }

    private BunchResponse(Builder paramBuilder)
    {
      super();
    }

    public static BunchResponse getDefaultInstance()
    {
      return defaultInstance;
    }

    public final BunchResponse getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeEnumSize(1, this.status_.getNumber());
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeInt64Size(2, this.timestamp_);
        this.memoizedSerializedSize = k;
      }
    }

    public final Data.ResponseStatus getStatus()
    {
      return this.status_;
    }

    public final long getTimestamp()
    {
      return this.timestamp_;
    }

    public final boolean hasStatus()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean hasTimestamp()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeEnum(1, this.status_.getNumber());
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeInt64(2, this.timestamp_);
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Client.BunchResponse, Builder>
      implements Client.BunchResponseOrBuilder
    {
      private int bitField0_;
      private Data.ResponseStatus status_ = Data.ResponseStatus.OK;
      private long timestamp_;

      private Client.BunchResponse buildPartial()
      {
        Client.BunchResponse localBunchResponse = new Client.BunchResponse(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Client.BunchResponse.access$43002(localBunchResponse, this.status_);
        if ((i & 0x2) == 2)
          k |= 2;
        Client.BunchResponse.access$43102(localBunchResponse, this.timestamp_);
        Client.BunchResponse.access$43202(localBunchResponse, k);
        return localBunchResponse;
      }

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 8:
            Data.ResponseStatus localResponseStatus = Data.ResponseStatus.valueOf(paramCodedInputStream.readEnum());
            if (localResponseStatus == null)
              continue;
            this.bitField0_ = (0x1 | this.bitField0_);
            this.status_ = localResponseStatus;
            break;
          case 16:
          }
          this.bitField0_ = (0x2 | this.bitField0_);
          this.timestamp_ = paramCodedInputStream.readInt64();
        }
      }

      public final Builder clear()
      {
        super.clear();
        this.status_ = Data.ResponseStatus.OK;
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.timestamp_ = 0L;
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        return this;
      }

      public final Builder clearStatus()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.status_ = Data.ResponseStatus.OK;
        return this;
      }

      public final Builder clearTimestamp()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.timestamp_ = 0L;
        return this;
      }

      public final Client.BunchResponse getDefaultInstanceForType()
      {
        return Client.BunchResponse.getDefaultInstance();
      }

      public final Data.ResponseStatus getStatus()
      {
        return this.status_;
      }

      public final long getTimestamp()
      {
        return this.timestamp_;
      }

      public final boolean hasStatus()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean hasTimestamp()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Client.BunchResponse paramBunchResponse)
      {
        if (paramBunchResponse == Client.BunchResponse.getDefaultInstance());
        while (true)
        {
          return this;
          if (paramBunchResponse.hasStatus())
            setStatus(paramBunchResponse.getStatus());
          if (paramBunchResponse.hasTimestamp())
            setTimestamp(paramBunchResponse.getTimestamp());
        }
      }

      public final Builder setStatus(Data.ResponseStatus paramResponseStatus)
      {
        if (paramResponseStatus == null)
          throw new NullPointerException();
        this.bitField0_ = (0x1 | this.bitField0_);
        this.status_ = paramResponseStatus;
        return this;
      }

      public final Builder setTimestamp(long paramLong)
      {
        this.bitField0_ = (0x2 | this.bitField0_);
        this.timestamp_ = paramLong;
        return this;
      }
    }
  }

  public static abstract interface BunchResponseOrBuilder extends MessageLiteOrBuilder
  {
    public abstract Data.ResponseStatus getStatus();

    public abstract long getTimestamp();

    public abstract boolean hasStatus();

    public abstract boolean hasTimestamp();
  }

  public static final class BunchServerResponse extends GeneratedMessageLite
    implements Client.BunchServerResponseOrBuilder
  {
    private static final BunchServerResponse defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private Client.ChatMessageResponse chatMessageResponse_;
    private Client.ConversationJoinResponse conversationJoinResponse_;
    private Client.ConversationListResponse conversationListResponse_;
    private Client.ConversationPreferenceResponse conversationPreferenceResponse_;
    private Client.ConversationRenameResponse conversationRenameResponse_;
    private Client.NewConversationResponse conversationResponse_;
    private Client.ConversationSearchResponse conversationSearchResponse_;
    private Client.DeviceRegistrationResponse deviceRegistrationResponse_;
    private Client.Error error_;
    private Client.EventSearchResponse eventSearchResponse_;
    private Client.EventStreamResponse eventSteamResponse_;
    private Client.GlobalConversationPreferencesResponse globalConversationPreferencesResponse_;
    private Client.HangoutInviteFinishResponse hangoutInviteFinishResponse_;
    private Client.HangoutInviteKeepAliveResponse hangoutInviteKeepAliveResponse_;
    private Client.HangoutInviteReplyResponse hangoutInviteReplyResponse_;
    private Client.HangoutInviteResponse hangoutInviteResponse_;
    private Client.HangoutRingFinishResponse hangoutRingFinishResponse_;
    private Client.InviteResponse inviteResponse_;
    private Client.LeaveConversationResponse leaveConversationResponse_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private Client.PingResponse pingResponse_;
    private Client.PresenceResponse presenceResponse_;
    private Client.ReceiptResponse receiptResponse_;
    private Client.ReplyToInviteResponse replyToInviteResponse_;
    private Object requestClientId_;
    private Client.SetAclsResponse setAclsResponse_;
    private Client.SuggestionsResponse suggestionsResponse_;
    private Client.TileEventResponse tileEventResponse_;
    private Client.TypingResponse typingResponse_;
    private Client.UserCreationResponse userCreationResponse_;
    private Client.UserInfoResponse userInfoResponse_;

    static
    {
      BunchServerResponse localBunchServerResponse = new BunchServerResponse();
      defaultInstance = localBunchServerResponse;
      localBunchServerResponse.requestClientId_ = "";
      localBunchServerResponse.chatMessageResponse_ = Client.ChatMessageResponse.getDefaultInstance();
      localBunchServerResponse.presenceResponse_ = Client.PresenceResponse.getDefaultInstance();
      localBunchServerResponse.typingResponse_ = Client.TypingResponse.getDefaultInstance();
      localBunchServerResponse.receiptResponse_ = Client.ReceiptResponse.getDefaultInstance();
      localBunchServerResponse.conversationResponse_ = Client.NewConversationResponse.getDefaultInstance();
      localBunchServerResponse.eventSteamResponse_ = Client.EventStreamResponse.getDefaultInstance();
      localBunchServerResponse.deviceRegistrationResponse_ = Client.DeviceRegistrationResponse.getDefaultInstance();
      localBunchServerResponse.pingResponse_ = Client.PingResponse.getDefaultInstance();
      localBunchServerResponse.conversationListResponse_ = Client.ConversationListResponse.getDefaultInstance();
      localBunchServerResponse.userCreationResponse_ = Client.UserCreationResponse.getDefaultInstance();
      localBunchServerResponse.error_ = Client.Error.getDefaultInstance();
      localBunchServerResponse.leaveConversationResponse_ = Client.LeaveConversationResponse.getDefaultInstance();
      localBunchServerResponse.conversationRenameResponse_ = Client.ConversationRenameResponse.getDefaultInstance();
      localBunchServerResponse.tileEventResponse_ = Client.TileEventResponse.getDefaultInstance();
      localBunchServerResponse.conversationPreferenceResponse_ = Client.ConversationPreferenceResponse.getDefaultInstance();
      localBunchServerResponse.inviteResponse_ = Client.InviteResponse.getDefaultInstance();
      localBunchServerResponse.replyToInviteResponse_ = Client.ReplyToInviteResponse.getDefaultInstance();
      localBunchServerResponse.setAclsResponse_ = Client.SetAclsResponse.getDefaultInstance();
      localBunchServerResponse.userInfoResponse_ = Client.UserInfoResponse.getDefaultInstance();
      localBunchServerResponse.conversationSearchResponse_ = Client.ConversationSearchResponse.getDefaultInstance();
      localBunchServerResponse.eventSearchResponse_ = Client.EventSearchResponse.getDefaultInstance();
      localBunchServerResponse.suggestionsResponse_ = Client.SuggestionsResponse.getDefaultInstance();
      localBunchServerResponse.globalConversationPreferencesResponse_ = Client.GlobalConversationPreferencesResponse.getDefaultInstance();
      localBunchServerResponse.conversationJoinResponse_ = Client.ConversationJoinResponse.getDefaultInstance();
      localBunchServerResponse.hangoutInviteResponse_ = Client.HangoutInviteResponse.getDefaultInstance();
      localBunchServerResponse.hangoutInviteKeepAliveResponse_ = Client.HangoutInviteKeepAliveResponse.getDefaultInstance();
      localBunchServerResponse.hangoutInviteReplyResponse_ = Client.HangoutInviteReplyResponse.getDefaultInstance();
      localBunchServerResponse.hangoutInviteFinishResponse_ = Client.HangoutInviteFinishResponse.getDefaultInstance();
      localBunchServerResponse.hangoutRingFinishResponse_ = Client.HangoutRingFinishResponse.getDefaultInstance();
    }

    private BunchServerResponse()
    {
    }

    private BunchServerResponse(Builder paramBuilder)
    {
      super();
    }

    public static BunchServerResponse getDefaultInstance()
    {
      return defaultInstance;
    }

    private ByteString getRequestClientIdBytes()
    {
      Object localObject = this.requestClientId_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.requestClientId_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static Builder newBuilder()
    {
      return Builder.access$74900();
    }

    public final Client.ChatMessageResponse getChatMessageResponse()
    {
      return this.chatMessageResponse_;
    }

    public final Client.ConversationJoinResponse getConversationJoinResponse()
    {
      return this.conversationJoinResponse_;
    }

    public final Client.ConversationListResponse getConversationListResponse()
    {
      return this.conversationListResponse_;
    }

    public final Client.ConversationPreferenceResponse getConversationPreferenceResponse()
    {
      return this.conversationPreferenceResponse_;
    }

    public final Client.ConversationRenameResponse getConversationRenameResponse()
    {
      return this.conversationRenameResponse_;
    }

    public final Client.NewConversationResponse getConversationResponse()
    {
      return this.conversationResponse_;
    }

    public final Client.ConversationSearchResponse getConversationSearchResponse()
    {
      return this.conversationSearchResponse_;
    }

    public final BunchServerResponse getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final Client.DeviceRegistrationResponse getDeviceRegistrationResponse()
    {
      return this.deviceRegistrationResponse_;
    }

    public final Client.Error getError()
    {
      return this.error_;
    }

    public final Client.EventSearchResponse getEventSearchResponse()
    {
      return this.eventSearchResponse_;
    }

    public final Client.EventStreamResponse getEventSteamResponse()
    {
      return this.eventSteamResponse_;
    }

    public final Client.GlobalConversationPreferencesResponse getGlobalConversationPreferencesResponse()
    {
      return this.globalConversationPreferencesResponse_;
    }

    public final Client.HangoutInviteFinishResponse getHangoutInviteFinishResponse()
    {
      return this.hangoutInviteFinishResponse_;
    }

    public final Client.HangoutInviteKeepAliveResponse getHangoutInviteKeepAliveResponse()
    {
      return this.hangoutInviteKeepAliveResponse_;
    }

    public final Client.HangoutInviteReplyResponse getHangoutInviteReplyResponse()
    {
      return this.hangoutInviteReplyResponse_;
    }

    public final Client.HangoutInviteResponse getHangoutInviteResponse()
    {
      return this.hangoutInviteResponse_;
    }

    public final Client.HangoutRingFinishResponse getHangoutRingFinishResponse()
    {
      return this.hangoutRingFinishResponse_;
    }

    public final Client.InviteResponse getInviteResponse()
    {
      return this.inviteResponse_;
    }

    public final Client.LeaveConversationResponse getLeaveConversationResponse()
    {
      return this.leaveConversationResponse_;
    }

    public final Client.PingResponse getPingResponse()
    {
      return this.pingResponse_;
    }

    public final Client.PresenceResponse getPresenceResponse()
    {
      return this.presenceResponse_;
    }

    public final Client.ReceiptResponse getReceiptResponse()
    {
      return this.receiptResponse_;
    }

    public final Client.ReplyToInviteResponse getReplyToInviteResponse()
    {
      return this.replyToInviteResponse_;
    }

    public final String getRequestClientId()
    {
      Object localObject1 = this.requestClientId_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.requestClientId_ = str;
      }
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeBytesSize(1, getRequestClientIdBytes());
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeMessageSize(2, this.chatMessageResponse_);
        if ((0x4 & this.bitField0_) == 4)
          k += CodedOutputStream.computeMessageSize(3, this.presenceResponse_);
        if ((0x8 & this.bitField0_) == 8)
          k += CodedOutputStream.computeMessageSize(4, this.typingResponse_);
        if ((0x10 & this.bitField0_) == 16)
          k += CodedOutputStream.computeMessageSize(5, this.receiptResponse_);
        if ((0x20 & this.bitField0_) == 32)
          k += CodedOutputStream.computeMessageSize(6, this.conversationResponse_);
        if ((0x40 & this.bitField0_) == 64)
          k += CodedOutputStream.computeMessageSize(7, this.eventSteamResponse_);
        if ((0x80 & this.bitField0_) == 128)
          k += CodedOutputStream.computeMessageSize(8, this.deviceRegistrationResponse_);
        if ((0x100 & this.bitField0_) == 256)
          k += CodedOutputStream.computeMessageSize(9, this.pingResponse_);
        if ((0x200 & this.bitField0_) == 512)
          k += CodedOutputStream.computeMessageSize(10, this.conversationListResponse_);
        if ((0x400 & this.bitField0_) == 1024)
          k += CodedOutputStream.computeMessageSize(11, this.userCreationResponse_);
        if ((0x800 & this.bitField0_) == 2048)
          k += CodedOutputStream.computeMessageSize(12, this.error_);
        if ((0x1000 & this.bitField0_) == 4096)
          k += CodedOutputStream.computeMessageSize(13, this.leaveConversationResponse_);
        if ((0x2000 & this.bitField0_) == 8192)
          k += CodedOutputStream.computeMessageSize(14, this.conversationRenameResponse_);
        if ((0x4000 & this.bitField0_) == 16384)
          k += CodedOutputStream.computeMessageSize(15, this.tileEventResponse_);
        if ((0x8000 & this.bitField0_) == 32768)
          k += CodedOutputStream.computeMessageSize(16, this.conversationPreferenceResponse_);
        if ((0x10000 & this.bitField0_) == 65536)
          k += CodedOutputStream.computeMessageSize(17, this.inviteResponse_);
        if ((0x20000 & this.bitField0_) == 131072)
          k += CodedOutputStream.computeMessageSize(18, this.replyToInviteResponse_);
        if ((0x40000 & this.bitField0_) == 262144)
          k += CodedOutputStream.computeMessageSize(19, this.setAclsResponse_);
        if ((0x80000 & this.bitField0_) == 524288)
          k += CodedOutputStream.computeMessageSize(20, this.userInfoResponse_);
        if ((0x100000 & this.bitField0_) == 1048576)
          k += CodedOutputStream.computeMessageSize(21, this.conversationSearchResponse_);
        if ((0x200000 & this.bitField0_) == 2097152)
          k += CodedOutputStream.computeMessageSize(22, this.eventSearchResponse_);
        if ((0x400000 & this.bitField0_) == 4194304)
          k += CodedOutputStream.computeMessageSize(23, this.suggestionsResponse_);
        if ((0x800000 & this.bitField0_) == 8388608)
          k += CodedOutputStream.computeMessageSize(24, this.globalConversationPreferencesResponse_);
        if ((0x1000000 & this.bitField0_) == 16777216)
          k += CodedOutputStream.computeMessageSize(25, this.conversationJoinResponse_);
        if ((0x2000000 & this.bitField0_) == 33554432)
          k += CodedOutputStream.computeMessageSize(26, this.hangoutInviteResponse_);
        if ((0x4000000 & this.bitField0_) == 67108864)
          k += CodedOutputStream.computeMessageSize(27, this.hangoutInviteKeepAliveResponse_);
        if ((0x8000000 & this.bitField0_) == 134217728)
          k += CodedOutputStream.computeMessageSize(28, this.hangoutInviteReplyResponse_);
        if ((0x10000000 & this.bitField0_) == 268435456)
          k += CodedOutputStream.computeMessageSize(29, this.hangoutInviteFinishResponse_);
        if ((0x20000000 & this.bitField0_) == 536870912)
          k += CodedOutputStream.computeMessageSize(30, this.hangoutRingFinishResponse_);
        this.memoizedSerializedSize = k;
      }
    }

    public final Client.SetAclsResponse getSetAclsResponse()
    {
      return this.setAclsResponse_;
    }

    public final Client.SuggestionsResponse getSuggestionsResponse()
    {
      return this.suggestionsResponse_;
    }

    public final Client.TileEventResponse getTileEventResponse()
    {
      return this.tileEventResponse_;
    }

    public final Client.TypingResponse getTypingResponse()
    {
      return this.typingResponse_;
    }

    public final Client.UserCreationResponse getUserCreationResponse()
    {
      return this.userCreationResponse_;
    }

    public final Client.UserInfoResponse getUserInfoResponse()
    {
      return this.userInfoResponse_;
    }

    public final boolean hasChatMessageResponse()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasConversationJoinResponse()
    {
      if ((0x1000000 & this.bitField0_) == 16777216);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasConversationListResponse()
    {
      if ((0x200 & this.bitField0_) == 512);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasConversationPreferenceResponse()
    {
      if ((0x8000 & this.bitField0_) == 32768);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasConversationRenameResponse()
    {
      if ((0x2000 & this.bitField0_) == 8192);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasConversationResponse()
    {
      if ((0x20 & this.bitField0_) == 32);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasConversationSearchResponse()
    {
      if ((0x100000 & this.bitField0_) == 1048576);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasDeviceRegistrationResponse()
    {
      if ((0x80 & this.bitField0_) == 128);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasError()
    {
      if ((0x800 & this.bitField0_) == 2048);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasEventSearchResponse()
    {
      if ((0x200000 & this.bitField0_) == 2097152);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasEventSteamResponse()
    {
      if ((0x40 & this.bitField0_) == 64);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasGlobalConversationPreferencesResponse()
    {
      if ((0x800000 & this.bitField0_) == 8388608);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasHangoutInviteFinishResponse()
    {
      if ((0x10000000 & this.bitField0_) == 268435456);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasHangoutInviteKeepAliveResponse()
    {
      if ((0x4000000 & this.bitField0_) == 67108864);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasHangoutInviteReplyResponse()
    {
      if ((0x8000000 & this.bitField0_) == 134217728);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasHangoutInviteResponse()
    {
      if ((0x2000000 & this.bitField0_) == 33554432);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasHangoutRingFinishResponse()
    {
      if ((0x20000000 & this.bitField0_) == 536870912);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasInviteResponse()
    {
      if ((0x10000 & this.bitField0_) == 65536);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasLeaveConversationResponse()
    {
      if ((0x1000 & this.bitField0_) == 4096);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasPingResponse()
    {
      if ((0x100 & this.bitField0_) == 256);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasPresenceResponse()
    {
      if ((0x4 & this.bitField0_) == 4);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasReceiptResponse()
    {
      if ((0x10 & this.bitField0_) == 16);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasReplyToInviteResponse()
    {
      if ((0x20000 & this.bitField0_) == 131072);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasRequestClientId()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean hasSetAclsResponse()
    {
      if ((0x40000 & this.bitField0_) == 262144);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasSuggestionsResponse()
    {
      if ((0x400000 & this.bitField0_) == 4194304);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasTileEventResponse()
    {
      if ((0x4000 & this.bitField0_) == 16384);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasTypingResponse()
    {
      if ((0x8 & this.bitField0_) == 8);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasUserCreationResponse()
    {
      if ((0x400 & this.bitField0_) == 1024);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasUserInfoResponse()
    {
      if ((0x80000 & this.bitField0_) == 524288);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeBytes(1, getRequestClientIdBytes());
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeMessage(2, this.chatMessageResponse_);
      if ((0x4 & this.bitField0_) == 4)
        paramCodedOutputStream.writeMessage(3, this.presenceResponse_);
      if ((0x8 & this.bitField0_) == 8)
        paramCodedOutputStream.writeMessage(4, this.typingResponse_);
      if ((0x10 & this.bitField0_) == 16)
        paramCodedOutputStream.writeMessage(5, this.receiptResponse_);
      if ((0x20 & this.bitField0_) == 32)
        paramCodedOutputStream.writeMessage(6, this.conversationResponse_);
      if ((0x40 & this.bitField0_) == 64)
        paramCodedOutputStream.writeMessage(7, this.eventSteamResponse_);
      if ((0x80 & this.bitField0_) == 128)
        paramCodedOutputStream.writeMessage(8, this.deviceRegistrationResponse_);
      if ((0x100 & this.bitField0_) == 256)
        paramCodedOutputStream.writeMessage(9, this.pingResponse_);
      if ((0x200 & this.bitField0_) == 512)
        paramCodedOutputStream.writeMessage(10, this.conversationListResponse_);
      if ((0x400 & this.bitField0_) == 1024)
        paramCodedOutputStream.writeMessage(11, this.userCreationResponse_);
      if ((0x800 & this.bitField0_) == 2048)
        paramCodedOutputStream.writeMessage(12, this.error_);
      if ((0x1000 & this.bitField0_) == 4096)
        paramCodedOutputStream.writeMessage(13, this.leaveConversationResponse_);
      if ((0x2000 & this.bitField0_) == 8192)
        paramCodedOutputStream.writeMessage(14, this.conversationRenameResponse_);
      if ((0x4000 & this.bitField0_) == 16384)
        paramCodedOutputStream.writeMessage(15, this.tileEventResponse_);
      if ((0x8000 & this.bitField0_) == 32768)
        paramCodedOutputStream.writeMessage(16, this.conversationPreferenceResponse_);
      if ((0x10000 & this.bitField0_) == 65536)
        paramCodedOutputStream.writeMessage(17, this.inviteResponse_);
      if ((0x20000 & this.bitField0_) == 131072)
        paramCodedOutputStream.writeMessage(18, this.replyToInviteResponse_);
      if ((0x40000 & this.bitField0_) == 262144)
        paramCodedOutputStream.writeMessage(19, this.setAclsResponse_);
      if ((0x80000 & this.bitField0_) == 524288)
        paramCodedOutputStream.writeMessage(20, this.userInfoResponse_);
      if ((0x100000 & this.bitField0_) == 1048576)
        paramCodedOutputStream.writeMessage(21, this.conversationSearchResponse_);
      if ((0x200000 & this.bitField0_) == 2097152)
        paramCodedOutputStream.writeMessage(22, this.eventSearchResponse_);
      if ((0x400000 & this.bitField0_) == 4194304)
        paramCodedOutputStream.writeMessage(23, this.suggestionsResponse_);
      if ((0x800000 & this.bitField0_) == 8388608)
        paramCodedOutputStream.writeMessage(24, this.globalConversationPreferencesResponse_);
      if ((0x1000000 & this.bitField0_) == 16777216)
        paramCodedOutputStream.writeMessage(25, this.conversationJoinResponse_);
      if ((0x2000000 & this.bitField0_) == 33554432)
        paramCodedOutputStream.writeMessage(26, this.hangoutInviteResponse_);
      if ((0x4000000 & this.bitField0_) == 67108864)
        paramCodedOutputStream.writeMessage(27, this.hangoutInviteKeepAliveResponse_);
      if ((0x8000000 & this.bitField0_) == 134217728)
        paramCodedOutputStream.writeMessage(28, this.hangoutInviteReplyResponse_);
      if ((0x10000000 & this.bitField0_) == 268435456)
        paramCodedOutputStream.writeMessage(29, this.hangoutInviteFinishResponse_);
      if ((0x20000000 & this.bitField0_) == 536870912)
        paramCodedOutputStream.writeMessage(30, this.hangoutRingFinishResponse_);
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Client.BunchServerResponse, Builder>
      implements Client.BunchServerResponseOrBuilder
    {
      private int bitField0_;
      private Client.ChatMessageResponse chatMessageResponse_ = Client.ChatMessageResponse.getDefaultInstance();
      private Client.ConversationJoinResponse conversationJoinResponse_ = Client.ConversationJoinResponse.getDefaultInstance();
      private Client.ConversationListResponse conversationListResponse_ = Client.ConversationListResponse.getDefaultInstance();
      private Client.ConversationPreferenceResponse conversationPreferenceResponse_ = Client.ConversationPreferenceResponse.getDefaultInstance();
      private Client.ConversationRenameResponse conversationRenameResponse_ = Client.ConversationRenameResponse.getDefaultInstance();
      private Client.NewConversationResponse conversationResponse_ = Client.NewConversationResponse.getDefaultInstance();
      private Client.ConversationSearchResponse conversationSearchResponse_ = Client.ConversationSearchResponse.getDefaultInstance();
      private Client.DeviceRegistrationResponse deviceRegistrationResponse_ = Client.DeviceRegistrationResponse.getDefaultInstance();
      private Client.Error error_ = Client.Error.getDefaultInstance();
      private Client.EventSearchResponse eventSearchResponse_ = Client.EventSearchResponse.getDefaultInstance();
      private Client.EventStreamResponse eventSteamResponse_ = Client.EventStreamResponse.getDefaultInstance();
      private Client.GlobalConversationPreferencesResponse globalConversationPreferencesResponse_ = Client.GlobalConversationPreferencesResponse.getDefaultInstance();
      private Client.HangoutInviteFinishResponse hangoutInviteFinishResponse_ = Client.HangoutInviteFinishResponse.getDefaultInstance();
      private Client.HangoutInviteKeepAliveResponse hangoutInviteKeepAliveResponse_ = Client.HangoutInviteKeepAliveResponse.getDefaultInstance();
      private Client.HangoutInviteReplyResponse hangoutInviteReplyResponse_ = Client.HangoutInviteReplyResponse.getDefaultInstance();
      private Client.HangoutInviteResponse hangoutInviteResponse_ = Client.HangoutInviteResponse.getDefaultInstance();
      private Client.HangoutRingFinishResponse hangoutRingFinishResponse_ = Client.HangoutRingFinishResponse.getDefaultInstance();
      private Client.InviteResponse inviteResponse_ = Client.InviteResponse.getDefaultInstance();
      private Client.LeaveConversationResponse leaveConversationResponse_ = Client.LeaveConversationResponse.getDefaultInstance();
      private Client.PingResponse pingResponse_ = Client.PingResponse.getDefaultInstance();
      private Client.PresenceResponse presenceResponse_ = Client.PresenceResponse.getDefaultInstance();
      private Client.ReceiptResponse receiptResponse_ = Client.ReceiptResponse.getDefaultInstance();
      private Client.ReplyToInviteResponse replyToInviteResponse_ = Client.ReplyToInviteResponse.getDefaultInstance();
      private Object requestClientId_ = "";
      private Client.SetAclsResponse setAclsResponse_ = Client.SetAclsResponse.getDefaultInstance();
      private Client.SuggestionsResponse suggestionsResponse_ = Client.SuggestionsResponse.getDefaultInstance();
      private Client.TileEventResponse tileEventResponse_ = Client.TileEventResponse.getDefaultInstance();
      private Client.TypingResponse typingResponse_ = Client.TypingResponse.getDefaultInstance();
      private Client.UserCreationResponse userCreationResponse_ = Client.UserCreationResponse.getDefaultInstance();
      private Client.UserInfoResponse userInfoResponse_ = Client.UserInfoResponse.getDefaultInstance();

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 10:
            this.bitField0_ = (0x1 | this.bitField0_);
            this.requestClientId_ = paramCodedInputStream.readBytes();
            break;
          case 18:
            Client.ChatMessageResponse.Builder localBuilder28 = Client.ChatMessageResponse.newBuilder();
            if (hasChatMessageResponse())
              localBuilder28.mergeFrom(getChatMessageResponse());
            paramCodedInputStream.readMessage(localBuilder28, paramExtensionRegistryLite);
            setChatMessageResponse(localBuilder28.buildPartial());
            break;
          case 26:
            Client.PresenceResponse.Builder localBuilder27 = Client.PresenceResponse.newBuilder();
            if (hasPresenceResponse())
              localBuilder27.mergeFrom(getPresenceResponse());
            paramCodedInputStream.readMessage(localBuilder27, paramExtensionRegistryLite);
            setPresenceResponse(localBuilder27.buildPartial());
            break;
          case 34:
            Client.TypingResponse.Builder localBuilder26 = Client.TypingResponse.newBuilder();
            if (hasTypingResponse())
              localBuilder26.mergeFrom(getTypingResponse());
            paramCodedInputStream.readMessage(localBuilder26, paramExtensionRegistryLite);
            setTypingResponse(localBuilder26.buildPartial());
            break;
          case 42:
            Client.ReceiptResponse.Builder localBuilder25 = Client.ReceiptResponse.newBuilder();
            if (hasReceiptResponse())
              localBuilder25.mergeFrom(getReceiptResponse());
            paramCodedInputStream.readMessage(localBuilder25, paramExtensionRegistryLite);
            setReceiptResponse(localBuilder25.buildPartial());
            break;
          case 50:
            Client.NewConversationResponse.Builder localBuilder24 = Client.NewConversationResponse.newBuilder();
            if (hasConversationResponse())
              localBuilder24.mergeFrom(getConversationResponse());
            paramCodedInputStream.readMessage(localBuilder24, paramExtensionRegistryLite);
            setConversationResponse(localBuilder24.buildPartial());
            break;
          case 58:
            Client.EventStreamResponse.Builder localBuilder23 = Client.EventStreamResponse.newBuilder();
            if (hasEventSteamResponse())
              localBuilder23.mergeFrom(getEventSteamResponse());
            paramCodedInputStream.readMessage(localBuilder23, paramExtensionRegistryLite);
            setEventSteamResponse(localBuilder23.buildPartial());
            break;
          case 66:
            Client.DeviceRegistrationResponse.Builder localBuilder22 = Client.DeviceRegistrationResponse.newBuilder();
            if (hasDeviceRegistrationResponse())
              localBuilder22.mergeFrom(getDeviceRegistrationResponse());
            paramCodedInputStream.readMessage(localBuilder22, paramExtensionRegistryLite);
            setDeviceRegistrationResponse(localBuilder22.buildPartial());
            break;
          case 74:
            Client.PingResponse.Builder localBuilder21 = Client.PingResponse.newBuilder();
            if (hasPingResponse())
              localBuilder21.mergeFrom(getPingResponse());
            paramCodedInputStream.readMessage(localBuilder21, paramExtensionRegistryLite);
            setPingResponse(localBuilder21.buildPartial());
            break;
          case 82:
            Client.ConversationListResponse.Builder localBuilder20 = Client.ConversationListResponse.newBuilder();
            if (hasConversationListResponse())
              localBuilder20.mergeFrom(getConversationListResponse());
            paramCodedInputStream.readMessage(localBuilder20, paramExtensionRegistryLite);
            setConversationListResponse(localBuilder20.buildPartial());
            break;
          case 90:
            Client.UserCreationResponse.Builder localBuilder19 = Client.UserCreationResponse.newBuilder();
            if (hasUserCreationResponse())
              localBuilder19.mergeFrom(getUserCreationResponse());
            paramCodedInputStream.readMessage(localBuilder19, paramExtensionRegistryLite);
            setUserCreationResponse(localBuilder19.buildPartial());
            break;
          case 98:
            Client.Error.Builder localBuilder18 = Client.Error.newBuilder();
            if (hasError())
              localBuilder18.mergeFrom(getError());
            paramCodedInputStream.readMessage(localBuilder18, paramExtensionRegistryLite);
            setError(localBuilder18.buildPartial());
            break;
          case 106:
            Client.LeaveConversationResponse.Builder localBuilder17 = Client.LeaveConversationResponse.newBuilder();
            if (hasLeaveConversationResponse())
              localBuilder17.mergeFrom(getLeaveConversationResponse());
            paramCodedInputStream.readMessage(localBuilder17, paramExtensionRegistryLite);
            setLeaveConversationResponse(localBuilder17.buildPartial());
            break;
          case 114:
            Client.ConversationRenameResponse.Builder localBuilder16 = Client.ConversationRenameResponse.newBuilder();
            if (hasConversationRenameResponse())
              localBuilder16.mergeFrom(getConversationRenameResponse());
            paramCodedInputStream.readMessage(localBuilder16, paramExtensionRegistryLite);
            setConversationRenameResponse(localBuilder16.buildPartial());
            break;
          case 122:
            Client.TileEventResponse.Builder localBuilder15 = Client.TileEventResponse.newBuilder();
            if (hasTileEventResponse())
              localBuilder15.mergeFrom(getTileEventResponse());
            paramCodedInputStream.readMessage(localBuilder15, paramExtensionRegistryLite);
            setTileEventResponse(localBuilder15.buildPartial());
            break;
          case 130:
            Client.ConversationPreferenceResponse.Builder localBuilder14 = Client.ConversationPreferenceResponse.newBuilder();
            if (hasConversationPreferenceResponse())
              localBuilder14.mergeFrom(getConversationPreferenceResponse());
            paramCodedInputStream.readMessage(localBuilder14, paramExtensionRegistryLite);
            setConversationPreferenceResponse(localBuilder14.buildPartial());
            break;
          case 138:
            Client.InviteResponse.Builder localBuilder13 = Client.InviteResponse.newBuilder();
            if (hasInviteResponse())
              localBuilder13.mergeFrom(getInviteResponse());
            paramCodedInputStream.readMessage(localBuilder13, paramExtensionRegistryLite);
            setInviteResponse(localBuilder13.buildPartial());
            break;
          case 146:
            Client.ReplyToInviteResponse.Builder localBuilder12 = Client.ReplyToInviteResponse.newBuilder();
            if (hasReplyToInviteResponse())
              localBuilder12.mergeFrom(getReplyToInviteResponse());
            paramCodedInputStream.readMessage(localBuilder12, paramExtensionRegistryLite);
            setReplyToInviteResponse(localBuilder12.buildPartial());
            break;
          case 154:
            Client.SetAclsResponse.Builder localBuilder11 = Client.SetAclsResponse.newBuilder();
            if (hasSetAclsResponse())
              localBuilder11.mergeFrom(getSetAclsResponse());
            paramCodedInputStream.readMessage(localBuilder11, paramExtensionRegistryLite);
            setSetAclsResponse(localBuilder11.buildPartial());
            break;
          case 162:
            Client.UserInfoResponse.Builder localBuilder10 = Client.UserInfoResponse.newBuilder();
            if (hasUserInfoResponse())
              localBuilder10.mergeFrom(getUserInfoResponse());
            paramCodedInputStream.readMessage(localBuilder10, paramExtensionRegistryLite);
            setUserInfoResponse(localBuilder10.buildPartial());
            break;
          case 170:
            Client.ConversationSearchResponse.Builder localBuilder9 = Client.ConversationSearchResponse.newBuilder();
            if (hasConversationSearchResponse())
              localBuilder9.mergeFrom(getConversationSearchResponse());
            paramCodedInputStream.readMessage(localBuilder9, paramExtensionRegistryLite);
            setConversationSearchResponse(localBuilder9.buildPartial());
            break;
          case 178:
            Client.EventSearchResponse.Builder localBuilder8 = Client.EventSearchResponse.newBuilder();
            if (hasEventSearchResponse())
              localBuilder8.mergeFrom(getEventSearchResponse());
            paramCodedInputStream.readMessage(localBuilder8, paramExtensionRegistryLite);
            setEventSearchResponse(localBuilder8.buildPartial());
            break;
          case 186:
            Client.SuggestionsResponse.Builder localBuilder7 = Client.SuggestionsResponse.newBuilder();
            if (hasSuggestionsResponse())
              localBuilder7.mergeFrom(getSuggestionsResponse());
            paramCodedInputStream.readMessage(localBuilder7, paramExtensionRegistryLite);
            setSuggestionsResponse(localBuilder7.buildPartial());
            break;
          case 194:
            Client.GlobalConversationPreferencesResponse.Builder localBuilder6 = Client.GlobalConversationPreferencesResponse.newBuilder();
            if (hasGlobalConversationPreferencesResponse())
              localBuilder6.mergeFrom(getGlobalConversationPreferencesResponse());
            paramCodedInputStream.readMessage(localBuilder6, paramExtensionRegistryLite);
            setGlobalConversationPreferencesResponse(localBuilder6.buildPartial());
            break;
          case 202:
            Client.ConversationJoinResponse.Builder localBuilder5 = Client.ConversationJoinResponse.newBuilder();
            if (hasConversationJoinResponse())
              localBuilder5.mergeFrom(getConversationJoinResponse());
            paramCodedInputStream.readMessage(localBuilder5, paramExtensionRegistryLite);
            setConversationJoinResponse(localBuilder5.buildPartial());
            break;
          case 210:
            Client.HangoutInviteResponse.Builder localBuilder4 = Client.HangoutInviteResponse.newBuilder();
            if (hasHangoutInviteResponse())
              localBuilder4.mergeFrom(getHangoutInviteResponse());
            paramCodedInputStream.readMessage(localBuilder4, paramExtensionRegistryLite);
            setHangoutInviteResponse(localBuilder4.buildPartial());
            break;
          case 218:
            Client.HangoutInviteKeepAliveResponse.Builder localBuilder3 = Client.HangoutInviteKeepAliveResponse.newBuilder();
            if (hasHangoutInviteKeepAliveResponse())
              localBuilder3.mergeFrom(getHangoutInviteKeepAliveResponse());
            paramCodedInputStream.readMessage(localBuilder3, paramExtensionRegistryLite);
            setHangoutInviteKeepAliveResponse(localBuilder3.buildPartial());
            break;
          case 226:
            Client.HangoutInviteReplyResponse.Builder localBuilder2 = Client.HangoutInviteReplyResponse.newBuilder();
            if (hasHangoutInviteReplyResponse())
              localBuilder2.mergeFrom(getHangoutInviteReplyResponse());
            paramCodedInputStream.readMessage(localBuilder2, paramExtensionRegistryLite);
            setHangoutInviteReplyResponse(localBuilder2.buildPartial());
            break;
          case 234:
            Client.HangoutInviteFinishResponse.Builder localBuilder1 = Client.HangoutInviteFinishResponse.newBuilder();
            if (hasHangoutInviteFinishResponse())
              localBuilder1.mergeFrom(getHangoutInviteFinishResponse());
            paramCodedInputStream.readMessage(localBuilder1, paramExtensionRegistryLite);
            setHangoutInviteFinishResponse(localBuilder1.buildPartial());
            break;
          case 242:
          }
          Client.HangoutRingFinishResponse.Builder localBuilder = Client.HangoutRingFinishResponse.newBuilder();
          if (hasHangoutRingFinishResponse())
            localBuilder.mergeFrom(getHangoutRingFinishResponse());
          paramCodedInputStream.readMessage(localBuilder, paramExtensionRegistryLite);
          setHangoutRingFinishResponse(localBuilder.buildPartial());
        }
      }

      public final Client.BunchServerResponse build()
      {
        Client.BunchServerResponse localBunchServerResponse = buildPartial();
        if (!localBunchServerResponse.isInitialized())
          throw new UninitializedMessageException();
        return localBunchServerResponse;
      }

      public final Client.BunchServerResponse buildPartial()
      {
        Client.BunchServerResponse localBunchServerResponse = new Client.BunchServerResponse(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Client.BunchServerResponse.access$75102(localBunchServerResponse, this.requestClientId_);
        if ((i & 0x2) == 2)
          k |= 2;
        Client.BunchServerResponse.access$75202(localBunchServerResponse, this.chatMessageResponse_);
        if ((i & 0x4) == 4)
          k |= 4;
        Client.BunchServerResponse.access$75302(localBunchServerResponse, this.presenceResponse_);
        if ((i & 0x8) == 8)
          k |= 8;
        Client.BunchServerResponse.access$75402(localBunchServerResponse, this.typingResponse_);
        if ((i & 0x10) == 16)
          k |= 16;
        Client.BunchServerResponse.access$75502(localBunchServerResponse, this.receiptResponse_);
        if ((i & 0x20) == 32)
          k |= 32;
        Client.BunchServerResponse.access$75602(localBunchServerResponse, this.conversationResponse_);
        if ((i & 0x40) == 64)
          k |= 64;
        Client.BunchServerResponse.access$75702(localBunchServerResponse, this.eventSteamResponse_);
        if ((i & 0x80) == 128)
          k |= 128;
        Client.BunchServerResponse.access$75802(localBunchServerResponse, this.deviceRegistrationResponse_);
        if ((i & 0x100) == 256)
          k |= 256;
        Client.BunchServerResponse.access$75902(localBunchServerResponse, this.pingResponse_);
        if ((i & 0x200) == 512)
          k |= 512;
        Client.BunchServerResponse.access$76002(localBunchServerResponse, this.conversationListResponse_);
        if ((i & 0x400) == 1024)
          k |= 1024;
        Client.BunchServerResponse.access$76102(localBunchServerResponse, this.userCreationResponse_);
        if ((i & 0x800) == 2048)
          k |= 2048;
        Client.BunchServerResponse.access$76202(localBunchServerResponse, this.error_);
        if ((i & 0x1000) == 4096)
          k |= 4096;
        Client.BunchServerResponse.access$76302(localBunchServerResponse, this.leaveConversationResponse_);
        if ((i & 0x2000) == 8192)
          k |= 8192;
        Client.BunchServerResponse.access$76402(localBunchServerResponse, this.conversationRenameResponse_);
        if ((i & 0x4000) == 16384)
          k |= 16384;
        Client.BunchServerResponse.access$76502(localBunchServerResponse, this.tileEventResponse_);
        if ((i & 0x8000) == 32768)
          k |= 32768;
        Client.BunchServerResponse.access$76602(localBunchServerResponse, this.conversationPreferenceResponse_);
        if ((i & 0x10000) == 65536)
          k |= 65536;
        Client.BunchServerResponse.access$76702(localBunchServerResponse, this.inviteResponse_);
        if ((i & 0x20000) == 131072)
          k |= 131072;
        Client.BunchServerResponse.access$76802(localBunchServerResponse, this.replyToInviteResponse_);
        if ((i & 0x40000) == 262144)
          k |= 262144;
        Client.BunchServerResponse.access$76902(localBunchServerResponse, this.setAclsResponse_);
        if ((i & 0x80000) == 524288)
          k |= 524288;
        Client.BunchServerResponse.access$77002(localBunchServerResponse, this.userInfoResponse_);
        if ((0x100000 & i) == 1048576)
          k |= 1048576;
        Client.BunchServerResponse.access$77102(localBunchServerResponse, this.conversationSearchResponse_);
        if ((0x200000 & i) == 2097152)
          k |= 2097152;
        Client.BunchServerResponse.access$77202(localBunchServerResponse, this.eventSearchResponse_);
        if ((0x400000 & i) == 4194304)
          k |= 4194304;
        Client.BunchServerResponse.access$77302(localBunchServerResponse, this.suggestionsResponse_);
        if ((0x800000 & i) == 8388608)
          k |= 8388608;
        Client.BunchServerResponse.access$77402(localBunchServerResponse, this.globalConversationPreferencesResponse_);
        if ((0x1000000 & i) == 16777216)
          k |= 16777216;
        Client.BunchServerResponse.access$77502(localBunchServerResponse, this.conversationJoinResponse_);
        if ((0x2000000 & i) == 33554432)
          k |= 33554432;
        Client.BunchServerResponse.access$77602(localBunchServerResponse, this.hangoutInviteResponse_);
        if ((0x4000000 & i) == 67108864)
          k |= 67108864;
        Client.BunchServerResponse.access$77702(localBunchServerResponse, this.hangoutInviteKeepAliveResponse_);
        if ((0x8000000 & i) == 134217728)
          k |= 134217728;
        Client.BunchServerResponse.access$77802(localBunchServerResponse, this.hangoutInviteReplyResponse_);
        if ((0x10000000 & i) == 268435456)
          k |= 268435456;
        Client.BunchServerResponse.access$77902(localBunchServerResponse, this.hangoutInviteFinishResponse_);
        if ((0x20000000 & i) == 536870912)
          k |= 536870912;
        Client.BunchServerResponse.access$78002(localBunchServerResponse, this.hangoutRingFinishResponse_);
        Client.BunchServerResponse.access$78102(localBunchServerResponse, k);
        return localBunchServerResponse;
      }

      public final Builder clear()
      {
        super.clear();
        this.requestClientId_ = "";
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.chatMessageResponse_ = Client.ChatMessageResponse.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.presenceResponse_ = Client.PresenceResponse.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.typingResponse_ = Client.TypingResponse.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        this.receiptResponse_ = Client.ReceiptResponse.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        this.conversationResponse_ = Client.NewConversationResponse.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFDF & this.bitField0_);
        this.eventSteamResponse_ = Client.EventStreamResponse.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFBF & this.bitField0_);
        this.deviceRegistrationResponse_ = Client.DeviceRegistrationResponse.getDefaultInstance();
        this.bitField0_ = (0xFFFFFF7F & this.bitField0_);
        this.pingResponse_ = Client.PingResponse.getDefaultInstance();
        this.bitField0_ = (0xFFFFFEFF & this.bitField0_);
        this.conversationListResponse_ = Client.ConversationListResponse.getDefaultInstance();
        this.bitField0_ = (0xFFFFFDFF & this.bitField0_);
        this.userCreationResponse_ = Client.UserCreationResponse.getDefaultInstance();
        this.bitField0_ = (0xFFFFFBFF & this.bitField0_);
        this.error_ = Client.Error.getDefaultInstance();
        this.bitField0_ = (0xFFFFF7FF & this.bitField0_);
        this.leaveConversationResponse_ = Client.LeaveConversationResponse.getDefaultInstance();
        this.bitField0_ = (0xFFFFEFFF & this.bitField0_);
        this.conversationRenameResponse_ = Client.ConversationRenameResponse.getDefaultInstance();
        this.bitField0_ = (0xFFFFDFFF & this.bitField0_);
        this.tileEventResponse_ = Client.TileEventResponse.getDefaultInstance();
        this.bitField0_ = (0xFFFFBFFF & this.bitField0_);
        this.conversationPreferenceResponse_ = Client.ConversationPreferenceResponse.getDefaultInstance();
        this.bitField0_ = (0xFFFF7FFF & this.bitField0_);
        this.inviteResponse_ = Client.InviteResponse.getDefaultInstance();
        this.bitField0_ = (0xFFFEFFFF & this.bitField0_);
        this.replyToInviteResponse_ = Client.ReplyToInviteResponse.getDefaultInstance();
        this.bitField0_ = (0xFFFDFFFF & this.bitField0_);
        this.setAclsResponse_ = Client.SetAclsResponse.getDefaultInstance();
        this.bitField0_ = (0xFFFBFFFF & this.bitField0_);
        this.userInfoResponse_ = Client.UserInfoResponse.getDefaultInstance();
        this.bitField0_ = (0xFFF7FFFF & this.bitField0_);
        this.conversationSearchResponse_ = Client.ConversationSearchResponse.getDefaultInstance();
        this.bitField0_ = (0xFFEFFFFF & this.bitField0_);
        this.eventSearchResponse_ = Client.EventSearchResponse.getDefaultInstance();
        this.bitField0_ = (0xFFDFFFFF & this.bitField0_);
        this.suggestionsResponse_ = Client.SuggestionsResponse.getDefaultInstance();
        this.bitField0_ = (0xFFBFFFFF & this.bitField0_);
        this.globalConversationPreferencesResponse_ = Client.GlobalConversationPreferencesResponse.getDefaultInstance();
        this.bitField0_ = (0xFF7FFFFF & this.bitField0_);
        this.conversationJoinResponse_ = Client.ConversationJoinResponse.getDefaultInstance();
        this.bitField0_ = (0xFEFFFFFF & this.bitField0_);
        this.hangoutInviteResponse_ = Client.HangoutInviteResponse.getDefaultInstance();
        this.bitField0_ = (0xFDFFFFFF & this.bitField0_);
        this.hangoutInviteKeepAliveResponse_ = Client.HangoutInviteKeepAliveResponse.getDefaultInstance();
        this.bitField0_ = (0xFBFFFFFF & this.bitField0_);
        this.hangoutInviteReplyResponse_ = Client.HangoutInviteReplyResponse.getDefaultInstance();
        this.bitField0_ = (0xF7FFFFFF & this.bitField0_);
        this.hangoutInviteFinishResponse_ = Client.HangoutInviteFinishResponse.getDefaultInstance();
        this.bitField0_ = (0xEFFFFFFF & this.bitField0_);
        this.hangoutRingFinishResponse_ = Client.HangoutRingFinishResponse.getDefaultInstance();
        this.bitField0_ = (0xDFFFFFFF & this.bitField0_);
        return this;
      }

      public final Builder clearChatMessageResponse()
      {
        this.chatMessageResponse_ = Client.ChatMessageResponse.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        return this;
      }

      public final Builder clearConversationJoinResponse()
      {
        this.conversationJoinResponse_ = Client.ConversationJoinResponse.getDefaultInstance();
        this.bitField0_ = (0xFEFFFFFF & this.bitField0_);
        return this;
      }

      public final Builder clearConversationListResponse()
      {
        this.conversationListResponse_ = Client.ConversationListResponse.getDefaultInstance();
        this.bitField0_ = (0xFFFFFDFF & this.bitField0_);
        return this;
      }

      public final Builder clearConversationPreferenceResponse()
      {
        this.conversationPreferenceResponse_ = Client.ConversationPreferenceResponse.getDefaultInstance();
        this.bitField0_ = (0xFFFF7FFF & this.bitField0_);
        return this;
      }

      public final Builder clearConversationRenameResponse()
      {
        this.conversationRenameResponse_ = Client.ConversationRenameResponse.getDefaultInstance();
        this.bitField0_ = (0xFFFFDFFF & this.bitField0_);
        return this;
      }

      public final Builder clearConversationResponse()
      {
        this.conversationResponse_ = Client.NewConversationResponse.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFDF & this.bitField0_);
        return this;
      }

      public final Builder clearConversationSearchResponse()
      {
        this.conversationSearchResponse_ = Client.ConversationSearchResponse.getDefaultInstance();
        this.bitField0_ = (0xFFEFFFFF & this.bitField0_);
        return this;
      }

      public final Builder clearDeviceRegistrationResponse()
      {
        this.deviceRegistrationResponse_ = Client.DeviceRegistrationResponse.getDefaultInstance();
        this.bitField0_ = (0xFFFFFF7F & this.bitField0_);
        return this;
      }

      public final Builder clearError()
      {
        this.error_ = Client.Error.getDefaultInstance();
        this.bitField0_ = (0xFFFFF7FF & this.bitField0_);
        return this;
      }

      public final Builder clearEventSearchResponse()
      {
        this.eventSearchResponse_ = Client.EventSearchResponse.getDefaultInstance();
        this.bitField0_ = (0xFFDFFFFF & this.bitField0_);
        return this;
      }

      public final Builder clearEventSteamResponse()
      {
        this.eventSteamResponse_ = Client.EventStreamResponse.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFBF & this.bitField0_);
        return this;
      }

      public final Builder clearGlobalConversationPreferencesResponse()
      {
        this.globalConversationPreferencesResponse_ = Client.GlobalConversationPreferencesResponse.getDefaultInstance();
        this.bitField0_ = (0xFF7FFFFF & this.bitField0_);
        return this;
      }

      public final Builder clearHangoutInviteFinishResponse()
      {
        this.hangoutInviteFinishResponse_ = Client.HangoutInviteFinishResponse.getDefaultInstance();
        this.bitField0_ = (0xEFFFFFFF & this.bitField0_);
        return this;
      }

      public final Builder clearHangoutInviteKeepAliveResponse()
      {
        this.hangoutInviteKeepAliveResponse_ = Client.HangoutInviteKeepAliveResponse.getDefaultInstance();
        this.bitField0_ = (0xFBFFFFFF & this.bitField0_);
        return this;
      }

      public final Builder clearHangoutInviteReplyResponse()
      {
        this.hangoutInviteReplyResponse_ = Client.HangoutInviteReplyResponse.getDefaultInstance();
        this.bitField0_ = (0xF7FFFFFF & this.bitField0_);
        return this;
      }

      public final Builder clearHangoutInviteResponse()
      {
        this.hangoutInviteResponse_ = Client.HangoutInviteResponse.getDefaultInstance();
        this.bitField0_ = (0xFDFFFFFF & this.bitField0_);
        return this;
      }

      public final Builder clearHangoutRingFinishResponse()
      {
        this.hangoutRingFinishResponse_ = Client.HangoutRingFinishResponse.getDefaultInstance();
        this.bitField0_ = (0xDFFFFFFF & this.bitField0_);
        return this;
      }

      public final Builder clearInviteResponse()
      {
        this.inviteResponse_ = Client.InviteResponse.getDefaultInstance();
        this.bitField0_ = (0xFFFEFFFF & this.bitField0_);
        return this;
      }

      public final Builder clearLeaveConversationResponse()
      {
        this.leaveConversationResponse_ = Client.LeaveConversationResponse.getDefaultInstance();
        this.bitField0_ = (0xFFFFEFFF & this.bitField0_);
        return this;
      }

      public final Builder clearPingResponse()
      {
        this.pingResponse_ = Client.PingResponse.getDefaultInstance();
        this.bitField0_ = (0xFFFFFEFF & this.bitField0_);
        return this;
      }

      public final Builder clearPresenceResponse()
      {
        this.presenceResponse_ = Client.PresenceResponse.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        return this;
      }

      public final Builder clearReceiptResponse()
      {
        this.receiptResponse_ = Client.ReceiptResponse.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        return this;
      }

      public final Builder clearReplyToInviteResponse()
      {
        this.replyToInviteResponse_ = Client.ReplyToInviteResponse.getDefaultInstance();
        this.bitField0_ = (0xFFFDFFFF & this.bitField0_);
        return this;
      }

      public final Builder clearRequestClientId()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.requestClientId_ = Client.BunchServerResponse.getDefaultInstance().getRequestClientId();
        return this;
      }

      public final Builder clearSetAclsResponse()
      {
        this.setAclsResponse_ = Client.SetAclsResponse.getDefaultInstance();
        this.bitField0_ = (0xFFFBFFFF & this.bitField0_);
        return this;
      }

      public final Builder clearSuggestionsResponse()
      {
        this.suggestionsResponse_ = Client.SuggestionsResponse.getDefaultInstance();
        this.bitField0_ = (0xFFBFFFFF & this.bitField0_);
        return this;
      }

      public final Builder clearTileEventResponse()
      {
        this.tileEventResponse_ = Client.TileEventResponse.getDefaultInstance();
        this.bitField0_ = (0xFFFFBFFF & this.bitField0_);
        return this;
      }

      public final Builder clearTypingResponse()
      {
        this.typingResponse_ = Client.TypingResponse.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        return this;
      }

      public final Builder clearUserCreationResponse()
      {
        this.userCreationResponse_ = Client.UserCreationResponse.getDefaultInstance();
        this.bitField0_ = (0xFFFFFBFF & this.bitField0_);
        return this;
      }

      public final Builder clearUserInfoResponse()
      {
        this.userInfoResponse_ = Client.UserInfoResponse.getDefaultInstance();
        this.bitField0_ = (0xFFF7FFFF & this.bitField0_);
        return this;
      }

      public final Client.ChatMessageResponse getChatMessageResponse()
      {
        return this.chatMessageResponse_;
      }

      public final Client.ConversationJoinResponse getConversationJoinResponse()
      {
        return this.conversationJoinResponse_;
      }

      public final Client.ConversationListResponse getConversationListResponse()
      {
        return this.conversationListResponse_;
      }

      public final Client.ConversationPreferenceResponse getConversationPreferenceResponse()
      {
        return this.conversationPreferenceResponse_;
      }

      public final Client.ConversationRenameResponse getConversationRenameResponse()
      {
        return this.conversationRenameResponse_;
      }

      public final Client.NewConversationResponse getConversationResponse()
      {
        return this.conversationResponse_;
      }

      public final Client.ConversationSearchResponse getConversationSearchResponse()
      {
        return this.conversationSearchResponse_;
      }

      public final Client.BunchServerResponse getDefaultInstanceForType()
      {
        return Client.BunchServerResponse.getDefaultInstance();
      }

      public final Client.DeviceRegistrationResponse getDeviceRegistrationResponse()
      {
        return this.deviceRegistrationResponse_;
      }

      public final Client.Error getError()
      {
        return this.error_;
      }

      public final Client.EventSearchResponse getEventSearchResponse()
      {
        return this.eventSearchResponse_;
      }

      public final Client.EventStreamResponse getEventSteamResponse()
      {
        return this.eventSteamResponse_;
      }

      public final Client.GlobalConversationPreferencesResponse getGlobalConversationPreferencesResponse()
      {
        return this.globalConversationPreferencesResponse_;
      }

      public final Client.HangoutInviteFinishResponse getHangoutInviteFinishResponse()
      {
        return this.hangoutInviteFinishResponse_;
      }

      public final Client.HangoutInviteKeepAliveResponse getHangoutInviteKeepAliveResponse()
      {
        return this.hangoutInviteKeepAliveResponse_;
      }

      public final Client.HangoutInviteReplyResponse getHangoutInviteReplyResponse()
      {
        return this.hangoutInviteReplyResponse_;
      }

      public final Client.HangoutInviteResponse getHangoutInviteResponse()
      {
        return this.hangoutInviteResponse_;
      }

      public final Client.HangoutRingFinishResponse getHangoutRingFinishResponse()
      {
        return this.hangoutRingFinishResponse_;
      }

      public final Client.InviteResponse getInviteResponse()
      {
        return this.inviteResponse_;
      }

      public final Client.LeaveConversationResponse getLeaveConversationResponse()
      {
        return this.leaveConversationResponse_;
      }

      public final Client.PingResponse getPingResponse()
      {
        return this.pingResponse_;
      }

      public final Client.PresenceResponse getPresenceResponse()
      {
        return this.presenceResponse_;
      }

      public final Client.ReceiptResponse getReceiptResponse()
      {
        return this.receiptResponse_;
      }

      public final Client.ReplyToInviteResponse getReplyToInviteResponse()
      {
        return this.replyToInviteResponse_;
      }

      public final String getRequestClientId()
      {
        Object localObject = this.requestClientId_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.requestClientId_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final Client.SetAclsResponse getSetAclsResponse()
      {
        return this.setAclsResponse_;
      }

      public final Client.SuggestionsResponse getSuggestionsResponse()
      {
        return this.suggestionsResponse_;
      }

      public final Client.TileEventResponse getTileEventResponse()
      {
        return this.tileEventResponse_;
      }

      public final Client.TypingResponse getTypingResponse()
      {
        return this.typingResponse_;
      }

      public final Client.UserCreationResponse getUserCreationResponse()
      {
        return this.userCreationResponse_;
      }

      public final Client.UserInfoResponse getUserInfoResponse()
      {
        return this.userInfoResponse_;
      }

      public final boolean hasChatMessageResponse()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasConversationJoinResponse()
      {
        if ((0x1000000 & this.bitField0_) == 16777216);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasConversationListResponse()
      {
        if ((0x200 & this.bitField0_) == 512);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasConversationPreferenceResponse()
      {
        if ((0x8000 & this.bitField0_) == 32768);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasConversationRenameResponse()
      {
        if ((0x2000 & this.bitField0_) == 8192);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasConversationResponse()
      {
        if ((0x20 & this.bitField0_) == 32);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasConversationSearchResponse()
      {
        if ((0x100000 & this.bitField0_) == 1048576);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasDeviceRegistrationResponse()
      {
        if ((0x80 & this.bitField0_) == 128);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasError()
      {
        if ((0x800 & this.bitField0_) == 2048);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasEventSearchResponse()
      {
        if ((0x200000 & this.bitField0_) == 2097152);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasEventSteamResponse()
      {
        if ((0x40 & this.bitField0_) == 64);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasGlobalConversationPreferencesResponse()
      {
        if ((0x800000 & this.bitField0_) == 8388608);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasHangoutInviteFinishResponse()
      {
        if ((0x10000000 & this.bitField0_) == 268435456);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasHangoutInviteKeepAliveResponse()
      {
        if ((0x4000000 & this.bitField0_) == 67108864);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasHangoutInviteReplyResponse()
      {
        if ((0x8000000 & this.bitField0_) == 134217728);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasHangoutInviteResponse()
      {
        if ((0x2000000 & this.bitField0_) == 33554432);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasHangoutRingFinishResponse()
      {
        if ((0x20000000 & this.bitField0_) == 536870912);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasInviteResponse()
      {
        if ((0x10000 & this.bitField0_) == 65536);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasLeaveConversationResponse()
      {
        if ((0x1000 & this.bitField0_) == 4096);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasPingResponse()
      {
        if ((0x100 & this.bitField0_) == 256);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasPresenceResponse()
      {
        if ((0x4 & this.bitField0_) == 4);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasReceiptResponse()
      {
        if ((0x10 & this.bitField0_) == 16);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasReplyToInviteResponse()
      {
        if ((0x20000 & this.bitField0_) == 131072);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasRequestClientId()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean hasSetAclsResponse()
      {
        if ((0x40000 & this.bitField0_) == 262144);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasSuggestionsResponse()
      {
        if ((0x400000 & this.bitField0_) == 4194304);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasTileEventResponse()
      {
        if ((0x4000 & this.bitField0_) == 16384);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasTypingResponse()
      {
        if ((0x8 & this.bitField0_) == 8);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasUserCreationResponse()
      {
        if ((0x400 & this.bitField0_) == 1024);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasUserInfoResponse()
      {
        if ((0x80000 & this.bitField0_) == 524288);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Client.BunchServerResponse paramBunchServerResponse)
      {
        if (paramBunchServerResponse == Client.BunchServerResponse.getDefaultInstance());
        Client.ChatMessageResponse localChatMessageResponse;
        label77: Client.PresenceResponse localPresenceResponse;
        label139: Client.TypingResponse localTypingResponse;
        label203: Client.ReceiptResponse localReceiptResponse;
        label268: Client.NewConversationResponse localNewConversationResponse;
        label333: Client.EventStreamResponse localEventStreamResponse;
        label398: Client.DeviceRegistrationResponse localDeviceRegistrationResponse;
        label465: Client.PingResponse localPingResponse;
        label533: Client.ConversationListResponse localConversationListResponse;
        label601: Client.UserCreationResponse localUserCreationResponse;
        label669: Client.Error localError;
        label737: Client.LeaveConversationResponse localLeaveConversationResponse;
        label805: Client.ConversationRenameResponse localConversationRenameResponse;
        label873: Client.TileEventResponse localTileEventResponse;
        label941: Client.ConversationPreferenceResponse localConversationPreferenceResponse;
        label1009: Client.InviteResponse localInviteResponse;
        label1077: Client.ReplyToInviteResponse localReplyToInviteResponse;
        label1145: Client.SetAclsResponse localSetAclsResponse;
        label1213: Client.UserInfoResponse localUserInfoResponse;
        label1281: Client.ConversationSearchResponse localConversationSearchResponse;
        label1349: Client.EventSearchResponse localEventSearchResponse;
        label1417: Client.SuggestionsResponse localSuggestionsResponse;
        label1485: Client.GlobalConversationPreferencesResponse localGlobalConversationPreferencesResponse;
        label1553: Client.ConversationJoinResponse localConversationJoinResponse;
        label1621: Client.HangoutInviteResponse localHangoutInviteResponse;
        label1689: Client.HangoutInviteKeepAliveResponse localHangoutInviteKeepAliveResponse;
        label1757: Client.HangoutInviteReplyResponse localHangoutInviteReplyResponse;
        label1825: Client.HangoutInviteFinishResponse localHangoutInviteFinishResponse;
        label1891: 
        do
        {
          return this;
          if (paramBunchServerResponse.hasRequestClientId())
            setRequestClientId(paramBunchServerResponse.getRequestClientId());
          if (paramBunchServerResponse.hasChatMessageResponse())
          {
            localChatMessageResponse = paramBunchServerResponse.getChatMessageResponse();
            if (((0x2 & this.bitField0_) != 2) || (this.chatMessageResponse_ == Client.ChatMessageResponse.getDefaultInstance()))
              break;
            this.chatMessageResponse_ = Client.ChatMessageResponse.newBuilder(this.chatMessageResponse_).mergeFrom(localChatMessageResponse).buildPartial();
            this.bitField0_ = (0x2 | this.bitField0_);
          }
          if (paramBunchServerResponse.hasPresenceResponse())
          {
            localPresenceResponse = paramBunchServerResponse.getPresenceResponse();
            if (((0x4 & this.bitField0_) != 4) || (this.presenceResponse_ == Client.PresenceResponse.getDefaultInstance()))
              break label1981;
            this.presenceResponse_ = Client.PresenceResponse.newBuilder(this.presenceResponse_).mergeFrom(localPresenceResponse).buildPartial();
            this.bitField0_ = (0x4 | this.bitField0_);
          }
          if (paramBunchServerResponse.hasTypingResponse())
          {
            localTypingResponse = paramBunchServerResponse.getTypingResponse();
            if (((0x8 & this.bitField0_) != 8) || (this.typingResponse_ == Client.TypingResponse.getDefaultInstance()))
              break label1990;
            this.typingResponse_ = Client.TypingResponse.newBuilder(this.typingResponse_).mergeFrom(localTypingResponse).buildPartial();
            this.bitField0_ = (0x8 | this.bitField0_);
          }
          if (paramBunchServerResponse.hasReceiptResponse())
          {
            localReceiptResponse = paramBunchServerResponse.getReceiptResponse();
            if (((0x10 & this.bitField0_) != 16) || (this.receiptResponse_ == Client.ReceiptResponse.getDefaultInstance()))
              break label1999;
            this.receiptResponse_ = Client.ReceiptResponse.newBuilder(this.receiptResponse_).mergeFrom(localReceiptResponse).buildPartial();
            this.bitField0_ = (0x10 | this.bitField0_);
          }
          if (paramBunchServerResponse.hasConversationResponse())
          {
            localNewConversationResponse = paramBunchServerResponse.getConversationResponse();
            if (((0x20 & this.bitField0_) != 32) || (this.conversationResponse_ == Client.NewConversationResponse.getDefaultInstance()))
              break label2008;
            this.conversationResponse_ = Client.NewConversationResponse.newBuilder(this.conversationResponse_).mergeFrom(localNewConversationResponse).buildPartial();
            this.bitField0_ = (0x20 | this.bitField0_);
          }
          if (paramBunchServerResponse.hasEventSteamResponse())
          {
            localEventStreamResponse = paramBunchServerResponse.getEventSteamResponse();
            if (((0x40 & this.bitField0_) != 64) || (this.eventSteamResponse_ == Client.EventStreamResponse.getDefaultInstance()))
              break label2017;
            this.eventSteamResponse_ = Client.EventStreamResponse.newBuilder(this.eventSteamResponse_).mergeFrom(localEventStreamResponse).buildPartial();
            this.bitField0_ = (0x40 | this.bitField0_);
          }
          if (paramBunchServerResponse.hasDeviceRegistrationResponse())
          {
            localDeviceRegistrationResponse = paramBunchServerResponse.getDeviceRegistrationResponse();
            if (((0x80 & this.bitField0_) != 128) || (this.deviceRegistrationResponse_ == Client.DeviceRegistrationResponse.getDefaultInstance()))
              break label2026;
            this.deviceRegistrationResponse_ = Client.DeviceRegistrationResponse.newBuilder(this.deviceRegistrationResponse_).mergeFrom(localDeviceRegistrationResponse).buildPartial();
            this.bitField0_ = (0x80 | this.bitField0_);
          }
          if (paramBunchServerResponse.hasPingResponse())
          {
            localPingResponse = paramBunchServerResponse.getPingResponse();
            if (((0x100 & this.bitField0_) != 256) || (this.pingResponse_ == Client.PingResponse.getDefaultInstance()))
              break label2035;
            this.pingResponse_ = Client.PingResponse.newBuilder(this.pingResponse_).mergeFrom(localPingResponse).buildPartial();
            this.bitField0_ = (0x100 | this.bitField0_);
          }
          if (paramBunchServerResponse.hasConversationListResponse())
          {
            localConversationListResponse = paramBunchServerResponse.getConversationListResponse();
            if (((0x200 & this.bitField0_) != 512) || (this.conversationListResponse_ == Client.ConversationListResponse.getDefaultInstance()))
              break label2044;
            this.conversationListResponse_ = Client.ConversationListResponse.newBuilder(this.conversationListResponse_).mergeFrom(localConversationListResponse).buildPartial();
            this.bitField0_ = (0x200 | this.bitField0_);
          }
          if (paramBunchServerResponse.hasUserCreationResponse())
          {
            localUserCreationResponse = paramBunchServerResponse.getUserCreationResponse();
            if (((0x400 & this.bitField0_) != 1024) || (this.userCreationResponse_ == Client.UserCreationResponse.getDefaultInstance()))
              break label2053;
            this.userCreationResponse_ = Client.UserCreationResponse.newBuilder(this.userCreationResponse_).mergeFrom(localUserCreationResponse).buildPartial();
            this.bitField0_ = (0x400 | this.bitField0_);
          }
          if (paramBunchServerResponse.hasError())
          {
            localError = paramBunchServerResponse.getError();
            if (((0x800 & this.bitField0_) != 2048) || (this.error_ == Client.Error.getDefaultInstance()))
              break label2062;
            this.error_ = Client.Error.newBuilder(this.error_).mergeFrom(localError).buildPartial();
            this.bitField0_ = (0x800 | this.bitField0_);
          }
          if (paramBunchServerResponse.hasLeaveConversationResponse())
          {
            localLeaveConversationResponse = paramBunchServerResponse.getLeaveConversationResponse();
            if (((0x1000 & this.bitField0_) != 4096) || (this.leaveConversationResponse_ == Client.LeaveConversationResponse.getDefaultInstance()))
              break label2071;
            this.leaveConversationResponse_ = Client.LeaveConversationResponse.newBuilder(this.leaveConversationResponse_).mergeFrom(localLeaveConversationResponse).buildPartial();
            this.bitField0_ = (0x1000 | this.bitField0_);
          }
          if (paramBunchServerResponse.hasConversationRenameResponse())
          {
            localConversationRenameResponse = paramBunchServerResponse.getConversationRenameResponse();
            if (((0x2000 & this.bitField0_) != 8192) || (this.conversationRenameResponse_ == Client.ConversationRenameResponse.getDefaultInstance()))
              break label2080;
            this.conversationRenameResponse_ = Client.ConversationRenameResponse.newBuilder(this.conversationRenameResponse_).mergeFrom(localConversationRenameResponse).buildPartial();
            this.bitField0_ = (0x2000 | this.bitField0_);
          }
          if (paramBunchServerResponse.hasTileEventResponse())
          {
            localTileEventResponse = paramBunchServerResponse.getTileEventResponse();
            if (((0x4000 & this.bitField0_) != 16384) || (this.tileEventResponse_ == Client.TileEventResponse.getDefaultInstance()))
              break label2089;
            this.tileEventResponse_ = Client.TileEventResponse.newBuilder(this.tileEventResponse_).mergeFrom(localTileEventResponse).buildPartial();
            this.bitField0_ = (0x4000 | this.bitField0_);
          }
          if (paramBunchServerResponse.hasConversationPreferenceResponse())
          {
            localConversationPreferenceResponse = paramBunchServerResponse.getConversationPreferenceResponse();
            if (((0x8000 & this.bitField0_) != 32768) || (this.conversationPreferenceResponse_ == Client.ConversationPreferenceResponse.getDefaultInstance()))
              break label2098;
            this.conversationPreferenceResponse_ = Client.ConversationPreferenceResponse.newBuilder(this.conversationPreferenceResponse_).mergeFrom(localConversationPreferenceResponse).buildPartial();
            this.bitField0_ = (0x8000 | this.bitField0_);
          }
          if (paramBunchServerResponse.hasInviteResponse())
          {
            localInviteResponse = paramBunchServerResponse.getInviteResponse();
            if (((0x10000 & this.bitField0_) != 65536) || (this.inviteResponse_ == Client.InviteResponse.getDefaultInstance()))
              break label2107;
            this.inviteResponse_ = Client.InviteResponse.newBuilder(this.inviteResponse_).mergeFrom(localInviteResponse).buildPartial();
            this.bitField0_ = (0x10000 | this.bitField0_);
          }
          if (paramBunchServerResponse.hasReplyToInviteResponse())
          {
            localReplyToInviteResponse = paramBunchServerResponse.getReplyToInviteResponse();
            if (((0x20000 & this.bitField0_) != 131072) || (this.replyToInviteResponse_ == Client.ReplyToInviteResponse.getDefaultInstance()))
              break label2116;
            this.replyToInviteResponse_ = Client.ReplyToInviteResponse.newBuilder(this.replyToInviteResponse_).mergeFrom(localReplyToInviteResponse).buildPartial();
            this.bitField0_ = (0x20000 | this.bitField0_);
          }
          if (paramBunchServerResponse.hasSetAclsResponse())
          {
            localSetAclsResponse = paramBunchServerResponse.getSetAclsResponse();
            if (((0x40000 & this.bitField0_) != 262144) || (this.setAclsResponse_ == Client.SetAclsResponse.getDefaultInstance()))
              break label2125;
            this.setAclsResponse_ = Client.SetAclsResponse.newBuilder(this.setAclsResponse_).mergeFrom(localSetAclsResponse).buildPartial();
            this.bitField0_ = (0x40000 | this.bitField0_);
          }
          if (paramBunchServerResponse.hasUserInfoResponse())
          {
            localUserInfoResponse = paramBunchServerResponse.getUserInfoResponse();
            if (((0x80000 & this.bitField0_) != 524288) || (this.userInfoResponse_ == Client.UserInfoResponse.getDefaultInstance()))
              break label2134;
            this.userInfoResponse_ = Client.UserInfoResponse.newBuilder(this.userInfoResponse_).mergeFrom(localUserInfoResponse).buildPartial();
            this.bitField0_ = (0x80000 | this.bitField0_);
          }
          if (paramBunchServerResponse.hasConversationSearchResponse())
          {
            localConversationSearchResponse = paramBunchServerResponse.getConversationSearchResponse();
            if (((0x100000 & this.bitField0_) != 1048576) || (this.conversationSearchResponse_ == Client.ConversationSearchResponse.getDefaultInstance()))
              break label2143;
            this.conversationSearchResponse_ = Client.ConversationSearchResponse.newBuilder(this.conversationSearchResponse_).mergeFrom(localConversationSearchResponse).buildPartial();
            this.bitField0_ = (0x100000 | this.bitField0_);
          }
          if (paramBunchServerResponse.hasEventSearchResponse())
          {
            localEventSearchResponse = paramBunchServerResponse.getEventSearchResponse();
            if (((0x200000 & this.bitField0_) != 2097152) || (this.eventSearchResponse_ == Client.EventSearchResponse.getDefaultInstance()))
              break label2152;
            this.eventSearchResponse_ = Client.EventSearchResponse.newBuilder(this.eventSearchResponse_).mergeFrom(localEventSearchResponse).buildPartial();
            this.bitField0_ = (0x200000 | this.bitField0_);
          }
          if (paramBunchServerResponse.hasSuggestionsResponse())
          {
            localSuggestionsResponse = paramBunchServerResponse.getSuggestionsResponse();
            if (((0x400000 & this.bitField0_) != 4194304) || (this.suggestionsResponse_ == Client.SuggestionsResponse.getDefaultInstance()))
              break label2161;
            this.suggestionsResponse_ = Client.SuggestionsResponse.newBuilder(this.suggestionsResponse_).mergeFrom(localSuggestionsResponse).buildPartial();
            this.bitField0_ = (0x400000 | this.bitField0_);
          }
          if (paramBunchServerResponse.hasGlobalConversationPreferencesResponse())
          {
            localGlobalConversationPreferencesResponse = paramBunchServerResponse.getGlobalConversationPreferencesResponse();
            if (((0x800000 & this.bitField0_) != 8388608) || (this.globalConversationPreferencesResponse_ == Client.GlobalConversationPreferencesResponse.getDefaultInstance()))
              break label2170;
            this.globalConversationPreferencesResponse_ = Client.GlobalConversationPreferencesResponse.newBuilder(this.globalConversationPreferencesResponse_).mergeFrom(localGlobalConversationPreferencesResponse).buildPartial();
            this.bitField0_ = (0x800000 | this.bitField0_);
          }
          if (paramBunchServerResponse.hasConversationJoinResponse())
          {
            localConversationJoinResponse = paramBunchServerResponse.getConversationJoinResponse();
            if (((0x1000000 & this.bitField0_) != 16777216) || (this.conversationJoinResponse_ == Client.ConversationJoinResponse.getDefaultInstance()))
              break label2179;
            this.conversationJoinResponse_ = Client.ConversationJoinResponse.newBuilder(this.conversationJoinResponse_).mergeFrom(localConversationJoinResponse).buildPartial();
            this.bitField0_ = (0x1000000 | this.bitField0_);
          }
          if (paramBunchServerResponse.hasHangoutInviteResponse())
          {
            localHangoutInviteResponse = paramBunchServerResponse.getHangoutInviteResponse();
            if (((0x2000000 & this.bitField0_) != 33554432) || (this.hangoutInviteResponse_ == Client.HangoutInviteResponse.getDefaultInstance()))
              break label2188;
            this.hangoutInviteResponse_ = Client.HangoutInviteResponse.newBuilder(this.hangoutInviteResponse_).mergeFrom(localHangoutInviteResponse).buildPartial();
            this.bitField0_ = (0x2000000 | this.bitField0_);
          }
          if (paramBunchServerResponse.hasHangoutInviteKeepAliveResponse())
          {
            localHangoutInviteKeepAliveResponse = paramBunchServerResponse.getHangoutInviteKeepAliveResponse();
            if (((0x4000000 & this.bitField0_) != 67108864) || (this.hangoutInviteKeepAliveResponse_ == Client.HangoutInviteKeepAliveResponse.getDefaultInstance()))
              break label2197;
            this.hangoutInviteKeepAliveResponse_ = Client.HangoutInviteKeepAliveResponse.newBuilder(this.hangoutInviteKeepAliveResponse_).mergeFrom(localHangoutInviteKeepAliveResponse).buildPartial();
            this.bitField0_ = (0x4000000 | this.bitField0_);
          }
          if (paramBunchServerResponse.hasHangoutInviteReplyResponse())
          {
            localHangoutInviteReplyResponse = paramBunchServerResponse.getHangoutInviteReplyResponse();
            if (((0x8000000 & this.bitField0_) != 134217728) || (this.hangoutInviteReplyResponse_ == Client.HangoutInviteReplyResponse.getDefaultInstance()))
              break label2206;
            this.hangoutInviteReplyResponse_ = Client.HangoutInviteReplyResponse.newBuilder(this.hangoutInviteReplyResponse_).mergeFrom(localHangoutInviteReplyResponse).buildPartial();
            this.bitField0_ = (0x8000000 | this.bitField0_);
          }
          if (paramBunchServerResponse.hasHangoutInviteFinishResponse())
          {
            localHangoutInviteFinishResponse = paramBunchServerResponse.getHangoutInviteFinishResponse();
            if (((0x10000000 & this.bitField0_) != 268435456) || (this.hangoutInviteFinishResponse_ == Client.HangoutInviteFinishResponse.getDefaultInstance()))
              break label2215;
            this.hangoutInviteFinishResponse_ = Client.HangoutInviteFinishResponse.newBuilder(this.hangoutInviteFinishResponse_).mergeFrom(localHangoutInviteFinishResponse).buildPartial();
            this.bitField0_ = (0x10000000 | this.bitField0_);
          }
        }
        while (!paramBunchServerResponse.hasHangoutRingFinishResponse());
        Client.HangoutRingFinishResponse localHangoutRingFinishResponse = paramBunchServerResponse.getHangoutRingFinishResponse();
        if (((0x20000000 & this.bitField0_) == 536870912) && (this.hangoutRingFinishResponse_ != Client.HangoutRingFinishResponse.getDefaultInstance()));
        for (this.hangoutRingFinishResponse_ = Client.HangoutRingFinishResponse.newBuilder(this.hangoutRingFinishResponse_).mergeFrom(localHangoutRingFinishResponse).buildPartial(); ; this.hangoutRingFinishResponse_ = localHangoutRingFinishResponse)
        {
          this.bitField0_ = (0x20000000 | this.bitField0_);
          break;
          this.chatMessageResponse_ = localChatMessageResponse;
          break label77;
          label1981: this.presenceResponse_ = localPresenceResponse;
          break label139;
          label1990: this.typingResponse_ = localTypingResponse;
          break label203;
          label1999: this.receiptResponse_ = localReceiptResponse;
          break label268;
          label2008: this.conversationResponse_ = localNewConversationResponse;
          break label333;
          label2017: this.eventSteamResponse_ = localEventStreamResponse;
          break label398;
          label2026: this.deviceRegistrationResponse_ = localDeviceRegistrationResponse;
          break label465;
          label2035: this.pingResponse_ = localPingResponse;
          break label533;
          label2044: this.conversationListResponse_ = localConversationListResponse;
          break label601;
          label2053: this.userCreationResponse_ = localUserCreationResponse;
          break label669;
          label2062: this.error_ = localError;
          break label737;
          label2071: this.leaveConversationResponse_ = localLeaveConversationResponse;
          break label805;
          label2080: this.conversationRenameResponse_ = localConversationRenameResponse;
          break label873;
          label2089: this.tileEventResponse_ = localTileEventResponse;
          break label941;
          label2098: this.conversationPreferenceResponse_ = localConversationPreferenceResponse;
          break label1009;
          label2107: this.inviteResponse_ = localInviteResponse;
          break label1077;
          label2116: this.replyToInviteResponse_ = localReplyToInviteResponse;
          break label1145;
          label2125: this.setAclsResponse_ = localSetAclsResponse;
          break label1213;
          label2134: this.userInfoResponse_ = localUserInfoResponse;
          break label1281;
          label2143: this.conversationSearchResponse_ = localConversationSearchResponse;
          break label1349;
          label2152: this.eventSearchResponse_ = localEventSearchResponse;
          break label1417;
          label2161: this.suggestionsResponse_ = localSuggestionsResponse;
          break label1485;
          label2170: this.globalConversationPreferencesResponse_ = localGlobalConversationPreferencesResponse;
          break label1553;
          label2179: this.conversationJoinResponse_ = localConversationJoinResponse;
          break label1621;
          label2188: this.hangoutInviteResponse_ = localHangoutInviteResponse;
          break label1689;
          label2197: this.hangoutInviteKeepAliveResponse_ = localHangoutInviteKeepAliveResponse;
          break label1757;
          label2206: this.hangoutInviteReplyResponse_ = localHangoutInviteReplyResponse;
          break label1825;
          label2215: this.hangoutInviteFinishResponse_ = localHangoutInviteFinishResponse;
          break label1891;
        }
      }

      public final Builder setChatMessageResponse(Client.ChatMessageResponse.Builder paramBuilder)
      {
        this.chatMessageResponse_ = paramBuilder.build();
        this.bitField0_ = (0x2 | this.bitField0_);
        return this;
      }

      public final Builder setChatMessageResponse(Client.ChatMessageResponse paramChatMessageResponse)
      {
        if (paramChatMessageResponse == null)
          throw new NullPointerException();
        this.chatMessageResponse_ = paramChatMessageResponse;
        this.bitField0_ = (0x2 | this.bitField0_);
        return this;
      }

      public final Builder setConversationJoinResponse(Client.ConversationJoinResponse.Builder paramBuilder)
      {
        this.conversationJoinResponse_ = paramBuilder.build();
        this.bitField0_ = (0x1000000 | this.bitField0_);
        return this;
      }

      public final Builder setConversationJoinResponse(Client.ConversationJoinResponse paramConversationJoinResponse)
      {
        if (paramConversationJoinResponse == null)
          throw new NullPointerException();
        this.conversationJoinResponse_ = paramConversationJoinResponse;
        this.bitField0_ = (0x1000000 | this.bitField0_);
        return this;
      }

      public final Builder setConversationListResponse(Client.ConversationListResponse.Builder paramBuilder)
      {
        this.conversationListResponse_ = paramBuilder.build();
        this.bitField0_ = (0x200 | this.bitField0_);
        return this;
      }

      public final Builder setConversationListResponse(Client.ConversationListResponse paramConversationListResponse)
      {
        if (paramConversationListResponse == null)
          throw new NullPointerException();
        this.conversationListResponse_ = paramConversationListResponse;
        this.bitField0_ = (0x200 | this.bitField0_);
        return this;
      }

      public final Builder setConversationPreferenceResponse(Client.ConversationPreferenceResponse.Builder paramBuilder)
      {
        this.conversationPreferenceResponse_ = paramBuilder.build();
        this.bitField0_ = (0x8000 | this.bitField0_);
        return this;
      }

      public final Builder setConversationPreferenceResponse(Client.ConversationPreferenceResponse paramConversationPreferenceResponse)
      {
        if (paramConversationPreferenceResponse == null)
          throw new NullPointerException();
        this.conversationPreferenceResponse_ = paramConversationPreferenceResponse;
        this.bitField0_ = (0x8000 | this.bitField0_);
        return this;
      }

      public final Builder setConversationRenameResponse(Client.ConversationRenameResponse.Builder paramBuilder)
      {
        this.conversationRenameResponse_ = paramBuilder.build();
        this.bitField0_ = (0x2000 | this.bitField0_);
        return this;
      }

      public final Builder setConversationRenameResponse(Client.ConversationRenameResponse paramConversationRenameResponse)
      {
        if (paramConversationRenameResponse == null)
          throw new NullPointerException();
        this.conversationRenameResponse_ = paramConversationRenameResponse;
        this.bitField0_ = (0x2000 | this.bitField0_);
        return this;
      }

      public final Builder setConversationResponse(Client.NewConversationResponse.Builder paramBuilder)
      {
        this.conversationResponse_ = paramBuilder.build();
        this.bitField0_ = (0x20 | this.bitField0_);
        return this;
      }

      public final Builder setConversationResponse(Client.NewConversationResponse paramNewConversationResponse)
      {
        if (paramNewConversationResponse == null)
          throw new NullPointerException();
        this.conversationResponse_ = paramNewConversationResponse;
        this.bitField0_ = (0x20 | this.bitField0_);
        return this;
      }

      public final Builder setConversationSearchResponse(Client.ConversationSearchResponse.Builder paramBuilder)
      {
        this.conversationSearchResponse_ = paramBuilder.build();
        this.bitField0_ = (0x100000 | this.bitField0_);
        return this;
      }

      public final Builder setConversationSearchResponse(Client.ConversationSearchResponse paramConversationSearchResponse)
      {
        if (paramConversationSearchResponse == null)
          throw new NullPointerException();
        this.conversationSearchResponse_ = paramConversationSearchResponse;
        this.bitField0_ = (0x100000 | this.bitField0_);
        return this;
      }

      public final Builder setDeviceRegistrationResponse(Client.DeviceRegistrationResponse.Builder paramBuilder)
      {
        this.deviceRegistrationResponse_ = paramBuilder.build();
        this.bitField0_ = (0x80 | this.bitField0_);
        return this;
      }

      public final Builder setDeviceRegistrationResponse(Client.DeviceRegistrationResponse paramDeviceRegistrationResponse)
      {
        if (paramDeviceRegistrationResponse == null)
          throw new NullPointerException();
        this.deviceRegistrationResponse_ = paramDeviceRegistrationResponse;
        this.bitField0_ = (0x80 | this.bitField0_);
        return this;
      }

      public final Builder setError(Client.Error.Builder paramBuilder)
      {
        this.error_ = paramBuilder.build();
        this.bitField0_ = (0x800 | this.bitField0_);
        return this;
      }

      public final Builder setError(Client.Error paramError)
      {
        if (paramError == null)
          throw new NullPointerException();
        this.error_ = paramError;
        this.bitField0_ = (0x800 | this.bitField0_);
        return this;
      }

      public final Builder setEventSearchResponse(Client.EventSearchResponse.Builder paramBuilder)
      {
        this.eventSearchResponse_ = paramBuilder.build();
        this.bitField0_ = (0x200000 | this.bitField0_);
        return this;
      }

      public final Builder setEventSearchResponse(Client.EventSearchResponse paramEventSearchResponse)
      {
        if (paramEventSearchResponse == null)
          throw new NullPointerException();
        this.eventSearchResponse_ = paramEventSearchResponse;
        this.bitField0_ = (0x200000 | this.bitField0_);
        return this;
      }

      public final Builder setEventSteamResponse(Client.EventStreamResponse.Builder paramBuilder)
      {
        this.eventSteamResponse_ = paramBuilder.build();
        this.bitField0_ = (0x40 | this.bitField0_);
        return this;
      }

      public final Builder setEventSteamResponse(Client.EventStreamResponse paramEventStreamResponse)
      {
        if (paramEventStreamResponse == null)
          throw new NullPointerException();
        this.eventSteamResponse_ = paramEventStreamResponse;
        this.bitField0_ = (0x40 | this.bitField0_);
        return this;
      }

      public final Builder setGlobalConversationPreferencesResponse(Client.GlobalConversationPreferencesResponse.Builder paramBuilder)
      {
        this.globalConversationPreferencesResponse_ = paramBuilder.build();
        this.bitField0_ = (0x800000 | this.bitField0_);
        return this;
      }

      public final Builder setGlobalConversationPreferencesResponse(Client.GlobalConversationPreferencesResponse paramGlobalConversationPreferencesResponse)
      {
        if (paramGlobalConversationPreferencesResponse == null)
          throw new NullPointerException();
        this.globalConversationPreferencesResponse_ = paramGlobalConversationPreferencesResponse;
        this.bitField0_ = (0x800000 | this.bitField0_);
        return this;
      }

      public final Builder setHangoutInviteFinishResponse(Client.HangoutInviteFinishResponse.Builder paramBuilder)
      {
        this.hangoutInviteFinishResponse_ = paramBuilder.build();
        this.bitField0_ = (0x10000000 | this.bitField0_);
        return this;
      }

      public final Builder setHangoutInviteFinishResponse(Client.HangoutInviteFinishResponse paramHangoutInviteFinishResponse)
      {
        if (paramHangoutInviteFinishResponse == null)
          throw new NullPointerException();
        this.hangoutInviteFinishResponse_ = paramHangoutInviteFinishResponse;
        this.bitField0_ = (0x10000000 | this.bitField0_);
        return this;
      }

      public final Builder setHangoutInviteKeepAliveResponse(Client.HangoutInviteKeepAliveResponse.Builder paramBuilder)
      {
        this.hangoutInviteKeepAliveResponse_ = paramBuilder.build();
        this.bitField0_ = (0x4000000 | this.bitField0_);
        return this;
      }

      public final Builder setHangoutInviteKeepAliveResponse(Client.HangoutInviteKeepAliveResponse paramHangoutInviteKeepAliveResponse)
      {
        if (paramHangoutInviteKeepAliveResponse == null)
          throw new NullPointerException();
        this.hangoutInviteKeepAliveResponse_ = paramHangoutInviteKeepAliveResponse;
        this.bitField0_ = (0x4000000 | this.bitField0_);
        return this;
      }

      public final Builder setHangoutInviteReplyResponse(Client.HangoutInviteReplyResponse.Builder paramBuilder)
      {
        this.hangoutInviteReplyResponse_ = paramBuilder.build();
        this.bitField0_ = (0x8000000 | this.bitField0_);
        return this;
      }

      public final Builder setHangoutInviteReplyResponse(Client.HangoutInviteReplyResponse paramHangoutInviteReplyResponse)
      {
        if (paramHangoutInviteReplyResponse == null)
          throw new NullPointerException();
        this.hangoutInviteReplyResponse_ = paramHangoutInviteReplyResponse;
        this.bitField0_ = (0x8000000 | this.bitField0_);
        return this;
      }

      public final Builder setHangoutInviteResponse(Client.HangoutInviteResponse.Builder paramBuilder)
      {
        this.hangoutInviteResponse_ = paramBuilder.build();
        this.bitField0_ = (0x2000000 | this.bitField0_);
        return this;
      }

      public final Builder setHangoutInviteResponse(Client.HangoutInviteResponse paramHangoutInviteResponse)
      {
        if (paramHangoutInviteResponse == null)
          throw new NullPointerException();
        this.hangoutInviteResponse_ = paramHangoutInviteResponse;
        this.bitField0_ = (0x2000000 | this.bitField0_);
        return this;
      }

      public final Builder setHangoutRingFinishResponse(Client.HangoutRingFinishResponse.Builder paramBuilder)
      {
        this.hangoutRingFinishResponse_ = paramBuilder.build();
        this.bitField0_ = (0x20000000 | this.bitField0_);
        return this;
      }

      public final Builder setHangoutRingFinishResponse(Client.HangoutRingFinishResponse paramHangoutRingFinishResponse)
      {
        if (paramHangoutRingFinishResponse == null)
          throw new NullPointerException();
        this.hangoutRingFinishResponse_ = paramHangoutRingFinishResponse;
        this.bitField0_ = (0x20000000 | this.bitField0_);
        return this;
      }

      public final Builder setInviteResponse(Client.InviteResponse.Builder paramBuilder)
      {
        this.inviteResponse_ = paramBuilder.build();
        this.bitField0_ = (0x10000 | this.bitField0_);
        return this;
      }

      public final Builder setInviteResponse(Client.InviteResponse paramInviteResponse)
      {
        if (paramInviteResponse == null)
          throw new NullPointerException();
        this.inviteResponse_ = paramInviteResponse;
        this.bitField0_ = (0x10000 | this.bitField0_);
        return this;
      }

      public final Builder setLeaveConversationResponse(Client.LeaveConversationResponse.Builder paramBuilder)
      {
        this.leaveConversationResponse_ = paramBuilder.build();
        this.bitField0_ = (0x1000 | this.bitField0_);
        return this;
      }

      public final Builder setLeaveConversationResponse(Client.LeaveConversationResponse paramLeaveConversationResponse)
      {
        if (paramLeaveConversationResponse == null)
          throw new NullPointerException();
        this.leaveConversationResponse_ = paramLeaveConversationResponse;
        this.bitField0_ = (0x1000 | this.bitField0_);
        return this;
      }

      public final Builder setPingResponse(Client.PingResponse.Builder paramBuilder)
      {
        this.pingResponse_ = paramBuilder.build();
        this.bitField0_ = (0x100 | this.bitField0_);
        return this;
      }

      public final Builder setPingResponse(Client.PingResponse paramPingResponse)
      {
        if (paramPingResponse == null)
          throw new NullPointerException();
        this.pingResponse_ = paramPingResponse;
        this.bitField0_ = (0x100 | this.bitField0_);
        return this;
      }

      public final Builder setPresenceResponse(Client.PresenceResponse.Builder paramBuilder)
      {
        this.presenceResponse_ = paramBuilder.build();
        this.bitField0_ = (0x4 | this.bitField0_);
        return this;
      }

      public final Builder setPresenceResponse(Client.PresenceResponse paramPresenceResponse)
      {
        if (paramPresenceResponse == null)
          throw new NullPointerException();
        this.presenceResponse_ = paramPresenceResponse;
        this.bitField0_ = (0x4 | this.bitField0_);
        return this;
      }

      public final Builder setReceiptResponse(Client.ReceiptResponse.Builder paramBuilder)
      {
        this.receiptResponse_ = paramBuilder.build();
        this.bitField0_ = (0x10 | this.bitField0_);
        return this;
      }

      public final Builder setReceiptResponse(Client.ReceiptResponse paramReceiptResponse)
      {
        if (paramReceiptResponse == null)
          throw new NullPointerException();
        this.receiptResponse_ = paramReceiptResponse;
        this.bitField0_ = (0x10 | this.bitField0_);
        return this;
      }

      public final Builder setReplyToInviteResponse(Client.ReplyToInviteResponse.Builder paramBuilder)
      {
        this.replyToInviteResponse_ = paramBuilder.build();
        this.bitField0_ = (0x20000 | this.bitField0_);
        return this;
      }

      public final Builder setReplyToInviteResponse(Client.ReplyToInviteResponse paramReplyToInviteResponse)
      {
        if (paramReplyToInviteResponse == null)
          throw new NullPointerException();
        this.replyToInviteResponse_ = paramReplyToInviteResponse;
        this.bitField0_ = (0x20000 | this.bitField0_);
        return this;
      }

      public final Builder setRequestClientId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x1 | this.bitField0_);
        this.requestClientId_ = paramString;
        return this;
      }

      public final Builder setSetAclsResponse(Client.SetAclsResponse.Builder paramBuilder)
      {
        this.setAclsResponse_ = paramBuilder.build();
        this.bitField0_ = (0x40000 | this.bitField0_);
        return this;
      }

      public final Builder setSetAclsResponse(Client.SetAclsResponse paramSetAclsResponse)
      {
        if (paramSetAclsResponse == null)
          throw new NullPointerException();
        this.setAclsResponse_ = paramSetAclsResponse;
        this.bitField0_ = (0x40000 | this.bitField0_);
        return this;
      }

      public final Builder setSuggestionsResponse(Client.SuggestionsResponse.Builder paramBuilder)
      {
        this.suggestionsResponse_ = paramBuilder.build();
        this.bitField0_ = (0x400000 | this.bitField0_);
        return this;
      }

      public final Builder setSuggestionsResponse(Client.SuggestionsResponse paramSuggestionsResponse)
      {
        if (paramSuggestionsResponse == null)
          throw new NullPointerException();
        this.suggestionsResponse_ = paramSuggestionsResponse;
        this.bitField0_ = (0x400000 | this.bitField0_);
        return this;
      }

      public final Builder setTileEventResponse(Client.TileEventResponse.Builder paramBuilder)
      {
        this.tileEventResponse_ = paramBuilder.build();
        this.bitField0_ = (0x4000 | this.bitField0_);
        return this;
      }

      public final Builder setTileEventResponse(Client.TileEventResponse paramTileEventResponse)
      {
        if (paramTileEventResponse == null)
          throw new NullPointerException();
        this.tileEventResponse_ = paramTileEventResponse;
        this.bitField0_ = (0x4000 | this.bitField0_);
        return this;
      }

      public final Builder setTypingResponse(Client.TypingResponse.Builder paramBuilder)
      {
        this.typingResponse_ = paramBuilder.build();
        this.bitField0_ = (0x8 | this.bitField0_);
        return this;
      }

      public final Builder setTypingResponse(Client.TypingResponse paramTypingResponse)
      {
        if (paramTypingResponse == null)
          throw new NullPointerException();
        this.typingResponse_ = paramTypingResponse;
        this.bitField0_ = (0x8 | this.bitField0_);
        return this;
      }

      public final Builder setUserCreationResponse(Client.UserCreationResponse.Builder paramBuilder)
      {
        this.userCreationResponse_ = paramBuilder.build();
        this.bitField0_ = (0x400 | this.bitField0_);
        return this;
      }

      public final Builder setUserCreationResponse(Client.UserCreationResponse paramUserCreationResponse)
      {
        if (paramUserCreationResponse == null)
          throw new NullPointerException();
        this.userCreationResponse_ = paramUserCreationResponse;
        this.bitField0_ = (0x400 | this.bitField0_);
        return this;
      }

      public final Builder setUserInfoResponse(Client.UserInfoResponse.Builder paramBuilder)
      {
        this.userInfoResponse_ = paramBuilder.build();
        this.bitField0_ = (0x80000 | this.bitField0_);
        return this;
      }

      public final Builder setUserInfoResponse(Client.UserInfoResponse paramUserInfoResponse)
      {
        if (paramUserInfoResponse == null)
          throw new NullPointerException();
        this.userInfoResponse_ = paramUserInfoResponse;
        this.bitField0_ = (0x80000 | this.bitField0_);
        return this;
      }
    }
  }

  public static abstract interface BunchServerResponseOrBuilder extends MessageLiteOrBuilder
  {
    public abstract Client.ChatMessageResponse getChatMessageResponse();

    public abstract Client.ConversationJoinResponse getConversationJoinResponse();

    public abstract Client.ConversationListResponse getConversationListResponse();

    public abstract Client.ConversationPreferenceResponse getConversationPreferenceResponse();

    public abstract Client.ConversationRenameResponse getConversationRenameResponse();

    public abstract Client.NewConversationResponse getConversationResponse();

    public abstract Client.ConversationSearchResponse getConversationSearchResponse();

    public abstract Client.DeviceRegistrationResponse getDeviceRegistrationResponse();

    public abstract Client.Error getError();

    public abstract Client.EventSearchResponse getEventSearchResponse();

    public abstract Client.EventStreamResponse getEventSteamResponse();

    public abstract Client.GlobalConversationPreferencesResponse getGlobalConversationPreferencesResponse();

    public abstract Client.HangoutInviteFinishResponse getHangoutInviteFinishResponse();

    public abstract Client.HangoutInviteKeepAliveResponse getHangoutInviteKeepAliveResponse();

    public abstract Client.HangoutInviteReplyResponse getHangoutInviteReplyResponse();

    public abstract Client.HangoutInviteResponse getHangoutInviteResponse();

    public abstract Client.HangoutRingFinishResponse getHangoutRingFinishResponse();

    public abstract Client.InviteResponse getInviteResponse();

    public abstract Client.LeaveConversationResponse getLeaveConversationResponse();

    public abstract Client.PingResponse getPingResponse();

    public abstract Client.PresenceResponse getPresenceResponse();

    public abstract Client.ReceiptResponse getReceiptResponse();

    public abstract Client.ReplyToInviteResponse getReplyToInviteResponse();

    public abstract String getRequestClientId();

    public abstract Client.SetAclsResponse getSetAclsResponse();

    public abstract Client.SuggestionsResponse getSuggestionsResponse();

    public abstract Client.TileEventResponse getTileEventResponse();

    public abstract Client.TypingResponse getTypingResponse();

    public abstract Client.UserCreationResponse getUserCreationResponse();

    public abstract Client.UserInfoResponse getUserInfoResponse();

    public abstract boolean hasChatMessageResponse();

    public abstract boolean hasConversationJoinResponse();

    public abstract boolean hasConversationListResponse();

    public abstract boolean hasConversationPreferenceResponse();

    public abstract boolean hasConversationRenameResponse();

    public abstract boolean hasConversationResponse();

    public abstract boolean hasConversationSearchResponse();

    public abstract boolean hasDeviceRegistrationResponse();

    public abstract boolean hasError();

    public abstract boolean hasEventSearchResponse();

    public abstract boolean hasEventSteamResponse();

    public abstract boolean hasGlobalConversationPreferencesResponse();

    public abstract boolean hasHangoutInviteFinishResponse();

    public abstract boolean hasHangoutInviteKeepAliveResponse();

    public abstract boolean hasHangoutInviteReplyResponse();

    public abstract boolean hasHangoutInviteResponse();

    public abstract boolean hasHangoutRingFinishResponse();

    public abstract boolean hasInviteResponse();

    public abstract boolean hasLeaveConversationResponse();

    public abstract boolean hasPingResponse();

    public abstract boolean hasPresenceResponse();

    public abstract boolean hasReceiptResponse();

    public abstract boolean hasReplyToInviteResponse();

    public abstract boolean hasRequestClientId();

    public abstract boolean hasSetAclsResponse();

    public abstract boolean hasSuggestionsResponse();

    public abstract boolean hasTileEventResponse();

    public abstract boolean hasTypingResponse();

    public abstract boolean hasUserCreationResponse();

    public abstract boolean hasUserInfoResponse();
  }

  public static final class BunchServerStateUpdate extends GeneratedMessageLite
    implements Client.BunchServerStateUpdateOrBuilder
  {
    private static final BunchServerStateUpdate defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private Client.ChatMessage chatMessage_;
    private EventMetadata eventMetadata_;
    private Client.GroupConversationRename groupConversationRename_;
    private Client.InvalidateLocalCache invalidateLocalCache_;
    private Client.MembershipChange membershipChange_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private Client.Migration migration_;
    private Client.NewConversation newConversation_;
    private Client.Presence presence_;
    private Client.Receipt receipt_;
    private Client.TileEvent tileEvent_;
    private Client.Typing typing_;

    static
    {
      BunchServerStateUpdate localBunchServerStateUpdate = new BunchServerStateUpdate();
      defaultInstance = localBunchServerStateUpdate;
      localBunchServerStateUpdate.chatMessage_ = Client.ChatMessage.getDefaultInstance();
      localBunchServerStateUpdate.presence_ = Client.Presence.getDefaultInstance();
      localBunchServerStateUpdate.typing_ = Client.Typing.getDefaultInstance();
      localBunchServerStateUpdate.receipt_ = Client.Receipt.getDefaultInstance();
      localBunchServerStateUpdate.membershipChange_ = Client.MembershipChange.getDefaultInstance();
      localBunchServerStateUpdate.groupConversationRename_ = Client.GroupConversationRename.getDefaultInstance();
      localBunchServerStateUpdate.tileEvent_ = Client.TileEvent.getDefaultInstance();
      localBunchServerStateUpdate.migration_ = Client.Migration.getDefaultInstance();
      localBunchServerStateUpdate.invalidateLocalCache_ = Client.InvalidateLocalCache.getDefaultInstance();
      localBunchServerStateUpdate.newConversation_ = Client.NewConversation.getDefaultInstance();
      localBunchServerStateUpdate.eventMetadata_ = EventMetadata.getDefaultInstance();
    }

    private BunchServerStateUpdate()
    {
    }

    private BunchServerStateUpdate(Builder paramBuilder)
    {
      super();
    }

    public static BunchServerStateUpdate getDefaultInstance()
    {
      return defaultInstance;
    }

    public static Builder newBuilder()
    {
      return Builder.access$78900();
    }

    public final Client.ChatMessage getChatMessage()
    {
      return this.chatMessage_;
    }

    public final BunchServerStateUpdate getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final EventMetadata getEventMetadata()
    {
      return this.eventMetadata_;
    }

    public final Client.GroupConversationRename getGroupConversationRename()
    {
      return this.groupConversationRename_;
    }

    public final Client.InvalidateLocalCache getInvalidateLocalCache()
    {
      return this.invalidateLocalCache_;
    }

    public final Client.MembershipChange getMembershipChange()
    {
      return this.membershipChange_;
    }

    public final Client.Migration getMigration()
    {
      return this.migration_;
    }

    public final Client.NewConversation getNewConversation()
    {
      return this.newConversation_;
    }

    public final Client.Presence getPresence()
    {
      return this.presence_;
    }

    public final Client.Receipt getReceipt()
    {
      return this.receipt_;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeMessageSize(1, this.chatMessage_);
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeMessageSize(2, this.presence_);
        if ((0x4 & this.bitField0_) == 4)
          k += CodedOutputStream.computeMessageSize(3, this.typing_);
        if ((0x8 & this.bitField0_) == 8)
          k += CodedOutputStream.computeMessageSize(4, this.receipt_);
        if ((0x10 & this.bitField0_) == 16)
          k += CodedOutputStream.computeMessageSize(5, this.membershipChange_);
        if ((0x20 & this.bitField0_) == 32)
          k += CodedOutputStream.computeMessageSize(6, this.groupConversationRename_);
        if ((0x40 & this.bitField0_) == 64)
          k += CodedOutputStream.computeMessageSize(7, this.tileEvent_);
        if ((0x80 & this.bitField0_) == 128)
          k += CodedOutputStream.computeMessageSize(8, this.migration_);
        if ((0x100 & this.bitField0_) == 256)
          k += CodedOutputStream.computeMessageSize(9, this.invalidateLocalCache_);
        if ((0x200 & this.bitField0_) == 512)
          k += CodedOutputStream.computeMessageSize(10, this.newConversation_);
        if ((0x400 & this.bitField0_) == 1024)
          k += CodedOutputStream.computeMessageSize(11, this.eventMetadata_);
        this.memoizedSerializedSize = k;
      }
    }

    public final Client.TileEvent getTileEvent()
    {
      return this.tileEvent_;
    }

    public final Client.Typing getTyping()
    {
      return this.typing_;
    }

    public final boolean hasChatMessage()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean hasEventMetadata()
    {
      if ((0x400 & this.bitField0_) == 1024);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasGroupConversationRename()
    {
      if ((0x20 & this.bitField0_) == 32);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasInvalidateLocalCache()
    {
      if ((0x100 & this.bitField0_) == 256);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasMembershipChange()
    {
      if ((0x10 & this.bitField0_) == 16);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasMigration()
    {
      if ((0x80 & this.bitField0_) == 128);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasNewConversation()
    {
      if ((0x200 & this.bitField0_) == 512);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasPresence()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasReceipt()
    {
      if ((0x8 & this.bitField0_) == 8);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasTileEvent()
    {
      if ((0x40 & this.bitField0_) == 64);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasTyping()
    {
      if ((0x4 & this.bitField0_) == 4);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeMessage(1, this.chatMessage_);
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeMessage(2, this.presence_);
      if ((0x4 & this.bitField0_) == 4)
        paramCodedOutputStream.writeMessage(3, this.typing_);
      if ((0x8 & this.bitField0_) == 8)
        paramCodedOutputStream.writeMessage(4, this.receipt_);
      if ((0x10 & this.bitField0_) == 16)
        paramCodedOutputStream.writeMessage(5, this.membershipChange_);
      if ((0x20 & this.bitField0_) == 32)
        paramCodedOutputStream.writeMessage(6, this.groupConversationRename_);
      if ((0x40 & this.bitField0_) == 64)
        paramCodedOutputStream.writeMessage(7, this.tileEvent_);
      if ((0x80 & this.bitField0_) == 128)
        paramCodedOutputStream.writeMessage(8, this.migration_);
      if ((0x100 & this.bitField0_) == 256)
        paramCodedOutputStream.writeMessage(9, this.invalidateLocalCache_);
      if ((0x200 & this.bitField0_) == 512)
        paramCodedOutputStream.writeMessage(10, this.newConversation_);
      if ((0x400 & this.bitField0_) == 1024)
        paramCodedOutputStream.writeMessage(11, this.eventMetadata_);
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Client.BunchServerStateUpdate, Builder>
      implements Client.BunchServerStateUpdateOrBuilder
    {
      private int bitField0_;
      private Client.ChatMessage chatMessage_ = Client.ChatMessage.getDefaultInstance();
      private Client.BunchServerStateUpdate.EventMetadata eventMetadata_ = Client.BunchServerStateUpdate.EventMetadata.getDefaultInstance();
      private Client.GroupConversationRename groupConversationRename_ = Client.GroupConversationRename.getDefaultInstance();
      private Client.InvalidateLocalCache invalidateLocalCache_ = Client.InvalidateLocalCache.getDefaultInstance();
      private Client.MembershipChange membershipChange_ = Client.MembershipChange.getDefaultInstance();
      private Client.Migration migration_ = Client.Migration.getDefaultInstance();
      private Client.NewConversation newConversation_ = Client.NewConversation.getDefaultInstance();
      private Client.Presence presence_ = Client.Presence.getDefaultInstance();
      private Client.Receipt receipt_ = Client.Receipt.getDefaultInstance();
      private Client.TileEvent tileEvent_ = Client.TileEvent.getDefaultInstance();
      private Client.Typing typing_ = Client.Typing.getDefaultInstance();

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 10:
            Client.ChatMessage.Builder localBuilder10 = Client.ChatMessage.newBuilder();
            if (hasChatMessage())
              localBuilder10.mergeFrom(getChatMessage());
            paramCodedInputStream.readMessage(localBuilder10, paramExtensionRegistryLite);
            setChatMessage(localBuilder10.buildPartial());
            break;
          case 18:
            Client.Presence.Builder localBuilder9 = Client.Presence.newBuilder();
            if (hasPresence())
              localBuilder9.mergeFrom(getPresence());
            paramCodedInputStream.readMessage(localBuilder9, paramExtensionRegistryLite);
            setPresence(localBuilder9.buildPartial());
            break;
          case 26:
            Client.Typing.Builder localBuilder8 = Client.Typing.newBuilder();
            if (hasTyping())
              localBuilder8.mergeFrom(getTyping());
            paramCodedInputStream.readMessage(localBuilder8, paramExtensionRegistryLite);
            setTyping(localBuilder8.buildPartial());
            break;
          case 34:
            Client.Receipt.Builder localBuilder7 = Client.Receipt.newBuilder();
            if (hasReceipt())
              localBuilder7.mergeFrom(getReceipt());
            paramCodedInputStream.readMessage(localBuilder7, paramExtensionRegistryLite);
            setReceipt(localBuilder7.buildPartial());
            break;
          case 42:
            Client.MembershipChange.Builder localBuilder6 = Client.MembershipChange.newBuilder();
            if (hasMembershipChange())
              localBuilder6.mergeFrom(getMembershipChange());
            paramCodedInputStream.readMessage(localBuilder6, paramExtensionRegistryLite);
            setMembershipChange(localBuilder6.buildPartial());
            break;
          case 50:
            Client.GroupConversationRename.Builder localBuilder5 = Client.GroupConversationRename.newBuilder();
            if (hasGroupConversationRename())
              localBuilder5.mergeFrom(getGroupConversationRename());
            paramCodedInputStream.readMessage(localBuilder5, paramExtensionRegistryLite);
            setGroupConversationRename(localBuilder5.buildPartial());
            break;
          case 58:
            Client.TileEvent.Builder localBuilder4 = Client.TileEvent.newBuilder();
            if (hasTileEvent())
              localBuilder4.mergeFrom(getTileEvent());
            paramCodedInputStream.readMessage(localBuilder4, paramExtensionRegistryLite);
            setTileEvent(localBuilder4.buildPartial());
            break;
          case 66:
            Client.Migration.Builder localBuilder3 = Client.Migration.newBuilder();
            if (hasMigration())
              localBuilder3.mergeFrom(getMigration());
            paramCodedInputStream.readMessage(localBuilder3, paramExtensionRegistryLite);
            setMigration(localBuilder3.buildPartial());
            break;
          case 74:
            Client.InvalidateLocalCache.Builder localBuilder2 = Client.InvalidateLocalCache.newBuilder();
            if (hasInvalidateLocalCache())
              localBuilder2.mergeFrom(getInvalidateLocalCache());
            paramCodedInputStream.readMessage(localBuilder2, paramExtensionRegistryLite);
            setInvalidateLocalCache(localBuilder2.buildPartial());
            break;
          case 82:
            Client.NewConversation.Builder localBuilder1 = Client.NewConversation.newBuilder();
            if (hasNewConversation())
              localBuilder1.mergeFrom(getNewConversation());
            paramCodedInputStream.readMessage(localBuilder1, paramExtensionRegistryLite);
            setNewConversation(localBuilder1.buildPartial());
            break;
          case 90:
          }
          Client.BunchServerStateUpdate.EventMetadata.Builder localBuilder = Client.BunchServerStateUpdate.EventMetadata.newBuilder();
          if (hasEventMetadata())
            localBuilder.mergeFrom(getEventMetadata());
          paramCodedInputStream.readMessage(localBuilder, paramExtensionRegistryLite);
          setEventMetadata(localBuilder.buildPartial());
        }
      }

      public final Client.BunchServerStateUpdate build()
      {
        Client.BunchServerStateUpdate localBunchServerStateUpdate = buildPartial();
        if (!localBunchServerStateUpdate.isInitialized())
          throw new UninitializedMessageException();
        return localBunchServerStateUpdate;
      }

      public final Client.BunchServerStateUpdate buildPartial()
      {
        Client.BunchServerStateUpdate localBunchServerStateUpdate = new Client.BunchServerStateUpdate(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Client.BunchServerStateUpdate.access$79102(localBunchServerStateUpdate, this.chatMessage_);
        if ((i & 0x2) == 2)
          k |= 2;
        Client.BunchServerStateUpdate.access$79202(localBunchServerStateUpdate, this.presence_);
        if ((i & 0x4) == 4)
          k |= 4;
        Client.BunchServerStateUpdate.access$79302(localBunchServerStateUpdate, this.typing_);
        if ((i & 0x8) == 8)
          k |= 8;
        Client.BunchServerStateUpdate.access$79402(localBunchServerStateUpdate, this.receipt_);
        if ((i & 0x10) == 16)
          k |= 16;
        Client.BunchServerStateUpdate.access$79502(localBunchServerStateUpdate, this.membershipChange_);
        if ((i & 0x20) == 32)
          k |= 32;
        Client.BunchServerStateUpdate.access$79602(localBunchServerStateUpdate, this.groupConversationRename_);
        if ((i & 0x40) == 64)
          k |= 64;
        Client.BunchServerStateUpdate.access$79702(localBunchServerStateUpdate, this.tileEvent_);
        if ((i & 0x80) == 128)
          k |= 128;
        Client.BunchServerStateUpdate.access$79802(localBunchServerStateUpdate, this.migration_);
        if ((i & 0x100) == 256)
          k |= 256;
        Client.BunchServerStateUpdate.access$79902(localBunchServerStateUpdate, this.invalidateLocalCache_);
        if ((i & 0x200) == 512)
          k |= 512;
        Client.BunchServerStateUpdate.access$80002(localBunchServerStateUpdate, this.newConversation_);
        if ((i & 0x400) == 1024)
          k |= 1024;
        Client.BunchServerStateUpdate.access$80102(localBunchServerStateUpdate, this.eventMetadata_);
        Client.BunchServerStateUpdate.access$80202(localBunchServerStateUpdate, k);
        return localBunchServerStateUpdate;
      }

      public final Builder clear()
      {
        super.clear();
        this.chatMessage_ = Client.ChatMessage.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.presence_ = Client.Presence.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.typing_ = Client.Typing.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.receipt_ = Client.Receipt.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        this.membershipChange_ = Client.MembershipChange.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        this.groupConversationRename_ = Client.GroupConversationRename.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFDF & this.bitField0_);
        this.tileEvent_ = Client.TileEvent.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFBF & this.bitField0_);
        this.migration_ = Client.Migration.getDefaultInstance();
        this.bitField0_ = (0xFFFFFF7F & this.bitField0_);
        this.invalidateLocalCache_ = Client.InvalidateLocalCache.getDefaultInstance();
        this.bitField0_ = (0xFFFFFEFF & this.bitField0_);
        this.newConversation_ = Client.NewConversation.getDefaultInstance();
        this.bitField0_ = (0xFFFFFDFF & this.bitField0_);
        this.eventMetadata_ = Client.BunchServerStateUpdate.EventMetadata.getDefaultInstance();
        this.bitField0_ = (0xFFFFFBFF & this.bitField0_);
        return this;
      }

      public final Builder clearChatMessage()
      {
        this.chatMessage_ = Client.ChatMessage.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        return this;
      }

      public final Builder clearEventMetadata()
      {
        this.eventMetadata_ = Client.BunchServerStateUpdate.EventMetadata.getDefaultInstance();
        this.bitField0_ = (0xFFFFFBFF & this.bitField0_);
        return this;
      }

      public final Builder clearGroupConversationRename()
      {
        this.groupConversationRename_ = Client.GroupConversationRename.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFDF & this.bitField0_);
        return this;
      }

      public final Builder clearInvalidateLocalCache()
      {
        this.invalidateLocalCache_ = Client.InvalidateLocalCache.getDefaultInstance();
        this.bitField0_ = (0xFFFFFEFF & this.bitField0_);
        return this;
      }

      public final Builder clearMembershipChange()
      {
        this.membershipChange_ = Client.MembershipChange.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        return this;
      }

      public final Builder clearMigration()
      {
        this.migration_ = Client.Migration.getDefaultInstance();
        this.bitField0_ = (0xFFFFFF7F & this.bitField0_);
        return this;
      }

      public final Builder clearNewConversation()
      {
        this.newConversation_ = Client.NewConversation.getDefaultInstance();
        this.bitField0_ = (0xFFFFFDFF & this.bitField0_);
        return this;
      }

      public final Builder clearPresence()
      {
        this.presence_ = Client.Presence.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        return this;
      }

      public final Builder clearReceipt()
      {
        this.receipt_ = Client.Receipt.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        return this;
      }

      public final Builder clearTileEvent()
      {
        this.tileEvent_ = Client.TileEvent.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFBF & this.bitField0_);
        return this;
      }

      public final Builder clearTyping()
      {
        this.typing_ = Client.Typing.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        return this;
      }

      public final Client.ChatMessage getChatMessage()
      {
        return this.chatMessage_;
      }

      public final Client.BunchServerStateUpdate getDefaultInstanceForType()
      {
        return Client.BunchServerStateUpdate.getDefaultInstance();
      }

      public final Client.BunchServerStateUpdate.EventMetadata getEventMetadata()
      {
        return this.eventMetadata_;
      }

      public final Client.GroupConversationRename getGroupConversationRename()
      {
        return this.groupConversationRename_;
      }

      public final Client.InvalidateLocalCache getInvalidateLocalCache()
      {
        return this.invalidateLocalCache_;
      }

      public final Client.MembershipChange getMembershipChange()
      {
        return this.membershipChange_;
      }

      public final Client.Migration getMigration()
      {
        return this.migration_;
      }

      public final Client.NewConversation getNewConversation()
      {
        return this.newConversation_;
      }

      public final Client.Presence getPresence()
      {
        return this.presence_;
      }

      public final Client.Receipt getReceipt()
      {
        return this.receipt_;
      }

      public final Client.TileEvent getTileEvent()
      {
        return this.tileEvent_;
      }

      public final Client.Typing getTyping()
      {
        return this.typing_;
      }

      public final boolean hasChatMessage()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean hasEventMetadata()
      {
        if ((0x400 & this.bitField0_) == 1024);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasGroupConversationRename()
      {
        if ((0x20 & this.bitField0_) == 32);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasInvalidateLocalCache()
      {
        if ((0x100 & this.bitField0_) == 256);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasMembershipChange()
      {
        if ((0x10 & this.bitField0_) == 16);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasMigration()
      {
        if ((0x80 & this.bitField0_) == 128);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasNewConversation()
      {
        if ((0x200 & this.bitField0_) == 512);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasPresence()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasReceipt()
      {
        if ((0x8 & this.bitField0_) == 8);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasTileEvent()
      {
        if ((0x40 & this.bitField0_) == 64);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasTyping()
      {
        if ((0x4 & this.bitField0_) == 4);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Client.BunchServerStateUpdate paramBunchServerStateUpdate)
      {
        if (paramBunchServerStateUpdate == Client.BunchServerStateUpdate.getDefaultInstance());
        Client.ChatMessage localChatMessage;
        label61: Client.Presence localPresence;
        label123: Client.Typing localTyping;
        label185: Client.Receipt localReceipt;
        label249: Client.MembershipChange localMembershipChange;
        label314: Client.GroupConversationRename localGroupConversationRename;
        label379: Client.TileEvent localTileEvent;
        label444: Client.Migration localMigration;
        label511: Client.InvalidateLocalCache localInvalidateLocalCache;
        label579: Client.NewConversation localNewConversation;
        label645: 
        do
        {
          return this;
          if (paramBunchServerStateUpdate.hasChatMessage())
          {
            localChatMessage = paramBunchServerStateUpdate.getChatMessage();
            if (((0x1 & this.bitField0_) != 1) || (this.chatMessage_ == Client.ChatMessage.getDefaultInstance()))
              break;
            this.chatMessage_ = Client.ChatMessage.newBuilder(this.chatMessage_).mergeFrom(localChatMessage).buildPartial();
            this.bitField0_ = (0x1 | this.bitField0_);
          }
          if (paramBunchServerStateUpdate.hasPresence())
          {
            localPresence = paramBunchServerStateUpdate.getPresence();
            if (((0x2 & this.bitField0_) != 2) || (this.presence_ == Client.Presence.getDefaultInstance()))
              break label735;
            this.presence_ = Client.Presence.newBuilder(this.presence_).mergeFrom(localPresence).buildPartial();
            this.bitField0_ = (0x2 | this.bitField0_);
          }
          if (paramBunchServerStateUpdate.hasTyping())
          {
            localTyping = paramBunchServerStateUpdate.getTyping();
            if (((0x4 & this.bitField0_) != 4) || (this.typing_ == Client.Typing.getDefaultInstance()))
              break label744;
            this.typing_ = Client.Typing.newBuilder(this.typing_).mergeFrom(localTyping).buildPartial();
            this.bitField0_ = (0x4 | this.bitField0_);
          }
          if (paramBunchServerStateUpdate.hasReceipt())
          {
            localReceipt = paramBunchServerStateUpdate.getReceipt();
            if (((0x8 & this.bitField0_) != 8) || (this.receipt_ == Client.Receipt.getDefaultInstance()))
              break label753;
            this.receipt_ = Client.Receipt.newBuilder(this.receipt_).mergeFrom(localReceipt).buildPartial();
            this.bitField0_ = (0x8 | this.bitField0_);
          }
          if (paramBunchServerStateUpdate.hasMembershipChange())
          {
            localMembershipChange = paramBunchServerStateUpdate.getMembershipChange();
            if (((0x10 & this.bitField0_) != 16) || (this.membershipChange_ == Client.MembershipChange.getDefaultInstance()))
              break label762;
            this.membershipChange_ = Client.MembershipChange.newBuilder(this.membershipChange_).mergeFrom(localMembershipChange).buildPartial();
            this.bitField0_ = (0x10 | this.bitField0_);
          }
          if (paramBunchServerStateUpdate.hasGroupConversationRename())
          {
            localGroupConversationRename = paramBunchServerStateUpdate.getGroupConversationRename();
            if (((0x20 & this.bitField0_) != 32) || (this.groupConversationRename_ == Client.GroupConversationRename.getDefaultInstance()))
              break label771;
            this.groupConversationRename_ = Client.GroupConversationRename.newBuilder(this.groupConversationRename_).mergeFrom(localGroupConversationRename).buildPartial();
            this.bitField0_ = (0x20 | this.bitField0_);
          }
          if (paramBunchServerStateUpdate.hasTileEvent())
          {
            localTileEvent = paramBunchServerStateUpdate.getTileEvent();
            if (((0x40 & this.bitField0_) != 64) || (this.tileEvent_ == Client.TileEvent.getDefaultInstance()))
              break label780;
            this.tileEvent_ = Client.TileEvent.newBuilder(this.tileEvent_).mergeFrom(localTileEvent).buildPartial();
            this.bitField0_ = (0x40 | this.bitField0_);
          }
          if (paramBunchServerStateUpdate.hasMigration())
          {
            localMigration = paramBunchServerStateUpdate.getMigration();
            if (((0x80 & this.bitField0_) != 128) || (this.migration_ == Client.Migration.getDefaultInstance()))
              break label789;
            this.migration_ = Client.Migration.newBuilder(this.migration_).mergeFrom(localMigration).buildPartial();
            this.bitField0_ = (0x80 | this.bitField0_);
          }
          if (paramBunchServerStateUpdate.hasInvalidateLocalCache())
          {
            localInvalidateLocalCache = paramBunchServerStateUpdate.getInvalidateLocalCache();
            if (((0x100 & this.bitField0_) != 256) || (this.invalidateLocalCache_ == Client.InvalidateLocalCache.getDefaultInstance()))
              break label798;
            this.invalidateLocalCache_ = Client.InvalidateLocalCache.newBuilder(this.invalidateLocalCache_).mergeFrom(localInvalidateLocalCache).buildPartial();
            this.bitField0_ = (0x100 | this.bitField0_);
          }
          if (paramBunchServerStateUpdate.hasNewConversation())
          {
            localNewConversation = paramBunchServerStateUpdate.getNewConversation();
            if (((0x200 & this.bitField0_) != 512) || (this.newConversation_ == Client.NewConversation.getDefaultInstance()))
              break label807;
            this.newConversation_ = Client.NewConversation.newBuilder(this.newConversation_).mergeFrom(localNewConversation).buildPartial();
            this.bitField0_ = (0x200 | this.bitField0_);
          }
        }
        while (!paramBunchServerStateUpdate.hasEventMetadata());
        Client.BunchServerStateUpdate.EventMetadata localEventMetadata = paramBunchServerStateUpdate.getEventMetadata();
        if (((0x400 & this.bitField0_) == 1024) && (this.eventMetadata_ != Client.BunchServerStateUpdate.EventMetadata.getDefaultInstance()));
        for (this.eventMetadata_ = Client.BunchServerStateUpdate.EventMetadata.newBuilder(this.eventMetadata_).mergeFrom(localEventMetadata).buildPartial(); ; this.eventMetadata_ = localEventMetadata)
        {
          this.bitField0_ = (0x400 | this.bitField0_);
          break;
          this.chatMessage_ = localChatMessage;
          break label61;
          label735: this.presence_ = localPresence;
          break label123;
          label744: this.typing_ = localTyping;
          break label185;
          label753: this.receipt_ = localReceipt;
          break label249;
          label762: this.membershipChange_ = localMembershipChange;
          break label314;
          label771: this.groupConversationRename_ = localGroupConversationRename;
          break label379;
          label780: this.tileEvent_ = localTileEvent;
          break label444;
          label789: this.migration_ = localMigration;
          break label511;
          label798: this.invalidateLocalCache_ = localInvalidateLocalCache;
          break label579;
          label807: this.newConversation_ = localNewConversation;
          break label645;
        }
      }

      public final Builder setChatMessage(Client.ChatMessage.Builder paramBuilder)
      {
        this.chatMessage_ = paramBuilder.build();
        this.bitField0_ = (0x1 | this.bitField0_);
        return this;
      }

      public final Builder setChatMessage(Client.ChatMessage paramChatMessage)
      {
        if (paramChatMessage == null)
          throw new NullPointerException();
        this.chatMessage_ = paramChatMessage;
        this.bitField0_ = (0x1 | this.bitField0_);
        return this;
      }

      public final Builder setEventMetadata(Client.BunchServerStateUpdate.EventMetadata.Builder paramBuilder)
      {
        this.eventMetadata_ = paramBuilder.build();
        this.bitField0_ = (0x400 | this.bitField0_);
        return this;
      }

      public final Builder setEventMetadata(Client.BunchServerStateUpdate.EventMetadata paramEventMetadata)
      {
        if (paramEventMetadata == null)
          throw new NullPointerException();
        this.eventMetadata_ = paramEventMetadata;
        this.bitField0_ = (0x400 | this.bitField0_);
        return this;
      }

      public final Builder setGroupConversationRename(Client.GroupConversationRename.Builder paramBuilder)
      {
        this.groupConversationRename_ = paramBuilder.build();
        this.bitField0_ = (0x20 | this.bitField0_);
        return this;
      }

      public final Builder setGroupConversationRename(Client.GroupConversationRename paramGroupConversationRename)
      {
        if (paramGroupConversationRename == null)
          throw new NullPointerException();
        this.groupConversationRename_ = paramGroupConversationRename;
        this.bitField0_ = (0x20 | this.bitField0_);
        return this;
      }

      public final Builder setInvalidateLocalCache(Client.InvalidateLocalCache.Builder paramBuilder)
      {
        this.invalidateLocalCache_ = paramBuilder.build();
        this.bitField0_ = (0x100 | this.bitField0_);
        return this;
      }

      public final Builder setInvalidateLocalCache(Client.InvalidateLocalCache paramInvalidateLocalCache)
      {
        if (paramInvalidateLocalCache == null)
          throw new NullPointerException();
        this.invalidateLocalCache_ = paramInvalidateLocalCache;
        this.bitField0_ = (0x100 | this.bitField0_);
        return this;
      }

      public final Builder setMembershipChange(Client.MembershipChange.Builder paramBuilder)
      {
        this.membershipChange_ = paramBuilder.build();
        this.bitField0_ = (0x10 | this.bitField0_);
        return this;
      }

      public final Builder setMembershipChange(Client.MembershipChange paramMembershipChange)
      {
        if (paramMembershipChange == null)
          throw new NullPointerException();
        this.membershipChange_ = paramMembershipChange;
        this.bitField0_ = (0x10 | this.bitField0_);
        return this;
      }

      public final Builder setMigration(Client.Migration.Builder paramBuilder)
      {
        this.migration_ = paramBuilder.build();
        this.bitField0_ = (0x80 | this.bitField0_);
        return this;
      }

      public final Builder setMigration(Client.Migration paramMigration)
      {
        if (paramMigration == null)
          throw new NullPointerException();
        this.migration_ = paramMigration;
        this.bitField0_ = (0x80 | this.bitField0_);
        return this;
      }

      public final Builder setNewConversation(Client.NewConversation.Builder paramBuilder)
      {
        this.newConversation_ = paramBuilder.build();
        this.bitField0_ = (0x200 | this.bitField0_);
        return this;
      }

      public final Builder setNewConversation(Client.NewConversation paramNewConversation)
      {
        if (paramNewConversation == null)
          throw new NullPointerException();
        this.newConversation_ = paramNewConversation;
        this.bitField0_ = (0x200 | this.bitField0_);
        return this;
      }

      public final Builder setPresence(Client.Presence.Builder paramBuilder)
      {
        this.presence_ = paramBuilder.build();
        this.bitField0_ = (0x2 | this.bitField0_);
        return this;
      }

      public final Builder setPresence(Client.Presence paramPresence)
      {
        if (paramPresence == null)
          throw new NullPointerException();
        this.presence_ = paramPresence;
        this.bitField0_ = (0x2 | this.bitField0_);
        return this;
      }

      public final Builder setReceipt(Client.Receipt.Builder paramBuilder)
      {
        this.receipt_ = paramBuilder.build();
        this.bitField0_ = (0x8 | this.bitField0_);
        return this;
      }

      public final Builder setReceipt(Client.Receipt paramReceipt)
      {
        if (paramReceipt == null)
          throw new NullPointerException();
        this.receipt_ = paramReceipt;
        this.bitField0_ = (0x8 | this.bitField0_);
        return this;
      }

      public final Builder setTileEvent(Client.TileEvent.Builder paramBuilder)
      {
        this.tileEvent_ = paramBuilder.build();
        this.bitField0_ = (0x40 | this.bitField0_);
        return this;
      }

      public final Builder setTileEvent(Client.TileEvent paramTileEvent)
      {
        if (paramTileEvent == null)
          throw new NullPointerException();
        this.tileEvent_ = paramTileEvent;
        this.bitField0_ = (0x40 | this.bitField0_);
        return this;
      }

      public final Builder setTyping(Client.Typing.Builder paramBuilder)
      {
        this.typing_ = paramBuilder.build();
        this.bitField0_ = (0x4 | this.bitField0_);
        return this;
      }

      public final Builder setTyping(Client.Typing paramTyping)
      {
        if (paramTyping == null)
          throw new NullPointerException();
        this.typing_ = paramTyping;
        this.bitField0_ = (0x4 | this.bitField0_);
        return this;
      }
    }

    public static final class EventMetadata extends GeneratedMessageLite
      implements Client.BunchServerStateUpdate.EventMetadataOrBuilder
    {
      private static final EventMetadata defaultInstance;
      private static final long serialVersionUID;
      private int bitField0_;
      private Object conversationId_;
      private long eventTimestamp_;
      private byte memoizedIsInitialized = -1;
      private int memoizedSerializedSize = -1;

      static
      {
        EventMetadata localEventMetadata = new EventMetadata();
        defaultInstance = localEventMetadata;
        localEventMetadata.conversationId_ = "";
        localEventMetadata.eventTimestamp_ = 0L;
      }

      private EventMetadata()
      {
      }

      private EventMetadata(Builder paramBuilder)
      {
        super();
      }

      private ByteString getConversationIdBytes()
      {
        Object localObject = this.conversationId_;
        ByteString localByteString;
        if ((localObject instanceof String))
        {
          localByteString = ByteString.copyFromUtf8((String)localObject);
          this.conversationId_ = localByteString;
        }
        while (true)
        {
          return localByteString;
          localByteString = (ByteString)localObject;
        }
      }

      public static EventMetadata getDefaultInstance()
      {
        return defaultInstance;
      }

      public static Builder newBuilder()
      {
        return Builder.access$78300();
      }

      public static Builder newBuilder(EventMetadata paramEventMetadata)
      {
        return Builder.access$78300().mergeFrom(paramEventMetadata);
      }

      public final String getConversationId()
      {
        Object localObject1 = this.conversationId_;
        if ((localObject1 instanceof String));
        String str;
        for (Object localObject2 = (String)localObject1; ; localObject2 = str)
        {
          return localObject2;
          ByteString localByteString = (ByteString)localObject1;
          str = localByteString.toStringUtf8();
          if (Internal.isValidUtf8(localByteString))
            this.conversationId_ = str;
        }
      }

      public final EventMetadata getDefaultInstanceForType()
      {
        return defaultInstance;
      }

      public final long getEventTimestamp()
      {
        return this.eventTimestamp_;
      }

      public final int getSerializedSize()
      {
        int i = this.memoizedSerializedSize;
        if (i != -1);
        int k;
        for (int m = i; ; m = k)
        {
          return m;
          int j = 0x1 & this.bitField0_;
          k = 0;
          if (j == 1)
            k = 0 + CodedOutputStream.computeBytesSize(1, getConversationIdBytes());
          if ((0x2 & this.bitField0_) == 2)
            k += CodedOutputStream.computeUInt64Size(2, this.eventTimestamp_);
          this.memoizedSerializedSize = k;
        }
      }

      public final boolean hasConversationId()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean hasEventTimestamp()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean isInitialized()
      {
        int i = 1;
        int j = this.memoizedIsInitialized;
        if (j != -1)
          if (j != i);
        while (true)
        {
          return i;
          i = 0;
          continue;
          this.memoizedIsInitialized = i;
        }
      }

      protected final Object writeReplace()
        throws ObjectStreamException
      {
        return super.writeReplace();
      }

      public final void writeTo(CodedOutputStream paramCodedOutputStream)
        throws IOException
      {
        getSerializedSize();
        if ((0x1 & this.bitField0_) == 1)
          paramCodedOutputStream.writeBytes(1, getConversationIdBytes());
        if ((0x2 & this.bitField0_) == 2)
          paramCodedOutputStream.writeUInt64(2, this.eventTimestamp_);
      }

      public static final class Builder extends GeneratedMessageLite.Builder<Client.BunchServerStateUpdate.EventMetadata, Builder>
        implements Client.BunchServerStateUpdate.EventMetadataOrBuilder
      {
        private int bitField0_;
        private Object conversationId_ = "";
        private long eventTimestamp_;

        private Builder clone()
        {
          return new Builder().mergeFrom(buildPartial());
        }

        private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
          throws IOException
        {
          while (true)
          {
            int i = paramCodedInputStream.readTag();
            switch (i)
            {
            default:
              if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
                continue;
            case 0:
              return this;
            case 10:
              this.bitField0_ = (0x1 | this.bitField0_);
              this.conversationId_ = paramCodedInputStream.readBytes();
              break;
            case 16:
            }
            this.bitField0_ = (0x2 | this.bitField0_);
            this.eventTimestamp_ = paramCodedInputStream.readUInt64();
          }
        }

        public final Client.BunchServerStateUpdate.EventMetadata build()
        {
          Client.BunchServerStateUpdate.EventMetadata localEventMetadata = buildPartial();
          if (!localEventMetadata.isInitialized())
            throw new UninitializedMessageException();
          return localEventMetadata;
        }

        public final Client.BunchServerStateUpdate.EventMetadata buildPartial()
        {
          Client.BunchServerStateUpdate.EventMetadata localEventMetadata = new Client.BunchServerStateUpdate.EventMetadata(this, (byte)0);
          int i = this.bitField0_;
          int j = i & 0x1;
          int k = 0;
          if (j == 1)
            k = 1;
          Client.BunchServerStateUpdate.EventMetadata.access$78502(localEventMetadata, this.conversationId_);
          if ((i & 0x2) == 2)
            k |= 2;
          Client.BunchServerStateUpdate.EventMetadata.access$78602(localEventMetadata, this.eventTimestamp_);
          Client.BunchServerStateUpdate.EventMetadata.access$78702(localEventMetadata, k);
          return localEventMetadata;
        }

        public final Builder clear()
        {
          super.clear();
          this.conversationId_ = "";
          this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
          this.eventTimestamp_ = 0L;
          this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
          return this;
        }

        public final Builder clearConversationId()
        {
          this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
          this.conversationId_ = Client.BunchServerStateUpdate.EventMetadata.getDefaultInstance().getConversationId();
          return this;
        }

        public final Builder clearEventTimestamp()
        {
          this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
          this.eventTimestamp_ = 0L;
          return this;
        }

        public final String getConversationId()
        {
          Object localObject = this.conversationId_;
          String str;
          if (!(localObject instanceof String))
          {
            str = ((ByteString)localObject).toStringUtf8();
            this.conversationId_ = str;
          }
          while (true)
          {
            return str;
            str = (String)localObject;
          }
        }

        public final Client.BunchServerStateUpdate.EventMetadata getDefaultInstanceForType()
        {
          return Client.BunchServerStateUpdate.EventMetadata.getDefaultInstance();
        }

        public final long getEventTimestamp()
        {
          return this.eventTimestamp_;
        }

        public final boolean hasConversationId()
        {
          int i = 1;
          if ((0x1 & this.bitField0_) == i);
          while (true)
          {
            return i;
            int j = 0;
          }
        }

        public final boolean hasEventTimestamp()
        {
          if ((0x2 & this.bitField0_) == 2);
          for (boolean bool = true; ; bool = false)
            return bool;
        }

        public final boolean isInitialized()
        {
          return true;
        }

        public final Builder mergeFrom(Client.BunchServerStateUpdate.EventMetadata paramEventMetadata)
        {
          if (paramEventMetadata == Client.BunchServerStateUpdate.EventMetadata.getDefaultInstance());
          while (true)
          {
            return this;
            if (paramEventMetadata.hasConversationId())
              setConversationId(paramEventMetadata.getConversationId());
            if (paramEventMetadata.hasEventTimestamp())
              setEventTimestamp(paramEventMetadata.getEventTimestamp());
          }
        }

        public final Builder setConversationId(String paramString)
        {
          if (paramString == null)
            throw new NullPointerException();
          this.bitField0_ = (0x1 | this.bitField0_);
          this.conversationId_ = paramString;
          return this;
        }

        public final Builder setEventTimestamp(long paramLong)
        {
          this.bitField0_ = (0x2 | this.bitField0_);
          this.eventTimestamp_ = paramLong;
          return this;
        }
      }
    }

    public static abstract interface EventMetadataOrBuilder extends MessageLiteOrBuilder
    {
      public abstract String getConversationId();

      public abstract long getEventTimestamp();

      public abstract boolean hasConversationId();

      public abstract boolean hasEventTimestamp();
    }
  }

  public static abstract interface BunchServerStateUpdateOrBuilder extends MessageLiteOrBuilder
  {
    public abstract Client.ChatMessage getChatMessage();

    public abstract Client.BunchServerStateUpdate.EventMetadata getEventMetadata();

    public abstract Client.GroupConversationRename getGroupConversationRename();

    public abstract Client.InvalidateLocalCache getInvalidateLocalCache();

    public abstract Client.MembershipChange getMembershipChange();

    public abstract Client.Migration getMigration();

    public abstract Client.NewConversation getNewConversation();

    public abstract Client.Presence getPresence();

    public abstract Client.Receipt getReceipt();

    public abstract Client.TileEvent getTileEvent();

    public abstract Client.Typing getTyping();

    public abstract boolean hasChatMessage();

    public abstract boolean hasEventMetadata();

    public abstract boolean hasGroupConversationRename();

    public abstract boolean hasInvalidateLocalCache();

    public abstract boolean hasMembershipChange();

    public abstract boolean hasMigration();

    public abstract boolean hasNewConversation();

    public abstract boolean hasPresence();

    public abstract boolean hasReceipt();

    public abstract boolean hasTileEvent();

    public abstract boolean hasTyping();
  }

  public static final class ChatMessage extends GeneratedMessageLite
    implements Client.ChatMessageOrBuilder
  {
    private static final ChatMessage defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private List<Data.Content> content_;
    private Object conversationId_;
    private Object id_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private Object messageClientId_;
    private ReceiverState receiverState_;
    private LazyStringList recipientId_;
    private boolean retry_;
    private Object senderId_;
    private Object shardingHint_;
    private long timestamp_;

    static
    {
      ChatMessage localChatMessage = new ChatMessage();
      defaultInstance = localChatMessage;
      localChatMessage.messageClientId_ = "";
      localChatMessage.id_ = "";
      localChatMessage.timestamp_ = 0L;
      localChatMessage.conversationId_ = "";
      localChatMessage.senderId_ = "";
      localChatMessage.content_ = Collections.emptyList();
      localChatMessage.shardingHint_ = "";
      localChatMessage.retry_ = false;
      localChatMessage.receiverState_ = ReceiverState.UNKNOWN;
      localChatMessage.recipientId_ = LazyStringArrayList.EMPTY;
    }

    private ChatMessage()
    {
    }

    private ChatMessage(Builder paramBuilder)
    {
      super();
    }

    private ByteString getConversationIdBytes()
    {
      Object localObject = this.conversationId_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.conversationId_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static ChatMessage getDefaultInstance()
    {
      return defaultInstance;
    }

    private ByteString getIdBytes()
    {
      Object localObject = this.id_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.id_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    private ByteString getMessageClientIdBytes()
    {
      Object localObject = this.messageClientId_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.messageClientId_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    private ByteString getSenderIdBytes()
    {
      Object localObject = this.senderId_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.senderId_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    private ByteString getShardingHintBytes()
    {
      Object localObject = this.shardingHint_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.shardingHint_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static Builder newBuilder()
    {
      return Builder.access$1900();
    }

    public static Builder newBuilder(ChatMessage paramChatMessage)
    {
      return Builder.access$1900().mergeFrom(paramChatMessage);
    }

    public final Data.Content getContent(int paramInt)
    {
      return (Data.Content)this.content_.get(paramInt);
    }

    public final int getContentCount()
    {
      return this.content_.size();
    }

    public final List<Data.Content> getContentList()
    {
      return this.content_;
    }

    public final Data.ContentOrBuilder getContentOrBuilder(int paramInt)
    {
      return (Data.ContentOrBuilder)this.content_.get(paramInt);
    }

    public final List<? extends Data.ContentOrBuilder> getContentOrBuilderList()
    {
      return this.content_;
    }

    public final String getConversationId()
    {
      Object localObject1 = this.conversationId_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.conversationId_ = str;
      }
    }

    public final ChatMessage getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final String getId()
    {
      Object localObject1 = this.id_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.id_ = str;
      }
    }

    public final String getMessageClientId()
    {
      Object localObject1 = this.messageClientId_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.messageClientId_ = str;
      }
    }

    public final ReceiverState getReceiverState()
    {
      return this.receiverState_;
    }

    public final String getRecipientId(int paramInt)
    {
      return (String)this.recipientId_.get(paramInt);
    }

    public final int getRecipientIdCount()
    {
      return this.recipientId_.size();
    }

    public final List<String> getRecipientIdList()
    {
      return this.recipientId_;
    }

    public final boolean getRetry()
    {
      return this.retry_;
    }

    public final String getSenderId()
    {
      Object localObject1 = this.senderId_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.senderId_ = str;
      }
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int i2;
      for (int i3 = i; ; i3 = i2)
      {
        return i3;
        int j = 0x1 & this.bitField0_;
        int k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeBytesSize(1, getMessageClientIdBytes());
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeBytesSize(2, getIdBytes());
        if ((0x4 & this.bitField0_) == 4)
          k += CodedOutputStream.computeInt64Size(3, this.timestamp_);
        if ((0x8 & this.bitField0_) == 8)
          k += CodedOutputStream.computeBytesSize(4, getConversationIdBytes());
        if ((0x10 & this.bitField0_) == 16)
          k += CodedOutputStream.computeBytesSize(5, getSenderIdBytes());
        for (int m = 0; m < this.content_.size(); m++)
          k += CodedOutputStream.computeMessageSize(6, (MessageLite)this.content_.get(m));
        if ((0x20 & this.bitField0_) == 32)
          k += CodedOutputStream.computeBytesSize(7, getShardingHintBytes());
        int n = 0;
        for (int i1 = 0; i1 < this.recipientId_.size(); i1++)
          n += CodedOutputStream.computeBytesSizeNoTag(this.recipientId_.getByteString(i1));
        i2 = k + n + 1 * getRecipientIdList().size();
        if ((0x40 & this.bitField0_) == 64)
          i2 += CodedOutputStream.computeBoolSize(9, this.retry_);
        if ((0x80 & this.bitField0_) == 128)
          i2 += CodedOutputStream.computeEnumSize(10, this.receiverState_.getNumber());
        this.memoizedSerializedSize = i2;
      }
    }

    public final String getShardingHint()
    {
      Object localObject1 = this.shardingHint_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.shardingHint_ = str;
      }
    }

    public final long getTimestamp()
    {
      return this.timestamp_;
    }

    public final boolean hasConversationId()
    {
      if ((0x8 & this.bitField0_) == 8);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasId()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasMessageClientId()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean hasReceiverState()
    {
      if ((0x80 & this.bitField0_) == 128);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasRetry()
    {
      if ((0x40 & this.bitField0_) == 64);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasSenderId()
    {
      if ((0x10 & this.bitField0_) == 16);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasShardingHint()
    {
      if ((0x20 & this.bitField0_) == 32);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasTimestamp()
    {
      if ((0x4 & this.bitField0_) == 4);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeBytes(1, getMessageClientIdBytes());
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeBytes(2, getIdBytes());
      if ((0x4 & this.bitField0_) == 4)
        paramCodedOutputStream.writeInt64(3, this.timestamp_);
      if ((0x8 & this.bitField0_) == 8)
        paramCodedOutputStream.writeBytes(4, getConversationIdBytes());
      if ((0x10 & this.bitField0_) == 16)
        paramCodedOutputStream.writeBytes(5, getSenderIdBytes());
      for (int i = 0; i < this.content_.size(); i++)
        paramCodedOutputStream.writeMessage(6, (MessageLite)this.content_.get(i));
      if ((0x20 & this.bitField0_) == 32)
        paramCodedOutputStream.writeBytes(7, getShardingHintBytes());
      for (int j = 0; j < this.recipientId_.size(); j++)
        paramCodedOutputStream.writeBytes(8, this.recipientId_.getByteString(j));
      if ((0x40 & this.bitField0_) == 64)
        paramCodedOutputStream.writeBool(9, this.retry_);
      if ((0x80 & this.bitField0_) == 128)
        paramCodedOutputStream.writeEnum(10, this.receiverState_.getNumber());
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Client.ChatMessage, Builder>
      implements Client.ChatMessageOrBuilder
    {
      private int bitField0_;
      private List<Data.Content> content_ = Collections.emptyList();
      private Object conversationId_ = "";
      private Object id_ = "";
      private Object messageClientId_ = "";
      private Client.ChatMessage.ReceiverState receiverState_ = Client.ChatMessage.ReceiverState.UNKNOWN;
      private LazyStringList recipientId_ = LazyStringArrayList.EMPTY;
      private boolean retry_;
      private Object senderId_ = "";
      private Object shardingHint_ = "";
      private long timestamp_;

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private void ensureContentIsMutable()
      {
        if ((0x20 & this.bitField0_) != 32)
        {
          this.content_ = new ArrayList(this.content_);
          this.bitField0_ = (0x20 | this.bitField0_);
        }
      }

      private void ensureRecipientIdIsMutable()
      {
        if ((0x200 & this.bitField0_) != 512)
        {
          this.recipientId_ = new LazyStringArrayList(this.recipientId_);
          this.bitField0_ = (0x200 | this.bitField0_);
        }
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 10:
            this.bitField0_ = (0x1 | this.bitField0_);
            this.messageClientId_ = paramCodedInputStream.readBytes();
            break;
          case 18:
            this.bitField0_ = (0x2 | this.bitField0_);
            this.id_ = paramCodedInputStream.readBytes();
            break;
          case 24:
            this.bitField0_ = (0x4 | this.bitField0_);
            this.timestamp_ = paramCodedInputStream.readInt64();
            break;
          case 34:
            this.bitField0_ = (0x8 | this.bitField0_);
            this.conversationId_ = paramCodedInputStream.readBytes();
            break;
          case 42:
            this.bitField0_ = (0x10 | this.bitField0_);
            this.senderId_ = paramCodedInputStream.readBytes();
            break;
          case 50:
            Data.Content.Builder localBuilder = Data.Content.newBuilder();
            paramCodedInputStream.readMessage(localBuilder, paramExtensionRegistryLite);
            addContent(localBuilder.buildPartial());
            break;
          case 58:
            this.bitField0_ = (0x40 | this.bitField0_);
            this.shardingHint_ = paramCodedInputStream.readBytes();
            break;
          case 66:
            ensureRecipientIdIsMutable();
            this.recipientId_.add(paramCodedInputStream.readBytes());
            break;
          case 72:
            this.bitField0_ = (0x80 | this.bitField0_);
            this.retry_ = paramCodedInputStream.readBool();
            break;
          case 80:
          }
          Client.ChatMessage.ReceiverState localReceiverState = Client.ChatMessage.ReceiverState.valueOf(paramCodedInputStream.readEnum());
          if (localReceiverState != null)
          {
            this.bitField0_ = (0x100 | this.bitField0_);
            this.receiverState_ = localReceiverState;
          }
        }
      }

      public final Builder addAllContent(Iterable<? extends Data.Content> paramIterable)
      {
        ensureContentIsMutable();
        GeneratedMessageLite.Builder.addAll(paramIterable, this.content_);
        return this;
      }

      public final Builder addAllRecipientId(Iterable<String> paramIterable)
      {
        ensureRecipientIdIsMutable();
        GeneratedMessageLite.Builder.addAll(paramIterable, this.recipientId_);
        return this;
      }

      public final Builder addContent(int paramInt, Data.Content.Builder paramBuilder)
      {
        ensureContentIsMutable();
        this.content_.add(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder addContent(int paramInt, Data.Content paramContent)
      {
        if (paramContent == null)
          throw new NullPointerException();
        ensureContentIsMutable();
        this.content_.add(paramInt, paramContent);
        return this;
      }

      public final Builder addContent(Data.Content.Builder paramBuilder)
      {
        ensureContentIsMutable();
        this.content_.add(paramBuilder.build());
        return this;
      }

      public final Builder addContent(Data.Content paramContent)
      {
        if (paramContent == null)
          throw new NullPointerException();
        ensureContentIsMutable();
        this.content_.add(paramContent);
        return this;
      }

      public final Builder addRecipientId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        ensureRecipientIdIsMutable();
        this.recipientId_.add(paramString);
        return this;
      }

      public final Client.ChatMessage build()
      {
        Client.ChatMessage localChatMessage = buildPartial();
        if (!localChatMessage.isInitialized())
          throw new UninitializedMessageException();
        return localChatMessage;
      }

      public final Client.ChatMessage buildPartial()
      {
        Client.ChatMessage localChatMessage = new Client.ChatMessage(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Client.ChatMessage.access$2102(localChatMessage, this.messageClientId_);
        if ((i & 0x2) == 2)
          k |= 2;
        Client.ChatMessage.access$2202(localChatMessage, this.id_);
        if ((i & 0x4) == 4)
          k |= 4;
        Client.ChatMessage.access$2302(localChatMessage, this.timestamp_);
        if ((i & 0x8) == 8)
          k |= 8;
        Client.ChatMessage.access$2402(localChatMessage, this.conversationId_);
        if ((i & 0x10) == 16)
          k |= 16;
        Client.ChatMessage.access$2502(localChatMessage, this.senderId_);
        if ((0x20 & this.bitField0_) == 32)
        {
          this.content_ = Collections.unmodifiableList(this.content_);
          this.bitField0_ = (0xFFFFFFDF & this.bitField0_);
        }
        Client.ChatMessage.access$2602(localChatMessage, this.content_);
        if ((i & 0x40) == 64)
          k |= 32;
        Client.ChatMessage.access$2702(localChatMessage, this.shardingHint_);
        if ((i & 0x80) == 128)
          k |= 64;
        Client.ChatMessage.access$2802(localChatMessage, this.retry_);
        if ((i & 0x100) == 256)
          k |= 128;
        Client.ChatMessage.access$2902(localChatMessage, this.receiverState_);
        if ((0x200 & this.bitField0_) == 512)
        {
          this.recipientId_ = new UnmodifiableLazyStringList(this.recipientId_);
          this.bitField0_ = (0xFFFFFDFF & this.bitField0_);
        }
        Client.ChatMessage.access$3002(localChatMessage, this.recipientId_);
        Client.ChatMessage.access$3102(localChatMessage, k);
        return localChatMessage;
      }

      public final Builder clear()
      {
        super.clear();
        this.messageClientId_ = "";
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.id_ = "";
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.timestamp_ = 0L;
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.conversationId_ = "";
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        this.senderId_ = "";
        this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        this.content_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFDF & this.bitField0_);
        this.shardingHint_ = "";
        this.bitField0_ = (0xFFFFFFBF & this.bitField0_);
        this.retry_ = false;
        this.bitField0_ = (0xFFFFFF7F & this.bitField0_);
        this.receiverState_ = Client.ChatMessage.ReceiverState.UNKNOWN;
        this.bitField0_ = (0xFFFFFEFF & this.bitField0_);
        this.recipientId_ = LazyStringArrayList.EMPTY;
        this.bitField0_ = (0xFFFFFDFF & this.bitField0_);
        return this;
      }

      public final Builder clearContent()
      {
        this.content_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFDF & this.bitField0_);
        return this;
      }

      public final Builder clearConversationId()
      {
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        this.conversationId_ = Client.ChatMessage.getDefaultInstance().getConversationId();
        return this;
      }

      public final Builder clearId()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.id_ = Client.ChatMessage.getDefaultInstance().getId();
        return this;
      }

      public final Builder clearMessageClientId()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.messageClientId_ = Client.ChatMessage.getDefaultInstance().getMessageClientId();
        return this;
      }

      public final Builder clearReceiverState()
      {
        this.bitField0_ = (0xFFFFFEFF & this.bitField0_);
        this.receiverState_ = Client.ChatMessage.ReceiverState.UNKNOWN;
        return this;
      }

      public final Builder clearRecipientId()
      {
        this.recipientId_ = LazyStringArrayList.EMPTY;
        this.bitField0_ = (0xFFFFFDFF & this.bitField0_);
        return this;
      }

      public final Builder clearRetry()
      {
        this.bitField0_ = (0xFFFFFF7F & this.bitField0_);
        this.retry_ = false;
        return this;
      }

      public final Builder clearSenderId()
      {
        this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        this.senderId_ = Client.ChatMessage.getDefaultInstance().getSenderId();
        return this;
      }

      public final Builder clearShardingHint()
      {
        this.bitField0_ = (0xFFFFFFBF & this.bitField0_);
        this.shardingHint_ = Client.ChatMessage.getDefaultInstance().getShardingHint();
        return this;
      }

      public final Builder clearTimestamp()
      {
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.timestamp_ = 0L;
        return this;
      }

      public final Data.Content getContent(int paramInt)
      {
        return (Data.Content)this.content_.get(paramInt);
      }

      public final int getContentCount()
      {
        return this.content_.size();
      }

      public final List<Data.Content> getContentList()
      {
        return Collections.unmodifiableList(this.content_);
      }

      public final String getConversationId()
      {
        Object localObject = this.conversationId_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.conversationId_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final Client.ChatMessage getDefaultInstanceForType()
      {
        return Client.ChatMessage.getDefaultInstance();
      }

      public final String getId()
      {
        Object localObject = this.id_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.id_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final String getMessageClientId()
      {
        Object localObject = this.messageClientId_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.messageClientId_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final Client.ChatMessage.ReceiverState getReceiverState()
      {
        return this.receiverState_;
      }

      public final String getRecipientId(int paramInt)
      {
        return (String)this.recipientId_.get(paramInt);
      }

      public final int getRecipientIdCount()
      {
        return this.recipientId_.size();
      }

      public final List<String> getRecipientIdList()
      {
        return Collections.unmodifiableList(this.recipientId_);
      }

      public final boolean getRetry()
      {
        return this.retry_;
      }

      public final String getSenderId()
      {
        Object localObject = this.senderId_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.senderId_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final String getShardingHint()
      {
        Object localObject = this.shardingHint_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.shardingHint_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final long getTimestamp()
      {
        return this.timestamp_;
      }

      public final boolean hasConversationId()
      {
        if ((0x8 & this.bitField0_) == 8);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasId()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasMessageClientId()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean hasReceiverState()
      {
        if ((0x100 & this.bitField0_) == 256);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasRetry()
      {
        if ((0x80 & this.bitField0_) == 128);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasSenderId()
      {
        if ((0x10 & this.bitField0_) == 16);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasShardingHint()
      {
        if ((0x40 & this.bitField0_) == 64);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasTimestamp()
      {
        if ((0x4 & this.bitField0_) == 4);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Client.ChatMessage paramChatMessage)
      {
        if (paramChatMessage == Client.ChatMessage.getDefaultInstance());
        while (true)
        {
          return this;
          if (paramChatMessage.hasMessageClientId())
            setMessageClientId(paramChatMessage.getMessageClientId());
          if (paramChatMessage.hasId())
            setId(paramChatMessage.getId());
          if (paramChatMessage.hasTimestamp())
            setTimestamp(paramChatMessage.getTimestamp());
          if (paramChatMessage.hasConversationId())
            setConversationId(paramChatMessage.getConversationId());
          if (paramChatMessage.hasSenderId())
            setSenderId(paramChatMessage.getSenderId());
          if (!paramChatMessage.content_.isEmpty())
          {
            if (!this.content_.isEmpty())
              break label227;
            this.content_ = paramChatMessage.content_;
            this.bitField0_ = (0xFFFFFFDF & this.bitField0_);
          }
          while (true)
          {
            if (paramChatMessage.hasShardingHint())
              setShardingHint(paramChatMessage.getShardingHint());
            if (paramChatMessage.hasRetry())
              setRetry(paramChatMessage.getRetry());
            if (paramChatMessage.hasReceiverState())
              setReceiverState(paramChatMessage.getReceiverState());
            if (paramChatMessage.recipientId_.isEmpty())
              break;
            if (!this.recipientId_.isEmpty())
              break label248;
            this.recipientId_ = paramChatMessage.recipientId_;
            this.bitField0_ = (0xFFFFFDFF & this.bitField0_);
            break;
            label227: ensureContentIsMutable();
            this.content_.addAll(paramChatMessage.content_);
          }
          label248: ensureRecipientIdIsMutable();
          this.recipientId_.addAll(paramChatMessage.recipientId_);
        }
      }

      public final Builder setContent(int paramInt, Data.Content.Builder paramBuilder)
      {
        ensureContentIsMutable();
        this.content_.set(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder setContent(int paramInt, Data.Content paramContent)
      {
        if (paramContent == null)
          throw new NullPointerException();
        ensureContentIsMutable();
        this.content_.set(paramInt, paramContent);
        return this;
      }

      public final Builder setConversationId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x8 | this.bitField0_);
        this.conversationId_ = paramString;
        return this;
      }

      public final Builder setId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x2 | this.bitField0_);
        this.id_ = paramString;
        return this;
      }

      public final Builder setMessageClientId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x1 | this.bitField0_);
        this.messageClientId_ = paramString;
        return this;
      }

      public final Builder setReceiverState(Client.ChatMessage.ReceiverState paramReceiverState)
      {
        if (paramReceiverState == null)
          throw new NullPointerException();
        this.bitField0_ = (0x100 | this.bitField0_);
        this.receiverState_ = paramReceiverState;
        return this;
      }

      public final Builder setRecipientId(int paramInt, String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        ensureRecipientIdIsMutable();
        this.recipientId_.set(paramInt, paramString);
        return this;
      }

      public final Builder setRetry(boolean paramBoolean)
      {
        this.bitField0_ = (0x80 | this.bitField0_);
        this.retry_ = paramBoolean;
        return this;
      }

      public final Builder setSenderId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x10 | this.bitField0_);
        this.senderId_ = paramString;
        return this;
      }

      public final Builder setShardingHint(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x40 | this.bitField0_);
        this.shardingHint_ = paramString;
        return this;
      }

      public final Builder setTimestamp(long paramLong)
      {
        this.bitField0_ = (0x4 | this.bitField0_);
        this.timestamp_ = paramLong;
        return this;
      }
    }

    public static enum ReceiverState
      implements Internal.EnumLite
    {
      private static Internal.EnumLiteMap<ReceiverState> internalValueMap = new Internal.EnumLiteMap()
      {
      };
      private final int value;

      static
      {
        NO_RECEIPT = new ReceiverState("NO_RECEIPT", 1, 1);
        DELIVERED = new ReceiverState("DELIVERED", 2, 2);
        READ = new ReceiverState("READ", 3, 3);
        ReceiverState[] arrayOfReceiverState = new ReceiverState[4];
        arrayOfReceiverState[0] = UNKNOWN;
        arrayOfReceiverState[1] = NO_RECEIPT;
        arrayOfReceiverState[2] = DELIVERED;
        arrayOfReceiverState[3] = READ;
      }

      private ReceiverState(int paramInt1, int paramInt2)
      {
        this.value = paramInt1;
      }

      public static ReceiverState valueOf(int paramInt)
      {
        ReceiverState localReceiverState;
        switch (paramInt)
        {
        default:
          localReceiverState = null;
        case 0:
        case 1:
        case 2:
        case 3:
        }
        while (true)
        {
          return localReceiverState;
          localReceiverState = UNKNOWN;
          continue;
          localReceiverState = NO_RECEIPT;
          continue;
          localReceiverState = DELIVERED;
          continue;
          localReceiverState = READ;
        }
      }

      public final int getNumber()
      {
        return this.value;
      }
    }
  }

  public static abstract interface ChatMessageOrBuilder extends MessageLiteOrBuilder
  {
    public abstract Data.Content getContent(int paramInt);

    public abstract int getContentCount();

    public abstract List<Data.Content> getContentList();

    public abstract String getConversationId();

    public abstract String getId();

    public abstract String getMessageClientId();

    public abstract Client.ChatMessage.ReceiverState getReceiverState();

    public abstract String getRecipientId(int paramInt);

    public abstract int getRecipientIdCount();

    public abstract List<String> getRecipientIdList();

    public abstract boolean getRetry();

    public abstract String getSenderId();

    public abstract String getShardingHint();

    public abstract long getTimestamp();

    public abstract boolean hasConversationId();

    public abstract boolean hasId();

    public abstract boolean hasMessageClientId();

    public abstract boolean hasReceiverState();

    public abstract boolean hasRetry();

    public abstract boolean hasSenderId();

    public abstract boolean hasShardingHint();

    public abstract boolean hasTimestamp();
  }

  public static final class ChatMessageRequest extends GeneratedMessageLite
    implements Client.ChatMessageRequestOrBuilder
  {
    private static final ChatMessageRequest defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private List<Data.Content> content_;
    private Object conversationId_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private Object messageClientId_;
    private boolean retry_;
    private Data.StubbyInfo stubbyInfo_;

    static
    {
      ChatMessageRequest localChatMessageRequest = new ChatMessageRequest();
      defaultInstance = localChatMessageRequest;
      localChatMessageRequest.messageClientId_ = "";
      localChatMessageRequest.conversationId_ = "";
      localChatMessageRequest.content_ = Collections.emptyList();
      localChatMessageRequest.retry_ = false;
      localChatMessageRequest.stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
    }

    private ChatMessageRequest()
    {
    }

    private ChatMessageRequest(Builder paramBuilder)
    {
      super();
    }

    private ByteString getConversationIdBytes()
    {
      Object localObject = this.conversationId_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.conversationId_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static ChatMessageRequest getDefaultInstance()
    {
      return defaultInstance;
    }

    private ByteString getMessageClientIdBytes()
    {
      Object localObject = this.messageClientId_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.messageClientId_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static Builder newBuilder()
    {
      return Builder.access$100();
    }

    public static Builder newBuilder(ChatMessageRequest paramChatMessageRequest)
    {
      return Builder.access$100().mergeFrom(paramChatMessageRequest);
    }

    public final Data.Content getContent(int paramInt)
    {
      return (Data.Content)this.content_.get(paramInt);
    }

    public final int getContentCount()
    {
      return this.content_.size();
    }

    public final List<Data.Content> getContentList()
    {
      return this.content_;
    }

    public final Data.ContentOrBuilder getContentOrBuilder(int paramInt)
    {
      return (Data.ContentOrBuilder)this.content_.get(paramInt);
    }

    public final List<? extends Data.ContentOrBuilder> getContentOrBuilderList()
    {
      return this.content_;
    }

    public final String getConversationId()
    {
      Object localObject1 = this.conversationId_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.conversationId_ = str;
      }
    }

    public final ChatMessageRequest getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final String getMessageClientId()
    {
      Object localObject1 = this.messageClientId_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.messageClientId_ = str;
      }
    }

    public final boolean getRetry()
    {
      return this.retry_;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int n = i; ; n = k)
      {
        return n;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeBytesSize(1, getMessageClientIdBytes());
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeBytesSize(2, getConversationIdBytes());
        for (int m = 0; m < this.content_.size(); m++)
          k += CodedOutputStream.computeMessageSize(3, (MessageLite)this.content_.get(m));
        if ((0x4 & this.bitField0_) == 4)
          k += CodedOutputStream.computeBoolSize(4, this.retry_);
        if ((0x8 & this.bitField0_) == 8)
          k += CodedOutputStream.computeMessageSize(5, this.stubbyInfo_);
        this.memoizedSerializedSize = k;
      }
    }

    public final Data.StubbyInfo getStubbyInfo()
    {
      return this.stubbyInfo_;
    }

    public final boolean hasConversationId()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasMessageClientId()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean hasRetry()
    {
      if ((0x4 & this.bitField0_) == 4);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasStubbyInfo()
    {
      if ((0x8 & this.bitField0_) == 8);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeBytes(1, getMessageClientIdBytes());
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeBytes(2, getConversationIdBytes());
      for (int i = 0; i < this.content_.size(); i++)
        paramCodedOutputStream.writeMessage(3, (MessageLite)this.content_.get(i));
      if ((0x4 & this.bitField0_) == 4)
        paramCodedOutputStream.writeBool(4, this.retry_);
      if ((0x8 & this.bitField0_) == 8)
        paramCodedOutputStream.writeMessage(5, this.stubbyInfo_);
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Client.ChatMessageRequest, Builder>
      implements Client.ChatMessageRequestOrBuilder
    {
      private int bitField0_;
      private List<Data.Content> content_ = Collections.emptyList();
      private Object conversationId_ = "";
      private Object messageClientId_ = "";
      private boolean retry_;
      private Data.StubbyInfo stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private void ensureContentIsMutable()
      {
        if ((0x4 & this.bitField0_) != 4)
        {
          this.content_ = new ArrayList(this.content_);
          this.bitField0_ = (0x4 | this.bitField0_);
        }
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 10:
            this.bitField0_ = (0x1 | this.bitField0_);
            this.messageClientId_ = paramCodedInputStream.readBytes();
            break;
          case 18:
            this.bitField0_ = (0x2 | this.bitField0_);
            this.conversationId_ = paramCodedInputStream.readBytes();
            break;
          case 26:
            Data.Content.Builder localBuilder1 = Data.Content.newBuilder();
            paramCodedInputStream.readMessage(localBuilder1, paramExtensionRegistryLite);
            addContent(localBuilder1.buildPartial());
            break;
          case 32:
            this.bitField0_ = (0x8 | this.bitField0_);
            this.retry_ = paramCodedInputStream.readBool();
            break;
          case 42:
          }
          Data.StubbyInfo.Builder localBuilder = Data.StubbyInfo.newBuilder();
          if (hasStubbyInfo())
            localBuilder.mergeFrom(getStubbyInfo());
          paramCodedInputStream.readMessage(localBuilder, paramExtensionRegistryLite);
          setStubbyInfo(localBuilder.buildPartial());
        }
      }

      public final Builder addAllContent(Iterable<? extends Data.Content> paramIterable)
      {
        ensureContentIsMutable();
        GeneratedMessageLite.Builder.addAll(paramIterable, this.content_);
        return this;
      }

      public final Builder addContent(int paramInt, Data.Content.Builder paramBuilder)
      {
        ensureContentIsMutable();
        this.content_.add(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder addContent(int paramInt, Data.Content paramContent)
      {
        if (paramContent == null)
          throw new NullPointerException();
        ensureContentIsMutable();
        this.content_.add(paramInt, paramContent);
        return this;
      }

      public final Builder addContent(Data.Content.Builder paramBuilder)
      {
        ensureContentIsMutable();
        this.content_.add(paramBuilder.build());
        return this;
      }

      public final Builder addContent(Data.Content paramContent)
      {
        if (paramContent == null)
          throw new NullPointerException();
        ensureContentIsMutable();
        this.content_.add(paramContent);
        return this;
      }

      public final Client.ChatMessageRequest build()
      {
        Client.ChatMessageRequest localChatMessageRequest = buildPartial();
        if (!localChatMessageRequest.isInitialized())
          throw new UninitializedMessageException();
        return localChatMessageRequest;
      }

      public final Client.ChatMessageRequest buildPartial()
      {
        Client.ChatMessageRequest localChatMessageRequest = new Client.ChatMessageRequest(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Client.ChatMessageRequest.access$302(localChatMessageRequest, this.messageClientId_);
        if ((i & 0x2) == 2)
          k |= 2;
        Client.ChatMessageRequest.access$402(localChatMessageRequest, this.conversationId_);
        if ((0x4 & this.bitField0_) == 4)
        {
          this.content_ = Collections.unmodifiableList(this.content_);
          this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        }
        Client.ChatMessageRequest.access$502(localChatMessageRequest, this.content_);
        if ((i & 0x8) == 8)
          k |= 4;
        Client.ChatMessageRequest.access$602(localChatMessageRequest, this.retry_);
        if ((i & 0x10) == 16)
          k |= 8;
        Client.ChatMessageRequest.access$702(localChatMessageRequest, this.stubbyInfo_);
        Client.ChatMessageRequest.access$802(localChatMessageRequest, k);
        return localChatMessageRequest;
      }

      public final Builder clear()
      {
        super.clear();
        this.messageClientId_ = "";
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.conversationId_ = "";
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.content_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.retry_ = false;
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        this.stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        return this;
      }

      public final Builder clearContent()
      {
        this.content_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        return this;
      }

      public final Builder clearConversationId()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.conversationId_ = Client.ChatMessageRequest.getDefaultInstance().getConversationId();
        return this;
      }

      public final Builder clearMessageClientId()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.messageClientId_ = Client.ChatMessageRequest.getDefaultInstance().getMessageClientId();
        return this;
      }

      public final Builder clearRetry()
      {
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        this.retry_ = false;
        return this;
      }

      public final Builder clearStubbyInfo()
      {
        this.stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        return this;
      }

      public final Data.Content getContent(int paramInt)
      {
        return (Data.Content)this.content_.get(paramInt);
      }

      public final int getContentCount()
      {
        return this.content_.size();
      }

      public final List<Data.Content> getContentList()
      {
        return Collections.unmodifiableList(this.content_);
      }

      public final String getConversationId()
      {
        Object localObject = this.conversationId_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.conversationId_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final Client.ChatMessageRequest getDefaultInstanceForType()
      {
        return Client.ChatMessageRequest.getDefaultInstance();
      }

      public final String getMessageClientId()
      {
        Object localObject = this.messageClientId_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.messageClientId_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final boolean getRetry()
      {
        return this.retry_;
      }

      public final Data.StubbyInfo getStubbyInfo()
      {
        return this.stubbyInfo_;
      }

      public final boolean hasConversationId()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasMessageClientId()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean hasRetry()
      {
        if ((0x8 & this.bitField0_) == 8);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasStubbyInfo()
      {
        if ((0x10 & this.bitField0_) == 16);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Client.ChatMessageRequest paramChatMessageRequest)
      {
        if (paramChatMessageRequest == Client.ChatMessageRequest.getDefaultInstance());
        label84: 
        do
        {
          return this;
          if (paramChatMessageRequest.hasMessageClientId())
            setMessageClientId(paramChatMessageRequest.getMessageClientId());
          if (paramChatMessageRequest.hasConversationId())
            setConversationId(paramChatMessageRequest.getConversationId());
          if (!paramChatMessageRequest.content_.isEmpty())
          {
            if (!this.content_.isEmpty())
              break;
            this.content_ = paramChatMessageRequest.content_;
            this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
          }
          if (paramChatMessageRequest.hasRetry())
            setRetry(paramChatMessageRequest.getRetry());
        }
        while (!paramChatMessageRequest.hasStubbyInfo());
        Data.StubbyInfo localStubbyInfo = paramChatMessageRequest.getStubbyInfo();
        if (((0x10 & this.bitField0_) == 16) && (this.stubbyInfo_ != Data.StubbyInfo.getDefaultInstance()));
        for (this.stubbyInfo_ = Data.StubbyInfo.newBuilder(this.stubbyInfo_).mergeFrom(localStubbyInfo).buildPartial(); ; this.stubbyInfo_ = localStubbyInfo)
        {
          this.bitField0_ = (0x10 | this.bitField0_);
          break;
          ensureContentIsMutable();
          this.content_.addAll(paramChatMessageRequest.content_);
          break label84;
        }
      }

      public final Builder setContent(int paramInt, Data.Content.Builder paramBuilder)
      {
        ensureContentIsMutable();
        this.content_.set(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder setContent(int paramInt, Data.Content paramContent)
      {
        if (paramContent == null)
          throw new NullPointerException();
        ensureContentIsMutable();
        this.content_.set(paramInt, paramContent);
        return this;
      }

      public final Builder setConversationId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x2 | this.bitField0_);
        this.conversationId_ = paramString;
        return this;
      }

      public final Builder setMessageClientId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x1 | this.bitField0_);
        this.messageClientId_ = paramString;
        return this;
      }

      public final Builder setRetry(boolean paramBoolean)
      {
        this.bitField0_ = (0x8 | this.bitField0_);
        this.retry_ = paramBoolean;
        return this;
      }

      public final Builder setStubbyInfo(Data.StubbyInfo.Builder paramBuilder)
      {
        this.stubbyInfo_ = paramBuilder.build();
        this.bitField0_ = (0x10 | this.bitField0_);
        return this;
      }

      public final Builder setStubbyInfo(Data.StubbyInfo paramStubbyInfo)
      {
        if (paramStubbyInfo == null)
          throw new NullPointerException();
        this.stubbyInfo_ = paramStubbyInfo;
        this.bitField0_ = (0x10 | this.bitField0_);
        return this;
      }
    }
  }

  public static abstract interface ChatMessageRequestOrBuilder extends MessageLiteOrBuilder
  {
    public abstract Data.Content getContent(int paramInt);

    public abstract int getContentCount();

    public abstract List<Data.Content> getContentList();

    public abstract String getConversationId();

    public abstract String getMessageClientId();

    public abstract boolean getRetry();

    public abstract Data.StubbyInfo getStubbyInfo();

    public abstract boolean hasConversationId();

    public abstract boolean hasMessageClientId();

    public abstract boolean hasRetry();

    public abstract boolean hasStubbyInfo();
  }

  public static final class ChatMessageResponse extends GeneratedMessageLite
    implements Client.ChatMessageResponseOrBuilder
  {
    private static final ChatMessageResponse defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private Object conversationId_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private Object messageClientId_;
    private Object requestError_;
    private Data.ResponseStatus status_;
    private long timestamp_;

    static
    {
      ChatMessageResponse localChatMessageResponse = new ChatMessageResponse();
      defaultInstance = localChatMessageResponse;
      localChatMessageResponse.status_ = Data.ResponseStatus.OK;
      localChatMessageResponse.requestError_ = "";
      localChatMessageResponse.messageClientId_ = "";
      localChatMessageResponse.timestamp_ = 0L;
      localChatMessageResponse.conversationId_ = "";
    }

    private ChatMessageResponse()
    {
    }

    private ChatMessageResponse(Builder paramBuilder)
    {
      super();
    }

    private ByteString getConversationIdBytes()
    {
      Object localObject = this.conversationId_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.conversationId_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static ChatMessageResponse getDefaultInstance()
    {
      return defaultInstance;
    }

    private ByteString getMessageClientIdBytes()
    {
      Object localObject = this.messageClientId_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.messageClientId_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    private ByteString getRequestErrorBytes()
    {
      Object localObject = this.requestError_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.requestError_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static Builder newBuilder()
    {
      return Builder.access$1000();
    }

    public static Builder newBuilder(ChatMessageResponse paramChatMessageResponse)
    {
      return Builder.access$1000().mergeFrom(paramChatMessageResponse);
    }

    public final String getConversationId()
    {
      Object localObject1 = this.conversationId_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.conversationId_ = str;
      }
    }

    public final ChatMessageResponse getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final String getMessageClientId()
    {
      Object localObject1 = this.messageClientId_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.messageClientId_ = str;
      }
    }

    public final String getRequestError()
    {
      Object localObject1 = this.requestError_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.requestError_ = str;
      }
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeEnumSize(1, this.status_.getNumber());
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeBytesSize(2, getRequestErrorBytes());
        if ((0x4 & this.bitField0_) == 4)
          k += CodedOutputStream.computeBytesSize(3, getMessageClientIdBytes());
        if ((0x8 & this.bitField0_) == 8)
          k += CodedOutputStream.computeInt64Size(4, this.timestamp_);
        if ((0x10 & this.bitField0_) == 16)
          k += CodedOutputStream.computeBytesSize(5, getConversationIdBytes());
        this.memoizedSerializedSize = k;
      }
    }

    public final Data.ResponseStatus getStatus()
    {
      return this.status_;
    }

    public final long getTimestamp()
    {
      return this.timestamp_;
    }

    public final boolean hasConversationId()
    {
      if ((0x10 & this.bitField0_) == 16);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasMessageClientId()
    {
      if ((0x4 & this.bitField0_) == 4);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasRequestError()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasStatus()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean hasTimestamp()
    {
      if ((0x8 & this.bitField0_) == 8);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeEnum(1, this.status_.getNumber());
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeBytes(2, getRequestErrorBytes());
      if ((0x4 & this.bitField0_) == 4)
        paramCodedOutputStream.writeBytes(3, getMessageClientIdBytes());
      if ((0x8 & this.bitField0_) == 8)
        paramCodedOutputStream.writeInt64(4, this.timestamp_);
      if ((0x10 & this.bitField0_) == 16)
        paramCodedOutputStream.writeBytes(5, getConversationIdBytes());
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Client.ChatMessageResponse, Builder>
      implements Client.ChatMessageResponseOrBuilder
    {
      private int bitField0_;
      private Object conversationId_ = "";
      private Object messageClientId_ = "";
      private Object requestError_ = "";
      private Data.ResponseStatus status_ = Data.ResponseStatus.OK;
      private long timestamp_;

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 8:
            Data.ResponseStatus localResponseStatus = Data.ResponseStatus.valueOf(paramCodedInputStream.readEnum());
            if (localResponseStatus == null)
              continue;
            this.bitField0_ = (0x1 | this.bitField0_);
            this.status_ = localResponseStatus;
            break;
          case 18:
            this.bitField0_ = (0x2 | this.bitField0_);
            this.requestError_ = paramCodedInputStream.readBytes();
            break;
          case 26:
            this.bitField0_ = (0x4 | this.bitField0_);
            this.messageClientId_ = paramCodedInputStream.readBytes();
            break;
          case 32:
            this.bitField0_ = (0x8 | this.bitField0_);
            this.timestamp_ = paramCodedInputStream.readInt64();
            break;
          case 42:
          }
          this.bitField0_ = (0x10 | this.bitField0_);
          this.conversationId_ = paramCodedInputStream.readBytes();
        }
      }

      public final Client.ChatMessageResponse build()
      {
        Client.ChatMessageResponse localChatMessageResponse = buildPartial();
        if (!localChatMessageResponse.isInitialized())
          throw new UninitializedMessageException();
        return localChatMessageResponse;
      }

      public final Client.ChatMessageResponse buildPartial()
      {
        Client.ChatMessageResponse localChatMessageResponse = new Client.ChatMessageResponse(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Client.ChatMessageResponse.access$1202(localChatMessageResponse, this.status_);
        if ((i & 0x2) == 2)
          k |= 2;
        Client.ChatMessageResponse.access$1302(localChatMessageResponse, this.requestError_);
        if ((i & 0x4) == 4)
          k |= 4;
        Client.ChatMessageResponse.access$1402(localChatMessageResponse, this.messageClientId_);
        if ((i & 0x8) == 8)
          k |= 8;
        Client.ChatMessageResponse.access$1502(localChatMessageResponse, this.timestamp_);
        if ((i & 0x10) == 16)
          k |= 16;
        Client.ChatMessageResponse.access$1602(localChatMessageResponse, this.conversationId_);
        Client.ChatMessageResponse.access$1702(localChatMessageResponse, k);
        return localChatMessageResponse;
      }

      public final Builder clear()
      {
        super.clear();
        this.status_ = Data.ResponseStatus.OK;
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.requestError_ = "";
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.messageClientId_ = "";
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.timestamp_ = 0L;
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        this.conversationId_ = "";
        this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        return this;
      }

      public final Builder clearConversationId()
      {
        this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        this.conversationId_ = Client.ChatMessageResponse.getDefaultInstance().getConversationId();
        return this;
      }

      public final Builder clearMessageClientId()
      {
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.messageClientId_ = Client.ChatMessageResponse.getDefaultInstance().getMessageClientId();
        return this;
      }

      public final Builder clearRequestError()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.requestError_ = Client.ChatMessageResponse.getDefaultInstance().getRequestError();
        return this;
      }

      public final Builder clearStatus()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.status_ = Data.ResponseStatus.OK;
        return this;
      }

      public final Builder clearTimestamp()
      {
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        this.timestamp_ = 0L;
        return this;
      }

      public final String getConversationId()
      {
        Object localObject = this.conversationId_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.conversationId_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final Client.ChatMessageResponse getDefaultInstanceForType()
      {
        return Client.ChatMessageResponse.getDefaultInstance();
      }

      public final String getMessageClientId()
      {
        Object localObject = this.messageClientId_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.messageClientId_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final String getRequestError()
      {
        Object localObject = this.requestError_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.requestError_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final Data.ResponseStatus getStatus()
      {
        return this.status_;
      }

      public final long getTimestamp()
      {
        return this.timestamp_;
      }

      public final boolean hasConversationId()
      {
        if ((0x10 & this.bitField0_) == 16);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasMessageClientId()
      {
        if ((0x4 & this.bitField0_) == 4);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasRequestError()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasStatus()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean hasTimestamp()
      {
        if ((0x8 & this.bitField0_) == 8);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Client.ChatMessageResponse paramChatMessageResponse)
      {
        if (paramChatMessageResponse == Client.ChatMessageResponse.getDefaultInstance());
        while (true)
        {
          return this;
          if (paramChatMessageResponse.hasStatus())
            setStatus(paramChatMessageResponse.getStatus());
          if (paramChatMessageResponse.hasRequestError())
            setRequestError(paramChatMessageResponse.getRequestError());
          if (paramChatMessageResponse.hasMessageClientId())
            setMessageClientId(paramChatMessageResponse.getMessageClientId());
          if (paramChatMessageResponse.hasTimestamp())
            setTimestamp(paramChatMessageResponse.getTimestamp());
          if (paramChatMessageResponse.hasConversationId())
            setConversationId(paramChatMessageResponse.getConversationId());
        }
      }

      public final Builder setConversationId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x10 | this.bitField0_);
        this.conversationId_ = paramString;
        return this;
      }

      public final Builder setMessageClientId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x4 | this.bitField0_);
        this.messageClientId_ = paramString;
        return this;
      }

      public final Builder setRequestError(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x2 | this.bitField0_);
        this.requestError_ = paramString;
        return this;
      }

      public final Builder setStatus(Data.ResponseStatus paramResponseStatus)
      {
        if (paramResponseStatus == null)
          throw new NullPointerException();
        this.bitField0_ = (0x1 | this.bitField0_);
        this.status_ = paramResponseStatus;
        return this;
      }

      public final Builder setTimestamp(long paramLong)
      {
        this.bitField0_ = (0x8 | this.bitField0_);
        this.timestamp_ = paramLong;
        return this;
      }
    }
  }

  public static abstract interface ChatMessageResponseOrBuilder extends MessageLiteOrBuilder
  {
    public abstract String getConversationId();

    public abstract String getMessageClientId();

    public abstract String getRequestError();

    public abstract Data.ResponseStatus getStatus();

    public abstract long getTimestamp();

    public abstract boolean hasConversationId();

    public abstract boolean hasMessageClientId();

    public abstract boolean hasRequestError();

    public abstract boolean hasStatus();

    public abstract boolean hasTimestamp();
  }

  public static final class ClientConversation extends GeneratedMessageLite
    implements Client.ClientConversationOrBuilder
  {
    private static final ClientConversation defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private Object conversationClientId_;
    private Data.ConversationMetadata conversationMetadata_;
    private long createdAt_;
    private long firstEventTimestamp_;
    private boolean hidden_;
    private Object id_;
    private List<Data.Participant> inactiveParticipant_;
    private Data.Participant inviter_;
    private Client.ChatMessage lastMessage_;
    private Client.EventStreamResponse.Event lastPreviewEvent_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private boolean muted_;
    private Object name_;
    private boolean needsAccept_;
    private boolean offTheRecord_;
    private LazyStringList participantId_;
    private List<Data.Participant> participant_;
    private Data.ConversationType type_;
    private long unreadCount_;

    static
    {
      ClientConversation localClientConversation = new ClientConversation();
      defaultInstance = localClientConversation;
      localClientConversation.id_ = "";
      localClientConversation.type_ = Data.ConversationType.ONE_TO_ONE;
      localClientConversation.offTheRecord_ = false;
      localClientConversation.participantId_ = LazyStringArrayList.EMPTY;
      localClientConversation.name_ = "";
      localClientConversation.muted_ = false;
      localClientConversation.unreadCount_ = 0L;
      localClientConversation.participant_ = Collections.emptyList();
      localClientConversation.needsAccept_ = false;
      localClientConversation.inactiveParticipant_ = Collections.emptyList();
      localClientConversation.createdAt_ = 0L;
      localClientConversation.hidden_ = false;
      localClientConversation.inviter_ = Data.Participant.getDefaultInstance();
      localClientConversation.conversationClientId_ = "";
      localClientConversation.conversationMetadata_ = Data.ConversationMetadata.getDefaultInstance();
      localClientConversation.lastPreviewEvent_ = Client.EventStreamResponse.Event.getDefaultInstance();
      localClientConversation.firstEventTimestamp_ = 0L;
      localClientConversation.lastMessage_ = Client.ChatMessage.getDefaultInstance();
    }

    private ClientConversation()
    {
    }

    private ClientConversation(Builder paramBuilder)
    {
      super();
    }

    private ByteString getConversationClientIdBytes()
    {
      Object localObject = this.conversationClientId_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.conversationClientId_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static ClientConversation getDefaultInstance()
    {
      return defaultInstance;
    }

    private ByteString getIdBytes()
    {
      Object localObject = this.id_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.id_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    private ByteString getNameBytes()
    {
      Object localObject = this.name_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.name_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static Builder newBuilder()
    {
      return Builder.access$3300();
    }

    public static Builder newBuilder(ClientConversation paramClientConversation)
    {
      return Builder.access$3300().mergeFrom(paramClientConversation);
    }

    public final String getConversationClientId()
    {
      Object localObject1 = this.conversationClientId_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.conversationClientId_ = str;
      }
    }

    public final Data.ConversationMetadata getConversationMetadata()
    {
      return this.conversationMetadata_;
    }

    public final long getCreatedAt()
    {
      return this.createdAt_;
    }

    public final ClientConversation getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final long getFirstEventTimestamp()
    {
      return this.firstEventTimestamp_;
    }

    public final boolean getHidden()
    {
      return this.hidden_;
    }

    public final String getId()
    {
      Object localObject1 = this.id_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.id_ = str;
      }
    }

    public final Data.Participant getInactiveParticipant(int paramInt)
    {
      return (Data.Participant)this.inactiveParticipant_.get(paramInt);
    }

    public final int getInactiveParticipantCount()
    {
      return this.inactiveParticipant_.size();
    }

    public final List<Data.Participant> getInactiveParticipantList()
    {
      return this.inactiveParticipant_;
    }

    public final Data.ParticipantOrBuilder getInactiveParticipantOrBuilder(int paramInt)
    {
      return (Data.ParticipantOrBuilder)this.inactiveParticipant_.get(paramInt);
    }

    public final List<? extends Data.ParticipantOrBuilder> getInactiveParticipantOrBuilderList()
    {
      return this.inactiveParticipant_;
    }

    public final Data.Participant getInviter()
    {
      return this.inviter_;
    }

    public final Client.ChatMessage getLastMessage()
    {
      return this.lastMessage_;
    }

    public final Client.EventStreamResponse.Event getLastPreviewEvent()
    {
      return this.lastPreviewEvent_;
    }

    public final boolean getMuted()
    {
      return this.muted_;
    }

    public final String getName()
    {
      Object localObject1 = this.name_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.name_ = str;
      }
    }

    public final boolean getNeedsAccept()
    {
      return this.needsAccept_;
    }

    public final boolean getOffTheRecord()
    {
      return this.offTheRecord_;
    }

    public final Data.Participant getParticipant(int paramInt)
    {
      return (Data.Participant)this.participant_.get(paramInt);
    }

    public final int getParticipantCount()
    {
      return this.participant_.size();
    }

    public final String getParticipantId(int paramInt)
    {
      return (String)this.participantId_.get(paramInt);
    }

    public final int getParticipantIdCount()
    {
      return this.participantId_.size();
    }

    public final List<String> getParticipantIdList()
    {
      return this.participantId_;
    }

    public final List<Data.Participant> getParticipantList()
    {
      return this.participant_;
    }

    public final Data.ParticipantOrBuilder getParticipantOrBuilder(int paramInt)
    {
      return (Data.ParticipantOrBuilder)this.participant_.get(paramInt);
    }

    public final List<? extends Data.ParticipantOrBuilder> getParticipantOrBuilderList()
    {
      return this.participant_;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int i1;
      for (int i4 = i; ; i4 = i1)
      {
        return i4;
        int j = 0x1 & this.bitField0_;
        int k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeBytesSize(1, getIdBytes());
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeEnumSize(2, this.type_.getNumber());
        if ((0x4 & this.bitField0_) == 4)
          k += CodedOutputStream.computeBoolSize(4, this.offTheRecord_);
        int m = 0;
        for (int n = 0; n < this.participantId_.size(); n++)
          m += CodedOutputStream.computeBytesSizeNoTag(this.participantId_.getByteString(n));
        i1 = k + m + 1 * getParticipantIdList().size();
        if ((0x8 & this.bitField0_) == 8)
          i1 += CodedOutputStream.computeBytesSize(6, getNameBytes());
        if ((0x4000 & this.bitField0_) == 16384)
          i1 += CodedOutputStream.computeMessageSize(7, this.lastMessage_);
        if ((0x10 & this.bitField0_) == 16)
          i1 += CodedOutputStream.computeBoolSize(8, this.muted_);
        if ((0x20 & this.bitField0_) == 32)
          i1 += CodedOutputStream.computeInt64Size(9, this.unreadCount_);
        for (int i2 = 0; i2 < this.participant_.size(); i2++)
          i1 += CodedOutputStream.computeMessageSize(10, (MessageLite)this.participant_.get(i2));
        if ((0x40 & this.bitField0_) == 64)
          i1 += CodedOutputStream.computeBoolSize(11, this.needsAccept_);
        if ((0x200 & this.bitField0_) == 512)
          i1 += CodedOutputStream.computeMessageSize(12, this.inviter_);
        for (int i3 = 0; i3 < this.inactiveParticipant_.size(); i3++)
          i1 += CodedOutputStream.computeMessageSize(13, (MessageLite)this.inactiveParticipant_.get(i3));
        if ((0x80 & this.bitField0_) == 128)
          i1 += CodedOutputStream.computeInt64Size(14, this.createdAt_);
        if ((0x100 & this.bitField0_) == 256)
          i1 += CodedOutputStream.computeBoolSize(15, this.hidden_);
        if ((0x400 & this.bitField0_) == 1024)
          i1 += CodedOutputStream.computeBytesSize(16, getConversationClientIdBytes());
        if ((0x800 & this.bitField0_) == 2048)
          i1 += CodedOutputStream.computeMessageSize(17, this.conversationMetadata_);
        if ((0x1000 & this.bitField0_) == 4096)
          i1 += CodedOutputStream.computeMessageSize(18, this.lastPreviewEvent_);
        if ((0x2000 & this.bitField0_) == 8192)
          i1 += CodedOutputStream.computeInt64Size(19, this.firstEventTimestamp_);
        this.memoizedSerializedSize = i1;
      }
    }

    public final Data.ConversationType getType()
    {
      return this.type_;
    }

    public final long getUnreadCount()
    {
      return this.unreadCount_;
    }

    public final boolean hasConversationClientId()
    {
      if ((0x400 & this.bitField0_) == 1024);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasConversationMetadata()
    {
      if ((0x800 & this.bitField0_) == 2048);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasCreatedAt()
    {
      if ((0x80 & this.bitField0_) == 128);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasFirstEventTimestamp()
    {
      if ((0x2000 & this.bitField0_) == 8192);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasHidden()
    {
      if ((0x100 & this.bitField0_) == 256);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasId()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean hasInviter()
    {
      if ((0x200 & this.bitField0_) == 512);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasLastMessage()
    {
      if ((0x4000 & this.bitField0_) == 16384);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasLastPreviewEvent()
    {
      if ((0x1000 & this.bitField0_) == 4096);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasMuted()
    {
      if ((0x10 & this.bitField0_) == 16);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasName()
    {
      if ((0x8 & this.bitField0_) == 8);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasNeedsAccept()
    {
      if ((0x40 & this.bitField0_) == 64);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasOffTheRecord()
    {
      if ((0x4 & this.bitField0_) == 4);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasType()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasUnreadCount()
    {
      if ((0x20 & this.bitField0_) == 32);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeBytes(1, getIdBytes());
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeEnum(2, this.type_.getNumber());
      if ((0x4 & this.bitField0_) == 4)
        paramCodedOutputStream.writeBool(4, this.offTheRecord_);
      for (int i = 0; i < this.participantId_.size(); i++)
        paramCodedOutputStream.writeBytes(5, this.participantId_.getByteString(i));
      if ((0x8 & this.bitField0_) == 8)
        paramCodedOutputStream.writeBytes(6, getNameBytes());
      if ((0x4000 & this.bitField0_) == 16384)
        paramCodedOutputStream.writeMessage(7, this.lastMessage_);
      if ((0x10 & this.bitField0_) == 16)
        paramCodedOutputStream.writeBool(8, this.muted_);
      if ((0x20 & this.bitField0_) == 32)
        paramCodedOutputStream.writeInt64(9, this.unreadCount_);
      for (int j = 0; j < this.participant_.size(); j++)
        paramCodedOutputStream.writeMessage(10, (MessageLite)this.participant_.get(j));
      if ((0x40 & this.bitField0_) == 64)
        paramCodedOutputStream.writeBool(11, this.needsAccept_);
      if ((0x200 & this.bitField0_) == 512)
        paramCodedOutputStream.writeMessage(12, this.inviter_);
      for (int k = 0; k < this.inactiveParticipant_.size(); k++)
        paramCodedOutputStream.writeMessage(13, (MessageLite)this.inactiveParticipant_.get(k));
      if ((0x80 & this.bitField0_) == 128)
        paramCodedOutputStream.writeInt64(14, this.createdAt_);
      if ((0x100 & this.bitField0_) == 256)
        paramCodedOutputStream.writeBool(15, this.hidden_);
      if ((0x400 & this.bitField0_) == 1024)
        paramCodedOutputStream.writeBytes(16, getConversationClientIdBytes());
      if ((0x800 & this.bitField0_) == 2048)
        paramCodedOutputStream.writeMessage(17, this.conversationMetadata_);
      if ((0x1000 & this.bitField0_) == 4096)
        paramCodedOutputStream.writeMessage(18, this.lastPreviewEvent_);
      if ((0x2000 & this.bitField0_) == 8192)
        paramCodedOutputStream.writeInt64(19, this.firstEventTimestamp_);
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Client.ClientConversation, Builder>
      implements Client.ClientConversationOrBuilder
    {
      private int bitField0_;
      private Object conversationClientId_ = "";
      private Data.ConversationMetadata conversationMetadata_ = Data.ConversationMetadata.getDefaultInstance();
      private long createdAt_;
      private long firstEventTimestamp_;
      private boolean hidden_;
      private Object id_ = "";
      private List<Data.Participant> inactiveParticipant_ = Collections.emptyList();
      private Data.Participant inviter_ = Data.Participant.getDefaultInstance();
      private Client.ChatMessage lastMessage_ = Client.ChatMessage.getDefaultInstance();
      private Client.EventStreamResponse.Event lastPreviewEvent_ = Client.EventStreamResponse.Event.getDefaultInstance();
      private boolean muted_;
      private Object name_ = "";
      private boolean needsAccept_;
      private boolean offTheRecord_;
      private LazyStringList participantId_ = LazyStringArrayList.EMPTY;
      private List<Data.Participant> participant_ = Collections.emptyList();
      private Data.ConversationType type_ = Data.ConversationType.ONE_TO_ONE;
      private long unreadCount_;

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private void ensureInactiveParticipantIsMutable()
      {
        if ((0x200 & this.bitField0_) != 512)
        {
          this.inactiveParticipant_ = new ArrayList(this.inactiveParticipant_);
          this.bitField0_ = (0x200 | this.bitField0_);
        }
      }

      private void ensureParticipantIdIsMutable()
      {
        if ((0x8 & this.bitField0_) != 8)
        {
          this.participantId_ = new LazyStringArrayList(this.participantId_);
          this.bitField0_ = (0x8 | this.bitField0_);
        }
      }

      private void ensureParticipantIsMutable()
      {
        if ((0x80 & this.bitField0_) != 128)
        {
          this.participant_ = new ArrayList(this.participant_);
          this.bitField0_ = (0x80 | this.bitField0_);
        }
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 10:
            this.bitField0_ = (0x1 | this.bitField0_);
            this.id_ = paramCodedInputStream.readBytes();
            break;
          case 16:
            Data.ConversationType localConversationType = Data.ConversationType.valueOf(paramCodedInputStream.readEnum());
            if (localConversationType == null)
              continue;
            this.bitField0_ = (0x2 | this.bitField0_);
            this.type_ = localConversationType;
            break;
          case 32:
            this.bitField0_ = (0x4 | this.bitField0_);
            this.offTheRecord_ = paramCodedInputStream.readBool();
            break;
          case 42:
            ensureParticipantIdIsMutable();
            this.participantId_.add(paramCodedInputStream.readBytes());
            break;
          case 50:
            this.bitField0_ = (0x10 | this.bitField0_);
            this.name_ = paramCodedInputStream.readBytes();
            break;
          case 58:
            Client.ChatMessage.Builder localBuilder5 = Client.ChatMessage.newBuilder();
            if (hasLastMessage())
              localBuilder5.mergeFrom(getLastMessage());
            paramCodedInputStream.readMessage(localBuilder5, paramExtensionRegistryLite);
            setLastMessage(localBuilder5.buildPartial());
            break;
          case 64:
            this.bitField0_ = (0x20 | this.bitField0_);
            this.muted_ = paramCodedInputStream.readBool();
            break;
          case 72:
            this.bitField0_ = (0x40 | this.bitField0_);
            this.unreadCount_ = paramCodedInputStream.readInt64();
            break;
          case 82:
            Data.Participant.Builder localBuilder4 = Data.Participant.newBuilder();
            paramCodedInputStream.readMessage(localBuilder4, paramExtensionRegistryLite);
            addParticipant(localBuilder4.buildPartial());
            break;
          case 88:
            this.bitField0_ = (0x100 | this.bitField0_);
            this.needsAccept_ = paramCodedInputStream.readBool();
            break;
          case 98:
            Data.Participant.Builder localBuilder3 = Data.Participant.newBuilder();
            if (hasInviter())
              localBuilder3.mergeFrom(getInviter());
            paramCodedInputStream.readMessage(localBuilder3, paramExtensionRegistryLite);
            setInviter(localBuilder3.buildPartial());
            break;
          case 106:
            Data.Participant.Builder localBuilder2 = Data.Participant.newBuilder();
            paramCodedInputStream.readMessage(localBuilder2, paramExtensionRegistryLite);
            addInactiveParticipant(localBuilder2.buildPartial());
            break;
          case 112:
            this.bitField0_ = (0x400 | this.bitField0_);
            this.createdAt_ = paramCodedInputStream.readInt64();
            break;
          case 120:
            this.bitField0_ = (0x800 | this.bitField0_);
            this.hidden_ = paramCodedInputStream.readBool();
            break;
          case 130:
            this.bitField0_ = (0x2000 | this.bitField0_);
            this.conversationClientId_ = paramCodedInputStream.readBytes();
            break;
          case 138:
            Data.ConversationMetadata.Builder localBuilder1 = Data.ConversationMetadata.newBuilder();
            if (hasConversationMetadata())
              localBuilder1.mergeFrom(getConversationMetadata());
            paramCodedInputStream.readMessage(localBuilder1, paramExtensionRegistryLite);
            setConversationMetadata(localBuilder1.buildPartial());
            break;
          case 146:
            Client.EventStreamResponse.Event.Builder localBuilder = Client.EventStreamResponse.Event.newBuilder();
            if (hasLastPreviewEvent())
              localBuilder.mergeFrom(getLastPreviewEvent());
            paramCodedInputStream.readMessage(localBuilder, paramExtensionRegistryLite);
            setLastPreviewEvent(localBuilder.buildPartial());
            break;
          case 152:
          }
          this.bitField0_ = (0x10000 | this.bitField0_);
          this.firstEventTimestamp_ = paramCodedInputStream.readInt64();
        }
      }

      public final Builder addAllInactiveParticipant(Iterable<? extends Data.Participant> paramIterable)
      {
        ensureInactiveParticipantIsMutable();
        GeneratedMessageLite.Builder.addAll(paramIterable, this.inactiveParticipant_);
        return this;
      }

      public final Builder addAllParticipant(Iterable<? extends Data.Participant> paramIterable)
      {
        ensureParticipantIsMutable();
        GeneratedMessageLite.Builder.addAll(paramIterable, this.participant_);
        return this;
      }

      public final Builder addAllParticipantId(Iterable<String> paramIterable)
      {
        ensureParticipantIdIsMutable();
        GeneratedMessageLite.Builder.addAll(paramIterable, this.participantId_);
        return this;
      }

      public final Builder addInactiveParticipant(int paramInt, Data.Participant.Builder paramBuilder)
      {
        ensureInactiveParticipantIsMutable();
        this.inactiveParticipant_.add(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder addInactiveParticipant(int paramInt, Data.Participant paramParticipant)
      {
        if (paramParticipant == null)
          throw new NullPointerException();
        ensureInactiveParticipantIsMutable();
        this.inactiveParticipant_.add(paramInt, paramParticipant);
        return this;
      }

      public final Builder addInactiveParticipant(Data.Participant.Builder paramBuilder)
      {
        ensureInactiveParticipantIsMutable();
        this.inactiveParticipant_.add(paramBuilder.build());
        return this;
      }

      public final Builder addInactiveParticipant(Data.Participant paramParticipant)
      {
        if (paramParticipant == null)
          throw new NullPointerException();
        ensureInactiveParticipantIsMutable();
        this.inactiveParticipant_.add(paramParticipant);
        return this;
      }

      public final Builder addParticipant(int paramInt, Data.Participant.Builder paramBuilder)
      {
        ensureParticipantIsMutable();
        this.participant_.add(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder addParticipant(int paramInt, Data.Participant paramParticipant)
      {
        if (paramParticipant == null)
          throw new NullPointerException();
        ensureParticipantIsMutable();
        this.participant_.add(paramInt, paramParticipant);
        return this;
      }

      public final Builder addParticipant(Data.Participant.Builder paramBuilder)
      {
        ensureParticipantIsMutable();
        this.participant_.add(paramBuilder.build());
        return this;
      }

      public final Builder addParticipant(Data.Participant paramParticipant)
      {
        if (paramParticipant == null)
          throw new NullPointerException();
        ensureParticipantIsMutable();
        this.participant_.add(paramParticipant);
        return this;
      }

      public final Builder addParticipantId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        ensureParticipantIdIsMutable();
        this.participantId_.add(paramString);
        return this;
      }

      public final Client.ClientConversation build()
      {
        Client.ClientConversation localClientConversation = buildPartial();
        if (!localClientConversation.isInitialized())
          throw new UninitializedMessageException();
        return localClientConversation;
      }

      public final Client.ClientConversation buildPartial()
      {
        Client.ClientConversation localClientConversation = new Client.ClientConversation(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Client.ClientConversation.access$3502(localClientConversation, this.id_);
        if ((i & 0x2) == 2)
          k |= 2;
        Client.ClientConversation.access$3602(localClientConversation, this.type_);
        if ((i & 0x4) == 4)
          k |= 4;
        Client.ClientConversation.access$3702(localClientConversation, this.offTheRecord_);
        if ((0x8 & this.bitField0_) == 8)
        {
          this.participantId_ = new UnmodifiableLazyStringList(this.participantId_);
          this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        }
        Client.ClientConversation.access$3802(localClientConversation, this.participantId_);
        if ((i & 0x10) == 16)
          k |= 8;
        Client.ClientConversation.access$3902(localClientConversation, this.name_);
        if ((i & 0x20) == 32)
          k |= 16;
        Client.ClientConversation.access$4002(localClientConversation, this.muted_);
        if ((i & 0x40) == 64)
          k |= 32;
        Client.ClientConversation.access$4102(localClientConversation, this.unreadCount_);
        if ((0x80 & this.bitField0_) == 128)
        {
          this.participant_ = Collections.unmodifiableList(this.participant_);
          this.bitField0_ = (0xFFFFFF7F & this.bitField0_);
        }
        Client.ClientConversation.access$4202(localClientConversation, this.participant_);
        if ((i & 0x100) == 256)
          k |= 64;
        Client.ClientConversation.access$4302(localClientConversation, this.needsAccept_);
        if ((0x200 & this.bitField0_) == 512)
        {
          this.inactiveParticipant_ = Collections.unmodifiableList(this.inactiveParticipant_);
          this.bitField0_ = (0xFFFFFDFF & this.bitField0_);
        }
        Client.ClientConversation.access$4402(localClientConversation, this.inactiveParticipant_);
        if ((i & 0x400) == 1024)
          k |= 128;
        Client.ClientConversation.access$4502(localClientConversation, this.createdAt_);
        if ((i & 0x800) == 2048)
          k |= 256;
        Client.ClientConversation.access$4602(localClientConversation, this.hidden_);
        if ((i & 0x1000) == 4096)
          k |= 512;
        Client.ClientConversation.access$4702(localClientConversation, this.inviter_);
        if ((i & 0x2000) == 8192)
          k |= 1024;
        Client.ClientConversation.access$4802(localClientConversation, this.conversationClientId_);
        if ((i & 0x4000) == 16384)
          k |= 2048;
        Client.ClientConversation.access$4902(localClientConversation, this.conversationMetadata_);
        if ((i & 0x8000) == 32768)
          k |= 4096;
        Client.ClientConversation.access$5002(localClientConversation, this.lastPreviewEvent_);
        if ((i & 0x10000) == 65536)
          k |= 8192;
        Client.ClientConversation.access$5102(localClientConversation, this.firstEventTimestamp_);
        if ((i & 0x20000) == 131072)
          k |= 16384;
        Client.ClientConversation.access$5202(localClientConversation, this.lastMessage_);
        Client.ClientConversation.access$5302(localClientConversation, k);
        return localClientConversation;
      }

      public final Builder clear()
      {
        super.clear();
        this.id_ = "";
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.type_ = Data.ConversationType.ONE_TO_ONE;
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.offTheRecord_ = false;
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.participantId_ = LazyStringArrayList.EMPTY;
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        this.name_ = "";
        this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        this.muted_ = false;
        this.bitField0_ = (0xFFFFFFDF & this.bitField0_);
        this.unreadCount_ = 0L;
        this.bitField0_ = (0xFFFFFFBF & this.bitField0_);
        this.participant_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFF7F & this.bitField0_);
        this.needsAccept_ = false;
        this.bitField0_ = (0xFFFFFEFF & this.bitField0_);
        this.inactiveParticipant_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFDFF & this.bitField0_);
        this.createdAt_ = 0L;
        this.bitField0_ = (0xFFFFFBFF & this.bitField0_);
        this.hidden_ = false;
        this.bitField0_ = (0xFFFFF7FF & this.bitField0_);
        this.inviter_ = Data.Participant.getDefaultInstance();
        this.bitField0_ = (0xFFFFEFFF & this.bitField0_);
        this.conversationClientId_ = "";
        this.bitField0_ = (0xFFFFDFFF & this.bitField0_);
        this.conversationMetadata_ = Data.ConversationMetadata.getDefaultInstance();
        this.bitField0_ = (0xFFFFBFFF & this.bitField0_);
        this.lastPreviewEvent_ = Client.EventStreamResponse.Event.getDefaultInstance();
        this.bitField0_ = (0xFFFF7FFF & this.bitField0_);
        this.firstEventTimestamp_ = 0L;
        this.bitField0_ = (0xFFFEFFFF & this.bitField0_);
        this.lastMessage_ = Client.ChatMessage.getDefaultInstance();
        this.bitField0_ = (0xFFFDFFFF & this.bitField0_);
        return this;
      }

      public final Builder clearConversationClientId()
      {
        this.bitField0_ = (0xFFFFDFFF & this.bitField0_);
        this.conversationClientId_ = Client.ClientConversation.getDefaultInstance().getConversationClientId();
        return this;
      }

      public final Builder clearConversationMetadata()
      {
        this.conversationMetadata_ = Data.ConversationMetadata.getDefaultInstance();
        this.bitField0_ = (0xFFFFBFFF & this.bitField0_);
        return this;
      }

      public final Builder clearCreatedAt()
      {
        this.bitField0_ = (0xFFFFFBFF & this.bitField0_);
        this.createdAt_ = 0L;
        return this;
      }

      public final Builder clearFirstEventTimestamp()
      {
        this.bitField0_ = (0xFFFEFFFF & this.bitField0_);
        this.firstEventTimestamp_ = 0L;
        return this;
      }

      public final Builder clearHidden()
      {
        this.bitField0_ = (0xFFFFF7FF & this.bitField0_);
        this.hidden_ = false;
        return this;
      }

      public final Builder clearId()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.id_ = Client.ClientConversation.getDefaultInstance().getId();
        return this;
      }

      public final Builder clearInactiveParticipant()
      {
        this.inactiveParticipant_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFDFF & this.bitField0_);
        return this;
      }

      public final Builder clearInviter()
      {
        this.inviter_ = Data.Participant.getDefaultInstance();
        this.bitField0_ = (0xFFFFEFFF & this.bitField0_);
        return this;
      }

      public final Builder clearLastMessage()
      {
        this.lastMessage_ = Client.ChatMessage.getDefaultInstance();
        this.bitField0_ = (0xFFFDFFFF & this.bitField0_);
        return this;
      }

      public final Builder clearLastPreviewEvent()
      {
        this.lastPreviewEvent_ = Client.EventStreamResponse.Event.getDefaultInstance();
        this.bitField0_ = (0xFFFF7FFF & this.bitField0_);
        return this;
      }

      public final Builder clearMuted()
      {
        this.bitField0_ = (0xFFFFFFDF & this.bitField0_);
        this.muted_ = false;
        return this;
      }

      public final Builder clearName()
      {
        this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        this.name_ = Client.ClientConversation.getDefaultInstance().getName();
        return this;
      }

      public final Builder clearNeedsAccept()
      {
        this.bitField0_ = (0xFFFFFEFF & this.bitField0_);
        this.needsAccept_ = false;
        return this;
      }

      public final Builder clearOffTheRecord()
      {
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.offTheRecord_ = false;
        return this;
      }

      public final Builder clearParticipant()
      {
        this.participant_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFF7F & this.bitField0_);
        return this;
      }

      public final Builder clearParticipantId()
      {
        this.participantId_ = LazyStringArrayList.EMPTY;
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        return this;
      }

      public final Builder clearType()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.type_ = Data.ConversationType.ONE_TO_ONE;
        return this;
      }

      public final Builder clearUnreadCount()
      {
        this.bitField0_ = (0xFFFFFFBF & this.bitField0_);
        this.unreadCount_ = 0L;
        return this;
      }

      public final String getConversationClientId()
      {
        Object localObject = this.conversationClientId_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.conversationClientId_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final Data.ConversationMetadata getConversationMetadata()
      {
        return this.conversationMetadata_;
      }

      public final long getCreatedAt()
      {
        return this.createdAt_;
      }

      public final Client.ClientConversation getDefaultInstanceForType()
      {
        return Client.ClientConversation.getDefaultInstance();
      }

      public final long getFirstEventTimestamp()
      {
        return this.firstEventTimestamp_;
      }

      public final boolean getHidden()
      {
        return this.hidden_;
      }

      public final String getId()
      {
        Object localObject = this.id_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.id_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final Data.Participant getInactiveParticipant(int paramInt)
      {
        return (Data.Participant)this.inactiveParticipant_.get(paramInt);
      }

      public final int getInactiveParticipantCount()
      {
        return this.inactiveParticipant_.size();
      }

      public final List<Data.Participant> getInactiveParticipantList()
      {
        return Collections.unmodifiableList(this.inactiveParticipant_);
      }

      public final Data.Participant getInviter()
      {
        return this.inviter_;
      }

      public final Client.ChatMessage getLastMessage()
      {
        return this.lastMessage_;
      }

      public final Client.EventStreamResponse.Event getLastPreviewEvent()
      {
        return this.lastPreviewEvent_;
      }

      public final boolean getMuted()
      {
        return this.muted_;
      }

      public final String getName()
      {
        Object localObject = this.name_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.name_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final boolean getNeedsAccept()
      {
        return this.needsAccept_;
      }

      public final boolean getOffTheRecord()
      {
        return this.offTheRecord_;
      }

      public final Data.Participant getParticipant(int paramInt)
      {
        return (Data.Participant)this.participant_.get(paramInt);
      }

      public final int getParticipantCount()
      {
        return this.participant_.size();
      }

      public final String getParticipantId(int paramInt)
      {
        return (String)this.participantId_.get(paramInt);
      }

      public final int getParticipantIdCount()
      {
        return this.participantId_.size();
      }

      public final List<String> getParticipantIdList()
      {
        return Collections.unmodifiableList(this.participantId_);
      }

      public final List<Data.Participant> getParticipantList()
      {
        return Collections.unmodifiableList(this.participant_);
      }

      public final Data.ConversationType getType()
      {
        return this.type_;
      }

      public final long getUnreadCount()
      {
        return this.unreadCount_;
      }

      public final boolean hasConversationClientId()
      {
        if ((0x2000 & this.bitField0_) == 8192);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasConversationMetadata()
      {
        if ((0x4000 & this.bitField0_) == 16384);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasCreatedAt()
      {
        if ((0x400 & this.bitField0_) == 1024);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasFirstEventTimestamp()
      {
        if ((0x10000 & this.bitField0_) == 65536);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasHidden()
      {
        if ((0x800 & this.bitField0_) == 2048);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasId()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean hasInviter()
      {
        if ((0x1000 & this.bitField0_) == 4096);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasLastMessage()
      {
        if ((0x20000 & this.bitField0_) == 131072);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasLastPreviewEvent()
      {
        if ((0x8000 & this.bitField0_) == 32768);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasMuted()
      {
        if ((0x20 & this.bitField0_) == 32);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasName()
      {
        if ((0x10 & this.bitField0_) == 16);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasNeedsAccept()
      {
        if ((0x100 & this.bitField0_) == 256);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasOffTheRecord()
      {
        if ((0x4 & this.bitField0_) == 4);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasType()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasUnreadCount()
      {
        if ((0x40 & this.bitField0_) == 64);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Client.ClientConversation paramClientConversation)
      {
        if (paramClientConversation == Client.ClientConversation.getDefaultInstance());
        label100: label252: Data.Participant localParticipant;
        label192: label340: Data.ConversationMetadata localConversationMetadata;
        label424: Client.EventStreamResponse.Event localEvent;
        label492: 
        do
        {
          return this;
          if (paramClientConversation.hasId())
            setId(paramClientConversation.getId());
          if (paramClientConversation.hasType())
            setType(paramClientConversation.getType());
          if (paramClientConversation.hasOffTheRecord())
            setOffTheRecord(paramClientConversation.getOffTheRecord());
          if (!paramClientConversation.participantId_.isEmpty())
          {
            if (!this.participantId_.isEmpty())
              break;
            this.participantId_ = paramClientConversation.participantId_;
            this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
          }
          if (paramClientConversation.hasName())
            setName(paramClientConversation.getName());
          if (paramClientConversation.hasMuted())
            setMuted(paramClientConversation.getMuted());
          if (paramClientConversation.hasUnreadCount())
            setUnreadCount(paramClientConversation.getUnreadCount());
          if (!paramClientConversation.participant_.isEmpty())
          {
            if (!this.participant_.isEmpty())
              break label610;
            this.participant_ = paramClientConversation.participant_;
            this.bitField0_ = (0xFFFFFF7F & this.bitField0_);
          }
          if (paramClientConversation.hasNeedsAccept())
            setNeedsAccept(paramClientConversation.getNeedsAccept());
          if (!paramClientConversation.inactiveParticipant_.isEmpty())
          {
            if (!this.inactiveParticipant_.isEmpty())
              break label631;
            this.inactiveParticipant_ = paramClientConversation.inactiveParticipant_;
            this.bitField0_ = (0xFFFFFDFF & this.bitField0_);
          }
          if (paramClientConversation.hasCreatedAt())
            setCreatedAt(paramClientConversation.getCreatedAt());
          if (paramClientConversation.hasHidden())
            setHidden(paramClientConversation.getHidden());
          if (paramClientConversation.hasInviter())
          {
            localParticipant = paramClientConversation.getInviter();
            if (((0x1000 & this.bitField0_) != 4096) || (this.inviter_ == Data.Participant.getDefaultInstance()))
              break label652;
            this.inviter_ = Data.Participant.newBuilder(this.inviter_).mergeFrom(localParticipant).buildPartial();
            this.bitField0_ = (0x1000 | this.bitField0_);
          }
          if (paramClientConversation.hasConversationClientId())
            setConversationClientId(paramClientConversation.getConversationClientId());
          if (paramClientConversation.hasConversationMetadata())
          {
            localConversationMetadata = paramClientConversation.getConversationMetadata();
            if (((0x4000 & this.bitField0_) != 16384) || (this.conversationMetadata_ == Data.ConversationMetadata.getDefaultInstance()))
              break label661;
            this.conversationMetadata_ = Data.ConversationMetadata.newBuilder(this.conversationMetadata_).mergeFrom(localConversationMetadata).buildPartial();
            this.bitField0_ = (0x4000 | this.bitField0_);
          }
          if (paramClientConversation.hasLastPreviewEvent())
          {
            localEvent = paramClientConversation.getLastPreviewEvent();
            if (((0x8000 & this.bitField0_) != 32768) || (this.lastPreviewEvent_ == Client.EventStreamResponse.Event.getDefaultInstance()))
              break label670;
            this.lastPreviewEvent_ = Client.EventStreamResponse.Event.newBuilder(this.lastPreviewEvent_).mergeFrom(localEvent).buildPartial();
            this.bitField0_ = (0x8000 | this.bitField0_);
          }
          if (paramClientConversation.hasFirstEventTimestamp())
            setFirstEventTimestamp(paramClientConversation.getFirstEventTimestamp());
        }
        while (!paramClientConversation.hasLastMessage());
        Client.ChatMessage localChatMessage = paramClientConversation.getLastMessage();
        if (((0x20000 & this.bitField0_) == 131072) && (this.lastMessage_ != Client.ChatMessage.getDefaultInstance()));
        for (this.lastMessage_ = Client.ChatMessage.newBuilder(this.lastMessage_).mergeFrom(localChatMessage).buildPartial(); ; this.lastMessage_ = localChatMessage)
        {
          this.bitField0_ = (0x20000 | this.bitField0_);
          break;
          ensureParticipantIdIsMutable();
          this.participantId_.addAll(paramClientConversation.participantId_);
          break label100;
          label610: ensureParticipantIsMutable();
          this.participant_.addAll(paramClientConversation.participant_);
          break label192;
          label631: ensureInactiveParticipantIsMutable();
          this.inactiveParticipant_.addAll(paramClientConversation.inactiveParticipant_);
          break label252;
          label652: this.inviter_ = localParticipant;
          break label340;
          label661: this.conversationMetadata_ = localConversationMetadata;
          break label424;
          label670: this.lastPreviewEvent_ = localEvent;
          break label492;
        }
      }

      public final Builder setConversationClientId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x2000 | this.bitField0_);
        this.conversationClientId_ = paramString;
        return this;
      }

      public final Builder setConversationMetadata(Data.ConversationMetadata.Builder paramBuilder)
      {
        this.conversationMetadata_ = paramBuilder.build();
        this.bitField0_ = (0x4000 | this.bitField0_);
        return this;
      }

      public final Builder setConversationMetadata(Data.ConversationMetadata paramConversationMetadata)
      {
        if (paramConversationMetadata == null)
          throw new NullPointerException();
        this.conversationMetadata_ = paramConversationMetadata;
        this.bitField0_ = (0x4000 | this.bitField0_);
        return this;
      }

      public final Builder setCreatedAt(long paramLong)
      {
        this.bitField0_ = (0x400 | this.bitField0_);
        this.createdAt_ = paramLong;
        return this;
      }

      public final Builder setFirstEventTimestamp(long paramLong)
      {
        this.bitField0_ = (0x10000 | this.bitField0_);
        this.firstEventTimestamp_ = paramLong;
        return this;
      }

      public final Builder setHidden(boolean paramBoolean)
      {
        this.bitField0_ = (0x800 | this.bitField0_);
        this.hidden_ = paramBoolean;
        return this;
      }

      public final Builder setId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x1 | this.bitField0_);
        this.id_ = paramString;
        return this;
      }

      public final Builder setInactiveParticipant(int paramInt, Data.Participant.Builder paramBuilder)
      {
        ensureInactiveParticipantIsMutable();
        this.inactiveParticipant_.set(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder setInactiveParticipant(int paramInt, Data.Participant paramParticipant)
      {
        if (paramParticipant == null)
          throw new NullPointerException();
        ensureInactiveParticipantIsMutable();
        this.inactiveParticipant_.set(paramInt, paramParticipant);
        return this;
      }

      public final Builder setInviter(Data.Participant.Builder paramBuilder)
      {
        this.inviter_ = paramBuilder.build();
        this.bitField0_ = (0x1000 | this.bitField0_);
        return this;
      }

      public final Builder setInviter(Data.Participant paramParticipant)
      {
        if (paramParticipant == null)
          throw new NullPointerException();
        this.inviter_ = paramParticipant;
        this.bitField0_ = (0x1000 | this.bitField0_);
        return this;
      }

      public final Builder setLastMessage(Client.ChatMessage.Builder paramBuilder)
      {
        this.lastMessage_ = paramBuilder.build();
        this.bitField0_ = (0x20000 | this.bitField0_);
        return this;
      }

      public final Builder setLastMessage(Client.ChatMessage paramChatMessage)
      {
        if (paramChatMessage == null)
          throw new NullPointerException();
        this.lastMessage_ = paramChatMessage;
        this.bitField0_ = (0x20000 | this.bitField0_);
        return this;
      }

      public final Builder setLastPreviewEvent(Client.EventStreamResponse.Event.Builder paramBuilder)
      {
        this.lastPreviewEvent_ = paramBuilder.build();
        this.bitField0_ = (0x8000 | this.bitField0_);
        return this;
      }

      public final Builder setLastPreviewEvent(Client.EventStreamResponse.Event paramEvent)
      {
        if (paramEvent == null)
          throw new NullPointerException();
        this.lastPreviewEvent_ = paramEvent;
        this.bitField0_ = (0x8000 | this.bitField0_);
        return this;
      }

      public final Builder setMuted(boolean paramBoolean)
      {
        this.bitField0_ = (0x20 | this.bitField0_);
        this.muted_ = paramBoolean;
        return this;
      }

      public final Builder setName(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x10 | this.bitField0_);
        this.name_ = paramString;
        return this;
      }

      public final Builder setNeedsAccept(boolean paramBoolean)
      {
        this.bitField0_ = (0x100 | this.bitField0_);
        this.needsAccept_ = paramBoolean;
        return this;
      }

      public final Builder setOffTheRecord(boolean paramBoolean)
      {
        this.bitField0_ = (0x4 | this.bitField0_);
        this.offTheRecord_ = paramBoolean;
        return this;
      }

      public final Builder setParticipant(int paramInt, Data.Participant.Builder paramBuilder)
      {
        ensureParticipantIsMutable();
        this.participant_.set(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder setParticipant(int paramInt, Data.Participant paramParticipant)
      {
        if (paramParticipant == null)
          throw new NullPointerException();
        ensureParticipantIsMutable();
        this.participant_.set(paramInt, paramParticipant);
        return this;
      }

      public final Builder setParticipantId(int paramInt, String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        ensureParticipantIdIsMutable();
        this.participantId_.set(paramInt, paramString);
        return this;
      }

      public final Builder setType(Data.ConversationType paramConversationType)
      {
        if (paramConversationType == null)
          throw new NullPointerException();
        this.bitField0_ = (0x2 | this.bitField0_);
        this.type_ = paramConversationType;
        return this;
      }

      public final Builder setUnreadCount(long paramLong)
      {
        this.bitField0_ = (0x40 | this.bitField0_);
        this.unreadCount_ = paramLong;
        return this;
      }
    }
  }

  public static abstract interface ClientConversationOrBuilder extends MessageLiteOrBuilder
  {
    public abstract String getConversationClientId();

    public abstract Data.ConversationMetadata getConversationMetadata();

    public abstract long getCreatedAt();

    public abstract long getFirstEventTimestamp();

    public abstract boolean getHidden();

    public abstract String getId();

    public abstract Data.Participant getInactiveParticipant(int paramInt);

    public abstract int getInactiveParticipantCount();

    public abstract List<Data.Participant> getInactiveParticipantList();

    public abstract Data.Participant getInviter();

    public abstract Client.ChatMessage getLastMessage();

    public abstract Client.EventStreamResponse.Event getLastPreviewEvent();

    public abstract boolean getMuted();

    public abstract String getName();

    public abstract boolean getNeedsAccept();

    public abstract boolean getOffTheRecord();

    public abstract Data.Participant getParticipant(int paramInt);

    public abstract int getParticipantCount();

    public abstract String getParticipantId(int paramInt);

    public abstract int getParticipantIdCount();

    public abstract List<String> getParticipantIdList();

    public abstract List<Data.Participant> getParticipantList();

    public abstract Data.ConversationType getType();

    public abstract long getUnreadCount();

    public abstract boolean hasConversationClientId();

    public abstract boolean hasConversationMetadata();

    public abstract boolean hasCreatedAt();

    public abstract boolean hasFirstEventTimestamp();

    public abstract boolean hasHidden();

    public abstract boolean hasId();

    public abstract boolean hasInviter();

    public abstract boolean hasLastMessage();

    public abstract boolean hasLastPreviewEvent();

    public abstract boolean hasMuted();

    public abstract boolean hasName();

    public abstract boolean hasNeedsAccept();

    public abstract boolean hasOffTheRecord();

    public abstract boolean hasType();

    public abstract boolean hasUnreadCount();
  }

  public static final class ConversationJoinRequest extends GeneratedMessageLite
    implements Client.ConversationJoinRequestOrBuilder
  {
    private static final ConversationJoinRequest defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private Object conversationId_;
    private Object joinCode_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private Data.Participant participant_;
    private Data.StubbyInfo stubbyInfo_;

    static
    {
      ConversationJoinRequest localConversationJoinRequest = new ConversationJoinRequest();
      defaultInstance = localConversationJoinRequest;
      localConversationJoinRequest.joinCode_ = "";
      localConversationJoinRequest.conversationId_ = "";
      localConversationJoinRequest.participant_ = Data.Participant.getDefaultInstance();
      localConversationJoinRequest.stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
    }

    private ConversationJoinRequest()
    {
    }

    private ConversationJoinRequest(Builder paramBuilder)
    {
      super();
    }

    private ByteString getConversationIdBytes()
    {
      Object localObject = this.conversationId_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.conversationId_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static ConversationJoinRequest getDefaultInstance()
    {
      return defaultInstance;
    }

    private ByteString getJoinCodeBytes()
    {
      Object localObject = this.joinCode_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.joinCode_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static Builder newBuilder()
    {
      return Builder.access$19700();
    }

    public static Builder newBuilder(ConversationJoinRequest paramConversationJoinRequest)
    {
      return Builder.access$19700().mergeFrom(paramConversationJoinRequest);
    }

    public final String getConversationId()
    {
      Object localObject1 = this.conversationId_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.conversationId_ = str;
      }
    }

    public final ConversationJoinRequest getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final String getJoinCode()
    {
      Object localObject1 = this.joinCode_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.joinCode_ = str;
      }
    }

    public final Data.Participant getParticipant()
    {
      return this.participant_;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeBytesSize(1, getJoinCodeBytes());
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeBytesSize(2, getConversationIdBytes());
        if ((0x4 & this.bitField0_) == 4)
          k += CodedOutputStream.computeMessageSize(3, this.participant_);
        if ((0x8 & this.bitField0_) == 8)
          k += CodedOutputStream.computeMessageSize(4, this.stubbyInfo_);
        this.memoizedSerializedSize = k;
      }
    }

    public final Data.StubbyInfo getStubbyInfo()
    {
      return this.stubbyInfo_;
    }

    public final boolean hasConversationId()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasJoinCode()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean hasParticipant()
    {
      if ((0x4 & this.bitField0_) == 4);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasStubbyInfo()
    {
      if ((0x8 & this.bitField0_) == 8);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeBytes(1, getJoinCodeBytes());
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeBytes(2, getConversationIdBytes());
      if ((0x4 & this.bitField0_) == 4)
        paramCodedOutputStream.writeMessage(3, this.participant_);
      if ((0x8 & this.bitField0_) == 8)
        paramCodedOutputStream.writeMessage(4, this.stubbyInfo_);
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Client.ConversationJoinRequest, Builder>
      implements Client.ConversationJoinRequestOrBuilder
    {
      private int bitField0_;
      private Object conversationId_ = "";
      private Object joinCode_ = "";
      private Data.Participant participant_ = Data.Participant.getDefaultInstance();
      private Data.StubbyInfo stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 10:
            this.bitField0_ = (0x1 | this.bitField0_);
            this.joinCode_ = paramCodedInputStream.readBytes();
            break;
          case 18:
            this.bitField0_ = (0x2 | this.bitField0_);
            this.conversationId_ = paramCodedInputStream.readBytes();
            break;
          case 26:
            Data.Participant.Builder localBuilder1 = Data.Participant.newBuilder();
            if (hasParticipant())
              localBuilder1.mergeFrom(getParticipant());
            paramCodedInputStream.readMessage(localBuilder1, paramExtensionRegistryLite);
            setParticipant(localBuilder1.buildPartial());
            break;
          case 34:
          }
          Data.StubbyInfo.Builder localBuilder = Data.StubbyInfo.newBuilder();
          if (hasStubbyInfo())
            localBuilder.mergeFrom(getStubbyInfo());
          paramCodedInputStream.readMessage(localBuilder, paramExtensionRegistryLite);
          setStubbyInfo(localBuilder.buildPartial());
        }
      }

      public final Client.ConversationJoinRequest build()
      {
        Client.ConversationJoinRequest localConversationJoinRequest = buildPartial();
        if (!localConversationJoinRequest.isInitialized())
          throw new UninitializedMessageException();
        return localConversationJoinRequest;
      }

      public final Client.ConversationJoinRequest buildPartial()
      {
        Client.ConversationJoinRequest localConversationJoinRequest = new Client.ConversationJoinRequest(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Client.ConversationJoinRequest.access$19902(localConversationJoinRequest, this.joinCode_);
        if ((i & 0x2) == 2)
          k |= 2;
        Client.ConversationJoinRequest.access$20002(localConversationJoinRequest, this.conversationId_);
        if ((i & 0x4) == 4)
          k |= 4;
        Client.ConversationJoinRequest.access$20102(localConversationJoinRequest, this.participant_);
        if ((i & 0x8) == 8)
          k |= 8;
        Client.ConversationJoinRequest.access$20202(localConversationJoinRequest, this.stubbyInfo_);
        Client.ConversationJoinRequest.access$20302(localConversationJoinRequest, k);
        return localConversationJoinRequest;
      }

      public final Builder clear()
      {
        super.clear();
        this.joinCode_ = "";
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.conversationId_ = "";
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.participant_ = Data.Participant.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        return this;
      }

      public final Builder clearConversationId()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.conversationId_ = Client.ConversationJoinRequest.getDefaultInstance().getConversationId();
        return this;
      }

      public final Builder clearJoinCode()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.joinCode_ = Client.ConversationJoinRequest.getDefaultInstance().getJoinCode();
        return this;
      }

      public final Builder clearParticipant()
      {
        this.participant_ = Data.Participant.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        return this;
      }

      public final Builder clearStubbyInfo()
      {
        this.stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        return this;
      }

      public final String getConversationId()
      {
        Object localObject = this.conversationId_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.conversationId_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final Client.ConversationJoinRequest getDefaultInstanceForType()
      {
        return Client.ConversationJoinRequest.getDefaultInstance();
      }

      public final String getJoinCode()
      {
        Object localObject = this.joinCode_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.joinCode_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final Data.Participant getParticipant()
      {
        return this.participant_;
      }

      public final Data.StubbyInfo getStubbyInfo()
      {
        return this.stubbyInfo_;
      }

      public final boolean hasConversationId()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasJoinCode()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean hasParticipant()
      {
        if ((0x4 & this.bitField0_) == 4);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasStubbyInfo()
      {
        if ((0x8 & this.bitField0_) == 8);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Client.ConversationJoinRequest paramConversationJoinRequest)
      {
        if (paramConversationJoinRequest == Client.ConversationJoinRequest.getDefaultInstance());
        Data.Participant localParticipant;
        label91: 
        do
        {
          return this;
          if (paramConversationJoinRequest.hasJoinCode())
            setJoinCode(paramConversationJoinRequest.getJoinCode());
          if (paramConversationJoinRequest.hasConversationId())
            setConversationId(paramConversationJoinRequest.getConversationId());
          if (paramConversationJoinRequest.hasParticipant())
          {
            localParticipant = paramConversationJoinRequest.getParticipant();
            if (((0x4 & this.bitField0_) != 4) || (this.participant_ == Data.Participant.getDefaultInstance()))
              break;
            this.participant_ = Data.Participant.newBuilder(this.participant_).mergeFrom(localParticipant).buildPartial();
            this.bitField0_ = (0x4 | this.bitField0_);
          }
        }
        while (!paramConversationJoinRequest.hasStubbyInfo());
        Data.StubbyInfo localStubbyInfo = paramConversationJoinRequest.getStubbyInfo();
        if (((0x8 & this.bitField0_) == 8) && (this.stubbyInfo_ != Data.StubbyInfo.getDefaultInstance()));
        for (this.stubbyInfo_ = Data.StubbyInfo.newBuilder(this.stubbyInfo_).mergeFrom(localStubbyInfo).buildPartial(); ; this.stubbyInfo_ = localStubbyInfo)
        {
          this.bitField0_ = (0x8 | this.bitField0_);
          break;
          this.participant_ = localParticipant;
          break label91;
        }
      }

      public final Builder setConversationId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x2 | this.bitField0_);
        this.conversationId_ = paramString;
        return this;
      }

      public final Builder setJoinCode(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x1 | this.bitField0_);
        this.joinCode_ = paramString;
        return this;
      }

      public final Builder setParticipant(Data.Participant.Builder paramBuilder)
      {
        this.participant_ = paramBuilder.build();
        this.bitField0_ = (0x4 | this.bitField0_);
        return this;
      }

      public final Builder setParticipant(Data.Participant paramParticipant)
      {
        if (paramParticipant == null)
          throw new NullPointerException();
        this.participant_ = paramParticipant;
        this.bitField0_ = (0x4 | this.bitField0_);
        return this;
      }

      public final Builder setStubbyInfo(Data.StubbyInfo.Builder paramBuilder)
      {
        this.stubbyInfo_ = paramBuilder.build();
        this.bitField0_ = (0x8 | this.bitField0_);
        return this;
      }

      public final Builder setStubbyInfo(Data.StubbyInfo paramStubbyInfo)
      {
        if (paramStubbyInfo == null)
          throw new NullPointerException();
        this.stubbyInfo_ = paramStubbyInfo;
        this.bitField0_ = (0x8 | this.bitField0_);
        return this;
      }
    }
  }

  public static abstract interface ConversationJoinRequestOrBuilder extends MessageLiteOrBuilder
  {
    public abstract String getConversationId();

    public abstract String getJoinCode();

    public abstract Data.Participant getParticipant();

    public abstract Data.StubbyInfo getStubbyInfo();

    public abstract boolean hasConversationId();

    public abstract boolean hasJoinCode();

    public abstract boolean hasParticipant();

    public abstract boolean hasStubbyInfo();
  }

  public static final class ConversationJoinResponse extends GeneratedMessageLite
    implements Client.ConversationJoinResponseOrBuilder
  {
    private static final ConversationJoinResponse defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private Client.ParticipantError participantError_;
    private Object requestError_;
    private Data.ResponseStatus status_;
    private long timestamp_;

    static
    {
      ConversationJoinResponse localConversationJoinResponse = new ConversationJoinResponse();
      defaultInstance = localConversationJoinResponse;
      localConversationJoinResponse.status_ = Data.ResponseStatus.OK;
      localConversationJoinResponse.requestError_ = "";
      localConversationJoinResponse.participantError_ = Client.ParticipantError.getDefaultInstance();
      localConversationJoinResponse.timestamp_ = 0L;
    }

    private ConversationJoinResponse()
    {
    }

    private ConversationJoinResponse(Builder paramBuilder)
    {
      super();
    }

    public static ConversationJoinResponse getDefaultInstance()
    {
      return defaultInstance;
    }

    private ByteString getRequestErrorBytes()
    {
      Object localObject = this.requestError_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.requestError_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static Builder newBuilder()
    {
      return Builder.access$20500();
    }

    public static Builder newBuilder(ConversationJoinResponse paramConversationJoinResponse)
    {
      return Builder.access$20500().mergeFrom(paramConversationJoinResponse);
    }

    public final ConversationJoinResponse getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final Client.ParticipantError getParticipantError()
    {
      return this.participantError_;
    }

    public final String getRequestError()
    {
      Object localObject1 = this.requestError_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.requestError_ = str;
      }
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeEnumSize(1, this.status_.getNumber());
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeBytesSize(2, getRequestErrorBytes());
        if ((0x4 & this.bitField0_) == 4)
          k += CodedOutputStream.computeMessageSize(3, this.participantError_);
        if ((0x8 & this.bitField0_) == 8)
          k += CodedOutputStream.computeInt64Size(4, this.timestamp_);
        this.memoizedSerializedSize = k;
      }
    }

    public final Data.ResponseStatus getStatus()
    {
      return this.status_;
    }

    public final long getTimestamp()
    {
      return this.timestamp_;
    }

    public final boolean hasParticipantError()
    {
      if ((0x4 & this.bitField0_) == 4);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasRequestError()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasStatus()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean hasTimestamp()
    {
      if ((0x8 & this.bitField0_) == 8);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeEnum(1, this.status_.getNumber());
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeBytes(2, getRequestErrorBytes());
      if ((0x4 & this.bitField0_) == 4)
        paramCodedOutputStream.writeMessage(3, this.participantError_);
      if ((0x8 & this.bitField0_) == 8)
        paramCodedOutputStream.writeInt64(4, this.timestamp_);
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Client.ConversationJoinResponse, Builder>
      implements Client.ConversationJoinResponseOrBuilder
    {
      private int bitField0_;
      private Client.ParticipantError participantError_ = Client.ParticipantError.getDefaultInstance();
      private Object requestError_ = "";
      private Data.ResponseStatus status_ = Data.ResponseStatus.OK;
      private long timestamp_;

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 8:
            Data.ResponseStatus localResponseStatus = Data.ResponseStatus.valueOf(paramCodedInputStream.readEnum());
            if (localResponseStatus == null)
              continue;
            this.bitField0_ = (0x1 | this.bitField0_);
            this.status_ = localResponseStatus;
            break;
          case 18:
            this.bitField0_ = (0x2 | this.bitField0_);
            this.requestError_ = paramCodedInputStream.readBytes();
            break;
          case 26:
            Client.ParticipantError.Builder localBuilder = Client.ParticipantError.newBuilder();
            if (hasParticipantError())
              localBuilder.mergeFrom(getParticipantError());
            paramCodedInputStream.readMessage(localBuilder, paramExtensionRegistryLite);
            setParticipantError(localBuilder.buildPartial());
            break;
          case 32:
          }
          this.bitField0_ = (0x8 | this.bitField0_);
          this.timestamp_ = paramCodedInputStream.readInt64();
        }
      }

      public final Client.ConversationJoinResponse build()
      {
        Client.ConversationJoinResponse localConversationJoinResponse = buildPartial();
        if (!localConversationJoinResponse.isInitialized())
          throw new UninitializedMessageException();
        return localConversationJoinResponse;
      }

      public final Client.ConversationJoinResponse buildPartial()
      {
        Client.ConversationJoinResponse localConversationJoinResponse = new Client.ConversationJoinResponse(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Client.ConversationJoinResponse.access$20702(localConversationJoinResponse, this.status_);
        if ((i & 0x2) == 2)
          k |= 2;
        Client.ConversationJoinResponse.access$20802(localConversationJoinResponse, this.requestError_);
        if ((i & 0x4) == 4)
          k |= 4;
        Client.ConversationJoinResponse.access$20902(localConversationJoinResponse, this.participantError_);
        if ((i & 0x8) == 8)
          k |= 8;
        Client.ConversationJoinResponse.access$21002(localConversationJoinResponse, this.timestamp_);
        Client.ConversationJoinResponse.access$21102(localConversationJoinResponse, k);
        return localConversationJoinResponse;
      }

      public final Builder clear()
      {
        super.clear();
        this.status_ = Data.ResponseStatus.OK;
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.requestError_ = "";
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.participantError_ = Client.ParticipantError.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.timestamp_ = 0L;
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        return this;
      }

      public final Builder clearParticipantError()
      {
        this.participantError_ = Client.ParticipantError.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        return this;
      }

      public final Builder clearRequestError()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.requestError_ = Client.ConversationJoinResponse.getDefaultInstance().getRequestError();
        return this;
      }

      public final Builder clearStatus()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.status_ = Data.ResponseStatus.OK;
        return this;
      }

      public final Builder clearTimestamp()
      {
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        this.timestamp_ = 0L;
        return this;
      }

      public final Client.ConversationJoinResponse getDefaultInstanceForType()
      {
        return Client.ConversationJoinResponse.getDefaultInstance();
      }

      public final Client.ParticipantError getParticipantError()
      {
        return this.participantError_;
      }

      public final String getRequestError()
      {
        Object localObject = this.requestError_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.requestError_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final Data.ResponseStatus getStatus()
      {
        return this.status_;
      }

      public final long getTimestamp()
      {
        return this.timestamp_;
      }

      public final boolean hasParticipantError()
      {
        if ((0x4 & this.bitField0_) == 4);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasRequestError()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasStatus()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean hasTimestamp()
      {
        if ((0x8 & this.bitField0_) == 8);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Client.ConversationJoinResponse paramConversationJoinResponse)
      {
        if (paramConversationJoinResponse == Client.ConversationJoinResponse.getDefaultInstance())
          return this;
        if (paramConversationJoinResponse.hasStatus())
          setStatus(paramConversationJoinResponse.getStatus());
        if (paramConversationJoinResponse.hasRequestError())
          setRequestError(paramConversationJoinResponse.getRequestError());
        Client.ParticipantError localParticipantError;
        if (paramConversationJoinResponse.hasParticipantError())
        {
          localParticipantError = paramConversationJoinResponse.getParticipantError();
          if (((0x4 & this.bitField0_) != 4) || (this.participantError_ == Client.ParticipantError.getDefaultInstance()))
            break label120;
        }
        label120: for (this.participantError_ = Client.ParticipantError.newBuilder(this.participantError_).mergeFrom(localParticipantError).buildPartial(); ; this.participantError_ = localParticipantError)
        {
          this.bitField0_ = (0x4 | this.bitField0_);
          if (!paramConversationJoinResponse.hasTimestamp())
            break;
          setTimestamp(paramConversationJoinResponse.getTimestamp());
          break;
        }
      }

      public final Builder setParticipantError(Client.ParticipantError.Builder paramBuilder)
      {
        this.participantError_ = paramBuilder.build();
        this.bitField0_ = (0x4 | this.bitField0_);
        return this;
      }

      public final Builder setParticipantError(Client.ParticipantError paramParticipantError)
      {
        if (paramParticipantError == null)
          throw new NullPointerException();
        this.participantError_ = paramParticipantError;
        this.bitField0_ = (0x4 | this.bitField0_);
        return this;
      }

      public final Builder setRequestError(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x2 | this.bitField0_);
        this.requestError_ = paramString;
        return this;
      }

      public final Builder setStatus(Data.ResponseStatus paramResponseStatus)
      {
        if (paramResponseStatus == null)
          throw new NullPointerException();
        this.bitField0_ = (0x1 | this.bitField0_);
        this.status_ = paramResponseStatus;
        return this;
      }

      public final Builder setTimestamp(long paramLong)
      {
        this.bitField0_ = (0x8 | this.bitField0_);
        this.timestamp_ = paramLong;
        return this;
      }
    }
  }

  public static abstract interface ConversationJoinResponseOrBuilder extends MessageLiteOrBuilder
  {
    public abstract Client.ParticipantError getParticipantError();

    public abstract String getRequestError();

    public abstract Data.ResponseStatus getStatus();

    public abstract long getTimestamp();

    public abstract boolean hasParticipantError();

    public abstract boolean hasRequestError();

    public abstract boolean hasStatus();

    public abstract boolean hasTimestamp();
  }

  public static final class ConversationListRequest extends GeneratedMessageLite
    implements Client.ConversationListRequestOrBuilder
  {
    private static final ConversationListRequest defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private Object conversationId_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private Object senderId_;
    private long timestamp_;
    private Type type_;

    static
    {
      ConversationListRequest localConversationListRequest = new ConversationListRequest();
      defaultInstance = localConversationListRequest;
      localConversationListRequest.timestamp_ = 0L;
      localConversationListRequest.senderId_ = "";
      localConversationListRequest.type_ = Type.ID;
      localConversationListRequest.conversationId_ = "";
    }

    private ConversationListRequest()
    {
    }

    private ConversationListRequest(Builder paramBuilder)
    {
      super();
    }

    private ByteString getConversationIdBytes()
    {
      Object localObject = this.conversationId_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.conversationId_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static ConversationListRequest getDefaultInstance()
    {
      return defaultInstance;
    }

    private ByteString getSenderIdBytes()
    {
      Object localObject = this.senderId_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.senderId_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static Builder newBuilder()
    {
      return Builder.access$32600();
    }

    public static Builder newBuilder(ConversationListRequest paramConversationListRequest)
    {
      return Builder.access$32600().mergeFrom(paramConversationListRequest);
    }

    public final String getConversationId()
    {
      Object localObject1 = this.conversationId_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.conversationId_ = str;
      }
    }

    public final ConversationListRequest getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final String getSenderId()
    {
      Object localObject1 = this.senderId_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.senderId_ = str;
      }
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeInt64Size(1, this.timestamp_);
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeBytesSize(2, getSenderIdBytes());
        if ((0x4 & this.bitField0_) == 4)
          k += CodedOutputStream.computeEnumSize(3, this.type_.getNumber());
        if ((0x8 & this.bitField0_) == 8)
          k += CodedOutputStream.computeBytesSize(4, getConversationIdBytes());
        this.memoizedSerializedSize = k;
      }
    }

    public final long getTimestamp()
    {
      return this.timestamp_;
    }

    public final Type getType()
    {
      return this.type_;
    }

    public final boolean hasConversationId()
    {
      if ((0x8 & this.bitField0_) == 8);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasSenderId()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasTimestamp()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean hasType()
    {
      if ((0x4 & this.bitField0_) == 4);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeInt64(1, this.timestamp_);
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeBytes(2, getSenderIdBytes());
      if ((0x4 & this.bitField0_) == 4)
        paramCodedOutputStream.writeEnum(3, this.type_.getNumber());
      if ((0x8 & this.bitField0_) == 8)
        paramCodedOutputStream.writeBytes(4, getConversationIdBytes());
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Client.ConversationListRequest, Builder>
      implements Client.ConversationListRequestOrBuilder
    {
      private int bitField0_;
      private Object conversationId_ = "";
      private Object senderId_ = "";
      private long timestamp_;
      private Client.ConversationListRequest.Type type_ = Client.ConversationListRequest.Type.ID;

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 8:
            this.bitField0_ = (0x1 | this.bitField0_);
            this.timestamp_ = paramCodedInputStream.readInt64();
            break;
          case 18:
            this.bitField0_ = (0x2 | this.bitField0_);
            this.senderId_ = paramCodedInputStream.readBytes();
            break;
          case 24:
            Client.ConversationListRequest.Type localType = Client.ConversationListRequest.Type.valueOf(paramCodedInputStream.readEnum());
            if (localType == null)
              continue;
            this.bitField0_ = (0x4 | this.bitField0_);
            this.type_ = localType;
            break;
          case 34:
          }
          this.bitField0_ = (0x8 | this.bitField0_);
          this.conversationId_ = paramCodedInputStream.readBytes();
        }
      }

      public final Client.ConversationListRequest build()
      {
        Client.ConversationListRequest localConversationListRequest = buildPartial();
        if (!localConversationListRequest.isInitialized())
          throw new UninitializedMessageException();
        return localConversationListRequest;
      }

      public final Client.ConversationListRequest buildPartial()
      {
        Client.ConversationListRequest localConversationListRequest = new Client.ConversationListRequest(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Client.ConversationListRequest.access$32802(localConversationListRequest, this.timestamp_);
        if ((i & 0x2) == 2)
          k |= 2;
        Client.ConversationListRequest.access$32902(localConversationListRequest, this.senderId_);
        if ((i & 0x4) == 4)
          k |= 4;
        Client.ConversationListRequest.access$33002(localConversationListRequest, this.type_);
        if ((i & 0x8) == 8)
          k |= 8;
        Client.ConversationListRequest.access$33102(localConversationListRequest, this.conversationId_);
        Client.ConversationListRequest.access$33202(localConversationListRequest, k);
        return localConversationListRequest;
      }

      public final Builder clear()
      {
        super.clear();
        this.timestamp_ = 0L;
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.senderId_ = "";
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.type_ = Client.ConversationListRequest.Type.ID;
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.conversationId_ = "";
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        return this;
      }

      public final Builder clearConversationId()
      {
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        this.conversationId_ = Client.ConversationListRequest.getDefaultInstance().getConversationId();
        return this;
      }

      public final Builder clearSenderId()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.senderId_ = Client.ConversationListRequest.getDefaultInstance().getSenderId();
        return this;
      }

      public final Builder clearTimestamp()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.timestamp_ = 0L;
        return this;
      }

      public final Builder clearType()
      {
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.type_ = Client.ConversationListRequest.Type.ID;
        return this;
      }

      public final String getConversationId()
      {
        Object localObject = this.conversationId_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.conversationId_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final Client.ConversationListRequest getDefaultInstanceForType()
      {
        return Client.ConversationListRequest.getDefaultInstance();
      }

      public final String getSenderId()
      {
        Object localObject = this.senderId_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.senderId_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final long getTimestamp()
      {
        return this.timestamp_;
      }

      public final Client.ConversationListRequest.Type getType()
      {
        return this.type_;
      }

      public final boolean hasConversationId()
      {
        if ((0x8 & this.bitField0_) == 8);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasSenderId()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasTimestamp()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean hasType()
      {
        if ((0x4 & this.bitField0_) == 4);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Client.ConversationListRequest paramConversationListRequest)
      {
        if (paramConversationListRequest == Client.ConversationListRequest.getDefaultInstance());
        while (true)
        {
          return this;
          if (paramConversationListRequest.hasTimestamp())
            setTimestamp(paramConversationListRequest.getTimestamp());
          if (paramConversationListRequest.hasSenderId())
            setSenderId(paramConversationListRequest.getSenderId());
          if (paramConversationListRequest.hasType())
            setType(paramConversationListRequest.getType());
          if (paramConversationListRequest.hasConversationId())
            setConversationId(paramConversationListRequest.getConversationId());
        }
      }

      public final Builder setConversationId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x8 | this.bitField0_);
        this.conversationId_ = paramString;
        return this;
      }

      public final Builder setSenderId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x2 | this.bitField0_);
        this.senderId_ = paramString;
        return this;
      }

      public final Builder setTimestamp(long paramLong)
      {
        this.bitField0_ = (0x1 | this.bitField0_);
        this.timestamp_ = paramLong;
        return this;
      }

      public final Builder setType(Client.ConversationListRequest.Type paramType)
      {
        if (paramType == null)
          throw new NullPointerException();
        this.bitField0_ = (0x4 | this.bitField0_);
        this.type_ = paramType;
        return this;
      }
    }

    public static enum Type
      implements Internal.EnumLite
    {
      private static Internal.EnumLiteMap<Type> internalValueMap = new Internal.EnumLiteMap()
      {
      };
      private final int value;

      static
      {
        Type[] arrayOfType = new Type[2];
        arrayOfType[0] = ID;
        arrayOfType[1] = SINCE;
      }

      private Type(int paramInt1, int paramInt2)
      {
        this.value = paramInt1;
      }

      public static Type valueOf(int paramInt)
      {
        Type localType;
        switch (paramInt)
        {
        default:
          localType = null;
        case 1:
        case 2:
        }
        while (true)
        {
          return localType;
          localType = ID;
          continue;
          localType = SINCE;
        }
      }

      public final int getNumber()
      {
        return this.value;
      }
    }
  }

  public static abstract interface ConversationListRequestOrBuilder extends MessageLiteOrBuilder
  {
    public abstract String getConversationId();

    public abstract String getSenderId();

    public abstract long getTimestamp();

    public abstract Client.ConversationListRequest.Type getType();

    public abstract boolean hasConversationId();

    public abstract boolean hasSenderId();

    public abstract boolean hasTimestamp();

    public abstract boolean hasType();
  }

  public static final class ConversationListResponse extends GeneratedMessageLite
    implements Client.ConversationListResponseOrBuilder
  {
    private static final ConversationListResponse defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private List<Client.ClientConversation> clientConversation_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private Data.ResponseStatus status_;
    private long timestamp_;

    static
    {
      ConversationListResponse localConversationListResponse = new ConversationListResponse();
      defaultInstance = localConversationListResponse;
      localConversationListResponse.status_ = Data.ResponseStatus.OK;
      localConversationListResponse.timestamp_ = 0L;
      localConversationListResponse.clientConversation_ = Collections.emptyList();
    }

    private ConversationListResponse()
    {
    }

    private ConversationListResponse(Builder paramBuilder)
    {
      super();
    }

    public static ConversationListResponse getDefaultInstance()
    {
      return defaultInstance;
    }

    public static Builder newBuilder()
    {
      return Builder.access$33400();
    }

    public static Builder newBuilder(ConversationListResponse paramConversationListResponse)
    {
      return Builder.access$33400().mergeFrom(paramConversationListResponse);
    }

    public final Client.ClientConversation getClientConversation(int paramInt)
    {
      return (Client.ClientConversation)this.clientConversation_.get(paramInt);
    }

    public final int getClientConversationCount()
    {
      return this.clientConversation_.size();
    }

    public final List<Client.ClientConversation> getClientConversationList()
    {
      return this.clientConversation_;
    }

    public final Client.ClientConversationOrBuilder getClientConversationOrBuilder(int paramInt)
    {
      return (Client.ClientConversationOrBuilder)this.clientConversation_.get(paramInt);
    }

    public final List<? extends Client.ClientConversationOrBuilder> getClientConversationOrBuilderList()
    {
      return this.clientConversation_;
    }

    public final ConversationListResponse getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int n = i; ; n = k)
      {
        return n;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeEnumSize(1, this.status_.getNumber());
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeInt64Size(2, this.timestamp_);
        for (int m = 0; m < this.clientConversation_.size(); m++)
          k += CodedOutputStream.computeMessageSize(3, (MessageLite)this.clientConversation_.get(m));
        this.memoizedSerializedSize = k;
      }
    }

    public final Data.ResponseStatus getStatus()
    {
      return this.status_;
    }

    public final long getTimestamp()
    {
      return this.timestamp_;
    }

    public final boolean hasStatus()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean hasTimestamp()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeEnum(1, this.status_.getNumber());
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeInt64(2, this.timestamp_);
      for (int i = 0; i < this.clientConversation_.size(); i++)
        paramCodedOutputStream.writeMessage(3, (MessageLite)this.clientConversation_.get(i));
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Client.ConversationListResponse, Builder>
      implements Client.ConversationListResponseOrBuilder
    {
      private int bitField0_;
      private List<Client.ClientConversation> clientConversation_ = Collections.emptyList();
      private Data.ResponseStatus status_ = Data.ResponseStatus.OK;
      private long timestamp_;

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private void ensureClientConversationIsMutable()
      {
        if ((0x4 & this.bitField0_) != 4)
        {
          this.clientConversation_ = new ArrayList(this.clientConversation_);
          this.bitField0_ = (0x4 | this.bitField0_);
        }
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 8:
            Data.ResponseStatus localResponseStatus = Data.ResponseStatus.valueOf(paramCodedInputStream.readEnum());
            if (localResponseStatus == null)
              continue;
            this.bitField0_ = (0x1 | this.bitField0_);
            this.status_ = localResponseStatus;
            break;
          case 16:
            this.bitField0_ = (0x2 | this.bitField0_);
            this.timestamp_ = paramCodedInputStream.readInt64();
            break;
          case 26:
          }
          Client.ClientConversation.Builder localBuilder = Client.ClientConversation.newBuilder();
          paramCodedInputStream.readMessage(localBuilder, paramExtensionRegistryLite);
          addClientConversation(localBuilder.buildPartial());
        }
      }

      public final Builder addAllClientConversation(Iterable<? extends Client.ClientConversation> paramIterable)
      {
        ensureClientConversationIsMutable();
        GeneratedMessageLite.Builder.addAll(paramIterable, this.clientConversation_);
        return this;
      }

      public final Builder addClientConversation(int paramInt, Client.ClientConversation.Builder paramBuilder)
      {
        ensureClientConversationIsMutable();
        this.clientConversation_.add(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder addClientConversation(int paramInt, Client.ClientConversation paramClientConversation)
      {
        if (paramClientConversation == null)
          throw new NullPointerException();
        ensureClientConversationIsMutable();
        this.clientConversation_.add(paramInt, paramClientConversation);
        return this;
      }

      public final Builder addClientConversation(Client.ClientConversation.Builder paramBuilder)
      {
        ensureClientConversationIsMutable();
        this.clientConversation_.add(paramBuilder.build());
        return this;
      }

      public final Builder addClientConversation(Client.ClientConversation paramClientConversation)
      {
        if (paramClientConversation == null)
          throw new NullPointerException();
        ensureClientConversationIsMutable();
        this.clientConversation_.add(paramClientConversation);
        return this;
      }

      public final Client.ConversationListResponse build()
      {
        Client.ConversationListResponse localConversationListResponse = buildPartial();
        if (!localConversationListResponse.isInitialized())
          throw new UninitializedMessageException();
        return localConversationListResponse;
      }

      public final Client.ConversationListResponse buildPartial()
      {
        Client.ConversationListResponse localConversationListResponse = new Client.ConversationListResponse(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Client.ConversationListResponse.access$33602(localConversationListResponse, this.status_);
        if ((i & 0x2) == 2)
          k |= 2;
        Client.ConversationListResponse.access$33702(localConversationListResponse, this.timestamp_);
        if ((0x4 & this.bitField0_) == 4)
        {
          this.clientConversation_ = Collections.unmodifiableList(this.clientConversation_);
          this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        }
        Client.ConversationListResponse.access$33802(localConversationListResponse, this.clientConversation_);
        Client.ConversationListResponse.access$33902(localConversationListResponse, k);
        return localConversationListResponse;
      }

      public final Builder clear()
      {
        super.clear();
        this.status_ = Data.ResponseStatus.OK;
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.timestamp_ = 0L;
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.clientConversation_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        return this;
      }

      public final Builder clearClientConversation()
      {
        this.clientConversation_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        return this;
      }

      public final Builder clearStatus()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.status_ = Data.ResponseStatus.OK;
        return this;
      }

      public final Builder clearTimestamp()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.timestamp_ = 0L;
        return this;
      }

      public final Client.ClientConversation getClientConversation(int paramInt)
      {
        return (Client.ClientConversation)this.clientConversation_.get(paramInt);
      }

      public final int getClientConversationCount()
      {
        return this.clientConversation_.size();
      }

      public final List<Client.ClientConversation> getClientConversationList()
      {
        return Collections.unmodifiableList(this.clientConversation_);
      }

      public final Client.ConversationListResponse getDefaultInstanceForType()
      {
        return Client.ConversationListResponse.getDefaultInstance();
      }

      public final Data.ResponseStatus getStatus()
      {
        return this.status_;
      }

      public final long getTimestamp()
      {
        return this.timestamp_;
      }

      public final boolean hasStatus()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean hasTimestamp()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Client.ConversationListResponse paramConversationListResponse)
      {
        if (paramConversationListResponse == Client.ConversationListResponse.getDefaultInstance());
        while (true)
        {
          return this;
          if (paramConversationListResponse.hasStatus())
            setStatus(paramConversationListResponse.getStatus());
          if (paramConversationListResponse.hasTimestamp())
            setTimestamp(paramConversationListResponse.getTimestamp());
          if (!paramConversationListResponse.clientConversation_.isEmpty())
            if (this.clientConversation_.isEmpty())
            {
              this.clientConversation_ = paramConversationListResponse.clientConversation_;
              this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
            }
            else
            {
              ensureClientConversationIsMutable();
              this.clientConversation_.addAll(paramConversationListResponse.clientConversation_);
            }
        }
      }

      public final Builder setClientConversation(int paramInt, Client.ClientConversation.Builder paramBuilder)
      {
        ensureClientConversationIsMutable();
        this.clientConversation_.set(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder setClientConversation(int paramInt, Client.ClientConversation paramClientConversation)
      {
        if (paramClientConversation == null)
          throw new NullPointerException();
        ensureClientConversationIsMutable();
        this.clientConversation_.set(paramInt, paramClientConversation);
        return this;
      }

      public final Builder setStatus(Data.ResponseStatus paramResponseStatus)
      {
        if (paramResponseStatus == null)
          throw new NullPointerException();
        this.bitField0_ = (0x1 | this.bitField0_);
        this.status_ = paramResponseStatus;
        return this;
      }

      public final Builder setTimestamp(long paramLong)
      {
        this.bitField0_ = (0x2 | this.bitField0_);
        this.timestamp_ = paramLong;
        return this;
      }
    }
  }

  public static abstract interface ConversationListResponseOrBuilder extends MessageLiteOrBuilder
  {
    public abstract Client.ClientConversation getClientConversation(int paramInt);

    public abstract int getClientConversationCount();

    public abstract List<Client.ClientConversation> getClientConversationList();

    public abstract Data.ResponseStatus getStatus();

    public abstract long getTimestamp();

    public abstract boolean hasStatus();

    public abstract boolean hasTimestamp();
  }

  public static final class ConversationPreferenceRequest extends GeneratedMessageLite
    implements Client.ConversationPreferenceRequestOrBuilder
  {
    private static final ConversationPreferenceRequest defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private Object conversationId_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private Object senderId_;
    private Type type_;

    static
    {
      ConversationPreferenceRequest localConversationPreferenceRequest = new ConversationPreferenceRequest();
      defaultInstance = localConversationPreferenceRequest;
      localConversationPreferenceRequest.type_ = Type.MUTE;
      localConversationPreferenceRequest.senderId_ = "";
      localConversationPreferenceRequest.conversationId_ = "";
    }

    private ConversationPreferenceRequest()
    {
    }

    private ConversationPreferenceRequest(Builder paramBuilder)
    {
      super();
    }

    private ByteString getConversationIdBytes()
    {
      Object localObject = this.conversationId_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.conversationId_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static ConversationPreferenceRequest getDefaultInstance()
    {
      return defaultInstance;
    }

    private ByteString getSenderIdBytes()
    {
      Object localObject = this.senderId_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.senderId_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static Builder newBuilder()
    {
      return Builder.access$27100();
    }

    public static Builder newBuilder(ConversationPreferenceRequest paramConversationPreferenceRequest)
    {
      return Builder.access$27100().mergeFrom(paramConversationPreferenceRequest);
    }

    public final String getConversationId()
    {
      Object localObject1 = this.conversationId_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.conversationId_ = str;
      }
    }

    public final ConversationPreferenceRequest getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final String getSenderId()
    {
      Object localObject1 = this.senderId_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.senderId_ = str;
      }
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeEnumSize(1, this.type_.getNumber());
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeBytesSize(2, getSenderIdBytes());
        if ((0x4 & this.bitField0_) == 4)
          k += CodedOutputStream.computeBytesSize(3, getConversationIdBytes());
        this.memoizedSerializedSize = k;
      }
    }

    public final Type getType()
    {
      return this.type_;
    }

    public final boolean hasConversationId()
    {
      if ((0x4 & this.bitField0_) == 4);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasSenderId()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasType()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeEnum(1, this.type_.getNumber());
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeBytes(2, getSenderIdBytes());
      if ((0x4 & this.bitField0_) == 4)
        paramCodedOutputStream.writeBytes(3, getConversationIdBytes());
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Client.ConversationPreferenceRequest, Builder>
      implements Client.ConversationPreferenceRequestOrBuilder
    {
      private int bitField0_;
      private Object conversationId_ = "";
      private Object senderId_ = "";
      private Client.ConversationPreferenceRequest.Type type_ = Client.ConversationPreferenceRequest.Type.MUTE;

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 8:
            Client.ConversationPreferenceRequest.Type localType = Client.ConversationPreferenceRequest.Type.valueOf(paramCodedInputStream.readEnum());
            if (localType == null)
              continue;
            this.bitField0_ = (0x1 | this.bitField0_);
            this.type_ = localType;
            break;
          case 18:
            this.bitField0_ = (0x2 | this.bitField0_);
            this.senderId_ = paramCodedInputStream.readBytes();
            break;
          case 26:
          }
          this.bitField0_ = (0x4 | this.bitField0_);
          this.conversationId_ = paramCodedInputStream.readBytes();
        }
      }

      public final Client.ConversationPreferenceRequest build()
      {
        Client.ConversationPreferenceRequest localConversationPreferenceRequest = buildPartial();
        if (!localConversationPreferenceRequest.isInitialized())
          throw new UninitializedMessageException();
        return localConversationPreferenceRequest;
      }

      public final Client.ConversationPreferenceRequest buildPartial()
      {
        Client.ConversationPreferenceRequest localConversationPreferenceRequest = new Client.ConversationPreferenceRequest(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Client.ConversationPreferenceRequest.access$27302(localConversationPreferenceRequest, this.type_);
        if ((i & 0x2) == 2)
          k |= 2;
        Client.ConversationPreferenceRequest.access$27402(localConversationPreferenceRequest, this.senderId_);
        if ((i & 0x4) == 4)
          k |= 4;
        Client.ConversationPreferenceRequest.access$27502(localConversationPreferenceRequest, this.conversationId_);
        Client.ConversationPreferenceRequest.access$27602(localConversationPreferenceRequest, k);
        return localConversationPreferenceRequest;
      }

      public final Builder clear()
      {
        super.clear();
        this.type_ = Client.ConversationPreferenceRequest.Type.MUTE;
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.senderId_ = "";
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.conversationId_ = "";
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        return this;
      }

      public final Builder clearConversationId()
      {
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.conversationId_ = Client.ConversationPreferenceRequest.getDefaultInstance().getConversationId();
        return this;
      }

      public final Builder clearSenderId()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.senderId_ = Client.ConversationPreferenceRequest.getDefaultInstance().getSenderId();
        return this;
      }

      public final Builder clearType()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.type_ = Client.ConversationPreferenceRequest.Type.MUTE;
        return this;
      }

      public final String getConversationId()
      {
        Object localObject = this.conversationId_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.conversationId_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final Client.ConversationPreferenceRequest getDefaultInstanceForType()
      {
        return Client.ConversationPreferenceRequest.getDefaultInstance();
      }

      public final String getSenderId()
      {
        Object localObject = this.senderId_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.senderId_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final Client.ConversationPreferenceRequest.Type getType()
      {
        return this.type_;
      }

      public final boolean hasConversationId()
      {
        if ((0x4 & this.bitField0_) == 4);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasSenderId()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasType()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Client.ConversationPreferenceRequest paramConversationPreferenceRequest)
      {
        if (paramConversationPreferenceRequest == Client.ConversationPreferenceRequest.getDefaultInstance());
        while (true)
        {
          return this;
          if (paramConversationPreferenceRequest.hasType())
            setType(paramConversationPreferenceRequest.getType());
          if (paramConversationPreferenceRequest.hasSenderId())
            setSenderId(paramConversationPreferenceRequest.getSenderId());
          if (paramConversationPreferenceRequest.hasConversationId())
            setConversationId(paramConversationPreferenceRequest.getConversationId());
        }
      }

      public final Builder setConversationId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x4 | this.bitField0_);
        this.conversationId_ = paramString;
        return this;
      }

      public final Builder setSenderId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x2 | this.bitField0_);
        this.senderId_ = paramString;
        return this;
      }

      public final Builder setType(Client.ConversationPreferenceRequest.Type paramType)
      {
        if (paramType == null)
          throw new NullPointerException();
        this.bitField0_ = (0x1 | this.bitField0_);
        this.type_ = paramType;
        return this;
      }
    }

    public static enum Type
      implements Internal.EnumLite
    {
      private static Internal.EnumLiteMap<Type> internalValueMap = new Internal.EnumLiteMap()
      {
      };
      private final int value;

      static
      {
        HIDE = new Type("HIDE", 2, 3);
        SHOW = new Type("SHOW", 3, 4);
        Type[] arrayOfType = new Type[4];
        arrayOfType[0] = MUTE;
        arrayOfType[1] = UNMUTE;
        arrayOfType[2] = HIDE;
        arrayOfType[3] = SHOW;
      }

      private Type(int paramInt1, int paramInt2)
      {
        this.value = paramInt1;
      }

      public static Type valueOf(int paramInt)
      {
        Type localType;
        switch (paramInt)
        {
        default:
          localType = null;
        case 1:
        case 2:
        case 3:
        case 4:
        }
        while (true)
        {
          return localType;
          localType = MUTE;
          continue;
          localType = UNMUTE;
          continue;
          localType = HIDE;
          continue;
          localType = SHOW;
        }
      }

      public final int getNumber()
      {
        return this.value;
      }
    }
  }

  public static abstract interface ConversationPreferenceRequestOrBuilder extends MessageLiteOrBuilder
  {
    public abstract String getConversationId();

    public abstract String getSenderId();

    public abstract Client.ConversationPreferenceRequest.Type getType();

    public abstract boolean hasConversationId();

    public abstract boolean hasSenderId();

    public abstract boolean hasType();
  }

  public static final class ConversationPreferenceResponse extends GeneratedMessageLite
    implements Client.ConversationPreferenceResponseOrBuilder
  {
    private static final ConversationPreferenceResponse defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private Data.ResponseStatus status_;
    private long timestamp_;

    static
    {
      ConversationPreferenceResponse localConversationPreferenceResponse = new ConversationPreferenceResponse();
      defaultInstance = localConversationPreferenceResponse;
      localConversationPreferenceResponse.status_ = Data.ResponseStatus.OK;
      localConversationPreferenceResponse.timestamp_ = 0L;
    }

    private ConversationPreferenceResponse()
    {
    }

    private ConversationPreferenceResponse(Builder paramBuilder)
    {
      super();
    }

    public static ConversationPreferenceResponse getDefaultInstance()
    {
      return defaultInstance;
    }

    public static Builder newBuilder()
    {
      return Builder.access$27800();
    }

    public static Builder newBuilder(ConversationPreferenceResponse paramConversationPreferenceResponse)
    {
      return Builder.access$27800().mergeFrom(paramConversationPreferenceResponse);
    }

    public final ConversationPreferenceResponse getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeEnumSize(1, this.status_.getNumber());
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeInt64Size(2, this.timestamp_);
        this.memoizedSerializedSize = k;
      }
    }

    public final Data.ResponseStatus getStatus()
    {
      return this.status_;
    }

    public final long getTimestamp()
    {
      return this.timestamp_;
    }

    public final boolean hasStatus()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean hasTimestamp()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeEnum(1, this.status_.getNumber());
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeInt64(2, this.timestamp_);
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Client.ConversationPreferenceResponse, Builder>
      implements Client.ConversationPreferenceResponseOrBuilder
    {
      private int bitField0_;
      private Data.ResponseStatus status_ = Data.ResponseStatus.OK;
      private long timestamp_;

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 8:
            Data.ResponseStatus localResponseStatus = Data.ResponseStatus.valueOf(paramCodedInputStream.readEnum());
            if (localResponseStatus == null)
              continue;
            this.bitField0_ = (0x1 | this.bitField0_);
            this.status_ = localResponseStatus;
            break;
          case 16:
          }
          this.bitField0_ = (0x2 | this.bitField0_);
          this.timestamp_ = paramCodedInputStream.readInt64();
        }
      }

      public final Client.ConversationPreferenceResponse build()
      {
        Client.ConversationPreferenceResponse localConversationPreferenceResponse = buildPartial();
        if (!localConversationPreferenceResponse.isInitialized())
          throw new UninitializedMessageException();
        return localConversationPreferenceResponse;
      }

      public final Client.ConversationPreferenceResponse buildPartial()
      {
        Client.ConversationPreferenceResponse localConversationPreferenceResponse = new Client.ConversationPreferenceResponse(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Client.ConversationPreferenceResponse.access$28002(localConversationPreferenceResponse, this.status_);
        if ((i & 0x2) == 2)
          k |= 2;
        Client.ConversationPreferenceResponse.access$28102(localConversationPreferenceResponse, this.timestamp_);
        Client.ConversationPreferenceResponse.access$28202(localConversationPreferenceResponse, k);
        return localConversationPreferenceResponse;
      }

      public final Builder clear()
      {
        super.clear();
        this.status_ = Data.ResponseStatus.OK;
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.timestamp_ = 0L;
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        return this;
      }

      public final Builder clearStatus()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.status_ = Data.ResponseStatus.OK;
        return this;
      }

      public final Builder clearTimestamp()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.timestamp_ = 0L;
        return this;
      }

      public final Client.ConversationPreferenceResponse getDefaultInstanceForType()
      {
        return Client.ConversationPreferenceResponse.getDefaultInstance();
      }

      public final Data.ResponseStatus getStatus()
      {
        return this.status_;
      }

      public final long getTimestamp()
      {
        return this.timestamp_;
      }

      public final boolean hasStatus()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean hasTimestamp()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Client.ConversationPreferenceResponse paramConversationPreferenceResponse)
      {
        if (paramConversationPreferenceResponse == Client.ConversationPreferenceResponse.getDefaultInstance());
        while (true)
        {
          return this;
          if (paramConversationPreferenceResponse.hasStatus())
            setStatus(paramConversationPreferenceResponse.getStatus());
          if (paramConversationPreferenceResponse.hasTimestamp())
            setTimestamp(paramConversationPreferenceResponse.getTimestamp());
        }
      }

      public final Builder setStatus(Data.ResponseStatus paramResponseStatus)
      {
        if (paramResponseStatus == null)
          throw new NullPointerException();
        this.bitField0_ = (0x1 | this.bitField0_);
        this.status_ = paramResponseStatus;
        return this;
      }

      public final Builder setTimestamp(long paramLong)
      {
        this.bitField0_ = (0x2 | this.bitField0_);
        this.timestamp_ = paramLong;
        return this;
      }
    }
  }

  public static abstract interface ConversationPreferenceResponseOrBuilder extends MessageLiteOrBuilder
  {
    public abstract Data.ResponseStatus getStatus();

    public abstract long getTimestamp();

    public abstract boolean hasStatus();

    public abstract boolean hasTimestamp();
  }

  public static final class ConversationRenameRequest extends GeneratedMessageLite
    implements Client.ConversationRenameRequestOrBuilder
  {
    private static final ConversationRenameRequest defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private Object conversationId_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private Object newDisplayName_;
    private LazyStringList recipientId_;
    private Data.StubbyInfo stubbyInfo_;

    static
    {
      ConversationRenameRequest localConversationRenameRequest = new ConversationRenameRequest();
      defaultInstance = localConversationRenameRequest;
      localConversationRenameRequest.conversationId_ = "";
      localConversationRenameRequest.newDisplayName_ = "";
      localConversationRenameRequest.recipientId_ = LazyStringArrayList.EMPTY;
      localConversationRenameRequest.stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
    }

    private ConversationRenameRequest()
    {
    }

    private ConversationRenameRequest(Builder paramBuilder)
    {
      super();
    }

    private ByteString getConversationIdBytes()
    {
      Object localObject = this.conversationId_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.conversationId_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static ConversationRenameRequest getDefaultInstance()
    {
      return defaultInstance;
    }

    private ByteString getNewDisplayNameBytes()
    {
      Object localObject = this.newDisplayName_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.newDisplayName_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static Builder newBuilder()
    {
      return Builder.access$17400();
    }

    public static Builder newBuilder(ConversationRenameRequest paramConversationRenameRequest)
    {
      return Builder.access$17400().mergeFrom(paramConversationRenameRequest);
    }

    public final String getConversationId()
    {
      Object localObject1 = this.conversationId_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.conversationId_ = str;
      }
    }

    public final ConversationRenameRequest getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final String getNewDisplayName()
    {
      Object localObject1 = this.newDisplayName_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.newDisplayName_ = str;
      }
    }

    public final String getRecipientId(int paramInt)
    {
      return (String)this.recipientId_.get(paramInt);
    }

    public final int getRecipientIdCount()
    {
      return this.recipientId_.size();
    }

    public final List<String> getRecipientIdList()
    {
      return this.recipientId_;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int i1;
      for (int i2 = i; ; i2 = i1)
      {
        return i2;
        int j = 0x1 & this.bitField0_;
        int k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeBytesSize(1, getConversationIdBytes());
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeBytesSize(2, getNewDisplayNameBytes());
        int m = 0;
        for (int n = 0; n < this.recipientId_.size(); n++)
          m += CodedOutputStream.computeBytesSizeNoTag(this.recipientId_.getByteString(n));
        i1 = k + m + 1 * getRecipientIdList().size();
        if ((0x4 & this.bitField0_) == 4)
          i1 += CodedOutputStream.computeMessageSize(4, this.stubbyInfo_);
        this.memoizedSerializedSize = i1;
      }
    }

    public final Data.StubbyInfo getStubbyInfo()
    {
      return this.stubbyInfo_;
    }

    public final boolean hasConversationId()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean hasNewDisplayName()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasStubbyInfo()
    {
      if ((0x4 & this.bitField0_) == 4);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeBytes(1, getConversationIdBytes());
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeBytes(2, getNewDisplayNameBytes());
      for (int i = 0; i < this.recipientId_.size(); i++)
        paramCodedOutputStream.writeBytes(3, this.recipientId_.getByteString(i));
      if ((0x4 & this.bitField0_) == 4)
        paramCodedOutputStream.writeMessage(4, this.stubbyInfo_);
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Client.ConversationRenameRequest, Builder>
      implements Client.ConversationRenameRequestOrBuilder
    {
      private int bitField0_;
      private Object conversationId_ = "";
      private Object newDisplayName_ = "";
      private LazyStringList recipientId_ = LazyStringArrayList.EMPTY;
      private Data.StubbyInfo stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private void ensureRecipientIdIsMutable()
      {
        if ((0x4 & this.bitField0_) != 4)
        {
          this.recipientId_ = new LazyStringArrayList(this.recipientId_);
          this.bitField0_ = (0x4 | this.bitField0_);
        }
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 10:
            this.bitField0_ = (0x1 | this.bitField0_);
            this.conversationId_ = paramCodedInputStream.readBytes();
            break;
          case 18:
            this.bitField0_ = (0x2 | this.bitField0_);
            this.newDisplayName_ = paramCodedInputStream.readBytes();
            break;
          case 26:
            ensureRecipientIdIsMutable();
            this.recipientId_.add(paramCodedInputStream.readBytes());
            break;
          case 34:
          }
          Data.StubbyInfo.Builder localBuilder = Data.StubbyInfo.newBuilder();
          if (hasStubbyInfo())
            localBuilder.mergeFrom(getStubbyInfo());
          paramCodedInputStream.readMessage(localBuilder, paramExtensionRegistryLite);
          setStubbyInfo(localBuilder.buildPartial());
        }
      }

      public final Builder addAllRecipientId(Iterable<String> paramIterable)
      {
        ensureRecipientIdIsMutable();
        GeneratedMessageLite.Builder.addAll(paramIterable, this.recipientId_);
        return this;
      }

      public final Builder addRecipientId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        ensureRecipientIdIsMutable();
        this.recipientId_.add(paramString);
        return this;
      }

      public final Client.ConversationRenameRequest build()
      {
        Client.ConversationRenameRequest localConversationRenameRequest = buildPartial();
        if (!localConversationRenameRequest.isInitialized())
          throw new UninitializedMessageException();
        return localConversationRenameRequest;
      }

      public final Client.ConversationRenameRequest buildPartial()
      {
        Client.ConversationRenameRequest localConversationRenameRequest = new Client.ConversationRenameRequest(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Client.ConversationRenameRequest.access$17602(localConversationRenameRequest, this.conversationId_);
        if ((i & 0x2) == 2)
          k |= 2;
        Client.ConversationRenameRequest.access$17702(localConversationRenameRequest, this.newDisplayName_);
        if ((0x4 & this.bitField0_) == 4)
        {
          this.recipientId_ = new UnmodifiableLazyStringList(this.recipientId_);
          this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        }
        Client.ConversationRenameRequest.access$17802(localConversationRenameRequest, this.recipientId_);
        if ((i & 0x8) == 8)
          k |= 4;
        Client.ConversationRenameRequest.access$17902(localConversationRenameRequest, this.stubbyInfo_);
        Client.ConversationRenameRequest.access$18002(localConversationRenameRequest, k);
        return localConversationRenameRequest;
      }

      public final Builder clear()
      {
        super.clear();
        this.conversationId_ = "";
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.newDisplayName_ = "";
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.recipientId_ = LazyStringArrayList.EMPTY;
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        return this;
      }

      public final Builder clearConversationId()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.conversationId_ = Client.ConversationRenameRequest.getDefaultInstance().getConversationId();
        return this;
      }

      public final Builder clearNewDisplayName()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.newDisplayName_ = Client.ConversationRenameRequest.getDefaultInstance().getNewDisplayName();
        return this;
      }

      public final Builder clearRecipientId()
      {
        this.recipientId_ = LazyStringArrayList.EMPTY;
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        return this;
      }

      public final Builder clearStubbyInfo()
      {
        this.stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        return this;
      }

      public final String getConversationId()
      {
        Object localObject = this.conversationId_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.conversationId_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final Client.ConversationRenameRequest getDefaultInstanceForType()
      {
        return Client.ConversationRenameRequest.getDefaultInstance();
      }

      public final String getNewDisplayName()
      {
        Object localObject = this.newDisplayName_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.newDisplayName_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final String getRecipientId(int paramInt)
      {
        return (String)this.recipientId_.get(paramInt);
      }

      public final int getRecipientIdCount()
      {
        return this.recipientId_.size();
      }

      public final List<String> getRecipientIdList()
      {
        return Collections.unmodifiableList(this.recipientId_);
      }

      public final Data.StubbyInfo getStubbyInfo()
      {
        return this.stubbyInfo_;
      }

      public final boolean hasConversationId()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean hasNewDisplayName()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasStubbyInfo()
      {
        if ((0x8 & this.bitField0_) == 8);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Client.ConversationRenameRequest paramConversationRenameRequest)
      {
        if (paramConversationRenameRequest == Client.ConversationRenameRequest.getDefaultInstance())
          return this;
        if (paramConversationRenameRequest.hasConversationId())
          setConversationId(paramConversationRenameRequest.getConversationId());
        if (paramConversationRenameRequest.hasNewDisplayName())
          setNewDisplayName(paramConversationRenameRequest.getNewDisplayName());
        label84: Data.StubbyInfo localStubbyInfo;
        if (!paramConversationRenameRequest.recipientId_.isEmpty())
        {
          if (this.recipientId_.isEmpty())
          {
            this.recipientId_ = paramConversationRenameRequest.recipientId_;
            this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
          }
        }
        else
        {
          if (!paramConversationRenameRequest.hasStubbyInfo())
            break label169;
          localStubbyInfo = paramConversationRenameRequest.getStubbyInfo();
          if (((0x8 & this.bitField0_) != 8) || (this.stubbyInfo_ == Data.StubbyInfo.getDefaultInstance()))
            break label171;
        }
        label169: label171: for (this.stubbyInfo_ = Data.StubbyInfo.newBuilder(this.stubbyInfo_).mergeFrom(localStubbyInfo).buildPartial(); ; this.stubbyInfo_ = localStubbyInfo)
        {
          this.bitField0_ = (0x8 | this.bitField0_);
          break;
          ensureRecipientIdIsMutable();
          this.recipientId_.addAll(paramConversationRenameRequest.recipientId_);
          break label84;
          break;
        }
      }

      public final Builder setConversationId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x1 | this.bitField0_);
        this.conversationId_ = paramString;
        return this;
      }

      public final Builder setNewDisplayName(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x2 | this.bitField0_);
        this.newDisplayName_ = paramString;
        return this;
      }

      public final Builder setRecipientId(int paramInt, String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        ensureRecipientIdIsMutable();
        this.recipientId_.set(paramInt, paramString);
        return this;
      }

      public final Builder setStubbyInfo(Data.StubbyInfo.Builder paramBuilder)
      {
        this.stubbyInfo_ = paramBuilder.build();
        this.bitField0_ = (0x8 | this.bitField0_);
        return this;
      }

      public final Builder setStubbyInfo(Data.StubbyInfo paramStubbyInfo)
      {
        if (paramStubbyInfo == null)
          throw new NullPointerException();
        this.stubbyInfo_ = paramStubbyInfo;
        this.bitField0_ = (0x8 | this.bitField0_);
        return this;
      }
    }
  }

  public static abstract interface ConversationRenameRequestOrBuilder extends MessageLiteOrBuilder
  {
    public abstract String getConversationId();

    public abstract String getNewDisplayName();

    public abstract String getRecipientId(int paramInt);

    public abstract int getRecipientIdCount();

    public abstract List<String> getRecipientIdList();

    public abstract Data.StubbyInfo getStubbyInfo();

    public abstract boolean hasConversationId();

    public abstract boolean hasNewDisplayName();

    public abstract boolean hasStubbyInfo();
  }

  public static final class ConversationRenameResponse extends GeneratedMessageLite
    implements Client.ConversationRenameResponseOrBuilder
  {
    private static final ConversationRenameResponse defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private Data.ResponseStatus status_;
    private long timestamp_;

    static
    {
      ConversationRenameResponse localConversationRenameResponse = new ConversationRenameResponse();
      defaultInstance = localConversationRenameResponse;
      localConversationRenameResponse.status_ = Data.ResponseStatus.OK;
      localConversationRenameResponse.timestamp_ = 0L;
    }

    private ConversationRenameResponse()
    {
    }

    private ConversationRenameResponse(Builder paramBuilder)
    {
      super();
    }

    public static ConversationRenameResponse getDefaultInstance()
    {
      return defaultInstance;
    }

    public static Builder newBuilder()
    {
      return Builder.access$18200();
    }

    public static Builder newBuilder(ConversationRenameResponse paramConversationRenameResponse)
    {
      return Builder.access$18200().mergeFrom(paramConversationRenameResponse);
    }

    public final ConversationRenameResponse getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeEnumSize(1, this.status_.getNumber());
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeInt64Size(2, this.timestamp_);
        this.memoizedSerializedSize = k;
      }
    }

    public final Data.ResponseStatus getStatus()
    {
      return this.status_;
    }

    public final long getTimestamp()
    {
      return this.timestamp_;
    }

    public final boolean hasStatus()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean hasTimestamp()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeEnum(1, this.status_.getNumber());
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeInt64(2, this.timestamp_);
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Client.ConversationRenameResponse, Builder>
      implements Client.ConversationRenameResponseOrBuilder
    {
      private int bitField0_;
      private Data.ResponseStatus status_ = Data.ResponseStatus.OK;
      private long timestamp_;

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 8:
            Data.ResponseStatus localResponseStatus = Data.ResponseStatus.valueOf(paramCodedInputStream.readEnum());
            if (localResponseStatus == null)
              continue;
            this.bitField0_ = (0x1 | this.bitField0_);
            this.status_ = localResponseStatus;
            break;
          case 16:
          }
          this.bitField0_ = (0x2 | this.bitField0_);
          this.timestamp_ = paramCodedInputStream.readInt64();
        }
      }

      public final Client.ConversationRenameResponse build()
      {
        Client.ConversationRenameResponse localConversationRenameResponse = buildPartial();
        if (!localConversationRenameResponse.isInitialized())
          throw new UninitializedMessageException();
        return localConversationRenameResponse;
      }

      public final Client.ConversationRenameResponse buildPartial()
      {
        Client.ConversationRenameResponse localConversationRenameResponse = new Client.ConversationRenameResponse(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Client.ConversationRenameResponse.access$18402(localConversationRenameResponse, this.status_);
        if ((i & 0x2) == 2)
          k |= 2;
        Client.ConversationRenameResponse.access$18502(localConversationRenameResponse, this.timestamp_);
        Client.ConversationRenameResponse.access$18602(localConversationRenameResponse, k);
        return localConversationRenameResponse;
      }

      public final Builder clear()
      {
        super.clear();
        this.status_ = Data.ResponseStatus.OK;
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.timestamp_ = 0L;
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        return this;
      }

      public final Builder clearStatus()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.status_ = Data.ResponseStatus.OK;
        return this;
      }

      public final Builder clearTimestamp()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.timestamp_ = 0L;
        return this;
      }

      public final Client.ConversationRenameResponse getDefaultInstanceForType()
      {
        return Client.ConversationRenameResponse.getDefaultInstance();
      }

      public final Data.ResponseStatus getStatus()
      {
        return this.status_;
      }

      public final long getTimestamp()
      {
        return this.timestamp_;
      }

      public final boolean hasStatus()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean hasTimestamp()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Client.ConversationRenameResponse paramConversationRenameResponse)
      {
        if (paramConversationRenameResponse == Client.ConversationRenameResponse.getDefaultInstance());
        while (true)
        {
          return this;
          if (paramConversationRenameResponse.hasStatus())
            setStatus(paramConversationRenameResponse.getStatus());
          if (paramConversationRenameResponse.hasTimestamp())
            setTimestamp(paramConversationRenameResponse.getTimestamp());
        }
      }

      public final Builder setStatus(Data.ResponseStatus paramResponseStatus)
      {
        if (paramResponseStatus == null)
          throw new NullPointerException();
        this.bitField0_ = (0x1 | this.bitField0_);
        this.status_ = paramResponseStatus;
        return this;
      }

      public final Builder setTimestamp(long paramLong)
      {
        this.bitField0_ = (0x2 | this.bitField0_);
        this.timestamp_ = paramLong;
        return this;
      }
    }
  }

  public static abstract interface ConversationRenameResponseOrBuilder extends MessageLiteOrBuilder
  {
    public abstract Data.ResponseStatus getStatus();

    public abstract long getTimestamp();

    public abstract boolean hasStatus();

    public abstract boolean hasTimestamp();
  }

  public static final class ConversationSearchRequest extends GeneratedMessageLite
    implements Client.ConversationSearchRequestOrBuilder
  {
    private static final ConversationSearchRequest defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private Object contentQuery_;
    private List<Data.ConversationAttributes> conversationQuery_;
    private List<Data.ParticipantAttributes> fromQuery_;
    private boolean hasPhotoQuery_;
    private Data.Location locationQuery_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private Data.StubbyInfo stubbyInfo_;
    private Data.TimeRange timeRangeQuery_;
    private List<Data.ParticipantAttributes> toQuery_;
    private Object unstructuredQuery_;

    static
    {
      ConversationSearchRequest localConversationSearchRequest = new ConversationSearchRequest();
      defaultInstance = localConversationSearchRequest;
      localConversationSearchRequest.unstructuredQuery_ = "";
      localConversationSearchRequest.fromQuery_ = Collections.emptyList();
      localConversationSearchRequest.toQuery_ = Collections.emptyList();
      localConversationSearchRequest.conversationQuery_ = Collections.emptyList();
      localConversationSearchRequest.contentQuery_ = "";
      localConversationSearchRequest.locationQuery_ = Data.Location.getDefaultInstance();
      localConversationSearchRequest.hasPhotoQuery_ = false;
      localConversationSearchRequest.timeRangeQuery_ = Data.TimeRange.getDefaultInstance();
      localConversationSearchRequest.stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
    }

    private ConversationSearchRequest()
    {
    }

    private ConversationSearchRequest(Builder paramBuilder)
    {
      super();
    }

    private ByteString getContentQueryBytes()
    {
      Object localObject = this.contentQuery_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.contentQuery_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static ConversationSearchRequest getDefaultInstance()
    {
      return defaultInstance;
    }

    private ByteString getUnstructuredQueryBytes()
    {
      Object localObject = this.unstructuredQuery_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.unstructuredQuery_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static Builder newBuilder()
    {
      return Builder.access$48600();
    }

    public static Builder newBuilder(ConversationSearchRequest paramConversationSearchRequest)
    {
      return Builder.access$48600().mergeFrom(paramConversationSearchRequest);
    }

    public final String getContentQuery()
    {
      Object localObject1 = this.contentQuery_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.contentQuery_ = str;
      }
    }

    public final Data.ConversationAttributes getConversationQuery(int paramInt)
    {
      return (Data.ConversationAttributes)this.conversationQuery_.get(paramInt);
    }

    public final int getConversationQueryCount()
    {
      return this.conversationQuery_.size();
    }

    public final List<Data.ConversationAttributes> getConversationQueryList()
    {
      return this.conversationQuery_;
    }

    public final Data.ConversationAttributesOrBuilder getConversationQueryOrBuilder(int paramInt)
    {
      return (Data.ConversationAttributesOrBuilder)this.conversationQuery_.get(paramInt);
    }

    public final List<? extends Data.ConversationAttributesOrBuilder> getConversationQueryOrBuilderList()
    {
      return this.conversationQuery_;
    }

    public final ConversationSearchRequest getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final Data.ParticipantAttributes getFromQuery(int paramInt)
    {
      return (Data.ParticipantAttributes)this.fromQuery_.get(paramInt);
    }

    public final int getFromQueryCount()
    {
      return this.fromQuery_.size();
    }

    public final List<Data.ParticipantAttributes> getFromQueryList()
    {
      return this.fromQuery_;
    }

    public final Data.ParticipantAttributesOrBuilder getFromQueryOrBuilder(int paramInt)
    {
      return (Data.ParticipantAttributesOrBuilder)this.fromQuery_.get(paramInt);
    }

    public final List<? extends Data.ParticipantAttributesOrBuilder> getFromQueryOrBuilderList()
    {
      return this.fromQuery_;
    }

    public final boolean getHasPhotoQuery()
    {
      return this.hasPhotoQuery_;
    }

    public final Data.Location getLocationQuery()
    {
      return this.locationQuery_;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int i2 = i; ; i2 = k)
      {
        return i2;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeBytesSize(1, getUnstructuredQueryBytes());
        for (int m = 0; m < this.fromQuery_.size(); m++)
          k += CodedOutputStream.computeMessageSize(2, (MessageLite)this.fromQuery_.get(m));
        for (int n = 0; n < this.toQuery_.size(); n++)
          k += CodedOutputStream.computeMessageSize(3, (MessageLite)this.toQuery_.get(n));
        for (int i1 = 0; i1 < this.conversationQuery_.size(); i1++)
          k += CodedOutputStream.computeMessageSize(4, (MessageLite)this.conversationQuery_.get(i1));
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeBytesSize(5, getContentQueryBytes());
        if ((0x4 & this.bitField0_) == 4)
          k += CodedOutputStream.computeMessageSize(6, this.locationQuery_);
        if ((0x8 & this.bitField0_) == 8)
          k += CodedOutputStream.computeBoolSize(7, this.hasPhotoQuery_);
        if ((0x10 & this.bitField0_) == 16)
          k += CodedOutputStream.computeMessageSize(8, this.timeRangeQuery_);
        if ((0x20 & this.bitField0_) == 32)
          k += CodedOutputStream.computeMessageSize(9, this.stubbyInfo_);
        this.memoizedSerializedSize = k;
      }
    }

    public final Data.StubbyInfo getStubbyInfo()
    {
      return this.stubbyInfo_;
    }

    public final Data.TimeRange getTimeRangeQuery()
    {
      return this.timeRangeQuery_;
    }

    public final Data.ParticipantAttributes getToQuery(int paramInt)
    {
      return (Data.ParticipantAttributes)this.toQuery_.get(paramInt);
    }

    public final int getToQueryCount()
    {
      return this.toQuery_.size();
    }

    public final List<Data.ParticipantAttributes> getToQueryList()
    {
      return this.toQuery_;
    }

    public final Data.ParticipantAttributesOrBuilder getToQueryOrBuilder(int paramInt)
    {
      return (Data.ParticipantAttributesOrBuilder)this.toQuery_.get(paramInt);
    }

    public final List<? extends Data.ParticipantAttributesOrBuilder> getToQueryOrBuilderList()
    {
      return this.toQuery_;
    }

    public final String getUnstructuredQuery()
    {
      Object localObject1 = this.unstructuredQuery_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.unstructuredQuery_ = str;
      }
    }

    public final boolean hasContentQuery()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasHasPhotoQuery()
    {
      if ((0x8 & this.bitField0_) == 8);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasLocationQuery()
    {
      if ((0x4 & this.bitField0_) == 4);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasStubbyInfo()
    {
      if ((0x20 & this.bitField0_) == 32);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasTimeRangeQuery()
    {
      if ((0x10 & this.bitField0_) == 16);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasUnstructuredQuery()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeBytes(1, getUnstructuredQueryBytes());
      for (int i = 0; i < this.fromQuery_.size(); i++)
        paramCodedOutputStream.writeMessage(2, (MessageLite)this.fromQuery_.get(i));
      for (int j = 0; j < this.toQuery_.size(); j++)
        paramCodedOutputStream.writeMessage(3, (MessageLite)this.toQuery_.get(j));
      for (int k = 0; k < this.conversationQuery_.size(); k++)
        paramCodedOutputStream.writeMessage(4, (MessageLite)this.conversationQuery_.get(k));
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeBytes(5, getContentQueryBytes());
      if ((0x4 & this.bitField0_) == 4)
        paramCodedOutputStream.writeMessage(6, this.locationQuery_);
      if ((0x8 & this.bitField0_) == 8)
        paramCodedOutputStream.writeBool(7, this.hasPhotoQuery_);
      if ((0x10 & this.bitField0_) == 16)
        paramCodedOutputStream.writeMessage(8, this.timeRangeQuery_);
      if ((0x20 & this.bitField0_) == 32)
        paramCodedOutputStream.writeMessage(9, this.stubbyInfo_);
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Client.ConversationSearchRequest, Builder>
      implements Client.ConversationSearchRequestOrBuilder
    {
      private int bitField0_;
      private Object contentQuery_ = "";
      private List<Data.ConversationAttributes> conversationQuery_ = Collections.emptyList();
      private List<Data.ParticipantAttributes> fromQuery_ = Collections.emptyList();
      private boolean hasPhotoQuery_;
      private Data.Location locationQuery_ = Data.Location.getDefaultInstance();
      private Data.StubbyInfo stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
      private Data.TimeRange timeRangeQuery_ = Data.TimeRange.getDefaultInstance();
      private List<Data.ParticipantAttributes> toQuery_ = Collections.emptyList();
      private Object unstructuredQuery_ = "";

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private void ensureConversationQueryIsMutable()
      {
        if ((0x8 & this.bitField0_) != 8)
        {
          this.conversationQuery_ = new ArrayList(this.conversationQuery_);
          this.bitField0_ = (0x8 | this.bitField0_);
        }
      }

      private void ensureFromQueryIsMutable()
      {
        if ((0x2 & this.bitField0_) != 2)
        {
          this.fromQuery_ = new ArrayList(this.fromQuery_);
          this.bitField0_ = (0x2 | this.bitField0_);
        }
      }

      private void ensureToQueryIsMutable()
      {
        if ((0x4 & this.bitField0_) != 4)
        {
          this.toQuery_ = new ArrayList(this.toQuery_);
          this.bitField0_ = (0x4 | this.bitField0_);
        }
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 10:
            this.bitField0_ = (0x1 | this.bitField0_);
            this.unstructuredQuery_ = paramCodedInputStream.readBytes();
            break;
          case 18:
            Data.ParticipantAttributes.Builder localBuilder5 = Data.ParticipantAttributes.newBuilder();
            paramCodedInputStream.readMessage(localBuilder5, paramExtensionRegistryLite);
            addFromQuery(localBuilder5.buildPartial());
            break;
          case 26:
            Data.ParticipantAttributes.Builder localBuilder4 = Data.ParticipantAttributes.newBuilder();
            paramCodedInputStream.readMessage(localBuilder4, paramExtensionRegistryLite);
            addToQuery(localBuilder4.buildPartial());
            break;
          case 34:
            Data.ConversationAttributes.Builder localBuilder3 = Data.ConversationAttributes.newBuilder();
            paramCodedInputStream.readMessage(localBuilder3, paramExtensionRegistryLite);
            addConversationQuery(localBuilder3.buildPartial());
            break;
          case 42:
            this.bitField0_ = (0x10 | this.bitField0_);
            this.contentQuery_ = paramCodedInputStream.readBytes();
            break;
          case 50:
            Data.Location.Builder localBuilder2 = Data.Location.newBuilder();
            if (hasLocationQuery())
              localBuilder2.mergeFrom(getLocationQuery());
            paramCodedInputStream.readMessage(localBuilder2, paramExtensionRegistryLite);
            setLocationQuery(localBuilder2.buildPartial());
            break;
          case 56:
            this.bitField0_ = (0x40 | this.bitField0_);
            this.hasPhotoQuery_ = paramCodedInputStream.readBool();
            break;
          case 66:
            Data.TimeRange.Builder localBuilder1 = Data.TimeRange.newBuilder();
            if (hasTimeRangeQuery())
              localBuilder1.mergeFrom(getTimeRangeQuery());
            paramCodedInputStream.readMessage(localBuilder1, paramExtensionRegistryLite);
            setTimeRangeQuery(localBuilder1.buildPartial());
            break;
          case 74:
          }
          Data.StubbyInfo.Builder localBuilder = Data.StubbyInfo.newBuilder();
          if (hasStubbyInfo())
            localBuilder.mergeFrom(getStubbyInfo());
          paramCodedInputStream.readMessage(localBuilder, paramExtensionRegistryLite);
          setStubbyInfo(localBuilder.buildPartial());
        }
      }

      public final Builder addAllConversationQuery(Iterable<? extends Data.ConversationAttributes> paramIterable)
      {
        ensureConversationQueryIsMutable();
        GeneratedMessageLite.Builder.addAll(paramIterable, this.conversationQuery_);
        return this;
      }

      public final Builder addAllFromQuery(Iterable<? extends Data.ParticipantAttributes> paramIterable)
      {
        ensureFromQueryIsMutable();
        GeneratedMessageLite.Builder.addAll(paramIterable, this.fromQuery_);
        return this;
      }

      public final Builder addAllToQuery(Iterable<? extends Data.ParticipantAttributes> paramIterable)
      {
        ensureToQueryIsMutable();
        GeneratedMessageLite.Builder.addAll(paramIterable, this.toQuery_);
        return this;
      }

      public final Builder addConversationQuery(int paramInt, Data.ConversationAttributes.Builder paramBuilder)
      {
        ensureConversationQueryIsMutable();
        this.conversationQuery_.add(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder addConversationQuery(int paramInt, Data.ConversationAttributes paramConversationAttributes)
      {
        if (paramConversationAttributes == null)
          throw new NullPointerException();
        ensureConversationQueryIsMutable();
        this.conversationQuery_.add(paramInt, paramConversationAttributes);
        return this;
      }

      public final Builder addConversationQuery(Data.ConversationAttributes.Builder paramBuilder)
      {
        ensureConversationQueryIsMutable();
        this.conversationQuery_.add(paramBuilder.build());
        return this;
      }

      public final Builder addConversationQuery(Data.ConversationAttributes paramConversationAttributes)
      {
        if (paramConversationAttributes == null)
          throw new NullPointerException();
        ensureConversationQueryIsMutable();
        this.conversationQuery_.add(paramConversationAttributes);
        return this;
      }

      public final Builder addFromQuery(int paramInt, Data.ParticipantAttributes.Builder paramBuilder)
      {
        ensureFromQueryIsMutable();
        this.fromQuery_.add(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder addFromQuery(int paramInt, Data.ParticipantAttributes paramParticipantAttributes)
      {
        if (paramParticipantAttributes == null)
          throw new NullPointerException();
        ensureFromQueryIsMutable();
        this.fromQuery_.add(paramInt, paramParticipantAttributes);
        return this;
      }

      public final Builder addFromQuery(Data.ParticipantAttributes.Builder paramBuilder)
      {
        ensureFromQueryIsMutable();
        this.fromQuery_.add(paramBuilder.build());
        return this;
      }

      public final Builder addFromQuery(Data.ParticipantAttributes paramParticipantAttributes)
      {
        if (paramParticipantAttributes == null)
          throw new NullPointerException();
        ensureFromQueryIsMutable();
        this.fromQuery_.add(paramParticipantAttributes);
        return this;
      }

      public final Builder addToQuery(int paramInt, Data.ParticipantAttributes.Builder paramBuilder)
      {
        ensureToQueryIsMutable();
        this.toQuery_.add(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder addToQuery(int paramInt, Data.ParticipantAttributes paramParticipantAttributes)
      {
        if (paramParticipantAttributes == null)
          throw new NullPointerException();
        ensureToQueryIsMutable();
        this.toQuery_.add(paramInt, paramParticipantAttributes);
        return this;
      }

      public final Builder addToQuery(Data.ParticipantAttributes.Builder paramBuilder)
      {
        ensureToQueryIsMutable();
        this.toQuery_.add(paramBuilder.build());
        return this;
      }

      public final Builder addToQuery(Data.ParticipantAttributes paramParticipantAttributes)
      {
        if (paramParticipantAttributes == null)
          throw new NullPointerException();
        ensureToQueryIsMutable();
        this.toQuery_.add(paramParticipantAttributes);
        return this;
      }

      public final Client.ConversationSearchRequest build()
      {
        Client.ConversationSearchRequest localConversationSearchRequest = buildPartial();
        if (!localConversationSearchRequest.isInitialized())
          throw new UninitializedMessageException();
        return localConversationSearchRequest;
      }

      public final Client.ConversationSearchRequest buildPartial()
      {
        Client.ConversationSearchRequest localConversationSearchRequest = new Client.ConversationSearchRequest(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Client.ConversationSearchRequest.access$48802(localConversationSearchRequest, this.unstructuredQuery_);
        if ((0x2 & this.bitField0_) == 2)
        {
          this.fromQuery_ = Collections.unmodifiableList(this.fromQuery_);
          this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        }
        Client.ConversationSearchRequest.access$48902(localConversationSearchRequest, this.fromQuery_);
        if ((0x4 & this.bitField0_) == 4)
        {
          this.toQuery_ = Collections.unmodifiableList(this.toQuery_);
          this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        }
        Client.ConversationSearchRequest.access$49002(localConversationSearchRequest, this.toQuery_);
        if ((0x8 & this.bitField0_) == 8)
        {
          this.conversationQuery_ = Collections.unmodifiableList(this.conversationQuery_);
          this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        }
        Client.ConversationSearchRequest.access$49102(localConversationSearchRequest, this.conversationQuery_);
        if ((i & 0x10) == 16)
          k |= 2;
        Client.ConversationSearchRequest.access$49202(localConversationSearchRequest, this.contentQuery_);
        if ((i & 0x20) == 32)
          k |= 4;
        Client.ConversationSearchRequest.access$49302(localConversationSearchRequest, this.locationQuery_);
        if ((i & 0x40) == 64)
          k |= 8;
        Client.ConversationSearchRequest.access$49402(localConversationSearchRequest, this.hasPhotoQuery_);
        if ((i & 0x80) == 128)
          k |= 16;
        Client.ConversationSearchRequest.access$49502(localConversationSearchRequest, this.timeRangeQuery_);
        if ((i & 0x100) == 256)
          k |= 32;
        Client.ConversationSearchRequest.access$49602(localConversationSearchRequest, this.stubbyInfo_);
        Client.ConversationSearchRequest.access$49702(localConversationSearchRequest, k);
        return localConversationSearchRequest;
      }

      public final Builder clear()
      {
        super.clear();
        this.unstructuredQuery_ = "";
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.fromQuery_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.toQuery_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.conversationQuery_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        this.contentQuery_ = "";
        this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        this.locationQuery_ = Data.Location.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFDF & this.bitField0_);
        this.hasPhotoQuery_ = false;
        this.bitField0_ = (0xFFFFFFBF & this.bitField0_);
        this.timeRangeQuery_ = Data.TimeRange.getDefaultInstance();
        this.bitField0_ = (0xFFFFFF7F & this.bitField0_);
        this.stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
        this.bitField0_ = (0xFFFFFEFF & this.bitField0_);
        return this;
      }

      public final Builder clearContentQuery()
      {
        this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        this.contentQuery_ = Client.ConversationSearchRequest.getDefaultInstance().getContentQuery();
        return this;
      }

      public final Builder clearConversationQuery()
      {
        this.conversationQuery_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        return this;
      }

      public final Builder clearFromQuery()
      {
        this.fromQuery_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        return this;
      }

      public final Builder clearHasPhotoQuery()
      {
        this.bitField0_ = (0xFFFFFFBF & this.bitField0_);
        this.hasPhotoQuery_ = false;
        return this;
      }

      public final Builder clearLocationQuery()
      {
        this.locationQuery_ = Data.Location.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFDF & this.bitField0_);
        return this;
      }

      public final Builder clearStubbyInfo()
      {
        this.stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
        this.bitField0_ = (0xFFFFFEFF & this.bitField0_);
        return this;
      }

      public final Builder clearTimeRangeQuery()
      {
        this.timeRangeQuery_ = Data.TimeRange.getDefaultInstance();
        this.bitField0_ = (0xFFFFFF7F & this.bitField0_);
        return this;
      }

      public final Builder clearToQuery()
      {
        this.toQuery_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        return this;
      }

      public final Builder clearUnstructuredQuery()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.unstructuredQuery_ = Client.ConversationSearchRequest.getDefaultInstance().getUnstructuredQuery();
        return this;
      }

      public final String getContentQuery()
      {
        Object localObject = this.contentQuery_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.contentQuery_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final Data.ConversationAttributes getConversationQuery(int paramInt)
      {
        return (Data.ConversationAttributes)this.conversationQuery_.get(paramInt);
      }

      public final int getConversationQueryCount()
      {
        return this.conversationQuery_.size();
      }

      public final List<Data.ConversationAttributes> getConversationQueryList()
      {
        return Collections.unmodifiableList(this.conversationQuery_);
      }

      public final Client.ConversationSearchRequest getDefaultInstanceForType()
      {
        return Client.ConversationSearchRequest.getDefaultInstance();
      }

      public final Data.ParticipantAttributes getFromQuery(int paramInt)
      {
        return (Data.ParticipantAttributes)this.fromQuery_.get(paramInt);
      }

      public final int getFromQueryCount()
      {
        return this.fromQuery_.size();
      }

      public final List<Data.ParticipantAttributes> getFromQueryList()
      {
        return Collections.unmodifiableList(this.fromQuery_);
      }

      public final boolean getHasPhotoQuery()
      {
        return this.hasPhotoQuery_;
      }

      public final Data.Location getLocationQuery()
      {
        return this.locationQuery_;
      }

      public final Data.StubbyInfo getStubbyInfo()
      {
        return this.stubbyInfo_;
      }

      public final Data.TimeRange getTimeRangeQuery()
      {
        return this.timeRangeQuery_;
      }

      public final Data.ParticipantAttributes getToQuery(int paramInt)
      {
        return (Data.ParticipantAttributes)this.toQuery_.get(paramInt);
      }

      public final int getToQueryCount()
      {
        return this.toQuery_.size();
      }

      public final List<Data.ParticipantAttributes> getToQueryList()
      {
        return Collections.unmodifiableList(this.toQuery_);
      }

      public final String getUnstructuredQuery()
      {
        Object localObject = this.unstructuredQuery_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.unstructuredQuery_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final boolean hasContentQuery()
      {
        if ((0x10 & this.bitField0_) == 16);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasHasPhotoQuery()
      {
        if ((0x40 & this.bitField0_) == 64);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasLocationQuery()
      {
        if ((0x20 & this.bitField0_) == 32);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasStubbyInfo()
      {
        if ((0x100 & this.bitField0_) == 256);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasTimeRangeQuery()
      {
        if ((0x80 & this.bitField0_) == 128);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasUnstructuredQuery()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Client.ConversationSearchRequest paramConversationSearchRequest)
      {
        if (paramConversationSearchRequest == Client.ConversationSearchRequest.getDefaultInstance());
        label68: label111: Data.Location localLocation;
        label154: label224: Data.TimeRange localTimeRange;
        label305: 
        do
        {
          return this;
          if (paramConversationSearchRequest.hasUnstructuredQuery())
            setUnstructuredQuery(paramConversationSearchRequest.getUnstructuredQuery());
          if (!paramConversationSearchRequest.fromQuery_.isEmpty())
          {
            if (!this.fromQuery_.isEmpty())
              break;
            this.fromQuery_ = paramConversationSearchRequest.fromQuery_;
            this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
          }
          if (!paramConversationSearchRequest.toQuery_.isEmpty())
          {
            if (!this.toQuery_.isEmpty())
              break label407;
            this.toQuery_ = paramConversationSearchRequest.toQuery_;
            this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
          }
          if (!paramConversationSearchRequest.conversationQuery_.isEmpty())
          {
            if (!this.conversationQuery_.isEmpty())
              break label428;
            this.conversationQuery_ = paramConversationSearchRequest.conversationQuery_;
            this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
          }
          if (paramConversationSearchRequest.hasContentQuery())
            setContentQuery(paramConversationSearchRequest.getContentQuery());
          if (paramConversationSearchRequest.hasLocationQuery())
          {
            localLocation = paramConversationSearchRequest.getLocationQuery();
            if (((0x20 & this.bitField0_) != 32) || (this.locationQuery_ == Data.Location.getDefaultInstance()))
              break label449;
            this.locationQuery_ = Data.Location.newBuilder(this.locationQuery_).mergeFrom(localLocation).buildPartial();
            this.bitField0_ = (0x20 | this.bitField0_);
          }
          if (paramConversationSearchRequest.hasHasPhotoQuery())
            setHasPhotoQuery(paramConversationSearchRequest.getHasPhotoQuery());
          if (paramConversationSearchRequest.hasTimeRangeQuery())
          {
            localTimeRange = paramConversationSearchRequest.getTimeRangeQuery();
            if (((0x80 & this.bitField0_) != 128) || (this.timeRangeQuery_ == Data.TimeRange.getDefaultInstance()))
              break label458;
            this.timeRangeQuery_ = Data.TimeRange.newBuilder(this.timeRangeQuery_).mergeFrom(localTimeRange).buildPartial();
            this.bitField0_ = (0x80 | this.bitField0_);
          }
        }
        while (!paramConversationSearchRequest.hasStubbyInfo());
        Data.StubbyInfo localStubbyInfo = paramConversationSearchRequest.getStubbyInfo();
        if (((0x100 & this.bitField0_) == 256) && (this.stubbyInfo_ != Data.StubbyInfo.getDefaultInstance()));
        for (this.stubbyInfo_ = Data.StubbyInfo.newBuilder(this.stubbyInfo_).mergeFrom(localStubbyInfo).buildPartial(); ; this.stubbyInfo_ = localStubbyInfo)
        {
          this.bitField0_ = (0x100 | this.bitField0_);
          break;
          ensureFromQueryIsMutable();
          this.fromQuery_.addAll(paramConversationSearchRequest.fromQuery_);
          break label68;
          label407: ensureToQueryIsMutable();
          this.toQuery_.addAll(paramConversationSearchRequest.toQuery_);
          break label111;
          label428: ensureConversationQueryIsMutable();
          this.conversationQuery_.addAll(paramConversationSearchRequest.conversationQuery_);
          break label154;
          label449: this.locationQuery_ = localLocation;
          break label224;
          label458: this.timeRangeQuery_ = localTimeRange;
          break label305;
        }
      }

      public final Builder setContentQuery(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x10 | this.bitField0_);
        this.contentQuery_ = paramString;
        return this;
      }

      public final Builder setConversationQuery(int paramInt, Data.ConversationAttributes.Builder paramBuilder)
      {
        ensureConversationQueryIsMutable();
        this.conversationQuery_.set(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder setConversationQuery(int paramInt, Data.ConversationAttributes paramConversationAttributes)
      {
        if (paramConversationAttributes == null)
          throw new NullPointerException();
        ensureConversationQueryIsMutable();
        this.conversationQuery_.set(paramInt, paramConversationAttributes);
        return this;
      }

      public final Builder setFromQuery(int paramInt, Data.ParticipantAttributes.Builder paramBuilder)
      {
        ensureFromQueryIsMutable();
        this.fromQuery_.set(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder setFromQuery(int paramInt, Data.ParticipantAttributes paramParticipantAttributes)
      {
        if (paramParticipantAttributes == null)
          throw new NullPointerException();
        ensureFromQueryIsMutable();
        this.fromQuery_.set(paramInt, paramParticipantAttributes);
        return this;
      }

      public final Builder setHasPhotoQuery(boolean paramBoolean)
      {
        this.bitField0_ = (0x40 | this.bitField0_);
        this.hasPhotoQuery_ = paramBoolean;
        return this;
      }

      public final Builder setLocationQuery(Data.Location.Builder paramBuilder)
      {
        this.locationQuery_ = paramBuilder.build();
        this.bitField0_ = (0x20 | this.bitField0_);
        return this;
      }

      public final Builder setLocationQuery(Data.Location paramLocation)
      {
        if (paramLocation == null)
          throw new NullPointerException();
        this.locationQuery_ = paramLocation;
        this.bitField0_ = (0x20 | this.bitField0_);
        return this;
      }

      public final Builder setStubbyInfo(Data.StubbyInfo.Builder paramBuilder)
      {
        this.stubbyInfo_ = paramBuilder.build();
        this.bitField0_ = (0x100 | this.bitField0_);
        return this;
      }

      public final Builder setStubbyInfo(Data.StubbyInfo paramStubbyInfo)
      {
        if (paramStubbyInfo == null)
          throw new NullPointerException();
        this.stubbyInfo_ = paramStubbyInfo;
        this.bitField0_ = (0x100 | this.bitField0_);
        return this;
      }

      public final Builder setTimeRangeQuery(Data.TimeRange.Builder paramBuilder)
      {
        this.timeRangeQuery_ = paramBuilder.build();
        this.bitField0_ = (0x80 | this.bitField0_);
        return this;
      }

      public final Builder setTimeRangeQuery(Data.TimeRange paramTimeRange)
      {
        if (paramTimeRange == null)
          throw new NullPointerException();
        this.timeRangeQuery_ = paramTimeRange;
        this.bitField0_ = (0x80 | this.bitField0_);
        return this;
      }

      public final Builder setToQuery(int paramInt, Data.ParticipantAttributes.Builder paramBuilder)
      {
        ensureToQueryIsMutable();
        this.toQuery_.set(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder setToQuery(int paramInt, Data.ParticipantAttributes paramParticipantAttributes)
      {
        if (paramParticipantAttributes == null)
          throw new NullPointerException();
        ensureToQueryIsMutable();
        this.toQuery_.set(paramInt, paramParticipantAttributes);
        return this;
      }

      public final Builder setUnstructuredQuery(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x1 | this.bitField0_);
        this.unstructuredQuery_ = paramString;
        return this;
      }
    }
  }

  public static abstract interface ConversationSearchRequestOrBuilder extends MessageLiteOrBuilder
  {
    public abstract String getContentQuery();

    public abstract Data.ConversationAttributes getConversationQuery(int paramInt);

    public abstract int getConversationQueryCount();

    public abstract List<Data.ConversationAttributes> getConversationQueryList();

    public abstract Data.ParticipantAttributes getFromQuery(int paramInt);

    public abstract int getFromQueryCount();

    public abstract List<Data.ParticipantAttributes> getFromQueryList();

    public abstract boolean getHasPhotoQuery();

    public abstract Data.Location getLocationQuery();

    public abstract Data.StubbyInfo getStubbyInfo();

    public abstract Data.TimeRange getTimeRangeQuery();

    public abstract Data.ParticipantAttributes getToQuery(int paramInt);

    public abstract int getToQueryCount();

    public abstract List<Data.ParticipantAttributes> getToQueryList();

    public abstract String getUnstructuredQuery();

    public abstract boolean hasContentQuery();

    public abstract boolean hasHasPhotoQuery();

    public abstract boolean hasLocationQuery();

    public abstract boolean hasStubbyInfo();

    public abstract boolean hasTimeRangeQuery();

    public abstract boolean hasUnstructuredQuery();
  }

  public static final class ConversationSearchResponse extends GeneratedMessageLite
    implements Client.ConversationSearchResponseOrBuilder
  {
    private static final ConversationSearchResponse defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private List<Client.ClientConversation> conversation_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private Data.ResponseStatus status_;

    static
    {
      ConversationSearchResponse localConversationSearchResponse = new ConversationSearchResponse();
      defaultInstance = localConversationSearchResponse;
      localConversationSearchResponse.status_ = Data.ResponseStatus.OK;
      localConversationSearchResponse.conversation_ = Collections.emptyList();
    }

    private ConversationSearchResponse()
    {
    }

    private ConversationSearchResponse(Builder paramBuilder)
    {
      super();
    }

    public static ConversationSearchResponse getDefaultInstance()
    {
      return defaultInstance;
    }

    public static Builder newBuilder()
    {
      return Builder.access$51100();
    }

    public static Builder newBuilder(ConversationSearchResponse paramConversationSearchResponse)
    {
      return Builder.access$51100().mergeFrom(paramConversationSearchResponse);
    }

    public final Client.ClientConversation getConversation(int paramInt)
    {
      return (Client.ClientConversation)this.conversation_.get(paramInt);
    }

    public final int getConversationCount()
    {
      return this.conversation_.size();
    }

    public final List<Client.ClientConversation> getConversationList()
    {
      return this.conversation_;
    }

    public final Client.ClientConversationOrBuilder getConversationOrBuilder(int paramInt)
    {
      return (Client.ClientConversationOrBuilder)this.conversation_.get(paramInt);
    }

    public final List<? extends Client.ClientConversationOrBuilder> getConversationOrBuilderList()
    {
      return this.conversation_;
    }

    public final ConversationSearchResponse getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int n = i; ; n = k)
      {
        return n;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeEnumSize(1, this.status_.getNumber());
        for (int m = 0; m < this.conversation_.size(); m++)
          k += CodedOutputStream.computeMessageSize(2, (MessageLite)this.conversation_.get(m));
        this.memoizedSerializedSize = k;
      }
    }

    public final Data.ResponseStatus getStatus()
    {
      return this.status_;
    }

    public final boolean hasStatus()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeEnum(1, this.status_.getNumber());
      for (int i = 0; i < this.conversation_.size(); i++)
        paramCodedOutputStream.writeMessage(2, (MessageLite)this.conversation_.get(i));
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Client.ConversationSearchResponse, Builder>
      implements Client.ConversationSearchResponseOrBuilder
    {
      private int bitField0_;
      private List<Client.ClientConversation> conversation_ = Collections.emptyList();
      private Data.ResponseStatus status_ = Data.ResponseStatus.OK;

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private void ensureConversationIsMutable()
      {
        if ((0x2 & this.bitField0_) != 2)
        {
          this.conversation_ = new ArrayList(this.conversation_);
          this.bitField0_ = (0x2 | this.bitField0_);
        }
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 8:
            Data.ResponseStatus localResponseStatus = Data.ResponseStatus.valueOf(paramCodedInputStream.readEnum());
            if (localResponseStatus == null)
              continue;
            this.bitField0_ = (0x1 | this.bitField0_);
            this.status_ = localResponseStatus;
            break;
          case 18:
          }
          Client.ClientConversation.Builder localBuilder = Client.ClientConversation.newBuilder();
          paramCodedInputStream.readMessage(localBuilder, paramExtensionRegistryLite);
          addConversation(localBuilder.buildPartial());
        }
      }

      public final Builder addAllConversation(Iterable<? extends Client.ClientConversation> paramIterable)
      {
        ensureConversationIsMutable();
        GeneratedMessageLite.Builder.addAll(paramIterable, this.conversation_);
        return this;
      }

      public final Builder addConversation(int paramInt, Client.ClientConversation.Builder paramBuilder)
      {
        ensureConversationIsMutable();
        this.conversation_.add(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder addConversation(int paramInt, Client.ClientConversation paramClientConversation)
      {
        if (paramClientConversation == null)
          throw new NullPointerException();
        ensureConversationIsMutable();
        this.conversation_.add(paramInt, paramClientConversation);
        return this;
      }

      public final Builder addConversation(Client.ClientConversation.Builder paramBuilder)
      {
        ensureConversationIsMutable();
        this.conversation_.add(paramBuilder.build());
        return this;
      }

      public final Builder addConversation(Client.ClientConversation paramClientConversation)
      {
        if (paramClientConversation == null)
          throw new NullPointerException();
        ensureConversationIsMutable();
        this.conversation_.add(paramClientConversation);
        return this;
      }

      public final Client.ConversationSearchResponse build()
      {
        Client.ConversationSearchResponse localConversationSearchResponse = buildPartial();
        if (!localConversationSearchResponse.isInitialized())
          throw new UninitializedMessageException();
        return localConversationSearchResponse;
      }

      public final Client.ConversationSearchResponse buildPartial()
      {
        Client.ConversationSearchResponse localConversationSearchResponse = new Client.ConversationSearchResponse(this, (byte)0);
        int i = 0x1 & this.bitField0_;
        int j = 0;
        if (i == 1)
          j = 1;
        Client.ConversationSearchResponse.access$51302(localConversationSearchResponse, this.status_);
        if ((0x2 & this.bitField0_) == 2)
        {
          this.conversation_ = Collections.unmodifiableList(this.conversation_);
          this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        }
        Client.ConversationSearchResponse.access$51402(localConversationSearchResponse, this.conversation_);
        Client.ConversationSearchResponse.access$51502(localConversationSearchResponse, j);
        return localConversationSearchResponse;
      }

      public final Builder clear()
      {
        super.clear();
        this.status_ = Data.ResponseStatus.OK;
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.conversation_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        return this;
      }

      public final Builder clearConversation()
      {
        this.conversation_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        return this;
      }

      public final Builder clearStatus()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.status_ = Data.ResponseStatus.OK;
        return this;
      }

      public final Client.ClientConversation getConversation(int paramInt)
      {
        return (Client.ClientConversation)this.conversation_.get(paramInt);
      }

      public final int getConversationCount()
      {
        return this.conversation_.size();
      }

      public final List<Client.ClientConversation> getConversationList()
      {
        return Collections.unmodifiableList(this.conversation_);
      }

      public final Client.ConversationSearchResponse getDefaultInstanceForType()
      {
        return Client.ConversationSearchResponse.getDefaultInstance();
      }

      public final Data.ResponseStatus getStatus()
      {
        return this.status_;
      }

      public final boolean hasStatus()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Client.ConversationSearchResponse paramConversationSearchResponse)
      {
        if (paramConversationSearchResponse == Client.ConversationSearchResponse.getDefaultInstance());
        while (true)
        {
          return this;
          if (paramConversationSearchResponse.hasStatus())
            setStatus(paramConversationSearchResponse.getStatus());
          if (!paramConversationSearchResponse.conversation_.isEmpty())
            if (this.conversation_.isEmpty())
            {
              this.conversation_ = paramConversationSearchResponse.conversation_;
              this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
            }
            else
            {
              ensureConversationIsMutable();
              this.conversation_.addAll(paramConversationSearchResponse.conversation_);
            }
        }
      }

      public final Builder setConversation(int paramInt, Client.ClientConversation.Builder paramBuilder)
      {
        ensureConversationIsMutable();
        this.conversation_.set(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder setConversation(int paramInt, Client.ClientConversation paramClientConversation)
      {
        if (paramClientConversation == null)
          throw new NullPointerException();
        ensureConversationIsMutable();
        this.conversation_.set(paramInt, paramClientConversation);
        return this;
      }

      public final Builder setStatus(Data.ResponseStatus paramResponseStatus)
      {
        if (paramResponseStatus == null)
          throw new NullPointerException();
        this.bitField0_ = (0x1 | this.bitField0_);
        this.status_ = paramResponseStatus;
        return this;
      }
    }
  }

  public static abstract interface ConversationSearchResponseOrBuilder extends MessageLiteOrBuilder
  {
    public abstract Client.ClientConversation getConversation(int paramInt);

    public abstract int getConversationCount();

    public abstract List<Client.ClientConversation> getConversationList();

    public abstract Data.ResponseStatus getStatus();

    public abstract boolean hasStatus();
  }

  public static final class DeviceInfo extends GeneratedMessageLite
    implements Client.DeviceInfoOrBuilder
  {
    private static final DeviceInfo defaultInstance;
    private static final long serialVersionUID;
    private long androidId_;
    private Object appId_;
    private int bitField0_;
    private Version.ClientVersion clientVersion_;
    private long createdAt_;
    private boolean enabled_;
    private long markedForDeletionAt_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private Object phoneNumber_;
    private boolean pushEnabled_;
    private ByteString token_;
    private DeviceType type_;
    private long updatedAt_;

    static
    {
      DeviceInfo localDeviceInfo = new DeviceInfo();
      defaultInstance = localDeviceInfo;
      localDeviceInfo.type_ = DeviceType.ANDROID;
      localDeviceInfo.enabled_ = false;
      localDeviceInfo.pushEnabled_ = false;
      localDeviceInfo.token_ = ByteString.EMPTY;
      localDeviceInfo.phoneNumber_ = "";
      localDeviceInfo.createdAt_ = 0L;
      localDeviceInfo.updatedAt_ = 0L;
      localDeviceInfo.markedForDeletionAt_ = 0L;
      localDeviceInfo.appId_ = "";
      localDeviceInfo.androidId_ = 0L;
      localDeviceInfo.clientVersion_ = Version.ClientVersion.getDefaultInstance();
    }

    private DeviceInfo()
    {
    }

    private DeviceInfo(Builder paramBuilder)
    {
      super();
    }

    private ByteString getAppIdBytes()
    {
      Object localObject = this.appId_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.appId_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static DeviceInfo getDefaultInstance()
    {
      return defaultInstance;
    }

    private ByteString getPhoneNumberBytes()
    {
      Object localObject = this.phoneNumber_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.phoneNumber_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static Builder newBuilder()
    {
      return Builder.access$52400();
    }

    public final long getAndroidId()
    {
      return this.androidId_;
    }

    public final String getAppId()
    {
      Object localObject1 = this.appId_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.appId_ = str;
      }
    }

    public final Version.ClientVersion getClientVersion()
    {
      return this.clientVersion_;
    }

    public final long getCreatedAt()
    {
      return this.createdAt_;
    }

    public final DeviceInfo getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final boolean getEnabled()
    {
      return this.enabled_;
    }

    public final long getMarkedForDeletionAt()
    {
      return this.markedForDeletionAt_;
    }

    public final String getPhoneNumber()
    {
      Object localObject1 = this.phoneNumber_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.phoneNumber_ = str;
      }
    }

    public final boolean getPushEnabled()
    {
      return this.pushEnabled_;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeEnumSize(1, this.type_.getNumber());
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeBoolSize(2, this.enabled_);
        if ((0x4 & this.bitField0_) == 4)
          k += CodedOutputStream.computeBoolSize(3, this.pushEnabled_);
        if ((0x8 & this.bitField0_) == 8)
          k += CodedOutputStream.computeBytesSize(4, this.token_);
        if ((0x10 & this.bitField0_) == 16)
          k += CodedOutputStream.computeBytesSize(5, getPhoneNumberBytes());
        if ((0x20 & this.bitField0_) == 32)
          k += CodedOutputStream.computeInt64Size(6, this.createdAt_);
        if ((0x40 & this.bitField0_) == 64)
          k += CodedOutputStream.computeInt64Size(7, this.updatedAt_);
        if ((0x80 & this.bitField0_) == 128)
          k += CodedOutputStream.computeInt64Size(8, this.markedForDeletionAt_);
        if ((0x100 & this.bitField0_) == 256)
          k += CodedOutputStream.computeBytesSize(9, getAppIdBytes());
        if ((0x200 & this.bitField0_) == 512)
          k += CodedOutputStream.computeInt64Size(10, this.androidId_);
        if ((0x400 & this.bitField0_) == 1024)
          k += CodedOutputStream.computeMessageSize(11, this.clientVersion_);
        this.memoizedSerializedSize = k;
      }
    }

    public final ByteString getToken()
    {
      return this.token_;
    }

    public final DeviceType getType()
    {
      return this.type_;
    }

    public final long getUpdatedAt()
    {
      return this.updatedAt_;
    }

    public final boolean hasAndroidId()
    {
      if ((0x200 & this.bitField0_) == 512);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasAppId()
    {
      if ((0x100 & this.bitField0_) == 256);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasClientVersion()
    {
      if ((0x400 & this.bitField0_) == 1024);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasCreatedAt()
    {
      if ((0x20 & this.bitField0_) == 32);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasEnabled()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasMarkedForDeletionAt()
    {
      if ((0x80 & this.bitField0_) == 128);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasPhoneNumber()
    {
      if ((0x10 & this.bitField0_) == 16);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasPushEnabled()
    {
      if ((0x4 & this.bitField0_) == 4);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasToken()
    {
      if ((0x8 & this.bitField0_) == 8);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasType()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean hasUpdatedAt()
    {
      if ((0x40 & this.bitField0_) == 64);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeEnum(1, this.type_.getNumber());
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeBool(2, this.enabled_);
      if ((0x4 & this.bitField0_) == 4)
        paramCodedOutputStream.writeBool(3, this.pushEnabled_);
      if ((0x8 & this.bitField0_) == 8)
        paramCodedOutputStream.writeBytes(4, this.token_);
      if ((0x10 & this.bitField0_) == 16)
        paramCodedOutputStream.writeBytes(5, getPhoneNumberBytes());
      if ((0x20 & this.bitField0_) == 32)
        paramCodedOutputStream.writeInt64(6, this.createdAt_);
      if ((0x40 & this.bitField0_) == 64)
        paramCodedOutputStream.writeInt64(7, this.updatedAt_);
      if ((0x80 & this.bitField0_) == 128)
        paramCodedOutputStream.writeInt64(8, this.markedForDeletionAt_);
      if ((0x100 & this.bitField0_) == 256)
        paramCodedOutputStream.writeBytes(9, getAppIdBytes());
      if ((0x200 & this.bitField0_) == 512)
        paramCodedOutputStream.writeInt64(10, this.androidId_);
      if ((0x400 & this.bitField0_) == 1024)
        paramCodedOutputStream.writeMessage(11, this.clientVersion_);
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Client.DeviceInfo, Builder>
      implements Client.DeviceInfoOrBuilder
    {
      private long androidId_;
      private Object appId_ = "";
      private int bitField0_;
      private Version.ClientVersion clientVersion_ = Version.ClientVersion.getDefaultInstance();
      private long createdAt_;
      private boolean enabled_;
      private long markedForDeletionAt_;
      private Object phoneNumber_ = "";
      private boolean pushEnabled_;
      private ByteString token_ = ByteString.EMPTY;
      private Client.DeviceInfo.DeviceType type_ = Client.DeviceInfo.DeviceType.ANDROID;
      private long updatedAt_;

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 8:
            Client.DeviceInfo.DeviceType localDeviceType = Client.DeviceInfo.DeviceType.valueOf(paramCodedInputStream.readEnum());
            if (localDeviceType == null)
              continue;
            this.bitField0_ = (0x1 | this.bitField0_);
            this.type_ = localDeviceType;
            break;
          case 16:
            this.bitField0_ = (0x2 | this.bitField0_);
            this.enabled_ = paramCodedInputStream.readBool();
            break;
          case 24:
            this.bitField0_ = (0x4 | this.bitField0_);
            this.pushEnabled_ = paramCodedInputStream.readBool();
            break;
          case 34:
            this.bitField0_ = (0x8 | this.bitField0_);
            this.token_ = paramCodedInputStream.readBytes();
            break;
          case 42:
            this.bitField0_ = (0x10 | this.bitField0_);
            this.phoneNumber_ = paramCodedInputStream.readBytes();
            break;
          case 48:
            this.bitField0_ = (0x20 | this.bitField0_);
            this.createdAt_ = paramCodedInputStream.readInt64();
            break;
          case 56:
            this.bitField0_ = (0x40 | this.bitField0_);
            this.updatedAt_ = paramCodedInputStream.readInt64();
            break;
          case 64:
            this.bitField0_ = (0x80 | this.bitField0_);
            this.markedForDeletionAt_ = paramCodedInputStream.readInt64();
            break;
          case 74:
            this.bitField0_ = (0x100 | this.bitField0_);
            this.appId_ = paramCodedInputStream.readBytes();
            break;
          case 80:
            this.bitField0_ = (0x200 | this.bitField0_);
            this.androidId_ = paramCodedInputStream.readInt64();
            break;
          case 90:
          }
          Version.ClientVersion.Builder localBuilder = Version.ClientVersion.newBuilder();
          if (hasClientVersion())
            localBuilder.mergeFrom(getClientVersion());
          paramCodedInputStream.readMessage(localBuilder, paramExtensionRegistryLite);
          setClientVersion(localBuilder.buildPartial());
        }
      }

      public final Client.DeviceInfo build()
      {
        Client.DeviceInfo localDeviceInfo = buildPartial();
        if (!localDeviceInfo.isInitialized())
          throw new UninitializedMessageException();
        return localDeviceInfo;
      }

      public final Client.DeviceInfo buildPartial()
      {
        Client.DeviceInfo localDeviceInfo = new Client.DeviceInfo(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Client.DeviceInfo.access$52602(localDeviceInfo, this.type_);
        if ((i & 0x2) == 2)
          k |= 2;
        Client.DeviceInfo.access$52702(localDeviceInfo, this.enabled_);
        if ((i & 0x4) == 4)
          k |= 4;
        Client.DeviceInfo.access$52802(localDeviceInfo, this.pushEnabled_);
        if ((i & 0x8) == 8)
          k |= 8;
        Client.DeviceInfo.access$52902(localDeviceInfo, this.token_);
        if ((i & 0x10) == 16)
          k |= 16;
        Client.DeviceInfo.access$53002(localDeviceInfo, this.phoneNumber_);
        if ((i & 0x20) == 32)
          k |= 32;
        Client.DeviceInfo.access$53102(localDeviceInfo, this.createdAt_);
        if ((i & 0x40) == 64)
          k |= 64;
        Client.DeviceInfo.access$53202(localDeviceInfo, this.updatedAt_);
        if ((i & 0x80) == 128)
          k |= 128;
        Client.DeviceInfo.access$53302(localDeviceInfo, this.markedForDeletionAt_);
        if ((i & 0x100) == 256)
          k |= 256;
        Client.DeviceInfo.access$53402(localDeviceInfo, this.appId_);
        if ((i & 0x200) == 512)
          k |= 512;
        Client.DeviceInfo.access$53502(localDeviceInfo, this.androidId_);
        if ((i & 0x400) == 1024)
          k |= 1024;
        Client.DeviceInfo.access$53602(localDeviceInfo, this.clientVersion_);
        Client.DeviceInfo.access$53702(localDeviceInfo, k);
        return localDeviceInfo;
      }

      public final Builder clear()
      {
        super.clear();
        this.type_ = Client.DeviceInfo.DeviceType.ANDROID;
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.enabled_ = false;
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.pushEnabled_ = false;
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.token_ = ByteString.EMPTY;
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        this.phoneNumber_ = "";
        this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        this.createdAt_ = 0L;
        this.bitField0_ = (0xFFFFFFDF & this.bitField0_);
        this.updatedAt_ = 0L;
        this.bitField0_ = (0xFFFFFFBF & this.bitField0_);
        this.markedForDeletionAt_ = 0L;
        this.bitField0_ = (0xFFFFFF7F & this.bitField0_);
        this.appId_ = "";
        this.bitField0_ = (0xFFFFFEFF & this.bitField0_);
        this.androidId_ = 0L;
        this.bitField0_ = (0xFFFFFDFF & this.bitField0_);
        this.clientVersion_ = Version.ClientVersion.getDefaultInstance();
        this.bitField0_ = (0xFFFFFBFF & this.bitField0_);
        return this;
      }

      public final Builder clearAndroidId()
      {
        this.bitField0_ = (0xFFFFFDFF & this.bitField0_);
        this.androidId_ = 0L;
        return this;
      }

      public final Builder clearAppId()
      {
        this.bitField0_ = (0xFFFFFEFF & this.bitField0_);
        this.appId_ = Client.DeviceInfo.getDefaultInstance().getAppId();
        return this;
      }

      public final Builder clearClientVersion()
      {
        this.clientVersion_ = Version.ClientVersion.getDefaultInstance();
        this.bitField0_ = (0xFFFFFBFF & this.bitField0_);
        return this;
      }

      public final Builder clearCreatedAt()
      {
        this.bitField0_ = (0xFFFFFFDF & this.bitField0_);
        this.createdAt_ = 0L;
        return this;
      }

      public final Builder clearEnabled()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.enabled_ = false;
        return this;
      }

      public final Builder clearMarkedForDeletionAt()
      {
        this.bitField0_ = (0xFFFFFF7F & this.bitField0_);
        this.markedForDeletionAt_ = 0L;
        return this;
      }

      public final Builder clearPhoneNumber()
      {
        this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        this.phoneNumber_ = Client.DeviceInfo.getDefaultInstance().getPhoneNumber();
        return this;
      }

      public final Builder clearPushEnabled()
      {
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.pushEnabled_ = false;
        return this;
      }

      public final Builder clearToken()
      {
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        this.token_ = Client.DeviceInfo.getDefaultInstance().getToken();
        return this;
      }

      public final Builder clearType()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.type_ = Client.DeviceInfo.DeviceType.ANDROID;
        return this;
      }

      public final Builder clearUpdatedAt()
      {
        this.bitField0_ = (0xFFFFFFBF & this.bitField0_);
        this.updatedAt_ = 0L;
        return this;
      }

      public final long getAndroidId()
      {
        return this.androidId_;
      }

      public final String getAppId()
      {
        Object localObject = this.appId_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.appId_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final Version.ClientVersion getClientVersion()
      {
        return this.clientVersion_;
      }

      public final long getCreatedAt()
      {
        return this.createdAt_;
      }

      public final Client.DeviceInfo getDefaultInstanceForType()
      {
        return Client.DeviceInfo.getDefaultInstance();
      }

      public final boolean getEnabled()
      {
        return this.enabled_;
      }

      public final long getMarkedForDeletionAt()
      {
        return this.markedForDeletionAt_;
      }

      public final String getPhoneNumber()
      {
        Object localObject = this.phoneNumber_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.phoneNumber_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final boolean getPushEnabled()
      {
        return this.pushEnabled_;
      }

      public final ByteString getToken()
      {
        return this.token_;
      }

      public final Client.DeviceInfo.DeviceType getType()
      {
        return this.type_;
      }

      public final long getUpdatedAt()
      {
        return this.updatedAt_;
      }

      public final boolean hasAndroidId()
      {
        if ((0x200 & this.bitField0_) == 512);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasAppId()
      {
        if ((0x100 & this.bitField0_) == 256);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasClientVersion()
      {
        if ((0x400 & this.bitField0_) == 1024);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasCreatedAt()
      {
        if ((0x20 & this.bitField0_) == 32);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasEnabled()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasMarkedForDeletionAt()
      {
        if ((0x80 & this.bitField0_) == 128);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasPhoneNumber()
      {
        if ((0x10 & this.bitField0_) == 16);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasPushEnabled()
      {
        if ((0x4 & this.bitField0_) == 4);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasToken()
      {
        if ((0x8 & this.bitField0_) == 8);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasType()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean hasUpdatedAt()
      {
        if ((0x40 & this.bitField0_) == 64);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Client.DeviceInfo paramDeviceInfo)
      {
        if (paramDeviceInfo == Client.DeviceInfo.getDefaultInstance());
        do
        {
          return this;
          if (paramDeviceInfo.hasType())
            setType(paramDeviceInfo.getType());
          if (paramDeviceInfo.hasEnabled())
            setEnabled(paramDeviceInfo.getEnabled());
          if (paramDeviceInfo.hasPushEnabled())
            setPushEnabled(paramDeviceInfo.getPushEnabled());
          if (paramDeviceInfo.hasToken())
            setToken(paramDeviceInfo.getToken());
          if (paramDeviceInfo.hasPhoneNumber())
            setPhoneNumber(paramDeviceInfo.getPhoneNumber());
          if (paramDeviceInfo.hasCreatedAt())
            setCreatedAt(paramDeviceInfo.getCreatedAt());
          if (paramDeviceInfo.hasUpdatedAt())
            setUpdatedAt(paramDeviceInfo.getUpdatedAt());
          if (paramDeviceInfo.hasMarkedForDeletionAt())
            setMarkedForDeletionAt(paramDeviceInfo.getMarkedForDeletionAt());
          if (paramDeviceInfo.hasAppId())
            setAppId(paramDeviceInfo.getAppId());
          if (paramDeviceInfo.hasAndroidId())
            setAndroidId(paramDeviceInfo.getAndroidId());
        }
        while (!paramDeviceInfo.hasClientVersion());
        Version.ClientVersion localClientVersion = paramDeviceInfo.getClientVersion();
        if (((0x400 & this.bitField0_) == 1024) && (this.clientVersion_ != Version.ClientVersion.getDefaultInstance()));
        for (this.clientVersion_ = Version.ClientVersion.newBuilder(this.clientVersion_).mergeFrom(localClientVersion).buildPartial(); ; this.clientVersion_ = localClientVersion)
        {
          this.bitField0_ = (0x400 | this.bitField0_);
          break;
        }
      }

      public final Builder setAndroidId(long paramLong)
      {
        this.bitField0_ = (0x200 | this.bitField0_);
        this.androidId_ = paramLong;
        return this;
      }

      public final Builder setAppId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x100 | this.bitField0_);
        this.appId_ = paramString;
        return this;
      }

      public final Builder setClientVersion(Version.ClientVersion.Builder paramBuilder)
      {
        this.clientVersion_ = paramBuilder.build();
        this.bitField0_ = (0x400 | this.bitField0_);
        return this;
      }

      public final Builder setClientVersion(Version.ClientVersion paramClientVersion)
      {
        if (paramClientVersion == null)
          throw new NullPointerException();
        this.clientVersion_ = paramClientVersion;
        this.bitField0_ = (0x400 | this.bitField0_);
        return this;
      }

      public final Builder setCreatedAt(long paramLong)
      {
        this.bitField0_ = (0x20 | this.bitField0_);
        this.createdAt_ = paramLong;
        return this;
      }

      public final Builder setEnabled(boolean paramBoolean)
      {
        this.bitField0_ = (0x2 | this.bitField0_);
        this.enabled_ = paramBoolean;
        return this;
      }

      public final Builder setMarkedForDeletionAt(long paramLong)
      {
        this.bitField0_ = (0x80 | this.bitField0_);
        this.markedForDeletionAt_ = paramLong;
        return this;
      }

      public final Builder setPhoneNumber(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x10 | this.bitField0_);
        this.phoneNumber_ = paramString;
        return this;
      }

      public final Builder setPushEnabled(boolean paramBoolean)
      {
        this.bitField0_ = (0x4 | this.bitField0_);
        this.pushEnabled_ = paramBoolean;
        return this;
      }

      public final Builder setToken(ByteString paramByteString)
      {
        if (paramByteString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x8 | this.bitField0_);
        this.token_ = paramByteString;
        return this;
      }

      public final Builder setType(Client.DeviceInfo.DeviceType paramDeviceType)
      {
        if (paramDeviceType == null)
          throw new NullPointerException();
        this.bitField0_ = (0x1 | this.bitField0_);
        this.type_ = paramDeviceType;
        return this;
      }

      public final Builder setUpdatedAt(long paramLong)
      {
        this.bitField0_ = (0x40 | this.bitField0_);
        this.updatedAt_ = paramLong;
        return this;
      }
    }

    public static enum DeviceType
      implements Internal.EnumLite
    {
      private static Internal.EnumLiteMap<DeviceType> internalValueMap = new Internal.EnumLiteMap()
      {
      };
      private final int value;

      static
      {
        DeviceType[] arrayOfDeviceType = new DeviceType[3];
        arrayOfDeviceType[0] = ANDROID;
        arrayOfDeviceType[1] = IOS;
        arrayOfDeviceType[2] = SMS;
      }

      private DeviceType(int paramInt1, int paramInt2)
      {
        this.value = paramInt1;
      }

      public static DeviceType valueOf(int paramInt)
      {
        DeviceType localDeviceType;
        switch (paramInt)
        {
        default:
          localDeviceType = null;
        case 1:
        case 2:
        case 3:
        }
        while (true)
        {
          return localDeviceType;
          localDeviceType = ANDROID;
          continue;
          localDeviceType = IOS;
          continue;
          localDeviceType = SMS;
        }
      }

      public final int getNumber()
      {
        return this.value;
      }
    }
  }

  public static abstract interface DeviceInfoOrBuilder extends MessageLiteOrBuilder
  {
    public abstract long getAndroidId();

    public abstract String getAppId();

    public abstract Version.ClientVersion getClientVersion();

    public abstract long getCreatedAt();

    public abstract boolean getEnabled();

    public abstract long getMarkedForDeletionAt();

    public abstract String getPhoneNumber();

    public abstract boolean getPushEnabled();

    public abstract ByteString getToken();

    public abstract Client.DeviceInfo.DeviceType getType();

    public abstract long getUpdatedAt();

    public abstract boolean hasAndroidId();

    public abstract boolean hasAppId();

    public abstract boolean hasClientVersion();

    public abstract boolean hasCreatedAt();

    public abstract boolean hasEnabled();

    public abstract boolean hasMarkedForDeletionAt();

    public abstract boolean hasPhoneNumber();

    public abstract boolean hasPushEnabled();

    public abstract boolean hasToken();

    public abstract boolean hasType();

    public abstract boolean hasUpdatedAt();
  }

  public static final class DeviceRegistrationRequest extends GeneratedMessageLite
    implements Client.DeviceRegistrationRequestOrBuilder
  {
    private static final DeviceRegistrationRequest defaultInstance;
    private static final long serialVersionUID;
    private long androidId_;
    private Object androidRegistrationId_;
    private Object appId_;
    private int bitField0_;
    private DeviceType deviceType_;
    private Object locale_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private ByteString oldToken_;
    private Object ownerId_;
    private Object phoneNumber_;
    private RegistrationType registrationType_;
    private ByteString token_;
    private Object verification_;

    static
    {
      DeviceRegistrationRequest localDeviceRegistrationRequest = new DeviceRegistrationRequest();
      defaultInstance = localDeviceRegistrationRequest;
      localDeviceRegistrationRequest.deviceType_ = DeviceType.ANDROID;
      localDeviceRegistrationRequest.registrationType_ = RegistrationType.REGISTER;
      localDeviceRegistrationRequest.ownerId_ = "";
      localDeviceRegistrationRequest.verification_ = "";
      localDeviceRegistrationRequest.locale_ = "";
      localDeviceRegistrationRequest.phoneNumber_ = "";
      localDeviceRegistrationRequest.appId_ = "";
      localDeviceRegistrationRequest.token_ = ByteString.EMPTY;
      localDeviceRegistrationRequest.androidId_ = 0L;
      localDeviceRegistrationRequest.androidRegistrationId_ = "";
      localDeviceRegistrationRequest.oldToken_ = ByteString.EMPTY;
    }

    private DeviceRegistrationRequest()
    {
    }

    private DeviceRegistrationRequest(Builder paramBuilder)
    {
      super();
    }

    private ByteString getAndroidRegistrationIdBytes()
    {
      Object localObject = this.androidRegistrationId_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.androidRegistrationId_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    private ByteString getAppIdBytes()
    {
      Object localObject = this.appId_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.appId_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static DeviceRegistrationRequest getDefaultInstance()
    {
      return defaultInstance;
    }

    private ByteString getLocaleBytes()
    {
      Object localObject = this.locale_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.locale_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    private ByteString getOwnerIdBytes()
    {
      Object localObject = this.ownerId_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.ownerId_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    private ByteString getPhoneNumberBytes()
    {
      Object localObject = this.phoneNumber_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.phoneNumber_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    private ByteString getVerificationBytes()
    {
      Object localObject = this.verification_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.verification_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static Builder newBuilder()
    {
      return Builder.access$37500();
    }

    public static Builder newBuilder(DeviceRegistrationRequest paramDeviceRegistrationRequest)
    {
      return Builder.access$37500().mergeFrom(paramDeviceRegistrationRequest);
    }

    public final long getAndroidId()
    {
      return this.androidId_;
    }

    public final String getAndroidRegistrationId()
    {
      Object localObject1 = this.androidRegistrationId_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.androidRegistrationId_ = str;
      }
    }

    public final String getAppId()
    {
      Object localObject1 = this.appId_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.appId_ = str;
      }
    }

    public final DeviceRegistrationRequest getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final DeviceType getDeviceType()
    {
      return this.deviceType_;
    }

    public final String getLocale()
    {
      Object localObject1 = this.locale_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.locale_ = str;
      }
    }

    public final ByteString getOldToken()
    {
      return this.oldToken_;
    }

    public final String getOwnerId()
    {
      Object localObject1 = this.ownerId_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.ownerId_ = str;
      }
    }

    public final String getPhoneNumber()
    {
      Object localObject1 = this.phoneNumber_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.phoneNumber_ = str;
      }
    }

    public final RegistrationType getRegistrationType()
    {
      return this.registrationType_;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeEnumSize(1, this.deviceType_.getNumber());
        if ((0x80 & this.bitField0_) == 128)
          k += CodedOutputStream.computeBytesSize(2, this.token_);
        if ((0x4 & this.bitField0_) == 4)
          k += CodedOutputStream.computeBytesSize(3, getOwnerIdBytes());
        if ((0x8 & this.bitField0_) == 8)
          k += CodedOutputStream.computeBytesSize(4, getVerificationBytes());
        if ((0x10 & this.bitField0_) == 16)
          k += CodedOutputStream.computeBytesSize(5, getLocaleBytes());
        if ((0x20 & this.bitField0_) == 32)
          k += CodedOutputStream.computeBytesSize(6, getPhoneNumberBytes());
        if ((0x40 & this.bitField0_) == 64)
          k += CodedOutputStream.computeBytesSize(7, getAppIdBytes());
        if ((0x400 & this.bitField0_) == 1024)
          k += CodedOutputStream.computeBytesSize(8, this.oldToken_);
        if ((0x200 & this.bitField0_) == 512)
          k += CodedOutputStream.computeBytesSize(9, getAndroidRegistrationIdBytes());
        if ((0x100 & this.bitField0_) == 256)
          k += CodedOutputStream.computeInt64Size(10, this.androidId_);
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeEnumSize(11, this.registrationType_.getNumber());
        this.memoizedSerializedSize = k;
      }
    }

    public final ByteString getToken()
    {
      return this.token_;
    }

    public final String getVerification()
    {
      Object localObject1 = this.verification_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.verification_ = str;
      }
    }

    public final boolean hasAndroidId()
    {
      if ((0x100 & this.bitField0_) == 256);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasAndroidRegistrationId()
    {
      if ((0x200 & this.bitField0_) == 512);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasAppId()
    {
      if ((0x40 & this.bitField0_) == 64);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasDeviceType()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean hasLocale()
    {
      if ((0x10 & this.bitField0_) == 16);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasOldToken()
    {
      if ((0x400 & this.bitField0_) == 1024);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasOwnerId()
    {
      if ((0x4 & this.bitField0_) == 4);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasPhoneNumber()
    {
      if ((0x20 & this.bitField0_) == 32);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasRegistrationType()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasToken()
    {
      if ((0x80 & this.bitField0_) == 128);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasVerification()
    {
      if ((0x8 & this.bitField0_) == 8);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeEnum(1, this.deviceType_.getNumber());
      if ((0x80 & this.bitField0_) == 128)
        paramCodedOutputStream.writeBytes(2, this.token_);
      if ((0x4 & this.bitField0_) == 4)
        paramCodedOutputStream.writeBytes(3, getOwnerIdBytes());
      if ((0x8 & this.bitField0_) == 8)
        paramCodedOutputStream.writeBytes(4, getVerificationBytes());
      if ((0x10 & this.bitField0_) == 16)
        paramCodedOutputStream.writeBytes(5, getLocaleBytes());
      if ((0x20 & this.bitField0_) == 32)
        paramCodedOutputStream.writeBytes(6, getPhoneNumberBytes());
      if ((0x40 & this.bitField0_) == 64)
        paramCodedOutputStream.writeBytes(7, getAppIdBytes());
      if ((0x400 & this.bitField0_) == 1024)
        paramCodedOutputStream.writeBytes(8, this.oldToken_);
      if ((0x200 & this.bitField0_) == 512)
        paramCodedOutputStream.writeBytes(9, getAndroidRegistrationIdBytes());
      if ((0x100 & this.bitField0_) == 256)
        paramCodedOutputStream.writeInt64(10, this.androidId_);
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeEnum(11, this.registrationType_.getNumber());
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Client.DeviceRegistrationRequest, Builder>
      implements Client.DeviceRegistrationRequestOrBuilder
    {
      private long androidId_;
      private Object androidRegistrationId_ = "";
      private Object appId_ = "";
      private int bitField0_;
      private Client.DeviceRegistrationRequest.DeviceType deviceType_ = Client.DeviceRegistrationRequest.DeviceType.ANDROID;
      private Object locale_ = "";
      private ByteString oldToken_ = ByteString.EMPTY;
      private Object ownerId_ = "";
      private Object phoneNumber_ = "";
      private Client.DeviceRegistrationRequest.RegistrationType registrationType_ = Client.DeviceRegistrationRequest.RegistrationType.REGISTER;
      private ByteString token_ = ByteString.EMPTY;
      private Object verification_ = "";

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 8:
            Client.DeviceRegistrationRequest.DeviceType localDeviceType = Client.DeviceRegistrationRequest.DeviceType.valueOf(paramCodedInputStream.readEnum());
            if (localDeviceType == null)
              continue;
            this.bitField0_ = (0x1 | this.bitField0_);
            this.deviceType_ = localDeviceType;
            break;
          case 18:
            this.bitField0_ = (0x80 | this.bitField0_);
            this.token_ = paramCodedInputStream.readBytes();
            break;
          case 26:
            this.bitField0_ = (0x4 | this.bitField0_);
            this.ownerId_ = paramCodedInputStream.readBytes();
            break;
          case 34:
            this.bitField0_ = (0x8 | this.bitField0_);
            this.verification_ = paramCodedInputStream.readBytes();
            break;
          case 42:
            this.bitField0_ = (0x10 | this.bitField0_);
            this.locale_ = paramCodedInputStream.readBytes();
            break;
          case 50:
            this.bitField0_ = (0x20 | this.bitField0_);
            this.phoneNumber_ = paramCodedInputStream.readBytes();
            break;
          case 58:
            this.bitField0_ = (0x40 | this.bitField0_);
            this.appId_ = paramCodedInputStream.readBytes();
            break;
          case 66:
            this.bitField0_ = (0x400 | this.bitField0_);
            this.oldToken_ = paramCodedInputStream.readBytes();
            break;
          case 74:
            this.bitField0_ = (0x200 | this.bitField0_);
            this.androidRegistrationId_ = paramCodedInputStream.readBytes();
            break;
          case 80:
            this.bitField0_ = (0x100 | this.bitField0_);
            this.androidId_ = paramCodedInputStream.readInt64();
            break;
          case 88:
          }
          Client.DeviceRegistrationRequest.RegistrationType localRegistrationType = Client.DeviceRegistrationRequest.RegistrationType.valueOf(paramCodedInputStream.readEnum());
          if (localRegistrationType != null)
          {
            this.bitField0_ = (0x2 | this.bitField0_);
            this.registrationType_ = localRegistrationType;
          }
        }
      }

      public final Client.DeviceRegistrationRequest build()
      {
        Client.DeviceRegistrationRequest localDeviceRegistrationRequest = buildPartial();
        if (!localDeviceRegistrationRequest.isInitialized())
          throw new UninitializedMessageException();
        return localDeviceRegistrationRequest;
      }

      public final Client.DeviceRegistrationRequest buildPartial()
      {
        Client.DeviceRegistrationRequest localDeviceRegistrationRequest = new Client.DeviceRegistrationRequest(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Client.DeviceRegistrationRequest.access$37702(localDeviceRegistrationRequest, this.deviceType_);
        if ((i & 0x2) == 2)
          k |= 2;
        Client.DeviceRegistrationRequest.access$37802(localDeviceRegistrationRequest, this.registrationType_);
        if ((i & 0x4) == 4)
          k |= 4;
        Client.DeviceRegistrationRequest.access$37902(localDeviceRegistrationRequest, this.ownerId_);
        if ((i & 0x8) == 8)
          k |= 8;
        Client.DeviceRegistrationRequest.access$38002(localDeviceRegistrationRequest, this.verification_);
        if ((i & 0x10) == 16)
          k |= 16;
        Client.DeviceRegistrationRequest.access$38102(localDeviceRegistrationRequest, this.locale_);
        if ((i & 0x20) == 32)
          k |= 32;
        Client.DeviceRegistrationRequest.access$38202(localDeviceRegistrationRequest, this.phoneNumber_);
        if ((i & 0x40) == 64)
          k |= 64;
        Client.DeviceRegistrationRequest.access$38302(localDeviceRegistrationRequest, this.appId_);
        if ((i & 0x80) == 128)
          k |= 128;
        Client.DeviceRegistrationRequest.access$38402(localDeviceRegistrationRequest, this.token_);
        if ((i & 0x100) == 256)
          k |= 256;
        Client.DeviceRegistrationRequest.access$38502(localDeviceRegistrationRequest, this.androidId_);
        if ((i & 0x200) == 512)
          k |= 512;
        Client.DeviceRegistrationRequest.access$38602(localDeviceRegistrationRequest, this.androidRegistrationId_);
        if ((i & 0x400) == 1024)
          k |= 1024;
        Client.DeviceRegistrationRequest.access$38702(localDeviceRegistrationRequest, this.oldToken_);
        Client.DeviceRegistrationRequest.access$38802(localDeviceRegistrationRequest, k);
        return localDeviceRegistrationRequest;
      }

      public final Builder clear()
      {
        super.clear();
        this.deviceType_ = Client.DeviceRegistrationRequest.DeviceType.ANDROID;
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.registrationType_ = Client.DeviceRegistrationRequest.RegistrationType.REGISTER;
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.ownerId_ = "";
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.verification_ = "";
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        this.locale_ = "";
        this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        this.phoneNumber_ = "";
        this.bitField0_ = (0xFFFFFFDF & this.bitField0_);
        this.appId_ = "";
        this.bitField0_ = (0xFFFFFFBF & this.bitField0_);
        this.token_ = ByteString.EMPTY;
        this.bitField0_ = (0xFFFFFF7F & this.bitField0_);
        this.androidId_ = 0L;
        this.bitField0_ = (0xFFFFFEFF & this.bitField0_);
        this.androidRegistrationId_ = "";
        this.bitField0_ = (0xFFFFFDFF & this.bitField0_);
        this.oldToken_ = ByteString.EMPTY;
        this.bitField0_ = (0xFFFFFBFF & this.bitField0_);
        return this;
      }

      public final Builder clearAndroidId()
      {
        this.bitField0_ = (0xFFFFFEFF & this.bitField0_);
        this.androidId_ = 0L;
        return this;
      }

      public final Builder clearAndroidRegistrationId()
      {
        this.bitField0_ = (0xFFFFFDFF & this.bitField0_);
        this.androidRegistrationId_ = Client.DeviceRegistrationRequest.getDefaultInstance().getAndroidRegistrationId();
        return this;
      }

      public final Builder clearAppId()
      {
        this.bitField0_ = (0xFFFFFFBF & this.bitField0_);
        this.appId_ = Client.DeviceRegistrationRequest.getDefaultInstance().getAppId();
        return this;
      }

      public final Builder clearDeviceType()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.deviceType_ = Client.DeviceRegistrationRequest.DeviceType.ANDROID;
        return this;
      }

      public final Builder clearLocale()
      {
        this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        this.locale_ = Client.DeviceRegistrationRequest.getDefaultInstance().getLocale();
        return this;
      }

      public final Builder clearOldToken()
      {
        this.bitField0_ = (0xFFFFFBFF & this.bitField0_);
        this.oldToken_ = Client.DeviceRegistrationRequest.getDefaultInstance().getOldToken();
        return this;
      }

      public final Builder clearOwnerId()
      {
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.ownerId_ = Client.DeviceRegistrationRequest.getDefaultInstance().getOwnerId();
        return this;
      }

      public final Builder clearPhoneNumber()
      {
        this.bitField0_ = (0xFFFFFFDF & this.bitField0_);
        this.phoneNumber_ = Client.DeviceRegistrationRequest.getDefaultInstance().getPhoneNumber();
        return this;
      }

      public final Builder clearRegistrationType()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.registrationType_ = Client.DeviceRegistrationRequest.RegistrationType.REGISTER;
        return this;
      }

      public final Builder clearToken()
      {
        this.bitField0_ = (0xFFFFFF7F & this.bitField0_);
        this.token_ = Client.DeviceRegistrationRequest.getDefaultInstance().getToken();
        return this;
      }

      public final Builder clearVerification()
      {
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        this.verification_ = Client.DeviceRegistrationRequest.getDefaultInstance().getVerification();
        return this;
      }

      public final long getAndroidId()
      {
        return this.androidId_;
      }

      public final String getAndroidRegistrationId()
      {
        Object localObject = this.androidRegistrationId_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.androidRegistrationId_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final String getAppId()
      {
        Object localObject = this.appId_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.appId_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final Client.DeviceRegistrationRequest getDefaultInstanceForType()
      {
        return Client.DeviceRegistrationRequest.getDefaultInstance();
      }

      public final Client.DeviceRegistrationRequest.DeviceType getDeviceType()
      {
        return this.deviceType_;
      }

      public final String getLocale()
      {
        Object localObject = this.locale_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.locale_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final ByteString getOldToken()
      {
        return this.oldToken_;
      }

      public final String getOwnerId()
      {
        Object localObject = this.ownerId_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.ownerId_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final String getPhoneNumber()
      {
        Object localObject = this.phoneNumber_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.phoneNumber_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final Client.DeviceRegistrationRequest.RegistrationType getRegistrationType()
      {
        return this.registrationType_;
      }

      public final ByteString getToken()
      {
        return this.token_;
      }

      public final String getVerification()
      {
        Object localObject = this.verification_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.verification_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final boolean hasAndroidId()
      {
        if ((0x100 & this.bitField0_) == 256);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasAndroidRegistrationId()
      {
        if ((0x200 & this.bitField0_) == 512);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasAppId()
      {
        if ((0x40 & this.bitField0_) == 64);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasDeviceType()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean hasLocale()
      {
        if ((0x10 & this.bitField0_) == 16);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasOldToken()
      {
        if ((0x400 & this.bitField0_) == 1024);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasOwnerId()
      {
        if ((0x4 & this.bitField0_) == 4);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasPhoneNumber()
      {
        if ((0x20 & this.bitField0_) == 32);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasRegistrationType()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasToken()
      {
        if ((0x80 & this.bitField0_) == 128);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasVerification()
      {
        if ((0x8 & this.bitField0_) == 8);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Client.DeviceRegistrationRequest paramDeviceRegistrationRequest)
      {
        if (paramDeviceRegistrationRequest == Client.DeviceRegistrationRequest.getDefaultInstance());
        while (true)
        {
          return this;
          if (paramDeviceRegistrationRequest.hasDeviceType())
            setDeviceType(paramDeviceRegistrationRequest.getDeviceType());
          if (paramDeviceRegistrationRequest.hasRegistrationType())
            setRegistrationType(paramDeviceRegistrationRequest.getRegistrationType());
          if (paramDeviceRegistrationRequest.hasOwnerId())
            setOwnerId(paramDeviceRegistrationRequest.getOwnerId());
          if (paramDeviceRegistrationRequest.hasVerification())
            setVerification(paramDeviceRegistrationRequest.getVerification());
          if (paramDeviceRegistrationRequest.hasLocale())
            setLocale(paramDeviceRegistrationRequest.getLocale());
          if (paramDeviceRegistrationRequest.hasPhoneNumber())
            setPhoneNumber(paramDeviceRegistrationRequest.getPhoneNumber());
          if (paramDeviceRegistrationRequest.hasAppId())
            setAppId(paramDeviceRegistrationRequest.getAppId());
          if (paramDeviceRegistrationRequest.hasToken())
            setToken(paramDeviceRegistrationRequest.getToken());
          if (paramDeviceRegistrationRequest.hasAndroidId())
            setAndroidId(paramDeviceRegistrationRequest.getAndroidId());
          if (paramDeviceRegistrationRequest.hasAndroidRegistrationId())
            setAndroidRegistrationId(paramDeviceRegistrationRequest.getAndroidRegistrationId());
          if (paramDeviceRegistrationRequest.hasOldToken())
            setOldToken(paramDeviceRegistrationRequest.getOldToken());
        }
      }

      public final Builder setAndroidId(long paramLong)
      {
        this.bitField0_ = (0x100 | this.bitField0_);
        this.androidId_ = paramLong;
        return this;
      }

      public final Builder setAndroidRegistrationId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x200 | this.bitField0_);
        this.androidRegistrationId_ = paramString;
        return this;
      }

      public final Builder setAppId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x40 | this.bitField0_);
        this.appId_ = paramString;
        return this;
      }

      public final Builder setDeviceType(Client.DeviceRegistrationRequest.DeviceType paramDeviceType)
      {
        if (paramDeviceType == null)
          throw new NullPointerException();
        this.bitField0_ = (0x1 | this.bitField0_);
        this.deviceType_ = paramDeviceType;
        return this;
      }

      public final Builder setLocale(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x10 | this.bitField0_);
        this.locale_ = paramString;
        return this;
      }

      public final Builder setOldToken(ByteString paramByteString)
      {
        if (paramByteString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x400 | this.bitField0_);
        this.oldToken_ = paramByteString;
        return this;
      }

      public final Builder setOwnerId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x4 | this.bitField0_);
        this.ownerId_ = paramString;
        return this;
      }

      public final Builder setPhoneNumber(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x20 | this.bitField0_);
        this.phoneNumber_ = paramString;
        return this;
      }

      public final Builder setRegistrationType(Client.DeviceRegistrationRequest.RegistrationType paramRegistrationType)
      {
        if (paramRegistrationType == null)
          throw new NullPointerException();
        this.bitField0_ = (0x2 | this.bitField0_);
        this.registrationType_ = paramRegistrationType;
        return this;
      }

      public final Builder setToken(ByteString paramByteString)
      {
        if (paramByteString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x80 | this.bitField0_);
        this.token_ = paramByteString;
        return this;
      }

      public final Builder setVerification(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x8 | this.bitField0_);
        this.verification_ = paramString;
        return this;
      }
    }

    public static enum DeviceType
      implements Internal.EnumLite
    {
      private static Internal.EnumLiteMap<DeviceType> internalValueMap = new Internal.EnumLiteMap()
      {
      };
      private final int value;

      static
      {
        DeviceType[] arrayOfDeviceType = new DeviceType[3];
        arrayOfDeviceType[0] = ANDROID;
        arrayOfDeviceType[1] = IOS;
        arrayOfDeviceType[2] = SMS;
      }

      private DeviceType(int paramInt1, int paramInt2)
      {
        this.value = paramInt1;
      }

      public static DeviceType valueOf(int paramInt)
      {
        DeviceType localDeviceType;
        switch (paramInt)
        {
        default:
          localDeviceType = null;
        case 1:
        case 2:
        case 3:
        }
        while (true)
        {
          return localDeviceType;
          localDeviceType = ANDROID;
          continue;
          localDeviceType = IOS;
          continue;
          localDeviceType = SMS;
        }
      }

      public final int getNumber()
      {
        return this.value;
      }
    }

    public static enum RegistrationType
      implements Internal.EnumLite
    {
      private static Internal.EnumLiteMap<RegistrationType> internalValueMap = new Internal.EnumLiteMap()
      {
      };
      private final int value;

      static
      {
        RegistrationType[] arrayOfRegistrationType = new RegistrationType[2];
        arrayOfRegistrationType[0] = REGISTER;
        arrayOfRegistrationType[1] = UNREGISTER;
      }

      private RegistrationType(int paramInt1, int paramInt2)
      {
        this.value = paramInt1;
      }

      public static RegistrationType valueOf(int paramInt)
      {
        RegistrationType localRegistrationType;
        switch (paramInt)
        {
        default:
          localRegistrationType = null;
        case 1:
        case 2:
        }
        while (true)
        {
          return localRegistrationType;
          localRegistrationType = REGISTER;
          continue;
          localRegistrationType = UNREGISTER;
        }
      }

      public final int getNumber()
      {
        return this.value;
      }
    }
  }

  public static abstract interface DeviceRegistrationRequestOrBuilder extends MessageLiteOrBuilder
  {
    public abstract long getAndroidId();

    public abstract String getAndroidRegistrationId();

    public abstract String getAppId();

    public abstract Client.DeviceRegistrationRequest.DeviceType getDeviceType();

    public abstract String getLocale();

    public abstract ByteString getOldToken();

    public abstract String getOwnerId();

    public abstract String getPhoneNumber();

    public abstract Client.DeviceRegistrationRequest.RegistrationType getRegistrationType();

    public abstract ByteString getToken();

    public abstract String getVerification();

    public abstract boolean hasAndroidId();

    public abstract boolean hasAndroidRegistrationId();

    public abstract boolean hasAppId();

    public abstract boolean hasDeviceType();

    public abstract boolean hasLocale();

    public abstract boolean hasOldToken();

    public abstract boolean hasOwnerId();

    public abstract boolean hasPhoneNumber();

    public abstract boolean hasRegistrationType();

    public abstract boolean hasToken();

    public abstract boolean hasVerification();
  }

  public static final class DeviceRegistrationResponse extends GeneratedMessageLite
    implements Client.DeviceRegistrationResponseOrBuilder
  {
    private static final DeviceRegistrationResponse defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private Data.ResponseStatus status_;
    private long timestamp_;

    static
    {
      DeviceRegistrationResponse localDeviceRegistrationResponse = new DeviceRegistrationResponse();
      defaultInstance = localDeviceRegistrationResponse;
      localDeviceRegistrationResponse.timestamp_ = 0L;
      localDeviceRegistrationResponse.status_ = Data.ResponseStatus.OK;
    }

    private DeviceRegistrationResponse()
    {
    }

    private DeviceRegistrationResponse(Builder paramBuilder)
    {
      super();
    }

    public static DeviceRegistrationResponse getDefaultInstance()
    {
      return defaultInstance;
    }

    public static Builder newBuilder()
    {
      return Builder.access$39000();
    }

    public static Builder newBuilder(DeviceRegistrationResponse paramDeviceRegistrationResponse)
    {
      return Builder.access$39000().mergeFrom(paramDeviceRegistrationResponse);
    }

    public final DeviceRegistrationResponse getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeInt64Size(1, this.timestamp_);
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeEnumSize(2, this.status_.getNumber());
        this.memoizedSerializedSize = k;
      }
    }

    public final Data.ResponseStatus getStatus()
    {
      return this.status_;
    }

    public final long getTimestamp()
    {
      return this.timestamp_;
    }

    public final boolean hasStatus()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasTimestamp()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeInt64(1, this.timestamp_);
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeEnum(2, this.status_.getNumber());
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Client.DeviceRegistrationResponse, Builder>
      implements Client.DeviceRegistrationResponseOrBuilder
    {
      private int bitField0_;
      private Data.ResponseStatus status_ = Data.ResponseStatus.OK;
      private long timestamp_;

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 8:
            this.bitField0_ = (0x1 | this.bitField0_);
            this.timestamp_ = paramCodedInputStream.readInt64();
            break;
          case 16:
          }
          Data.ResponseStatus localResponseStatus = Data.ResponseStatus.valueOf(paramCodedInputStream.readEnum());
          if (localResponseStatus != null)
          {
            this.bitField0_ = (0x2 | this.bitField0_);
            this.status_ = localResponseStatus;
          }
        }
      }

      public final Client.DeviceRegistrationResponse build()
      {
        Client.DeviceRegistrationResponse localDeviceRegistrationResponse = buildPartial();
        if (!localDeviceRegistrationResponse.isInitialized())
          throw new UninitializedMessageException();
        return localDeviceRegistrationResponse;
      }

      public final Client.DeviceRegistrationResponse buildPartial()
      {
        Client.DeviceRegistrationResponse localDeviceRegistrationResponse = new Client.DeviceRegistrationResponse(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Client.DeviceRegistrationResponse.access$39202(localDeviceRegistrationResponse, this.timestamp_);
        if ((i & 0x2) == 2)
          k |= 2;
        Client.DeviceRegistrationResponse.access$39302(localDeviceRegistrationResponse, this.status_);
        Client.DeviceRegistrationResponse.access$39402(localDeviceRegistrationResponse, k);
        return localDeviceRegistrationResponse;
      }

      public final Builder clear()
      {
        super.clear();
        this.timestamp_ = 0L;
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.status_ = Data.ResponseStatus.OK;
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        return this;
      }

      public final Builder clearStatus()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.status_ = Data.ResponseStatus.OK;
        return this;
      }

      public final Builder clearTimestamp()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.timestamp_ = 0L;
        return this;
      }

      public final Client.DeviceRegistrationResponse getDefaultInstanceForType()
      {
        return Client.DeviceRegistrationResponse.getDefaultInstance();
      }

      public final Data.ResponseStatus getStatus()
      {
        return this.status_;
      }

      public final long getTimestamp()
      {
        return this.timestamp_;
      }

      public final boolean hasStatus()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasTimestamp()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Client.DeviceRegistrationResponse paramDeviceRegistrationResponse)
      {
        if (paramDeviceRegistrationResponse == Client.DeviceRegistrationResponse.getDefaultInstance());
        while (true)
        {
          return this;
          if (paramDeviceRegistrationResponse.hasTimestamp())
            setTimestamp(paramDeviceRegistrationResponse.getTimestamp());
          if (paramDeviceRegistrationResponse.hasStatus())
            setStatus(paramDeviceRegistrationResponse.getStatus());
        }
      }

      public final Builder setStatus(Data.ResponseStatus paramResponseStatus)
      {
        if (paramResponseStatus == null)
          throw new NullPointerException();
        this.bitField0_ = (0x2 | this.bitField0_);
        this.status_ = paramResponseStatus;
        return this;
      }

      public final Builder setTimestamp(long paramLong)
      {
        this.bitField0_ = (0x1 | this.bitField0_);
        this.timestamp_ = paramLong;
        return this;
      }
    }
  }

  public static abstract interface DeviceRegistrationResponseOrBuilder extends MessageLiteOrBuilder
  {
    public abstract Data.ResponseStatus getStatus();

    public abstract long getTimestamp();

    public abstract boolean hasStatus();

    public abstract boolean hasTimestamp();
  }

  public static final class Error extends GeneratedMessageLite
    implements Client.ErrorOrBuilder
  {
    private static final Error defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private Object detail_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private Client.BunchCommand originalCommand_;

    static
    {
      Error localError = new Error();
      defaultInstance = localError;
      localError.originalCommand_ = Client.BunchCommand.getDefaultInstance();
      localError.detail_ = "";
    }

    private Error()
    {
    }

    private Error(Builder paramBuilder)
    {
      super();
    }

    public static Error getDefaultInstance()
    {
      return defaultInstance;
    }

    private ByteString getDetailBytes()
    {
      Object localObject = this.detail_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.detail_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static Builder newBuilder()
    {
      return Builder.access$42200();
    }

    public static Builder newBuilder(Error paramError)
    {
      return Builder.access$42200().mergeFrom(paramError);
    }

    public final Error getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final String getDetail()
    {
      Object localObject1 = this.detail_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.detail_ = str;
      }
    }

    public final Client.BunchCommand getOriginalCommand()
    {
      return this.originalCommand_;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeMessageSize(1, this.originalCommand_);
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeBytesSize(2, getDetailBytes());
        this.memoizedSerializedSize = k;
      }
    }

    public final boolean hasDetail()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasOriginalCommand()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeMessage(1, this.originalCommand_);
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeBytes(2, getDetailBytes());
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Client.Error, Builder>
      implements Client.ErrorOrBuilder
    {
      private int bitField0_;
      private Object detail_ = "";
      private Client.BunchCommand originalCommand_ = Client.BunchCommand.getDefaultInstance();

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 10:
            Client.BunchCommand.Builder localBuilder = Client.BunchCommand.newBuilder();
            if (hasOriginalCommand())
              localBuilder.mergeFrom(getOriginalCommand());
            paramCodedInputStream.readMessage(localBuilder, paramExtensionRegistryLite);
            setOriginalCommand(localBuilder.buildPartial());
            break;
          case 18:
          }
          this.bitField0_ = (0x2 | this.bitField0_);
          this.detail_ = paramCodedInputStream.readBytes();
        }
      }

      public final Client.Error build()
      {
        Client.Error localError = buildPartial();
        if (!localError.isInitialized())
          throw new UninitializedMessageException();
        return localError;
      }

      public final Client.Error buildPartial()
      {
        Client.Error localError = new Client.Error(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Client.Error.access$42402(localError, this.originalCommand_);
        if ((i & 0x2) == 2)
          k |= 2;
        Client.Error.access$42502(localError, this.detail_);
        Client.Error.access$42602(localError, k);
        return localError;
      }

      public final Builder clear()
      {
        super.clear();
        this.originalCommand_ = Client.BunchCommand.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.detail_ = "";
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        return this;
      }

      public final Builder clearDetail()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.detail_ = Client.Error.getDefaultInstance().getDetail();
        return this;
      }

      public final Builder clearOriginalCommand()
      {
        this.originalCommand_ = Client.BunchCommand.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        return this;
      }

      public final Client.Error getDefaultInstanceForType()
      {
        return Client.Error.getDefaultInstance();
      }

      public final String getDetail()
      {
        Object localObject = this.detail_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.detail_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final Client.BunchCommand getOriginalCommand()
      {
        return this.originalCommand_;
      }

      public final boolean hasDetail()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasOriginalCommand()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Client.Error paramError)
      {
        if (paramError == Client.Error.getDefaultInstance())
          return this;
        Client.BunchCommand localBunchCommand;
        if (paramError.hasOriginalCommand())
        {
          localBunchCommand = paramError.getOriginalCommand();
          if (((0x1 & this.bitField0_) != 1) || (this.originalCommand_ == Client.BunchCommand.getDefaultInstance()))
            break label88;
        }
        label88: for (this.originalCommand_ = Client.BunchCommand.newBuilder(this.originalCommand_).mergeFrom(localBunchCommand).buildPartial(); ; this.originalCommand_ = localBunchCommand)
        {
          this.bitField0_ = (0x1 | this.bitField0_);
          if (!paramError.hasDetail())
            break;
          setDetail(paramError.getDetail());
          break;
        }
      }

      public final Builder setDetail(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x2 | this.bitField0_);
        this.detail_ = paramString;
        return this;
      }

      public final Builder setOriginalCommand(Client.BunchCommand.Builder paramBuilder)
      {
        this.originalCommand_ = paramBuilder.build();
        this.bitField0_ = (0x1 | this.bitField0_);
        return this;
      }

      public final Builder setOriginalCommand(Client.BunchCommand paramBunchCommand)
      {
        if (paramBunchCommand == null)
          throw new NullPointerException();
        this.originalCommand_ = paramBunchCommand;
        this.bitField0_ = (0x1 | this.bitField0_);
        return this;
      }
    }
  }

  public static abstract interface ErrorOrBuilder extends MessageLiteOrBuilder
  {
    public abstract String getDetail();

    public abstract Client.BunchCommand getOriginalCommand();

    public abstract boolean hasDetail();

    public abstract boolean hasOriginalCommand();
  }

  public static final class EventSearchRequest extends GeneratedMessageLite
    implements Client.EventSearchRequestOrBuilder
  {
    private static final EventSearchRequest defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private Object contentQuery_;
    private Object conversationId_;
    private List<Data.ParticipantAttributes> fromQuery_;
    private boolean hasPhotoQuery_;
    private Data.Location locationQuery_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private Data.StubbyInfo stubbyInfo_;
    private Data.TimeRange timeRangeQuery_;
    private Object unstructuredQuery_;

    static
    {
      EventSearchRequest localEventSearchRequest = new EventSearchRequest();
      defaultInstance = localEventSearchRequest;
      localEventSearchRequest.conversationId_ = "";
      localEventSearchRequest.unstructuredQuery_ = "";
      localEventSearchRequest.fromQuery_ = Collections.emptyList();
      localEventSearchRequest.contentQuery_ = "";
      localEventSearchRequest.locationQuery_ = Data.Location.getDefaultInstance();
      localEventSearchRequest.hasPhotoQuery_ = false;
      localEventSearchRequest.timeRangeQuery_ = Data.TimeRange.getDefaultInstance();
      localEventSearchRequest.stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
    }

    private EventSearchRequest()
    {
    }

    private EventSearchRequest(Builder paramBuilder)
    {
      super();
    }

    private ByteString getContentQueryBytes()
    {
      Object localObject = this.contentQuery_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.contentQuery_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    private ByteString getConversationIdBytes()
    {
      Object localObject = this.conversationId_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.conversationId_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static EventSearchRequest getDefaultInstance()
    {
      return defaultInstance;
    }

    private ByteString getUnstructuredQueryBytes()
    {
      Object localObject = this.unstructuredQuery_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.unstructuredQuery_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static Builder newBuilder()
    {
      return Builder.access$49900();
    }

    public static Builder newBuilder(EventSearchRequest paramEventSearchRequest)
    {
      return Builder.access$49900().mergeFrom(paramEventSearchRequest);
    }

    public final String getContentQuery()
    {
      Object localObject1 = this.contentQuery_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.contentQuery_ = str;
      }
    }

    public final String getConversationId()
    {
      Object localObject1 = this.conversationId_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.conversationId_ = str;
      }
    }

    public final EventSearchRequest getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final Data.ParticipantAttributes getFromQuery(int paramInt)
    {
      return (Data.ParticipantAttributes)this.fromQuery_.get(paramInt);
    }

    public final int getFromQueryCount()
    {
      return this.fromQuery_.size();
    }

    public final List<Data.ParticipantAttributes> getFromQueryList()
    {
      return this.fromQuery_;
    }

    public final Data.ParticipantAttributesOrBuilder getFromQueryOrBuilder(int paramInt)
    {
      return (Data.ParticipantAttributesOrBuilder)this.fromQuery_.get(paramInt);
    }

    public final List<? extends Data.ParticipantAttributesOrBuilder> getFromQueryOrBuilderList()
    {
      return this.fromQuery_;
    }

    public final boolean getHasPhotoQuery()
    {
      return this.hasPhotoQuery_;
    }

    public final Data.Location getLocationQuery()
    {
      return this.locationQuery_;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int n = i; ; n = k)
      {
        return n;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeBytesSize(1, getConversationIdBytes());
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeBytesSize(2, getUnstructuredQueryBytes());
        for (int m = 0; m < this.fromQuery_.size(); m++)
          k += CodedOutputStream.computeMessageSize(3, (MessageLite)this.fromQuery_.get(m));
        if ((0x4 & this.bitField0_) == 4)
          k += CodedOutputStream.computeBytesSize(4, getContentQueryBytes());
        if ((0x8 & this.bitField0_) == 8)
          k += CodedOutputStream.computeMessageSize(5, this.locationQuery_);
        if ((0x10 & this.bitField0_) == 16)
          k += CodedOutputStream.computeBoolSize(6, this.hasPhotoQuery_);
        if ((0x20 & this.bitField0_) == 32)
          k += CodedOutputStream.computeMessageSize(7, this.timeRangeQuery_);
        if ((0x40 & this.bitField0_) == 64)
          k += CodedOutputStream.computeMessageSize(8, this.stubbyInfo_);
        this.memoizedSerializedSize = k;
      }
    }

    public final Data.StubbyInfo getStubbyInfo()
    {
      return this.stubbyInfo_;
    }

    public final Data.TimeRange getTimeRangeQuery()
    {
      return this.timeRangeQuery_;
    }

    public final String getUnstructuredQuery()
    {
      Object localObject1 = this.unstructuredQuery_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.unstructuredQuery_ = str;
      }
    }

    public final boolean hasContentQuery()
    {
      if ((0x4 & this.bitField0_) == 4);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasConversationId()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean hasHasPhotoQuery()
    {
      if ((0x10 & this.bitField0_) == 16);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasLocationQuery()
    {
      if ((0x8 & this.bitField0_) == 8);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasStubbyInfo()
    {
      if ((0x40 & this.bitField0_) == 64);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasTimeRangeQuery()
    {
      if ((0x20 & this.bitField0_) == 32);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasUnstructuredQuery()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeBytes(1, getConversationIdBytes());
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeBytes(2, getUnstructuredQueryBytes());
      for (int i = 0; i < this.fromQuery_.size(); i++)
        paramCodedOutputStream.writeMessage(3, (MessageLite)this.fromQuery_.get(i));
      if ((0x4 & this.bitField0_) == 4)
        paramCodedOutputStream.writeBytes(4, getContentQueryBytes());
      if ((0x8 & this.bitField0_) == 8)
        paramCodedOutputStream.writeMessage(5, this.locationQuery_);
      if ((0x10 & this.bitField0_) == 16)
        paramCodedOutputStream.writeBool(6, this.hasPhotoQuery_);
      if ((0x20 & this.bitField0_) == 32)
        paramCodedOutputStream.writeMessage(7, this.timeRangeQuery_);
      if ((0x40 & this.bitField0_) == 64)
        paramCodedOutputStream.writeMessage(8, this.stubbyInfo_);
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Client.EventSearchRequest, Builder>
      implements Client.EventSearchRequestOrBuilder
    {
      private int bitField0_;
      private Object contentQuery_ = "";
      private Object conversationId_ = "";
      private List<Data.ParticipantAttributes> fromQuery_ = Collections.emptyList();
      private boolean hasPhotoQuery_;
      private Data.Location locationQuery_ = Data.Location.getDefaultInstance();
      private Data.StubbyInfo stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
      private Data.TimeRange timeRangeQuery_ = Data.TimeRange.getDefaultInstance();
      private Object unstructuredQuery_ = "";

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private void ensureFromQueryIsMutable()
      {
        if ((0x4 & this.bitField0_) != 4)
        {
          this.fromQuery_ = new ArrayList(this.fromQuery_);
          this.bitField0_ = (0x4 | this.bitField0_);
        }
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 10:
            this.bitField0_ = (0x1 | this.bitField0_);
            this.conversationId_ = paramCodedInputStream.readBytes();
            break;
          case 18:
            this.bitField0_ = (0x2 | this.bitField0_);
            this.unstructuredQuery_ = paramCodedInputStream.readBytes();
            break;
          case 26:
            Data.ParticipantAttributes.Builder localBuilder3 = Data.ParticipantAttributes.newBuilder();
            paramCodedInputStream.readMessage(localBuilder3, paramExtensionRegistryLite);
            addFromQuery(localBuilder3.buildPartial());
            break;
          case 34:
            this.bitField0_ = (0x8 | this.bitField0_);
            this.contentQuery_ = paramCodedInputStream.readBytes();
            break;
          case 42:
            Data.Location.Builder localBuilder2 = Data.Location.newBuilder();
            if (hasLocationQuery())
              localBuilder2.mergeFrom(getLocationQuery());
            paramCodedInputStream.readMessage(localBuilder2, paramExtensionRegistryLite);
            setLocationQuery(localBuilder2.buildPartial());
            break;
          case 48:
            this.bitField0_ = (0x20 | this.bitField0_);
            this.hasPhotoQuery_ = paramCodedInputStream.readBool();
            break;
          case 58:
            Data.TimeRange.Builder localBuilder1 = Data.TimeRange.newBuilder();
            if (hasTimeRangeQuery())
              localBuilder1.mergeFrom(getTimeRangeQuery());
            paramCodedInputStream.readMessage(localBuilder1, paramExtensionRegistryLite);
            setTimeRangeQuery(localBuilder1.buildPartial());
            break;
          case 66:
          }
          Data.StubbyInfo.Builder localBuilder = Data.StubbyInfo.newBuilder();
          if (hasStubbyInfo())
            localBuilder.mergeFrom(getStubbyInfo());
          paramCodedInputStream.readMessage(localBuilder, paramExtensionRegistryLite);
          setStubbyInfo(localBuilder.buildPartial());
        }
      }

      public final Builder addAllFromQuery(Iterable<? extends Data.ParticipantAttributes> paramIterable)
      {
        ensureFromQueryIsMutable();
        GeneratedMessageLite.Builder.addAll(paramIterable, this.fromQuery_);
        return this;
      }

      public final Builder addFromQuery(int paramInt, Data.ParticipantAttributes.Builder paramBuilder)
      {
        ensureFromQueryIsMutable();
        this.fromQuery_.add(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder addFromQuery(int paramInt, Data.ParticipantAttributes paramParticipantAttributes)
      {
        if (paramParticipantAttributes == null)
          throw new NullPointerException();
        ensureFromQueryIsMutable();
        this.fromQuery_.add(paramInt, paramParticipantAttributes);
        return this;
      }

      public final Builder addFromQuery(Data.ParticipantAttributes.Builder paramBuilder)
      {
        ensureFromQueryIsMutable();
        this.fromQuery_.add(paramBuilder.build());
        return this;
      }

      public final Builder addFromQuery(Data.ParticipantAttributes paramParticipantAttributes)
      {
        if (paramParticipantAttributes == null)
          throw new NullPointerException();
        ensureFromQueryIsMutable();
        this.fromQuery_.add(paramParticipantAttributes);
        return this;
      }

      public final Client.EventSearchRequest build()
      {
        Client.EventSearchRequest localEventSearchRequest = buildPartial();
        if (!localEventSearchRequest.isInitialized())
          throw new UninitializedMessageException();
        return localEventSearchRequest;
      }

      public final Client.EventSearchRequest buildPartial()
      {
        Client.EventSearchRequest localEventSearchRequest = new Client.EventSearchRequest(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Client.EventSearchRequest.access$50102(localEventSearchRequest, this.conversationId_);
        if ((i & 0x2) == 2)
          k |= 2;
        Client.EventSearchRequest.access$50202(localEventSearchRequest, this.unstructuredQuery_);
        if ((0x4 & this.bitField0_) == 4)
        {
          this.fromQuery_ = Collections.unmodifiableList(this.fromQuery_);
          this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        }
        Client.EventSearchRequest.access$50302(localEventSearchRequest, this.fromQuery_);
        if ((i & 0x8) == 8)
          k |= 4;
        Client.EventSearchRequest.access$50402(localEventSearchRequest, this.contentQuery_);
        if ((i & 0x10) == 16)
          k |= 8;
        Client.EventSearchRequest.access$50502(localEventSearchRequest, this.locationQuery_);
        if ((i & 0x20) == 32)
          k |= 16;
        Client.EventSearchRequest.access$50602(localEventSearchRequest, this.hasPhotoQuery_);
        if ((i & 0x40) == 64)
          k |= 32;
        Client.EventSearchRequest.access$50702(localEventSearchRequest, this.timeRangeQuery_);
        if ((i & 0x80) == 128)
          k |= 64;
        Client.EventSearchRequest.access$50802(localEventSearchRequest, this.stubbyInfo_);
        Client.EventSearchRequest.access$50902(localEventSearchRequest, k);
        return localEventSearchRequest;
      }

      public final Builder clear()
      {
        super.clear();
        this.conversationId_ = "";
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.unstructuredQuery_ = "";
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.fromQuery_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.contentQuery_ = "";
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        this.locationQuery_ = Data.Location.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        this.hasPhotoQuery_ = false;
        this.bitField0_ = (0xFFFFFFDF & this.bitField0_);
        this.timeRangeQuery_ = Data.TimeRange.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFBF & this.bitField0_);
        this.stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
        this.bitField0_ = (0xFFFFFF7F & this.bitField0_);
        return this;
      }

      public final Builder clearContentQuery()
      {
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        this.contentQuery_ = Client.EventSearchRequest.getDefaultInstance().getContentQuery();
        return this;
      }

      public final Builder clearConversationId()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.conversationId_ = Client.EventSearchRequest.getDefaultInstance().getConversationId();
        return this;
      }

      public final Builder clearFromQuery()
      {
        this.fromQuery_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        return this;
      }

      public final Builder clearHasPhotoQuery()
      {
        this.bitField0_ = (0xFFFFFFDF & this.bitField0_);
        this.hasPhotoQuery_ = false;
        return this;
      }

      public final Builder clearLocationQuery()
      {
        this.locationQuery_ = Data.Location.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        return this;
      }

      public final Builder clearStubbyInfo()
      {
        this.stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
        this.bitField0_ = (0xFFFFFF7F & this.bitField0_);
        return this;
      }

      public final Builder clearTimeRangeQuery()
      {
        this.timeRangeQuery_ = Data.TimeRange.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFBF & this.bitField0_);
        return this;
      }

      public final Builder clearUnstructuredQuery()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.unstructuredQuery_ = Client.EventSearchRequest.getDefaultInstance().getUnstructuredQuery();
        return this;
      }

      public final String getContentQuery()
      {
        Object localObject = this.contentQuery_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.contentQuery_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final String getConversationId()
      {
        Object localObject = this.conversationId_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.conversationId_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final Client.EventSearchRequest getDefaultInstanceForType()
      {
        return Client.EventSearchRequest.getDefaultInstance();
      }

      public final Data.ParticipantAttributes getFromQuery(int paramInt)
      {
        return (Data.ParticipantAttributes)this.fromQuery_.get(paramInt);
      }

      public final int getFromQueryCount()
      {
        return this.fromQuery_.size();
      }

      public final List<Data.ParticipantAttributes> getFromQueryList()
      {
        return Collections.unmodifiableList(this.fromQuery_);
      }

      public final boolean getHasPhotoQuery()
      {
        return this.hasPhotoQuery_;
      }

      public final Data.Location getLocationQuery()
      {
        return this.locationQuery_;
      }

      public final Data.StubbyInfo getStubbyInfo()
      {
        return this.stubbyInfo_;
      }

      public final Data.TimeRange getTimeRangeQuery()
      {
        return this.timeRangeQuery_;
      }

      public final String getUnstructuredQuery()
      {
        Object localObject = this.unstructuredQuery_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.unstructuredQuery_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final boolean hasContentQuery()
      {
        if ((0x8 & this.bitField0_) == 8);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasConversationId()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean hasHasPhotoQuery()
      {
        if ((0x20 & this.bitField0_) == 32);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasLocationQuery()
      {
        if ((0x10 & this.bitField0_) == 16);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasStubbyInfo()
      {
        if ((0x80 & this.bitField0_) == 128);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasTimeRangeQuery()
      {
        if ((0x40 & this.bitField0_) == 64);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasUnstructuredQuery()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Client.EventSearchRequest paramEventSearchRequest)
      {
        if (paramEventSearchRequest == Client.EventSearchRequest.getDefaultInstance());
        label84: Data.Location localLocation;
        label154: Data.TimeRange localTimeRange;
        label233: 
        do
        {
          return this;
          if (paramEventSearchRequest.hasConversationId())
            setConversationId(paramEventSearchRequest.getConversationId());
          if (paramEventSearchRequest.hasUnstructuredQuery())
            setUnstructuredQuery(paramEventSearchRequest.getUnstructuredQuery());
          if (!paramEventSearchRequest.fromQuery_.isEmpty())
          {
            if (!this.fromQuery_.isEmpty())
              break;
            this.fromQuery_ = paramEventSearchRequest.fromQuery_;
            this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
          }
          if (paramEventSearchRequest.hasContentQuery())
            setContentQuery(paramEventSearchRequest.getContentQuery());
          if (paramEventSearchRequest.hasLocationQuery())
          {
            localLocation = paramEventSearchRequest.getLocationQuery();
            if (((0x10 & this.bitField0_) != 16) || (this.locationQuery_ == Data.Location.getDefaultInstance()))
              break label334;
            this.locationQuery_ = Data.Location.newBuilder(this.locationQuery_).mergeFrom(localLocation).buildPartial();
            this.bitField0_ = (0x10 | this.bitField0_);
          }
          if (paramEventSearchRequest.hasHasPhotoQuery())
            setHasPhotoQuery(paramEventSearchRequest.getHasPhotoQuery());
          if (paramEventSearchRequest.hasTimeRangeQuery())
          {
            localTimeRange = paramEventSearchRequest.getTimeRangeQuery();
            if (((0x40 & this.bitField0_) != 64) || (this.timeRangeQuery_ == Data.TimeRange.getDefaultInstance()))
              break label343;
            this.timeRangeQuery_ = Data.TimeRange.newBuilder(this.timeRangeQuery_).mergeFrom(localTimeRange).buildPartial();
            this.bitField0_ = (0x40 | this.bitField0_);
          }
        }
        while (!paramEventSearchRequest.hasStubbyInfo());
        Data.StubbyInfo localStubbyInfo = paramEventSearchRequest.getStubbyInfo();
        if (((0x80 & this.bitField0_) == 128) && (this.stubbyInfo_ != Data.StubbyInfo.getDefaultInstance()));
        for (this.stubbyInfo_ = Data.StubbyInfo.newBuilder(this.stubbyInfo_).mergeFrom(localStubbyInfo).buildPartial(); ; this.stubbyInfo_ = localStubbyInfo)
        {
          this.bitField0_ = (0x80 | this.bitField0_);
          break;
          ensureFromQueryIsMutable();
          this.fromQuery_.addAll(paramEventSearchRequest.fromQuery_);
          break label84;
          label334: this.locationQuery_ = localLocation;
          break label154;
          label343: this.timeRangeQuery_ = localTimeRange;
          break label233;
        }
      }

      public final Builder setContentQuery(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x8 | this.bitField0_);
        this.contentQuery_ = paramString;
        return this;
      }

      public final Builder setConversationId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x1 | this.bitField0_);
        this.conversationId_ = paramString;
        return this;
      }

      public final Builder setFromQuery(int paramInt, Data.ParticipantAttributes.Builder paramBuilder)
      {
        ensureFromQueryIsMutable();
        this.fromQuery_.set(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder setFromQuery(int paramInt, Data.ParticipantAttributes paramParticipantAttributes)
      {
        if (paramParticipantAttributes == null)
          throw new NullPointerException();
        ensureFromQueryIsMutable();
        this.fromQuery_.set(paramInt, paramParticipantAttributes);
        return this;
      }

      public final Builder setHasPhotoQuery(boolean paramBoolean)
      {
        this.bitField0_ = (0x20 | this.bitField0_);
        this.hasPhotoQuery_ = paramBoolean;
        return this;
      }

      public final Builder setLocationQuery(Data.Location.Builder paramBuilder)
      {
        this.locationQuery_ = paramBuilder.build();
        this.bitField0_ = (0x10 | this.bitField0_);
        return this;
      }

      public final Builder setLocationQuery(Data.Location paramLocation)
      {
        if (paramLocation == null)
          throw new NullPointerException();
        this.locationQuery_ = paramLocation;
        this.bitField0_ = (0x10 | this.bitField0_);
        return this;
      }

      public final Builder setStubbyInfo(Data.StubbyInfo.Builder paramBuilder)
      {
        this.stubbyInfo_ = paramBuilder.build();
        this.bitField0_ = (0x80 | this.bitField0_);
        return this;
      }

      public final Builder setStubbyInfo(Data.StubbyInfo paramStubbyInfo)
      {
        if (paramStubbyInfo == null)
          throw new NullPointerException();
        this.stubbyInfo_ = paramStubbyInfo;
        this.bitField0_ = (0x80 | this.bitField0_);
        return this;
      }

      public final Builder setTimeRangeQuery(Data.TimeRange.Builder paramBuilder)
      {
        this.timeRangeQuery_ = paramBuilder.build();
        this.bitField0_ = (0x40 | this.bitField0_);
        return this;
      }

      public final Builder setTimeRangeQuery(Data.TimeRange paramTimeRange)
      {
        if (paramTimeRange == null)
          throw new NullPointerException();
        this.timeRangeQuery_ = paramTimeRange;
        this.bitField0_ = (0x40 | this.bitField0_);
        return this;
      }

      public final Builder setUnstructuredQuery(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x2 | this.bitField0_);
        this.unstructuredQuery_ = paramString;
        return this;
      }
    }
  }

  public static abstract interface EventSearchRequestOrBuilder extends MessageLiteOrBuilder
  {
    public abstract String getContentQuery();

    public abstract String getConversationId();

    public abstract Data.ParticipantAttributes getFromQuery(int paramInt);

    public abstract int getFromQueryCount();

    public abstract List<Data.ParticipantAttributes> getFromQueryList();

    public abstract boolean getHasPhotoQuery();

    public abstract Data.Location getLocationQuery();

    public abstract Data.StubbyInfo getStubbyInfo();

    public abstract Data.TimeRange getTimeRangeQuery();

    public abstract String getUnstructuredQuery();

    public abstract boolean hasContentQuery();

    public abstract boolean hasConversationId();

    public abstract boolean hasHasPhotoQuery();

    public abstract boolean hasLocationQuery();

    public abstract boolean hasStubbyInfo();

    public abstract boolean hasTimeRangeQuery();

    public abstract boolean hasUnstructuredQuery();
  }

  public static final class EventSearchResponse extends GeneratedMessageLite
    implements Client.EventSearchResponseOrBuilder
  {
    private static final EventSearchResponse defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private Client.ClientConversation conversation_;
    private List<Client.EventStreamResponse.Event> event_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private Data.ResponseStatus status_;

    static
    {
      EventSearchResponse localEventSearchResponse = new EventSearchResponse();
      defaultInstance = localEventSearchResponse;
      localEventSearchResponse.status_ = Data.ResponseStatus.OK;
      localEventSearchResponse.conversation_ = Client.ClientConversation.getDefaultInstance();
      localEventSearchResponse.event_ = Collections.emptyList();
    }

    private EventSearchResponse()
    {
    }

    private EventSearchResponse(Builder paramBuilder)
    {
      super();
    }

    public static EventSearchResponse getDefaultInstance()
    {
      return defaultInstance;
    }

    public static Builder newBuilder()
    {
      return Builder.access$51700();
    }

    public static Builder newBuilder(EventSearchResponse paramEventSearchResponse)
    {
      return Builder.access$51700().mergeFrom(paramEventSearchResponse);
    }

    public final Client.ClientConversation getConversation()
    {
      return this.conversation_;
    }

    public final EventSearchResponse getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final Client.EventStreamResponse.Event getEvent(int paramInt)
    {
      return (Client.EventStreamResponse.Event)this.event_.get(paramInt);
    }

    public final int getEventCount()
    {
      return this.event_.size();
    }

    public final List<Client.EventStreamResponse.Event> getEventList()
    {
      return this.event_;
    }

    public final Client.EventStreamResponse.EventOrBuilder getEventOrBuilder(int paramInt)
    {
      return (Client.EventStreamResponse.EventOrBuilder)this.event_.get(paramInt);
    }

    public final List<? extends Client.EventStreamResponse.EventOrBuilder> getEventOrBuilderList()
    {
      return this.event_;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int n = i; ; n = k)
      {
        return n;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeEnumSize(1, this.status_.getNumber());
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeMessageSize(3, this.conversation_);
        for (int m = 0; m < this.event_.size(); m++)
          k += CodedOutputStream.computeMessageSize(4, (MessageLite)this.event_.get(m));
        this.memoizedSerializedSize = k;
      }
    }

    public final Data.ResponseStatus getStatus()
    {
      return this.status_;
    }

    public final boolean hasConversation()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasStatus()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeEnum(1, this.status_.getNumber());
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeMessage(3, this.conversation_);
      for (int i = 0; i < this.event_.size(); i++)
        paramCodedOutputStream.writeMessage(4, (MessageLite)this.event_.get(i));
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Client.EventSearchResponse, Builder>
      implements Client.EventSearchResponseOrBuilder
    {
      private int bitField0_;
      private Client.ClientConversation conversation_ = Client.ClientConversation.getDefaultInstance();
      private List<Client.EventStreamResponse.Event> event_ = Collections.emptyList();
      private Data.ResponseStatus status_ = Data.ResponseStatus.OK;

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private void ensureEventIsMutable()
      {
        if ((0x4 & this.bitField0_) != 4)
        {
          this.event_ = new ArrayList(this.event_);
          this.bitField0_ = (0x4 | this.bitField0_);
        }
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 8:
            Data.ResponseStatus localResponseStatus = Data.ResponseStatus.valueOf(paramCodedInputStream.readEnum());
            if (localResponseStatus == null)
              continue;
            this.bitField0_ = (0x1 | this.bitField0_);
            this.status_ = localResponseStatus;
            break;
          case 26:
            Client.ClientConversation.Builder localBuilder1 = Client.ClientConversation.newBuilder();
            if (hasConversation())
              localBuilder1.mergeFrom(getConversation());
            paramCodedInputStream.readMessage(localBuilder1, paramExtensionRegistryLite);
            setConversation(localBuilder1.buildPartial());
            break;
          case 34:
          }
          Client.EventStreamResponse.Event.Builder localBuilder = Client.EventStreamResponse.Event.newBuilder();
          paramCodedInputStream.readMessage(localBuilder, paramExtensionRegistryLite);
          addEvent(localBuilder.buildPartial());
        }
      }

      public final Builder addAllEvent(Iterable<? extends Client.EventStreamResponse.Event> paramIterable)
      {
        ensureEventIsMutable();
        GeneratedMessageLite.Builder.addAll(paramIterable, this.event_);
        return this;
      }

      public final Builder addEvent(int paramInt, Client.EventStreamResponse.Event.Builder paramBuilder)
      {
        ensureEventIsMutable();
        this.event_.add(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder addEvent(int paramInt, Client.EventStreamResponse.Event paramEvent)
      {
        if (paramEvent == null)
          throw new NullPointerException();
        ensureEventIsMutable();
        this.event_.add(paramInt, paramEvent);
        return this;
      }

      public final Builder addEvent(Client.EventStreamResponse.Event.Builder paramBuilder)
      {
        ensureEventIsMutable();
        this.event_.add(paramBuilder.build());
        return this;
      }

      public final Builder addEvent(Client.EventStreamResponse.Event paramEvent)
      {
        if (paramEvent == null)
          throw new NullPointerException();
        ensureEventIsMutable();
        this.event_.add(paramEvent);
        return this;
      }

      public final Client.EventSearchResponse build()
      {
        Client.EventSearchResponse localEventSearchResponse = buildPartial();
        if (!localEventSearchResponse.isInitialized())
          throw new UninitializedMessageException();
        return localEventSearchResponse;
      }

      public final Client.EventSearchResponse buildPartial()
      {
        Client.EventSearchResponse localEventSearchResponse = new Client.EventSearchResponse(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Client.EventSearchResponse.access$51902(localEventSearchResponse, this.status_);
        if ((i & 0x2) == 2)
          k |= 2;
        Client.EventSearchResponse.access$52002(localEventSearchResponse, this.conversation_);
        if ((0x4 & this.bitField0_) == 4)
        {
          this.event_ = Collections.unmodifiableList(this.event_);
          this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        }
        Client.EventSearchResponse.access$52102(localEventSearchResponse, this.event_);
        Client.EventSearchResponse.access$52202(localEventSearchResponse, k);
        return localEventSearchResponse;
      }

      public final Builder clear()
      {
        super.clear();
        this.status_ = Data.ResponseStatus.OK;
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.conversation_ = Client.ClientConversation.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.event_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        return this;
      }

      public final Builder clearConversation()
      {
        this.conversation_ = Client.ClientConversation.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        return this;
      }

      public final Builder clearEvent()
      {
        this.event_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        return this;
      }

      public final Builder clearStatus()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.status_ = Data.ResponseStatus.OK;
        return this;
      }

      public final Client.ClientConversation getConversation()
      {
        return this.conversation_;
      }

      public final Client.EventSearchResponse getDefaultInstanceForType()
      {
        return Client.EventSearchResponse.getDefaultInstance();
      }

      public final Client.EventStreamResponse.Event getEvent(int paramInt)
      {
        return (Client.EventStreamResponse.Event)this.event_.get(paramInt);
      }

      public final int getEventCount()
      {
        return this.event_.size();
      }

      public final List<Client.EventStreamResponse.Event> getEventList()
      {
        return Collections.unmodifiableList(this.event_);
      }

      public final Data.ResponseStatus getStatus()
      {
        return this.status_;
      }

      public final boolean hasConversation()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasStatus()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Client.EventSearchResponse paramEventSearchResponse)
      {
        if (paramEventSearchResponse == Client.EventSearchResponse.getDefaultInstance());
        while (true)
        {
          return this;
          if (paramEventSearchResponse.hasStatus())
            setStatus(paramEventSearchResponse.getStatus());
          Client.ClientConversation localClientConversation;
          if (paramEventSearchResponse.hasConversation())
          {
            localClientConversation = paramEventSearchResponse.getConversation();
            if (((0x2 & this.bitField0_) != 2) || (this.conversation_ == Client.ClientConversation.getDefaultInstance()))
              break label131;
          }
          label131: for (this.conversation_ = Client.ClientConversation.newBuilder(this.conversation_).mergeFrom(localClientConversation).buildPartial(); ; this.conversation_ = localClientConversation)
          {
            this.bitField0_ = (0x2 | this.bitField0_);
            if (paramEventSearchResponse.event_.isEmpty())
              break;
            if (!this.event_.isEmpty())
              break label139;
            this.event_ = paramEventSearchResponse.event_;
            this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
            break;
          }
          label139: ensureEventIsMutable();
          this.event_.addAll(paramEventSearchResponse.event_);
        }
      }

      public final Builder setConversation(Client.ClientConversation.Builder paramBuilder)
      {
        this.conversation_ = paramBuilder.build();
        this.bitField0_ = (0x2 | this.bitField0_);
        return this;
      }

      public final Builder setConversation(Client.ClientConversation paramClientConversation)
      {
        if (paramClientConversation == null)
          throw new NullPointerException();
        this.conversation_ = paramClientConversation;
        this.bitField0_ = (0x2 | this.bitField0_);
        return this;
      }

      public final Builder setEvent(int paramInt, Client.EventStreamResponse.Event.Builder paramBuilder)
      {
        ensureEventIsMutable();
        this.event_.set(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder setEvent(int paramInt, Client.EventStreamResponse.Event paramEvent)
      {
        if (paramEvent == null)
          throw new NullPointerException();
        ensureEventIsMutable();
        this.event_.set(paramInt, paramEvent);
        return this;
      }

      public final Builder setStatus(Data.ResponseStatus paramResponseStatus)
      {
        if (paramResponseStatus == null)
          throw new NullPointerException();
        this.bitField0_ = (0x1 | this.bitField0_);
        this.status_ = paramResponseStatus;
        return this;
      }
    }
  }

  public static abstract interface EventSearchResponseOrBuilder extends MessageLiteOrBuilder
  {
    public abstract Client.ClientConversation getConversation();

    public abstract Client.EventStreamResponse.Event getEvent(int paramInt);

    public abstract int getEventCount();

    public abstract List<Client.EventStreamResponse.Event> getEventList();

    public abstract Data.ResponseStatus getStatus();

    public abstract boolean hasConversation();

    public abstract boolean hasStatus();
  }

  public static final class EventStreamRequest extends GeneratedMessageLite
    implements Client.EventStreamRequestOrBuilder
  {
    private static final EventStreamRequest defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private Object conversationId_;
    private int count_;
    private long end_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private Object messageId_;
    private Order order_;
    private Object senderId_;
    private long start_;
    private Data.StubbyInfo stubbyInfo_;

    static
    {
      EventStreamRequest localEventStreamRequest = new EventStreamRequest();
      defaultInstance = localEventStreamRequest;
      localEventStreamRequest.conversationId_ = "";
      localEventStreamRequest.messageId_ = "";
      localEventStreamRequest.start_ = 0L;
      localEventStreamRequest.order_ = Order.EARLIEST;
      localEventStreamRequest.end_ = 0L;
      localEventStreamRequest.count_ = 0;
      localEventStreamRequest.senderId_ = "";
      localEventStreamRequest.stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
    }

    private EventStreamRequest()
    {
    }

    private EventStreamRequest(Builder paramBuilder)
    {
      super();
    }

    private ByteString getConversationIdBytes()
    {
      Object localObject = this.conversationId_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.conversationId_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static EventStreamRequest getDefaultInstance()
    {
      return defaultInstance;
    }

    private ByteString getMessageIdBytes()
    {
      Object localObject = this.messageId_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.messageId_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    private ByteString getSenderIdBytes()
    {
      Object localObject = this.senderId_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.senderId_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static Builder newBuilder()
    {
      return Builder.access$34100();
    }

    public static Builder newBuilder(EventStreamRequest paramEventStreamRequest)
    {
      return Builder.access$34100().mergeFrom(paramEventStreamRequest);
    }

    public final String getConversationId()
    {
      Object localObject1 = this.conversationId_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.conversationId_ = str;
      }
    }

    public final int getCount()
    {
      return this.count_;
    }

    public final EventStreamRequest getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final long getEnd()
    {
      return this.end_;
    }

    public final String getMessageId()
    {
      Object localObject1 = this.messageId_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.messageId_ = str;
      }
    }

    public final Order getOrder()
    {
      return this.order_;
    }

    public final String getSenderId()
    {
      Object localObject1 = this.senderId_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.senderId_ = str;
      }
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeBytesSize(1, getConversationIdBytes());
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeBytesSize(2, getMessageIdBytes());
        if ((0x4 & this.bitField0_) == 4)
          k += CodedOutputStream.computeInt64Size(3, this.start_);
        if ((0x8 & this.bitField0_) == 8)
          k += CodedOutputStream.computeEnumSize(4, this.order_.getNumber());
        if ((0x10 & this.bitField0_) == 16)
          k += CodedOutputStream.computeInt64Size(5, this.end_);
        if ((0x20 & this.bitField0_) == 32)
          k += CodedOutputStream.computeInt32Size(6, this.count_);
        if ((0x40 & this.bitField0_) == 64)
          k += CodedOutputStream.computeBytesSize(7, getSenderIdBytes());
        if ((0x80 & this.bitField0_) == 128)
          k += CodedOutputStream.computeMessageSize(8, this.stubbyInfo_);
        this.memoizedSerializedSize = k;
      }
    }

    public final long getStart()
    {
      return this.start_;
    }

    public final Data.StubbyInfo getStubbyInfo()
    {
      return this.stubbyInfo_;
    }

    public final boolean hasConversationId()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean hasCount()
    {
      if ((0x20 & this.bitField0_) == 32);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasEnd()
    {
      if ((0x10 & this.bitField0_) == 16);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasMessageId()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasOrder()
    {
      if ((0x8 & this.bitField0_) == 8);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasSenderId()
    {
      if ((0x40 & this.bitField0_) == 64);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasStart()
    {
      if ((0x4 & this.bitField0_) == 4);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasStubbyInfo()
    {
      if ((0x80 & this.bitField0_) == 128);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeBytes(1, getConversationIdBytes());
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeBytes(2, getMessageIdBytes());
      if ((0x4 & this.bitField0_) == 4)
        paramCodedOutputStream.writeInt64(3, this.start_);
      if ((0x8 & this.bitField0_) == 8)
        paramCodedOutputStream.writeEnum(4, this.order_.getNumber());
      if ((0x10 & this.bitField0_) == 16)
        paramCodedOutputStream.writeInt64(5, this.end_);
      if ((0x20 & this.bitField0_) == 32)
        paramCodedOutputStream.writeInt32(6, this.count_);
      if ((0x40 & this.bitField0_) == 64)
        paramCodedOutputStream.writeBytes(7, getSenderIdBytes());
      if ((0x80 & this.bitField0_) == 128)
        paramCodedOutputStream.writeMessage(8, this.stubbyInfo_);
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Client.EventStreamRequest, Builder>
      implements Client.EventStreamRequestOrBuilder
    {
      private int bitField0_;
      private Object conversationId_ = "";
      private int count_;
      private long end_;
      private Object messageId_ = "";
      private Client.EventStreamRequest.Order order_ = Client.EventStreamRequest.Order.EARLIEST;
      private Object senderId_ = "";
      private long start_;
      private Data.StubbyInfo stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 10:
            this.bitField0_ = (0x1 | this.bitField0_);
            this.conversationId_ = paramCodedInputStream.readBytes();
            break;
          case 18:
            this.bitField0_ = (0x2 | this.bitField0_);
            this.messageId_ = paramCodedInputStream.readBytes();
            break;
          case 24:
            this.bitField0_ = (0x4 | this.bitField0_);
            this.start_ = paramCodedInputStream.readInt64();
            break;
          case 32:
            Client.EventStreamRequest.Order localOrder = Client.EventStreamRequest.Order.valueOf(paramCodedInputStream.readEnum());
            if (localOrder == null)
              continue;
            this.bitField0_ = (0x8 | this.bitField0_);
            this.order_ = localOrder;
            break;
          case 40:
            this.bitField0_ = (0x10 | this.bitField0_);
            this.end_ = paramCodedInputStream.readInt64();
            break;
          case 48:
            this.bitField0_ = (0x20 | this.bitField0_);
            this.count_ = paramCodedInputStream.readInt32();
            break;
          case 58:
            this.bitField0_ = (0x40 | this.bitField0_);
            this.senderId_ = paramCodedInputStream.readBytes();
            break;
          case 66:
          }
          Data.StubbyInfo.Builder localBuilder = Data.StubbyInfo.newBuilder();
          if (hasStubbyInfo())
            localBuilder.mergeFrom(getStubbyInfo());
          paramCodedInputStream.readMessage(localBuilder, paramExtensionRegistryLite);
          setStubbyInfo(localBuilder.buildPartial());
        }
      }

      public final Client.EventStreamRequest build()
      {
        Client.EventStreamRequest localEventStreamRequest = buildPartial();
        if (!localEventStreamRequest.isInitialized())
          throw new UninitializedMessageException();
        return localEventStreamRequest;
      }

      public final Client.EventStreamRequest buildPartial()
      {
        Client.EventStreamRequest localEventStreamRequest = new Client.EventStreamRequest(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Client.EventStreamRequest.access$34302(localEventStreamRequest, this.conversationId_);
        if ((i & 0x2) == 2)
          k |= 2;
        Client.EventStreamRequest.access$34402(localEventStreamRequest, this.messageId_);
        if ((i & 0x4) == 4)
          k |= 4;
        Client.EventStreamRequest.access$34502(localEventStreamRequest, this.start_);
        if ((i & 0x8) == 8)
          k |= 8;
        Client.EventStreamRequest.access$34602(localEventStreamRequest, this.order_);
        if ((i & 0x10) == 16)
          k |= 16;
        Client.EventStreamRequest.access$34702(localEventStreamRequest, this.end_);
        if ((i & 0x20) == 32)
          k |= 32;
        Client.EventStreamRequest.access$34802(localEventStreamRequest, this.count_);
        if ((i & 0x40) == 64)
          k |= 64;
        Client.EventStreamRequest.access$34902(localEventStreamRequest, this.senderId_);
        if ((i & 0x80) == 128)
          k |= 128;
        Client.EventStreamRequest.access$35002(localEventStreamRequest, this.stubbyInfo_);
        Client.EventStreamRequest.access$35102(localEventStreamRequest, k);
        return localEventStreamRequest;
      }

      public final Builder clear()
      {
        super.clear();
        this.conversationId_ = "";
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.messageId_ = "";
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.start_ = 0L;
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.order_ = Client.EventStreamRequest.Order.EARLIEST;
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        this.end_ = 0L;
        this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        this.count_ = 0;
        this.bitField0_ = (0xFFFFFFDF & this.bitField0_);
        this.senderId_ = "";
        this.bitField0_ = (0xFFFFFFBF & this.bitField0_);
        this.stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
        this.bitField0_ = (0xFFFFFF7F & this.bitField0_);
        return this;
      }

      public final Builder clearConversationId()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.conversationId_ = Client.EventStreamRequest.getDefaultInstance().getConversationId();
        return this;
      }

      public final Builder clearCount()
      {
        this.bitField0_ = (0xFFFFFFDF & this.bitField0_);
        this.count_ = 0;
        return this;
      }

      public final Builder clearEnd()
      {
        this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        this.end_ = 0L;
        return this;
      }

      public final Builder clearMessageId()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.messageId_ = Client.EventStreamRequest.getDefaultInstance().getMessageId();
        return this;
      }

      public final Builder clearOrder()
      {
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        this.order_ = Client.EventStreamRequest.Order.EARLIEST;
        return this;
      }

      public final Builder clearSenderId()
      {
        this.bitField0_ = (0xFFFFFFBF & this.bitField0_);
        this.senderId_ = Client.EventStreamRequest.getDefaultInstance().getSenderId();
        return this;
      }

      public final Builder clearStart()
      {
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.start_ = 0L;
        return this;
      }

      public final Builder clearStubbyInfo()
      {
        this.stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
        this.bitField0_ = (0xFFFFFF7F & this.bitField0_);
        return this;
      }

      public final String getConversationId()
      {
        Object localObject = this.conversationId_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.conversationId_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final int getCount()
      {
        return this.count_;
      }

      public final Client.EventStreamRequest getDefaultInstanceForType()
      {
        return Client.EventStreamRequest.getDefaultInstance();
      }

      public final long getEnd()
      {
        return this.end_;
      }

      public final String getMessageId()
      {
        Object localObject = this.messageId_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.messageId_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final Client.EventStreamRequest.Order getOrder()
      {
        return this.order_;
      }

      public final String getSenderId()
      {
        Object localObject = this.senderId_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.senderId_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final long getStart()
      {
        return this.start_;
      }

      public final Data.StubbyInfo getStubbyInfo()
      {
        return this.stubbyInfo_;
      }

      public final boolean hasConversationId()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean hasCount()
      {
        if ((0x20 & this.bitField0_) == 32);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasEnd()
      {
        if ((0x10 & this.bitField0_) == 16);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasMessageId()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasOrder()
      {
        if ((0x8 & this.bitField0_) == 8);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasSenderId()
      {
        if ((0x40 & this.bitField0_) == 64);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasStart()
      {
        if ((0x4 & this.bitField0_) == 4);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasStubbyInfo()
      {
        if ((0x80 & this.bitField0_) == 128);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Client.EventStreamRequest paramEventStreamRequest)
      {
        if (paramEventStreamRequest == Client.EventStreamRequest.getDefaultInstance());
        do
        {
          return this;
          if (paramEventStreamRequest.hasConversationId())
            setConversationId(paramEventStreamRequest.getConversationId());
          if (paramEventStreamRequest.hasMessageId())
            setMessageId(paramEventStreamRequest.getMessageId());
          if (paramEventStreamRequest.hasStart())
            setStart(paramEventStreamRequest.getStart());
          if (paramEventStreamRequest.hasOrder())
            setOrder(paramEventStreamRequest.getOrder());
          if (paramEventStreamRequest.hasEnd())
            setEnd(paramEventStreamRequest.getEnd());
          if (paramEventStreamRequest.hasCount())
            setCount(paramEventStreamRequest.getCount());
          if (paramEventStreamRequest.hasSenderId())
            setSenderId(paramEventStreamRequest.getSenderId());
        }
        while (!paramEventStreamRequest.hasStubbyInfo());
        Data.StubbyInfo localStubbyInfo = paramEventStreamRequest.getStubbyInfo();
        if (((0x80 & this.bitField0_) == 128) && (this.stubbyInfo_ != Data.StubbyInfo.getDefaultInstance()));
        for (this.stubbyInfo_ = Data.StubbyInfo.newBuilder(this.stubbyInfo_).mergeFrom(localStubbyInfo).buildPartial(); ; this.stubbyInfo_ = localStubbyInfo)
        {
          this.bitField0_ = (0x80 | this.bitField0_);
          break;
        }
      }

      public final Builder setConversationId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x1 | this.bitField0_);
        this.conversationId_ = paramString;
        return this;
      }

      public final Builder setCount(int paramInt)
      {
        this.bitField0_ = (0x20 | this.bitField0_);
        this.count_ = paramInt;
        return this;
      }

      public final Builder setEnd(long paramLong)
      {
        this.bitField0_ = (0x10 | this.bitField0_);
        this.end_ = paramLong;
        return this;
      }

      public final Builder setMessageId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x2 | this.bitField0_);
        this.messageId_ = paramString;
        return this;
      }

      public final Builder setOrder(Client.EventStreamRequest.Order paramOrder)
      {
        if (paramOrder == null)
          throw new NullPointerException();
        this.bitField0_ = (0x8 | this.bitField0_);
        this.order_ = paramOrder;
        return this;
      }

      public final Builder setSenderId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x40 | this.bitField0_);
        this.senderId_ = paramString;
        return this;
      }

      public final Builder setStart(long paramLong)
      {
        this.bitField0_ = (0x4 | this.bitField0_);
        this.start_ = paramLong;
        return this;
      }

      public final Builder setStubbyInfo(Data.StubbyInfo.Builder paramBuilder)
      {
        this.stubbyInfo_ = paramBuilder.build();
        this.bitField0_ = (0x80 | this.bitField0_);
        return this;
      }

      public final Builder setStubbyInfo(Data.StubbyInfo paramStubbyInfo)
      {
        if (paramStubbyInfo == null)
          throw new NullPointerException();
        this.stubbyInfo_ = paramStubbyInfo;
        this.bitField0_ = (0x80 | this.bitField0_);
        return this;
      }
    }

    public static enum Order
      implements Internal.EnumLite
    {
      private static Internal.EnumLiteMap<Order> internalValueMap = new Internal.EnumLiteMap()
      {
      };
      private final int value;

      static
      {
        Order[] arrayOfOrder = new Order[2];
        arrayOfOrder[0] = EARLIEST;
        arrayOfOrder[1] = LATEST;
      }

      private Order(int paramInt1, int paramInt2)
      {
        this.value = paramInt1;
      }

      public static Order valueOf(int paramInt)
      {
        Order localOrder;
        switch (paramInt)
        {
        default:
          localOrder = null;
        case 1:
        case 2:
        }
        while (true)
        {
          return localOrder;
          localOrder = EARLIEST;
          continue;
          localOrder = LATEST;
        }
      }

      public final int getNumber()
      {
        return this.value;
      }
    }
  }

  public static abstract interface EventStreamRequestOrBuilder extends MessageLiteOrBuilder
  {
    public abstract String getConversationId();

    public abstract int getCount();

    public abstract long getEnd();

    public abstract String getMessageId();

    public abstract Client.EventStreamRequest.Order getOrder();

    public abstract String getSenderId();

    public abstract long getStart();

    public abstract Data.StubbyInfo getStubbyInfo();

    public abstract boolean hasConversationId();

    public abstract boolean hasCount();

    public abstract boolean hasEnd();

    public abstract boolean hasMessageId();

    public abstract boolean hasOrder();

    public abstract boolean hasSenderId();

    public abstract boolean hasStart();

    public abstract boolean hasStubbyInfo();
  }

  public static final class EventStreamResponse extends GeneratedMessageLite
    implements Client.EventStreamResponseOrBuilder
  {
    private static final EventStreamResponse defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private Object conversationId_;
    private long earliest_;
    private List<Event> event_;
    private long latest_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private boolean more_;
    private Data.ResponseStatus status_;

    static
    {
      EventStreamResponse localEventStreamResponse = new EventStreamResponse();
      defaultInstance = localEventStreamResponse;
      localEventStreamResponse.conversationId_ = "";
      localEventStreamResponse.event_ = Collections.emptyList();
      localEventStreamResponse.more_ = false;
      localEventStreamResponse.earliest_ = 0L;
      localEventStreamResponse.latest_ = 0L;
      localEventStreamResponse.status_ = Data.ResponseStatus.OK;
    }

    private EventStreamResponse()
    {
    }

    private EventStreamResponse(Builder paramBuilder)
    {
      super();
    }

    private ByteString getConversationIdBytes()
    {
      Object localObject = this.conversationId_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.conversationId_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static EventStreamResponse getDefaultInstance()
    {
      return defaultInstance;
    }

    public static Builder newBuilder()
    {
      return Builder.access$36500();
    }

    public static Builder newBuilder(EventStreamResponse paramEventStreamResponse)
    {
      return Builder.access$36500().mergeFrom(paramEventStreamResponse);
    }

    public final String getConversationId()
    {
      Object localObject1 = this.conversationId_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.conversationId_ = str;
      }
    }

    public final EventStreamResponse getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final long getEarliest()
    {
      return this.earliest_;
    }

    public final Event getEvent(int paramInt)
    {
      return (Event)this.event_.get(paramInt);
    }

    public final int getEventCount()
    {
      return this.event_.size();
    }

    public final List<Event> getEventList()
    {
      return this.event_;
    }

    public final EventOrBuilder getEventOrBuilder(int paramInt)
    {
      return (EventOrBuilder)this.event_.get(paramInt);
    }

    public final List<? extends EventOrBuilder> getEventOrBuilderList()
    {
      return this.event_;
    }

    public final long getLatest()
    {
      return this.latest_;
    }

    public final boolean getMore()
    {
      return this.more_;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int n = i; ; n = k)
      {
        return n;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeBytesSize(1, getConversationIdBytes());
        for (int m = 0; m < this.event_.size(); m++)
          k += CodedOutputStream.computeMessageSize(2, (MessageLite)this.event_.get(m));
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeBoolSize(3, this.more_);
        if ((0x4 & this.bitField0_) == 4)
          k += CodedOutputStream.computeInt64Size(4, this.earliest_);
        if ((0x8 & this.bitField0_) == 8)
          k += CodedOutputStream.computeInt64Size(5, this.latest_);
        if ((0x10 & this.bitField0_) == 16)
          k += CodedOutputStream.computeEnumSize(6, this.status_.getNumber());
        this.memoizedSerializedSize = k;
      }
    }

    public final Data.ResponseStatus getStatus()
    {
      return this.status_;
    }

    public final boolean hasConversationId()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean hasEarliest()
    {
      if ((0x4 & this.bitField0_) == 4);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasLatest()
    {
      if ((0x8 & this.bitField0_) == 8);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasMore()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasStatus()
    {
      if ((0x10 & this.bitField0_) == 16);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeBytes(1, getConversationIdBytes());
      for (int i = 0; i < this.event_.size(); i++)
        paramCodedOutputStream.writeMessage(2, (MessageLite)this.event_.get(i));
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeBool(3, this.more_);
      if ((0x4 & this.bitField0_) == 4)
        paramCodedOutputStream.writeInt64(4, this.earliest_);
      if ((0x8 & this.bitField0_) == 8)
        paramCodedOutputStream.writeInt64(5, this.latest_);
      if ((0x10 & this.bitField0_) == 16)
        paramCodedOutputStream.writeEnum(6, this.status_.getNumber());
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Client.EventStreamResponse, Builder>
      implements Client.EventStreamResponseOrBuilder
    {
      private int bitField0_;
      private Object conversationId_ = "";
      private long earliest_;
      private List<Client.EventStreamResponse.Event> event_ = Collections.emptyList();
      private long latest_;
      private boolean more_;
      private Data.ResponseStatus status_ = Data.ResponseStatus.OK;

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private void ensureEventIsMutable()
      {
        if ((0x2 & this.bitField0_) != 2)
        {
          this.event_ = new ArrayList(this.event_);
          this.bitField0_ = (0x2 | this.bitField0_);
        }
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 10:
            this.bitField0_ = (0x1 | this.bitField0_);
            this.conversationId_ = paramCodedInputStream.readBytes();
            break;
          case 18:
            Client.EventStreamResponse.Event.Builder localBuilder = Client.EventStreamResponse.Event.newBuilder();
            paramCodedInputStream.readMessage(localBuilder, paramExtensionRegistryLite);
            addEvent(localBuilder.buildPartial());
            break;
          case 24:
            this.bitField0_ = (0x4 | this.bitField0_);
            this.more_ = paramCodedInputStream.readBool();
            break;
          case 32:
            this.bitField0_ = (0x8 | this.bitField0_);
            this.earliest_ = paramCodedInputStream.readInt64();
            break;
          case 40:
            this.bitField0_ = (0x10 | this.bitField0_);
            this.latest_ = paramCodedInputStream.readInt64();
            break;
          case 48:
          }
          Data.ResponseStatus localResponseStatus = Data.ResponseStatus.valueOf(paramCodedInputStream.readEnum());
          if (localResponseStatus != null)
          {
            this.bitField0_ = (0x20 | this.bitField0_);
            this.status_ = localResponseStatus;
          }
        }
      }

      public final Builder addAllEvent(Iterable<? extends Client.EventStreamResponse.Event> paramIterable)
      {
        ensureEventIsMutable();
        GeneratedMessageLite.Builder.addAll(paramIterable, this.event_);
        return this;
      }

      public final Builder addEvent(int paramInt, Client.EventStreamResponse.Event.Builder paramBuilder)
      {
        ensureEventIsMutable();
        this.event_.add(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder addEvent(int paramInt, Client.EventStreamResponse.Event paramEvent)
      {
        if (paramEvent == null)
          throw new NullPointerException();
        ensureEventIsMutable();
        this.event_.add(paramInt, paramEvent);
        return this;
      }

      public final Builder addEvent(Client.EventStreamResponse.Event.Builder paramBuilder)
      {
        ensureEventIsMutable();
        this.event_.add(paramBuilder.build());
        return this;
      }

      public final Builder addEvent(Client.EventStreamResponse.Event paramEvent)
      {
        if (paramEvent == null)
          throw new NullPointerException();
        ensureEventIsMutable();
        this.event_.add(paramEvent);
        return this;
      }

      public final Client.EventStreamResponse build()
      {
        Client.EventStreamResponse localEventStreamResponse = buildPartial();
        if (!localEventStreamResponse.isInitialized())
          throw new UninitializedMessageException();
        return localEventStreamResponse;
      }

      public final Client.EventStreamResponse buildPartial()
      {
        Client.EventStreamResponse localEventStreamResponse = new Client.EventStreamResponse(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Client.EventStreamResponse.access$36702(localEventStreamResponse, this.conversationId_);
        if ((0x2 & this.bitField0_) == 2)
        {
          this.event_ = Collections.unmodifiableList(this.event_);
          this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        }
        Client.EventStreamResponse.access$36802(localEventStreamResponse, this.event_);
        if ((i & 0x4) == 4)
          k |= 2;
        Client.EventStreamResponse.access$36902(localEventStreamResponse, this.more_);
        if ((i & 0x8) == 8)
          k |= 4;
        Client.EventStreamResponse.access$37002(localEventStreamResponse, this.earliest_);
        if ((i & 0x10) == 16)
          k |= 8;
        Client.EventStreamResponse.access$37102(localEventStreamResponse, this.latest_);
        if ((i & 0x20) == 32)
          k |= 16;
        Client.EventStreamResponse.access$37202(localEventStreamResponse, this.status_);
        Client.EventStreamResponse.access$37302(localEventStreamResponse, k);
        return localEventStreamResponse;
      }

      public final Builder clear()
      {
        super.clear();
        this.conversationId_ = "";
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.event_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.more_ = false;
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.earliest_ = 0L;
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        this.latest_ = 0L;
        this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        this.status_ = Data.ResponseStatus.OK;
        this.bitField0_ = (0xFFFFFFDF & this.bitField0_);
        return this;
      }

      public final Builder clearConversationId()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.conversationId_ = Client.EventStreamResponse.getDefaultInstance().getConversationId();
        return this;
      }

      public final Builder clearEarliest()
      {
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        this.earliest_ = 0L;
        return this;
      }

      public final Builder clearEvent()
      {
        this.event_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        return this;
      }

      public final Builder clearLatest()
      {
        this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        this.latest_ = 0L;
        return this;
      }

      public final Builder clearMore()
      {
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.more_ = false;
        return this;
      }

      public final Builder clearStatus()
      {
        this.bitField0_ = (0xFFFFFFDF & this.bitField0_);
        this.status_ = Data.ResponseStatus.OK;
        return this;
      }

      public final String getConversationId()
      {
        Object localObject = this.conversationId_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.conversationId_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final Client.EventStreamResponse getDefaultInstanceForType()
      {
        return Client.EventStreamResponse.getDefaultInstance();
      }

      public final long getEarliest()
      {
        return this.earliest_;
      }

      public final Client.EventStreamResponse.Event getEvent(int paramInt)
      {
        return (Client.EventStreamResponse.Event)this.event_.get(paramInt);
      }

      public final int getEventCount()
      {
        return this.event_.size();
      }

      public final List<Client.EventStreamResponse.Event> getEventList()
      {
        return Collections.unmodifiableList(this.event_);
      }

      public final long getLatest()
      {
        return this.latest_;
      }

      public final boolean getMore()
      {
        return this.more_;
      }

      public final Data.ResponseStatus getStatus()
      {
        return this.status_;
      }

      public final boolean hasConversationId()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean hasEarliest()
      {
        if ((0x8 & this.bitField0_) == 8);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasLatest()
      {
        if ((0x10 & this.bitField0_) == 16);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasMore()
      {
        if ((0x4 & this.bitField0_) == 4);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasStatus()
      {
        if ((0x20 & this.bitField0_) == 32);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Client.EventStreamResponse paramEventStreamResponse)
      {
        if (paramEventStreamResponse == Client.EventStreamResponse.getDefaultInstance())
          return this;
        if (paramEventStreamResponse.hasConversationId())
          setConversationId(paramEventStreamResponse.getConversationId());
        if (!paramEventStreamResponse.event_.isEmpty())
        {
          if (!this.event_.isEmpty())
            break label135;
          this.event_ = paramEventStreamResponse.event_;
          this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        }
        while (true)
        {
          if (paramEventStreamResponse.hasMore())
            setMore(paramEventStreamResponse.getMore());
          if (paramEventStreamResponse.hasEarliest())
            setEarliest(paramEventStreamResponse.getEarliest());
          if (paramEventStreamResponse.hasLatest())
            setLatest(paramEventStreamResponse.getLatest());
          if (!paramEventStreamResponse.hasStatus())
            break;
          setStatus(paramEventStreamResponse.getStatus());
          break;
          label135: ensureEventIsMutable();
          this.event_.addAll(paramEventStreamResponse.event_);
        }
      }

      public final Builder setConversationId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x1 | this.bitField0_);
        this.conversationId_ = paramString;
        return this;
      }

      public final Builder setEarliest(long paramLong)
      {
        this.bitField0_ = (0x8 | this.bitField0_);
        this.earliest_ = paramLong;
        return this;
      }

      public final Builder setEvent(int paramInt, Client.EventStreamResponse.Event.Builder paramBuilder)
      {
        ensureEventIsMutable();
        this.event_.set(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder setEvent(int paramInt, Client.EventStreamResponse.Event paramEvent)
      {
        if (paramEvent == null)
          throw new NullPointerException();
        ensureEventIsMutable();
        this.event_.set(paramInt, paramEvent);
        return this;
      }

      public final Builder setLatest(long paramLong)
      {
        this.bitField0_ = (0x10 | this.bitField0_);
        this.latest_ = paramLong;
        return this;
      }

      public final Builder setMore(boolean paramBoolean)
      {
        this.bitField0_ = (0x4 | this.bitField0_);
        this.more_ = paramBoolean;
        return this;
      }

      public final Builder setStatus(Data.ResponseStatus paramResponseStatus)
      {
        if (paramResponseStatus == null)
          throw new NullPointerException();
        this.bitField0_ = (0x20 | this.bitField0_);
        this.status_ = paramResponseStatus;
        return this;
      }
    }

    public static final class Event extends GeneratedMessageLite
      implements Client.EventStreamResponse.EventOrBuilder
    {
      private static final Event defaultInstance;
      private static final long serialVersionUID;
      private int bitField0_;
      private Client.ChatMessage chatMessage_;
      private Client.GroupConversationRename groupConversationRename_;
      private Client.MembershipChange membershipChange_;
      private byte memoizedIsInitialized = -1;
      private int memoizedSerializedSize = -1;
      private Client.Migration migration_;
      private Client.Receipt receipt_;
      private Client.EventStreamResponse.ReceiverState receiverState_;
      private Client.TileEvent tileEvent_;
      private long timestamp_;

      static
      {
        Event localEvent = new Event();
        defaultInstance = localEvent;
        localEvent.timestamp_ = 0L;
        localEvent.receiverState_ = Client.EventStreamResponse.ReceiverState.UNKNOWN;
        localEvent.chatMessage_ = Client.ChatMessage.getDefaultInstance();
        localEvent.receipt_ = Client.Receipt.getDefaultInstance();
        localEvent.membershipChange_ = Client.MembershipChange.getDefaultInstance();
        localEvent.groupConversationRename_ = Client.GroupConversationRename.getDefaultInstance();
        localEvent.migration_ = Client.Migration.getDefaultInstance();
        localEvent.tileEvent_ = Client.TileEvent.getDefaultInstance();
      }

      private Event()
      {
      }

      private Event(Builder paramBuilder)
      {
        super();
      }

      public static Event getDefaultInstance()
      {
        return defaultInstance;
      }

      public static Builder newBuilder()
      {
        return Builder.access$35300();
      }

      public static Builder newBuilder(Event paramEvent)
      {
        return Builder.access$35300().mergeFrom(paramEvent);
      }

      public final Client.ChatMessage getChatMessage()
      {
        return this.chatMessage_;
      }

      public final Event getDefaultInstanceForType()
      {
        return defaultInstance;
      }

      public final Client.GroupConversationRename getGroupConversationRename()
      {
        return this.groupConversationRename_;
      }

      public final Client.MembershipChange getMembershipChange()
      {
        return this.membershipChange_;
      }

      public final Client.Migration getMigration()
      {
        return this.migration_;
      }

      public final Client.Receipt getReceipt()
      {
        return this.receipt_;
      }

      public final Client.EventStreamResponse.ReceiverState getReceiverState()
      {
        return this.receiverState_;
      }

      public final int getSerializedSize()
      {
        int i = this.memoizedSerializedSize;
        if (i != -1);
        int k;
        for (int m = i; ; m = k)
        {
          return m;
          int j = 0x1 & this.bitField0_;
          k = 0;
          if (j == 1)
            k = 0 + CodedOutputStream.computeInt64Size(2, this.timestamp_);
          if ((0x4 & this.bitField0_) == 4)
            k += CodedOutputStream.computeMessageSize(3, this.chatMessage_);
          if ((0x8 & this.bitField0_) == 8)
            k += CodedOutputStream.computeMessageSize(4, this.receipt_);
          if ((0x10 & this.bitField0_) == 16)
            k += CodedOutputStream.computeMessageSize(5, this.membershipChange_);
          if ((0x20 & this.bitField0_) == 32)
            k += CodedOutputStream.computeMessageSize(6, this.groupConversationRename_);
          if ((0x40 & this.bitField0_) == 64)
            k += CodedOutputStream.computeMessageSize(7, this.migration_);
          if ((0x80 & this.bitField0_) == 128)
            k += CodedOutputStream.computeMessageSize(8, this.tileEvent_);
          if ((0x2 & this.bitField0_) == 2)
            k += CodedOutputStream.computeEnumSize(9, this.receiverState_.getNumber());
          this.memoizedSerializedSize = k;
        }
      }

      public final Client.TileEvent getTileEvent()
      {
        return this.tileEvent_;
      }

      public final long getTimestamp()
      {
        return this.timestamp_;
      }

      public final boolean hasChatMessage()
      {
        if ((0x4 & this.bitField0_) == 4);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasGroupConversationRename()
      {
        if ((0x20 & this.bitField0_) == 32);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasMembershipChange()
      {
        if ((0x10 & this.bitField0_) == 16);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasMigration()
      {
        if ((0x40 & this.bitField0_) == 64);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasReceipt()
      {
        if ((0x8 & this.bitField0_) == 8);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasReceiverState()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasTileEvent()
      {
        if ((0x80 & this.bitField0_) == 128);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasTimestamp()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean isInitialized()
      {
        int i = 1;
        int j = this.memoizedIsInitialized;
        if (j != -1)
          if (j != i);
        while (true)
        {
          return i;
          i = 0;
          continue;
          this.memoizedIsInitialized = i;
        }
      }

      protected final Object writeReplace()
        throws ObjectStreamException
      {
        return super.writeReplace();
      }

      public final void writeTo(CodedOutputStream paramCodedOutputStream)
        throws IOException
      {
        getSerializedSize();
        if ((0x1 & this.bitField0_) == 1)
          paramCodedOutputStream.writeInt64(2, this.timestamp_);
        if ((0x4 & this.bitField0_) == 4)
          paramCodedOutputStream.writeMessage(3, this.chatMessage_);
        if ((0x8 & this.bitField0_) == 8)
          paramCodedOutputStream.writeMessage(4, this.receipt_);
        if ((0x10 & this.bitField0_) == 16)
          paramCodedOutputStream.writeMessage(5, this.membershipChange_);
        if ((0x20 & this.bitField0_) == 32)
          paramCodedOutputStream.writeMessage(6, this.groupConversationRename_);
        if ((0x40 & this.bitField0_) == 64)
          paramCodedOutputStream.writeMessage(7, this.migration_);
        if ((0x80 & this.bitField0_) == 128)
          paramCodedOutputStream.writeMessage(8, this.tileEvent_);
        if ((0x2 & this.bitField0_) == 2)
          paramCodedOutputStream.writeEnum(9, this.receiverState_.getNumber());
      }

      public static final class Builder extends GeneratedMessageLite.Builder<Client.EventStreamResponse.Event, Builder>
        implements Client.EventStreamResponse.EventOrBuilder
      {
        private int bitField0_;
        private Client.ChatMessage chatMessage_ = Client.ChatMessage.getDefaultInstance();
        private Client.GroupConversationRename groupConversationRename_ = Client.GroupConversationRename.getDefaultInstance();
        private Client.MembershipChange membershipChange_ = Client.MembershipChange.getDefaultInstance();
        private Client.Migration migration_ = Client.Migration.getDefaultInstance();
        private Client.Receipt receipt_ = Client.Receipt.getDefaultInstance();
        private Client.EventStreamResponse.ReceiverState receiverState_ = Client.EventStreamResponse.ReceiverState.UNKNOWN;
        private Client.TileEvent tileEvent_ = Client.TileEvent.getDefaultInstance();
        private long timestamp_;

        private Builder clone()
        {
          return new Builder().mergeFrom(buildPartial());
        }

        private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
          throws IOException
        {
          while (true)
          {
            int i = paramCodedInputStream.readTag();
            switch (i)
            {
            default:
              if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
                continue;
            case 0:
              return this;
            case 16:
              this.bitField0_ = (0x1 | this.bitField0_);
              this.timestamp_ = paramCodedInputStream.readInt64();
              break;
            case 26:
              Client.ChatMessage.Builder localBuilder5 = Client.ChatMessage.newBuilder();
              if (hasChatMessage())
                localBuilder5.mergeFrom(getChatMessage());
              paramCodedInputStream.readMessage(localBuilder5, paramExtensionRegistryLite);
              setChatMessage(localBuilder5.buildPartial());
              break;
            case 34:
              Client.Receipt.Builder localBuilder4 = Client.Receipt.newBuilder();
              if (hasReceipt())
                localBuilder4.mergeFrom(getReceipt());
              paramCodedInputStream.readMessage(localBuilder4, paramExtensionRegistryLite);
              setReceipt(localBuilder4.buildPartial());
              break;
            case 42:
              Client.MembershipChange.Builder localBuilder3 = Client.MembershipChange.newBuilder();
              if (hasMembershipChange())
                localBuilder3.mergeFrom(getMembershipChange());
              paramCodedInputStream.readMessage(localBuilder3, paramExtensionRegistryLite);
              setMembershipChange(localBuilder3.buildPartial());
              break;
            case 50:
              Client.GroupConversationRename.Builder localBuilder2 = Client.GroupConversationRename.newBuilder();
              if (hasGroupConversationRename())
                localBuilder2.mergeFrom(getGroupConversationRename());
              paramCodedInputStream.readMessage(localBuilder2, paramExtensionRegistryLite);
              setGroupConversationRename(localBuilder2.buildPartial());
              break;
            case 58:
              Client.Migration.Builder localBuilder1 = Client.Migration.newBuilder();
              if (hasMigration())
                localBuilder1.mergeFrom(getMigration());
              paramCodedInputStream.readMessage(localBuilder1, paramExtensionRegistryLite);
              setMigration(localBuilder1.buildPartial());
              break;
            case 66:
              Client.TileEvent.Builder localBuilder = Client.TileEvent.newBuilder();
              if (hasTileEvent())
                localBuilder.mergeFrom(getTileEvent());
              paramCodedInputStream.readMessage(localBuilder, paramExtensionRegistryLite);
              setTileEvent(localBuilder.buildPartial());
              break;
            case 72:
            }
            Client.EventStreamResponse.ReceiverState localReceiverState = Client.EventStreamResponse.ReceiverState.valueOf(paramCodedInputStream.readEnum());
            if (localReceiverState != null)
            {
              this.bitField0_ = (0x2 | this.bitField0_);
              this.receiverState_ = localReceiverState;
            }
          }
        }

        public final Client.EventStreamResponse.Event build()
        {
          Client.EventStreamResponse.Event localEvent = buildPartial();
          if (!localEvent.isInitialized())
            throw new UninitializedMessageException();
          return localEvent;
        }

        public final Client.EventStreamResponse.Event buildPartial()
        {
          Client.EventStreamResponse.Event localEvent = new Client.EventStreamResponse.Event(this, (byte)0);
          int i = this.bitField0_;
          int j = i & 0x1;
          int k = 0;
          if (j == 1)
            k = 1;
          Client.EventStreamResponse.Event.access$35502(localEvent, this.timestamp_);
          if ((i & 0x2) == 2)
            k |= 2;
          Client.EventStreamResponse.Event.access$35602(localEvent, this.receiverState_);
          if ((i & 0x4) == 4)
            k |= 4;
          Client.EventStreamResponse.Event.access$35702(localEvent, this.chatMessage_);
          if ((i & 0x8) == 8)
            k |= 8;
          Client.EventStreamResponse.Event.access$35802(localEvent, this.receipt_);
          if ((i & 0x10) == 16)
            k |= 16;
          Client.EventStreamResponse.Event.access$35902(localEvent, this.membershipChange_);
          if ((i & 0x20) == 32)
            k |= 32;
          Client.EventStreamResponse.Event.access$36002(localEvent, this.groupConversationRename_);
          if ((i & 0x40) == 64)
            k |= 64;
          Client.EventStreamResponse.Event.access$36102(localEvent, this.migration_);
          if ((i & 0x80) == 128)
            k |= 128;
          Client.EventStreamResponse.Event.access$36202(localEvent, this.tileEvent_);
          Client.EventStreamResponse.Event.access$36302(localEvent, k);
          return localEvent;
        }

        public final Builder clear()
        {
          super.clear();
          this.timestamp_ = 0L;
          this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
          this.receiverState_ = Client.EventStreamResponse.ReceiverState.UNKNOWN;
          this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
          this.chatMessage_ = Client.ChatMessage.getDefaultInstance();
          this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
          this.receipt_ = Client.Receipt.getDefaultInstance();
          this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
          this.membershipChange_ = Client.MembershipChange.getDefaultInstance();
          this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
          this.groupConversationRename_ = Client.GroupConversationRename.getDefaultInstance();
          this.bitField0_ = (0xFFFFFFDF & this.bitField0_);
          this.migration_ = Client.Migration.getDefaultInstance();
          this.bitField0_ = (0xFFFFFFBF & this.bitField0_);
          this.tileEvent_ = Client.TileEvent.getDefaultInstance();
          this.bitField0_ = (0xFFFFFF7F & this.bitField0_);
          return this;
        }

        public final Builder clearChatMessage()
        {
          this.chatMessage_ = Client.ChatMessage.getDefaultInstance();
          this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
          return this;
        }

        public final Builder clearGroupConversationRename()
        {
          this.groupConversationRename_ = Client.GroupConversationRename.getDefaultInstance();
          this.bitField0_ = (0xFFFFFFDF & this.bitField0_);
          return this;
        }

        public final Builder clearMembershipChange()
        {
          this.membershipChange_ = Client.MembershipChange.getDefaultInstance();
          this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
          return this;
        }

        public final Builder clearMigration()
        {
          this.migration_ = Client.Migration.getDefaultInstance();
          this.bitField0_ = (0xFFFFFFBF & this.bitField0_);
          return this;
        }

        public final Builder clearReceipt()
        {
          this.receipt_ = Client.Receipt.getDefaultInstance();
          this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
          return this;
        }

        public final Builder clearReceiverState()
        {
          this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
          this.receiverState_ = Client.EventStreamResponse.ReceiverState.UNKNOWN;
          return this;
        }

        public final Builder clearTileEvent()
        {
          this.tileEvent_ = Client.TileEvent.getDefaultInstance();
          this.bitField0_ = (0xFFFFFF7F & this.bitField0_);
          return this;
        }

        public final Builder clearTimestamp()
        {
          this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
          this.timestamp_ = 0L;
          return this;
        }

        public final Client.ChatMessage getChatMessage()
        {
          return this.chatMessage_;
        }

        public final Client.EventStreamResponse.Event getDefaultInstanceForType()
        {
          return Client.EventStreamResponse.Event.getDefaultInstance();
        }

        public final Client.GroupConversationRename getGroupConversationRename()
        {
          return this.groupConversationRename_;
        }

        public final Client.MembershipChange getMembershipChange()
        {
          return this.membershipChange_;
        }

        public final Client.Migration getMigration()
        {
          return this.migration_;
        }

        public final Client.Receipt getReceipt()
        {
          return this.receipt_;
        }

        public final Client.EventStreamResponse.ReceiverState getReceiverState()
        {
          return this.receiverState_;
        }

        public final Client.TileEvent getTileEvent()
        {
          return this.tileEvent_;
        }

        public final long getTimestamp()
        {
          return this.timestamp_;
        }

        public final boolean hasChatMessage()
        {
          if ((0x4 & this.bitField0_) == 4);
          for (boolean bool = true; ; bool = false)
            return bool;
        }

        public final boolean hasGroupConversationRename()
        {
          if ((0x20 & this.bitField0_) == 32);
          for (boolean bool = true; ; bool = false)
            return bool;
        }

        public final boolean hasMembershipChange()
        {
          if ((0x10 & this.bitField0_) == 16);
          for (boolean bool = true; ; bool = false)
            return bool;
        }

        public final boolean hasMigration()
        {
          if ((0x40 & this.bitField0_) == 64);
          for (boolean bool = true; ; bool = false)
            return bool;
        }

        public final boolean hasReceipt()
        {
          if ((0x8 & this.bitField0_) == 8);
          for (boolean bool = true; ; bool = false)
            return bool;
        }

        public final boolean hasReceiverState()
        {
          if ((0x2 & this.bitField0_) == 2);
          for (boolean bool = true; ; bool = false)
            return bool;
        }

        public final boolean hasTileEvent()
        {
          if ((0x80 & this.bitField0_) == 128);
          for (boolean bool = true; ; bool = false)
            return bool;
        }

        public final boolean hasTimestamp()
        {
          int i = 1;
          if ((0x1 & this.bitField0_) == i);
          while (true)
          {
            return i;
            int j = 0;
          }
        }

        public final boolean isInitialized()
        {
          return true;
        }

        public final Builder mergeFrom(Client.EventStreamResponse.Event paramEvent)
        {
          if (paramEvent == Client.EventStreamResponse.Event.getDefaultInstance());
          Client.ChatMessage localChatMessage;
          label93: Client.Receipt localReceipt;
          label157: Client.MembershipChange localMembershipChange;
          label222: Client.GroupConversationRename localGroupConversationRename;
          label287: Client.Migration localMigration;
          label350: 
          do
          {
            return this;
            if (paramEvent.hasTimestamp())
              setTimestamp(paramEvent.getTimestamp());
            if (paramEvent.hasReceiverState())
              setReceiverState(paramEvent.getReceiverState());
            if (paramEvent.hasChatMessage())
            {
              localChatMessage = paramEvent.getChatMessage();
              if (((0x4 & this.bitField0_) != 4) || (this.chatMessage_ == Client.ChatMessage.getDefaultInstance()))
                break;
              this.chatMessage_ = Client.ChatMessage.newBuilder(this.chatMessage_).mergeFrom(localChatMessage).buildPartial();
              this.bitField0_ = (0x4 | this.bitField0_);
            }
            if (paramEvent.hasReceipt())
            {
              localReceipt = paramEvent.getReceipt();
              if (((0x8 & this.bitField0_) != 8) || (this.receipt_ == Client.Receipt.getDefaultInstance()))
                break label439;
              this.receipt_ = Client.Receipt.newBuilder(this.receipt_).mergeFrom(localReceipt).buildPartial();
              this.bitField0_ = (0x8 | this.bitField0_);
            }
            if (paramEvent.hasMembershipChange())
            {
              localMembershipChange = paramEvent.getMembershipChange();
              if (((0x10 & this.bitField0_) != 16) || (this.membershipChange_ == Client.MembershipChange.getDefaultInstance()))
                break label448;
              this.membershipChange_ = Client.MembershipChange.newBuilder(this.membershipChange_).mergeFrom(localMembershipChange).buildPartial();
              this.bitField0_ = (0x10 | this.bitField0_);
            }
            if (paramEvent.hasGroupConversationRename())
            {
              localGroupConversationRename = paramEvent.getGroupConversationRename();
              if (((0x20 & this.bitField0_) != 32) || (this.groupConversationRename_ == Client.GroupConversationRename.getDefaultInstance()))
                break label457;
              this.groupConversationRename_ = Client.GroupConversationRename.newBuilder(this.groupConversationRename_).mergeFrom(localGroupConversationRename).buildPartial();
              this.bitField0_ = (0x20 | this.bitField0_);
            }
            if (paramEvent.hasMigration())
            {
              localMigration = paramEvent.getMigration();
              if (((0x40 & this.bitField0_) != 64) || (this.migration_ == Client.Migration.getDefaultInstance()))
                break label466;
              this.migration_ = Client.Migration.newBuilder(this.migration_).mergeFrom(localMigration).buildPartial();
              this.bitField0_ = (0x40 | this.bitField0_);
            }
          }
          while (!paramEvent.hasTileEvent());
          Client.TileEvent localTileEvent = paramEvent.getTileEvent();
          if (((0x80 & this.bitField0_) == 128) && (this.tileEvent_ != Client.TileEvent.getDefaultInstance()));
          for (this.tileEvent_ = Client.TileEvent.newBuilder(this.tileEvent_).mergeFrom(localTileEvent).buildPartial(); ; this.tileEvent_ = localTileEvent)
          {
            this.bitField0_ = (0x80 | this.bitField0_);
            break;
            this.chatMessage_ = localChatMessage;
            break label93;
            label439: this.receipt_ = localReceipt;
            break label157;
            label448: this.membershipChange_ = localMembershipChange;
            break label222;
            label457: this.groupConversationRename_ = localGroupConversationRename;
            break label287;
            label466: this.migration_ = localMigration;
            break label350;
          }
        }

        public final Builder setChatMessage(Client.ChatMessage.Builder paramBuilder)
        {
          this.chatMessage_ = paramBuilder.build();
          this.bitField0_ = (0x4 | this.bitField0_);
          return this;
        }

        public final Builder setChatMessage(Client.ChatMessage paramChatMessage)
        {
          if (paramChatMessage == null)
            throw new NullPointerException();
          this.chatMessage_ = paramChatMessage;
          this.bitField0_ = (0x4 | this.bitField0_);
          return this;
        }

        public final Builder setGroupConversationRename(Client.GroupConversationRename.Builder paramBuilder)
        {
          this.groupConversationRename_ = paramBuilder.build();
          this.bitField0_ = (0x20 | this.bitField0_);
          return this;
        }

        public final Builder setGroupConversationRename(Client.GroupConversationRename paramGroupConversationRename)
        {
          if (paramGroupConversationRename == null)
            throw new NullPointerException();
          this.groupConversationRename_ = paramGroupConversationRename;
          this.bitField0_ = (0x20 | this.bitField0_);
          return this;
        }

        public final Builder setMembershipChange(Client.MembershipChange.Builder paramBuilder)
        {
          this.membershipChange_ = paramBuilder.build();
          this.bitField0_ = (0x10 | this.bitField0_);
          return this;
        }

        public final Builder setMembershipChange(Client.MembershipChange paramMembershipChange)
        {
          if (paramMembershipChange == null)
            throw new NullPointerException();
          this.membershipChange_ = paramMembershipChange;
          this.bitField0_ = (0x10 | this.bitField0_);
          return this;
        }

        public final Builder setMigration(Client.Migration.Builder paramBuilder)
        {
          this.migration_ = paramBuilder.build();
          this.bitField0_ = (0x40 | this.bitField0_);
          return this;
        }

        public final Builder setMigration(Client.Migration paramMigration)
        {
          if (paramMigration == null)
            throw new NullPointerException();
          this.migration_ = paramMigration;
          this.bitField0_ = (0x40 | this.bitField0_);
          return this;
        }

        public final Builder setReceipt(Client.Receipt.Builder paramBuilder)
        {
          this.receipt_ = paramBuilder.build();
          this.bitField0_ = (0x8 | this.bitField0_);
          return this;
        }

        public final Builder setReceipt(Client.Receipt paramReceipt)
        {
          if (paramReceipt == null)
            throw new NullPointerException();
          this.receipt_ = paramReceipt;
          this.bitField0_ = (0x8 | this.bitField0_);
          return this;
        }

        public final Builder setReceiverState(Client.EventStreamResponse.ReceiverState paramReceiverState)
        {
          if (paramReceiverState == null)
            throw new NullPointerException();
          this.bitField0_ = (0x2 | this.bitField0_);
          this.receiverState_ = paramReceiverState;
          return this;
        }

        public final Builder setTileEvent(Client.TileEvent.Builder paramBuilder)
        {
          this.tileEvent_ = paramBuilder.build();
          this.bitField0_ = (0x80 | this.bitField0_);
          return this;
        }

        public final Builder setTileEvent(Client.TileEvent paramTileEvent)
        {
          if (paramTileEvent == null)
            throw new NullPointerException();
          this.tileEvent_ = paramTileEvent;
          this.bitField0_ = (0x80 | this.bitField0_);
          return this;
        }

        public final Builder setTimestamp(long paramLong)
        {
          this.bitField0_ = (0x1 | this.bitField0_);
          this.timestamp_ = paramLong;
          return this;
        }
      }
    }

    public static abstract interface EventOrBuilder extends MessageLiteOrBuilder
    {
      public abstract Client.ChatMessage getChatMessage();

      public abstract Client.GroupConversationRename getGroupConversationRename();

      public abstract Client.MembershipChange getMembershipChange();

      public abstract Client.Migration getMigration();

      public abstract Client.Receipt getReceipt();

      public abstract Client.EventStreamResponse.ReceiverState getReceiverState();

      public abstract Client.TileEvent getTileEvent();

      public abstract long getTimestamp();

      public abstract boolean hasChatMessage();

      public abstract boolean hasGroupConversationRename();

      public abstract boolean hasMembershipChange();

      public abstract boolean hasMigration();

      public abstract boolean hasReceipt();

      public abstract boolean hasReceiverState();

      public abstract boolean hasTileEvent();

      public abstract boolean hasTimestamp();
    }

    public static enum ReceiverState
      implements Internal.EnumLite
    {
      private static Internal.EnumLiteMap<ReceiverState> internalValueMap = new Internal.EnumLiteMap()
      {
      };
      private final int value;

      static
      {
        NO_RECEIPT = new ReceiverState("NO_RECEIPT", 1, 1);
        DELIVERED = new ReceiverState("DELIVERED", 2, 2);
        READ = new ReceiverState("READ", 3, 3);
        ReceiverState[] arrayOfReceiverState = new ReceiverState[4];
        arrayOfReceiverState[0] = UNKNOWN;
        arrayOfReceiverState[1] = NO_RECEIPT;
        arrayOfReceiverState[2] = DELIVERED;
        arrayOfReceiverState[3] = READ;
      }

      private ReceiverState(int paramInt1, int paramInt2)
      {
        this.value = paramInt1;
      }

      public static ReceiverState valueOf(int paramInt)
      {
        ReceiverState localReceiverState;
        switch (paramInt)
        {
        default:
          localReceiverState = null;
        case 0:
        case 1:
        case 2:
        case 3:
        }
        while (true)
        {
          return localReceiverState;
          localReceiverState = UNKNOWN;
          continue;
          localReceiverState = NO_RECEIPT;
          continue;
          localReceiverState = DELIVERED;
          continue;
          localReceiverState = READ;
        }
      }

      public final int getNumber()
      {
        return this.value;
      }
    }
  }

  public static abstract interface EventStreamResponseOrBuilder extends MessageLiteOrBuilder
  {
    public abstract String getConversationId();

    public abstract long getEarliest();

    public abstract Client.EventStreamResponse.Event getEvent(int paramInt);

    public abstract int getEventCount();

    public abstract List<Client.EventStreamResponse.Event> getEventList();

    public abstract long getLatest();

    public abstract boolean getMore();

    public abstract Data.ResponseStatus getStatus();

    public abstract boolean hasConversationId();

    public abstract boolean hasEarliest();

    public abstract boolean hasLatest();

    public abstract boolean hasMore();

    public abstract boolean hasStatus();
  }

  public static final class GlobalConversationPreferencesRequest extends GeneratedMessageLite
    implements Client.GlobalConversationPreferencesRequestOrBuilder
  {
    private static final GlobalConversationPreferencesRequest defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private Object conversationId_;
    private LocationModification locationModification_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private Data.StubbyInfo stubbyInfo_;
    private List<TagModification> tagModification_;
    private Data.ConversationMetadata.ConversationVisibility visibilityModification_;

    static
    {
      GlobalConversationPreferencesRequest localGlobalConversationPreferencesRequest = new GlobalConversationPreferencesRequest();
      defaultInstance = localGlobalConversationPreferencesRequest;
      localGlobalConversationPreferencesRequest.conversationId_ = "";
      localGlobalConversationPreferencesRequest.visibilityModification_ = Data.ConversationMetadata.ConversationVisibility.PUBLIC;
      localGlobalConversationPreferencesRequest.tagModification_ = Collections.emptyList();
      localGlobalConversationPreferencesRequest.locationModification_ = LocationModification.getDefaultInstance();
      localGlobalConversationPreferencesRequest.stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
    }

    private GlobalConversationPreferencesRequest()
    {
    }

    private GlobalConversationPreferencesRequest(Builder paramBuilder)
    {
      super();
    }

    private ByteString getConversationIdBytes()
    {
      Object localObject = this.conversationId_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.conversationId_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static GlobalConversationPreferencesRequest getDefaultInstance()
    {
      return defaultInstance;
    }

    public static Builder newBuilder()
    {
      return Builder.access$29600();
    }

    public static Builder newBuilder(GlobalConversationPreferencesRequest paramGlobalConversationPreferencesRequest)
    {
      return Builder.access$29600().mergeFrom(paramGlobalConversationPreferencesRequest);
    }

    public final String getConversationId()
    {
      Object localObject1 = this.conversationId_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.conversationId_ = str;
      }
    }

    public final GlobalConversationPreferencesRequest getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final LocationModification getLocationModification()
    {
      return this.locationModification_;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int n = i; ; n = k)
      {
        return n;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeBytesSize(1, getConversationIdBytes());
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeEnumSize(2, this.visibilityModification_.getNumber());
        for (int m = 0; m < this.tagModification_.size(); m++)
          k += CodedOutputStream.computeMessageSize(3, (MessageLite)this.tagModification_.get(m));
        if ((0x4 & this.bitField0_) == 4)
          k += CodedOutputStream.computeMessageSize(4, this.locationModification_);
        if ((0x8 & this.bitField0_) == 8)
          k += CodedOutputStream.computeMessageSize(5, this.stubbyInfo_);
        this.memoizedSerializedSize = k;
      }
    }

    public final Data.StubbyInfo getStubbyInfo()
    {
      return this.stubbyInfo_;
    }

    public final TagModification getTagModification(int paramInt)
    {
      return (TagModification)this.tagModification_.get(paramInt);
    }

    public final int getTagModificationCount()
    {
      return this.tagModification_.size();
    }

    public final List<TagModification> getTagModificationList()
    {
      return this.tagModification_;
    }

    public final TagModificationOrBuilder getTagModificationOrBuilder(int paramInt)
    {
      return (TagModificationOrBuilder)this.tagModification_.get(paramInt);
    }

    public final List<? extends TagModificationOrBuilder> getTagModificationOrBuilderList()
    {
      return this.tagModification_;
    }

    public final Data.ConversationMetadata.ConversationVisibility getVisibilityModification()
    {
      return this.visibilityModification_;
    }

    public final boolean hasConversationId()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean hasLocationModification()
    {
      if ((0x4 & this.bitField0_) == 4);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasStubbyInfo()
    {
      if ((0x8 & this.bitField0_) == 8);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasVisibilityModification()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeBytes(1, getConversationIdBytes());
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeEnum(2, this.visibilityModification_.getNumber());
      for (int i = 0; i < this.tagModification_.size(); i++)
        paramCodedOutputStream.writeMessage(3, (MessageLite)this.tagModification_.get(i));
      if ((0x4 & this.bitField0_) == 4)
        paramCodedOutputStream.writeMessage(4, this.locationModification_);
      if ((0x8 & this.bitField0_) == 8)
        paramCodedOutputStream.writeMessage(5, this.stubbyInfo_);
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Client.GlobalConversationPreferencesRequest, Builder>
      implements Client.GlobalConversationPreferencesRequestOrBuilder
    {
      private int bitField0_;
      private Object conversationId_ = "";
      private Client.GlobalConversationPreferencesRequest.LocationModification locationModification_ = Client.GlobalConversationPreferencesRequest.LocationModification.getDefaultInstance();
      private Data.StubbyInfo stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
      private List<Client.GlobalConversationPreferencesRequest.TagModification> tagModification_ = Collections.emptyList();
      private Data.ConversationMetadata.ConversationVisibility visibilityModification_ = Data.ConversationMetadata.ConversationVisibility.PUBLIC;

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private void ensureTagModificationIsMutable()
      {
        if ((0x4 & this.bitField0_) != 4)
        {
          this.tagModification_ = new ArrayList(this.tagModification_);
          this.bitField0_ = (0x4 | this.bitField0_);
        }
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 10:
            this.bitField0_ = (0x1 | this.bitField0_);
            this.conversationId_ = paramCodedInputStream.readBytes();
            break;
          case 16:
            Data.ConversationMetadata.ConversationVisibility localConversationVisibility = Data.ConversationMetadata.ConversationVisibility.valueOf(paramCodedInputStream.readEnum());
            if (localConversationVisibility == null)
              continue;
            this.bitField0_ = (0x2 | this.bitField0_);
            this.visibilityModification_ = localConversationVisibility;
            break;
          case 26:
            Client.GlobalConversationPreferencesRequest.TagModification.Builder localBuilder2 = Client.GlobalConversationPreferencesRequest.TagModification.newBuilder();
            paramCodedInputStream.readMessage(localBuilder2, paramExtensionRegistryLite);
            addTagModification(localBuilder2.buildPartial());
            break;
          case 34:
            Client.GlobalConversationPreferencesRequest.LocationModification.Builder localBuilder1 = Client.GlobalConversationPreferencesRequest.LocationModification.newBuilder();
            if (hasLocationModification())
              localBuilder1.mergeFrom(getLocationModification());
            paramCodedInputStream.readMessage(localBuilder1, paramExtensionRegistryLite);
            setLocationModification(localBuilder1.buildPartial());
            break;
          case 42:
          }
          Data.StubbyInfo.Builder localBuilder = Data.StubbyInfo.newBuilder();
          if (hasStubbyInfo())
            localBuilder.mergeFrom(getStubbyInfo());
          paramCodedInputStream.readMessage(localBuilder, paramExtensionRegistryLite);
          setStubbyInfo(localBuilder.buildPartial());
        }
      }

      public final Builder addAllTagModification(Iterable<? extends Client.GlobalConversationPreferencesRequest.TagModification> paramIterable)
      {
        ensureTagModificationIsMutable();
        GeneratedMessageLite.Builder.addAll(paramIterable, this.tagModification_);
        return this;
      }

      public final Builder addTagModification(int paramInt, Client.GlobalConversationPreferencesRequest.TagModification.Builder paramBuilder)
      {
        ensureTagModificationIsMutable();
        this.tagModification_.add(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder addTagModification(int paramInt, Client.GlobalConversationPreferencesRequest.TagModification paramTagModification)
      {
        if (paramTagModification == null)
          throw new NullPointerException();
        ensureTagModificationIsMutable();
        this.tagModification_.add(paramInt, paramTagModification);
        return this;
      }

      public final Builder addTagModification(Client.GlobalConversationPreferencesRequest.TagModification.Builder paramBuilder)
      {
        ensureTagModificationIsMutable();
        this.tagModification_.add(paramBuilder.build());
        return this;
      }

      public final Builder addTagModification(Client.GlobalConversationPreferencesRequest.TagModification paramTagModification)
      {
        if (paramTagModification == null)
          throw new NullPointerException();
        ensureTagModificationIsMutable();
        this.tagModification_.add(paramTagModification);
        return this;
      }

      public final Client.GlobalConversationPreferencesRequest build()
      {
        Client.GlobalConversationPreferencesRequest localGlobalConversationPreferencesRequest = buildPartial();
        if (!localGlobalConversationPreferencesRequest.isInitialized())
          throw new UninitializedMessageException();
        return localGlobalConversationPreferencesRequest;
      }

      public final Client.GlobalConversationPreferencesRequest buildPartial()
      {
        Client.GlobalConversationPreferencesRequest localGlobalConversationPreferencesRequest = new Client.GlobalConversationPreferencesRequest(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Client.GlobalConversationPreferencesRequest.access$29802(localGlobalConversationPreferencesRequest, this.conversationId_);
        if ((i & 0x2) == 2)
          k |= 2;
        Client.GlobalConversationPreferencesRequest.access$29902(localGlobalConversationPreferencesRequest, this.visibilityModification_);
        if ((0x4 & this.bitField0_) == 4)
        {
          this.tagModification_ = Collections.unmodifiableList(this.tagModification_);
          this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        }
        Client.GlobalConversationPreferencesRequest.access$30002(localGlobalConversationPreferencesRequest, this.tagModification_);
        if ((i & 0x8) == 8)
          k |= 4;
        Client.GlobalConversationPreferencesRequest.access$30102(localGlobalConversationPreferencesRequest, this.locationModification_);
        if ((i & 0x10) == 16)
          k |= 8;
        Client.GlobalConversationPreferencesRequest.access$30202(localGlobalConversationPreferencesRequest, this.stubbyInfo_);
        Client.GlobalConversationPreferencesRequest.access$30302(localGlobalConversationPreferencesRequest, k);
        return localGlobalConversationPreferencesRequest;
      }

      public final Builder clear()
      {
        super.clear();
        this.conversationId_ = "";
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.visibilityModification_ = Data.ConversationMetadata.ConversationVisibility.PUBLIC;
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.tagModification_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.locationModification_ = Client.GlobalConversationPreferencesRequest.LocationModification.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        this.stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        return this;
      }

      public final Builder clearConversationId()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.conversationId_ = Client.GlobalConversationPreferencesRequest.getDefaultInstance().getConversationId();
        return this;
      }

      public final Builder clearLocationModification()
      {
        this.locationModification_ = Client.GlobalConversationPreferencesRequest.LocationModification.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        return this;
      }

      public final Builder clearStubbyInfo()
      {
        this.stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        return this;
      }

      public final Builder clearTagModification()
      {
        this.tagModification_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        return this;
      }

      public final Builder clearVisibilityModification()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.visibilityModification_ = Data.ConversationMetadata.ConversationVisibility.PUBLIC;
        return this;
      }

      public final String getConversationId()
      {
        Object localObject = this.conversationId_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.conversationId_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final Client.GlobalConversationPreferencesRequest getDefaultInstanceForType()
      {
        return Client.GlobalConversationPreferencesRequest.getDefaultInstance();
      }

      public final Client.GlobalConversationPreferencesRequest.LocationModification getLocationModification()
      {
        return this.locationModification_;
      }

      public final Data.StubbyInfo getStubbyInfo()
      {
        return this.stubbyInfo_;
      }

      public final Client.GlobalConversationPreferencesRequest.TagModification getTagModification(int paramInt)
      {
        return (Client.GlobalConversationPreferencesRequest.TagModification)this.tagModification_.get(paramInt);
      }

      public final int getTagModificationCount()
      {
        return this.tagModification_.size();
      }

      public final List<Client.GlobalConversationPreferencesRequest.TagModification> getTagModificationList()
      {
        return Collections.unmodifiableList(this.tagModification_);
      }

      public final Data.ConversationMetadata.ConversationVisibility getVisibilityModification()
      {
        return this.visibilityModification_;
      }

      public final boolean hasConversationId()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean hasLocationModification()
      {
        if ((0x8 & this.bitField0_) == 8);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasStubbyInfo()
      {
        if ((0x10 & this.bitField0_) == 16);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasVisibilityModification()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Client.GlobalConversationPreferencesRequest paramGlobalConversationPreferencesRequest)
      {
        if (paramGlobalConversationPreferencesRequest == Client.GlobalConversationPreferencesRequest.getDefaultInstance());
        label84: Client.GlobalConversationPreferencesRequest.LocationModification localLocationModification;
        label136: 
        do
        {
          return this;
          if (paramGlobalConversationPreferencesRequest.hasConversationId())
            setConversationId(paramGlobalConversationPreferencesRequest.getConversationId());
          if (paramGlobalConversationPreferencesRequest.hasVisibilityModification())
            setVisibilityModification(paramGlobalConversationPreferencesRequest.getVisibilityModification());
          if (!paramGlobalConversationPreferencesRequest.tagModification_.isEmpty())
          {
            if (!this.tagModification_.isEmpty())
              break;
            this.tagModification_ = paramGlobalConversationPreferencesRequest.tagModification_;
            this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
          }
          if (paramGlobalConversationPreferencesRequest.hasLocationModification())
          {
            localLocationModification = paramGlobalConversationPreferencesRequest.getLocationModification();
            if (((0x8 & this.bitField0_) != 8) || (this.locationModification_ == Client.GlobalConversationPreferencesRequest.LocationModification.getDefaultInstance()))
              break label234;
            this.locationModification_ = Client.GlobalConversationPreferencesRequest.LocationModification.newBuilder(this.locationModification_).mergeFrom(localLocationModification).buildPartial();
            this.bitField0_ = (0x8 | this.bitField0_);
          }
        }
        while (!paramGlobalConversationPreferencesRequest.hasStubbyInfo());
        Data.StubbyInfo localStubbyInfo = paramGlobalConversationPreferencesRequest.getStubbyInfo();
        if (((0x10 & this.bitField0_) == 16) && (this.stubbyInfo_ != Data.StubbyInfo.getDefaultInstance()));
        for (this.stubbyInfo_ = Data.StubbyInfo.newBuilder(this.stubbyInfo_).mergeFrom(localStubbyInfo).buildPartial(); ; this.stubbyInfo_ = localStubbyInfo)
        {
          this.bitField0_ = (0x10 | this.bitField0_);
          break;
          ensureTagModificationIsMutable();
          this.tagModification_.addAll(paramGlobalConversationPreferencesRequest.tagModification_);
          break label84;
          label234: this.locationModification_ = localLocationModification;
          break label136;
        }
      }

      public final Builder setConversationId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x1 | this.bitField0_);
        this.conversationId_ = paramString;
        return this;
      }

      public final Builder setLocationModification(Client.GlobalConversationPreferencesRequest.LocationModification.Builder paramBuilder)
      {
        this.locationModification_ = paramBuilder.build();
        this.bitField0_ = (0x8 | this.bitField0_);
        return this;
      }

      public final Builder setLocationModification(Client.GlobalConversationPreferencesRequest.LocationModification paramLocationModification)
      {
        if (paramLocationModification == null)
          throw new NullPointerException();
        this.locationModification_ = paramLocationModification;
        this.bitField0_ = (0x8 | this.bitField0_);
        return this;
      }

      public final Builder setStubbyInfo(Data.StubbyInfo.Builder paramBuilder)
      {
        this.stubbyInfo_ = paramBuilder.build();
        this.bitField0_ = (0x10 | this.bitField0_);
        return this;
      }

      public final Builder setStubbyInfo(Data.StubbyInfo paramStubbyInfo)
      {
        if (paramStubbyInfo == null)
          throw new NullPointerException();
        this.stubbyInfo_ = paramStubbyInfo;
        this.bitField0_ = (0x10 | this.bitField0_);
        return this;
      }

      public final Builder setTagModification(int paramInt, Client.GlobalConversationPreferencesRequest.TagModification.Builder paramBuilder)
      {
        ensureTagModificationIsMutable();
        this.tagModification_.set(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder setTagModification(int paramInt, Client.GlobalConversationPreferencesRequest.TagModification paramTagModification)
      {
        if (paramTagModification == null)
          throw new NullPointerException();
        ensureTagModificationIsMutable();
        this.tagModification_.set(paramInt, paramTagModification);
        return this;
      }

      public final Builder setVisibilityModification(Data.ConversationMetadata.ConversationVisibility paramConversationVisibility)
      {
        if (paramConversationVisibility == null)
          throw new NullPointerException();
        this.bitField0_ = (0x2 | this.bitField0_);
        this.visibilityModification_ = paramConversationVisibility;
        return this;
      }
    }

    public static final class LocationModification extends GeneratedMessageLite
      implements Client.GlobalConversationPreferencesRequest.LocationModificationOrBuilder
    {
      private static final LocationModification defaultInstance;
      private static final long serialVersionUID;
      private int bitField0_;
      private Data.Location location_;
      private byte memoizedIsInitialized = -1;
      private int memoizedSerializedSize = -1;
      private Client.GlobalConversationPreferencesRequest.PreferencesModificationType type_;

      static
      {
        LocationModification localLocationModification = new LocationModification();
        defaultInstance = localLocationModification;
        localLocationModification.type_ = Client.GlobalConversationPreferencesRequest.PreferencesModificationType.ADD;
        localLocationModification.location_ = Data.Location.getDefaultInstance();
      }

      private LocationModification()
      {
      }

      private LocationModification(Builder paramBuilder)
      {
        super();
      }

      public static LocationModification getDefaultInstance()
      {
        return defaultInstance;
      }

      public static Builder newBuilder()
      {
        return Builder.access$29000();
      }

      public static Builder newBuilder(LocationModification paramLocationModification)
      {
        return Builder.access$29000().mergeFrom(paramLocationModification);
      }

      public final LocationModification getDefaultInstanceForType()
      {
        return defaultInstance;
      }

      public final Data.Location getLocation()
      {
        return this.location_;
      }

      public final int getSerializedSize()
      {
        int i = this.memoizedSerializedSize;
        if (i != -1);
        int k;
        for (int m = i; ; m = k)
        {
          return m;
          int j = 0x1 & this.bitField0_;
          k = 0;
          if (j == 1)
            k = 0 + CodedOutputStream.computeEnumSize(1, this.type_.getNumber());
          if ((0x2 & this.bitField0_) == 2)
            k += CodedOutputStream.computeMessageSize(2, this.location_);
          this.memoizedSerializedSize = k;
        }
      }

      public final Client.GlobalConversationPreferencesRequest.PreferencesModificationType getType()
      {
        return this.type_;
      }

      public final boolean hasLocation()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasType()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean isInitialized()
      {
        int i = 1;
        int j = this.memoizedIsInitialized;
        if (j != -1)
          if (j != i);
        while (true)
        {
          return i;
          i = 0;
          continue;
          this.memoizedIsInitialized = i;
        }
      }

      protected final Object writeReplace()
        throws ObjectStreamException
      {
        return super.writeReplace();
      }

      public final void writeTo(CodedOutputStream paramCodedOutputStream)
        throws IOException
      {
        getSerializedSize();
        if ((0x1 & this.bitField0_) == 1)
          paramCodedOutputStream.writeEnum(1, this.type_.getNumber());
        if ((0x2 & this.bitField0_) == 2)
          paramCodedOutputStream.writeMessage(2, this.location_);
      }

      public static final class Builder extends GeneratedMessageLite.Builder<Client.GlobalConversationPreferencesRequest.LocationModification, Builder>
        implements Client.GlobalConversationPreferencesRequest.LocationModificationOrBuilder
      {
        private int bitField0_;
        private Data.Location location_ = Data.Location.getDefaultInstance();
        private Client.GlobalConversationPreferencesRequest.PreferencesModificationType type_ = Client.GlobalConversationPreferencesRequest.PreferencesModificationType.ADD;

        private Builder clone()
        {
          return new Builder().mergeFrom(buildPartial());
        }

        private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
          throws IOException
        {
          while (true)
          {
            int i = paramCodedInputStream.readTag();
            switch (i)
            {
            default:
              if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
                continue;
            case 0:
              return this;
            case 8:
              Client.GlobalConversationPreferencesRequest.PreferencesModificationType localPreferencesModificationType = Client.GlobalConversationPreferencesRequest.PreferencesModificationType.valueOf(paramCodedInputStream.readEnum());
              if (localPreferencesModificationType == null)
                continue;
              this.bitField0_ = (0x1 | this.bitField0_);
              this.type_ = localPreferencesModificationType;
              break;
            case 18:
            }
            Data.Location.Builder localBuilder = Data.Location.newBuilder();
            if (hasLocation())
              localBuilder.mergeFrom(getLocation());
            paramCodedInputStream.readMessage(localBuilder, paramExtensionRegistryLite);
            setLocation(localBuilder.buildPartial());
          }
        }

        public final Client.GlobalConversationPreferencesRequest.LocationModification build()
        {
          Client.GlobalConversationPreferencesRequest.LocationModification localLocationModification = buildPartial();
          if (!localLocationModification.isInitialized())
            throw new UninitializedMessageException();
          return localLocationModification;
        }

        public final Client.GlobalConversationPreferencesRequest.LocationModification buildPartial()
        {
          Client.GlobalConversationPreferencesRequest.LocationModification localLocationModification = new Client.GlobalConversationPreferencesRequest.LocationModification(this, (byte)0);
          int i = this.bitField0_;
          int j = i & 0x1;
          int k = 0;
          if (j == 1)
            k = 1;
          Client.GlobalConversationPreferencesRequest.LocationModification.access$29202(localLocationModification, this.type_);
          if ((i & 0x2) == 2)
            k |= 2;
          Client.GlobalConversationPreferencesRequest.LocationModification.access$29302(localLocationModification, this.location_);
          Client.GlobalConversationPreferencesRequest.LocationModification.access$29402(localLocationModification, k);
          return localLocationModification;
        }

        public final Builder clear()
        {
          super.clear();
          this.type_ = Client.GlobalConversationPreferencesRequest.PreferencesModificationType.ADD;
          this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
          this.location_ = Data.Location.getDefaultInstance();
          this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
          return this;
        }

        public final Builder clearLocation()
        {
          this.location_ = Data.Location.getDefaultInstance();
          this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
          return this;
        }

        public final Builder clearType()
        {
          this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
          this.type_ = Client.GlobalConversationPreferencesRequest.PreferencesModificationType.ADD;
          return this;
        }

        public final Client.GlobalConversationPreferencesRequest.LocationModification getDefaultInstanceForType()
        {
          return Client.GlobalConversationPreferencesRequest.LocationModification.getDefaultInstance();
        }

        public final Data.Location getLocation()
        {
          return this.location_;
        }

        public final Client.GlobalConversationPreferencesRequest.PreferencesModificationType getType()
        {
          return this.type_;
        }

        public final boolean hasLocation()
        {
          if ((0x2 & this.bitField0_) == 2);
          for (boolean bool = true; ; bool = false)
            return bool;
        }

        public final boolean hasType()
        {
          int i = 1;
          if ((0x1 & this.bitField0_) == i);
          while (true)
          {
            return i;
            int j = 0;
          }
        }

        public final boolean isInitialized()
        {
          return true;
        }

        public final Builder mergeFrom(Client.GlobalConversationPreferencesRequest.LocationModification paramLocationModification)
        {
          if (paramLocationModification == Client.GlobalConversationPreferencesRequest.LocationModification.getDefaultInstance());
          do
          {
            return this;
            if (paramLocationModification.hasType())
              setType(paramLocationModification.getType());
          }
          while (!paramLocationModification.hasLocation());
          Data.Location localLocation = paramLocationModification.getLocation();
          if (((0x2 & this.bitField0_) == 2) && (this.location_ != Data.Location.getDefaultInstance()));
          for (this.location_ = Data.Location.newBuilder(this.location_).mergeFrom(localLocation).buildPartial(); ; this.location_ = localLocation)
          {
            this.bitField0_ = (0x2 | this.bitField0_);
            break;
          }
        }

        public final Builder setLocation(Data.Location.Builder paramBuilder)
        {
          this.location_ = paramBuilder.build();
          this.bitField0_ = (0x2 | this.bitField0_);
          return this;
        }

        public final Builder setLocation(Data.Location paramLocation)
        {
          if (paramLocation == null)
            throw new NullPointerException();
          this.location_ = paramLocation;
          this.bitField0_ = (0x2 | this.bitField0_);
          return this;
        }

        public final Builder setType(Client.GlobalConversationPreferencesRequest.PreferencesModificationType paramPreferencesModificationType)
        {
          if (paramPreferencesModificationType == null)
            throw new NullPointerException();
          this.bitField0_ = (0x1 | this.bitField0_);
          this.type_ = paramPreferencesModificationType;
          return this;
        }
      }
    }

    public static abstract interface LocationModificationOrBuilder extends MessageLiteOrBuilder
    {
      public abstract Data.Location getLocation();

      public abstract Client.GlobalConversationPreferencesRequest.PreferencesModificationType getType();

      public abstract boolean hasLocation();

      public abstract boolean hasType();
    }

    public static enum PreferencesModificationType
      implements Internal.EnumLite
    {
      private static Internal.EnumLiteMap<PreferencesModificationType> internalValueMap = new Internal.EnumLiteMap()
      {
      };
      private final int value;

      static
      {
        PreferencesModificationType[] arrayOfPreferencesModificationType = new PreferencesModificationType[2];
        arrayOfPreferencesModificationType[0] = ADD;
        arrayOfPreferencesModificationType[1] = REMOVE;
      }

      private PreferencesModificationType(int paramInt1, int paramInt2)
      {
        this.value = paramInt1;
      }

      public static PreferencesModificationType valueOf(int paramInt)
      {
        PreferencesModificationType localPreferencesModificationType;
        switch (paramInt)
        {
        default:
          localPreferencesModificationType = null;
        case 1:
        case 2:
        }
        while (true)
        {
          return localPreferencesModificationType;
          localPreferencesModificationType = ADD;
          continue;
          localPreferencesModificationType = REMOVE;
        }
      }

      public final int getNumber()
      {
        return this.value;
      }
    }

    public static final class TagModification extends GeneratedMessageLite
      implements Client.GlobalConversationPreferencesRequest.TagModificationOrBuilder
    {
      private static final TagModification defaultInstance;
      private static final long serialVersionUID;
      private int bitField0_;
      private byte memoizedIsInitialized = -1;
      private int memoizedSerializedSize = -1;
      private Object tag_;
      private Client.GlobalConversationPreferencesRequest.PreferencesModificationType type_;

      static
      {
        TagModification localTagModification = new TagModification();
        defaultInstance = localTagModification;
        localTagModification.type_ = Client.GlobalConversationPreferencesRequest.PreferencesModificationType.ADD;
        localTagModification.tag_ = "";
      }

      private TagModification()
      {
      }

      private TagModification(Builder paramBuilder)
      {
        super();
      }

      public static TagModification getDefaultInstance()
      {
        return defaultInstance;
      }

      private ByteString getTagBytes()
      {
        Object localObject = this.tag_;
        ByteString localByteString;
        if ((localObject instanceof String))
        {
          localByteString = ByteString.copyFromUtf8((String)localObject);
          this.tag_ = localByteString;
        }
        while (true)
        {
          return localByteString;
          localByteString = (ByteString)localObject;
        }
      }

      public static Builder newBuilder()
      {
        return Builder.access$28400();
      }

      public final TagModification getDefaultInstanceForType()
      {
        return defaultInstance;
      }

      public final int getSerializedSize()
      {
        int i = this.memoizedSerializedSize;
        if (i != -1);
        int k;
        for (int m = i; ; m = k)
        {
          return m;
          int j = 0x1 & this.bitField0_;
          k = 0;
          if (j == 1)
            k = 0 + CodedOutputStream.computeEnumSize(1, this.type_.getNumber());
          if ((0x2 & this.bitField0_) == 2)
            k += CodedOutputStream.computeBytesSize(2, getTagBytes());
          this.memoizedSerializedSize = k;
        }
      }

      public final String getTag()
      {
        Object localObject1 = this.tag_;
        if ((localObject1 instanceof String));
        String str;
        for (Object localObject2 = (String)localObject1; ; localObject2 = str)
        {
          return localObject2;
          ByteString localByteString = (ByteString)localObject1;
          str = localByteString.toStringUtf8();
          if (Internal.isValidUtf8(localByteString))
            this.tag_ = str;
        }
      }

      public final Client.GlobalConversationPreferencesRequest.PreferencesModificationType getType()
      {
        return this.type_;
      }

      public final boolean hasTag()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasType()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean isInitialized()
      {
        int i = 1;
        int j = this.memoizedIsInitialized;
        if (j != -1)
          if (j != i);
        while (true)
        {
          return i;
          i = 0;
          continue;
          this.memoizedIsInitialized = i;
        }
      }

      protected final Object writeReplace()
        throws ObjectStreamException
      {
        return super.writeReplace();
      }

      public final void writeTo(CodedOutputStream paramCodedOutputStream)
        throws IOException
      {
        getSerializedSize();
        if ((0x1 & this.bitField0_) == 1)
          paramCodedOutputStream.writeEnum(1, this.type_.getNumber());
        if ((0x2 & this.bitField0_) == 2)
          paramCodedOutputStream.writeBytes(2, getTagBytes());
      }

      public static final class Builder extends GeneratedMessageLite.Builder<Client.GlobalConversationPreferencesRequest.TagModification, Builder>
        implements Client.GlobalConversationPreferencesRequest.TagModificationOrBuilder
      {
        private int bitField0_;
        private Object tag_ = "";
        private Client.GlobalConversationPreferencesRequest.PreferencesModificationType type_ = Client.GlobalConversationPreferencesRequest.PreferencesModificationType.ADD;

        private Builder clone()
        {
          return new Builder().mergeFrom(buildPartial());
        }

        private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
          throws IOException
        {
          while (true)
          {
            int i = paramCodedInputStream.readTag();
            switch (i)
            {
            default:
              if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
                continue;
            case 0:
              return this;
            case 8:
              Client.GlobalConversationPreferencesRequest.PreferencesModificationType localPreferencesModificationType = Client.GlobalConversationPreferencesRequest.PreferencesModificationType.valueOf(paramCodedInputStream.readEnum());
              if (localPreferencesModificationType == null)
                continue;
              this.bitField0_ = (0x1 | this.bitField0_);
              this.type_ = localPreferencesModificationType;
              break;
            case 18:
            }
            this.bitField0_ = (0x2 | this.bitField0_);
            this.tag_ = paramCodedInputStream.readBytes();
          }
        }

        public final Client.GlobalConversationPreferencesRequest.TagModification build()
        {
          Client.GlobalConversationPreferencesRequest.TagModification localTagModification = buildPartial();
          if (!localTagModification.isInitialized())
            throw new UninitializedMessageException();
          return localTagModification;
        }

        public final Client.GlobalConversationPreferencesRequest.TagModification buildPartial()
        {
          Client.GlobalConversationPreferencesRequest.TagModification localTagModification = new Client.GlobalConversationPreferencesRequest.TagModification(this, (byte)0);
          int i = this.bitField0_;
          int j = i & 0x1;
          int k = 0;
          if (j == 1)
            k = 1;
          Client.GlobalConversationPreferencesRequest.TagModification.access$28602(localTagModification, this.type_);
          if ((i & 0x2) == 2)
            k |= 2;
          Client.GlobalConversationPreferencesRequest.TagModification.access$28702(localTagModification, this.tag_);
          Client.GlobalConversationPreferencesRequest.TagModification.access$28802(localTagModification, k);
          return localTagModification;
        }

        public final Builder clear()
        {
          super.clear();
          this.type_ = Client.GlobalConversationPreferencesRequest.PreferencesModificationType.ADD;
          this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
          this.tag_ = "";
          this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
          return this;
        }

        public final Builder clearTag()
        {
          this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
          this.tag_ = Client.GlobalConversationPreferencesRequest.TagModification.getDefaultInstance().getTag();
          return this;
        }

        public final Builder clearType()
        {
          this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
          this.type_ = Client.GlobalConversationPreferencesRequest.PreferencesModificationType.ADD;
          return this;
        }

        public final Client.GlobalConversationPreferencesRequest.TagModification getDefaultInstanceForType()
        {
          return Client.GlobalConversationPreferencesRequest.TagModification.getDefaultInstance();
        }

        public final String getTag()
        {
          Object localObject = this.tag_;
          String str;
          if (!(localObject instanceof String))
          {
            str = ((ByteString)localObject).toStringUtf8();
            this.tag_ = str;
          }
          while (true)
          {
            return str;
            str = (String)localObject;
          }
        }

        public final Client.GlobalConversationPreferencesRequest.PreferencesModificationType getType()
        {
          return this.type_;
        }

        public final boolean hasTag()
        {
          if ((0x2 & this.bitField0_) == 2);
          for (boolean bool = true; ; bool = false)
            return bool;
        }

        public final boolean hasType()
        {
          int i = 1;
          if ((0x1 & this.bitField0_) == i);
          while (true)
          {
            return i;
            int j = 0;
          }
        }

        public final boolean isInitialized()
        {
          return true;
        }

        public final Builder mergeFrom(Client.GlobalConversationPreferencesRequest.TagModification paramTagModification)
        {
          if (paramTagModification == Client.GlobalConversationPreferencesRequest.TagModification.getDefaultInstance());
          while (true)
          {
            return this;
            if (paramTagModification.hasType())
              setType(paramTagModification.getType());
            if (paramTagModification.hasTag())
              setTag(paramTagModification.getTag());
          }
        }

        public final Builder setTag(String paramString)
        {
          if (paramString == null)
            throw new NullPointerException();
          this.bitField0_ = (0x2 | this.bitField0_);
          this.tag_ = paramString;
          return this;
        }

        public final Builder setType(Client.GlobalConversationPreferencesRequest.PreferencesModificationType paramPreferencesModificationType)
        {
          if (paramPreferencesModificationType == null)
            throw new NullPointerException();
          this.bitField0_ = (0x1 | this.bitField0_);
          this.type_ = paramPreferencesModificationType;
          return this;
        }
      }
    }

    public static abstract interface TagModificationOrBuilder extends MessageLiteOrBuilder
    {
      public abstract String getTag();

      public abstract Client.GlobalConversationPreferencesRequest.PreferencesModificationType getType();

      public abstract boolean hasTag();

      public abstract boolean hasType();
    }
  }

  public static abstract interface GlobalConversationPreferencesRequestOrBuilder extends MessageLiteOrBuilder
  {
    public abstract String getConversationId();

    public abstract Client.GlobalConversationPreferencesRequest.LocationModification getLocationModification();

    public abstract Data.StubbyInfo getStubbyInfo();

    public abstract Client.GlobalConversationPreferencesRequest.TagModification getTagModification(int paramInt);

    public abstract int getTagModificationCount();

    public abstract List<Client.GlobalConversationPreferencesRequest.TagModification> getTagModificationList();

    public abstract Data.ConversationMetadata.ConversationVisibility getVisibilityModification();

    public abstract boolean hasConversationId();

    public abstract boolean hasLocationModification();

    public abstract boolean hasStubbyInfo();

    public abstract boolean hasVisibilityModification();
  }

  public static final class GlobalConversationPreferencesResponse extends GeneratedMessageLite
    implements Client.GlobalConversationPreferencesResponseOrBuilder
  {
    private static final GlobalConversationPreferencesResponse defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private Object conversationId_;
    private Data.ConversationMetadata conversationMetadata_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private Data.ResponseStatus status_;

    static
    {
      GlobalConversationPreferencesResponse localGlobalConversationPreferencesResponse = new GlobalConversationPreferencesResponse();
      defaultInstance = localGlobalConversationPreferencesResponse;
      localGlobalConversationPreferencesResponse.status_ = Data.ResponseStatus.OK;
      localGlobalConversationPreferencesResponse.conversationId_ = "";
      localGlobalConversationPreferencesResponse.conversationMetadata_ = Data.ConversationMetadata.getDefaultInstance();
    }

    private GlobalConversationPreferencesResponse()
    {
    }

    private GlobalConversationPreferencesResponse(Builder paramBuilder)
    {
      super();
    }

    private ByteString getConversationIdBytes()
    {
      Object localObject = this.conversationId_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.conversationId_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static GlobalConversationPreferencesResponse getDefaultInstance()
    {
      return defaultInstance;
    }

    public static Builder newBuilder()
    {
      return Builder.access$30500();
    }

    public static Builder newBuilder(GlobalConversationPreferencesResponse paramGlobalConversationPreferencesResponse)
    {
      return Builder.access$30500().mergeFrom(paramGlobalConversationPreferencesResponse);
    }

    public final String getConversationId()
    {
      Object localObject1 = this.conversationId_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.conversationId_ = str;
      }
    }

    public final Data.ConversationMetadata getConversationMetadata()
    {
      return this.conversationMetadata_;
    }

    public final GlobalConversationPreferencesResponse getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeEnumSize(1, this.status_.getNumber());
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeBytesSize(2, getConversationIdBytes());
        if ((0x4 & this.bitField0_) == 4)
          k += CodedOutputStream.computeMessageSize(3, this.conversationMetadata_);
        this.memoizedSerializedSize = k;
      }
    }

    public final Data.ResponseStatus getStatus()
    {
      return this.status_;
    }

    public final boolean hasConversationId()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasConversationMetadata()
    {
      if ((0x4 & this.bitField0_) == 4);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasStatus()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeEnum(1, this.status_.getNumber());
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeBytes(2, getConversationIdBytes());
      if ((0x4 & this.bitField0_) == 4)
        paramCodedOutputStream.writeMessage(3, this.conversationMetadata_);
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Client.GlobalConversationPreferencesResponse, Builder>
      implements Client.GlobalConversationPreferencesResponseOrBuilder
    {
      private int bitField0_;
      private Object conversationId_ = "";
      private Data.ConversationMetadata conversationMetadata_ = Data.ConversationMetadata.getDefaultInstance();
      private Data.ResponseStatus status_ = Data.ResponseStatus.OK;

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 8:
            Data.ResponseStatus localResponseStatus = Data.ResponseStatus.valueOf(paramCodedInputStream.readEnum());
            if (localResponseStatus == null)
              continue;
            this.bitField0_ = (0x1 | this.bitField0_);
            this.status_ = localResponseStatus;
            break;
          case 18:
            this.bitField0_ = (0x2 | this.bitField0_);
            this.conversationId_ = paramCodedInputStream.readBytes();
            break;
          case 26:
          }
          Data.ConversationMetadata.Builder localBuilder = Data.ConversationMetadata.newBuilder();
          if (hasConversationMetadata())
            localBuilder.mergeFrom(getConversationMetadata());
          paramCodedInputStream.readMessage(localBuilder, paramExtensionRegistryLite);
          setConversationMetadata(localBuilder.buildPartial());
        }
      }

      public final Client.GlobalConversationPreferencesResponse build()
      {
        Client.GlobalConversationPreferencesResponse localGlobalConversationPreferencesResponse = buildPartial();
        if (!localGlobalConversationPreferencesResponse.isInitialized())
          throw new UninitializedMessageException();
        return localGlobalConversationPreferencesResponse;
      }

      public final Client.GlobalConversationPreferencesResponse buildPartial()
      {
        Client.GlobalConversationPreferencesResponse localGlobalConversationPreferencesResponse = new Client.GlobalConversationPreferencesResponse(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Client.GlobalConversationPreferencesResponse.access$30702(localGlobalConversationPreferencesResponse, this.status_);
        if ((i & 0x2) == 2)
          k |= 2;
        Client.GlobalConversationPreferencesResponse.access$30802(localGlobalConversationPreferencesResponse, this.conversationId_);
        if ((i & 0x4) == 4)
          k |= 4;
        Client.GlobalConversationPreferencesResponse.access$30902(localGlobalConversationPreferencesResponse, this.conversationMetadata_);
        Client.GlobalConversationPreferencesResponse.access$31002(localGlobalConversationPreferencesResponse, k);
        return localGlobalConversationPreferencesResponse;
      }

      public final Builder clear()
      {
        super.clear();
        this.status_ = Data.ResponseStatus.OK;
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.conversationId_ = "";
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.conversationMetadata_ = Data.ConversationMetadata.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        return this;
      }

      public final Builder clearConversationId()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.conversationId_ = Client.GlobalConversationPreferencesResponse.getDefaultInstance().getConversationId();
        return this;
      }

      public final Builder clearConversationMetadata()
      {
        this.conversationMetadata_ = Data.ConversationMetadata.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        return this;
      }

      public final Builder clearStatus()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.status_ = Data.ResponseStatus.OK;
        return this;
      }

      public final String getConversationId()
      {
        Object localObject = this.conversationId_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.conversationId_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final Data.ConversationMetadata getConversationMetadata()
      {
        return this.conversationMetadata_;
      }

      public final Client.GlobalConversationPreferencesResponse getDefaultInstanceForType()
      {
        return Client.GlobalConversationPreferencesResponse.getDefaultInstance();
      }

      public final Data.ResponseStatus getStatus()
      {
        return this.status_;
      }

      public final boolean hasConversationId()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasConversationMetadata()
      {
        if ((0x4 & this.bitField0_) == 4);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasStatus()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Client.GlobalConversationPreferencesResponse paramGlobalConversationPreferencesResponse)
      {
        if (paramGlobalConversationPreferencesResponse == Client.GlobalConversationPreferencesResponse.getDefaultInstance());
        do
        {
          return this;
          if (paramGlobalConversationPreferencesResponse.hasStatus())
            setStatus(paramGlobalConversationPreferencesResponse.getStatus());
          if (paramGlobalConversationPreferencesResponse.hasConversationId())
            setConversationId(paramGlobalConversationPreferencesResponse.getConversationId());
        }
        while (!paramGlobalConversationPreferencesResponse.hasConversationMetadata());
        Data.ConversationMetadata localConversationMetadata = paramGlobalConversationPreferencesResponse.getConversationMetadata();
        if (((0x4 & this.bitField0_) == 4) && (this.conversationMetadata_ != Data.ConversationMetadata.getDefaultInstance()));
        for (this.conversationMetadata_ = Data.ConversationMetadata.newBuilder(this.conversationMetadata_).mergeFrom(localConversationMetadata).buildPartial(); ; this.conversationMetadata_ = localConversationMetadata)
        {
          this.bitField0_ = (0x4 | this.bitField0_);
          break;
        }
      }

      public final Builder setConversationId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x2 | this.bitField0_);
        this.conversationId_ = paramString;
        return this;
      }

      public final Builder setConversationMetadata(Data.ConversationMetadata.Builder paramBuilder)
      {
        this.conversationMetadata_ = paramBuilder.build();
        this.bitField0_ = (0x4 | this.bitField0_);
        return this;
      }

      public final Builder setConversationMetadata(Data.ConversationMetadata paramConversationMetadata)
      {
        if (paramConversationMetadata == null)
          throw new NullPointerException();
        this.conversationMetadata_ = paramConversationMetadata;
        this.bitField0_ = (0x4 | this.bitField0_);
        return this;
      }

      public final Builder setStatus(Data.ResponseStatus paramResponseStatus)
      {
        if (paramResponseStatus == null)
          throw new NullPointerException();
        this.bitField0_ = (0x1 | this.bitField0_);
        this.status_ = paramResponseStatus;
        return this;
      }
    }
  }

  public static abstract interface GlobalConversationPreferencesResponseOrBuilder extends MessageLiteOrBuilder
  {
    public abstract String getConversationId();

    public abstract Data.ConversationMetadata getConversationMetadata();

    public abstract Data.ResponseStatus getStatus();

    public abstract boolean hasConversationId();

    public abstract boolean hasConversationMetadata();

    public abstract boolean hasStatus();
  }

  public static final class GroupConversationRename extends GeneratedMessageLite
    implements Client.GroupConversationRenameOrBuilder
  {
    private static final GroupConversationRename defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private Object conversationId_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private Object newDisplayName_;
    private LazyStringList recipientId_;
    private Object senderId_;
    private long timestamp_;

    static
    {
      GroupConversationRename localGroupConversationRename = new GroupConversationRename();
      defaultInstance = localGroupConversationRename;
      localGroupConversationRename.conversationId_ = "";
      localGroupConversationRename.senderId_ = "";
      localGroupConversationRename.newDisplayName_ = "";
      localGroupConversationRename.recipientId_ = LazyStringArrayList.EMPTY;
      localGroupConversationRename.timestamp_ = 0L;
    }

    private GroupConversationRename()
    {
    }

    private GroupConversationRename(Builder paramBuilder)
    {
      super();
    }

    private ByteString getConversationIdBytes()
    {
      Object localObject = this.conversationId_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.conversationId_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static GroupConversationRename getDefaultInstance()
    {
      return defaultInstance;
    }

    private ByteString getNewDisplayNameBytes()
    {
      Object localObject = this.newDisplayName_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.newDisplayName_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    private ByteString getSenderIdBytes()
    {
      Object localObject = this.senderId_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.senderId_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static Builder newBuilder()
    {
      return Builder.access$18800();
    }

    public static Builder newBuilder(GroupConversationRename paramGroupConversationRename)
    {
      return Builder.access$18800().mergeFrom(paramGroupConversationRename);
    }

    public final String getConversationId()
    {
      Object localObject1 = this.conversationId_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.conversationId_ = str;
      }
    }

    public final GroupConversationRename getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final String getNewDisplayName()
    {
      Object localObject1 = this.newDisplayName_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.newDisplayName_ = str;
      }
    }

    public final String getRecipientId(int paramInt)
    {
      return (String)this.recipientId_.get(paramInt);
    }

    public final int getRecipientIdCount()
    {
      return this.recipientId_.size();
    }

    public final List<String> getRecipientIdList()
    {
      return this.recipientId_;
    }

    public final String getSenderId()
    {
      Object localObject1 = this.senderId_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.senderId_ = str;
      }
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int i1;
      for (int i2 = i; ; i2 = i1)
      {
        return i2;
        int j = 0x1 & this.bitField0_;
        int k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeBytesSize(1, getConversationIdBytes());
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeBytesSize(2, getSenderIdBytes());
        if ((0x4 & this.bitField0_) == 4)
          k += CodedOutputStream.computeBytesSize(3, getNewDisplayNameBytes());
        int m = 0;
        for (int n = 0; n < this.recipientId_.size(); n++)
          m += CodedOutputStream.computeBytesSizeNoTag(this.recipientId_.getByteString(n));
        i1 = k + m + 1 * getRecipientIdList().size();
        if ((0x8 & this.bitField0_) == 8)
          i1 += CodedOutputStream.computeInt64Size(5, this.timestamp_);
        this.memoizedSerializedSize = i1;
      }
    }

    public final long getTimestamp()
    {
      return this.timestamp_;
    }

    public final boolean hasConversationId()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean hasNewDisplayName()
    {
      if ((0x4 & this.bitField0_) == 4);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasSenderId()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasTimestamp()
    {
      if ((0x8 & this.bitField0_) == 8);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeBytes(1, getConversationIdBytes());
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeBytes(2, getSenderIdBytes());
      if ((0x4 & this.bitField0_) == 4)
        paramCodedOutputStream.writeBytes(3, getNewDisplayNameBytes());
      for (int i = 0; i < this.recipientId_.size(); i++)
        paramCodedOutputStream.writeBytes(4, this.recipientId_.getByteString(i));
      if ((0x8 & this.bitField0_) == 8)
        paramCodedOutputStream.writeInt64(5, this.timestamp_);
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Client.GroupConversationRename, Builder>
      implements Client.GroupConversationRenameOrBuilder
    {
      private int bitField0_;
      private Object conversationId_ = "";
      private Object newDisplayName_ = "";
      private LazyStringList recipientId_ = LazyStringArrayList.EMPTY;
      private Object senderId_ = "";
      private long timestamp_;

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private void ensureRecipientIdIsMutable()
      {
        if ((0x8 & this.bitField0_) != 8)
        {
          this.recipientId_ = new LazyStringArrayList(this.recipientId_);
          this.bitField0_ = (0x8 | this.bitField0_);
        }
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 10:
            this.bitField0_ = (0x1 | this.bitField0_);
            this.conversationId_ = paramCodedInputStream.readBytes();
            break;
          case 18:
            this.bitField0_ = (0x2 | this.bitField0_);
            this.senderId_ = paramCodedInputStream.readBytes();
            break;
          case 26:
            this.bitField0_ = (0x4 | this.bitField0_);
            this.newDisplayName_ = paramCodedInputStream.readBytes();
            break;
          case 34:
            ensureRecipientIdIsMutable();
            this.recipientId_.add(paramCodedInputStream.readBytes());
            break;
          case 40:
          }
          this.bitField0_ = (0x10 | this.bitField0_);
          this.timestamp_ = paramCodedInputStream.readInt64();
        }
      }

      public final Builder addAllRecipientId(Iterable<String> paramIterable)
      {
        ensureRecipientIdIsMutable();
        GeneratedMessageLite.Builder.addAll(paramIterable, this.recipientId_);
        return this;
      }

      public final Builder addRecipientId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        ensureRecipientIdIsMutable();
        this.recipientId_.add(paramString);
        return this;
      }

      public final Client.GroupConversationRename build()
      {
        Client.GroupConversationRename localGroupConversationRename = buildPartial();
        if (!localGroupConversationRename.isInitialized())
          throw new UninitializedMessageException();
        return localGroupConversationRename;
      }

      public final Client.GroupConversationRename buildPartial()
      {
        Client.GroupConversationRename localGroupConversationRename = new Client.GroupConversationRename(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Client.GroupConversationRename.access$19002(localGroupConversationRename, this.conversationId_);
        if ((i & 0x2) == 2)
          k |= 2;
        Client.GroupConversationRename.access$19102(localGroupConversationRename, this.senderId_);
        if ((i & 0x4) == 4)
          k |= 4;
        Client.GroupConversationRename.access$19202(localGroupConversationRename, this.newDisplayName_);
        if ((0x8 & this.bitField0_) == 8)
        {
          this.recipientId_ = new UnmodifiableLazyStringList(this.recipientId_);
          this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        }
        Client.GroupConversationRename.access$19302(localGroupConversationRename, this.recipientId_);
        if ((i & 0x10) == 16)
          k |= 8;
        Client.GroupConversationRename.access$19402(localGroupConversationRename, this.timestamp_);
        Client.GroupConversationRename.access$19502(localGroupConversationRename, k);
        return localGroupConversationRename;
      }

      public final Builder clear()
      {
        super.clear();
        this.conversationId_ = "";
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.senderId_ = "";
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.newDisplayName_ = "";
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.recipientId_ = LazyStringArrayList.EMPTY;
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        this.timestamp_ = 0L;
        this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        return this;
      }

      public final Builder clearConversationId()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.conversationId_ = Client.GroupConversationRename.getDefaultInstance().getConversationId();
        return this;
      }

      public final Builder clearNewDisplayName()
      {
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.newDisplayName_ = Client.GroupConversationRename.getDefaultInstance().getNewDisplayName();
        return this;
      }

      public final Builder clearRecipientId()
      {
        this.recipientId_ = LazyStringArrayList.EMPTY;
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        return this;
      }

      public final Builder clearSenderId()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.senderId_ = Client.GroupConversationRename.getDefaultInstance().getSenderId();
        return this;
      }

      public final Builder clearTimestamp()
      {
        this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        this.timestamp_ = 0L;
        return this;
      }

      public final String getConversationId()
      {
        Object localObject = this.conversationId_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.conversationId_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final Client.GroupConversationRename getDefaultInstanceForType()
      {
        return Client.GroupConversationRename.getDefaultInstance();
      }

      public final String getNewDisplayName()
      {
        Object localObject = this.newDisplayName_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.newDisplayName_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final String getRecipientId(int paramInt)
      {
        return (String)this.recipientId_.get(paramInt);
      }

      public final int getRecipientIdCount()
      {
        return this.recipientId_.size();
      }

      public final List<String> getRecipientIdList()
      {
        return Collections.unmodifiableList(this.recipientId_);
      }

      public final String getSenderId()
      {
        Object localObject = this.senderId_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.senderId_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final long getTimestamp()
      {
        return this.timestamp_;
      }

      public final boolean hasConversationId()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean hasNewDisplayName()
      {
        if ((0x4 & this.bitField0_) == 4);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasSenderId()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasTimestamp()
      {
        if ((0x10 & this.bitField0_) == 16);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Client.GroupConversationRename paramGroupConversationRename)
      {
        if (paramGroupConversationRename == Client.GroupConversationRename.getDefaultInstance());
        label138: 
        while (true)
        {
          return this;
          if (paramGroupConversationRename.hasConversationId())
            setConversationId(paramGroupConversationRename.getConversationId());
          if (paramGroupConversationRename.hasSenderId())
            setSenderId(paramGroupConversationRename.getSenderId());
          if (paramGroupConversationRename.hasNewDisplayName())
            setNewDisplayName(paramGroupConversationRename.getNewDisplayName());
          if (!paramGroupConversationRename.recipientId_.isEmpty())
          {
            if (!this.recipientId_.isEmpty())
              break label119;
            this.recipientId_ = paramGroupConversationRename.recipientId_;
            this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
          }
          while (true)
          {
            if (!paramGroupConversationRename.hasTimestamp())
              break label138;
            setTimestamp(paramGroupConversationRename.getTimestamp());
            break;
            label119: ensureRecipientIdIsMutable();
            this.recipientId_.addAll(paramGroupConversationRename.recipientId_);
          }
        }
      }

      public final Builder setConversationId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x1 | this.bitField0_);
        this.conversationId_ = paramString;
        return this;
      }

      public final Builder setNewDisplayName(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x4 | this.bitField0_);
        this.newDisplayName_ = paramString;
        return this;
      }

      public final Builder setRecipientId(int paramInt, String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        ensureRecipientIdIsMutable();
        this.recipientId_.set(paramInt, paramString);
        return this;
      }

      public final Builder setSenderId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x2 | this.bitField0_);
        this.senderId_ = paramString;
        return this;
      }

      public final Builder setTimestamp(long paramLong)
      {
        this.bitField0_ = (0x10 | this.bitField0_);
        this.timestamp_ = paramLong;
        return this;
      }
    }
  }

  public static abstract interface GroupConversationRenameOrBuilder extends MessageLiteOrBuilder
  {
    public abstract String getConversationId();

    public abstract String getNewDisplayName();

    public abstract String getRecipientId(int paramInt);

    public abstract int getRecipientIdCount();

    public abstract List<String> getRecipientIdList();

    public abstract String getSenderId();

    public abstract long getTimestamp();

    public abstract boolean hasConversationId();

    public abstract boolean hasNewDisplayName();

    public abstract boolean hasSenderId();

    public abstract boolean hasTimestamp();
  }

  public static final class HangoutInviteFinishRequest extends GeneratedMessageLite
    implements Client.HangoutInviteFinishRequestOrBuilder
  {
    private static final HangoutInviteFinishRequest defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private Object inviteId_;
    private InviteStatus inviteStatus_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private Data.StubbyInfo stubbyInfo_;

    static
    {
      HangoutInviteFinishRequest localHangoutInviteFinishRequest = new HangoutInviteFinishRequest();
      defaultInstance = localHangoutInviteFinishRequest;
      localHangoutInviteFinishRequest.inviteId_ = "";
      localHangoutInviteFinishRequest.inviteStatus_ = InviteStatus.UNKNOWN;
      localHangoutInviteFinishRequest.stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
    }

    private HangoutInviteFinishRequest()
    {
    }

    private HangoutInviteFinishRequest(Builder paramBuilder)
    {
      super();
    }

    public static HangoutInviteFinishRequest getDefaultInstance()
    {
      return defaultInstance;
    }

    private ByteString getInviteIdBytes()
    {
      Object localObject = this.inviteId_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.inviteId_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static Builder newBuilder()
    {
      return Builder.access$63000();
    }

    public static Builder newBuilder(HangoutInviteFinishRequest paramHangoutInviteFinishRequest)
    {
      return Builder.access$63000().mergeFrom(paramHangoutInviteFinishRequest);
    }

    public final HangoutInviteFinishRequest getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final String getInviteId()
    {
      Object localObject1 = this.inviteId_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.inviteId_ = str;
      }
    }

    public final InviteStatus getInviteStatus()
    {
      return this.inviteStatus_;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeBytesSize(1, getInviteIdBytes());
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeEnumSize(2, this.inviteStatus_.getNumber());
        if ((0x4 & this.bitField0_) == 4)
          k += CodedOutputStream.computeMessageSize(3, this.stubbyInfo_);
        this.memoizedSerializedSize = k;
      }
    }

    public final Data.StubbyInfo getStubbyInfo()
    {
      return this.stubbyInfo_;
    }

    public final boolean hasInviteId()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean hasInviteStatus()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasStubbyInfo()
    {
      if ((0x4 & this.bitField0_) == 4);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeBytes(1, getInviteIdBytes());
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeEnum(2, this.inviteStatus_.getNumber());
      if ((0x4 & this.bitField0_) == 4)
        paramCodedOutputStream.writeMessage(3, this.stubbyInfo_);
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Client.HangoutInviteFinishRequest, Builder>
      implements Client.HangoutInviteFinishRequestOrBuilder
    {
      private int bitField0_;
      private Object inviteId_ = "";
      private Client.HangoutInviteFinishRequest.InviteStatus inviteStatus_ = Client.HangoutInviteFinishRequest.InviteStatus.UNKNOWN;
      private Data.StubbyInfo stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 10:
            this.bitField0_ = (0x1 | this.bitField0_);
            this.inviteId_ = paramCodedInputStream.readBytes();
            break;
          case 16:
            Client.HangoutInviteFinishRequest.InviteStatus localInviteStatus = Client.HangoutInviteFinishRequest.InviteStatus.valueOf(paramCodedInputStream.readEnum());
            if (localInviteStatus == null)
              continue;
            this.bitField0_ = (0x2 | this.bitField0_);
            this.inviteStatus_ = localInviteStatus;
            break;
          case 26:
          }
          Data.StubbyInfo.Builder localBuilder = Data.StubbyInfo.newBuilder();
          if (hasStubbyInfo())
            localBuilder.mergeFrom(getStubbyInfo());
          paramCodedInputStream.readMessage(localBuilder, paramExtensionRegistryLite);
          setStubbyInfo(localBuilder.buildPartial());
        }
      }

      public final Client.HangoutInviteFinishRequest build()
      {
        Client.HangoutInviteFinishRequest localHangoutInviteFinishRequest = buildPartial();
        if (!localHangoutInviteFinishRequest.isInitialized())
          throw new UninitializedMessageException();
        return localHangoutInviteFinishRequest;
      }

      public final Client.HangoutInviteFinishRequest buildPartial()
      {
        Client.HangoutInviteFinishRequest localHangoutInviteFinishRequest = new Client.HangoutInviteFinishRequest(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Client.HangoutInviteFinishRequest.access$63202(localHangoutInviteFinishRequest, this.inviteId_);
        if ((i & 0x2) == 2)
          k |= 2;
        Client.HangoutInviteFinishRequest.access$63302(localHangoutInviteFinishRequest, this.inviteStatus_);
        if ((i & 0x4) == 4)
          k |= 4;
        Client.HangoutInviteFinishRequest.access$63402(localHangoutInviteFinishRequest, this.stubbyInfo_);
        Client.HangoutInviteFinishRequest.access$63502(localHangoutInviteFinishRequest, k);
        return localHangoutInviteFinishRequest;
      }

      public final Builder clear()
      {
        super.clear();
        this.inviteId_ = "";
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.inviteStatus_ = Client.HangoutInviteFinishRequest.InviteStatus.UNKNOWN;
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        return this;
      }

      public final Builder clearInviteId()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.inviteId_ = Client.HangoutInviteFinishRequest.getDefaultInstance().getInviteId();
        return this;
      }

      public final Builder clearInviteStatus()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.inviteStatus_ = Client.HangoutInviteFinishRequest.InviteStatus.UNKNOWN;
        return this;
      }

      public final Builder clearStubbyInfo()
      {
        this.stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        return this;
      }

      public final Client.HangoutInviteFinishRequest getDefaultInstanceForType()
      {
        return Client.HangoutInviteFinishRequest.getDefaultInstance();
      }

      public final String getInviteId()
      {
        Object localObject = this.inviteId_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.inviteId_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final Client.HangoutInviteFinishRequest.InviteStatus getInviteStatus()
      {
        return this.inviteStatus_;
      }

      public final Data.StubbyInfo getStubbyInfo()
      {
        return this.stubbyInfo_;
      }

      public final boolean hasInviteId()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean hasInviteStatus()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasStubbyInfo()
      {
        if ((0x4 & this.bitField0_) == 4);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Client.HangoutInviteFinishRequest paramHangoutInviteFinishRequest)
      {
        if (paramHangoutInviteFinishRequest == Client.HangoutInviteFinishRequest.getDefaultInstance());
        do
        {
          return this;
          if (paramHangoutInviteFinishRequest.hasInviteId())
            setInviteId(paramHangoutInviteFinishRequest.getInviteId());
          if (paramHangoutInviteFinishRequest.hasInviteStatus())
            setInviteStatus(paramHangoutInviteFinishRequest.getInviteStatus());
        }
        while (!paramHangoutInviteFinishRequest.hasStubbyInfo());
        Data.StubbyInfo localStubbyInfo = paramHangoutInviteFinishRequest.getStubbyInfo();
        if (((0x4 & this.bitField0_) == 4) && (this.stubbyInfo_ != Data.StubbyInfo.getDefaultInstance()));
        for (this.stubbyInfo_ = Data.StubbyInfo.newBuilder(this.stubbyInfo_).mergeFrom(localStubbyInfo).buildPartial(); ; this.stubbyInfo_ = localStubbyInfo)
        {
          this.bitField0_ = (0x4 | this.bitField0_);
          break;
        }
      }

      public final Builder setInviteId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x1 | this.bitField0_);
        this.inviteId_ = paramString;
        return this;
      }

      public final Builder setInviteStatus(Client.HangoutInviteFinishRequest.InviteStatus paramInviteStatus)
      {
        if (paramInviteStatus == null)
          throw new NullPointerException();
        this.bitField0_ = (0x2 | this.bitField0_);
        this.inviteStatus_ = paramInviteStatus;
        return this;
      }

      public final Builder setStubbyInfo(Data.StubbyInfo.Builder paramBuilder)
      {
        this.stubbyInfo_ = paramBuilder.build();
        this.bitField0_ = (0x4 | this.bitField0_);
        return this;
      }

      public final Builder setStubbyInfo(Data.StubbyInfo paramStubbyInfo)
      {
        if (paramStubbyInfo == null)
          throw new NullPointerException();
        this.stubbyInfo_ = paramStubbyInfo;
        this.bitField0_ = (0x4 | this.bitField0_);
        return this;
      }
    }

    public static enum InviteStatus
      implements Internal.EnumLite
    {
      private static Internal.EnumLiteMap<InviteStatus> internalValueMap = new Internal.EnumLiteMap()
      {
      };
      private final int value;

      static
      {
        CONNECTED = new InviteStatus("CONNECTED", 1, 1);
        CANCELED = new InviteStatus("CANCELED", 2, 2);
        InviteStatus[] arrayOfInviteStatus = new InviteStatus[3];
        arrayOfInviteStatus[0] = UNKNOWN;
        arrayOfInviteStatus[1] = CONNECTED;
        arrayOfInviteStatus[2] = CANCELED;
      }

      private InviteStatus(int paramInt1, int paramInt2)
      {
        this.value = paramInt1;
      }

      public static InviteStatus valueOf(int paramInt)
      {
        InviteStatus localInviteStatus;
        switch (paramInt)
        {
        default:
          localInviteStatus = null;
        case 0:
        case 1:
        case 2:
        }
        while (true)
        {
          return localInviteStatus;
          localInviteStatus = UNKNOWN;
          continue;
          localInviteStatus = CONNECTED;
          continue;
          localInviteStatus = CANCELED;
        }
      }

      public final int getNumber()
      {
        return this.value;
      }
    }
  }

  public static abstract interface HangoutInviteFinishRequestOrBuilder extends MessageLiteOrBuilder
  {
    public abstract String getInviteId();

    public abstract Client.HangoutInviteFinishRequest.InviteStatus getInviteStatus();

    public abstract Data.StubbyInfo getStubbyInfo();

    public abstract boolean hasInviteId();

    public abstract boolean hasInviteStatus();

    public abstract boolean hasStubbyInfo();
  }

  public static final class HangoutInviteFinishResponse extends GeneratedMessageLite
    implements Client.HangoutInviteFinishResponseOrBuilder
  {
    private static final HangoutInviteFinishResponse defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private Object requestError_;
    private Data.ResponseStatus status_;

    static
    {
      HangoutInviteFinishResponse localHangoutInviteFinishResponse = new HangoutInviteFinishResponse();
      defaultInstance = localHangoutInviteFinishResponse;
      localHangoutInviteFinishResponse.status_ = Data.ResponseStatus.OK;
      localHangoutInviteFinishResponse.requestError_ = "";
    }

    private HangoutInviteFinishResponse()
    {
    }

    private HangoutInviteFinishResponse(Builder paramBuilder)
    {
      super();
    }

    public static HangoutInviteFinishResponse getDefaultInstance()
    {
      return defaultInstance;
    }

    private ByteString getRequestErrorBytes()
    {
      Object localObject = this.requestError_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.requestError_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static Builder newBuilder()
    {
      return Builder.access$63700();
    }

    public static Builder newBuilder(HangoutInviteFinishResponse paramHangoutInviteFinishResponse)
    {
      return Builder.access$63700().mergeFrom(paramHangoutInviteFinishResponse);
    }

    public final HangoutInviteFinishResponse getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final String getRequestError()
    {
      Object localObject1 = this.requestError_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.requestError_ = str;
      }
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeEnumSize(1, this.status_.getNumber());
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeBytesSize(2, getRequestErrorBytes());
        this.memoizedSerializedSize = k;
      }
    }

    public final Data.ResponseStatus getStatus()
    {
      return this.status_;
    }

    public final boolean hasRequestError()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasStatus()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeEnum(1, this.status_.getNumber());
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeBytes(2, getRequestErrorBytes());
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Client.HangoutInviteFinishResponse, Builder>
      implements Client.HangoutInviteFinishResponseOrBuilder
    {
      private int bitField0_;
      private Object requestError_ = "";
      private Data.ResponseStatus status_ = Data.ResponseStatus.OK;

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 8:
            Data.ResponseStatus localResponseStatus = Data.ResponseStatus.valueOf(paramCodedInputStream.readEnum());
            if (localResponseStatus == null)
              continue;
            this.bitField0_ = (0x1 | this.bitField0_);
            this.status_ = localResponseStatus;
            break;
          case 18:
          }
          this.bitField0_ = (0x2 | this.bitField0_);
          this.requestError_ = paramCodedInputStream.readBytes();
        }
      }

      public final Client.HangoutInviteFinishResponse build()
      {
        Client.HangoutInviteFinishResponse localHangoutInviteFinishResponse = buildPartial();
        if (!localHangoutInviteFinishResponse.isInitialized())
          throw new UninitializedMessageException();
        return localHangoutInviteFinishResponse;
      }

      public final Client.HangoutInviteFinishResponse buildPartial()
      {
        Client.HangoutInviteFinishResponse localHangoutInviteFinishResponse = new Client.HangoutInviteFinishResponse(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Client.HangoutInviteFinishResponse.access$63902(localHangoutInviteFinishResponse, this.status_);
        if ((i & 0x2) == 2)
          k |= 2;
        Client.HangoutInviteFinishResponse.access$64002(localHangoutInviteFinishResponse, this.requestError_);
        Client.HangoutInviteFinishResponse.access$64102(localHangoutInviteFinishResponse, k);
        return localHangoutInviteFinishResponse;
      }

      public final Builder clear()
      {
        super.clear();
        this.status_ = Data.ResponseStatus.OK;
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.requestError_ = "";
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        return this;
      }

      public final Builder clearRequestError()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.requestError_ = Client.HangoutInviteFinishResponse.getDefaultInstance().getRequestError();
        return this;
      }

      public final Builder clearStatus()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.status_ = Data.ResponseStatus.OK;
        return this;
      }

      public final Client.HangoutInviteFinishResponse getDefaultInstanceForType()
      {
        return Client.HangoutInviteFinishResponse.getDefaultInstance();
      }

      public final String getRequestError()
      {
        Object localObject = this.requestError_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.requestError_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final Data.ResponseStatus getStatus()
      {
        return this.status_;
      }

      public final boolean hasRequestError()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasStatus()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Client.HangoutInviteFinishResponse paramHangoutInviteFinishResponse)
      {
        if (paramHangoutInviteFinishResponse == Client.HangoutInviteFinishResponse.getDefaultInstance());
        while (true)
        {
          return this;
          if (paramHangoutInviteFinishResponse.hasStatus())
            setStatus(paramHangoutInviteFinishResponse.getStatus());
          if (paramHangoutInviteFinishResponse.hasRequestError())
            setRequestError(paramHangoutInviteFinishResponse.getRequestError());
        }
      }

      public final Builder setRequestError(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x2 | this.bitField0_);
        this.requestError_ = paramString;
        return this;
      }

      public final Builder setStatus(Data.ResponseStatus paramResponseStatus)
      {
        if (paramResponseStatus == null)
          throw new NullPointerException();
        this.bitField0_ = (0x1 | this.bitField0_);
        this.status_ = paramResponseStatus;
        return this;
      }
    }
  }

  public static abstract interface HangoutInviteFinishResponseOrBuilder extends MessageLiteOrBuilder
  {
    public abstract String getRequestError();

    public abstract Data.ResponseStatus getStatus();

    public abstract boolean hasRequestError();

    public abstract boolean hasStatus();
  }

  public static final class HangoutInviteKeepAliveRequest extends GeneratedMessageLite
    implements Client.HangoutInviteKeepAliveRequestOrBuilder
  {
    private static final HangoutInviteKeepAliveRequest defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private Object inviteId_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private Data.StubbyInfo stubbyInfo_;

    static
    {
      HangoutInviteKeepAliveRequest localHangoutInviteKeepAliveRequest = new HangoutInviteKeepAliveRequest();
      defaultInstance = localHangoutInviteKeepAliveRequest;
      localHangoutInviteKeepAliveRequest.inviteId_ = "";
      localHangoutInviteKeepAliveRequest.stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
    }

    private HangoutInviteKeepAliveRequest()
    {
    }

    private HangoutInviteKeepAliveRequest(Builder paramBuilder)
    {
      super();
    }

    public static HangoutInviteKeepAliveRequest getDefaultInstance()
    {
      return defaultInstance;
    }

    private ByteString getInviteIdBytes()
    {
      Object localObject = this.inviteId_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.inviteId_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static Builder newBuilder()
    {
      return Builder.access$60100();
    }

    public static Builder newBuilder(HangoutInviteKeepAliveRequest paramHangoutInviteKeepAliveRequest)
    {
      return Builder.access$60100().mergeFrom(paramHangoutInviteKeepAliveRequest);
    }

    public final HangoutInviteKeepAliveRequest getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final String getInviteId()
    {
      Object localObject1 = this.inviteId_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.inviteId_ = str;
      }
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeBytesSize(1, getInviteIdBytes());
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeMessageSize(2, this.stubbyInfo_);
        this.memoizedSerializedSize = k;
      }
    }

    public final Data.StubbyInfo getStubbyInfo()
    {
      return this.stubbyInfo_;
    }

    public final boolean hasInviteId()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean hasStubbyInfo()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeBytes(1, getInviteIdBytes());
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeMessage(2, this.stubbyInfo_);
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Client.HangoutInviteKeepAliveRequest, Builder>
      implements Client.HangoutInviteKeepAliveRequestOrBuilder
    {
      private int bitField0_;
      private Object inviteId_ = "";
      private Data.StubbyInfo stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 10:
            this.bitField0_ = (0x1 | this.bitField0_);
            this.inviteId_ = paramCodedInputStream.readBytes();
            break;
          case 18:
          }
          Data.StubbyInfo.Builder localBuilder = Data.StubbyInfo.newBuilder();
          if (hasStubbyInfo())
            localBuilder.mergeFrom(getStubbyInfo());
          paramCodedInputStream.readMessage(localBuilder, paramExtensionRegistryLite);
          setStubbyInfo(localBuilder.buildPartial());
        }
      }

      public final Client.HangoutInviteKeepAliveRequest build()
      {
        Client.HangoutInviteKeepAliveRequest localHangoutInviteKeepAliveRequest = buildPartial();
        if (!localHangoutInviteKeepAliveRequest.isInitialized())
          throw new UninitializedMessageException();
        return localHangoutInviteKeepAliveRequest;
      }

      public final Client.HangoutInviteKeepAliveRequest buildPartial()
      {
        Client.HangoutInviteKeepAliveRequest localHangoutInviteKeepAliveRequest = new Client.HangoutInviteKeepAliveRequest(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Client.HangoutInviteKeepAliveRequest.access$60302(localHangoutInviteKeepAliveRequest, this.inviteId_);
        if ((i & 0x2) == 2)
          k |= 2;
        Client.HangoutInviteKeepAliveRequest.access$60402(localHangoutInviteKeepAliveRequest, this.stubbyInfo_);
        Client.HangoutInviteKeepAliveRequest.access$60502(localHangoutInviteKeepAliveRequest, k);
        return localHangoutInviteKeepAliveRequest;
      }

      public final Builder clear()
      {
        super.clear();
        this.inviteId_ = "";
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        return this;
      }

      public final Builder clearInviteId()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.inviteId_ = Client.HangoutInviteKeepAliveRequest.getDefaultInstance().getInviteId();
        return this;
      }

      public final Builder clearStubbyInfo()
      {
        this.stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        return this;
      }

      public final Client.HangoutInviteKeepAliveRequest getDefaultInstanceForType()
      {
        return Client.HangoutInviteKeepAliveRequest.getDefaultInstance();
      }

      public final String getInviteId()
      {
        Object localObject = this.inviteId_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.inviteId_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final Data.StubbyInfo getStubbyInfo()
      {
        return this.stubbyInfo_;
      }

      public final boolean hasInviteId()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean hasStubbyInfo()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Client.HangoutInviteKeepAliveRequest paramHangoutInviteKeepAliveRequest)
      {
        if (paramHangoutInviteKeepAliveRequest == Client.HangoutInviteKeepAliveRequest.getDefaultInstance());
        do
        {
          return this;
          if (paramHangoutInviteKeepAliveRequest.hasInviteId())
            setInviteId(paramHangoutInviteKeepAliveRequest.getInviteId());
        }
        while (!paramHangoutInviteKeepAliveRequest.hasStubbyInfo());
        Data.StubbyInfo localStubbyInfo = paramHangoutInviteKeepAliveRequest.getStubbyInfo();
        if (((0x2 & this.bitField0_) == 2) && (this.stubbyInfo_ != Data.StubbyInfo.getDefaultInstance()));
        for (this.stubbyInfo_ = Data.StubbyInfo.newBuilder(this.stubbyInfo_).mergeFrom(localStubbyInfo).buildPartial(); ; this.stubbyInfo_ = localStubbyInfo)
        {
          this.bitField0_ = (0x2 | this.bitField0_);
          break;
        }
      }

      public final Builder setInviteId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x1 | this.bitField0_);
        this.inviteId_ = paramString;
        return this;
      }

      public final Builder setStubbyInfo(Data.StubbyInfo.Builder paramBuilder)
      {
        this.stubbyInfo_ = paramBuilder.build();
        this.bitField0_ = (0x2 | this.bitField0_);
        return this;
      }

      public final Builder setStubbyInfo(Data.StubbyInfo paramStubbyInfo)
      {
        if (paramStubbyInfo == null)
          throw new NullPointerException();
        this.stubbyInfo_ = paramStubbyInfo;
        this.bitField0_ = (0x2 | this.bitField0_);
        return this;
      }
    }
  }

  public static abstract interface HangoutInviteKeepAliveRequestOrBuilder extends MessageLiteOrBuilder
  {
    public abstract String getInviteId();

    public abstract Data.StubbyInfo getStubbyInfo();

    public abstract boolean hasInviteId();

    public abstract boolean hasStubbyInfo();
  }

  public static final class HangoutInviteKeepAliveResponse extends GeneratedMessageLite
    implements Client.HangoutInviteKeepAliveResponseOrBuilder
  {
    private static final HangoutInviteKeepAliveResponse defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private Object requestError_;
    private Data.ResponseStatus status_;

    static
    {
      HangoutInviteKeepAliveResponse localHangoutInviteKeepAliveResponse = new HangoutInviteKeepAliveResponse();
      defaultInstance = localHangoutInviteKeepAliveResponse;
      localHangoutInviteKeepAliveResponse.status_ = Data.ResponseStatus.OK;
      localHangoutInviteKeepAliveResponse.requestError_ = "";
    }

    private HangoutInviteKeepAliveResponse()
    {
    }

    private HangoutInviteKeepAliveResponse(Builder paramBuilder)
    {
      super();
    }

    public static HangoutInviteKeepAliveResponse getDefaultInstance()
    {
      return defaultInstance;
    }

    private ByteString getRequestErrorBytes()
    {
      Object localObject = this.requestError_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.requestError_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static Builder newBuilder()
    {
      return Builder.access$60700();
    }

    public static Builder newBuilder(HangoutInviteKeepAliveResponse paramHangoutInviteKeepAliveResponse)
    {
      return Builder.access$60700().mergeFrom(paramHangoutInviteKeepAliveResponse);
    }

    public final HangoutInviteKeepAliveResponse getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final String getRequestError()
    {
      Object localObject1 = this.requestError_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.requestError_ = str;
      }
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeEnumSize(1, this.status_.getNumber());
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeBytesSize(2, getRequestErrorBytes());
        this.memoizedSerializedSize = k;
      }
    }

    public final Data.ResponseStatus getStatus()
    {
      return this.status_;
    }

    public final boolean hasRequestError()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasStatus()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeEnum(1, this.status_.getNumber());
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeBytes(2, getRequestErrorBytes());
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Client.HangoutInviteKeepAliveResponse, Builder>
      implements Client.HangoutInviteKeepAliveResponseOrBuilder
    {
      private int bitField0_;
      private Object requestError_ = "";
      private Data.ResponseStatus status_ = Data.ResponseStatus.OK;

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 8:
            Data.ResponseStatus localResponseStatus = Data.ResponseStatus.valueOf(paramCodedInputStream.readEnum());
            if (localResponseStatus == null)
              continue;
            this.bitField0_ = (0x1 | this.bitField0_);
            this.status_ = localResponseStatus;
            break;
          case 18:
          }
          this.bitField0_ = (0x2 | this.bitField0_);
          this.requestError_ = paramCodedInputStream.readBytes();
        }
      }

      public final Client.HangoutInviteKeepAliveResponse build()
      {
        Client.HangoutInviteKeepAliveResponse localHangoutInviteKeepAliveResponse = buildPartial();
        if (!localHangoutInviteKeepAliveResponse.isInitialized())
          throw new UninitializedMessageException();
        return localHangoutInviteKeepAliveResponse;
      }

      public final Client.HangoutInviteKeepAliveResponse buildPartial()
      {
        Client.HangoutInviteKeepAliveResponse localHangoutInviteKeepAliveResponse = new Client.HangoutInviteKeepAliveResponse(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Client.HangoutInviteKeepAliveResponse.access$60902(localHangoutInviteKeepAliveResponse, this.status_);
        if ((i & 0x2) == 2)
          k |= 2;
        Client.HangoutInviteKeepAliveResponse.access$61002(localHangoutInviteKeepAliveResponse, this.requestError_);
        Client.HangoutInviteKeepAliveResponse.access$61102(localHangoutInviteKeepAliveResponse, k);
        return localHangoutInviteKeepAliveResponse;
      }

      public final Builder clear()
      {
        super.clear();
        this.status_ = Data.ResponseStatus.OK;
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.requestError_ = "";
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        return this;
      }

      public final Builder clearRequestError()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.requestError_ = Client.HangoutInviteKeepAliveResponse.getDefaultInstance().getRequestError();
        return this;
      }

      public final Builder clearStatus()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.status_ = Data.ResponseStatus.OK;
        return this;
      }

      public final Client.HangoutInviteKeepAliveResponse getDefaultInstanceForType()
      {
        return Client.HangoutInviteKeepAliveResponse.getDefaultInstance();
      }

      public final String getRequestError()
      {
        Object localObject = this.requestError_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.requestError_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final Data.ResponseStatus getStatus()
      {
        return this.status_;
      }

      public final boolean hasRequestError()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasStatus()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Client.HangoutInviteKeepAliveResponse paramHangoutInviteKeepAliveResponse)
      {
        if (paramHangoutInviteKeepAliveResponse == Client.HangoutInviteKeepAliveResponse.getDefaultInstance());
        while (true)
        {
          return this;
          if (paramHangoutInviteKeepAliveResponse.hasStatus())
            setStatus(paramHangoutInviteKeepAliveResponse.getStatus());
          if (paramHangoutInviteKeepAliveResponse.hasRequestError())
            setRequestError(paramHangoutInviteKeepAliveResponse.getRequestError());
        }
      }

      public final Builder setRequestError(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x2 | this.bitField0_);
        this.requestError_ = paramString;
        return this;
      }

      public final Builder setStatus(Data.ResponseStatus paramResponseStatus)
      {
        if (paramResponseStatus == null)
          throw new NullPointerException();
        this.bitField0_ = (0x1 | this.bitField0_);
        this.status_ = paramResponseStatus;
        return this;
      }
    }
  }

  public static abstract interface HangoutInviteKeepAliveResponseOrBuilder extends MessageLiteOrBuilder
  {
    public abstract String getRequestError();

    public abstract Data.ResponseStatus getStatus();

    public abstract boolean hasRequestError();

    public abstract boolean hasStatus();
  }

  public static final class HangoutInviteReplyRequest extends GeneratedMessageLite
    implements Client.HangoutInviteReplyRequestOrBuilder
  {
    private static final HangoutInviteReplyRequest defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private long instanceId_;
    private Object inviteId_;
    private InviteeStatus inviteeStatus_;
    private Object inviterId_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private Object phoneNumber_;
    private Data.StubbyInfo stubbyInfo_;

    static
    {
      HangoutInviteReplyRequest localHangoutInviteReplyRequest = new HangoutInviteReplyRequest();
      defaultInstance = localHangoutInviteReplyRequest;
      localHangoutInviteReplyRequest.inviteId_ = "";
      localHangoutInviteReplyRequest.inviteeStatus_ = InviteeStatus.UNKNOWN;
      localHangoutInviteReplyRequest.phoneNumber_ = "";
      localHangoutInviteReplyRequest.inviterId_ = "";
      localHangoutInviteReplyRequest.instanceId_ = 0L;
      localHangoutInviteReplyRequest.stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
    }

    private HangoutInviteReplyRequest()
    {
    }

    private HangoutInviteReplyRequest(Builder paramBuilder)
    {
      super();
    }

    public static HangoutInviteReplyRequest getDefaultInstance()
    {
      return defaultInstance;
    }

    private ByteString getInviteIdBytes()
    {
      Object localObject = this.inviteId_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.inviteId_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    private ByteString getInviterIdBytes()
    {
      Object localObject = this.inviterId_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.inviterId_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    private ByteString getPhoneNumberBytes()
    {
      Object localObject = this.phoneNumber_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.phoneNumber_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static Builder newBuilder()
    {
      return Builder.access$61300();
    }

    public static Builder newBuilder(HangoutInviteReplyRequest paramHangoutInviteReplyRequest)
    {
      return Builder.access$61300().mergeFrom(paramHangoutInviteReplyRequest);
    }

    public final HangoutInviteReplyRequest getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final long getInstanceId()
    {
      return this.instanceId_;
    }

    public final String getInviteId()
    {
      Object localObject1 = this.inviteId_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.inviteId_ = str;
      }
    }

    public final InviteeStatus getInviteeStatus()
    {
      return this.inviteeStatus_;
    }

    public final String getInviterId()
    {
      Object localObject1 = this.inviterId_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.inviterId_ = str;
      }
    }

    public final String getPhoneNumber()
    {
      Object localObject1 = this.phoneNumber_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.phoneNumber_ = str;
      }
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeBytesSize(1, getInviteIdBytes());
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeEnumSize(2, this.inviteeStatus_.getNumber());
        if ((0x4 & this.bitField0_) == 4)
          k += CodedOutputStream.computeBytesSize(3, getPhoneNumberBytes());
        if ((0x20 & this.bitField0_) == 32)
          k += CodedOutputStream.computeMessageSize(4, this.stubbyInfo_);
        if ((0x8 & this.bitField0_) == 8)
          k += CodedOutputStream.computeBytesSize(5, getInviterIdBytes());
        if ((0x10 & this.bitField0_) == 16)
          k += CodedOutputStream.computeInt64Size(6, this.instanceId_);
        this.memoizedSerializedSize = k;
      }
    }

    public final Data.StubbyInfo getStubbyInfo()
    {
      return this.stubbyInfo_;
    }

    public final boolean hasInstanceId()
    {
      if ((0x10 & this.bitField0_) == 16);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasInviteId()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean hasInviteeStatus()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasInviterId()
    {
      if ((0x8 & this.bitField0_) == 8);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasPhoneNumber()
    {
      if ((0x4 & this.bitField0_) == 4);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasStubbyInfo()
    {
      if ((0x20 & this.bitField0_) == 32);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeBytes(1, getInviteIdBytes());
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeEnum(2, this.inviteeStatus_.getNumber());
      if ((0x4 & this.bitField0_) == 4)
        paramCodedOutputStream.writeBytes(3, getPhoneNumberBytes());
      if ((0x20 & this.bitField0_) == 32)
        paramCodedOutputStream.writeMessage(4, this.stubbyInfo_);
      if ((0x8 & this.bitField0_) == 8)
        paramCodedOutputStream.writeBytes(5, getInviterIdBytes());
      if ((0x10 & this.bitField0_) == 16)
        paramCodedOutputStream.writeInt64(6, this.instanceId_);
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Client.HangoutInviteReplyRequest, Builder>
      implements Client.HangoutInviteReplyRequestOrBuilder
    {
      private int bitField0_;
      private long instanceId_;
      private Object inviteId_ = "";
      private Client.HangoutInviteReplyRequest.InviteeStatus inviteeStatus_ = Client.HangoutInviteReplyRequest.InviteeStatus.UNKNOWN;
      private Object inviterId_ = "";
      private Object phoneNumber_ = "";
      private Data.StubbyInfo stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 10:
            this.bitField0_ = (0x1 | this.bitField0_);
            this.inviteId_ = paramCodedInputStream.readBytes();
            break;
          case 16:
            Client.HangoutInviteReplyRequest.InviteeStatus localInviteeStatus = Client.HangoutInviteReplyRequest.InviteeStatus.valueOf(paramCodedInputStream.readEnum());
            if (localInviteeStatus == null)
              continue;
            this.bitField0_ = (0x2 | this.bitField0_);
            this.inviteeStatus_ = localInviteeStatus;
            break;
          case 26:
            this.bitField0_ = (0x4 | this.bitField0_);
            this.phoneNumber_ = paramCodedInputStream.readBytes();
            break;
          case 34:
            Data.StubbyInfo.Builder localBuilder = Data.StubbyInfo.newBuilder();
            if (hasStubbyInfo())
              localBuilder.mergeFrom(getStubbyInfo());
            paramCodedInputStream.readMessage(localBuilder, paramExtensionRegistryLite);
            setStubbyInfo(localBuilder.buildPartial());
            break;
          case 42:
            this.bitField0_ = (0x8 | this.bitField0_);
            this.inviterId_ = paramCodedInputStream.readBytes();
            break;
          case 48:
          }
          this.bitField0_ = (0x10 | this.bitField0_);
          this.instanceId_ = paramCodedInputStream.readInt64();
        }
      }

      public final Client.HangoutInviteReplyRequest build()
      {
        Client.HangoutInviteReplyRequest localHangoutInviteReplyRequest = buildPartial();
        if (!localHangoutInviteReplyRequest.isInitialized())
          throw new UninitializedMessageException();
        return localHangoutInviteReplyRequest;
      }

      public final Client.HangoutInviteReplyRequest buildPartial()
      {
        Client.HangoutInviteReplyRequest localHangoutInviteReplyRequest = new Client.HangoutInviteReplyRequest(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Client.HangoutInviteReplyRequest.access$61502(localHangoutInviteReplyRequest, this.inviteId_);
        if ((i & 0x2) == 2)
          k |= 2;
        Client.HangoutInviteReplyRequest.access$61602(localHangoutInviteReplyRequest, this.inviteeStatus_);
        if ((i & 0x4) == 4)
          k |= 4;
        Client.HangoutInviteReplyRequest.access$61702(localHangoutInviteReplyRequest, this.phoneNumber_);
        if ((i & 0x8) == 8)
          k |= 8;
        Client.HangoutInviteReplyRequest.access$61802(localHangoutInviteReplyRequest, this.inviterId_);
        if ((i & 0x10) == 16)
          k |= 16;
        Client.HangoutInviteReplyRequest.access$61902(localHangoutInviteReplyRequest, this.instanceId_);
        if ((i & 0x20) == 32)
          k |= 32;
        Client.HangoutInviteReplyRequest.access$62002(localHangoutInviteReplyRequest, this.stubbyInfo_);
        Client.HangoutInviteReplyRequest.access$62102(localHangoutInviteReplyRequest, k);
        return localHangoutInviteReplyRequest;
      }

      public final Builder clear()
      {
        super.clear();
        this.inviteId_ = "";
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.inviteeStatus_ = Client.HangoutInviteReplyRequest.InviteeStatus.UNKNOWN;
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.phoneNumber_ = "";
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.inviterId_ = "";
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        this.instanceId_ = 0L;
        this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        this.stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFDF & this.bitField0_);
        return this;
      }

      public final Builder clearInstanceId()
      {
        this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        this.instanceId_ = 0L;
        return this;
      }

      public final Builder clearInviteId()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.inviteId_ = Client.HangoutInviteReplyRequest.getDefaultInstance().getInviteId();
        return this;
      }

      public final Builder clearInviteeStatus()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.inviteeStatus_ = Client.HangoutInviteReplyRequest.InviteeStatus.UNKNOWN;
        return this;
      }

      public final Builder clearInviterId()
      {
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        this.inviterId_ = Client.HangoutInviteReplyRequest.getDefaultInstance().getInviterId();
        return this;
      }

      public final Builder clearPhoneNumber()
      {
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.phoneNumber_ = Client.HangoutInviteReplyRequest.getDefaultInstance().getPhoneNumber();
        return this;
      }

      public final Builder clearStubbyInfo()
      {
        this.stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFDF & this.bitField0_);
        return this;
      }

      public final Client.HangoutInviteReplyRequest getDefaultInstanceForType()
      {
        return Client.HangoutInviteReplyRequest.getDefaultInstance();
      }

      public final long getInstanceId()
      {
        return this.instanceId_;
      }

      public final String getInviteId()
      {
        Object localObject = this.inviteId_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.inviteId_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final Client.HangoutInviteReplyRequest.InviteeStatus getInviteeStatus()
      {
        return this.inviteeStatus_;
      }

      public final String getInviterId()
      {
        Object localObject = this.inviterId_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.inviterId_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final String getPhoneNumber()
      {
        Object localObject = this.phoneNumber_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.phoneNumber_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final Data.StubbyInfo getStubbyInfo()
      {
        return this.stubbyInfo_;
      }

      public final boolean hasInstanceId()
      {
        if ((0x10 & this.bitField0_) == 16);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasInviteId()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean hasInviteeStatus()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasInviterId()
      {
        if ((0x8 & this.bitField0_) == 8);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasPhoneNumber()
      {
        if ((0x4 & this.bitField0_) == 4);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasStubbyInfo()
      {
        if ((0x20 & this.bitField0_) == 32);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Client.HangoutInviteReplyRequest paramHangoutInviteReplyRequest)
      {
        if (paramHangoutInviteReplyRequest == Client.HangoutInviteReplyRequest.getDefaultInstance());
        do
        {
          return this;
          if (paramHangoutInviteReplyRequest.hasInviteId())
            setInviteId(paramHangoutInviteReplyRequest.getInviteId());
          if (paramHangoutInviteReplyRequest.hasInviteeStatus())
            setInviteeStatus(paramHangoutInviteReplyRequest.getInviteeStatus());
          if (paramHangoutInviteReplyRequest.hasPhoneNumber())
            setPhoneNumber(paramHangoutInviteReplyRequest.getPhoneNumber());
          if (paramHangoutInviteReplyRequest.hasInviterId())
            setInviterId(paramHangoutInviteReplyRequest.getInviterId());
          if (paramHangoutInviteReplyRequest.hasInstanceId())
            setInstanceId(paramHangoutInviteReplyRequest.getInstanceId());
        }
        while (!paramHangoutInviteReplyRequest.hasStubbyInfo());
        Data.StubbyInfo localStubbyInfo = paramHangoutInviteReplyRequest.getStubbyInfo();
        if (((0x20 & this.bitField0_) == 32) && (this.stubbyInfo_ != Data.StubbyInfo.getDefaultInstance()));
        for (this.stubbyInfo_ = Data.StubbyInfo.newBuilder(this.stubbyInfo_).mergeFrom(localStubbyInfo).buildPartial(); ; this.stubbyInfo_ = localStubbyInfo)
        {
          this.bitField0_ = (0x20 | this.bitField0_);
          break;
        }
      }

      public final Builder setInstanceId(long paramLong)
      {
        this.bitField0_ = (0x10 | this.bitField0_);
        this.instanceId_ = paramLong;
        return this;
      }

      public final Builder setInviteId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x1 | this.bitField0_);
        this.inviteId_ = paramString;
        return this;
      }

      public final Builder setInviteeStatus(Client.HangoutInviteReplyRequest.InviteeStatus paramInviteeStatus)
      {
        if (paramInviteeStatus == null)
          throw new NullPointerException();
        this.bitField0_ = (0x2 | this.bitField0_);
        this.inviteeStatus_ = paramInviteeStatus;
        return this;
      }

      public final Builder setInviterId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x8 | this.bitField0_);
        this.inviterId_ = paramString;
        return this;
      }

      public final Builder setPhoneNumber(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x4 | this.bitField0_);
        this.phoneNumber_ = paramString;
        return this;
      }

      public final Builder setStubbyInfo(Data.StubbyInfo.Builder paramBuilder)
      {
        this.stubbyInfo_ = paramBuilder.build();
        this.bitField0_ = (0x20 | this.bitField0_);
        return this;
      }

      public final Builder setStubbyInfo(Data.StubbyInfo paramStubbyInfo)
      {
        if (paramStubbyInfo == null)
          throw new NullPointerException();
        this.stubbyInfo_ = paramStubbyInfo;
        this.bitField0_ = (0x20 | this.bitField0_);
        return this;
      }
    }

    public static enum InviteeStatus
      implements Internal.EnumLite
    {
      private static Internal.EnumLiteMap<InviteeStatus> internalValueMap = new Internal.EnumLiteMap()
      {
      };
      private final int value;

      static
      {
        CONNECTING = new InviteeStatus("CONNECTING", 1, 1);
        ACCEPTED = new InviteeStatus("ACCEPTED", 2, 2);
        DECLINED = new InviteeStatus("DECLINED", 3, 3);
        InviteeStatus[] arrayOfInviteeStatus = new InviteeStatus[4];
        arrayOfInviteeStatus[0] = UNKNOWN;
        arrayOfInviteeStatus[1] = CONNECTING;
        arrayOfInviteeStatus[2] = ACCEPTED;
        arrayOfInviteeStatus[3] = DECLINED;
      }

      private InviteeStatus(int paramInt1, int paramInt2)
      {
        this.value = paramInt1;
      }

      public static InviteeStatus valueOf(int paramInt)
      {
        InviteeStatus localInviteeStatus;
        switch (paramInt)
        {
        default:
          localInviteeStatus = null;
        case 0:
        case 1:
        case 2:
        case 3:
        }
        while (true)
        {
          return localInviteeStatus;
          localInviteeStatus = UNKNOWN;
          continue;
          localInviteeStatus = CONNECTING;
          continue;
          localInviteeStatus = ACCEPTED;
          continue;
          localInviteeStatus = DECLINED;
        }
      }

      public final int getNumber()
      {
        return this.value;
      }
    }
  }

  public static abstract interface HangoutInviteReplyRequestOrBuilder extends MessageLiteOrBuilder
  {
    public abstract long getInstanceId();

    public abstract String getInviteId();

    public abstract Client.HangoutInviteReplyRequest.InviteeStatus getInviteeStatus();

    public abstract String getInviterId();

    public abstract String getPhoneNumber();

    public abstract Data.StubbyInfo getStubbyInfo();

    public abstract boolean hasInstanceId();

    public abstract boolean hasInviteId();

    public abstract boolean hasInviteeStatus();

    public abstract boolean hasInviterId();

    public abstract boolean hasPhoneNumber();

    public abstract boolean hasStubbyInfo();
  }

  public static final class HangoutInviteReplyResponse extends GeneratedMessageLite
    implements Client.HangoutInviteReplyResponseOrBuilder
  {
    private static final HangoutInviteReplyResponse defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private boolean inviteObsolete_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private Object requestError_;
    private Data.ResponseStatus status_;

    static
    {
      HangoutInviteReplyResponse localHangoutInviteReplyResponse = new HangoutInviteReplyResponse();
      defaultInstance = localHangoutInviteReplyResponse;
      localHangoutInviteReplyResponse.status_ = Data.ResponseStatus.OK;
      localHangoutInviteReplyResponse.requestError_ = "";
      localHangoutInviteReplyResponse.inviteObsolete_ = false;
    }

    private HangoutInviteReplyResponse()
    {
    }

    private HangoutInviteReplyResponse(Builder paramBuilder)
    {
      super();
    }

    public static HangoutInviteReplyResponse getDefaultInstance()
    {
      return defaultInstance;
    }

    private ByteString getRequestErrorBytes()
    {
      Object localObject = this.requestError_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.requestError_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static Builder newBuilder()
    {
      return Builder.access$62300();
    }

    public static Builder newBuilder(HangoutInviteReplyResponse paramHangoutInviteReplyResponse)
    {
      return Builder.access$62300().mergeFrom(paramHangoutInviteReplyResponse);
    }

    public final HangoutInviteReplyResponse getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final boolean getInviteObsolete()
    {
      return this.inviteObsolete_;
    }

    public final String getRequestError()
    {
      Object localObject1 = this.requestError_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.requestError_ = str;
      }
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeEnumSize(1, this.status_.getNumber());
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeBytesSize(2, getRequestErrorBytes());
        if ((0x4 & this.bitField0_) == 4)
          k += CodedOutputStream.computeBoolSize(3, this.inviteObsolete_);
        this.memoizedSerializedSize = k;
      }
    }

    public final Data.ResponseStatus getStatus()
    {
      return this.status_;
    }

    public final boolean hasInviteObsolete()
    {
      if ((0x4 & this.bitField0_) == 4);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasRequestError()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasStatus()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeEnum(1, this.status_.getNumber());
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeBytes(2, getRequestErrorBytes());
      if ((0x4 & this.bitField0_) == 4)
        paramCodedOutputStream.writeBool(3, this.inviteObsolete_);
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Client.HangoutInviteReplyResponse, Builder>
      implements Client.HangoutInviteReplyResponseOrBuilder
    {
      private int bitField0_;
      private boolean inviteObsolete_;
      private Object requestError_ = "";
      private Data.ResponseStatus status_ = Data.ResponseStatus.OK;

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 8:
            Data.ResponseStatus localResponseStatus = Data.ResponseStatus.valueOf(paramCodedInputStream.readEnum());
            if (localResponseStatus == null)
              continue;
            this.bitField0_ = (0x1 | this.bitField0_);
            this.status_ = localResponseStatus;
            break;
          case 18:
            this.bitField0_ = (0x2 | this.bitField0_);
            this.requestError_ = paramCodedInputStream.readBytes();
            break;
          case 24:
          }
          this.bitField0_ = (0x4 | this.bitField0_);
          this.inviteObsolete_ = paramCodedInputStream.readBool();
        }
      }

      public final Client.HangoutInviteReplyResponse build()
      {
        Client.HangoutInviteReplyResponse localHangoutInviteReplyResponse = buildPartial();
        if (!localHangoutInviteReplyResponse.isInitialized())
          throw new UninitializedMessageException();
        return localHangoutInviteReplyResponse;
      }

      public final Client.HangoutInviteReplyResponse buildPartial()
      {
        Client.HangoutInviteReplyResponse localHangoutInviteReplyResponse = new Client.HangoutInviteReplyResponse(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Client.HangoutInviteReplyResponse.access$62502(localHangoutInviteReplyResponse, this.status_);
        if ((i & 0x2) == 2)
          k |= 2;
        Client.HangoutInviteReplyResponse.access$62602(localHangoutInviteReplyResponse, this.requestError_);
        if ((i & 0x4) == 4)
          k |= 4;
        Client.HangoutInviteReplyResponse.access$62702(localHangoutInviteReplyResponse, this.inviteObsolete_);
        Client.HangoutInviteReplyResponse.access$62802(localHangoutInviteReplyResponse, k);
        return localHangoutInviteReplyResponse;
      }

      public final Builder clear()
      {
        super.clear();
        this.status_ = Data.ResponseStatus.OK;
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.requestError_ = "";
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.inviteObsolete_ = false;
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        return this;
      }

      public final Builder clearInviteObsolete()
      {
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.inviteObsolete_ = false;
        return this;
      }

      public final Builder clearRequestError()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.requestError_ = Client.HangoutInviteReplyResponse.getDefaultInstance().getRequestError();
        return this;
      }

      public final Builder clearStatus()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.status_ = Data.ResponseStatus.OK;
        return this;
      }

      public final Client.HangoutInviteReplyResponse getDefaultInstanceForType()
      {
        return Client.HangoutInviteReplyResponse.getDefaultInstance();
      }

      public final boolean getInviteObsolete()
      {
        return this.inviteObsolete_;
      }

      public final String getRequestError()
      {
        Object localObject = this.requestError_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.requestError_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final Data.ResponseStatus getStatus()
      {
        return this.status_;
      }

      public final boolean hasInviteObsolete()
      {
        if ((0x4 & this.bitField0_) == 4);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasRequestError()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasStatus()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Client.HangoutInviteReplyResponse paramHangoutInviteReplyResponse)
      {
        if (paramHangoutInviteReplyResponse == Client.HangoutInviteReplyResponse.getDefaultInstance());
        while (true)
        {
          return this;
          if (paramHangoutInviteReplyResponse.hasStatus())
            setStatus(paramHangoutInviteReplyResponse.getStatus());
          if (paramHangoutInviteReplyResponse.hasRequestError())
            setRequestError(paramHangoutInviteReplyResponse.getRequestError());
          if (paramHangoutInviteReplyResponse.hasInviteObsolete())
            setInviteObsolete(paramHangoutInviteReplyResponse.getInviteObsolete());
        }
      }

      public final Builder setInviteObsolete(boolean paramBoolean)
      {
        this.bitField0_ = (0x4 | this.bitField0_);
        this.inviteObsolete_ = paramBoolean;
        return this;
      }

      public final Builder setRequestError(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x2 | this.bitField0_);
        this.requestError_ = paramString;
        return this;
      }

      public final Builder setStatus(Data.ResponseStatus paramResponseStatus)
      {
        if (paramResponseStatus == null)
          throw new NullPointerException();
        this.bitField0_ = (0x1 | this.bitField0_);
        this.status_ = paramResponseStatus;
        return this;
      }
    }
  }

  public static abstract interface HangoutInviteReplyResponseOrBuilder extends MessageLiteOrBuilder
  {
    public abstract boolean getInviteObsolete();

    public abstract String getRequestError();

    public abstract Data.ResponseStatus getStatus();

    public abstract boolean hasInviteObsolete();

    public abstract boolean hasRequestError();

    public abstract boolean hasStatus();
  }

  public static final class HangoutInviteRequest extends GeneratedMessageLite
    implements Client.HangoutInviteRequestOrBuilder
  {
    private static final HangoutInviteRequest defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private Object inviteClientId_;
    private Object inviterJid_;
    private Object inviterMucJid_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private Object participantId_;
    private Data.StubbyInfo stubbyInfo_;

    static
    {
      HangoutInviteRequest localHangoutInviteRequest = new HangoutInviteRequest();
      defaultInstance = localHangoutInviteRequest;
      localHangoutInviteRequest.inviteClientId_ = "";
      localHangoutInviteRequest.participantId_ = "";
      localHangoutInviteRequest.inviterMucJid_ = "";
      localHangoutInviteRequest.inviterJid_ = "";
      localHangoutInviteRequest.stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
    }

    private HangoutInviteRequest()
    {
    }

    private HangoutInviteRequest(Builder paramBuilder)
    {
      super();
    }

    public static HangoutInviteRequest getDefaultInstance()
    {
      return defaultInstance;
    }

    private ByteString getInviteClientIdBytes()
    {
      Object localObject = this.inviteClientId_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.inviteClientId_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    private ByteString getInviterJidBytes()
    {
      Object localObject = this.inviterJid_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.inviterJid_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    private ByteString getInviterMucJidBytes()
    {
      Object localObject = this.inviterMucJid_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.inviterMucJid_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    private ByteString getParticipantIdBytes()
    {
      Object localObject = this.participantId_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.participantId_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static Builder newBuilder()
    {
      return Builder.access$58500();
    }

    public static Builder newBuilder(HangoutInviteRequest paramHangoutInviteRequest)
    {
      return Builder.access$58500().mergeFrom(paramHangoutInviteRequest);
    }

    public final HangoutInviteRequest getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final String getInviteClientId()
    {
      Object localObject1 = this.inviteClientId_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.inviteClientId_ = str;
      }
    }

    public final String getInviterJid()
    {
      Object localObject1 = this.inviterJid_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.inviterJid_ = str;
      }
    }

    public final String getInviterMucJid()
    {
      Object localObject1 = this.inviterMucJid_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.inviterMucJid_ = str;
      }
    }

    public final String getParticipantId()
    {
      Object localObject1 = this.participantId_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.participantId_ = str;
      }
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeBytesSize(1, getInviteClientIdBytes());
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeBytesSize(2, getParticipantIdBytes());
        if ((0x4 & this.bitField0_) == 4)
          k += CodedOutputStream.computeBytesSize(3, getInviterMucJidBytes());
        if ((0x10 & this.bitField0_) == 16)
          k += CodedOutputStream.computeMessageSize(4, this.stubbyInfo_);
        if ((0x8 & this.bitField0_) == 8)
          k += CodedOutputStream.computeBytesSize(5, getInviterJidBytes());
        this.memoizedSerializedSize = k;
      }
    }

    public final Data.StubbyInfo getStubbyInfo()
    {
      return this.stubbyInfo_;
    }

    public final boolean hasInviteClientId()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean hasInviterJid()
    {
      if ((0x8 & this.bitField0_) == 8);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasInviterMucJid()
    {
      if ((0x4 & this.bitField0_) == 4);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasParticipantId()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasStubbyInfo()
    {
      if ((0x10 & this.bitField0_) == 16);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeBytes(1, getInviteClientIdBytes());
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeBytes(2, getParticipantIdBytes());
      if ((0x4 & this.bitField0_) == 4)
        paramCodedOutputStream.writeBytes(3, getInviterMucJidBytes());
      if ((0x10 & this.bitField0_) == 16)
        paramCodedOutputStream.writeMessage(4, this.stubbyInfo_);
      if ((0x8 & this.bitField0_) == 8)
        paramCodedOutputStream.writeBytes(5, getInviterJidBytes());
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Client.HangoutInviteRequest, Builder>
      implements Client.HangoutInviteRequestOrBuilder
    {
      private int bitField0_;
      private Object inviteClientId_ = "";
      private Object inviterJid_ = "";
      private Object inviterMucJid_ = "";
      private Object participantId_ = "";
      private Data.StubbyInfo stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 10:
            this.bitField0_ = (0x1 | this.bitField0_);
            this.inviteClientId_ = paramCodedInputStream.readBytes();
            break;
          case 18:
            this.bitField0_ = (0x2 | this.bitField0_);
            this.participantId_ = paramCodedInputStream.readBytes();
            break;
          case 26:
            this.bitField0_ = (0x4 | this.bitField0_);
            this.inviterMucJid_ = paramCodedInputStream.readBytes();
            break;
          case 34:
            Data.StubbyInfo.Builder localBuilder = Data.StubbyInfo.newBuilder();
            if (hasStubbyInfo())
              localBuilder.mergeFrom(getStubbyInfo());
            paramCodedInputStream.readMessage(localBuilder, paramExtensionRegistryLite);
            setStubbyInfo(localBuilder.buildPartial());
            break;
          case 42:
          }
          this.bitField0_ = (0x8 | this.bitField0_);
          this.inviterJid_ = paramCodedInputStream.readBytes();
        }
      }

      public final Client.HangoutInviteRequest build()
      {
        Client.HangoutInviteRequest localHangoutInviteRequest = buildPartial();
        if (!localHangoutInviteRequest.isInitialized())
          throw new UninitializedMessageException();
        return localHangoutInviteRequest;
      }

      public final Client.HangoutInviteRequest buildPartial()
      {
        Client.HangoutInviteRequest localHangoutInviteRequest = new Client.HangoutInviteRequest(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Client.HangoutInviteRequest.access$58702(localHangoutInviteRequest, this.inviteClientId_);
        if ((i & 0x2) == 2)
          k |= 2;
        Client.HangoutInviteRequest.access$58802(localHangoutInviteRequest, this.participantId_);
        if ((i & 0x4) == 4)
          k |= 4;
        Client.HangoutInviteRequest.access$58902(localHangoutInviteRequest, this.inviterMucJid_);
        if ((i & 0x8) == 8)
          k |= 8;
        Client.HangoutInviteRequest.access$59002(localHangoutInviteRequest, this.inviterJid_);
        if ((i & 0x10) == 16)
          k |= 16;
        Client.HangoutInviteRequest.access$59102(localHangoutInviteRequest, this.stubbyInfo_);
        Client.HangoutInviteRequest.access$59202(localHangoutInviteRequest, k);
        return localHangoutInviteRequest;
      }

      public final Builder clear()
      {
        super.clear();
        this.inviteClientId_ = "";
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.participantId_ = "";
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.inviterMucJid_ = "";
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.inviterJid_ = "";
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        this.stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        return this;
      }

      public final Builder clearInviteClientId()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.inviteClientId_ = Client.HangoutInviteRequest.getDefaultInstance().getInviteClientId();
        return this;
      }

      public final Builder clearInviterJid()
      {
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        this.inviterJid_ = Client.HangoutInviteRequest.getDefaultInstance().getInviterJid();
        return this;
      }

      public final Builder clearInviterMucJid()
      {
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.inviterMucJid_ = Client.HangoutInviteRequest.getDefaultInstance().getInviterMucJid();
        return this;
      }

      public final Builder clearParticipantId()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.participantId_ = Client.HangoutInviteRequest.getDefaultInstance().getParticipantId();
        return this;
      }

      public final Builder clearStubbyInfo()
      {
        this.stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        return this;
      }

      public final Client.HangoutInviteRequest getDefaultInstanceForType()
      {
        return Client.HangoutInviteRequest.getDefaultInstance();
      }

      public final String getInviteClientId()
      {
        Object localObject = this.inviteClientId_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.inviteClientId_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final String getInviterJid()
      {
        Object localObject = this.inviterJid_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.inviterJid_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final String getInviterMucJid()
      {
        Object localObject = this.inviterMucJid_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.inviterMucJid_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final String getParticipantId()
      {
        Object localObject = this.participantId_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.participantId_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final Data.StubbyInfo getStubbyInfo()
      {
        return this.stubbyInfo_;
      }

      public final boolean hasInviteClientId()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean hasInviterJid()
      {
        if ((0x8 & this.bitField0_) == 8);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasInviterMucJid()
      {
        if ((0x4 & this.bitField0_) == 4);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasParticipantId()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasStubbyInfo()
      {
        if ((0x10 & this.bitField0_) == 16);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Client.HangoutInviteRequest paramHangoutInviteRequest)
      {
        if (paramHangoutInviteRequest == Client.HangoutInviteRequest.getDefaultInstance());
        do
        {
          return this;
          if (paramHangoutInviteRequest.hasInviteClientId())
            setInviteClientId(paramHangoutInviteRequest.getInviteClientId());
          if (paramHangoutInviteRequest.hasParticipantId())
            setParticipantId(paramHangoutInviteRequest.getParticipantId());
          if (paramHangoutInviteRequest.hasInviterMucJid())
            setInviterMucJid(paramHangoutInviteRequest.getInviterMucJid());
          if (paramHangoutInviteRequest.hasInviterJid())
            setInviterJid(paramHangoutInviteRequest.getInviterJid());
        }
        while (!paramHangoutInviteRequest.hasStubbyInfo());
        Data.StubbyInfo localStubbyInfo = paramHangoutInviteRequest.getStubbyInfo();
        if (((0x10 & this.bitField0_) == 16) && (this.stubbyInfo_ != Data.StubbyInfo.getDefaultInstance()));
        for (this.stubbyInfo_ = Data.StubbyInfo.newBuilder(this.stubbyInfo_).mergeFrom(localStubbyInfo).buildPartial(); ; this.stubbyInfo_ = localStubbyInfo)
        {
          this.bitField0_ = (0x10 | this.bitField0_);
          break;
        }
      }

      public final Builder setInviteClientId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x1 | this.bitField0_);
        this.inviteClientId_ = paramString;
        return this;
      }

      public final Builder setInviterJid(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x8 | this.bitField0_);
        this.inviterJid_ = paramString;
        return this;
      }

      public final Builder setInviterMucJid(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x4 | this.bitField0_);
        this.inviterMucJid_ = paramString;
        return this;
      }

      public final Builder setParticipantId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x2 | this.bitField0_);
        this.participantId_ = paramString;
        return this;
      }

      public final Builder setStubbyInfo(Data.StubbyInfo.Builder paramBuilder)
      {
        this.stubbyInfo_ = paramBuilder.build();
        this.bitField0_ = (0x10 | this.bitField0_);
        return this;
      }

      public final Builder setStubbyInfo(Data.StubbyInfo paramStubbyInfo)
      {
        if (paramStubbyInfo == null)
          throw new NullPointerException();
        this.stubbyInfo_ = paramStubbyInfo;
        this.bitField0_ = (0x10 | this.bitField0_);
        return this;
      }
    }
  }

  public static abstract interface HangoutInviteRequestOrBuilder extends MessageLiteOrBuilder
  {
    public abstract String getInviteClientId();

    public abstract String getInviterJid();

    public abstract String getInviterMucJid();

    public abstract String getParticipantId();

    public abstract Data.StubbyInfo getStubbyInfo();

    public abstract boolean hasInviteClientId();

    public abstract boolean hasInviterJid();

    public abstract boolean hasInviterMucJid();

    public abstract boolean hasParticipantId();

    public abstract boolean hasStubbyInfo();
  }

  public static final class HangoutInviteResponse extends GeneratedMessageLite
    implements Client.HangoutInviteResponseOrBuilder
  {
    private static final HangoutInviteResponse defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private Object inviteId_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private Object requestError_;
    private Data.ResponseStatus status_;

    static
    {
      HangoutInviteResponse localHangoutInviteResponse = new HangoutInviteResponse();
      defaultInstance = localHangoutInviteResponse;
      localHangoutInviteResponse.status_ = Data.ResponseStatus.OK;
      localHangoutInviteResponse.inviteId_ = "";
      localHangoutInviteResponse.requestError_ = "";
    }

    private HangoutInviteResponse()
    {
    }

    private HangoutInviteResponse(Builder paramBuilder)
    {
      super();
    }

    public static HangoutInviteResponse getDefaultInstance()
    {
      return defaultInstance;
    }

    private ByteString getInviteIdBytes()
    {
      Object localObject = this.inviteId_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.inviteId_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    private ByteString getRequestErrorBytes()
    {
      Object localObject = this.requestError_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.requestError_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static Builder newBuilder()
    {
      return Builder.access$59400();
    }

    public static Builder newBuilder(HangoutInviteResponse paramHangoutInviteResponse)
    {
      return Builder.access$59400().mergeFrom(paramHangoutInviteResponse);
    }

    public final HangoutInviteResponse getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final String getInviteId()
    {
      Object localObject1 = this.inviteId_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.inviteId_ = str;
      }
    }

    public final String getRequestError()
    {
      Object localObject1 = this.requestError_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.requestError_ = str;
      }
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeEnumSize(1, this.status_.getNumber());
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeBytesSize(2, getInviteIdBytes());
        if ((0x4 & this.bitField0_) == 4)
          k += CodedOutputStream.computeBytesSize(3, getRequestErrorBytes());
        this.memoizedSerializedSize = k;
      }
    }

    public final Data.ResponseStatus getStatus()
    {
      return this.status_;
    }

    public final boolean hasInviteId()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasRequestError()
    {
      if ((0x4 & this.bitField0_) == 4);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasStatus()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeEnum(1, this.status_.getNumber());
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeBytes(2, getInviteIdBytes());
      if ((0x4 & this.bitField0_) == 4)
        paramCodedOutputStream.writeBytes(3, getRequestErrorBytes());
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Client.HangoutInviteResponse, Builder>
      implements Client.HangoutInviteResponseOrBuilder
    {
      private int bitField0_;
      private Object inviteId_ = "";
      private Object requestError_ = "";
      private Data.ResponseStatus status_ = Data.ResponseStatus.OK;

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 8:
            Data.ResponseStatus localResponseStatus = Data.ResponseStatus.valueOf(paramCodedInputStream.readEnum());
            if (localResponseStatus == null)
              continue;
            this.bitField0_ = (0x1 | this.bitField0_);
            this.status_ = localResponseStatus;
            break;
          case 18:
            this.bitField0_ = (0x2 | this.bitField0_);
            this.inviteId_ = paramCodedInputStream.readBytes();
            break;
          case 26:
          }
          this.bitField0_ = (0x4 | this.bitField0_);
          this.requestError_ = paramCodedInputStream.readBytes();
        }
      }

      public final Client.HangoutInviteResponse build()
      {
        Client.HangoutInviteResponse localHangoutInviteResponse = buildPartial();
        if (!localHangoutInviteResponse.isInitialized())
          throw new UninitializedMessageException();
        return localHangoutInviteResponse;
      }

      public final Client.HangoutInviteResponse buildPartial()
      {
        Client.HangoutInviteResponse localHangoutInviteResponse = new Client.HangoutInviteResponse(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Client.HangoutInviteResponse.access$59602(localHangoutInviteResponse, this.status_);
        if ((i & 0x2) == 2)
          k |= 2;
        Client.HangoutInviteResponse.access$59702(localHangoutInviteResponse, this.inviteId_);
        if ((i & 0x4) == 4)
          k |= 4;
        Client.HangoutInviteResponse.access$59802(localHangoutInviteResponse, this.requestError_);
        Client.HangoutInviteResponse.access$59902(localHangoutInviteResponse, k);
        return localHangoutInviteResponse;
      }

      public final Builder clear()
      {
        super.clear();
        this.status_ = Data.ResponseStatus.OK;
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.inviteId_ = "";
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.requestError_ = "";
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        return this;
      }

      public final Builder clearInviteId()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.inviteId_ = Client.HangoutInviteResponse.getDefaultInstance().getInviteId();
        return this;
      }

      public final Builder clearRequestError()
      {
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.requestError_ = Client.HangoutInviteResponse.getDefaultInstance().getRequestError();
        return this;
      }

      public final Builder clearStatus()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.status_ = Data.ResponseStatus.OK;
        return this;
      }

      public final Client.HangoutInviteResponse getDefaultInstanceForType()
      {
        return Client.HangoutInviteResponse.getDefaultInstance();
      }

      public final String getInviteId()
      {
        Object localObject = this.inviteId_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.inviteId_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final String getRequestError()
      {
        Object localObject = this.requestError_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.requestError_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final Data.ResponseStatus getStatus()
      {
        return this.status_;
      }

      public final boolean hasInviteId()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasRequestError()
      {
        if ((0x4 & this.bitField0_) == 4);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasStatus()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Client.HangoutInviteResponse paramHangoutInviteResponse)
      {
        if (paramHangoutInviteResponse == Client.HangoutInviteResponse.getDefaultInstance());
        while (true)
        {
          return this;
          if (paramHangoutInviteResponse.hasStatus())
            setStatus(paramHangoutInviteResponse.getStatus());
          if (paramHangoutInviteResponse.hasInviteId())
            setInviteId(paramHangoutInviteResponse.getInviteId());
          if (paramHangoutInviteResponse.hasRequestError())
            setRequestError(paramHangoutInviteResponse.getRequestError());
        }
      }

      public final Builder setInviteId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x2 | this.bitField0_);
        this.inviteId_ = paramString;
        return this;
      }

      public final Builder setRequestError(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x4 | this.bitField0_);
        this.requestError_ = paramString;
        return this;
      }

      public final Builder setStatus(Data.ResponseStatus paramResponseStatus)
      {
        if (paramResponseStatus == null)
          throw new NullPointerException();
        this.bitField0_ = (0x1 | this.bitField0_);
        this.status_ = paramResponseStatus;
        return this;
      }
    }
  }

  public static abstract interface HangoutInviteResponseOrBuilder extends MessageLiteOrBuilder
  {
    public abstract String getInviteId();

    public abstract String getRequestError();

    public abstract Data.ResponseStatus getStatus();

    public abstract boolean hasInviteId();

    public abstract boolean hasRequestError();

    public abstract boolean hasStatus();
  }

  public static final class HangoutRingFinishRequest extends GeneratedMessageLite
    implements Client.HangoutRingFinishRequestOrBuilder
  {
    private static final HangoutRingFinishRequest defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private Object hangoutId_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private RingStatus ringStatus_;
    private Data.StubbyInfo stubbyInfo_;

    static
    {
      HangoutRingFinishRequest localHangoutRingFinishRequest = new HangoutRingFinishRequest();
      defaultInstance = localHangoutRingFinishRequest;
      localHangoutRingFinishRequest.hangoutId_ = "";
      localHangoutRingFinishRequest.ringStatus_ = RingStatus.TIMEOUT;
      localHangoutRingFinishRequest.stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
    }

    private HangoutRingFinishRequest()
    {
    }

    private HangoutRingFinishRequest(Builder paramBuilder)
    {
      super();
    }

    public static HangoutRingFinishRequest getDefaultInstance()
    {
      return defaultInstance;
    }

    private ByteString getHangoutIdBytes()
    {
      Object localObject = this.hangoutId_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.hangoutId_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static Builder newBuilder()
    {
      return Builder.access$57200();
    }

    public static Builder newBuilder(HangoutRingFinishRequest paramHangoutRingFinishRequest)
    {
      return Builder.access$57200().mergeFrom(paramHangoutRingFinishRequest);
    }

    public final HangoutRingFinishRequest getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final String getHangoutId()
    {
      Object localObject1 = this.hangoutId_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.hangoutId_ = str;
      }
    }

    public final RingStatus getRingStatus()
    {
      return this.ringStatus_;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeBytesSize(1, getHangoutIdBytes());
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeEnumSize(2, this.ringStatus_.getNumber());
        if ((0x4 & this.bitField0_) == 4)
          k += CodedOutputStream.computeMessageSize(3, this.stubbyInfo_);
        this.memoizedSerializedSize = k;
      }
    }

    public final Data.StubbyInfo getStubbyInfo()
    {
      return this.stubbyInfo_;
    }

    public final boolean hasHangoutId()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean hasRingStatus()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasStubbyInfo()
    {
      if ((0x4 & this.bitField0_) == 4);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeBytes(1, getHangoutIdBytes());
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeEnum(2, this.ringStatus_.getNumber());
      if ((0x4 & this.bitField0_) == 4)
        paramCodedOutputStream.writeMessage(3, this.stubbyInfo_);
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Client.HangoutRingFinishRequest, Builder>
      implements Client.HangoutRingFinishRequestOrBuilder
    {
      private int bitField0_;
      private Object hangoutId_ = "";
      private Client.HangoutRingFinishRequest.RingStatus ringStatus_ = Client.HangoutRingFinishRequest.RingStatus.TIMEOUT;
      private Data.StubbyInfo stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 10:
            this.bitField0_ = (0x1 | this.bitField0_);
            this.hangoutId_ = paramCodedInputStream.readBytes();
            break;
          case 16:
            Client.HangoutRingFinishRequest.RingStatus localRingStatus = Client.HangoutRingFinishRequest.RingStatus.valueOf(paramCodedInputStream.readEnum());
            if (localRingStatus == null)
              continue;
            this.bitField0_ = (0x2 | this.bitField0_);
            this.ringStatus_ = localRingStatus;
            break;
          case 26:
          }
          Data.StubbyInfo.Builder localBuilder = Data.StubbyInfo.newBuilder();
          if (hasStubbyInfo())
            localBuilder.mergeFrom(getStubbyInfo());
          paramCodedInputStream.readMessage(localBuilder, paramExtensionRegistryLite);
          setStubbyInfo(localBuilder.buildPartial());
        }
      }

      public final Client.HangoutRingFinishRequest build()
      {
        Client.HangoutRingFinishRequest localHangoutRingFinishRequest = buildPartial();
        if (!localHangoutRingFinishRequest.isInitialized())
          throw new UninitializedMessageException();
        return localHangoutRingFinishRequest;
      }

      public final Client.HangoutRingFinishRequest buildPartial()
      {
        Client.HangoutRingFinishRequest localHangoutRingFinishRequest = new Client.HangoutRingFinishRequest(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Client.HangoutRingFinishRequest.access$57402(localHangoutRingFinishRequest, this.hangoutId_);
        if ((i & 0x2) == 2)
          k |= 2;
        Client.HangoutRingFinishRequest.access$57502(localHangoutRingFinishRequest, this.ringStatus_);
        if ((i & 0x4) == 4)
          k |= 4;
        Client.HangoutRingFinishRequest.access$57602(localHangoutRingFinishRequest, this.stubbyInfo_);
        Client.HangoutRingFinishRequest.access$57702(localHangoutRingFinishRequest, k);
        return localHangoutRingFinishRequest;
      }

      public final Builder clear()
      {
        super.clear();
        this.hangoutId_ = "";
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.ringStatus_ = Client.HangoutRingFinishRequest.RingStatus.TIMEOUT;
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        return this;
      }

      public final Builder clearHangoutId()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.hangoutId_ = Client.HangoutRingFinishRequest.getDefaultInstance().getHangoutId();
        return this;
      }

      public final Builder clearRingStatus()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.ringStatus_ = Client.HangoutRingFinishRequest.RingStatus.TIMEOUT;
        return this;
      }

      public final Builder clearStubbyInfo()
      {
        this.stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        return this;
      }

      public final Client.HangoutRingFinishRequest getDefaultInstanceForType()
      {
        return Client.HangoutRingFinishRequest.getDefaultInstance();
      }

      public final String getHangoutId()
      {
        Object localObject = this.hangoutId_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.hangoutId_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final Client.HangoutRingFinishRequest.RingStatus getRingStatus()
      {
        return this.ringStatus_;
      }

      public final Data.StubbyInfo getStubbyInfo()
      {
        return this.stubbyInfo_;
      }

      public final boolean hasHangoutId()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean hasRingStatus()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasStubbyInfo()
      {
        if ((0x4 & this.bitField0_) == 4);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Client.HangoutRingFinishRequest paramHangoutRingFinishRequest)
      {
        if (paramHangoutRingFinishRequest == Client.HangoutRingFinishRequest.getDefaultInstance());
        do
        {
          return this;
          if (paramHangoutRingFinishRequest.hasHangoutId())
            setHangoutId(paramHangoutRingFinishRequest.getHangoutId());
          if (paramHangoutRingFinishRequest.hasRingStatus())
            setRingStatus(paramHangoutRingFinishRequest.getRingStatus());
        }
        while (!paramHangoutRingFinishRequest.hasStubbyInfo());
        Data.StubbyInfo localStubbyInfo = paramHangoutRingFinishRequest.getStubbyInfo();
        if (((0x4 & this.bitField0_) == 4) && (this.stubbyInfo_ != Data.StubbyInfo.getDefaultInstance()));
        for (this.stubbyInfo_ = Data.StubbyInfo.newBuilder(this.stubbyInfo_).mergeFrom(localStubbyInfo).buildPartial(); ; this.stubbyInfo_ = localStubbyInfo)
        {
          this.bitField0_ = (0x4 | this.bitField0_);
          break;
        }
      }

      public final Builder setHangoutId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x1 | this.bitField0_);
        this.hangoutId_ = paramString;
        return this;
      }

      public final Builder setRingStatus(Client.HangoutRingFinishRequest.RingStatus paramRingStatus)
      {
        if (paramRingStatus == null)
          throw new NullPointerException();
        this.bitField0_ = (0x2 | this.bitField0_);
        this.ringStatus_ = paramRingStatus;
        return this;
      }

      public final Builder setStubbyInfo(Data.StubbyInfo.Builder paramBuilder)
      {
        this.stubbyInfo_ = paramBuilder.build();
        this.bitField0_ = (0x4 | this.bitField0_);
        return this;
      }

      public final Builder setStubbyInfo(Data.StubbyInfo paramStubbyInfo)
      {
        if (paramStubbyInfo == null)
          throw new NullPointerException();
        this.stubbyInfo_ = paramStubbyInfo;
        this.bitField0_ = (0x4 | this.bitField0_);
        return this;
      }
    }

    public static enum RingStatus
      implements Internal.EnumLite
    {
      private static Internal.EnumLiteMap<RingStatus> internalValueMap = new Internal.EnumLiteMap()
      {
      };
      private final int value;

      static
      {
        ACCEPTED = new RingStatus("ACCEPTED", 1, 1);
        DECLINED = new RingStatus("DECLINED", 2, 2);
        RingStatus[] arrayOfRingStatus = new RingStatus[3];
        arrayOfRingStatus[0] = TIMEOUT;
        arrayOfRingStatus[1] = ACCEPTED;
        arrayOfRingStatus[2] = DECLINED;
      }

      private RingStatus(int paramInt1, int paramInt2)
      {
        this.value = paramInt1;
      }

      public static RingStatus valueOf(int paramInt)
      {
        RingStatus localRingStatus;
        switch (paramInt)
        {
        default:
          localRingStatus = null;
        case 0:
        case 1:
        case 2:
        }
        while (true)
        {
          return localRingStatus;
          localRingStatus = TIMEOUT;
          continue;
          localRingStatus = ACCEPTED;
          continue;
          localRingStatus = DECLINED;
        }
      }

      public final int getNumber()
      {
        return this.value;
      }
    }
  }

  public static abstract interface HangoutRingFinishRequestOrBuilder extends MessageLiteOrBuilder
  {
    public abstract String getHangoutId();

    public abstract Client.HangoutRingFinishRequest.RingStatus getRingStatus();

    public abstract Data.StubbyInfo getStubbyInfo();

    public abstract boolean hasHangoutId();

    public abstract boolean hasRingStatus();

    public abstract boolean hasStubbyInfo();
  }

  public static final class HangoutRingFinishResponse extends GeneratedMessageLite
    implements Client.HangoutRingFinishResponseOrBuilder
  {
    private static final HangoutRingFinishResponse defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private Object requestError_;
    private Data.ResponseStatus status_;

    static
    {
      HangoutRingFinishResponse localHangoutRingFinishResponse = new HangoutRingFinishResponse();
      defaultInstance = localHangoutRingFinishResponse;
      localHangoutRingFinishResponse.status_ = Data.ResponseStatus.OK;
      localHangoutRingFinishResponse.requestError_ = "";
    }

    private HangoutRingFinishResponse()
    {
    }

    private HangoutRingFinishResponse(Builder paramBuilder)
    {
      super();
    }

    public static HangoutRingFinishResponse getDefaultInstance()
    {
      return defaultInstance;
    }

    private ByteString getRequestErrorBytes()
    {
      Object localObject = this.requestError_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.requestError_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static Builder newBuilder()
    {
      return Builder.access$57900();
    }

    public static Builder newBuilder(HangoutRingFinishResponse paramHangoutRingFinishResponse)
    {
      return Builder.access$57900().mergeFrom(paramHangoutRingFinishResponse);
    }

    public final HangoutRingFinishResponse getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final String getRequestError()
    {
      Object localObject1 = this.requestError_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.requestError_ = str;
      }
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeEnumSize(1, this.status_.getNumber());
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeBytesSize(2, getRequestErrorBytes());
        this.memoizedSerializedSize = k;
      }
    }

    public final Data.ResponseStatus getStatus()
    {
      return this.status_;
    }

    public final boolean hasRequestError()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasStatus()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeEnum(1, this.status_.getNumber());
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeBytes(2, getRequestErrorBytes());
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Client.HangoutRingFinishResponse, Builder>
      implements Client.HangoutRingFinishResponseOrBuilder
    {
      private int bitField0_;
      private Object requestError_ = "";
      private Data.ResponseStatus status_ = Data.ResponseStatus.OK;

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 8:
            Data.ResponseStatus localResponseStatus = Data.ResponseStatus.valueOf(paramCodedInputStream.readEnum());
            if (localResponseStatus == null)
              continue;
            this.bitField0_ = (0x1 | this.bitField0_);
            this.status_ = localResponseStatus;
            break;
          case 18:
          }
          this.bitField0_ = (0x2 | this.bitField0_);
          this.requestError_ = paramCodedInputStream.readBytes();
        }
      }

      public final Client.HangoutRingFinishResponse build()
      {
        Client.HangoutRingFinishResponse localHangoutRingFinishResponse = buildPartial();
        if (!localHangoutRingFinishResponse.isInitialized())
          throw new UninitializedMessageException();
        return localHangoutRingFinishResponse;
      }

      public final Client.HangoutRingFinishResponse buildPartial()
      {
        Client.HangoutRingFinishResponse localHangoutRingFinishResponse = new Client.HangoutRingFinishResponse(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Client.HangoutRingFinishResponse.access$58102(localHangoutRingFinishResponse, this.status_);
        if ((i & 0x2) == 2)
          k |= 2;
        Client.HangoutRingFinishResponse.access$58202(localHangoutRingFinishResponse, this.requestError_);
        Client.HangoutRingFinishResponse.access$58302(localHangoutRingFinishResponse, k);
        return localHangoutRingFinishResponse;
      }

      public final Builder clear()
      {
        super.clear();
        this.status_ = Data.ResponseStatus.OK;
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.requestError_ = "";
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        return this;
      }

      public final Builder clearRequestError()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.requestError_ = Client.HangoutRingFinishResponse.getDefaultInstance().getRequestError();
        return this;
      }

      public final Builder clearStatus()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.status_ = Data.ResponseStatus.OK;
        return this;
      }

      public final Client.HangoutRingFinishResponse getDefaultInstanceForType()
      {
        return Client.HangoutRingFinishResponse.getDefaultInstance();
      }

      public final String getRequestError()
      {
        Object localObject = this.requestError_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.requestError_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final Data.ResponseStatus getStatus()
      {
        return this.status_;
      }

      public final boolean hasRequestError()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasStatus()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Client.HangoutRingFinishResponse paramHangoutRingFinishResponse)
      {
        if (paramHangoutRingFinishResponse == Client.HangoutRingFinishResponse.getDefaultInstance());
        while (true)
        {
          return this;
          if (paramHangoutRingFinishResponse.hasStatus())
            setStatus(paramHangoutRingFinishResponse.getStatus());
          if (paramHangoutRingFinishResponse.hasRequestError())
            setRequestError(paramHangoutRingFinishResponse.getRequestError());
        }
      }

      public final Builder setRequestError(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x2 | this.bitField0_);
        this.requestError_ = paramString;
        return this;
      }

      public final Builder setStatus(Data.ResponseStatus paramResponseStatus)
      {
        if (paramResponseStatus == null)
          throw new NullPointerException();
        this.bitField0_ = (0x1 | this.bitField0_);
        this.status_ = paramResponseStatus;
        return this;
      }
    }
  }

  public static abstract interface HangoutRingFinishResponseOrBuilder extends MessageLiteOrBuilder
  {
    public abstract String getRequestError();

    public abstract Data.ResponseStatus getStatus();

    public abstract boolean hasRequestError();

    public abstract boolean hasStatus();
  }

  public static final class InvalidateLocalCache extends GeneratedMessageLite
    implements Client.InvalidateLocalCacheOrBuilder
  {
    private static final InvalidateLocalCache defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private int version_;

    static
    {
      InvalidateLocalCache localInvalidateLocalCache = new InvalidateLocalCache();
      defaultInstance = localInvalidateLocalCache;
      localInvalidateLocalCache.version_ = 0;
    }

    private InvalidateLocalCache()
    {
    }

    private InvalidateLocalCache(Builder paramBuilder)
    {
      super();
    }

    public static InvalidateLocalCache getDefaultInstance()
    {
      return defaultInstance;
    }

    public static Builder newBuilder()
    {
      return Builder.access$47300();
    }

    public static Builder newBuilder(InvalidateLocalCache paramInvalidateLocalCache)
    {
      return Builder.access$47300().mergeFrom(paramInvalidateLocalCache);
    }

    public final InvalidateLocalCache getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeInt32Size(1, this.version_);
        this.memoizedSerializedSize = k;
      }
    }

    public final int getVersion()
    {
      return this.version_;
    }

    public final boolean hasVersion()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeInt32(1, this.version_);
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Client.InvalidateLocalCache, Builder>
      implements Client.InvalidateLocalCacheOrBuilder
    {
      private int bitField0_;
      private int version_;

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 8:
          }
          this.bitField0_ = (0x1 | this.bitField0_);
          this.version_ = paramCodedInputStream.readInt32();
        }
      }

      public final Client.InvalidateLocalCache build()
      {
        Client.InvalidateLocalCache localInvalidateLocalCache = buildPartial();
        if (!localInvalidateLocalCache.isInitialized())
          throw new UninitializedMessageException();
        return localInvalidateLocalCache;
      }

      public final Client.InvalidateLocalCache buildPartial()
      {
        Client.InvalidateLocalCache localInvalidateLocalCache = new Client.InvalidateLocalCache(this, (byte)0);
        int i = 0x1 & this.bitField0_;
        int j = 0;
        if (i == 1)
          j = 1;
        Client.InvalidateLocalCache.access$47502(localInvalidateLocalCache, this.version_);
        Client.InvalidateLocalCache.access$47602(localInvalidateLocalCache, j);
        return localInvalidateLocalCache;
      }

      public final Builder clear()
      {
        super.clear();
        this.version_ = 0;
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        return this;
      }

      public final Builder clearVersion()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.version_ = 0;
        return this;
      }

      public final Client.InvalidateLocalCache getDefaultInstanceForType()
      {
        return Client.InvalidateLocalCache.getDefaultInstance();
      }

      public final int getVersion()
      {
        return this.version_;
      }

      public final boolean hasVersion()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Client.InvalidateLocalCache paramInvalidateLocalCache)
      {
        if (paramInvalidateLocalCache == Client.InvalidateLocalCache.getDefaultInstance());
        while (true)
        {
          return this;
          if (paramInvalidateLocalCache.hasVersion())
            setVersion(paramInvalidateLocalCache.getVersion());
        }
      }

      public final Builder setVersion(int paramInt)
      {
        this.bitField0_ = (0x1 | this.bitField0_);
        this.version_ = paramInt;
        return this;
      }
    }
  }

  public static abstract interface InvalidateLocalCacheOrBuilder extends MessageLiteOrBuilder
  {
    public abstract int getVersion();

    public abstract boolean hasVersion();
  }

  public static final class InviteRequest extends GeneratedMessageLite
    implements Client.InviteRequestOrBuilder
  {
    private static final InviteRequest defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private Object conversationId_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private List<Data.Participant> participant_;
    private Object senderId_;
    private Data.StubbyInfo stubbyInfo_;

    static
    {
      InviteRequest localInviteRequest = new InviteRequest();
      defaultInstance = localInviteRequest;
      localInviteRequest.conversationId_ = "";
      localInviteRequest.participant_ = Collections.emptyList();
      localInviteRequest.stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
      localInviteRequest.senderId_ = "";
    }

    private InviteRequest()
    {
    }

    private InviteRequest(Builder paramBuilder)
    {
      super();
    }

    private ByteString getConversationIdBytes()
    {
      Object localObject = this.conversationId_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.conversationId_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static InviteRequest getDefaultInstance()
    {
      return defaultInstance;
    }

    private ByteString getSenderIdBytes()
    {
      Object localObject = this.senderId_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.senderId_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static Builder newBuilder()
    {
      return Builder.access$25500();
    }

    public static Builder newBuilder(InviteRequest paramInviteRequest)
    {
      return Builder.access$25500().mergeFrom(paramInviteRequest);
    }

    public final String getConversationId()
    {
      Object localObject1 = this.conversationId_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.conversationId_ = str;
      }
    }

    public final InviteRequest getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final Data.Participant getParticipant(int paramInt)
    {
      return (Data.Participant)this.participant_.get(paramInt);
    }

    public final int getParticipantCount()
    {
      return this.participant_.size();
    }

    public final List<Data.Participant> getParticipantList()
    {
      return this.participant_;
    }

    public final Data.ParticipantOrBuilder getParticipantOrBuilder(int paramInt)
    {
      return (Data.ParticipantOrBuilder)this.participant_.get(paramInt);
    }

    public final List<? extends Data.ParticipantOrBuilder> getParticipantOrBuilderList()
    {
      return this.participant_;
    }

    public final String getSenderId()
    {
      Object localObject1 = this.senderId_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.senderId_ = str;
      }
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int n = i; ; n = k)
      {
        return n;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeBytesSize(1, getConversationIdBytes());
        if ((0x4 & this.bitField0_) == 4)
          k += CodedOutputStream.computeBytesSize(4, getSenderIdBytes());
        for (int m = 0; m < this.participant_.size(); m++)
          k += CodedOutputStream.computeMessageSize(5, (MessageLite)this.participant_.get(m));
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeMessageSize(6, this.stubbyInfo_);
        this.memoizedSerializedSize = k;
      }
    }

    public final Data.StubbyInfo getStubbyInfo()
    {
      return this.stubbyInfo_;
    }

    public final boolean hasConversationId()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean hasSenderId()
    {
      if ((0x4 & this.bitField0_) == 4);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasStubbyInfo()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeBytes(1, getConversationIdBytes());
      if ((0x4 & this.bitField0_) == 4)
        paramCodedOutputStream.writeBytes(4, getSenderIdBytes());
      for (int i = 0; i < this.participant_.size(); i++)
        paramCodedOutputStream.writeMessage(5, (MessageLite)this.participant_.get(i));
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeMessage(6, this.stubbyInfo_);
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Client.InviteRequest, Builder>
      implements Client.InviteRequestOrBuilder
    {
      private int bitField0_;
      private Object conversationId_ = "";
      private List<Data.Participant> participant_ = Collections.emptyList();
      private Object senderId_ = "";
      private Data.StubbyInfo stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private void ensureParticipantIsMutable()
      {
        if ((0x2 & this.bitField0_) != 2)
        {
          this.participant_ = new ArrayList(this.participant_);
          this.bitField0_ = (0x2 | this.bitField0_);
        }
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 10:
            this.bitField0_ = (0x1 | this.bitField0_);
            this.conversationId_ = paramCodedInputStream.readBytes();
            break;
          case 34:
            this.bitField0_ = (0x8 | this.bitField0_);
            this.senderId_ = paramCodedInputStream.readBytes();
            break;
          case 42:
            Data.Participant.Builder localBuilder1 = Data.Participant.newBuilder();
            paramCodedInputStream.readMessage(localBuilder1, paramExtensionRegistryLite);
            addParticipant(localBuilder1.buildPartial());
            break;
          case 50:
          }
          Data.StubbyInfo.Builder localBuilder = Data.StubbyInfo.newBuilder();
          if (hasStubbyInfo())
            localBuilder.mergeFrom(getStubbyInfo());
          paramCodedInputStream.readMessage(localBuilder, paramExtensionRegistryLite);
          setStubbyInfo(localBuilder.buildPartial());
        }
      }

      public final Builder addAllParticipant(Iterable<? extends Data.Participant> paramIterable)
      {
        ensureParticipantIsMutable();
        GeneratedMessageLite.Builder.addAll(paramIterable, this.participant_);
        return this;
      }

      public final Builder addParticipant(int paramInt, Data.Participant.Builder paramBuilder)
      {
        ensureParticipantIsMutable();
        this.participant_.add(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder addParticipant(int paramInt, Data.Participant paramParticipant)
      {
        if (paramParticipant == null)
          throw new NullPointerException();
        ensureParticipantIsMutable();
        this.participant_.add(paramInt, paramParticipant);
        return this;
      }

      public final Builder addParticipant(Data.Participant.Builder paramBuilder)
      {
        ensureParticipantIsMutable();
        this.participant_.add(paramBuilder.build());
        return this;
      }

      public final Builder addParticipant(Data.Participant paramParticipant)
      {
        if (paramParticipant == null)
          throw new NullPointerException();
        ensureParticipantIsMutable();
        this.participant_.add(paramParticipant);
        return this;
      }

      public final Client.InviteRequest build()
      {
        Client.InviteRequest localInviteRequest = buildPartial();
        if (!localInviteRequest.isInitialized())
          throw new UninitializedMessageException();
        return localInviteRequest;
      }

      public final Client.InviteRequest buildPartial()
      {
        Client.InviteRequest localInviteRequest = new Client.InviteRequest(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Client.InviteRequest.access$25702(localInviteRequest, this.conversationId_);
        if ((0x2 & this.bitField0_) == 2)
        {
          this.participant_ = Collections.unmodifiableList(this.participant_);
          this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        }
        Client.InviteRequest.access$25802(localInviteRequest, this.participant_);
        if ((i & 0x4) == 4)
          k |= 2;
        Client.InviteRequest.access$25902(localInviteRequest, this.stubbyInfo_);
        if ((i & 0x8) == 8)
          k |= 4;
        Client.InviteRequest.access$26002(localInviteRequest, this.senderId_);
        Client.InviteRequest.access$26102(localInviteRequest, k);
        return localInviteRequest;
      }

      public final Builder clear()
      {
        super.clear();
        this.conversationId_ = "";
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.participant_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.senderId_ = "";
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        return this;
      }

      public final Builder clearConversationId()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.conversationId_ = Client.InviteRequest.getDefaultInstance().getConversationId();
        return this;
      }

      public final Builder clearParticipant()
      {
        this.participant_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        return this;
      }

      public final Builder clearSenderId()
      {
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        this.senderId_ = Client.InviteRequest.getDefaultInstance().getSenderId();
        return this;
      }

      public final Builder clearStubbyInfo()
      {
        this.stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        return this;
      }

      public final String getConversationId()
      {
        Object localObject = this.conversationId_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.conversationId_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final Client.InviteRequest getDefaultInstanceForType()
      {
        return Client.InviteRequest.getDefaultInstance();
      }

      public final Data.Participant getParticipant(int paramInt)
      {
        return (Data.Participant)this.participant_.get(paramInt);
      }

      public final int getParticipantCount()
      {
        return this.participant_.size();
      }

      public final List<Data.Participant> getParticipantList()
      {
        return Collections.unmodifiableList(this.participant_);
      }

      public final String getSenderId()
      {
        Object localObject = this.senderId_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.senderId_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final Data.StubbyInfo getStubbyInfo()
      {
        return this.stubbyInfo_;
      }

      public final boolean hasConversationId()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean hasSenderId()
      {
        if ((0x8 & this.bitField0_) == 8);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasStubbyInfo()
      {
        if ((0x4 & this.bitField0_) == 4);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Client.InviteRequest paramInviteRequest)
      {
        if (paramInviteRequest == Client.InviteRequest.getDefaultInstance())
          return this;
        if (paramInviteRequest.hasConversationId())
          setConversationId(paramInviteRequest.getConversationId());
        label68: Data.StubbyInfo localStubbyInfo;
        if (!paramInviteRequest.participant_.isEmpty())
        {
          if (this.participant_.isEmpty())
          {
            this.participant_ = paramInviteRequest.participant_;
            this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
          }
        }
        else if (paramInviteRequest.hasStubbyInfo())
        {
          localStubbyInfo = paramInviteRequest.getStubbyInfo();
          if (((0x4 & this.bitField0_) != 4) || (this.stubbyInfo_ == Data.StubbyInfo.getDefaultInstance()))
            break label168;
        }
        label168: for (this.stubbyInfo_ = Data.StubbyInfo.newBuilder(this.stubbyInfo_).mergeFrom(localStubbyInfo).buildPartial(); ; this.stubbyInfo_ = localStubbyInfo)
        {
          this.bitField0_ = (0x4 | this.bitField0_);
          if (!paramInviteRequest.hasSenderId())
            break;
          setSenderId(paramInviteRequest.getSenderId());
          break;
          ensureParticipantIsMutable();
          this.participant_.addAll(paramInviteRequest.participant_);
          break label68;
        }
      }

      public final Builder setConversationId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x1 | this.bitField0_);
        this.conversationId_ = paramString;
        return this;
      }

      public final Builder setParticipant(int paramInt, Data.Participant.Builder paramBuilder)
      {
        ensureParticipantIsMutable();
        this.participant_.set(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder setParticipant(int paramInt, Data.Participant paramParticipant)
      {
        if (paramParticipant == null)
          throw new NullPointerException();
        ensureParticipantIsMutable();
        this.participant_.set(paramInt, paramParticipant);
        return this;
      }

      public final Builder setSenderId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x8 | this.bitField0_);
        this.senderId_ = paramString;
        return this;
      }

      public final Builder setStubbyInfo(Data.StubbyInfo.Builder paramBuilder)
      {
        this.stubbyInfo_ = paramBuilder.build();
        this.bitField0_ = (0x4 | this.bitField0_);
        return this;
      }

      public final Builder setStubbyInfo(Data.StubbyInfo paramStubbyInfo)
      {
        if (paramStubbyInfo == null)
          throw new NullPointerException();
        this.stubbyInfo_ = paramStubbyInfo;
        this.bitField0_ = (0x4 | this.bitField0_);
        return this;
      }
    }
  }

  public static abstract interface InviteRequestOrBuilder extends MessageLiteOrBuilder
  {
    public abstract String getConversationId();

    public abstract Data.Participant getParticipant(int paramInt);

    public abstract int getParticipantCount();

    public abstract List<Data.Participant> getParticipantList();

    public abstract String getSenderId();

    public abstract Data.StubbyInfo getStubbyInfo();

    public abstract boolean hasConversationId();

    public abstract boolean hasSenderId();

    public abstract boolean hasStubbyInfo();
  }

  public static final class InviteResponse extends GeneratedMessageLite
    implements Client.InviteResponseOrBuilder
  {
    private static final InviteResponse defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private List<Client.ParticipantError> participantError_;
    private Object requestError_;
    private Data.ResponseStatus status_;
    private long timestamp_;

    static
    {
      InviteResponse localInviteResponse = new InviteResponse();
      defaultInstance = localInviteResponse;
      localInviteResponse.status_ = Data.ResponseStatus.OK;
      localInviteResponse.timestamp_ = 0L;
      localInviteResponse.requestError_ = "";
      localInviteResponse.participantError_ = Collections.emptyList();
    }

    private InviteResponse()
    {
    }

    private InviteResponse(Builder paramBuilder)
    {
      super();
    }

    public static InviteResponse getDefaultInstance()
    {
      return defaultInstance;
    }

    private ByteString getRequestErrorBytes()
    {
      Object localObject = this.requestError_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.requestError_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static Builder newBuilder()
    {
      return Builder.access$26300();
    }

    public static Builder newBuilder(InviteResponse paramInviteResponse)
    {
      return Builder.access$26300().mergeFrom(paramInviteResponse);
    }

    public final InviteResponse getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final Client.ParticipantError getParticipantError(int paramInt)
    {
      return (Client.ParticipantError)this.participantError_.get(paramInt);
    }

    public final int getParticipantErrorCount()
    {
      return this.participantError_.size();
    }

    public final List<Client.ParticipantError> getParticipantErrorList()
    {
      return this.participantError_;
    }

    public final Client.ParticipantErrorOrBuilder getParticipantErrorOrBuilder(int paramInt)
    {
      return (Client.ParticipantErrorOrBuilder)this.participantError_.get(paramInt);
    }

    public final List<? extends Client.ParticipantErrorOrBuilder> getParticipantErrorOrBuilderList()
    {
      return this.participantError_;
    }

    public final String getRequestError()
    {
      Object localObject1 = this.requestError_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.requestError_ = str;
      }
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int n = i; ; n = k)
      {
        return n;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeEnumSize(1, this.status_.getNumber());
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeInt64Size(2, this.timestamp_);
        for (int m = 0; m < this.participantError_.size(); m++)
          k += CodedOutputStream.computeMessageSize(3, (MessageLite)this.participantError_.get(m));
        if ((0x4 & this.bitField0_) == 4)
          k += CodedOutputStream.computeBytesSize(5, getRequestErrorBytes());
        this.memoizedSerializedSize = k;
      }
    }

    public final Data.ResponseStatus getStatus()
    {
      return this.status_;
    }

    public final long getTimestamp()
    {
      return this.timestamp_;
    }

    public final boolean hasRequestError()
    {
      if ((0x4 & this.bitField0_) == 4);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasStatus()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean hasTimestamp()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeEnum(1, this.status_.getNumber());
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeInt64(2, this.timestamp_);
      for (int i = 0; i < this.participantError_.size(); i++)
        paramCodedOutputStream.writeMessage(3, (MessageLite)this.participantError_.get(i));
      if ((0x4 & this.bitField0_) == 4)
        paramCodedOutputStream.writeBytes(5, getRequestErrorBytes());
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Client.InviteResponse, Builder>
      implements Client.InviteResponseOrBuilder
    {
      private int bitField0_;
      private List<Client.ParticipantError> participantError_ = Collections.emptyList();
      private Object requestError_ = "";
      private Data.ResponseStatus status_ = Data.ResponseStatus.OK;
      private long timestamp_;

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private void ensureParticipantErrorIsMutable()
      {
        if ((0x8 & this.bitField0_) != 8)
        {
          this.participantError_ = new ArrayList(this.participantError_);
          this.bitField0_ = (0x8 | this.bitField0_);
        }
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 8:
            Data.ResponseStatus localResponseStatus = Data.ResponseStatus.valueOf(paramCodedInputStream.readEnum());
            if (localResponseStatus == null)
              continue;
            this.bitField0_ = (0x1 | this.bitField0_);
            this.status_ = localResponseStatus;
            break;
          case 16:
            this.bitField0_ = (0x2 | this.bitField0_);
            this.timestamp_ = paramCodedInputStream.readInt64();
            break;
          case 26:
            Client.ParticipantError.Builder localBuilder = Client.ParticipantError.newBuilder();
            paramCodedInputStream.readMessage(localBuilder, paramExtensionRegistryLite);
            addParticipantError(localBuilder.buildPartial());
            break;
          case 42:
          }
          this.bitField0_ = (0x4 | this.bitField0_);
          this.requestError_ = paramCodedInputStream.readBytes();
        }
      }

      public final Builder addAllParticipantError(Iterable<? extends Client.ParticipantError> paramIterable)
      {
        ensureParticipantErrorIsMutable();
        GeneratedMessageLite.Builder.addAll(paramIterable, this.participantError_);
        return this;
      }

      public final Builder addParticipantError(int paramInt, Client.ParticipantError.Builder paramBuilder)
      {
        ensureParticipantErrorIsMutable();
        this.participantError_.add(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder addParticipantError(int paramInt, Client.ParticipantError paramParticipantError)
      {
        if (paramParticipantError == null)
          throw new NullPointerException();
        ensureParticipantErrorIsMutable();
        this.participantError_.add(paramInt, paramParticipantError);
        return this;
      }

      public final Builder addParticipantError(Client.ParticipantError.Builder paramBuilder)
      {
        ensureParticipantErrorIsMutable();
        this.participantError_.add(paramBuilder.build());
        return this;
      }

      public final Builder addParticipantError(Client.ParticipantError paramParticipantError)
      {
        if (paramParticipantError == null)
          throw new NullPointerException();
        ensureParticipantErrorIsMutable();
        this.participantError_.add(paramParticipantError);
        return this;
      }

      public final Client.InviteResponse build()
      {
        Client.InviteResponse localInviteResponse = buildPartial();
        if (!localInviteResponse.isInitialized())
          throw new UninitializedMessageException();
        return localInviteResponse;
      }

      public final Client.InviteResponse buildPartial()
      {
        Client.InviteResponse localInviteResponse = new Client.InviteResponse(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Client.InviteResponse.access$26502(localInviteResponse, this.status_);
        if ((i & 0x2) == 2)
          k |= 2;
        Client.InviteResponse.access$26602(localInviteResponse, this.timestamp_);
        if ((i & 0x4) == 4)
          k |= 4;
        Client.InviteResponse.access$26702(localInviteResponse, this.requestError_);
        if ((0x8 & this.bitField0_) == 8)
        {
          this.participantError_ = Collections.unmodifiableList(this.participantError_);
          this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        }
        Client.InviteResponse.access$26802(localInviteResponse, this.participantError_);
        Client.InviteResponse.access$26902(localInviteResponse, k);
        return localInviteResponse;
      }

      public final Builder clear()
      {
        super.clear();
        this.status_ = Data.ResponseStatus.OK;
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.timestamp_ = 0L;
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.requestError_ = "";
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.participantError_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        return this;
      }

      public final Builder clearParticipantError()
      {
        this.participantError_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        return this;
      }

      public final Builder clearRequestError()
      {
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.requestError_ = Client.InviteResponse.getDefaultInstance().getRequestError();
        return this;
      }

      public final Builder clearStatus()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.status_ = Data.ResponseStatus.OK;
        return this;
      }

      public final Builder clearTimestamp()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.timestamp_ = 0L;
        return this;
      }

      public final Client.InviteResponse getDefaultInstanceForType()
      {
        return Client.InviteResponse.getDefaultInstance();
      }

      public final Client.ParticipantError getParticipantError(int paramInt)
      {
        return (Client.ParticipantError)this.participantError_.get(paramInt);
      }

      public final int getParticipantErrorCount()
      {
        return this.participantError_.size();
      }

      public final List<Client.ParticipantError> getParticipantErrorList()
      {
        return Collections.unmodifiableList(this.participantError_);
      }

      public final String getRequestError()
      {
        Object localObject = this.requestError_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.requestError_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final Data.ResponseStatus getStatus()
      {
        return this.status_;
      }

      public final long getTimestamp()
      {
        return this.timestamp_;
      }

      public final boolean hasRequestError()
      {
        if ((0x4 & this.bitField0_) == 4);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasStatus()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean hasTimestamp()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Client.InviteResponse paramInviteResponse)
      {
        if (paramInviteResponse == Client.InviteResponse.getDefaultInstance());
        while (true)
        {
          return this;
          if (paramInviteResponse.hasStatus())
            setStatus(paramInviteResponse.getStatus());
          if (paramInviteResponse.hasTimestamp())
            setTimestamp(paramInviteResponse.getTimestamp());
          if (paramInviteResponse.hasRequestError())
            setRequestError(paramInviteResponse.getRequestError());
          if (!paramInviteResponse.participantError_.isEmpty())
            if (this.participantError_.isEmpty())
            {
              this.participantError_ = paramInviteResponse.participantError_;
              this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
            }
            else
            {
              ensureParticipantErrorIsMutable();
              this.participantError_.addAll(paramInviteResponse.participantError_);
            }
        }
      }

      public final Builder setParticipantError(int paramInt, Client.ParticipantError.Builder paramBuilder)
      {
        ensureParticipantErrorIsMutable();
        this.participantError_.set(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder setParticipantError(int paramInt, Client.ParticipantError paramParticipantError)
      {
        if (paramParticipantError == null)
          throw new NullPointerException();
        ensureParticipantErrorIsMutable();
        this.participantError_.set(paramInt, paramParticipantError);
        return this;
      }

      public final Builder setRequestError(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x4 | this.bitField0_);
        this.requestError_ = paramString;
        return this;
      }

      public final Builder setStatus(Data.ResponseStatus paramResponseStatus)
      {
        if (paramResponseStatus == null)
          throw new NullPointerException();
        this.bitField0_ = (0x1 | this.bitField0_);
        this.status_ = paramResponseStatus;
        return this;
      }

      public final Builder setTimestamp(long paramLong)
      {
        this.bitField0_ = (0x2 | this.bitField0_);
        this.timestamp_ = paramLong;
        return this;
      }
    }
  }

  public static abstract interface InviteResponseOrBuilder extends MessageLiteOrBuilder
  {
    public abstract Client.ParticipantError getParticipantError(int paramInt);

    public abstract int getParticipantErrorCount();

    public abstract List<Client.ParticipantError> getParticipantErrorList();

    public abstract String getRequestError();

    public abstract Data.ResponseStatus getStatus();

    public abstract long getTimestamp();

    public abstract boolean hasRequestError();

    public abstract boolean hasStatus();

    public abstract boolean hasTimestamp();
  }

  public static final class LeaveConversationRequest extends GeneratedMessageLite
    implements Client.LeaveConversationRequestOrBuilder
  {
    private static final LeaveConversationRequest defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private Object conversationId_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private Object senderId_;
    private Data.StubbyInfo stubbyInfo_;

    static
    {
      LeaveConversationRequest localLeaveConversationRequest = new LeaveConversationRequest();
      defaultInstance = localLeaveConversationRequest;
      localLeaveConversationRequest.conversationId_ = "";
      localLeaveConversationRequest.stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
      localLeaveConversationRequest.senderId_ = "";
    }

    private LeaveConversationRequest()
    {
    }

    private LeaveConversationRequest(Builder paramBuilder)
    {
      super();
    }

    private ByteString getConversationIdBytes()
    {
      Object localObject = this.conversationId_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.conversationId_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static LeaveConversationRequest getDefaultInstance()
    {
      return defaultInstance;
    }

    private ByteString getSenderIdBytes()
    {
      Object localObject = this.senderId_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.senderId_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static Builder newBuilder()
    {
      return Builder.access$31200();
    }

    public static Builder newBuilder(LeaveConversationRequest paramLeaveConversationRequest)
    {
      return Builder.access$31200().mergeFrom(paramLeaveConversationRequest);
    }

    public final String getConversationId()
    {
      Object localObject1 = this.conversationId_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.conversationId_ = str;
      }
    }

    public final LeaveConversationRequest getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final String getSenderId()
    {
      Object localObject1 = this.senderId_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.senderId_ = str;
      }
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x4 & this.bitField0_;
        k = 0;
        if (j == 4)
          k = 0 + CodedOutputStream.computeBytesSize(1, getSenderIdBytes());
        if ((0x1 & this.bitField0_) == 1)
          k += CodedOutputStream.computeBytesSize(2, getConversationIdBytes());
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeMessageSize(3, this.stubbyInfo_);
        this.memoizedSerializedSize = k;
      }
    }

    public final Data.StubbyInfo getStubbyInfo()
    {
      return this.stubbyInfo_;
    }

    public final boolean hasConversationId()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean hasSenderId()
    {
      if ((0x4 & this.bitField0_) == 4);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasStubbyInfo()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x4 & this.bitField0_) == 4)
        paramCodedOutputStream.writeBytes(1, getSenderIdBytes());
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeBytes(2, getConversationIdBytes());
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeMessage(3, this.stubbyInfo_);
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Client.LeaveConversationRequest, Builder>
      implements Client.LeaveConversationRequestOrBuilder
    {
      private int bitField0_;
      private Object conversationId_ = "";
      private Object senderId_ = "";
      private Data.StubbyInfo stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 10:
            this.bitField0_ = (0x4 | this.bitField0_);
            this.senderId_ = paramCodedInputStream.readBytes();
            break;
          case 18:
            this.bitField0_ = (0x1 | this.bitField0_);
            this.conversationId_ = paramCodedInputStream.readBytes();
            break;
          case 26:
          }
          Data.StubbyInfo.Builder localBuilder = Data.StubbyInfo.newBuilder();
          if (hasStubbyInfo())
            localBuilder.mergeFrom(getStubbyInfo());
          paramCodedInputStream.readMessage(localBuilder, paramExtensionRegistryLite);
          setStubbyInfo(localBuilder.buildPartial());
        }
      }

      public final Client.LeaveConversationRequest build()
      {
        Client.LeaveConversationRequest localLeaveConversationRequest = buildPartial();
        if (!localLeaveConversationRequest.isInitialized())
          throw new UninitializedMessageException();
        return localLeaveConversationRequest;
      }

      public final Client.LeaveConversationRequest buildPartial()
      {
        Client.LeaveConversationRequest localLeaveConversationRequest = new Client.LeaveConversationRequest(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Client.LeaveConversationRequest.access$31402(localLeaveConversationRequest, this.conversationId_);
        if ((i & 0x2) == 2)
          k |= 2;
        Client.LeaveConversationRequest.access$31502(localLeaveConversationRequest, this.stubbyInfo_);
        if ((i & 0x4) == 4)
          k |= 4;
        Client.LeaveConversationRequest.access$31602(localLeaveConversationRequest, this.senderId_);
        Client.LeaveConversationRequest.access$31702(localLeaveConversationRequest, k);
        return localLeaveConversationRequest;
      }

      public final Builder clear()
      {
        super.clear();
        this.conversationId_ = "";
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.senderId_ = "";
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        return this;
      }

      public final Builder clearConversationId()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.conversationId_ = Client.LeaveConversationRequest.getDefaultInstance().getConversationId();
        return this;
      }

      public final Builder clearSenderId()
      {
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.senderId_ = Client.LeaveConversationRequest.getDefaultInstance().getSenderId();
        return this;
      }

      public final Builder clearStubbyInfo()
      {
        this.stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        return this;
      }

      public final String getConversationId()
      {
        Object localObject = this.conversationId_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.conversationId_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final Client.LeaveConversationRequest getDefaultInstanceForType()
      {
        return Client.LeaveConversationRequest.getDefaultInstance();
      }

      public final String getSenderId()
      {
        Object localObject = this.senderId_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.senderId_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final Data.StubbyInfo getStubbyInfo()
      {
        return this.stubbyInfo_;
      }

      public final boolean hasConversationId()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean hasSenderId()
      {
        if ((0x4 & this.bitField0_) == 4);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasStubbyInfo()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Client.LeaveConversationRequest paramLeaveConversationRequest)
      {
        if (paramLeaveConversationRequest == Client.LeaveConversationRequest.getDefaultInstance())
          return this;
        if (paramLeaveConversationRequest.hasConversationId())
          setConversationId(paramLeaveConversationRequest.getConversationId());
        Data.StubbyInfo localStubbyInfo;
        if (paramLeaveConversationRequest.hasStubbyInfo())
        {
          localStubbyInfo = paramLeaveConversationRequest.getStubbyInfo();
          if (((0x2 & this.bitField0_) != 2) || (this.stubbyInfo_ == Data.StubbyInfo.getDefaultInstance()))
            break label104;
        }
        label104: for (this.stubbyInfo_ = Data.StubbyInfo.newBuilder(this.stubbyInfo_).mergeFrom(localStubbyInfo).buildPartial(); ; this.stubbyInfo_ = localStubbyInfo)
        {
          this.bitField0_ = (0x2 | this.bitField0_);
          if (!paramLeaveConversationRequest.hasSenderId())
            break;
          setSenderId(paramLeaveConversationRequest.getSenderId());
          break;
        }
      }

      public final Builder setConversationId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x1 | this.bitField0_);
        this.conversationId_ = paramString;
        return this;
      }

      public final Builder setSenderId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x4 | this.bitField0_);
        this.senderId_ = paramString;
        return this;
      }

      public final Builder setStubbyInfo(Data.StubbyInfo.Builder paramBuilder)
      {
        this.stubbyInfo_ = paramBuilder.build();
        this.bitField0_ = (0x2 | this.bitField0_);
        return this;
      }

      public final Builder setStubbyInfo(Data.StubbyInfo paramStubbyInfo)
      {
        if (paramStubbyInfo == null)
          throw new NullPointerException();
        this.stubbyInfo_ = paramStubbyInfo;
        this.bitField0_ = (0x2 | this.bitField0_);
        return this;
      }
    }
  }

  public static abstract interface LeaveConversationRequestOrBuilder extends MessageLiteOrBuilder
  {
    public abstract String getConversationId();

    public abstract String getSenderId();

    public abstract Data.StubbyInfo getStubbyInfo();

    public abstract boolean hasConversationId();

    public abstract boolean hasSenderId();

    public abstract boolean hasStubbyInfo();
  }

  public static final class LeaveConversationResponse extends GeneratedMessageLite
    implements Client.LeaveConversationResponseOrBuilder
  {
    private static final LeaveConversationResponse defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private Object requestError_;
    private Data.ResponseStatus status_;
    private long timestamp_;

    static
    {
      LeaveConversationResponse localLeaveConversationResponse = new LeaveConversationResponse();
      defaultInstance = localLeaveConversationResponse;
      localLeaveConversationResponse.status_ = Data.ResponseStatus.OK;
      localLeaveConversationResponse.timestamp_ = 0L;
      localLeaveConversationResponse.requestError_ = "";
    }

    private LeaveConversationResponse()
    {
    }

    private LeaveConversationResponse(Builder paramBuilder)
    {
      super();
    }

    public static LeaveConversationResponse getDefaultInstance()
    {
      return defaultInstance;
    }

    private ByteString getRequestErrorBytes()
    {
      Object localObject = this.requestError_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.requestError_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static Builder newBuilder()
    {
      return Builder.access$31900();
    }

    public static Builder newBuilder(LeaveConversationResponse paramLeaveConversationResponse)
    {
      return Builder.access$31900().mergeFrom(paramLeaveConversationResponse);
    }

    public final LeaveConversationResponse getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final String getRequestError()
    {
      Object localObject1 = this.requestError_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.requestError_ = str;
      }
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeEnumSize(1, this.status_.getNumber());
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeInt64Size(2, this.timestamp_);
        if ((0x4 & this.bitField0_) == 4)
          k += CodedOutputStream.computeBytesSize(3, getRequestErrorBytes());
        this.memoizedSerializedSize = k;
      }
    }

    public final Data.ResponseStatus getStatus()
    {
      return this.status_;
    }

    public final long getTimestamp()
    {
      return this.timestamp_;
    }

    public final boolean hasRequestError()
    {
      if ((0x4 & this.bitField0_) == 4);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasStatus()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean hasTimestamp()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeEnum(1, this.status_.getNumber());
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeInt64(2, this.timestamp_);
      if ((0x4 & this.bitField0_) == 4)
        paramCodedOutputStream.writeBytes(3, getRequestErrorBytes());
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Client.LeaveConversationResponse, Builder>
      implements Client.LeaveConversationResponseOrBuilder
    {
      private int bitField0_;
      private Object requestError_ = "";
      private Data.ResponseStatus status_ = Data.ResponseStatus.OK;
      private long timestamp_;

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 8:
            Data.ResponseStatus localResponseStatus = Data.ResponseStatus.valueOf(paramCodedInputStream.readEnum());
            if (localResponseStatus == null)
              continue;
            this.bitField0_ = (0x1 | this.bitField0_);
            this.status_ = localResponseStatus;
            break;
          case 16:
            this.bitField0_ = (0x2 | this.bitField0_);
            this.timestamp_ = paramCodedInputStream.readInt64();
            break;
          case 26:
          }
          this.bitField0_ = (0x4 | this.bitField0_);
          this.requestError_ = paramCodedInputStream.readBytes();
        }
      }

      public final Client.LeaveConversationResponse build()
      {
        Client.LeaveConversationResponse localLeaveConversationResponse = buildPartial();
        if (!localLeaveConversationResponse.isInitialized())
          throw new UninitializedMessageException();
        return localLeaveConversationResponse;
      }

      public final Client.LeaveConversationResponse buildPartial()
      {
        Client.LeaveConversationResponse localLeaveConversationResponse = new Client.LeaveConversationResponse(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Client.LeaveConversationResponse.access$32102(localLeaveConversationResponse, this.status_);
        if ((i & 0x2) == 2)
          k |= 2;
        Client.LeaveConversationResponse.access$32202(localLeaveConversationResponse, this.timestamp_);
        if ((i & 0x4) == 4)
          k |= 4;
        Client.LeaveConversationResponse.access$32302(localLeaveConversationResponse, this.requestError_);
        Client.LeaveConversationResponse.access$32402(localLeaveConversationResponse, k);
        return localLeaveConversationResponse;
      }

      public final Builder clear()
      {
        super.clear();
        this.status_ = Data.ResponseStatus.OK;
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.timestamp_ = 0L;
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.requestError_ = "";
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        return this;
      }

      public final Builder clearRequestError()
      {
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.requestError_ = Client.LeaveConversationResponse.getDefaultInstance().getRequestError();
        return this;
      }

      public final Builder clearStatus()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.status_ = Data.ResponseStatus.OK;
        return this;
      }

      public final Builder clearTimestamp()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.timestamp_ = 0L;
        return this;
      }

      public final Client.LeaveConversationResponse getDefaultInstanceForType()
      {
        return Client.LeaveConversationResponse.getDefaultInstance();
      }

      public final String getRequestError()
      {
        Object localObject = this.requestError_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.requestError_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final Data.ResponseStatus getStatus()
      {
        return this.status_;
      }

      public final long getTimestamp()
      {
        return this.timestamp_;
      }

      public final boolean hasRequestError()
      {
        if ((0x4 & this.bitField0_) == 4);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasStatus()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean hasTimestamp()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Client.LeaveConversationResponse paramLeaveConversationResponse)
      {
        if (paramLeaveConversationResponse == Client.LeaveConversationResponse.getDefaultInstance());
        while (true)
        {
          return this;
          if (paramLeaveConversationResponse.hasStatus())
            setStatus(paramLeaveConversationResponse.getStatus());
          if (paramLeaveConversationResponse.hasTimestamp())
            setTimestamp(paramLeaveConversationResponse.getTimestamp());
          if (paramLeaveConversationResponse.hasRequestError())
            setRequestError(paramLeaveConversationResponse.getRequestError());
        }
      }

      public final Builder setRequestError(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x4 | this.bitField0_);
        this.requestError_ = paramString;
        return this;
      }

      public final Builder setStatus(Data.ResponseStatus paramResponseStatus)
      {
        if (paramResponseStatus == null)
          throw new NullPointerException();
        this.bitField0_ = (0x1 | this.bitField0_);
        this.status_ = paramResponseStatus;
        return this;
      }

      public final Builder setTimestamp(long paramLong)
      {
        this.bitField0_ = (0x2 | this.bitField0_);
        this.timestamp_ = paramLong;
        return this;
      }
    }
  }

  public static abstract interface LeaveConversationResponseOrBuilder extends MessageLiteOrBuilder
  {
    public abstract String getRequestError();

    public abstract Data.ResponseStatus getStatus();

    public abstract long getTimestamp();

    public abstract boolean hasRequestError();

    public abstract boolean hasStatus();

    public abstract boolean hasTimestamp();
  }

  public static final class MembershipChange extends GeneratedMessageLite
    implements Client.MembershipChangeOrBuilder
  {
    private static final MembershipChange defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private Object conversationId_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private Object participantId_;
    private List<Data.Participant> participant_;
    private LazyStringList recipientId_;
    private Object senderId_;
    private long timestamp_;
    private Type type_;

    static
    {
      MembershipChange localMembershipChange = new MembershipChange();
      defaultInstance = localMembershipChange;
      localMembershipChange.type_ = Type.UNKNOWN;
      localMembershipChange.senderId_ = "";
      localMembershipChange.conversationId_ = "";
      localMembershipChange.participantId_ = "";
      localMembershipChange.recipientId_ = LazyStringArrayList.EMPTY;
      localMembershipChange.timestamp_ = 0L;
      localMembershipChange.participant_ = Collections.emptyList();
    }

    private MembershipChange()
    {
    }

    private MembershipChange(Builder paramBuilder)
    {
      super();
    }

    private ByteString getConversationIdBytes()
    {
      Object localObject = this.conversationId_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.conversationId_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static MembershipChange getDefaultInstance()
    {
      return defaultInstance;
    }

    private ByteString getParticipantIdBytes()
    {
      Object localObject = this.participantId_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.participantId_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    private ByteString getSenderIdBytes()
    {
      Object localObject = this.senderId_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.senderId_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static Builder newBuilder()
    {
      return Builder.access$16300();
    }

    public static Builder newBuilder(MembershipChange paramMembershipChange)
    {
      return Builder.access$16300().mergeFrom(paramMembershipChange);
    }

    public final String getConversationId()
    {
      Object localObject1 = this.conversationId_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.conversationId_ = str;
      }
    }

    public final MembershipChange getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final Data.Participant getParticipant(int paramInt)
    {
      return (Data.Participant)this.participant_.get(paramInt);
    }

    public final int getParticipantCount()
    {
      return this.participant_.size();
    }

    public final String getParticipantId()
    {
      Object localObject1 = this.participantId_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.participantId_ = str;
      }
    }

    public final List<Data.Participant> getParticipantList()
    {
      return this.participant_;
    }

    public final Data.ParticipantOrBuilder getParticipantOrBuilder(int paramInt)
    {
      return (Data.ParticipantOrBuilder)this.participant_.get(paramInt);
    }

    public final List<? extends Data.ParticipantOrBuilder> getParticipantOrBuilderList()
    {
      return this.participant_;
    }

    public final String getRecipientId(int paramInt)
    {
      return (String)this.recipientId_.get(paramInt);
    }

    public final int getRecipientIdCount()
    {
      return this.recipientId_.size();
    }

    public final List<String> getRecipientIdList()
    {
      return this.recipientId_;
    }

    public final String getSenderId()
    {
      Object localObject1 = this.senderId_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.senderId_ = str;
      }
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int i1;
      for (int i3 = i; ; i3 = i1)
      {
        return i3;
        int j = 0x1 & this.bitField0_;
        int k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeEnumSize(1, this.type_.getNumber());
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeBytesSize(2, getSenderIdBytes());
        if ((0x4 & this.bitField0_) == 4)
          k += CodedOutputStream.computeBytesSize(3, getConversationIdBytes());
        if ((0x8 & this.bitField0_) == 8)
          k += CodedOutputStream.computeBytesSize(4, getParticipantIdBytes());
        int m = 0;
        for (int n = 0; n < this.recipientId_.size(); n++)
          m += CodedOutputStream.computeBytesSizeNoTag(this.recipientId_.getByteString(n));
        i1 = k + m + 1 * getRecipientIdList().size();
        if ((0x10 & this.bitField0_) == 16)
          i1 += CodedOutputStream.computeInt64Size(6, this.timestamp_);
        for (int i2 = 0; i2 < this.participant_.size(); i2++)
          i1 += CodedOutputStream.computeMessageSize(7, (MessageLite)this.participant_.get(i2));
        this.memoizedSerializedSize = i1;
      }
    }

    public final long getTimestamp()
    {
      return this.timestamp_;
    }

    public final Type getType()
    {
      return this.type_;
    }

    public final boolean hasConversationId()
    {
      if ((0x4 & this.bitField0_) == 4);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasParticipantId()
    {
      if ((0x8 & this.bitField0_) == 8);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasSenderId()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasTimestamp()
    {
      if ((0x10 & this.bitField0_) == 16);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasType()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeEnum(1, this.type_.getNumber());
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeBytes(2, getSenderIdBytes());
      if ((0x4 & this.bitField0_) == 4)
        paramCodedOutputStream.writeBytes(3, getConversationIdBytes());
      if ((0x8 & this.bitField0_) == 8)
        paramCodedOutputStream.writeBytes(4, getParticipantIdBytes());
      for (int i = 0; i < this.recipientId_.size(); i++)
        paramCodedOutputStream.writeBytes(5, this.recipientId_.getByteString(i));
      if ((0x10 & this.bitField0_) == 16)
        paramCodedOutputStream.writeInt64(6, this.timestamp_);
      for (int j = 0; j < this.participant_.size(); j++)
        paramCodedOutputStream.writeMessage(7, (MessageLite)this.participant_.get(j));
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Client.MembershipChange, Builder>
      implements Client.MembershipChangeOrBuilder
    {
      private int bitField0_;
      private Object conversationId_ = "";
      private Object participantId_ = "";
      private List<Data.Participant> participant_ = Collections.emptyList();
      private LazyStringList recipientId_ = LazyStringArrayList.EMPTY;
      private Object senderId_ = "";
      private long timestamp_;
      private Client.MembershipChange.Type type_ = Client.MembershipChange.Type.UNKNOWN;

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private void ensureParticipantIsMutable()
      {
        if ((0x40 & this.bitField0_) != 64)
        {
          this.participant_ = new ArrayList(this.participant_);
          this.bitField0_ = (0x40 | this.bitField0_);
        }
      }

      private void ensureRecipientIdIsMutable()
      {
        if ((0x10 & this.bitField0_) != 16)
        {
          this.recipientId_ = new LazyStringArrayList(this.recipientId_);
          this.bitField0_ = (0x10 | this.bitField0_);
        }
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 8:
            Client.MembershipChange.Type localType = Client.MembershipChange.Type.valueOf(paramCodedInputStream.readEnum());
            if (localType == null)
              continue;
            this.bitField0_ = (0x1 | this.bitField0_);
            this.type_ = localType;
            break;
          case 18:
            this.bitField0_ = (0x2 | this.bitField0_);
            this.senderId_ = paramCodedInputStream.readBytes();
            break;
          case 26:
            this.bitField0_ = (0x4 | this.bitField0_);
            this.conversationId_ = paramCodedInputStream.readBytes();
            break;
          case 34:
            this.bitField0_ = (0x8 | this.bitField0_);
            this.participantId_ = paramCodedInputStream.readBytes();
            break;
          case 42:
            ensureRecipientIdIsMutable();
            this.recipientId_.add(paramCodedInputStream.readBytes());
            break;
          case 48:
            this.bitField0_ = (0x20 | this.bitField0_);
            this.timestamp_ = paramCodedInputStream.readInt64();
            break;
          case 58:
          }
          Data.Participant.Builder localBuilder = Data.Participant.newBuilder();
          paramCodedInputStream.readMessage(localBuilder, paramExtensionRegistryLite);
          addParticipant(localBuilder.buildPartial());
        }
      }

      public final Builder addAllParticipant(Iterable<? extends Data.Participant> paramIterable)
      {
        ensureParticipantIsMutable();
        GeneratedMessageLite.Builder.addAll(paramIterable, this.participant_);
        return this;
      }

      public final Builder addAllRecipientId(Iterable<String> paramIterable)
      {
        ensureRecipientIdIsMutable();
        GeneratedMessageLite.Builder.addAll(paramIterable, this.recipientId_);
        return this;
      }

      public final Builder addParticipant(int paramInt, Data.Participant.Builder paramBuilder)
      {
        ensureParticipantIsMutable();
        this.participant_.add(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder addParticipant(int paramInt, Data.Participant paramParticipant)
      {
        if (paramParticipant == null)
          throw new NullPointerException();
        ensureParticipantIsMutable();
        this.participant_.add(paramInt, paramParticipant);
        return this;
      }

      public final Builder addParticipant(Data.Participant.Builder paramBuilder)
      {
        ensureParticipantIsMutable();
        this.participant_.add(paramBuilder.build());
        return this;
      }

      public final Builder addParticipant(Data.Participant paramParticipant)
      {
        if (paramParticipant == null)
          throw new NullPointerException();
        ensureParticipantIsMutable();
        this.participant_.add(paramParticipant);
        return this;
      }

      public final Builder addRecipientId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        ensureRecipientIdIsMutable();
        this.recipientId_.add(paramString);
        return this;
      }

      public final Client.MembershipChange build()
      {
        Client.MembershipChange localMembershipChange = buildPartial();
        if (!localMembershipChange.isInitialized())
          throw new UninitializedMessageException();
        return localMembershipChange;
      }

      public final Client.MembershipChange buildPartial()
      {
        Client.MembershipChange localMembershipChange = new Client.MembershipChange(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Client.MembershipChange.access$16502(localMembershipChange, this.type_);
        if ((i & 0x2) == 2)
          k |= 2;
        Client.MembershipChange.access$16602(localMembershipChange, this.senderId_);
        if ((i & 0x4) == 4)
          k |= 4;
        Client.MembershipChange.access$16702(localMembershipChange, this.conversationId_);
        if ((i & 0x8) == 8)
          k |= 8;
        Client.MembershipChange.access$16802(localMembershipChange, this.participantId_);
        if ((0x10 & this.bitField0_) == 16)
        {
          this.recipientId_ = new UnmodifiableLazyStringList(this.recipientId_);
          this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        }
        Client.MembershipChange.access$16902(localMembershipChange, this.recipientId_);
        if ((i & 0x20) == 32)
          k |= 16;
        Client.MembershipChange.access$17002(localMembershipChange, this.timestamp_);
        if ((0x40 & this.bitField0_) == 64)
        {
          this.participant_ = Collections.unmodifiableList(this.participant_);
          this.bitField0_ = (0xFFFFFFBF & this.bitField0_);
        }
        Client.MembershipChange.access$17102(localMembershipChange, this.participant_);
        Client.MembershipChange.access$17202(localMembershipChange, k);
        return localMembershipChange;
      }

      public final Builder clear()
      {
        super.clear();
        this.type_ = Client.MembershipChange.Type.UNKNOWN;
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.senderId_ = "";
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.conversationId_ = "";
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.participantId_ = "";
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        this.recipientId_ = LazyStringArrayList.EMPTY;
        this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        this.timestamp_ = 0L;
        this.bitField0_ = (0xFFFFFFDF & this.bitField0_);
        this.participant_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFBF & this.bitField0_);
        return this;
      }

      public final Builder clearConversationId()
      {
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.conversationId_ = Client.MembershipChange.getDefaultInstance().getConversationId();
        return this;
      }

      public final Builder clearParticipant()
      {
        this.participant_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFBF & this.bitField0_);
        return this;
      }

      public final Builder clearParticipantId()
      {
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        this.participantId_ = Client.MembershipChange.getDefaultInstance().getParticipantId();
        return this;
      }

      public final Builder clearRecipientId()
      {
        this.recipientId_ = LazyStringArrayList.EMPTY;
        this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        return this;
      }

      public final Builder clearSenderId()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.senderId_ = Client.MembershipChange.getDefaultInstance().getSenderId();
        return this;
      }

      public final Builder clearTimestamp()
      {
        this.bitField0_ = (0xFFFFFFDF & this.bitField0_);
        this.timestamp_ = 0L;
        return this;
      }

      public final Builder clearType()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.type_ = Client.MembershipChange.Type.UNKNOWN;
        return this;
      }

      public final String getConversationId()
      {
        Object localObject = this.conversationId_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.conversationId_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final Client.MembershipChange getDefaultInstanceForType()
      {
        return Client.MembershipChange.getDefaultInstance();
      }

      public final Data.Participant getParticipant(int paramInt)
      {
        return (Data.Participant)this.participant_.get(paramInt);
      }

      public final int getParticipantCount()
      {
        return this.participant_.size();
      }

      public final String getParticipantId()
      {
        Object localObject = this.participantId_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.participantId_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final List<Data.Participant> getParticipantList()
      {
        return Collections.unmodifiableList(this.participant_);
      }

      public final String getRecipientId(int paramInt)
      {
        return (String)this.recipientId_.get(paramInt);
      }

      public final int getRecipientIdCount()
      {
        return this.recipientId_.size();
      }

      public final List<String> getRecipientIdList()
      {
        return Collections.unmodifiableList(this.recipientId_);
      }

      public final String getSenderId()
      {
        Object localObject = this.senderId_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.senderId_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final long getTimestamp()
      {
        return this.timestamp_;
      }

      public final Client.MembershipChange.Type getType()
      {
        return this.type_;
      }

      public final boolean hasConversationId()
      {
        if ((0x4 & this.bitField0_) == 4);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasParticipantId()
      {
        if ((0x8 & this.bitField0_) == 8);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasSenderId()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasTimestamp()
      {
        if ((0x20 & this.bitField0_) == 32);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasType()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Client.MembershipChange paramMembershipChange)
      {
        if (paramMembershipChange == Client.MembershipChange.getDefaultInstance());
        while (true)
        {
          return this;
          if (paramMembershipChange.hasType())
            setType(paramMembershipChange.getType());
          if (paramMembershipChange.hasSenderId())
            setSenderId(paramMembershipChange.getSenderId());
          if (paramMembershipChange.hasConversationId())
            setConversationId(paramMembershipChange.getConversationId());
          if (paramMembershipChange.hasParticipantId())
            setParticipantId(paramMembershipChange.getParticipantId());
          if (!paramMembershipChange.recipientId_.isEmpty())
          {
            if (!this.recipientId_.isEmpty())
              break label178;
            this.recipientId_ = paramMembershipChange.recipientId_;
            this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
          }
          while (true)
          {
            if (paramMembershipChange.hasTimestamp())
              setTimestamp(paramMembershipChange.getTimestamp());
            if (paramMembershipChange.participant_.isEmpty())
              break;
            if (!this.participant_.isEmpty())
              break label199;
            this.participant_ = paramMembershipChange.participant_;
            this.bitField0_ = (0xFFFFFFBF & this.bitField0_);
            break;
            label178: ensureRecipientIdIsMutable();
            this.recipientId_.addAll(paramMembershipChange.recipientId_);
          }
          label199: ensureParticipantIsMutable();
          this.participant_.addAll(paramMembershipChange.participant_);
        }
      }

      public final Builder setConversationId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x4 | this.bitField0_);
        this.conversationId_ = paramString;
        return this;
      }

      public final Builder setParticipant(int paramInt, Data.Participant.Builder paramBuilder)
      {
        ensureParticipantIsMutable();
        this.participant_.set(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder setParticipant(int paramInt, Data.Participant paramParticipant)
      {
        if (paramParticipant == null)
          throw new NullPointerException();
        ensureParticipantIsMutable();
        this.participant_.set(paramInt, paramParticipant);
        return this;
      }

      public final Builder setParticipantId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x8 | this.bitField0_);
        this.participantId_ = paramString;
        return this;
      }

      public final Builder setRecipientId(int paramInt, String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        ensureRecipientIdIsMutable();
        this.recipientId_.set(paramInt, paramString);
        return this;
      }

      public final Builder setSenderId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x2 | this.bitField0_);
        this.senderId_ = paramString;
        return this;
      }

      public final Builder setTimestamp(long paramLong)
      {
        this.bitField0_ = (0x20 | this.bitField0_);
        this.timestamp_ = paramLong;
        return this;
      }

      public final Builder setType(Client.MembershipChange.Type paramType)
      {
        if (paramType == null)
          throw new NullPointerException();
        this.bitField0_ = (0x1 | this.bitField0_);
        this.type_ = paramType;
        return this;
      }
    }

    public static enum Type
      implements Internal.EnumLite
    {
      private static Internal.EnumLiteMap<Type> internalValueMap = new Internal.EnumLiteMap()
      {
      };
      private final int value;

      static
      {
        JOIN = new Type("JOIN", 1, 1);
        LEAVE = new Type("LEAVE", 2, 2);
        Type[] arrayOfType = new Type[3];
        arrayOfType[0] = UNKNOWN;
        arrayOfType[1] = JOIN;
        arrayOfType[2] = LEAVE;
      }

      private Type(int paramInt1, int paramInt2)
      {
        this.value = paramInt1;
      }

      public static Type valueOf(int paramInt)
      {
        Type localType;
        switch (paramInt)
        {
        default:
          localType = null;
        case 0:
        case 1:
        case 2:
        }
        while (true)
        {
          return localType;
          localType = UNKNOWN;
          continue;
          localType = JOIN;
          continue;
          localType = LEAVE;
        }
      }

      public final int getNumber()
      {
        return this.value;
      }
    }
  }

  public static abstract interface MembershipChangeOrBuilder extends MessageLiteOrBuilder
  {
    public abstract String getConversationId();

    public abstract Data.Participant getParticipant(int paramInt);

    public abstract int getParticipantCount();

    public abstract String getParticipantId();

    public abstract List<Data.Participant> getParticipantList();

    public abstract String getRecipientId(int paramInt);

    public abstract int getRecipientIdCount();

    public abstract List<String> getRecipientIdList();

    public abstract String getSenderId();

    public abstract long getTimestamp();

    public abstract Client.MembershipChange.Type getType();

    public abstract boolean hasConversationId();

    public abstract boolean hasParticipantId();

    public abstract boolean hasSenderId();

    public abstract boolean hasTimestamp();

    public abstract boolean hasType();
  }

  public static final class Migration extends GeneratedMessageLite
    implements Client.MigrationOrBuilder
  {
    private static final Migration defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private long migratedAt_;
    private Object newId_;
    private Object oldId_;
    private Object replacedNewId_;
    private Object replacedOldId_;

    static
    {
      Migration localMigration = new Migration();
      defaultInstance = localMigration;
      localMigration.oldId_ = "";
      localMigration.newId_ = "";
      localMigration.migratedAt_ = 0L;
      localMigration.replacedOldId_ = "";
      localMigration.replacedNewId_ = "";
    }

    private Migration()
    {
    }

    private Migration(Builder paramBuilder)
    {
      super();
    }

    public static Migration getDefaultInstance()
    {
      return defaultInstance;
    }

    private ByteString getNewIdBytes()
    {
      Object localObject = this.newId_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.newId_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    private ByteString getOldIdBytes()
    {
      Object localObject = this.oldId_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.oldId_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    private ByteString getReplacedNewIdBytes()
    {
      Object localObject = this.replacedNewId_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.replacedNewId_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    private ByteString getReplacedOldIdBytes()
    {
      Object localObject = this.replacedOldId_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.replacedOldId_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static Builder newBuilder()
    {
      return Builder.access$21300();
    }

    public static Builder newBuilder(Migration paramMigration)
    {
      return Builder.access$21300().mergeFrom(paramMigration);
    }

    public final Migration getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final long getMigratedAt()
    {
      return this.migratedAt_;
    }

    public final String getNewId()
    {
      Object localObject1 = this.newId_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.newId_ = str;
      }
    }

    public final String getOldId()
    {
      Object localObject1 = this.oldId_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.oldId_ = str;
      }
    }

    public final String getReplacedNewId()
    {
      Object localObject1 = this.replacedNewId_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.replacedNewId_ = str;
      }
    }

    public final String getReplacedOldId()
    {
      Object localObject1 = this.replacedOldId_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.replacedOldId_ = str;
      }
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeBytesSize(1, getOldIdBytes());
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeBytesSize(2, getNewIdBytes());
        if ((0x4 & this.bitField0_) == 4)
          k += CodedOutputStream.computeInt64Size(3, this.migratedAt_);
        if ((0x8 & this.bitField0_) == 8)
          k += CodedOutputStream.computeBytesSize(5, getReplacedOldIdBytes());
        if ((0x10 & this.bitField0_) == 16)
          k += CodedOutputStream.computeBytesSize(6, getReplacedNewIdBytes());
        this.memoizedSerializedSize = k;
      }
    }

    public final boolean hasMigratedAt()
    {
      if ((0x4 & this.bitField0_) == 4);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasNewId()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasOldId()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean hasReplacedNewId()
    {
      if ((0x10 & this.bitField0_) == 16);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasReplacedOldId()
    {
      if ((0x8 & this.bitField0_) == 8);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeBytes(1, getOldIdBytes());
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeBytes(2, getNewIdBytes());
      if ((0x4 & this.bitField0_) == 4)
        paramCodedOutputStream.writeInt64(3, this.migratedAt_);
      if ((0x8 & this.bitField0_) == 8)
        paramCodedOutputStream.writeBytes(5, getReplacedOldIdBytes());
      if ((0x10 & this.bitField0_) == 16)
        paramCodedOutputStream.writeBytes(6, getReplacedNewIdBytes());
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Client.Migration, Builder>
      implements Client.MigrationOrBuilder
    {
      private int bitField0_;
      private long migratedAt_;
      private Object newId_ = "";
      private Object oldId_ = "";
      private Object replacedNewId_ = "";
      private Object replacedOldId_ = "";

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 10:
            this.bitField0_ = (0x1 | this.bitField0_);
            this.oldId_ = paramCodedInputStream.readBytes();
            break;
          case 18:
            this.bitField0_ = (0x2 | this.bitField0_);
            this.newId_ = paramCodedInputStream.readBytes();
            break;
          case 24:
            this.bitField0_ = (0x4 | this.bitField0_);
            this.migratedAt_ = paramCodedInputStream.readInt64();
            break;
          case 42:
            this.bitField0_ = (0x8 | this.bitField0_);
            this.replacedOldId_ = paramCodedInputStream.readBytes();
            break;
          case 50:
          }
          this.bitField0_ = (0x10 | this.bitField0_);
          this.replacedNewId_ = paramCodedInputStream.readBytes();
        }
      }

      public final Client.Migration build()
      {
        Client.Migration localMigration = buildPartial();
        if (!localMigration.isInitialized())
          throw new UninitializedMessageException();
        return localMigration;
      }

      public final Client.Migration buildPartial()
      {
        Client.Migration localMigration = new Client.Migration(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Client.Migration.access$21502(localMigration, this.oldId_);
        if ((i & 0x2) == 2)
          k |= 2;
        Client.Migration.access$21602(localMigration, this.newId_);
        if ((i & 0x4) == 4)
          k |= 4;
        Client.Migration.access$21702(localMigration, this.migratedAt_);
        if ((i & 0x8) == 8)
          k |= 8;
        Client.Migration.access$21802(localMigration, this.replacedOldId_);
        if ((i & 0x10) == 16)
          k |= 16;
        Client.Migration.access$21902(localMigration, this.replacedNewId_);
        Client.Migration.access$22002(localMigration, k);
        return localMigration;
      }

      public final Builder clear()
      {
        super.clear();
        this.oldId_ = "";
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.newId_ = "";
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.migratedAt_ = 0L;
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.replacedOldId_ = "";
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        this.replacedNewId_ = "";
        this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        return this;
      }

      public final Builder clearMigratedAt()
      {
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.migratedAt_ = 0L;
        return this;
      }

      public final Builder clearNewId()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.newId_ = Client.Migration.getDefaultInstance().getNewId();
        return this;
      }

      public final Builder clearOldId()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.oldId_ = Client.Migration.getDefaultInstance().getOldId();
        return this;
      }

      public final Builder clearReplacedNewId()
      {
        this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        this.replacedNewId_ = Client.Migration.getDefaultInstance().getReplacedNewId();
        return this;
      }

      public final Builder clearReplacedOldId()
      {
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        this.replacedOldId_ = Client.Migration.getDefaultInstance().getReplacedOldId();
        return this;
      }

      public final Client.Migration getDefaultInstanceForType()
      {
        return Client.Migration.getDefaultInstance();
      }

      public final long getMigratedAt()
      {
        return this.migratedAt_;
      }

      public final String getNewId()
      {
        Object localObject = this.newId_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.newId_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final String getOldId()
      {
        Object localObject = this.oldId_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.oldId_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final String getReplacedNewId()
      {
        Object localObject = this.replacedNewId_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.replacedNewId_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final String getReplacedOldId()
      {
        Object localObject = this.replacedOldId_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.replacedOldId_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final boolean hasMigratedAt()
      {
        if ((0x4 & this.bitField0_) == 4);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasNewId()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasOldId()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean hasReplacedNewId()
      {
        if ((0x10 & this.bitField0_) == 16);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasReplacedOldId()
      {
        if ((0x8 & this.bitField0_) == 8);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Client.Migration paramMigration)
      {
        if (paramMigration == Client.Migration.getDefaultInstance());
        while (true)
        {
          return this;
          if (paramMigration.hasOldId())
            setOldId(paramMigration.getOldId());
          if (paramMigration.hasNewId())
            setNewId(paramMigration.getNewId());
          if (paramMigration.hasMigratedAt())
            setMigratedAt(paramMigration.getMigratedAt());
          if (paramMigration.hasReplacedOldId())
            setReplacedOldId(paramMigration.getReplacedOldId());
          if (paramMigration.hasReplacedNewId())
            setReplacedNewId(paramMigration.getReplacedNewId());
        }
      }

      public final Builder setMigratedAt(long paramLong)
      {
        this.bitField0_ = (0x4 | this.bitField0_);
        this.migratedAt_ = paramLong;
        return this;
      }

      public final Builder setNewId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x2 | this.bitField0_);
        this.newId_ = paramString;
        return this;
      }

      public final Builder setOldId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x1 | this.bitField0_);
        this.oldId_ = paramString;
        return this;
      }

      public final Builder setReplacedNewId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x10 | this.bitField0_);
        this.replacedNewId_ = paramString;
        return this;
      }

      public final Builder setReplacedOldId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x8 | this.bitField0_);
        this.replacedOldId_ = paramString;
        return this;
      }
    }
  }

  public static abstract interface MigrationOrBuilder extends MessageLiteOrBuilder
  {
    public abstract long getMigratedAt();

    public abstract String getNewId();

    public abstract String getOldId();

    public abstract String getReplacedNewId();

    public abstract String getReplacedOldId();

    public abstract boolean hasMigratedAt();

    public abstract boolean hasNewId();

    public abstract boolean hasOldId();

    public abstract boolean hasReplacedNewId();

    public abstract boolean hasReplacedOldId();
  }

  public static final class NewConversation extends GeneratedMessageLite
    implements Client.NewConversationOrBuilder
  {
    private static final NewConversation defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private Client.ClientConversation clientConversation_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private Object senderId_;
    private Data.StubbyInfo stubbyInfo_;

    static
    {
      NewConversation localNewConversation = new NewConversation();
      defaultInstance = localNewConversation;
      localNewConversation.clientConversation_ = Client.ClientConversation.getDefaultInstance();
      localNewConversation.senderId_ = "";
      localNewConversation.stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
    }

    private NewConversation()
    {
    }

    private NewConversation(Builder paramBuilder)
    {
      super();
    }

    public static NewConversation getDefaultInstance()
    {
      return defaultInstance;
    }

    private ByteString getSenderIdBytes()
    {
      Object localObject = this.senderId_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.senderId_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static Builder newBuilder()
    {
      return Builder.access$24800();
    }

    public static Builder newBuilder(NewConversation paramNewConversation)
    {
      return Builder.access$24800().mergeFrom(paramNewConversation);
    }

    public final Client.ClientConversation getClientConversation()
    {
      return this.clientConversation_;
    }

    public final NewConversation getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final String getSenderId()
    {
      Object localObject1 = this.senderId_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.senderId_ = str;
      }
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeMessageSize(1, this.clientConversation_);
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeBytesSize(2, getSenderIdBytes());
        if ((0x4 & this.bitField0_) == 4)
          k += CodedOutputStream.computeMessageSize(3, this.stubbyInfo_);
        this.memoizedSerializedSize = k;
      }
    }

    public final Data.StubbyInfo getStubbyInfo()
    {
      return this.stubbyInfo_;
    }

    public final boolean hasClientConversation()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean hasSenderId()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasStubbyInfo()
    {
      if ((0x4 & this.bitField0_) == 4);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeMessage(1, this.clientConversation_);
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeBytes(2, getSenderIdBytes());
      if ((0x4 & this.bitField0_) == 4)
        paramCodedOutputStream.writeMessage(3, this.stubbyInfo_);
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Client.NewConversation, Builder>
      implements Client.NewConversationOrBuilder
    {
      private int bitField0_;
      private Client.ClientConversation clientConversation_ = Client.ClientConversation.getDefaultInstance();
      private Object senderId_ = "";
      private Data.StubbyInfo stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 10:
            Client.ClientConversation.Builder localBuilder1 = Client.ClientConversation.newBuilder();
            if (hasClientConversation())
              localBuilder1.mergeFrom(getClientConversation());
            paramCodedInputStream.readMessage(localBuilder1, paramExtensionRegistryLite);
            setClientConversation(localBuilder1.buildPartial());
            break;
          case 18:
            this.bitField0_ = (0x2 | this.bitField0_);
            this.senderId_ = paramCodedInputStream.readBytes();
            break;
          case 26:
          }
          Data.StubbyInfo.Builder localBuilder = Data.StubbyInfo.newBuilder();
          if (hasStubbyInfo())
            localBuilder.mergeFrom(getStubbyInfo());
          paramCodedInputStream.readMessage(localBuilder, paramExtensionRegistryLite);
          setStubbyInfo(localBuilder.buildPartial());
        }
      }

      public final Client.NewConversation build()
      {
        Client.NewConversation localNewConversation = buildPartial();
        if (!localNewConversation.isInitialized())
          throw new UninitializedMessageException();
        return localNewConversation;
      }

      public final Client.NewConversation buildPartial()
      {
        Client.NewConversation localNewConversation = new Client.NewConversation(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Client.NewConversation.access$25002(localNewConversation, this.clientConversation_);
        if ((i & 0x2) == 2)
          k |= 2;
        Client.NewConversation.access$25102(localNewConversation, this.senderId_);
        if ((i & 0x4) == 4)
          k |= 4;
        Client.NewConversation.access$25202(localNewConversation, this.stubbyInfo_);
        Client.NewConversation.access$25302(localNewConversation, k);
        return localNewConversation;
      }

      public final Builder clear()
      {
        super.clear();
        this.clientConversation_ = Client.ClientConversation.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.senderId_ = "";
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        return this;
      }

      public final Builder clearClientConversation()
      {
        this.clientConversation_ = Client.ClientConversation.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        return this;
      }

      public final Builder clearSenderId()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.senderId_ = Client.NewConversation.getDefaultInstance().getSenderId();
        return this;
      }

      public final Builder clearStubbyInfo()
      {
        this.stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        return this;
      }

      public final Client.ClientConversation getClientConversation()
      {
        return this.clientConversation_;
      }

      public final Client.NewConversation getDefaultInstanceForType()
      {
        return Client.NewConversation.getDefaultInstance();
      }

      public final String getSenderId()
      {
        Object localObject = this.senderId_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.senderId_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final Data.StubbyInfo getStubbyInfo()
      {
        return this.stubbyInfo_;
      }

      public final boolean hasClientConversation()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean hasSenderId()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasStubbyInfo()
      {
        if ((0x4 & this.bitField0_) == 4);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Client.NewConversation paramNewConversation)
      {
        if (paramNewConversation == Client.NewConversation.getDefaultInstance());
        Client.ClientConversation localClientConversation;
        label61: 
        do
        {
          return this;
          if (paramNewConversation.hasClientConversation())
          {
            localClientConversation = paramNewConversation.getClientConversation();
            if (((0x1 & this.bitField0_) != 1) || (this.clientConversation_ == Client.ClientConversation.getDefaultInstance()))
              break;
            this.clientConversation_ = Client.ClientConversation.newBuilder(this.clientConversation_).mergeFrom(localClientConversation).buildPartial();
            this.bitField0_ = (0x1 | this.bitField0_);
          }
          if (paramNewConversation.hasSenderId())
            setSenderId(paramNewConversation.getSenderId());
        }
        while (!paramNewConversation.hasStubbyInfo());
        Data.StubbyInfo localStubbyInfo = paramNewConversation.getStubbyInfo();
        if (((0x4 & this.bitField0_) == 4) && (this.stubbyInfo_ != Data.StubbyInfo.getDefaultInstance()));
        for (this.stubbyInfo_ = Data.StubbyInfo.newBuilder(this.stubbyInfo_).mergeFrom(localStubbyInfo).buildPartial(); ; this.stubbyInfo_ = localStubbyInfo)
        {
          this.bitField0_ = (0x4 | this.bitField0_);
          break;
          this.clientConversation_ = localClientConversation;
          break label61;
        }
      }

      public final Builder setClientConversation(Client.ClientConversation.Builder paramBuilder)
      {
        this.clientConversation_ = paramBuilder.build();
        this.bitField0_ = (0x1 | this.bitField0_);
        return this;
      }

      public final Builder setClientConversation(Client.ClientConversation paramClientConversation)
      {
        if (paramClientConversation == null)
          throw new NullPointerException();
        this.clientConversation_ = paramClientConversation;
        this.bitField0_ = (0x1 | this.bitField0_);
        return this;
      }

      public final Builder setSenderId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x2 | this.bitField0_);
        this.senderId_ = paramString;
        return this;
      }

      public final Builder setStubbyInfo(Data.StubbyInfo.Builder paramBuilder)
      {
        this.stubbyInfo_ = paramBuilder.build();
        this.bitField0_ = (0x4 | this.bitField0_);
        return this;
      }

      public final Builder setStubbyInfo(Data.StubbyInfo paramStubbyInfo)
      {
        if (paramStubbyInfo == null)
          throw new NullPointerException();
        this.stubbyInfo_ = paramStubbyInfo;
        this.bitField0_ = (0x4 | this.bitField0_);
        return this;
      }
    }
  }

  public static abstract interface NewConversationOrBuilder extends MessageLiteOrBuilder
  {
    public abstract Client.ClientConversation getClientConversation();

    public abstract String getSenderId();

    public abstract Data.StubbyInfo getStubbyInfo();

    public abstract boolean hasClientConversation();

    public abstract boolean hasSenderId();

    public abstract boolean hasStubbyInfo();
  }

  public static final class NewConversationRequest extends GeneratedMessageLite
    implements Client.NewConversationRequestOrBuilder
  {
    private static final NewConversationRequest defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private Client.ChatMessage chatMessage_;
    private Object conversationClientId_;
    private Data.ConversationMetadata conversationMetadata_;
    private Object displayName_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private LazyStringList participantId_;
    private List<Data.Participant> participant_;
    private boolean retry_;
    private Object senderId_;
    private Data.ConversationType type_;

    static
    {
      NewConversationRequest localNewConversationRequest = new NewConversationRequest();
      defaultInstance = localNewConversationRequest;
      localNewConversationRequest.type_ = Data.ConversationType.ONE_TO_ONE;
      localNewConversationRequest.conversationClientId_ = "";
      localNewConversationRequest.participantId_ = LazyStringArrayList.EMPTY;
      localNewConversationRequest.senderId_ = "";
      localNewConversationRequest.displayName_ = "";
      localNewConversationRequest.participant_ = Collections.emptyList();
      localNewConversationRequest.chatMessage_ = Client.ChatMessage.getDefaultInstance();
      localNewConversationRequest.retry_ = false;
      localNewConversationRequest.conversationMetadata_ = Data.ConversationMetadata.getDefaultInstance();
    }

    private NewConversationRequest()
    {
    }

    private NewConversationRequest(Builder paramBuilder)
    {
      super();
    }

    private ByteString getConversationClientIdBytes()
    {
      Object localObject = this.conversationClientId_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.conversationClientId_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static NewConversationRequest getDefaultInstance()
    {
      return defaultInstance;
    }

    private ByteString getDisplayNameBytes()
    {
      Object localObject = this.displayName_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.displayName_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    private ByteString getSenderIdBytes()
    {
      Object localObject = this.senderId_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.senderId_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static Builder newBuilder()
    {
      return Builder.access$22200();
    }

    public static Builder newBuilder(NewConversationRequest paramNewConversationRequest)
    {
      return Builder.access$22200().mergeFrom(paramNewConversationRequest);
    }

    public final Client.ChatMessage getChatMessage()
    {
      return this.chatMessage_;
    }

    public final String getConversationClientId()
    {
      Object localObject1 = this.conversationClientId_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.conversationClientId_ = str;
      }
    }

    public final Data.ConversationMetadata getConversationMetadata()
    {
      return this.conversationMetadata_;
    }

    public final NewConversationRequest getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final String getDisplayName()
    {
      Object localObject1 = this.displayName_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.displayName_ = str;
      }
    }

    public final Data.Participant getParticipant(int paramInt)
    {
      return (Data.Participant)this.participant_.get(paramInt);
    }

    public final int getParticipantCount()
    {
      return this.participant_.size();
    }

    public final String getParticipantId(int paramInt)
    {
      return (String)this.participantId_.get(paramInt);
    }

    public final int getParticipantIdCount()
    {
      return this.participantId_.size();
    }

    public final List<String> getParticipantIdList()
    {
      return this.participantId_;
    }

    public final List<Data.Participant> getParticipantList()
    {
      return this.participant_;
    }

    public final Data.ParticipantOrBuilder getParticipantOrBuilder(int paramInt)
    {
      return (Data.ParticipantOrBuilder)this.participant_.get(paramInt);
    }

    public final List<? extends Data.ParticipantOrBuilder> getParticipantOrBuilderList()
    {
      return this.participant_;
    }

    public final boolean getRetry()
    {
      return this.retry_;
    }

    public final String getSenderId()
    {
      Object localObject1 = this.senderId_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.senderId_ = str;
      }
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int i1;
      for (int i3 = i; ; i3 = i1)
      {
        return i3;
        int j = 0x1 & this.bitField0_;
        int k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeEnumSize(1, this.type_.getNumber());
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeBytesSize(2, getConversationClientIdBytes());
        int m = 0;
        for (int n = 0; n < this.participantId_.size(); n++)
          m += CodedOutputStream.computeBytesSizeNoTag(this.participantId_.getByteString(n));
        i1 = k + m + 1 * getParticipantIdList().size();
        if ((0x4 & this.bitField0_) == 4)
          i1 += CodedOutputStream.computeBytesSize(4, getSenderIdBytes());
        if ((0x8 & this.bitField0_) == 8)
          i1 += CodedOutputStream.computeBytesSize(5, getDisplayNameBytes());
        for (int i2 = 0; i2 < this.participant_.size(); i2++)
          i1 += CodedOutputStream.computeMessageSize(6, (MessageLite)this.participant_.get(i2));
        if ((0x10 & this.bitField0_) == 16)
          i1 += CodedOutputStream.computeMessageSize(7, this.chatMessage_);
        if ((0x20 & this.bitField0_) == 32)
          i1 += CodedOutputStream.computeBoolSize(8, this.retry_);
        if ((0x40 & this.bitField0_) == 64)
          i1 += CodedOutputStream.computeMessageSize(9, this.conversationMetadata_);
        this.memoizedSerializedSize = i1;
      }
    }

    public final Data.ConversationType getType()
    {
      return this.type_;
    }

    public final boolean hasChatMessage()
    {
      if ((0x10 & this.bitField0_) == 16);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasConversationClientId()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasConversationMetadata()
    {
      if ((0x40 & this.bitField0_) == 64);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasDisplayName()
    {
      if ((0x8 & this.bitField0_) == 8);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasRetry()
    {
      if ((0x20 & this.bitField0_) == 32);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasSenderId()
    {
      if ((0x4 & this.bitField0_) == 4);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasType()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeEnum(1, this.type_.getNumber());
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeBytes(2, getConversationClientIdBytes());
      for (int i = 0; i < this.participantId_.size(); i++)
        paramCodedOutputStream.writeBytes(3, this.participantId_.getByteString(i));
      if ((0x4 & this.bitField0_) == 4)
        paramCodedOutputStream.writeBytes(4, getSenderIdBytes());
      if ((0x8 & this.bitField0_) == 8)
        paramCodedOutputStream.writeBytes(5, getDisplayNameBytes());
      for (int j = 0; j < this.participant_.size(); j++)
        paramCodedOutputStream.writeMessage(6, (MessageLite)this.participant_.get(j));
      if ((0x10 & this.bitField0_) == 16)
        paramCodedOutputStream.writeMessage(7, this.chatMessage_);
      if ((0x20 & this.bitField0_) == 32)
        paramCodedOutputStream.writeBool(8, this.retry_);
      if ((0x40 & this.bitField0_) == 64)
        paramCodedOutputStream.writeMessage(9, this.conversationMetadata_);
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Client.NewConversationRequest, Builder>
      implements Client.NewConversationRequestOrBuilder
    {
      private int bitField0_;
      private Client.ChatMessage chatMessage_ = Client.ChatMessage.getDefaultInstance();
      private Object conversationClientId_ = "";
      private Data.ConversationMetadata conversationMetadata_ = Data.ConversationMetadata.getDefaultInstance();
      private Object displayName_ = "";
      private LazyStringList participantId_ = LazyStringArrayList.EMPTY;
      private List<Data.Participant> participant_ = Collections.emptyList();
      private boolean retry_;
      private Object senderId_ = "";
      private Data.ConversationType type_ = Data.ConversationType.ONE_TO_ONE;

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private void ensureParticipantIdIsMutable()
      {
        if ((0x4 & this.bitField0_) != 4)
        {
          this.participantId_ = new LazyStringArrayList(this.participantId_);
          this.bitField0_ = (0x4 | this.bitField0_);
        }
      }

      private void ensureParticipantIsMutable()
      {
        if ((0x20 & this.bitField0_) != 32)
        {
          this.participant_ = new ArrayList(this.participant_);
          this.bitField0_ = (0x20 | this.bitField0_);
        }
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 8:
            Data.ConversationType localConversationType = Data.ConversationType.valueOf(paramCodedInputStream.readEnum());
            if (localConversationType == null)
              continue;
            this.bitField0_ = (0x1 | this.bitField0_);
            this.type_ = localConversationType;
            break;
          case 18:
            this.bitField0_ = (0x2 | this.bitField0_);
            this.conversationClientId_ = paramCodedInputStream.readBytes();
            break;
          case 26:
            ensureParticipantIdIsMutable();
            this.participantId_.add(paramCodedInputStream.readBytes());
            break;
          case 34:
            this.bitField0_ = (0x8 | this.bitField0_);
            this.senderId_ = paramCodedInputStream.readBytes();
            break;
          case 42:
            this.bitField0_ = (0x10 | this.bitField0_);
            this.displayName_ = paramCodedInputStream.readBytes();
            break;
          case 50:
            Data.Participant.Builder localBuilder2 = Data.Participant.newBuilder();
            paramCodedInputStream.readMessage(localBuilder2, paramExtensionRegistryLite);
            addParticipant(localBuilder2.buildPartial());
            break;
          case 58:
            Client.ChatMessage.Builder localBuilder1 = Client.ChatMessage.newBuilder();
            if (hasChatMessage())
              localBuilder1.mergeFrom(getChatMessage());
            paramCodedInputStream.readMessage(localBuilder1, paramExtensionRegistryLite);
            setChatMessage(localBuilder1.buildPartial());
            break;
          case 64:
            this.bitField0_ = (0x80 | this.bitField0_);
            this.retry_ = paramCodedInputStream.readBool();
            break;
          case 74:
          }
          Data.ConversationMetadata.Builder localBuilder = Data.ConversationMetadata.newBuilder();
          if (hasConversationMetadata())
            localBuilder.mergeFrom(getConversationMetadata());
          paramCodedInputStream.readMessage(localBuilder, paramExtensionRegistryLite);
          setConversationMetadata(localBuilder.buildPartial());
        }
      }

      public final Builder addAllParticipant(Iterable<? extends Data.Participant> paramIterable)
      {
        ensureParticipantIsMutable();
        GeneratedMessageLite.Builder.addAll(paramIterable, this.participant_);
        return this;
      }

      public final Builder addAllParticipantId(Iterable<String> paramIterable)
      {
        ensureParticipantIdIsMutable();
        GeneratedMessageLite.Builder.addAll(paramIterable, this.participantId_);
        return this;
      }

      public final Builder addParticipant(int paramInt, Data.Participant.Builder paramBuilder)
      {
        ensureParticipantIsMutable();
        this.participant_.add(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder addParticipant(int paramInt, Data.Participant paramParticipant)
      {
        if (paramParticipant == null)
          throw new NullPointerException();
        ensureParticipantIsMutable();
        this.participant_.add(paramInt, paramParticipant);
        return this;
      }

      public final Builder addParticipant(Data.Participant.Builder paramBuilder)
      {
        ensureParticipantIsMutable();
        this.participant_.add(paramBuilder.build());
        return this;
      }

      public final Builder addParticipant(Data.Participant paramParticipant)
      {
        if (paramParticipant == null)
          throw new NullPointerException();
        ensureParticipantIsMutable();
        this.participant_.add(paramParticipant);
        return this;
      }

      public final Builder addParticipantId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        ensureParticipantIdIsMutable();
        this.participantId_.add(paramString);
        return this;
      }

      public final Client.NewConversationRequest build()
      {
        Client.NewConversationRequest localNewConversationRequest = buildPartial();
        if (!localNewConversationRequest.isInitialized())
          throw new UninitializedMessageException();
        return localNewConversationRequest;
      }

      public final Client.NewConversationRequest buildPartial()
      {
        Client.NewConversationRequest localNewConversationRequest = new Client.NewConversationRequest(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Client.NewConversationRequest.access$22402(localNewConversationRequest, this.type_);
        if ((i & 0x2) == 2)
          k |= 2;
        Client.NewConversationRequest.access$22502(localNewConversationRequest, this.conversationClientId_);
        if ((0x4 & this.bitField0_) == 4)
        {
          this.participantId_ = new UnmodifiableLazyStringList(this.participantId_);
          this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        }
        Client.NewConversationRequest.access$22602(localNewConversationRequest, this.participantId_);
        if ((i & 0x8) == 8)
          k |= 4;
        Client.NewConversationRequest.access$22702(localNewConversationRequest, this.senderId_);
        if ((i & 0x10) == 16)
          k |= 8;
        Client.NewConversationRequest.access$22802(localNewConversationRequest, this.displayName_);
        if ((0x20 & this.bitField0_) == 32)
        {
          this.participant_ = Collections.unmodifiableList(this.participant_);
          this.bitField0_ = (0xFFFFFFDF & this.bitField0_);
        }
        Client.NewConversationRequest.access$22902(localNewConversationRequest, this.participant_);
        if ((i & 0x40) == 64)
          k |= 16;
        Client.NewConversationRequest.access$23002(localNewConversationRequest, this.chatMessage_);
        if ((i & 0x80) == 128)
          k |= 32;
        Client.NewConversationRequest.access$23102(localNewConversationRequest, this.retry_);
        if ((i & 0x100) == 256)
          k |= 64;
        Client.NewConversationRequest.access$23202(localNewConversationRequest, this.conversationMetadata_);
        Client.NewConversationRequest.access$23302(localNewConversationRequest, k);
        return localNewConversationRequest;
      }

      public final Builder clear()
      {
        super.clear();
        this.type_ = Data.ConversationType.ONE_TO_ONE;
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.conversationClientId_ = "";
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.participantId_ = LazyStringArrayList.EMPTY;
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.senderId_ = "";
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        this.displayName_ = "";
        this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        this.participant_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFDF & this.bitField0_);
        this.chatMessage_ = Client.ChatMessage.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFBF & this.bitField0_);
        this.retry_ = false;
        this.bitField0_ = (0xFFFFFF7F & this.bitField0_);
        this.conversationMetadata_ = Data.ConversationMetadata.getDefaultInstance();
        this.bitField0_ = (0xFFFFFEFF & this.bitField0_);
        return this;
      }

      public final Builder clearChatMessage()
      {
        this.chatMessage_ = Client.ChatMessage.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFBF & this.bitField0_);
        return this;
      }

      public final Builder clearConversationClientId()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.conversationClientId_ = Client.NewConversationRequest.getDefaultInstance().getConversationClientId();
        return this;
      }

      public final Builder clearConversationMetadata()
      {
        this.conversationMetadata_ = Data.ConversationMetadata.getDefaultInstance();
        this.bitField0_ = (0xFFFFFEFF & this.bitField0_);
        return this;
      }

      public final Builder clearDisplayName()
      {
        this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        this.displayName_ = Client.NewConversationRequest.getDefaultInstance().getDisplayName();
        return this;
      }

      public final Builder clearParticipant()
      {
        this.participant_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFDF & this.bitField0_);
        return this;
      }

      public final Builder clearParticipantId()
      {
        this.participantId_ = LazyStringArrayList.EMPTY;
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        return this;
      }

      public final Builder clearRetry()
      {
        this.bitField0_ = (0xFFFFFF7F & this.bitField0_);
        this.retry_ = false;
        return this;
      }

      public final Builder clearSenderId()
      {
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        this.senderId_ = Client.NewConversationRequest.getDefaultInstance().getSenderId();
        return this;
      }

      public final Builder clearType()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.type_ = Data.ConversationType.ONE_TO_ONE;
        return this;
      }

      public final Client.ChatMessage getChatMessage()
      {
        return this.chatMessage_;
      }

      public final String getConversationClientId()
      {
        Object localObject = this.conversationClientId_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.conversationClientId_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final Data.ConversationMetadata getConversationMetadata()
      {
        return this.conversationMetadata_;
      }

      public final Client.NewConversationRequest getDefaultInstanceForType()
      {
        return Client.NewConversationRequest.getDefaultInstance();
      }

      public final String getDisplayName()
      {
        Object localObject = this.displayName_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.displayName_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final Data.Participant getParticipant(int paramInt)
      {
        return (Data.Participant)this.participant_.get(paramInt);
      }

      public final int getParticipantCount()
      {
        return this.participant_.size();
      }

      public final String getParticipantId(int paramInt)
      {
        return (String)this.participantId_.get(paramInt);
      }

      public final int getParticipantIdCount()
      {
        return this.participantId_.size();
      }

      public final List<String> getParticipantIdList()
      {
        return Collections.unmodifiableList(this.participantId_);
      }

      public final List<Data.Participant> getParticipantList()
      {
        return Collections.unmodifiableList(this.participant_);
      }

      public final boolean getRetry()
      {
        return this.retry_;
      }

      public final String getSenderId()
      {
        Object localObject = this.senderId_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.senderId_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final Data.ConversationType getType()
      {
        return this.type_;
      }

      public final boolean hasChatMessage()
      {
        if ((0x40 & this.bitField0_) == 64);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasConversationClientId()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasConversationMetadata()
      {
        if ((0x100 & this.bitField0_) == 256);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasDisplayName()
      {
        if ((0x10 & this.bitField0_) == 16);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasRetry()
      {
        if ((0x80 & this.bitField0_) == 128);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasSenderId()
      {
        if ((0x8 & this.bitField0_) == 8);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasType()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Client.NewConversationRequest paramNewConversationRequest)
      {
        if (paramNewConversationRequest == Client.NewConversationRequest.getDefaultInstance());
        label84: Client.ChatMessage localChatMessage;
        label159: label213: 
        do
        {
          return this;
          if (paramNewConversationRequest.hasType())
            setType(paramNewConversationRequest.getType());
          if (paramNewConversationRequest.hasConversationClientId())
            setConversationClientId(paramNewConversationRequest.getConversationClientId());
          if (!paramNewConversationRequest.participantId_.isEmpty())
          {
            if (!this.participantId_.isEmpty())
              break;
            this.participantId_ = paramNewConversationRequest.participantId_;
            this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
          }
          if (paramNewConversationRequest.hasSenderId())
            setSenderId(paramNewConversationRequest.getSenderId());
          if (paramNewConversationRequest.hasDisplayName())
            setDisplayName(paramNewConversationRequest.getDisplayName());
          if (!paramNewConversationRequest.participant_.isEmpty())
          {
            if (!this.participant_.isEmpty())
              break label330;
            this.participant_ = paramNewConversationRequest.participant_;
            this.bitField0_ = (0xFFFFFFDF & this.bitField0_);
          }
          if (paramNewConversationRequest.hasChatMessage())
          {
            localChatMessage = paramNewConversationRequest.getChatMessage();
            if (((0x40 & this.bitField0_) != 64) || (this.chatMessage_ == Client.ChatMessage.getDefaultInstance()))
              break label351;
            this.chatMessage_ = Client.ChatMessage.newBuilder(this.chatMessage_).mergeFrom(localChatMessage).buildPartial();
            this.bitField0_ = (0x40 | this.bitField0_);
          }
          if (paramNewConversationRequest.hasRetry())
            setRetry(paramNewConversationRequest.getRetry());
        }
        while (!paramNewConversationRequest.hasConversationMetadata());
        Data.ConversationMetadata localConversationMetadata = paramNewConversationRequest.getConversationMetadata();
        if (((0x100 & this.bitField0_) == 256) && (this.conversationMetadata_ != Data.ConversationMetadata.getDefaultInstance()));
        for (this.conversationMetadata_ = Data.ConversationMetadata.newBuilder(this.conversationMetadata_).mergeFrom(localConversationMetadata).buildPartial(); ; this.conversationMetadata_ = localConversationMetadata)
        {
          this.bitField0_ = (0x100 | this.bitField0_);
          break;
          ensureParticipantIdIsMutable();
          this.participantId_.addAll(paramNewConversationRequest.participantId_);
          break label84;
          label330: ensureParticipantIsMutable();
          this.participant_.addAll(paramNewConversationRequest.participant_);
          break label159;
          label351: this.chatMessage_ = localChatMessage;
          break label213;
        }
      }

      public final Builder setChatMessage(Client.ChatMessage.Builder paramBuilder)
      {
        this.chatMessage_ = paramBuilder.build();
        this.bitField0_ = (0x40 | this.bitField0_);
        return this;
      }

      public final Builder setChatMessage(Client.ChatMessage paramChatMessage)
      {
        if (paramChatMessage == null)
          throw new NullPointerException();
        this.chatMessage_ = paramChatMessage;
        this.bitField0_ = (0x40 | this.bitField0_);
        return this;
      }

      public final Builder setConversationClientId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x2 | this.bitField0_);
        this.conversationClientId_ = paramString;
        return this;
      }

      public final Builder setConversationMetadata(Data.ConversationMetadata.Builder paramBuilder)
      {
        this.conversationMetadata_ = paramBuilder.build();
        this.bitField0_ = (0x100 | this.bitField0_);
        return this;
      }

      public final Builder setConversationMetadata(Data.ConversationMetadata paramConversationMetadata)
      {
        if (paramConversationMetadata == null)
          throw new NullPointerException();
        this.conversationMetadata_ = paramConversationMetadata;
        this.bitField0_ = (0x100 | this.bitField0_);
        return this;
      }

      public final Builder setDisplayName(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x10 | this.bitField0_);
        this.displayName_ = paramString;
        return this;
      }

      public final Builder setParticipant(int paramInt, Data.Participant.Builder paramBuilder)
      {
        ensureParticipantIsMutable();
        this.participant_.set(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder setParticipant(int paramInt, Data.Participant paramParticipant)
      {
        if (paramParticipant == null)
          throw new NullPointerException();
        ensureParticipantIsMutable();
        this.participant_.set(paramInt, paramParticipant);
        return this;
      }

      public final Builder setParticipantId(int paramInt, String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        ensureParticipantIdIsMutable();
        this.participantId_.set(paramInt, paramString);
        return this;
      }

      public final Builder setRetry(boolean paramBoolean)
      {
        this.bitField0_ = (0x80 | this.bitField0_);
        this.retry_ = paramBoolean;
        return this;
      }

      public final Builder setSenderId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x8 | this.bitField0_);
        this.senderId_ = paramString;
        return this;
      }

      public final Builder setType(Data.ConversationType paramConversationType)
      {
        if (paramConversationType == null)
          throw new NullPointerException();
        this.bitField0_ = (0x1 | this.bitField0_);
        this.type_ = paramConversationType;
        return this;
      }
    }
  }

  public static abstract interface NewConversationRequestOrBuilder extends MessageLiteOrBuilder
  {
    public abstract Client.ChatMessage getChatMessage();

    public abstract String getConversationClientId();

    public abstract Data.ConversationMetadata getConversationMetadata();

    public abstract String getDisplayName();

    public abstract Data.Participant getParticipant(int paramInt);

    public abstract int getParticipantCount();

    public abstract String getParticipantId(int paramInt);

    public abstract int getParticipantIdCount();

    public abstract List<String> getParticipantIdList();

    public abstract List<Data.Participant> getParticipantList();

    public abstract boolean getRetry();

    public abstract String getSenderId();

    public abstract Data.ConversationType getType();

    public abstract boolean hasChatMessage();

    public abstract boolean hasConversationClientId();

    public abstract boolean hasConversationMetadata();

    public abstract boolean hasDisplayName();

    public abstract boolean hasRetry();

    public abstract boolean hasSenderId();

    public abstract boolean hasType();
  }

  public static final class NewConversationResponse extends GeneratedMessageLite
    implements Client.NewConversationResponseOrBuilder
  {
    private static final NewConversationResponse defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private Client.ClientConversation clientConversation_;
    private Object conversationClientId_;
    private InviteType inviteType_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private List<Client.ParticipantError> participantError_;
    private Client.Receipt receipt_;
    private Client.ChatMessage recentMessage_;
    private LazyStringList recipientId_;
    private Object senderId_;
    private Data.ResponseStatus status_;

    static
    {
      NewConversationResponse localNewConversationResponse = new NewConversationResponse();
      defaultInstance = localNewConversationResponse;
      localNewConversationResponse.status_ = Data.ResponseStatus.OK;
      localNewConversationResponse.conversationClientId_ = "";
      localNewConversationResponse.clientConversation_ = Client.ClientConversation.getDefaultInstance();
      localNewConversationResponse.senderId_ = "";
      localNewConversationResponse.participantError_ = Collections.emptyList();
      localNewConversationResponse.receipt_ = Client.Receipt.getDefaultInstance();
      localNewConversationResponse.inviteType_ = InviteType.UNKNOWN;
      localNewConversationResponse.recentMessage_ = Client.ChatMessage.getDefaultInstance();
      localNewConversationResponse.recipientId_ = LazyStringArrayList.EMPTY;
    }

    private NewConversationResponse()
    {
    }

    private NewConversationResponse(Builder paramBuilder)
    {
      super();
    }

    private ByteString getConversationClientIdBytes()
    {
      Object localObject = this.conversationClientId_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.conversationClientId_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static NewConversationResponse getDefaultInstance()
    {
      return defaultInstance;
    }

    private ByteString getSenderIdBytes()
    {
      Object localObject = this.senderId_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.senderId_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static Builder newBuilder()
    {
      return Builder.access$23500();
    }

    public static Builder newBuilder(NewConversationResponse paramNewConversationResponse)
    {
      return Builder.access$23500().mergeFrom(paramNewConversationResponse);
    }

    public final Client.ClientConversation getClientConversation()
    {
      return this.clientConversation_;
    }

    public final String getConversationClientId()
    {
      Object localObject1 = this.conversationClientId_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.conversationClientId_ = str;
      }
    }

    public final NewConversationResponse getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final InviteType getInviteType()
    {
      return this.inviteType_;
    }

    public final Client.ParticipantError getParticipantError(int paramInt)
    {
      return (Client.ParticipantError)this.participantError_.get(paramInt);
    }

    public final int getParticipantErrorCount()
    {
      return this.participantError_.size();
    }

    public final List<Client.ParticipantError> getParticipantErrorList()
    {
      return this.participantError_;
    }

    public final Client.ParticipantErrorOrBuilder getParticipantErrorOrBuilder(int paramInt)
    {
      return (Client.ParticipantErrorOrBuilder)this.participantError_.get(paramInt);
    }

    public final List<? extends Client.ParticipantErrorOrBuilder> getParticipantErrorOrBuilderList()
    {
      return this.participantError_;
    }

    public final Client.Receipt getReceipt()
    {
      return this.receipt_;
    }

    public final Client.ChatMessage getRecentMessage()
    {
      return this.recentMessage_;
    }

    public final String getRecipientId(int paramInt)
    {
      return (String)this.recipientId_.get(paramInt);
    }

    public final int getRecipientIdCount()
    {
      return this.recipientId_.size();
    }

    public final List<String> getRecipientIdList()
    {
      return this.recipientId_;
    }

    public final String getSenderId()
    {
      Object localObject1 = this.senderId_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.senderId_ = str;
      }
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int i1;
      for (int i3 = i; ; i3 = i1)
      {
        return i3;
        int j = 0x1 & this.bitField0_;
        int k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeEnumSize(1, this.status_.getNumber());
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeBytesSize(3, getConversationClientIdBytes());
        if ((0x4 & this.bitField0_) == 4)
          k += CodedOutputStream.computeMessageSize(4, this.clientConversation_);
        if ((0x8 & this.bitField0_) == 8)
          k += CodedOutputStream.computeBytesSize(5, getSenderIdBytes());
        int m = 0;
        for (int n = 0; n < this.recipientId_.size(); n++)
          m += CodedOutputStream.computeBytesSizeNoTag(this.recipientId_.getByteString(n));
        i1 = k + m + 1 * getRecipientIdList().size();
        for (int i2 = 0; i2 < this.participantError_.size(); i2++)
          i1 += CodedOutputStream.computeMessageSize(8, (MessageLite)this.participantError_.get(i2));
        if ((0x10 & this.bitField0_) == 16)
          i1 += CodedOutputStream.computeMessageSize(9, this.receipt_);
        if ((0x20 & this.bitField0_) == 32)
          i1 += CodedOutputStream.computeEnumSize(10, this.inviteType_.getNumber());
        if ((0x40 & this.bitField0_) == 64)
          i1 += CodedOutputStream.computeMessageSize(11, this.recentMessage_);
        this.memoizedSerializedSize = i1;
      }
    }

    public final Data.ResponseStatus getStatus()
    {
      return this.status_;
    }

    public final boolean hasClientConversation()
    {
      if ((0x4 & this.bitField0_) == 4);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasConversationClientId()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasInviteType()
    {
      if ((0x20 & this.bitField0_) == 32);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasReceipt()
    {
      if ((0x10 & this.bitField0_) == 16);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasRecentMessage()
    {
      if ((0x40 & this.bitField0_) == 64);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasSenderId()
    {
      if ((0x8 & this.bitField0_) == 8);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasStatus()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeEnum(1, this.status_.getNumber());
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeBytes(3, getConversationClientIdBytes());
      if ((0x4 & this.bitField0_) == 4)
        paramCodedOutputStream.writeMessage(4, this.clientConversation_);
      if ((0x8 & this.bitField0_) == 8)
        paramCodedOutputStream.writeBytes(5, getSenderIdBytes());
      for (int i = 0; i < this.recipientId_.size(); i++)
        paramCodedOutputStream.writeBytes(6, this.recipientId_.getByteString(i));
      for (int j = 0; j < this.participantError_.size(); j++)
        paramCodedOutputStream.writeMessage(8, (MessageLite)this.participantError_.get(j));
      if ((0x10 & this.bitField0_) == 16)
        paramCodedOutputStream.writeMessage(9, this.receipt_);
      if ((0x20 & this.bitField0_) == 32)
        paramCodedOutputStream.writeEnum(10, this.inviteType_.getNumber());
      if ((0x40 & this.bitField0_) == 64)
        paramCodedOutputStream.writeMessage(11, this.recentMessage_);
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Client.NewConversationResponse, Builder>
      implements Client.NewConversationResponseOrBuilder
    {
      private int bitField0_;
      private Client.ClientConversation clientConversation_ = Client.ClientConversation.getDefaultInstance();
      private Object conversationClientId_ = "";
      private Client.NewConversationResponse.InviteType inviteType_ = Client.NewConversationResponse.InviteType.UNKNOWN;
      private List<Client.ParticipantError> participantError_ = Collections.emptyList();
      private Client.Receipt receipt_ = Client.Receipt.getDefaultInstance();
      private Client.ChatMessage recentMessage_ = Client.ChatMessage.getDefaultInstance();
      private LazyStringList recipientId_ = LazyStringArrayList.EMPTY;
      private Object senderId_ = "";
      private Data.ResponseStatus status_ = Data.ResponseStatus.OK;

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private void ensureParticipantErrorIsMutable()
      {
        if ((0x10 & this.bitField0_) != 16)
        {
          this.participantError_ = new ArrayList(this.participantError_);
          this.bitField0_ = (0x10 | this.bitField0_);
        }
      }

      private void ensureRecipientIdIsMutable()
      {
        if ((0x100 & this.bitField0_) != 256)
        {
          this.recipientId_ = new LazyStringArrayList(this.recipientId_);
          this.bitField0_ = (0x100 | this.bitField0_);
        }
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 8:
            Data.ResponseStatus localResponseStatus = Data.ResponseStatus.valueOf(paramCodedInputStream.readEnum());
            if (localResponseStatus == null)
              continue;
            this.bitField0_ = (0x1 | this.bitField0_);
            this.status_ = localResponseStatus;
            break;
          case 26:
            this.bitField0_ = (0x2 | this.bitField0_);
            this.conversationClientId_ = paramCodedInputStream.readBytes();
            break;
          case 34:
            Client.ClientConversation.Builder localBuilder3 = Client.ClientConversation.newBuilder();
            if (hasClientConversation())
              localBuilder3.mergeFrom(getClientConversation());
            paramCodedInputStream.readMessage(localBuilder3, paramExtensionRegistryLite);
            setClientConversation(localBuilder3.buildPartial());
            break;
          case 42:
            this.bitField0_ = (0x8 | this.bitField0_);
            this.senderId_ = paramCodedInputStream.readBytes();
            break;
          case 50:
            ensureRecipientIdIsMutable();
            this.recipientId_.add(paramCodedInputStream.readBytes());
            break;
          case 66:
            Client.ParticipantError.Builder localBuilder2 = Client.ParticipantError.newBuilder();
            paramCodedInputStream.readMessage(localBuilder2, paramExtensionRegistryLite);
            addParticipantError(localBuilder2.buildPartial());
            break;
          case 74:
            Client.Receipt.Builder localBuilder1 = Client.Receipt.newBuilder();
            if (hasReceipt())
              localBuilder1.mergeFrom(getReceipt());
            paramCodedInputStream.readMessage(localBuilder1, paramExtensionRegistryLite);
            setReceipt(localBuilder1.buildPartial());
            break;
          case 80:
            Client.NewConversationResponse.InviteType localInviteType = Client.NewConversationResponse.InviteType.valueOf(paramCodedInputStream.readEnum());
            if (localInviteType == null)
              continue;
            this.bitField0_ = (0x40 | this.bitField0_);
            this.inviteType_ = localInviteType;
            break;
          case 90:
          }
          Client.ChatMessage.Builder localBuilder = Client.ChatMessage.newBuilder();
          if (hasRecentMessage())
            localBuilder.mergeFrom(getRecentMessage());
          paramCodedInputStream.readMessage(localBuilder, paramExtensionRegistryLite);
          setRecentMessage(localBuilder.buildPartial());
        }
      }

      public final Builder addAllParticipantError(Iterable<? extends Client.ParticipantError> paramIterable)
      {
        ensureParticipantErrorIsMutable();
        GeneratedMessageLite.Builder.addAll(paramIterable, this.participantError_);
        return this;
      }

      public final Builder addAllRecipientId(Iterable<String> paramIterable)
      {
        ensureRecipientIdIsMutable();
        GeneratedMessageLite.Builder.addAll(paramIterable, this.recipientId_);
        return this;
      }

      public final Builder addParticipantError(int paramInt, Client.ParticipantError.Builder paramBuilder)
      {
        ensureParticipantErrorIsMutable();
        this.participantError_.add(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder addParticipantError(int paramInt, Client.ParticipantError paramParticipantError)
      {
        if (paramParticipantError == null)
          throw new NullPointerException();
        ensureParticipantErrorIsMutable();
        this.participantError_.add(paramInt, paramParticipantError);
        return this;
      }

      public final Builder addParticipantError(Client.ParticipantError.Builder paramBuilder)
      {
        ensureParticipantErrorIsMutable();
        this.participantError_.add(paramBuilder.build());
        return this;
      }

      public final Builder addParticipantError(Client.ParticipantError paramParticipantError)
      {
        if (paramParticipantError == null)
          throw new NullPointerException();
        ensureParticipantErrorIsMutable();
        this.participantError_.add(paramParticipantError);
        return this;
      }

      public final Builder addRecipientId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        ensureRecipientIdIsMutable();
        this.recipientId_.add(paramString);
        return this;
      }

      public final Client.NewConversationResponse build()
      {
        Client.NewConversationResponse localNewConversationResponse = buildPartial();
        if (!localNewConversationResponse.isInitialized())
          throw new UninitializedMessageException();
        return localNewConversationResponse;
      }

      public final Client.NewConversationResponse buildPartial()
      {
        Client.NewConversationResponse localNewConversationResponse = new Client.NewConversationResponse(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Client.NewConversationResponse.access$23702(localNewConversationResponse, this.status_);
        if ((i & 0x2) == 2)
          k |= 2;
        Client.NewConversationResponse.access$23802(localNewConversationResponse, this.conversationClientId_);
        if ((i & 0x4) == 4)
          k |= 4;
        Client.NewConversationResponse.access$23902(localNewConversationResponse, this.clientConversation_);
        if ((i & 0x8) == 8)
          k |= 8;
        Client.NewConversationResponse.access$24002(localNewConversationResponse, this.senderId_);
        if ((0x10 & this.bitField0_) == 16)
        {
          this.participantError_ = Collections.unmodifiableList(this.participantError_);
          this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        }
        Client.NewConversationResponse.access$24102(localNewConversationResponse, this.participantError_);
        if ((i & 0x20) == 32)
          k |= 16;
        Client.NewConversationResponse.access$24202(localNewConversationResponse, this.receipt_);
        if ((i & 0x40) == 64)
          k |= 32;
        Client.NewConversationResponse.access$24302(localNewConversationResponse, this.inviteType_);
        if ((i & 0x80) == 128)
          k |= 64;
        Client.NewConversationResponse.access$24402(localNewConversationResponse, this.recentMessage_);
        if ((0x100 & this.bitField0_) == 256)
        {
          this.recipientId_ = new UnmodifiableLazyStringList(this.recipientId_);
          this.bitField0_ = (0xFFFFFEFF & this.bitField0_);
        }
        Client.NewConversationResponse.access$24502(localNewConversationResponse, this.recipientId_);
        Client.NewConversationResponse.access$24602(localNewConversationResponse, k);
        return localNewConversationResponse;
      }

      public final Builder clear()
      {
        super.clear();
        this.status_ = Data.ResponseStatus.OK;
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.conversationClientId_ = "";
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.clientConversation_ = Client.ClientConversation.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.senderId_ = "";
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        this.participantError_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        this.receipt_ = Client.Receipt.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFDF & this.bitField0_);
        this.inviteType_ = Client.NewConversationResponse.InviteType.UNKNOWN;
        this.bitField0_ = (0xFFFFFFBF & this.bitField0_);
        this.recentMessage_ = Client.ChatMessage.getDefaultInstance();
        this.bitField0_ = (0xFFFFFF7F & this.bitField0_);
        this.recipientId_ = LazyStringArrayList.EMPTY;
        this.bitField0_ = (0xFFFFFEFF & this.bitField0_);
        return this;
      }

      public final Builder clearClientConversation()
      {
        this.clientConversation_ = Client.ClientConversation.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        return this;
      }

      public final Builder clearConversationClientId()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.conversationClientId_ = Client.NewConversationResponse.getDefaultInstance().getConversationClientId();
        return this;
      }

      public final Builder clearInviteType()
      {
        this.bitField0_ = (0xFFFFFFBF & this.bitField0_);
        this.inviteType_ = Client.NewConversationResponse.InviteType.UNKNOWN;
        return this;
      }

      public final Builder clearParticipantError()
      {
        this.participantError_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        return this;
      }

      public final Builder clearReceipt()
      {
        this.receipt_ = Client.Receipt.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFDF & this.bitField0_);
        return this;
      }

      public final Builder clearRecentMessage()
      {
        this.recentMessage_ = Client.ChatMessage.getDefaultInstance();
        this.bitField0_ = (0xFFFFFF7F & this.bitField0_);
        return this;
      }

      public final Builder clearRecipientId()
      {
        this.recipientId_ = LazyStringArrayList.EMPTY;
        this.bitField0_ = (0xFFFFFEFF & this.bitField0_);
        return this;
      }

      public final Builder clearSenderId()
      {
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        this.senderId_ = Client.NewConversationResponse.getDefaultInstance().getSenderId();
        return this;
      }

      public final Builder clearStatus()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.status_ = Data.ResponseStatus.OK;
        return this;
      }

      public final Client.ClientConversation getClientConversation()
      {
        return this.clientConversation_;
      }

      public final String getConversationClientId()
      {
        Object localObject = this.conversationClientId_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.conversationClientId_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final Client.NewConversationResponse getDefaultInstanceForType()
      {
        return Client.NewConversationResponse.getDefaultInstance();
      }

      public final Client.NewConversationResponse.InviteType getInviteType()
      {
        return this.inviteType_;
      }

      public final Client.ParticipantError getParticipantError(int paramInt)
      {
        return (Client.ParticipantError)this.participantError_.get(paramInt);
      }

      public final int getParticipantErrorCount()
      {
        return this.participantError_.size();
      }

      public final List<Client.ParticipantError> getParticipantErrorList()
      {
        return Collections.unmodifiableList(this.participantError_);
      }

      public final Client.Receipt getReceipt()
      {
        return this.receipt_;
      }

      public final Client.ChatMessage getRecentMessage()
      {
        return this.recentMessage_;
      }

      public final String getRecipientId(int paramInt)
      {
        return (String)this.recipientId_.get(paramInt);
      }

      public final int getRecipientIdCount()
      {
        return this.recipientId_.size();
      }

      public final List<String> getRecipientIdList()
      {
        return Collections.unmodifiableList(this.recipientId_);
      }

      public final String getSenderId()
      {
        Object localObject = this.senderId_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.senderId_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final Data.ResponseStatus getStatus()
      {
        return this.status_;
      }

      public final boolean hasClientConversation()
      {
        if ((0x4 & this.bitField0_) == 4);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasConversationClientId()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasInviteType()
      {
        if ((0x40 & this.bitField0_) == 64);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasReceipt()
      {
        if ((0x20 & this.bitField0_) == 32);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasRecentMessage()
      {
        if ((0x80 & this.bitField0_) == 128);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasSenderId()
      {
        if ((0x8 & this.bitField0_) == 8);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasStatus()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Client.NewConversationResponse paramNewConversationResponse)
      {
        if (paramNewConversationResponse == Client.NewConversationResponse.getDefaultInstance());
        while (true)
        {
          return this;
          if (paramNewConversationResponse.hasStatus())
            setStatus(paramNewConversationResponse.getStatus());
          if (paramNewConversationResponse.hasConversationClientId())
            setConversationClientId(paramNewConversationResponse.getConversationClientId());
          Client.ClientConversation localClientConversation;
          label93: Client.Receipt localReceipt;
          label162: label216: Client.ChatMessage localChatMessage;
          if (paramNewConversationResponse.hasClientConversation())
          {
            localClientConversation = paramNewConversationResponse.getClientConversation();
            if (((0x4 & this.bitField0_) == 4) && (this.clientConversation_ != Client.ClientConversation.getDefaultInstance()))
            {
              this.clientConversation_ = Client.ClientConversation.newBuilder(this.clientConversation_).mergeFrom(localClientConversation).buildPartial();
              this.bitField0_ = (0x4 | this.bitField0_);
            }
          }
          else
          {
            if (paramNewConversationResponse.hasSenderId())
              setSenderId(paramNewConversationResponse.getSenderId());
            if (!paramNewConversationResponse.participantError_.isEmpty())
            {
              if (!this.participantError_.isEmpty())
                break label365;
              this.participantError_ = paramNewConversationResponse.participantError_;
              this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
            }
            if (paramNewConversationResponse.hasReceipt())
            {
              localReceipt = paramNewConversationResponse.getReceipt();
              if (((0x20 & this.bitField0_) != 32) || (this.receipt_ == Client.Receipt.getDefaultInstance()))
                break label386;
              this.receipt_ = Client.Receipt.newBuilder(this.receipt_).mergeFrom(localReceipt).buildPartial();
              this.bitField0_ = (0x20 | this.bitField0_);
            }
            if (paramNewConversationResponse.hasInviteType())
              setInviteType(paramNewConversationResponse.getInviteType());
            if (paramNewConversationResponse.hasRecentMessage())
            {
              localChatMessage = paramNewConversationResponse.getRecentMessage();
              if (((0x80 & this.bitField0_) != 128) || (this.recentMessage_ == Client.ChatMessage.getDefaultInstance()))
                break label395;
            }
          }
          label386: label395: for (this.recentMessage_ = Client.ChatMessage.newBuilder(this.recentMessage_).mergeFrom(localChatMessage).buildPartial(); ; this.recentMessage_ = localChatMessage)
          {
            this.bitField0_ = (0x80 | this.bitField0_);
            if (paramNewConversationResponse.recipientId_.isEmpty())
              break;
            if (!this.recipientId_.isEmpty())
              break label403;
            this.recipientId_ = paramNewConversationResponse.recipientId_;
            this.bitField0_ = (0xFFFFFEFF & this.bitField0_);
            break;
            this.clientConversation_ = localClientConversation;
            break label93;
            label365: ensureParticipantErrorIsMutable();
            this.participantError_.addAll(paramNewConversationResponse.participantError_);
            break label162;
            this.receipt_ = localReceipt;
            break label216;
          }
          label403: ensureRecipientIdIsMutable();
          this.recipientId_.addAll(paramNewConversationResponse.recipientId_);
        }
      }

      public final Builder setClientConversation(Client.ClientConversation.Builder paramBuilder)
      {
        this.clientConversation_ = paramBuilder.build();
        this.bitField0_ = (0x4 | this.bitField0_);
        return this;
      }

      public final Builder setClientConversation(Client.ClientConversation paramClientConversation)
      {
        if (paramClientConversation == null)
          throw new NullPointerException();
        this.clientConversation_ = paramClientConversation;
        this.bitField0_ = (0x4 | this.bitField0_);
        return this;
      }

      public final Builder setConversationClientId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x2 | this.bitField0_);
        this.conversationClientId_ = paramString;
        return this;
      }

      public final Builder setInviteType(Client.NewConversationResponse.InviteType paramInviteType)
      {
        if (paramInviteType == null)
          throw new NullPointerException();
        this.bitField0_ = (0x40 | this.bitField0_);
        this.inviteType_ = paramInviteType;
        return this;
      }

      public final Builder setParticipantError(int paramInt, Client.ParticipantError.Builder paramBuilder)
      {
        ensureParticipantErrorIsMutable();
        this.participantError_.set(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder setParticipantError(int paramInt, Client.ParticipantError paramParticipantError)
      {
        if (paramParticipantError == null)
          throw new NullPointerException();
        ensureParticipantErrorIsMutable();
        this.participantError_.set(paramInt, paramParticipantError);
        return this;
      }

      public final Builder setReceipt(Client.Receipt.Builder paramBuilder)
      {
        this.receipt_ = paramBuilder.build();
        this.bitField0_ = (0x20 | this.bitField0_);
        return this;
      }

      public final Builder setReceipt(Client.Receipt paramReceipt)
      {
        if (paramReceipt == null)
          throw new NullPointerException();
        this.receipt_ = paramReceipt;
        this.bitField0_ = (0x20 | this.bitField0_);
        return this;
      }

      public final Builder setRecentMessage(Client.ChatMessage.Builder paramBuilder)
      {
        this.recentMessage_ = paramBuilder.build();
        this.bitField0_ = (0x80 | this.bitField0_);
        return this;
      }

      public final Builder setRecentMessage(Client.ChatMessage paramChatMessage)
      {
        if (paramChatMessage == null)
          throw new NullPointerException();
        this.recentMessage_ = paramChatMessage;
        this.bitField0_ = (0x80 | this.bitField0_);
        return this;
      }

      public final Builder setRecipientId(int paramInt, String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        ensureRecipientIdIsMutable();
        this.recipientId_.set(paramInt, paramString);
        return this;
      }

      public final Builder setSenderId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x8 | this.bitField0_);
        this.senderId_ = paramString;
        return this;
      }

      public final Builder setStatus(Data.ResponseStatus paramResponseStatus)
      {
        if (paramResponseStatus == null)
          throw new NullPointerException();
        this.bitField0_ = (0x1 | this.bitField0_);
        this.status_ = paramResponseStatus;
        return this;
      }
    }

    public static enum InviteType
      implements Internal.EnumLite
    {
      private static Internal.EnumLiteMap<InviteType> internalValueMap = new Internal.EnumLiteMap()
      {
      };
      private final int value;

      static
      {
        NEW = new InviteType("NEW", 1, 1);
        INVITE = new InviteType("INVITE", 2, 2);
        InviteType[] arrayOfInviteType = new InviteType[3];
        arrayOfInviteType[0] = UNKNOWN;
        arrayOfInviteType[1] = NEW;
        arrayOfInviteType[2] = INVITE;
      }

      private InviteType(int paramInt1, int paramInt2)
      {
        this.value = paramInt1;
      }

      public static InviteType valueOf(int paramInt)
      {
        InviteType localInviteType;
        switch (paramInt)
        {
        default:
          localInviteType = null;
        case 0:
        case 1:
        case 2:
        }
        while (true)
        {
          return localInviteType;
          localInviteType = UNKNOWN;
          continue;
          localInviteType = NEW;
          continue;
          localInviteType = INVITE;
        }
      }

      public final int getNumber()
      {
        return this.value;
      }
    }
  }

  public static abstract interface NewConversationResponseOrBuilder extends MessageLiteOrBuilder
  {
    public abstract Client.ClientConversation getClientConversation();

    public abstract String getConversationClientId();

    public abstract Client.NewConversationResponse.InviteType getInviteType();

    public abstract Client.ParticipantError getParticipantError(int paramInt);

    public abstract int getParticipantErrorCount();

    public abstract List<Client.ParticipantError> getParticipantErrorList();

    public abstract Client.Receipt getReceipt();

    public abstract Client.ChatMessage getRecentMessage();

    public abstract String getRecipientId(int paramInt);

    public abstract int getRecipientIdCount();

    public abstract List<String> getRecipientIdList();

    public abstract String getSenderId();

    public abstract Data.ResponseStatus getStatus();

    public abstract boolean hasClientConversation();

    public abstract boolean hasConversationClientId();

    public abstract boolean hasInviteType();

    public abstract boolean hasReceipt();

    public abstract boolean hasRecentMessage();

    public abstract boolean hasSenderId();

    public abstract boolean hasStatus();
  }

  public static final class ParticipantError extends GeneratedMessageLite
    implements Client.ParticipantErrorOrBuilder
  {
    private static final ParticipantError defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private Object firstName_;
    private Object fullName_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private Object participantId_;
    private Data.ResponseStatus status_;

    static
    {
      ParticipantError localParticipantError = new ParticipantError();
      defaultInstance = localParticipantError;
      localParticipantError.participantId_ = "";
      localParticipantError.status_ = Data.ResponseStatus.OK;
      localParticipantError.firstName_ = "";
      localParticipantError.fullName_ = "";
    }

    private ParticipantError()
    {
    }

    private ParticipantError(Builder paramBuilder)
    {
      super();
    }

    public static ParticipantError getDefaultInstance()
    {
      return defaultInstance;
    }

    private ByteString getFirstNameBytes()
    {
      Object localObject = this.firstName_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.firstName_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    private ByteString getFullNameBytes()
    {
      Object localObject = this.fullName_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.fullName_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    private ByteString getParticipantIdBytes()
    {
      Object localObject = this.participantId_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.participantId_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static Builder newBuilder()
    {
      return Builder.access$47800();
    }

    public static Builder newBuilder(ParticipantError paramParticipantError)
    {
      return Builder.access$47800().mergeFrom(paramParticipantError);
    }

    public final ParticipantError getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final String getFirstName()
    {
      Object localObject1 = this.firstName_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.firstName_ = str;
      }
    }

    public final String getFullName()
    {
      Object localObject1 = this.fullName_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.fullName_ = str;
      }
    }

    public final String getParticipantId()
    {
      Object localObject1 = this.participantId_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.participantId_ = str;
      }
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeBytesSize(1, getParticipantIdBytes());
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeEnumSize(2, this.status_.getNumber());
        if ((0x4 & this.bitField0_) == 4)
          k += CodedOutputStream.computeBytesSize(3, getFirstNameBytes());
        if ((0x8 & this.bitField0_) == 8)
          k += CodedOutputStream.computeBytesSize(4, getFullNameBytes());
        this.memoizedSerializedSize = k;
      }
    }

    public final Data.ResponseStatus getStatus()
    {
      return this.status_;
    }

    public final boolean hasFirstName()
    {
      if ((0x4 & this.bitField0_) == 4);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasFullName()
    {
      if ((0x8 & this.bitField0_) == 8);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasParticipantId()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean hasStatus()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeBytes(1, getParticipantIdBytes());
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeEnum(2, this.status_.getNumber());
      if ((0x4 & this.bitField0_) == 4)
        paramCodedOutputStream.writeBytes(3, getFirstNameBytes());
      if ((0x8 & this.bitField0_) == 8)
        paramCodedOutputStream.writeBytes(4, getFullNameBytes());
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Client.ParticipantError, Builder>
      implements Client.ParticipantErrorOrBuilder
    {
      private int bitField0_;
      private Object firstName_ = "";
      private Object fullName_ = "";
      private Object participantId_ = "";
      private Data.ResponseStatus status_ = Data.ResponseStatus.OK;

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 10:
            this.bitField0_ = (0x1 | this.bitField0_);
            this.participantId_ = paramCodedInputStream.readBytes();
            break;
          case 16:
            Data.ResponseStatus localResponseStatus = Data.ResponseStatus.valueOf(paramCodedInputStream.readEnum());
            if (localResponseStatus == null)
              continue;
            this.bitField0_ = (0x2 | this.bitField0_);
            this.status_ = localResponseStatus;
            break;
          case 26:
            this.bitField0_ = (0x4 | this.bitField0_);
            this.firstName_ = paramCodedInputStream.readBytes();
            break;
          case 34:
          }
          this.bitField0_ = (0x8 | this.bitField0_);
          this.fullName_ = paramCodedInputStream.readBytes();
        }
      }

      public final Client.ParticipantError build()
      {
        Client.ParticipantError localParticipantError = buildPartial();
        if (!localParticipantError.isInitialized())
          throw new UninitializedMessageException();
        return localParticipantError;
      }

      public final Client.ParticipantError buildPartial()
      {
        Client.ParticipantError localParticipantError = new Client.ParticipantError(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Client.ParticipantError.access$48002(localParticipantError, this.participantId_);
        if ((i & 0x2) == 2)
          k |= 2;
        Client.ParticipantError.access$48102(localParticipantError, this.status_);
        if ((i & 0x4) == 4)
          k |= 4;
        Client.ParticipantError.access$48202(localParticipantError, this.firstName_);
        if ((i & 0x8) == 8)
          k |= 8;
        Client.ParticipantError.access$48302(localParticipantError, this.fullName_);
        Client.ParticipantError.access$48402(localParticipantError, k);
        return localParticipantError;
      }

      public final Builder clear()
      {
        super.clear();
        this.participantId_ = "";
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.status_ = Data.ResponseStatus.OK;
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.firstName_ = "";
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.fullName_ = "";
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        return this;
      }

      public final Builder clearFirstName()
      {
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.firstName_ = Client.ParticipantError.getDefaultInstance().getFirstName();
        return this;
      }

      public final Builder clearFullName()
      {
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        this.fullName_ = Client.ParticipantError.getDefaultInstance().getFullName();
        return this;
      }

      public final Builder clearParticipantId()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.participantId_ = Client.ParticipantError.getDefaultInstance().getParticipantId();
        return this;
      }

      public final Builder clearStatus()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.status_ = Data.ResponseStatus.OK;
        return this;
      }

      public final Client.ParticipantError getDefaultInstanceForType()
      {
        return Client.ParticipantError.getDefaultInstance();
      }

      public final String getFirstName()
      {
        Object localObject = this.firstName_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.firstName_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final String getFullName()
      {
        Object localObject = this.fullName_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.fullName_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final String getParticipantId()
      {
        Object localObject = this.participantId_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.participantId_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final Data.ResponseStatus getStatus()
      {
        return this.status_;
      }

      public final boolean hasFirstName()
      {
        if ((0x4 & this.bitField0_) == 4);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasFullName()
      {
        if ((0x8 & this.bitField0_) == 8);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasParticipantId()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean hasStatus()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Client.ParticipantError paramParticipantError)
      {
        if (paramParticipantError == Client.ParticipantError.getDefaultInstance());
        while (true)
        {
          return this;
          if (paramParticipantError.hasParticipantId())
            setParticipantId(paramParticipantError.getParticipantId());
          if (paramParticipantError.hasStatus())
            setStatus(paramParticipantError.getStatus());
          if (paramParticipantError.hasFirstName())
            setFirstName(paramParticipantError.getFirstName());
          if (paramParticipantError.hasFullName())
            setFullName(paramParticipantError.getFullName());
        }
      }

      public final Builder setFirstName(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x4 | this.bitField0_);
        this.firstName_ = paramString;
        return this;
      }

      public final Builder setFullName(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x8 | this.bitField0_);
        this.fullName_ = paramString;
        return this;
      }

      public final Builder setParticipantId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x1 | this.bitField0_);
        this.participantId_ = paramString;
        return this;
      }

      public final Builder setStatus(Data.ResponseStatus paramResponseStatus)
      {
        if (paramResponseStatus == null)
          throw new NullPointerException();
        this.bitField0_ = (0x2 | this.bitField0_);
        this.status_ = paramResponseStatus;
        return this;
      }
    }
  }

  public static abstract interface ParticipantErrorOrBuilder extends MessageLiteOrBuilder
  {
    public abstract String getFirstName();

    public abstract String getFullName();

    public abstract String getParticipantId();

    public abstract Data.ResponseStatus getStatus();

    public abstract boolean hasFirstName();

    public abstract boolean hasFullName();

    public abstract boolean hasParticipantId();

    public abstract boolean hasStatus();
  }

  public static final class PingRequest extends GeneratedMessageLite
    implements Client.PingRequestOrBuilder
  {
    private static final PingRequest defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private Object senderId_;
    private long timestamp_;

    static
    {
      PingRequest localPingRequest = new PingRequest();
      defaultInstance = localPingRequest;
      localPingRequest.timestamp_ = 0L;
      localPingRequest.senderId_ = "";
    }

    private PingRequest()
    {
    }

    private PingRequest(Builder paramBuilder)
    {
      super();
    }

    public static PingRequest getDefaultInstance()
    {
      return defaultInstance;
    }

    private ByteString getSenderIdBytes()
    {
      Object localObject = this.senderId_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.senderId_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static Builder newBuilder()
    {
      return Builder.access$41000();
    }

    public static Builder newBuilder(PingRequest paramPingRequest)
    {
      return Builder.access$41000().mergeFrom(paramPingRequest);
    }

    public final PingRequest getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final String getSenderId()
    {
      Object localObject1 = this.senderId_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.senderId_ = str;
      }
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeInt64Size(1, this.timestamp_);
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeBytesSize(2, getSenderIdBytes());
        this.memoizedSerializedSize = k;
      }
    }

    public final long getTimestamp()
    {
      return this.timestamp_;
    }

    public final boolean hasSenderId()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasTimestamp()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeInt64(1, this.timestamp_);
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeBytes(2, getSenderIdBytes());
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Client.PingRequest, Builder>
      implements Client.PingRequestOrBuilder
    {
      private int bitField0_;
      private Object senderId_ = "";
      private long timestamp_;

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 8:
            this.bitField0_ = (0x1 | this.bitField0_);
            this.timestamp_ = paramCodedInputStream.readInt64();
            break;
          case 18:
          }
          this.bitField0_ = (0x2 | this.bitField0_);
          this.senderId_ = paramCodedInputStream.readBytes();
        }
      }

      public final Client.PingRequest build()
      {
        Client.PingRequest localPingRequest = buildPartial();
        if (!localPingRequest.isInitialized())
          throw new UninitializedMessageException();
        return localPingRequest;
      }

      public final Client.PingRequest buildPartial()
      {
        Client.PingRequest localPingRequest = new Client.PingRequest(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Client.PingRequest.access$41202(localPingRequest, this.timestamp_);
        if ((i & 0x2) == 2)
          k |= 2;
        Client.PingRequest.access$41302(localPingRequest, this.senderId_);
        Client.PingRequest.access$41402(localPingRequest, k);
        return localPingRequest;
      }

      public final Builder clear()
      {
        super.clear();
        this.timestamp_ = 0L;
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.senderId_ = "";
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        return this;
      }

      public final Builder clearSenderId()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.senderId_ = Client.PingRequest.getDefaultInstance().getSenderId();
        return this;
      }

      public final Builder clearTimestamp()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.timestamp_ = 0L;
        return this;
      }

      public final Client.PingRequest getDefaultInstanceForType()
      {
        return Client.PingRequest.getDefaultInstance();
      }

      public final String getSenderId()
      {
        Object localObject = this.senderId_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.senderId_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final long getTimestamp()
      {
        return this.timestamp_;
      }

      public final boolean hasSenderId()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasTimestamp()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Client.PingRequest paramPingRequest)
      {
        if (paramPingRequest == Client.PingRequest.getDefaultInstance());
        while (true)
        {
          return this;
          if (paramPingRequest.hasTimestamp())
            setTimestamp(paramPingRequest.getTimestamp());
          if (paramPingRequest.hasSenderId())
            setSenderId(paramPingRequest.getSenderId());
        }
      }

      public final Builder setSenderId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x2 | this.bitField0_);
        this.senderId_ = paramString;
        return this;
      }

      public final Builder setTimestamp(long paramLong)
      {
        this.bitField0_ = (0x1 | this.bitField0_);
        this.timestamp_ = paramLong;
        return this;
      }
    }
  }

  public static abstract interface PingRequestOrBuilder extends MessageLiteOrBuilder
  {
    public abstract String getSenderId();

    public abstract long getTimestamp();

    public abstract boolean hasSenderId();

    public abstract boolean hasTimestamp();
  }

  public static final class PingResponse extends GeneratedMessageLite
    implements Client.PingResponseOrBuilder
  {
    private static final PingResponse defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private Data.ResponseStatus status_;
    private long timestamp_;

    static
    {
      PingResponse localPingResponse = new PingResponse();
      defaultInstance = localPingResponse;
      localPingResponse.status_ = Data.ResponseStatus.OK;
      localPingResponse.timestamp_ = 0L;
    }

    private PingResponse()
    {
    }

    private PingResponse(Builder paramBuilder)
    {
      super();
    }

    public static PingResponse getDefaultInstance()
    {
      return defaultInstance;
    }

    public static Builder newBuilder()
    {
      return Builder.access$41600();
    }

    public static Builder newBuilder(PingResponse paramPingResponse)
    {
      return Builder.access$41600().mergeFrom(paramPingResponse);
    }

    public final PingResponse getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeEnumSize(1, this.status_.getNumber());
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeInt64Size(2, this.timestamp_);
        this.memoizedSerializedSize = k;
      }
    }

    public final Data.ResponseStatus getStatus()
    {
      return this.status_;
    }

    public final long getTimestamp()
    {
      return this.timestamp_;
    }

    public final boolean hasStatus()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean hasTimestamp()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeEnum(1, this.status_.getNumber());
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeInt64(2, this.timestamp_);
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Client.PingResponse, Builder>
      implements Client.PingResponseOrBuilder
    {
      private int bitField0_;
      private Data.ResponseStatus status_ = Data.ResponseStatus.OK;
      private long timestamp_;

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 8:
            Data.ResponseStatus localResponseStatus = Data.ResponseStatus.valueOf(paramCodedInputStream.readEnum());
            if (localResponseStatus == null)
              continue;
            this.bitField0_ = (0x1 | this.bitField0_);
            this.status_ = localResponseStatus;
            break;
          case 16:
          }
          this.bitField0_ = (0x2 | this.bitField0_);
          this.timestamp_ = paramCodedInputStream.readInt64();
        }
      }

      public final Client.PingResponse build()
      {
        Client.PingResponse localPingResponse = buildPartial();
        if (!localPingResponse.isInitialized())
          throw new UninitializedMessageException();
        return localPingResponse;
      }

      public final Client.PingResponse buildPartial()
      {
        Client.PingResponse localPingResponse = new Client.PingResponse(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Client.PingResponse.access$41802(localPingResponse, this.status_);
        if ((i & 0x2) == 2)
          k |= 2;
        Client.PingResponse.access$41902(localPingResponse, this.timestamp_);
        Client.PingResponse.access$42002(localPingResponse, k);
        return localPingResponse;
      }

      public final Builder clear()
      {
        super.clear();
        this.status_ = Data.ResponseStatus.OK;
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.timestamp_ = 0L;
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        return this;
      }

      public final Builder clearStatus()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.status_ = Data.ResponseStatus.OK;
        return this;
      }

      public final Builder clearTimestamp()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.timestamp_ = 0L;
        return this;
      }

      public final Client.PingResponse getDefaultInstanceForType()
      {
        return Client.PingResponse.getDefaultInstance();
      }

      public final Data.ResponseStatus getStatus()
      {
        return this.status_;
      }

      public final long getTimestamp()
      {
        return this.timestamp_;
      }

      public final boolean hasStatus()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean hasTimestamp()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Client.PingResponse paramPingResponse)
      {
        if (paramPingResponse == Client.PingResponse.getDefaultInstance());
        while (true)
        {
          return this;
          if (paramPingResponse.hasStatus())
            setStatus(paramPingResponse.getStatus());
          if (paramPingResponse.hasTimestamp())
            setTimestamp(paramPingResponse.getTimestamp());
        }
      }

      public final Builder setStatus(Data.ResponseStatus paramResponseStatus)
      {
        if (paramResponseStatus == null)
          throw new NullPointerException();
        this.bitField0_ = (0x1 | this.bitField0_);
        this.status_ = paramResponseStatus;
        return this;
      }

      public final Builder setTimestamp(long paramLong)
      {
        this.bitField0_ = (0x2 | this.bitField0_);
        this.timestamp_ = paramLong;
        return this;
      }
    }
  }

  public static abstract interface PingResponseOrBuilder extends MessageLiteOrBuilder
  {
    public abstract Data.ResponseStatus getStatus();

    public abstract long getTimestamp();

    public abstract boolean hasStatus();

    public abstract boolean hasTimestamp();
  }

  public static final class Presence extends GeneratedMessageLite
    implements Client.PresenceOrBuilder
  {
    private static final Presence defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private Object conversationId_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private boolean reciprocate_;
    private Object senderId_;
    private long timestamp_;
    private Type type_;

    static
    {
      Presence localPresence = new Presence();
      defaultInstance = localPresence;
      localPresence.type_ = Type.UNKNOWN;
      localPresence.conversationId_ = "";
      localPresence.senderId_ = "";
      localPresence.reciprocate_ = false;
      localPresence.timestamp_ = 0L;
    }

    private Presence()
    {
    }

    private Presence(Builder paramBuilder)
    {
      super();
    }

    private ByteString getConversationIdBytes()
    {
      Object localObject = this.conversationId_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.conversationId_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static Presence getDefaultInstance()
    {
      return defaultInstance;
    }

    private ByteString getSenderIdBytes()
    {
      Object localObject = this.senderId_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.senderId_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static Builder newBuilder()
    {
      return Builder.access$9800();
    }

    public static Builder newBuilder(Presence paramPresence)
    {
      return Builder.access$9800().mergeFrom(paramPresence);
    }

    public final String getConversationId()
    {
      Object localObject1 = this.conversationId_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.conversationId_ = str;
      }
    }

    public final Presence getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final boolean getReciprocate()
    {
      return this.reciprocate_;
    }

    public final String getSenderId()
    {
      Object localObject1 = this.senderId_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.senderId_ = str;
      }
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeEnumSize(1, this.type_.getNumber());
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeBytesSize(2, getConversationIdBytes());
        if ((0x4 & this.bitField0_) == 4)
          k += CodedOutputStream.computeBytesSize(3, getSenderIdBytes());
        if ((0x8 & this.bitField0_) == 8)
          k += CodedOutputStream.computeBoolSize(4, this.reciprocate_);
        if ((0x10 & this.bitField0_) == 16)
          k += CodedOutputStream.computeInt64Size(5, this.timestamp_);
        this.memoizedSerializedSize = k;
      }
    }

    public final long getTimestamp()
    {
      return this.timestamp_;
    }

    public final Type getType()
    {
      return this.type_;
    }

    public final boolean hasConversationId()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasReciprocate()
    {
      if ((0x8 & this.bitField0_) == 8);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasSenderId()
    {
      if ((0x4 & this.bitField0_) == 4);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasTimestamp()
    {
      if ((0x10 & this.bitField0_) == 16);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasType()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeEnum(1, this.type_.getNumber());
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeBytes(2, getConversationIdBytes());
      if ((0x4 & this.bitField0_) == 4)
        paramCodedOutputStream.writeBytes(3, getSenderIdBytes());
      if ((0x8 & this.bitField0_) == 8)
        paramCodedOutputStream.writeBool(4, this.reciprocate_);
      if ((0x10 & this.bitField0_) == 16)
        paramCodedOutputStream.writeInt64(5, this.timestamp_);
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Client.Presence, Builder>
      implements Client.PresenceOrBuilder
    {
      private int bitField0_;
      private Object conversationId_ = "";
      private boolean reciprocate_;
      private Object senderId_ = "";
      private long timestamp_;
      private Client.Presence.Type type_ = Client.Presence.Type.UNKNOWN;

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 8:
            Client.Presence.Type localType = Client.Presence.Type.valueOf(paramCodedInputStream.readEnum());
            if (localType == null)
              continue;
            this.bitField0_ = (0x1 | this.bitField0_);
            this.type_ = localType;
            break;
          case 18:
            this.bitField0_ = (0x2 | this.bitField0_);
            this.conversationId_ = paramCodedInputStream.readBytes();
            break;
          case 26:
            this.bitField0_ = (0x4 | this.bitField0_);
            this.senderId_ = paramCodedInputStream.readBytes();
            break;
          case 32:
            this.bitField0_ = (0x8 | this.bitField0_);
            this.reciprocate_ = paramCodedInputStream.readBool();
            break;
          case 40:
          }
          this.bitField0_ = (0x10 | this.bitField0_);
          this.timestamp_ = paramCodedInputStream.readInt64();
        }
      }

      public final Client.Presence build()
      {
        Client.Presence localPresence = buildPartial();
        if (!localPresence.isInitialized())
          throw new UninitializedMessageException();
        return localPresence;
      }

      public final Client.Presence buildPartial()
      {
        Client.Presence localPresence = new Client.Presence(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Client.Presence.access$10002(localPresence, this.type_);
        if ((i & 0x2) == 2)
          k |= 2;
        Client.Presence.access$10102(localPresence, this.conversationId_);
        if ((i & 0x4) == 4)
          k |= 4;
        Client.Presence.access$10202(localPresence, this.senderId_);
        if ((i & 0x8) == 8)
          k |= 8;
        Client.Presence.access$10302(localPresence, this.reciprocate_);
        if ((i & 0x10) == 16)
          k |= 16;
        Client.Presence.access$10402(localPresence, this.timestamp_);
        Client.Presence.access$10502(localPresence, k);
        return localPresence;
      }

      public final Builder clear()
      {
        super.clear();
        this.type_ = Client.Presence.Type.UNKNOWN;
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.conversationId_ = "";
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.senderId_ = "";
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.reciprocate_ = false;
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        this.timestamp_ = 0L;
        this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        return this;
      }

      public final Builder clearConversationId()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.conversationId_ = Client.Presence.getDefaultInstance().getConversationId();
        return this;
      }

      public final Builder clearReciprocate()
      {
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        this.reciprocate_ = false;
        return this;
      }

      public final Builder clearSenderId()
      {
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.senderId_ = Client.Presence.getDefaultInstance().getSenderId();
        return this;
      }

      public final Builder clearTimestamp()
      {
        this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        this.timestamp_ = 0L;
        return this;
      }

      public final Builder clearType()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.type_ = Client.Presence.Type.UNKNOWN;
        return this;
      }

      public final String getConversationId()
      {
        Object localObject = this.conversationId_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.conversationId_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final Client.Presence getDefaultInstanceForType()
      {
        return Client.Presence.getDefaultInstance();
      }

      public final boolean getReciprocate()
      {
        return this.reciprocate_;
      }

      public final String getSenderId()
      {
        Object localObject = this.senderId_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.senderId_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final long getTimestamp()
      {
        return this.timestamp_;
      }

      public final Client.Presence.Type getType()
      {
        return this.type_;
      }

      public final boolean hasConversationId()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasReciprocate()
      {
        if ((0x8 & this.bitField0_) == 8);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasSenderId()
      {
        if ((0x4 & this.bitField0_) == 4);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasTimestamp()
      {
        if ((0x10 & this.bitField0_) == 16);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasType()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Client.Presence paramPresence)
      {
        if (paramPresence == Client.Presence.getDefaultInstance());
        while (true)
        {
          return this;
          if (paramPresence.hasType())
            setType(paramPresence.getType());
          if (paramPresence.hasConversationId())
            setConversationId(paramPresence.getConversationId());
          if (paramPresence.hasSenderId())
            setSenderId(paramPresence.getSenderId());
          if (paramPresence.hasReciprocate())
            setReciprocate(paramPresence.getReciprocate());
          if (paramPresence.hasTimestamp())
            setTimestamp(paramPresence.getTimestamp());
        }
      }

      public final Builder setConversationId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x2 | this.bitField0_);
        this.conversationId_ = paramString;
        return this;
      }

      public final Builder setReciprocate(boolean paramBoolean)
      {
        this.bitField0_ = (0x8 | this.bitField0_);
        this.reciprocate_ = paramBoolean;
        return this;
      }

      public final Builder setSenderId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x4 | this.bitField0_);
        this.senderId_ = paramString;
        return this;
      }

      public final Builder setTimestamp(long paramLong)
      {
        this.bitField0_ = (0x10 | this.bitField0_);
        this.timestamp_ = paramLong;
        return this;
      }

      public final Builder setType(Client.Presence.Type paramType)
      {
        if (paramType == null)
          throw new NullPointerException();
        this.bitField0_ = (0x1 | this.bitField0_);
        this.type_ = paramType;
        return this;
      }
    }

    public static enum Type
      implements Internal.EnumLite
    {
      private static Internal.EnumLiteMap<Type> internalValueMap = new Internal.EnumLiteMap()
      {
      };
      private final int value;

      static
      {
        FOCUS = new Type("FOCUS", 1, 1);
        UNFOCUS = new Type("UNFOCUS", 2, 2);
        Type[] arrayOfType = new Type[3];
        arrayOfType[0] = UNKNOWN;
        arrayOfType[1] = FOCUS;
        arrayOfType[2] = UNFOCUS;
      }

      private Type(int paramInt1, int paramInt2)
      {
        this.value = paramInt1;
      }

      public static Type valueOf(int paramInt)
      {
        Type localType;
        switch (paramInt)
        {
        default:
          localType = null;
        case 0:
        case 1:
        case 2:
        }
        while (true)
        {
          return localType;
          localType = UNKNOWN;
          continue;
          localType = FOCUS;
          continue;
          localType = UNFOCUS;
        }
      }

      public final int getNumber()
      {
        return this.value;
      }
    }
  }

  public static final class PresenceNotification extends GeneratedMessageLite
    implements Client.PresenceNotificationOrBuilder
  {
    private static final PresenceNotification defaultInstance = new PresenceNotification();
    private static final long serialVersionUID;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;

    private PresenceNotification()
    {
    }

    private PresenceNotification(Builder paramBuilder)
    {
      super();
    }

    public static PresenceNotification getDefaultInstance()
    {
      return defaultInstance;
    }

    public final PresenceNotification getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      while (true)
      {
        return i;
        this.memoizedSerializedSize = 0;
        i = 0;
      }
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Client.PresenceNotification, Builder>
      implements Client.PresenceNotificationOrBuilder
    {
      private Client.PresenceNotification buildPartial()
      {
        return new Client.PresenceNotification(this, (byte)0);
      }

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        int i;
        do
        {
          i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
          case 0:
          }
        }
        while (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i));
        return this;
      }

      public final Builder clear()
      {
        super.clear();
        return this;
      }

      public final Client.PresenceNotification getDefaultInstanceForType()
      {
        return Client.PresenceNotification.getDefaultInstance();
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Client.PresenceNotification paramPresenceNotification)
      {
        if (paramPresenceNotification == Client.PresenceNotification.getDefaultInstance());
        return this;
      }
    }

    public static enum Type
      implements Internal.EnumLite
    {
      private static Internal.EnumLiteMap<Type> internalValueMap = new Internal.EnumLiteMap()
      {
      };
      private final int value = 1;

      static
      {
        Type[] arrayOfType = new Type[1];
        arrayOfType[0] = TEMP;
      }

      private Type(int paramInt1, int paramInt2)
      {
      }

      public static Type valueOf(int paramInt)
      {
        switch (paramInt)
        {
        default:
        case 1:
        }
        for (Type localType = null; ; localType = TEMP)
          return localType;
      }

      public final int getNumber()
      {
        return this.value;
      }
    }
  }

  public static abstract interface PresenceNotificationOrBuilder extends MessageLiteOrBuilder
  {
  }

  public static abstract interface PresenceOrBuilder extends MessageLiteOrBuilder
  {
    public abstract String getConversationId();

    public abstract boolean getReciprocate();

    public abstract String getSenderId();

    public abstract long getTimestamp();

    public abstract Client.Presence.Type getType();

    public abstract boolean hasConversationId();

    public abstract boolean hasReciprocate();

    public abstract boolean hasSenderId();

    public abstract boolean hasTimestamp();

    public abstract boolean hasType();
  }

  public static final class PresenceRequest extends GeneratedMessageLite
    implements Client.PresenceRequestOrBuilder
  {
    private static final PresenceRequest defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private Object conversationId_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private boolean reciprocate_;
    private Data.StubbyInfo stubbyInfo_;
    private Client.Presence.Type type_;

    static
    {
      PresenceRequest localPresenceRequest = new PresenceRequest();
      defaultInstance = localPresenceRequest;
      localPresenceRequest.type_ = Client.Presence.Type.UNKNOWN;
      localPresenceRequest.conversationId_ = "";
      localPresenceRequest.reciprocate_ = false;
      localPresenceRequest.stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
    }

    private PresenceRequest()
    {
    }

    private PresenceRequest(Builder paramBuilder)
    {
      super();
    }

    private ByteString getConversationIdBytes()
    {
      Object localObject = this.conversationId_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.conversationId_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static PresenceRequest getDefaultInstance()
    {
      return defaultInstance;
    }

    public static Builder newBuilder()
    {
      return Builder.access$8500();
    }

    public static Builder newBuilder(PresenceRequest paramPresenceRequest)
    {
      return Builder.access$8500().mergeFrom(paramPresenceRequest);
    }

    public final String getConversationId()
    {
      Object localObject1 = this.conversationId_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.conversationId_ = str;
      }
    }

    public final PresenceRequest getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final boolean getReciprocate()
    {
      return this.reciprocate_;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeEnumSize(1, this.type_.getNumber());
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeBytesSize(2, getConversationIdBytes());
        if ((0x4 & this.bitField0_) == 4)
          k += CodedOutputStream.computeBoolSize(3, this.reciprocate_);
        if ((0x8 & this.bitField0_) == 8)
          k += CodedOutputStream.computeMessageSize(4, this.stubbyInfo_);
        this.memoizedSerializedSize = k;
      }
    }

    public final Data.StubbyInfo getStubbyInfo()
    {
      return this.stubbyInfo_;
    }

    public final Client.Presence.Type getType()
    {
      return this.type_;
    }

    public final boolean hasConversationId()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasReciprocate()
    {
      if ((0x4 & this.bitField0_) == 4);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasStubbyInfo()
    {
      if ((0x8 & this.bitField0_) == 8);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasType()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeEnum(1, this.type_.getNumber());
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeBytes(2, getConversationIdBytes());
      if ((0x4 & this.bitField0_) == 4)
        paramCodedOutputStream.writeBool(3, this.reciprocate_);
      if ((0x8 & this.bitField0_) == 8)
        paramCodedOutputStream.writeMessage(4, this.stubbyInfo_);
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Client.PresenceRequest, Builder>
      implements Client.PresenceRequestOrBuilder
    {
      private int bitField0_;
      private Object conversationId_ = "";
      private boolean reciprocate_;
      private Data.StubbyInfo stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
      private Client.Presence.Type type_ = Client.Presence.Type.UNKNOWN;

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 8:
            Client.Presence.Type localType = Client.Presence.Type.valueOf(paramCodedInputStream.readEnum());
            if (localType == null)
              continue;
            this.bitField0_ = (0x1 | this.bitField0_);
            this.type_ = localType;
            break;
          case 18:
            this.bitField0_ = (0x2 | this.bitField0_);
            this.conversationId_ = paramCodedInputStream.readBytes();
            break;
          case 24:
            this.bitField0_ = (0x4 | this.bitField0_);
            this.reciprocate_ = paramCodedInputStream.readBool();
            break;
          case 34:
          }
          Data.StubbyInfo.Builder localBuilder = Data.StubbyInfo.newBuilder();
          if (hasStubbyInfo())
            localBuilder.mergeFrom(getStubbyInfo());
          paramCodedInputStream.readMessage(localBuilder, paramExtensionRegistryLite);
          setStubbyInfo(localBuilder.buildPartial());
        }
      }

      public final Client.PresenceRequest build()
      {
        Client.PresenceRequest localPresenceRequest = buildPartial();
        if (!localPresenceRequest.isInitialized())
          throw new UninitializedMessageException();
        return localPresenceRequest;
      }

      public final Client.PresenceRequest buildPartial()
      {
        Client.PresenceRequest localPresenceRequest = new Client.PresenceRequest(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Client.PresenceRequest.access$8702(localPresenceRequest, this.type_);
        if ((i & 0x2) == 2)
          k |= 2;
        Client.PresenceRequest.access$8802(localPresenceRequest, this.conversationId_);
        if ((i & 0x4) == 4)
          k |= 4;
        Client.PresenceRequest.access$8902(localPresenceRequest, this.reciprocate_);
        if ((i & 0x8) == 8)
          k |= 8;
        Client.PresenceRequest.access$9002(localPresenceRequest, this.stubbyInfo_);
        Client.PresenceRequest.access$9102(localPresenceRequest, k);
        return localPresenceRequest;
      }

      public final Builder clear()
      {
        super.clear();
        this.type_ = Client.Presence.Type.UNKNOWN;
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.conversationId_ = "";
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.reciprocate_ = false;
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        return this;
      }

      public final Builder clearConversationId()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.conversationId_ = Client.PresenceRequest.getDefaultInstance().getConversationId();
        return this;
      }

      public final Builder clearReciprocate()
      {
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.reciprocate_ = false;
        return this;
      }

      public final Builder clearStubbyInfo()
      {
        this.stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        return this;
      }

      public final Builder clearType()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.type_ = Client.Presence.Type.UNKNOWN;
        return this;
      }

      public final String getConversationId()
      {
        Object localObject = this.conversationId_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.conversationId_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final Client.PresenceRequest getDefaultInstanceForType()
      {
        return Client.PresenceRequest.getDefaultInstance();
      }

      public final boolean getReciprocate()
      {
        return this.reciprocate_;
      }

      public final Data.StubbyInfo getStubbyInfo()
      {
        return this.stubbyInfo_;
      }

      public final Client.Presence.Type getType()
      {
        return this.type_;
      }

      public final boolean hasConversationId()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasReciprocate()
      {
        if ((0x4 & this.bitField0_) == 4);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasStubbyInfo()
      {
        if ((0x8 & this.bitField0_) == 8);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasType()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Client.PresenceRequest paramPresenceRequest)
      {
        if (paramPresenceRequest == Client.PresenceRequest.getDefaultInstance());
        do
        {
          return this;
          if (paramPresenceRequest.hasType())
            setType(paramPresenceRequest.getType());
          if (paramPresenceRequest.hasConversationId())
            setConversationId(paramPresenceRequest.getConversationId());
          if (paramPresenceRequest.hasReciprocate())
            setReciprocate(paramPresenceRequest.getReciprocate());
        }
        while (!paramPresenceRequest.hasStubbyInfo());
        Data.StubbyInfo localStubbyInfo = paramPresenceRequest.getStubbyInfo();
        if (((0x8 & this.bitField0_) == 8) && (this.stubbyInfo_ != Data.StubbyInfo.getDefaultInstance()));
        for (this.stubbyInfo_ = Data.StubbyInfo.newBuilder(this.stubbyInfo_).mergeFrom(localStubbyInfo).buildPartial(); ; this.stubbyInfo_ = localStubbyInfo)
        {
          this.bitField0_ = (0x8 | this.bitField0_);
          break;
        }
      }

      public final Builder setConversationId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x2 | this.bitField0_);
        this.conversationId_ = paramString;
        return this;
      }

      public final Builder setReciprocate(boolean paramBoolean)
      {
        this.bitField0_ = (0x4 | this.bitField0_);
        this.reciprocate_ = paramBoolean;
        return this;
      }

      public final Builder setStubbyInfo(Data.StubbyInfo.Builder paramBuilder)
      {
        this.stubbyInfo_ = paramBuilder.build();
        this.bitField0_ = (0x8 | this.bitField0_);
        return this;
      }

      public final Builder setStubbyInfo(Data.StubbyInfo paramStubbyInfo)
      {
        if (paramStubbyInfo == null)
          throw new NullPointerException();
        this.stubbyInfo_ = paramStubbyInfo;
        this.bitField0_ = (0x8 | this.bitField0_);
        return this;
      }

      public final Builder setType(Client.Presence.Type paramType)
      {
        if (paramType == null)
          throw new NullPointerException();
        this.bitField0_ = (0x1 | this.bitField0_);
        this.type_ = paramType;
        return this;
      }
    }
  }

  public static abstract interface PresenceRequestOrBuilder extends MessageLiteOrBuilder
  {
    public abstract String getConversationId();

    public abstract boolean getReciprocate();

    public abstract Data.StubbyInfo getStubbyInfo();

    public abstract Client.Presence.Type getType();

    public abstract boolean hasConversationId();

    public abstract boolean hasReciprocate();

    public abstract boolean hasStubbyInfo();

    public abstract boolean hasType();
  }

  public static final class PresenceResponse extends GeneratedMessageLite
    implements Client.PresenceResponseOrBuilder
  {
    private static final PresenceResponse defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private Data.ResponseStatus status_;

    static
    {
      PresenceResponse localPresenceResponse = new PresenceResponse();
      defaultInstance = localPresenceResponse;
      localPresenceResponse.status_ = Data.ResponseStatus.OK;
    }

    private PresenceResponse()
    {
    }

    private PresenceResponse(Builder paramBuilder)
    {
      super();
    }

    public static PresenceResponse getDefaultInstance()
    {
      return defaultInstance;
    }

    public static Builder newBuilder()
    {
      return Builder.access$9300();
    }

    public static Builder newBuilder(PresenceResponse paramPresenceResponse)
    {
      return Builder.access$9300().mergeFrom(paramPresenceResponse);
    }

    public final PresenceResponse getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeEnumSize(1, this.status_.getNumber());
        this.memoizedSerializedSize = k;
      }
    }

    public final Data.ResponseStatus getStatus()
    {
      return this.status_;
    }

    public final boolean hasStatus()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeEnum(1, this.status_.getNumber());
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Client.PresenceResponse, Builder>
      implements Client.PresenceResponseOrBuilder
    {
      private int bitField0_;
      private Data.ResponseStatus status_ = Data.ResponseStatus.OK;

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 8:
          }
          Data.ResponseStatus localResponseStatus = Data.ResponseStatus.valueOf(paramCodedInputStream.readEnum());
          if (localResponseStatus != null)
          {
            this.bitField0_ = (0x1 | this.bitField0_);
            this.status_ = localResponseStatus;
          }
        }
      }

      public final Client.PresenceResponse build()
      {
        Client.PresenceResponse localPresenceResponse = buildPartial();
        if (!localPresenceResponse.isInitialized())
          throw new UninitializedMessageException();
        return localPresenceResponse;
      }

      public final Client.PresenceResponse buildPartial()
      {
        Client.PresenceResponse localPresenceResponse = new Client.PresenceResponse(this, (byte)0);
        int i = 0x1 & this.bitField0_;
        int j = 0;
        if (i == 1)
          j = 1;
        Client.PresenceResponse.access$9502(localPresenceResponse, this.status_);
        Client.PresenceResponse.access$9602(localPresenceResponse, j);
        return localPresenceResponse;
      }

      public final Builder clear()
      {
        super.clear();
        this.status_ = Data.ResponseStatus.OK;
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        return this;
      }

      public final Builder clearStatus()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.status_ = Data.ResponseStatus.OK;
        return this;
      }

      public final Client.PresenceResponse getDefaultInstanceForType()
      {
        return Client.PresenceResponse.getDefaultInstance();
      }

      public final Data.ResponseStatus getStatus()
      {
        return this.status_;
      }

      public final boolean hasStatus()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Client.PresenceResponse paramPresenceResponse)
      {
        if (paramPresenceResponse == Client.PresenceResponse.getDefaultInstance());
        while (true)
        {
          return this;
          if (paramPresenceResponse.hasStatus())
            setStatus(paramPresenceResponse.getStatus());
        }
      }

      public final Builder setStatus(Data.ResponseStatus paramResponseStatus)
      {
        if (paramResponseStatus == null)
          throw new NullPointerException();
        this.bitField0_ = (0x1 | this.bitField0_);
        this.status_ = paramResponseStatus;
        return this;
      }
    }
  }

  public static abstract interface PresenceResponseOrBuilder extends MessageLiteOrBuilder
  {
    public abstract Data.ResponseStatus getStatus();

    public abstract boolean hasStatus();
  }

  public static final class Receipt extends GeneratedMessageLite
    implements Client.ReceiptOrBuilder
  {
    private static final Receipt defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private Object conversationId_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private Object messageClientId_;
    private Object messageId_;
    private long messageTimestamp_;
    private LazyStringList recipientId_;
    private Object senderId_;
    private Object shardingHint_;
    private Data.StubbyInfo stubbyInfo_;
    private long timestamp_;
    private Type type_;

    static
    {
      Receipt localReceipt = new Receipt();
      defaultInstance = localReceipt;
      localReceipt.type_ = Type.UNKNOWN;
      localReceipt.messageTimestamp_ = 0L;
      localReceipt.conversationId_ = "";
      localReceipt.senderId_ = "";
      localReceipt.timestamp_ = 0L;
      localReceipt.messageClientId_ = "";
      localReceipt.stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
      localReceipt.messageId_ = "";
      localReceipt.recipientId_ = LazyStringArrayList.EMPTY;
      localReceipt.shardingHint_ = "";
    }

    private Receipt()
    {
    }

    private Receipt(Builder paramBuilder)
    {
      super();
    }

    private ByteString getConversationIdBytes()
    {
      Object localObject = this.conversationId_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.conversationId_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static Receipt getDefaultInstance()
    {
      return defaultInstance;
    }

    private ByteString getMessageClientIdBytes()
    {
      Object localObject = this.messageClientId_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.messageClientId_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    private ByteString getMessageIdBytes()
    {
      Object localObject = this.messageId_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.messageId_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    private ByteString getSenderIdBytes()
    {
      Object localObject = this.senderId_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.senderId_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    private ByteString getShardingHintBytes()
    {
      Object localObject = this.shardingHint_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.shardingHint_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static Builder newBuilder()
    {
      return Builder.access$14900();
    }

    public static Builder newBuilder(Receipt paramReceipt)
    {
      return Builder.access$14900().mergeFrom(paramReceipt);
    }

    public final String getConversationId()
    {
      Object localObject1 = this.conversationId_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.conversationId_ = str;
      }
    }

    public final Receipt getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final String getMessageClientId()
    {
      Object localObject1 = this.messageClientId_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.messageClientId_ = str;
      }
    }

    public final String getMessageId()
    {
      Object localObject1 = this.messageId_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.messageId_ = str;
      }
    }

    public final long getMessageTimestamp()
    {
      return this.messageTimestamp_;
    }

    public final String getRecipientId(int paramInt)
    {
      return (String)this.recipientId_.get(paramInt);
    }

    public final int getRecipientIdCount()
    {
      return this.recipientId_.size();
    }

    public final List<String> getRecipientIdList()
    {
      return this.recipientId_;
    }

    public final String getSenderId()
    {
      Object localObject1 = this.senderId_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.senderId_ = str;
      }
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int i1;
      for (int i2 = i; ; i2 = i1)
      {
        return i2;
        int j = 0x1 & this.bitField0_;
        int k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeEnumSize(1, this.type_.getNumber());
        if ((0x80 & this.bitField0_) == 128)
          k += CodedOutputStream.computeBytesSize(2, getMessageIdBytes());
        if ((0x4 & this.bitField0_) == 4)
          k += CodedOutputStream.computeBytesSize(3, getConversationIdBytes());
        if ((0x8 & this.bitField0_) == 8)
          k += CodedOutputStream.computeBytesSize(4, getSenderIdBytes());
        if ((0x10 & this.bitField0_) == 16)
          k += CodedOutputStream.computeInt64Size(5, this.timestamp_);
        if ((0x20 & this.bitField0_) == 32)
          k += CodedOutputStream.computeBytesSize(6, getMessageClientIdBytes());
        if ((0x100 & this.bitField0_) == 256)
          k += CodedOutputStream.computeBytesSize(7, getShardingHintBytes());
        int m = 0;
        for (int n = 0; n < this.recipientId_.size(); n++)
          m += CodedOutputStream.computeBytesSizeNoTag(this.recipientId_.getByteString(n));
        i1 = k + m + 1 * getRecipientIdList().size();
        if ((0x40 & this.bitField0_) == 64)
          i1 += CodedOutputStream.computeMessageSize(9, this.stubbyInfo_);
        if ((0x2 & this.bitField0_) == 2)
          i1 += CodedOutputStream.computeInt64Size(10, this.messageTimestamp_);
        this.memoizedSerializedSize = i1;
      }
    }

    public final String getShardingHint()
    {
      Object localObject1 = this.shardingHint_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.shardingHint_ = str;
      }
    }

    public final Data.StubbyInfo getStubbyInfo()
    {
      return this.stubbyInfo_;
    }

    public final long getTimestamp()
    {
      return this.timestamp_;
    }

    public final Type getType()
    {
      return this.type_;
    }

    public final boolean hasConversationId()
    {
      if ((0x4 & this.bitField0_) == 4);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasMessageClientId()
    {
      if ((0x20 & this.bitField0_) == 32);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasMessageId()
    {
      if ((0x80 & this.bitField0_) == 128);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasMessageTimestamp()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasSenderId()
    {
      if ((0x8 & this.bitField0_) == 8);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasShardingHint()
    {
      if ((0x100 & this.bitField0_) == 256);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasStubbyInfo()
    {
      if ((0x40 & this.bitField0_) == 64);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasTimestamp()
    {
      if ((0x10 & this.bitField0_) == 16);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasType()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeEnum(1, this.type_.getNumber());
      if ((0x80 & this.bitField0_) == 128)
        paramCodedOutputStream.writeBytes(2, getMessageIdBytes());
      if ((0x4 & this.bitField0_) == 4)
        paramCodedOutputStream.writeBytes(3, getConversationIdBytes());
      if ((0x8 & this.bitField0_) == 8)
        paramCodedOutputStream.writeBytes(4, getSenderIdBytes());
      if ((0x10 & this.bitField0_) == 16)
        paramCodedOutputStream.writeInt64(5, this.timestamp_);
      if ((0x20 & this.bitField0_) == 32)
        paramCodedOutputStream.writeBytes(6, getMessageClientIdBytes());
      if ((0x100 & this.bitField0_) == 256)
        paramCodedOutputStream.writeBytes(7, getShardingHintBytes());
      for (int i = 0; i < this.recipientId_.size(); i++)
        paramCodedOutputStream.writeBytes(8, this.recipientId_.getByteString(i));
      if ((0x40 & this.bitField0_) == 64)
        paramCodedOutputStream.writeMessage(9, this.stubbyInfo_);
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeInt64(10, this.messageTimestamp_);
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Client.Receipt, Builder>
      implements Client.ReceiptOrBuilder
    {
      private int bitField0_;
      private Object conversationId_ = "";
      private Object messageClientId_ = "";
      private Object messageId_ = "";
      private long messageTimestamp_;
      private LazyStringList recipientId_ = LazyStringArrayList.EMPTY;
      private Object senderId_ = "";
      private Object shardingHint_ = "";
      private Data.StubbyInfo stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
      private long timestamp_;
      private Client.Receipt.Type type_ = Client.Receipt.Type.UNKNOWN;

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private void ensureRecipientIdIsMutable()
      {
        if ((0x100 & this.bitField0_) != 256)
        {
          this.recipientId_ = new LazyStringArrayList(this.recipientId_);
          this.bitField0_ = (0x100 | this.bitField0_);
        }
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 8:
            Client.Receipt.Type localType = Client.Receipt.Type.valueOf(paramCodedInputStream.readEnum());
            if (localType == null)
              continue;
            this.bitField0_ = (0x1 | this.bitField0_);
            this.type_ = localType;
            break;
          case 18:
            this.bitField0_ = (0x80 | this.bitField0_);
            this.messageId_ = paramCodedInputStream.readBytes();
            break;
          case 26:
            this.bitField0_ = (0x4 | this.bitField0_);
            this.conversationId_ = paramCodedInputStream.readBytes();
            break;
          case 34:
            this.bitField0_ = (0x8 | this.bitField0_);
            this.senderId_ = paramCodedInputStream.readBytes();
            break;
          case 40:
            this.bitField0_ = (0x10 | this.bitField0_);
            this.timestamp_ = paramCodedInputStream.readInt64();
            break;
          case 50:
            this.bitField0_ = (0x20 | this.bitField0_);
            this.messageClientId_ = paramCodedInputStream.readBytes();
            break;
          case 58:
            this.bitField0_ = (0x200 | this.bitField0_);
            this.shardingHint_ = paramCodedInputStream.readBytes();
            break;
          case 66:
            ensureRecipientIdIsMutable();
            this.recipientId_.add(paramCodedInputStream.readBytes());
            break;
          case 74:
            Data.StubbyInfo.Builder localBuilder = Data.StubbyInfo.newBuilder();
            if (hasStubbyInfo())
              localBuilder.mergeFrom(getStubbyInfo());
            paramCodedInputStream.readMessage(localBuilder, paramExtensionRegistryLite);
            setStubbyInfo(localBuilder.buildPartial());
            break;
          case 80:
          }
          this.bitField0_ = (0x2 | this.bitField0_);
          this.messageTimestamp_ = paramCodedInputStream.readInt64();
        }
      }

      public final Builder addAllRecipientId(Iterable<String> paramIterable)
      {
        ensureRecipientIdIsMutable();
        GeneratedMessageLite.Builder.addAll(paramIterable, this.recipientId_);
        return this;
      }

      public final Builder addRecipientId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        ensureRecipientIdIsMutable();
        this.recipientId_.add(paramString);
        return this;
      }

      public final Client.Receipt build()
      {
        Client.Receipt localReceipt = buildPartial();
        if (!localReceipt.isInitialized())
          throw new UninitializedMessageException();
        return localReceipt;
      }

      public final Client.Receipt buildPartial()
      {
        Client.Receipt localReceipt = new Client.Receipt(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Client.Receipt.access$15102(localReceipt, this.type_);
        if ((i & 0x2) == 2)
          k |= 2;
        Client.Receipt.access$15202(localReceipt, this.messageTimestamp_);
        if ((i & 0x4) == 4)
          k |= 4;
        Client.Receipt.access$15302(localReceipt, this.conversationId_);
        if ((i & 0x8) == 8)
          k |= 8;
        Client.Receipt.access$15402(localReceipt, this.senderId_);
        if ((i & 0x10) == 16)
          k |= 16;
        Client.Receipt.access$15502(localReceipt, this.timestamp_);
        if ((i & 0x20) == 32)
          k |= 32;
        Client.Receipt.access$15602(localReceipt, this.messageClientId_);
        if ((i & 0x40) == 64)
          k |= 64;
        Client.Receipt.access$15702(localReceipt, this.stubbyInfo_);
        if ((i & 0x80) == 128)
          k |= 128;
        Client.Receipt.access$15802(localReceipt, this.messageId_);
        if ((0x100 & this.bitField0_) == 256)
        {
          this.recipientId_ = new UnmodifiableLazyStringList(this.recipientId_);
          this.bitField0_ = (0xFFFFFEFF & this.bitField0_);
        }
        Client.Receipt.access$15902(localReceipt, this.recipientId_);
        if ((i & 0x200) == 512)
          k |= 256;
        Client.Receipt.access$16002(localReceipt, this.shardingHint_);
        Client.Receipt.access$16102(localReceipt, k);
        return localReceipt;
      }

      public final Builder clear()
      {
        super.clear();
        this.type_ = Client.Receipt.Type.UNKNOWN;
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.messageTimestamp_ = 0L;
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.conversationId_ = "";
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.senderId_ = "";
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        this.timestamp_ = 0L;
        this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        this.messageClientId_ = "";
        this.bitField0_ = (0xFFFFFFDF & this.bitField0_);
        this.stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFBF & this.bitField0_);
        this.messageId_ = "";
        this.bitField0_ = (0xFFFFFF7F & this.bitField0_);
        this.recipientId_ = LazyStringArrayList.EMPTY;
        this.bitField0_ = (0xFFFFFEFF & this.bitField0_);
        this.shardingHint_ = "";
        this.bitField0_ = (0xFFFFFDFF & this.bitField0_);
        return this;
      }

      public final Builder clearConversationId()
      {
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.conversationId_ = Client.Receipt.getDefaultInstance().getConversationId();
        return this;
      }

      public final Builder clearMessageClientId()
      {
        this.bitField0_ = (0xFFFFFFDF & this.bitField0_);
        this.messageClientId_ = Client.Receipt.getDefaultInstance().getMessageClientId();
        return this;
      }

      public final Builder clearMessageId()
      {
        this.bitField0_ = (0xFFFFFF7F & this.bitField0_);
        this.messageId_ = Client.Receipt.getDefaultInstance().getMessageId();
        return this;
      }

      public final Builder clearMessageTimestamp()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.messageTimestamp_ = 0L;
        return this;
      }

      public final Builder clearRecipientId()
      {
        this.recipientId_ = LazyStringArrayList.EMPTY;
        this.bitField0_ = (0xFFFFFEFF & this.bitField0_);
        return this;
      }

      public final Builder clearSenderId()
      {
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        this.senderId_ = Client.Receipt.getDefaultInstance().getSenderId();
        return this;
      }

      public final Builder clearShardingHint()
      {
        this.bitField0_ = (0xFFFFFDFF & this.bitField0_);
        this.shardingHint_ = Client.Receipt.getDefaultInstance().getShardingHint();
        return this;
      }

      public final Builder clearStubbyInfo()
      {
        this.stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFBF & this.bitField0_);
        return this;
      }

      public final Builder clearTimestamp()
      {
        this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        this.timestamp_ = 0L;
        return this;
      }

      public final Builder clearType()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.type_ = Client.Receipt.Type.UNKNOWN;
        return this;
      }

      public final String getConversationId()
      {
        Object localObject = this.conversationId_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.conversationId_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final Client.Receipt getDefaultInstanceForType()
      {
        return Client.Receipt.getDefaultInstance();
      }

      public final String getMessageClientId()
      {
        Object localObject = this.messageClientId_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.messageClientId_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final String getMessageId()
      {
        Object localObject = this.messageId_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.messageId_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final long getMessageTimestamp()
      {
        return this.messageTimestamp_;
      }

      public final String getRecipientId(int paramInt)
      {
        return (String)this.recipientId_.get(paramInt);
      }

      public final int getRecipientIdCount()
      {
        return this.recipientId_.size();
      }

      public final List<String> getRecipientIdList()
      {
        return Collections.unmodifiableList(this.recipientId_);
      }

      public final String getSenderId()
      {
        Object localObject = this.senderId_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.senderId_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final String getShardingHint()
      {
        Object localObject = this.shardingHint_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.shardingHint_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final Data.StubbyInfo getStubbyInfo()
      {
        return this.stubbyInfo_;
      }

      public final long getTimestamp()
      {
        return this.timestamp_;
      }

      public final Client.Receipt.Type getType()
      {
        return this.type_;
      }

      public final boolean hasConversationId()
      {
        if ((0x4 & this.bitField0_) == 4);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasMessageClientId()
      {
        if ((0x20 & this.bitField0_) == 32);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasMessageId()
      {
        if ((0x80 & this.bitField0_) == 128);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasMessageTimestamp()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasSenderId()
      {
        if ((0x8 & this.bitField0_) == 8);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasShardingHint()
      {
        if ((0x200 & this.bitField0_) == 512);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasStubbyInfo()
      {
        if ((0x40 & this.bitField0_) == 64);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasTimestamp()
      {
        if ((0x10 & this.bitField0_) == 16);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasType()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Client.Receipt paramReceipt)
      {
        if (paramReceipt == Client.Receipt.getDefaultInstance());
        label258: label277: 
        while (true)
        {
          return this;
          if (paramReceipt.hasType())
            setType(paramReceipt.getType());
          if (paramReceipt.hasMessageTimestamp())
            setMessageTimestamp(paramReceipt.getMessageTimestamp());
          if (paramReceipt.hasConversationId())
            setConversationId(paramReceipt.getConversationId());
          if (paramReceipt.hasSenderId())
            setSenderId(paramReceipt.getSenderId());
          if (paramReceipt.hasTimestamp())
            setTimestamp(paramReceipt.getTimestamp());
          if (paramReceipt.hasMessageClientId())
            setMessageClientId(paramReceipt.getMessageClientId());
          Data.StubbyInfo localStubbyInfo;
          if (paramReceipt.hasStubbyInfo())
          {
            localStubbyInfo = paramReceipt.getStubbyInfo();
            if (((0x40 & this.bitField0_) == 64) && (this.stubbyInfo_ != Data.StubbyInfo.getDefaultInstance()))
            {
              this.stubbyInfo_ = Data.StubbyInfo.newBuilder(this.stubbyInfo_).mergeFrom(localStubbyInfo).buildPartial();
              label159: this.bitField0_ = (0x40 | this.bitField0_);
            }
          }
          else
          {
            if (paramReceipt.hasMessageId())
              setMessageId(paramReceipt.getMessageId());
            if (!paramReceipt.recipientId_.isEmpty())
            {
              if (!this.recipientId_.isEmpty())
                break label258;
              this.recipientId_ = paramReceipt.recipientId_;
              this.bitField0_ = (0xFFFFFEFF & this.bitField0_);
            }
          }
          while (true)
          {
            if (!paramReceipt.hasShardingHint())
              break label277;
            setShardingHint(paramReceipt.getShardingHint());
            break;
            this.stubbyInfo_ = localStubbyInfo;
            break label159;
            ensureRecipientIdIsMutable();
            this.recipientId_.addAll(paramReceipt.recipientId_);
          }
        }
      }

      public final Builder setConversationId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x4 | this.bitField0_);
        this.conversationId_ = paramString;
        return this;
      }

      public final Builder setMessageClientId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x20 | this.bitField0_);
        this.messageClientId_ = paramString;
        return this;
      }

      public final Builder setMessageId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x80 | this.bitField0_);
        this.messageId_ = paramString;
        return this;
      }

      public final Builder setMessageTimestamp(long paramLong)
      {
        this.bitField0_ = (0x2 | this.bitField0_);
        this.messageTimestamp_ = paramLong;
        return this;
      }

      public final Builder setRecipientId(int paramInt, String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        ensureRecipientIdIsMutable();
        this.recipientId_.set(paramInt, paramString);
        return this;
      }

      public final Builder setSenderId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x8 | this.bitField0_);
        this.senderId_ = paramString;
        return this;
      }

      public final Builder setShardingHint(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x200 | this.bitField0_);
        this.shardingHint_ = paramString;
        return this;
      }

      public final Builder setStubbyInfo(Data.StubbyInfo.Builder paramBuilder)
      {
        this.stubbyInfo_ = paramBuilder.build();
        this.bitField0_ = (0x40 | this.bitField0_);
        return this;
      }

      public final Builder setStubbyInfo(Data.StubbyInfo paramStubbyInfo)
      {
        if (paramStubbyInfo == null)
          throw new NullPointerException();
        this.stubbyInfo_ = paramStubbyInfo;
        this.bitField0_ = (0x40 | this.bitField0_);
        return this;
      }

      public final Builder setTimestamp(long paramLong)
      {
        this.bitField0_ = (0x10 | this.bitField0_);
        this.timestamp_ = paramLong;
        return this;
      }

      public final Builder setType(Client.Receipt.Type paramType)
      {
        if (paramType == null)
          throw new NullPointerException();
        this.bitField0_ = (0x1 | this.bitField0_);
        this.type_ = paramType;
        return this;
      }
    }

    public static enum Type
      implements Internal.EnumLite
    {
      private static Internal.EnumLiteMap<Type> internalValueMap = new Internal.EnumLiteMap()
      {
      };
      private final int value;

      static
      {
        ACKNOWLEDGED = new Type("ACKNOWLEDGED", 1, 1);
        DELIVERED = new Type("DELIVERED", 2, 2);
        READ = new Type("READ", 3, 3);
        Type[] arrayOfType = new Type[4];
        arrayOfType[0] = UNKNOWN;
        arrayOfType[1] = ACKNOWLEDGED;
        arrayOfType[2] = DELIVERED;
        arrayOfType[3] = READ;
      }

      private Type(int paramInt1, int paramInt2)
      {
        this.value = paramInt1;
      }

      public static Type valueOf(int paramInt)
      {
        Type localType;
        switch (paramInt)
        {
        default:
          localType = null;
        case 0:
        case 1:
        case 2:
        case 3:
        }
        while (true)
        {
          return localType;
          localType = UNKNOWN;
          continue;
          localType = ACKNOWLEDGED;
          continue;
          localType = DELIVERED;
          continue;
          localType = READ;
        }
      }

      public final int getNumber()
      {
        return this.value;
      }
    }
  }

  public static abstract interface ReceiptOrBuilder extends MessageLiteOrBuilder
  {
    public abstract String getConversationId();

    public abstract String getMessageClientId();

    public abstract String getMessageId();

    public abstract long getMessageTimestamp();

    public abstract String getRecipientId(int paramInt);

    public abstract int getRecipientIdCount();

    public abstract List<String> getRecipientIdList();

    public abstract String getSenderId();

    public abstract String getShardingHint();

    public abstract Data.StubbyInfo getStubbyInfo();

    public abstract long getTimestamp();

    public abstract Client.Receipt.Type getType();

    public abstract boolean hasConversationId();

    public abstract boolean hasMessageClientId();

    public abstract boolean hasMessageId();

    public abstract boolean hasMessageTimestamp();

    public abstract boolean hasSenderId();

    public abstract boolean hasShardingHint();

    public abstract boolean hasStubbyInfo();

    public abstract boolean hasTimestamp();

    public abstract boolean hasType();
  }

  public static final class ReceiptRequest extends GeneratedMessageLite
    implements Client.ReceiptRequestOrBuilder
  {
    private static final ReceiptRequest defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private Object conversationId_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private List<ReceiptInfo> receiptInfo_;
    private Data.StubbyInfo stubbyInfo_;

    static
    {
      ReceiptRequest localReceiptRequest = new ReceiptRequest();
      defaultInstance = localReceiptRequest;
      localReceiptRequest.conversationId_ = "";
      localReceiptRequest.receiptInfo_ = Collections.emptyList();
      localReceiptRequest.stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
    }

    private ReceiptRequest()
    {
    }

    private ReceiptRequest(Builder paramBuilder)
    {
      super();
    }

    private ByteString getConversationIdBytes()
    {
      Object localObject = this.conversationId_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.conversationId_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static ReceiptRequest getDefaultInstance()
    {
      return defaultInstance;
    }

    public static Builder newBuilder()
    {
      return Builder.access$13600();
    }

    public static Builder newBuilder(ReceiptRequest paramReceiptRequest)
    {
      return Builder.access$13600().mergeFrom(paramReceiptRequest);
    }

    public final String getConversationId()
    {
      Object localObject1 = this.conversationId_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.conversationId_ = str;
      }
    }

    public final ReceiptRequest getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final ReceiptInfo getReceiptInfo(int paramInt)
    {
      return (ReceiptInfo)this.receiptInfo_.get(paramInt);
    }

    public final int getReceiptInfoCount()
    {
      return this.receiptInfo_.size();
    }

    public final List<ReceiptInfo> getReceiptInfoList()
    {
      return this.receiptInfo_;
    }

    public final ReceiptInfoOrBuilder getReceiptInfoOrBuilder(int paramInt)
    {
      return (ReceiptInfoOrBuilder)this.receiptInfo_.get(paramInt);
    }

    public final List<? extends ReceiptInfoOrBuilder> getReceiptInfoOrBuilderList()
    {
      return this.receiptInfo_;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int n = i; ; n = k)
      {
        return n;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeBytesSize(1, getConversationIdBytes());
        for (int m = 0; m < this.receiptInfo_.size(); m++)
          k += CodedOutputStream.computeMessageSize(2, (MessageLite)this.receiptInfo_.get(m));
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeMessageSize(3, this.stubbyInfo_);
        this.memoizedSerializedSize = k;
      }
    }

    public final Data.StubbyInfo getStubbyInfo()
    {
      return this.stubbyInfo_;
    }

    public final boolean hasConversationId()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean hasStubbyInfo()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeBytes(1, getConversationIdBytes());
      for (int i = 0; i < this.receiptInfo_.size(); i++)
        paramCodedOutputStream.writeMessage(2, (MessageLite)this.receiptInfo_.get(i));
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeMessage(3, this.stubbyInfo_);
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Client.ReceiptRequest, Builder>
      implements Client.ReceiptRequestOrBuilder
    {
      private int bitField0_;
      private Object conversationId_ = "";
      private List<Client.ReceiptRequest.ReceiptInfo> receiptInfo_ = Collections.emptyList();
      private Data.StubbyInfo stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private void ensureReceiptInfoIsMutable()
      {
        if ((0x2 & this.bitField0_) != 2)
        {
          this.receiptInfo_ = new ArrayList(this.receiptInfo_);
          this.bitField0_ = (0x2 | this.bitField0_);
        }
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 10:
            this.bitField0_ = (0x1 | this.bitField0_);
            this.conversationId_ = paramCodedInputStream.readBytes();
            break;
          case 18:
            Client.ReceiptRequest.ReceiptInfo.Builder localBuilder1 = Client.ReceiptRequest.ReceiptInfo.newBuilder();
            paramCodedInputStream.readMessage(localBuilder1, paramExtensionRegistryLite);
            addReceiptInfo(localBuilder1.buildPartial());
            break;
          case 26:
          }
          Data.StubbyInfo.Builder localBuilder = Data.StubbyInfo.newBuilder();
          if (hasStubbyInfo())
            localBuilder.mergeFrom(getStubbyInfo());
          paramCodedInputStream.readMessage(localBuilder, paramExtensionRegistryLite);
          setStubbyInfo(localBuilder.buildPartial());
        }
      }

      public final Builder addAllReceiptInfo(Iterable<? extends Client.ReceiptRequest.ReceiptInfo> paramIterable)
      {
        ensureReceiptInfoIsMutable();
        GeneratedMessageLite.Builder.addAll(paramIterable, this.receiptInfo_);
        return this;
      }

      public final Builder addReceiptInfo(int paramInt, Client.ReceiptRequest.ReceiptInfo.Builder paramBuilder)
      {
        ensureReceiptInfoIsMutable();
        this.receiptInfo_.add(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder addReceiptInfo(int paramInt, Client.ReceiptRequest.ReceiptInfo paramReceiptInfo)
      {
        if (paramReceiptInfo == null)
          throw new NullPointerException();
        ensureReceiptInfoIsMutable();
        this.receiptInfo_.add(paramInt, paramReceiptInfo);
        return this;
      }

      public final Builder addReceiptInfo(Client.ReceiptRequest.ReceiptInfo.Builder paramBuilder)
      {
        ensureReceiptInfoIsMutable();
        this.receiptInfo_.add(paramBuilder.build());
        return this;
      }

      public final Builder addReceiptInfo(Client.ReceiptRequest.ReceiptInfo paramReceiptInfo)
      {
        if (paramReceiptInfo == null)
          throw new NullPointerException();
        ensureReceiptInfoIsMutable();
        this.receiptInfo_.add(paramReceiptInfo);
        return this;
      }

      public final Client.ReceiptRequest build()
      {
        Client.ReceiptRequest localReceiptRequest = buildPartial();
        if (!localReceiptRequest.isInitialized())
          throw new UninitializedMessageException();
        return localReceiptRequest;
      }

      public final Client.ReceiptRequest buildPartial()
      {
        Client.ReceiptRequest localReceiptRequest = new Client.ReceiptRequest(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Client.ReceiptRequest.access$13802(localReceiptRequest, this.conversationId_);
        if ((0x2 & this.bitField0_) == 2)
        {
          this.receiptInfo_ = Collections.unmodifiableList(this.receiptInfo_);
          this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        }
        Client.ReceiptRequest.access$13902(localReceiptRequest, this.receiptInfo_);
        if ((i & 0x4) == 4)
          k |= 2;
        Client.ReceiptRequest.access$14002(localReceiptRequest, this.stubbyInfo_);
        Client.ReceiptRequest.access$14102(localReceiptRequest, k);
        return localReceiptRequest;
      }

      public final Builder clear()
      {
        super.clear();
        this.conversationId_ = "";
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.receiptInfo_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        return this;
      }

      public final Builder clearConversationId()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.conversationId_ = Client.ReceiptRequest.getDefaultInstance().getConversationId();
        return this;
      }

      public final Builder clearReceiptInfo()
      {
        this.receiptInfo_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        return this;
      }

      public final Builder clearStubbyInfo()
      {
        this.stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        return this;
      }

      public final String getConversationId()
      {
        Object localObject = this.conversationId_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.conversationId_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final Client.ReceiptRequest getDefaultInstanceForType()
      {
        return Client.ReceiptRequest.getDefaultInstance();
      }

      public final Client.ReceiptRequest.ReceiptInfo getReceiptInfo(int paramInt)
      {
        return (Client.ReceiptRequest.ReceiptInfo)this.receiptInfo_.get(paramInt);
      }

      public final int getReceiptInfoCount()
      {
        return this.receiptInfo_.size();
      }

      public final List<Client.ReceiptRequest.ReceiptInfo> getReceiptInfoList()
      {
        return Collections.unmodifiableList(this.receiptInfo_);
      }

      public final Data.StubbyInfo getStubbyInfo()
      {
        return this.stubbyInfo_;
      }

      public final boolean hasConversationId()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean hasStubbyInfo()
      {
        if ((0x4 & this.bitField0_) == 4);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Client.ReceiptRequest paramReceiptRequest)
      {
        if (paramReceiptRequest == Client.ReceiptRequest.getDefaultInstance())
          return this;
        if (paramReceiptRequest.hasConversationId())
          setConversationId(paramReceiptRequest.getConversationId());
        label68: Data.StubbyInfo localStubbyInfo;
        if (!paramReceiptRequest.receiptInfo_.isEmpty())
        {
          if (this.receiptInfo_.isEmpty())
          {
            this.receiptInfo_ = paramReceiptRequest.receiptInfo_;
            this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
          }
        }
        else
        {
          if (!paramReceiptRequest.hasStubbyInfo())
            break label150;
          localStubbyInfo = paramReceiptRequest.getStubbyInfo();
          if (((0x4 & this.bitField0_) != 4) || (this.stubbyInfo_ == Data.StubbyInfo.getDefaultInstance()))
            break label152;
        }
        label150: label152: for (this.stubbyInfo_ = Data.StubbyInfo.newBuilder(this.stubbyInfo_).mergeFrom(localStubbyInfo).buildPartial(); ; this.stubbyInfo_ = localStubbyInfo)
        {
          this.bitField0_ = (0x4 | this.bitField0_);
          break;
          ensureReceiptInfoIsMutable();
          this.receiptInfo_.addAll(paramReceiptRequest.receiptInfo_);
          break label68;
          break;
        }
      }

      public final Builder setConversationId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x1 | this.bitField0_);
        this.conversationId_ = paramString;
        return this;
      }

      public final Builder setReceiptInfo(int paramInt, Client.ReceiptRequest.ReceiptInfo.Builder paramBuilder)
      {
        ensureReceiptInfoIsMutable();
        this.receiptInfo_.set(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder setReceiptInfo(int paramInt, Client.ReceiptRequest.ReceiptInfo paramReceiptInfo)
      {
        if (paramReceiptInfo == null)
          throw new NullPointerException();
        ensureReceiptInfoIsMutable();
        this.receiptInfo_.set(paramInt, paramReceiptInfo);
        return this;
      }

      public final Builder setStubbyInfo(Data.StubbyInfo.Builder paramBuilder)
      {
        this.stubbyInfo_ = paramBuilder.build();
        this.bitField0_ = (0x4 | this.bitField0_);
        return this;
      }

      public final Builder setStubbyInfo(Data.StubbyInfo paramStubbyInfo)
      {
        if (paramStubbyInfo == null)
          throw new NullPointerException();
        this.stubbyInfo_ = paramStubbyInfo;
        this.bitField0_ = (0x4 | this.bitField0_);
        return this;
      }
    }

    public static final class ReceiptInfo extends GeneratedMessageLite
      implements Client.ReceiptRequest.ReceiptInfoOrBuilder
    {
      private static final ReceiptInfo defaultInstance;
      private static final long serialVersionUID;
      private int bitField0_;
      private long eventTimestamp_;
      private byte memoizedIsInitialized = -1;
      private int memoizedSerializedSize = -1;
      private Client.Receipt.Type type_;

      static
      {
        ReceiptInfo localReceiptInfo = new ReceiptInfo();
        defaultInstance = localReceiptInfo;
        localReceiptInfo.type_ = Client.Receipt.Type.UNKNOWN;
        localReceiptInfo.eventTimestamp_ = 0L;
      }

      private ReceiptInfo()
      {
      }

      private ReceiptInfo(Builder paramBuilder)
      {
        super();
      }

      public static ReceiptInfo getDefaultInstance()
      {
        return defaultInstance;
      }

      public static Builder newBuilder()
      {
        return Builder.access$13000();
      }

      public final ReceiptInfo getDefaultInstanceForType()
      {
        return defaultInstance;
      }

      public final long getEventTimestamp()
      {
        return this.eventTimestamp_;
      }

      public final int getSerializedSize()
      {
        int i = this.memoizedSerializedSize;
        if (i != -1);
        int k;
        for (int m = i; ; m = k)
        {
          return m;
          int j = 0x1 & this.bitField0_;
          k = 0;
          if (j == 1)
            k = 0 + CodedOutputStream.computeEnumSize(1, this.type_.getNumber());
          if ((0x2 & this.bitField0_) == 2)
            k += CodedOutputStream.computeInt64Size(2, this.eventTimestamp_);
          this.memoizedSerializedSize = k;
        }
      }

      public final Client.Receipt.Type getType()
      {
        return this.type_;
      }

      public final boolean hasEventTimestamp()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasType()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean isInitialized()
      {
        int i = 1;
        int j = this.memoizedIsInitialized;
        if (j != -1)
          if (j != i);
        while (true)
        {
          return i;
          i = 0;
          continue;
          this.memoizedIsInitialized = i;
        }
      }

      protected final Object writeReplace()
        throws ObjectStreamException
      {
        return super.writeReplace();
      }

      public final void writeTo(CodedOutputStream paramCodedOutputStream)
        throws IOException
      {
        getSerializedSize();
        if ((0x1 & this.bitField0_) == 1)
          paramCodedOutputStream.writeEnum(1, this.type_.getNumber());
        if ((0x2 & this.bitField0_) == 2)
          paramCodedOutputStream.writeInt64(2, this.eventTimestamp_);
      }

      public static final class Builder extends GeneratedMessageLite.Builder<Client.ReceiptRequest.ReceiptInfo, Builder>
        implements Client.ReceiptRequest.ReceiptInfoOrBuilder
      {
        private int bitField0_;
        private long eventTimestamp_;
        private Client.Receipt.Type type_ = Client.Receipt.Type.UNKNOWN;

        private Builder clone()
        {
          return new Builder().mergeFrom(buildPartial());
        }

        private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
          throws IOException
        {
          while (true)
          {
            int i = paramCodedInputStream.readTag();
            switch (i)
            {
            default:
              if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
                continue;
            case 0:
              return this;
            case 8:
              Client.Receipt.Type localType = Client.Receipt.Type.valueOf(paramCodedInputStream.readEnum());
              if (localType == null)
                continue;
              this.bitField0_ = (0x1 | this.bitField0_);
              this.type_ = localType;
              break;
            case 16:
            }
            this.bitField0_ = (0x2 | this.bitField0_);
            this.eventTimestamp_ = paramCodedInputStream.readInt64();
          }
        }

        public final Client.ReceiptRequest.ReceiptInfo build()
        {
          Client.ReceiptRequest.ReceiptInfo localReceiptInfo = buildPartial();
          if (!localReceiptInfo.isInitialized())
            throw new UninitializedMessageException();
          return localReceiptInfo;
        }

        public final Client.ReceiptRequest.ReceiptInfo buildPartial()
        {
          Client.ReceiptRequest.ReceiptInfo localReceiptInfo = new Client.ReceiptRequest.ReceiptInfo(this, (byte)0);
          int i = this.bitField0_;
          int j = i & 0x1;
          int k = 0;
          if (j == 1)
            k = 1;
          Client.ReceiptRequest.ReceiptInfo.access$13202(localReceiptInfo, this.type_);
          if ((i & 0x2) == 2)
            k |= 2;
          Client.ReceiptRequest.ReceiptInfo.access$13302(localReceiptInfo, this.eventTimestamp_);
          Client.ReceiptRequest.ReceiptInfo.access$13402(localReceiptInfo, k);
          return localReceiptInfo;
        }

        public final Builder clear()
        {
          super.clear();
          this.type_ = Client.Receipt.Type.UNKNOWN;
          this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
          this.eventTimestamp_ = 0L;
          this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
          return this;
        }

        public final Builder clearEventTimestamp()
        {
          this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
          this.eventTimestamp_ = 0L;
          return this;
        }

        public final Builder clearType()
        {
          this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
          this.type_ = Client.Receipt.Type.UNKNOWN;
          return this;
        }

        public final Client.ReceiptRequest.ReceiptInfo getDefaultInstanceForType()
        {
          return Client.ReceiptRequest.ReceiptInfo.getDefaultInstance();
        }

        public final long getEventTimestamp()
        {
          return this.eventTimestamp_;
        }

        public final Client.Receipt.Type getType()
        {
          return this.type_;
        }

        public final boolean hasEventTimestamp()
        {
          if ((0x2 & this.bitField0_) == 2);
          for (boolean bool = true; ; bool = false)
            return bool;
        }

        public final boolean hasType()
        {
          int i = 1;
          if ((0x1 & this.bitField0_) == i);
          while (true)
          {
            return i;
            int j = 0;
          }
        }

        public final boolean isInitialized()
        {
          return true;
        }

        public final Builder mergeFrom(Client.ReceiptRequest.ReceiptInfo paramReceiptInfo)
        {
          if (paramReceiptInfo == Client.ReceiptRequest.ReceiptInfo.getDefaultInstance());
          while (true)
          {
            return this;
            if (paramReceiptInfo.hasType())
              setType(paramReceiptInfo.getType());
            if (paramReceiptInfo.hasEventTimestamp())
              setEventTimestamp(paramReceiptInfo.getEventTimestamp());
          }
        }

        public final Builder setEventTimestamp(long paramLong)
        {
          this.bitField0_ = (0x2 | this.bitField0_);
          this.eventTimestamp_ = paramLong;
          return this;
        }

        public final Builder setType(Client.Receipt.Type paramType)
        {
          if (paramType == null)
            throw new NullPointerException();
          this.bitField0_ = (0x1 | this.bitField0_);
          this.type_ = paramType;
          return this;
        }
      }
    }

    public static abstract interface ReceiptInfoOrBuilder extends MessageLiteOrBuilder
    {
      public abstract long getEventTimestamp();

      public abstract Client.Receipt.Type getType();

      public abstract boolean hasEventTimestamp();

      public abstract boolean hasType();
    }
  }

  public static abstract interface ReceiptRequestOrBuilder extends MessageLiteOrBuilder
  {
    public abstract String getConversationId();

    public abstract Client.ReceiptRequest.ReceiptInfo getReceiptInfo(int paramInt);

    public abstract int getReceiptInfoCount();

    public abstract List<Client.ReceiptRequest.ReceiptInfo> getReceiptInfoList();

    public abstract Data.StubbyInfo getStubbyInfo();

    public abstract boolean hasConversationId();

    public abstract boolean hasStubbyInfo();
  }

  public static final class ReceiptResponse extends GeneratedMessageLite
    implements Client.ReceiptResponseOrBuilder
  {
    private static final ReceiptResponse defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private Object requestError_;
    private Data.ResponseStatus status_;

    static
    {
      ReceiptResponse localReceiptResponse = new ReceiptResponse();
      defaultInstance = localReceiptResponse;
      localReceiptResponse.status_ = Data.ResponseStatus.OK;
      localReceiptResponse.requestError_ = "";
    }

    private ReceiptResponse()
    {
    }

    private ReceiptResponse(Builder paramBuilder)
    {
      super();
    }

    public static ReceiptResponse getDefaultInstance()
    {
      return defaultInstance;
    }

    private ByteString getRequestErrorBytes()
    {
      Object localObject = this.requestError_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.requestError_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static Builder newBuilder()
    {
      return Builder.access$14300();
    }

    public static Builder newBuilder(ReceiptResponse paramReceiptResponse)
    {
      return Builder.access$14300().mergeFrom(paramReceiptResponse);
    }

    public final ReceiptResponse getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final String getRequestError()
    {
      Object localObject1 = this.requestError_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.requestError_ = str;
      }
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeEnumSize(1, this.status_.getNumber());
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeBytesSize(2, getRequestErrorBytes());
        this.memoizedSerializedSize = k;
      }
    }

    public final Data.ResponseStatus getStatus()
    {
      return this.status_;
    }

    public final boolean hasRequestError()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasStatus()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeEnum(1, this.status_.getNumber());
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeBytes(2, getRequestErrorBytes());
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Client.ReceiptResponse, Builder>
      implements Client.ReceiptResponseOrBuilder
    {
      private int bitField0_;
      private Object requestError_ = "";
      private Data.ResponseStatus status_ = Data.ResponseStatus.OK;

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 8:
            Data.ResponseStatus localResponseStatus = Data.ResponseStatus.valueOf(paramCodedInputStream.readEnum());
            if (localResponseStatus == null)
              continue;
            this.bitField0_ = (0x1 | this.bitField0_);
            this.status_ = localResponseStatus;
            break;
          case 18:
          }
          this.bitField0_ = (0x2 | this.bitField0_);
          this.requestError_ = paramCodedInputStream.readBytes();
        }
      }

      public final Client.ReceiptResponse build()
      {
        Client.ReceiptResponse localReceiptResponse = buildPartial();
        if (!localReceiptResponse.isInitialized())
          throw new UninitializedMessageException();
        return localReceiptResponse;
      }

      public final Client.ReceiptResponse buildPartial()
      {
        Client.ReceiptResponse localReceiptResponse = new Client.ReceiptResponse(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Client.ReceiptResponse.access$14502(localReceiptResponse, this.status_);
        if ((i & 0x2) == 2)
          k |= 2;
        Client.ReceiptResponse.access$14602(localReceiptResponse, this.requestError_);
        Client.ReceiptResponse.access$14702(localReceiptResponse, k);
        return localReceiptResponse;
      }

      public final Builder clear()
      {
        super.clear();
        this.status_ = Data.ResponseStatus.OK;
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.requestError_ = "";
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        return this;
      }

      public final Builder clearRequestError()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.requestError_ = Client.ReceiptResponse.getDefaultInstance().getRequestError();
        return this;
      }

      public final Builder clearStatus()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.status_ = Data.ResponseStatus.OK;
        return this;
      }

      public final Client.ReceiptResponse getDefaultInstanceForType()
      {
        return Client.ReceiptResponse.getDefaultInstance();
      }

      public final String getRequestError()
      {
        Object localObject = this.requestError_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.requestError_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final Data.ResponseStatus getStatus()
      {
        return this.status_;
      }

      public final boolean hasRequestError()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasStatus()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Client.ReceiptResponse paramReceiptResponse)
      {
        if (paramReceiptResponse == Client.ReceiptResponse.getDefaultInstance());
        while (true)
        {
          return this;
          if (paramReceiptResponse.hasStatus())
            setStatus(paramReceiptResponse.getStatus());
          if (paramReceiptResponse.hasRequestError())
            setRequestError(paramReceiptResponse.getRequestError());
        }
      }

      public final Builder setRequestError(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x2 | this.bitField0_);
        this.requestError_ = paramString;
        return this;
      }

      public final Builder setStatus(Data.ResponseStatus paramResponseStatus)
      {
        if (paramResponseStatus == null)
          throw new NullPointerException();
        this.bitField0_ = (0x1 | this.bitField0_);
        this.status_ = paramResponseStatus;
        return this;
      }
    }
  }

  public static abstract interface ReceiptResponseOrBuilder extends MessageLiteOrBuilder
  {
    public abstract String getRequestError();

    public abstract Data.ResponseStatus getStatus();

    public abstract boolean hasRequestError();

    public abstract boolean hasStatus();
  }

  public static final class ReplyToInviteRequest extends GeneratedMessageLite
    implements Client.ReplyToInviteRequestOrBuilder
  {
    private static final ReplyToInviteRequest defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private Object conversationId_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private Object replyToId_;
    private Reply reply_;
    private Object senderId_;

    static
    {
      ReplyToInviteRequest localReplyToInviteRequest = new ReplyToInviteRequest();
      defaultInstance = localReplyToInviteRequest;
      localReplyToInviteRequest.replyToId_ = "";
      localReplyToInviteRequest.conversationId_ = "";
      localReplyToInviteRequest.reply_ = Reply.ACCEPT;
      localReplyToInviteRequest.senderId_ = "";
    }

    private ReplyToInviteRequest()
    {
    }

    private ReplyToInviteRequest(Builder paramBuilder)
    {
      super();
    }

    private ByteString getConversationIdBytes()
    {
      Object localObject = this.conversationId_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.conversationId_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static ReplyToInviteRequest getDefaultInstance()
    {
      return defaultInstance;
    }

    private ByteString getReplyToIdBytes()
    {
      Object localObject = this.replyToId_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.replyToId_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    private ByteString getSenderIdBytes()
    {
      Object localObject = this.senderId_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.senderId_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static Builder newBuilder()
    {
      return Builder.access$44700();
    }

    public static Builder newBuilder(ReplyToInviteRequest paramReplyToInviteRequest)
    {
      return Builder.access$44700().mergeFrom(paramReplyToInviteRequest);
    }

    public final String getConversationId()
    {
      Object localObject1 = this.conversationId_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.conversationId_ = str;
      }
    }

    public final ReplyToInviteRequest getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final Reply getReply()
    {
      return this.reply_;
    }

    public final String getReplyToId()
    {
      Object localObject1 = this.replyToId_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.replyToId_ = str;
      }
    }

    public final String getSenderId()
    {
      Object localObject1 = this.senderId_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.senderId_ = str;
      }
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeBytesSize(1, getReplyToIdBytes());
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeBytesSize(2, getConversationIdBytes());
        if ((0x4 & this.bitField0_) == 4)
          k += CodedOutputStream.computeEnumSize(3, this.reply_.getNumber());
        if ((0x8 & this.bitField0_) == 8)
          k += CodedOutputStream.computeBytesSize(4, getSenderIdBytes());
        this.memoizedSerializedSize = k;
      }
    }

    public final boolean hasConversationId()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasReply()
    {
      if ((0x4 & this.bitField0_) == 4);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasReplyToId()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean hasSenderId()
    {
      if ((0x8 & this.bitField0_) == 8);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeBytes(1, getReplyToIdBytes());
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeBytes(2, getConversationIdBytes());
      if ((0x4 & this.bitField0_) == 4)
        paramCodedOutputStream.writeEnum(3, this.reply_.getNumber());
      if ((0x8 & this.bitField0_) == 8)
        paramCodedOutputStream.writeBytes(4, getSenderIdBytes());
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Client.ReplyToInviteRequest, Builder>
      implements Client.ReplyToInviteRequestOrBuilder
    {
      private int bitField0_;
      private Object conversationId_ = "";
      private Object replyToId_ = "";
      private Client.ReplyToInviteRequest.Reply reply_ = Client.ReplyToInviteRequest.Reply.ACCEPT;
      private Object senderId_ = "";

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 10:
            this.bitField0_ = (0x1 | this.bitField0_);
            this.replyToId_ = paramCodedInputStream.readBytes();
            break;
          case 18:
            this.bitField0_ = (0x2 | this.bitField0_);
            this.conversationId_ = paramCodedInputStream.readBytes();
            break;
          case 24:
            Client.ReplyToInviteRequest.Reply localReply = Client.ReplyToInviteRequest.Reply.valueOf(paramCodedInputStream.readEnum());
            if (localReply == null)
              continue;
            this.bitField0_ = (0x4 | this.bitField0_);
            this.reply_ = localReply;
            break;
          case 34:
          }
          this.bitField0_ = (0x8 | this.bitField0_);
          this.senderId_ = paramCodedInputStream.readBytes();
        }
      }

      public final Client.ReplyToInviteRequest build()
      {
        Client.ReplyToInviteRequest localReplyToInviteRequest = buildPartial();
        if (!localReplyToInviteRequest.isInitialized())
          throw new UninitializedMessageException();
        return localReplyToInviteRequest;
      }

      public final Client.ReplyToInviteRequest buildPartial()
      {
        Client.ReplyToInviteRequest localReplyToInviteRequest = new Client.ReplyToInviteRequest(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Client.ReplyToInviteRequest.access$44902(localReplyToInviteRequest, this.replyToId_);
        if ((i & 0x2) == 2)
          k |= 2;
        Client.ReplyToInviteRequest.access$45002(localReplyToInviteRequest, this.conversationId_);
        if ((i & 0x4) == 4)
          k |= 4;
        Client.ReplyToInviteRequest.access$45102(localReplyToInviteRequest, this.reply_);
        if ((i & 0x8) == 8)
          k |= 8;
        Client.ReplyToInviteRequest.access$45202(localReplyToInviteRequest, this.senderId_);
        Client.ReplyToInviteRequest.access$45302(localReplyToInviteRequest, k);
        return localReplyToInviteRequest;
      }

      public final Builder clear()
      {
        super.clear();
        this.replyToId_ = "";
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.conversationId_ = "";
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.reply_ = Client.ReplyToInviteRequest.Reply.ACCEPT;
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.senderId_ = "";
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        return this;
      }

      public final Builder clearConversationId()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.conversationId_ = Client.ReplyToInviteRequest.getDefaultInstance().getConversationId();
        return this;
      }

      public final Builder clearReply()
      {
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.reply_ = Client.ReplyToInviteRequest.Reply.ACCEPT;
        return this;
      }

      public final Builder clearReplyToId()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.replyToId_ = Client.ReplyToInviteRequest.getDefaultInstance().getReplyToId();
        return this;
      }

      public final Builder clearSenderId()
      {
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        this.senderId_ = Client.ReplyToInviteRequest.getDefaultInstance().getSenderId();
        return this;
      }

      public final String getConversationId()
      {
        Object localObject = this.conversationId_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.conversationId_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final Client.ReplyToInviteRequest getDefaultInstanceForType()
      {
        return Client.ReplyToInviteRequest.getDefaultInstance();
      }

      public final Client.ReplyToInviteRequest.Reply getReply()
      {
        return this.reply_;
      }

      public final String getReplyToId()
      {
        Object localObject = this.replyToId_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.replyToId_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final String getSenderId()
      {
        Object localObject = this.senderId_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.senderId_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final boolean hasConversationId()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasReply()
      {
        if ((0x4 & this.bitField0_) == 4);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasReplyToId()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean hasSenderId()
      {
        if ((0x8 & this.bitField0_) == 8);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Client.ReplyToInviteRequest paramReplyToInviteRequest)
      {
        if (paramReplyToInviteRequest == Client.ReplyToInviteRequest.getDefaultInstance());
        while (true)
        {
          return this;
          if (paramReplyToInviteRequest.hasReplyToId())
            setReplyToId(paramReplyToInviteRequest.getReplyToId());
          if (paramReplyToInviteRequest.hasConversationId())
            setConversationId(paramReplyToInviteRequest.getConversationId());
          if (paramReplyToInviteRequest.hasReply())
            setReply(paramReplyToInviteRequest.getReply());
          if (paramReplyToInviteRequest.hasSenderId())
            setSenderId(paramReplyToInviteRequest.getSenderId());
        }
      }

      public final Builder setConversationId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x2 | this.bitField0_);
        this.conversationId_ = paramString;
        return this;
      }

      public final Builder setReply(Client.ReplyToInviteRequest.Reply paramReply)
      {
        if (paramReply == null)
          throw new NullPointerException();
        this.bitField0_ = (0x4 | this.bitField0_);
        this.reply_ = paramReply;
        return this;
      }

      public final Builder setReplyToId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x1 | this.bitField0_);
        this.replyToId_ = paramString;
        return this;
      }

      public final Builder setSenderId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x8 | this.bitField0_);
        this.senderId_ = paramString;
        return this;
      }
    }

    public static enum Reply
      implements Internal.EnumLite
    {
      private static Internal.EnumLiteMap<Reply> internalValueMap = new Internal.EnumLiteMap()
      {
      };
      private final int value = 1;

      static
      {
        Reply[] arrayOfReply = new Reply[1];
        arrayOfReply[0] = ACCEPT;
      }

      private Reply(int paramInt1, int paramInt2)
      {
      }

      public static Reply valueOf(int paramInt)
      {
        switch (paramInt)
        {
        default:
        case 1:
        }
        for (Reply localReply = null; ; localReply = ACCEPT)
          return localReply;
      }

      public final int getNumber()
      {
        return this.value;
      }
    }
  }

  public static abstract interface ReplyToInviteRequestOrBuilder extends MessageLiteOrBuilder
  {
    public abstract String getConversationId();

    public abstract Client.ReplyToInviteRequest.Reply getReply();

    public abstract String getReplyToId();

    public abstract String getSenderId();

    public abstract boolean hasConversationId();

    public abstract boolean hasReply();

    public abstract boolean hasReplyToId();

    public abstract boolean hasSenderId();
  }

  public static final class ReplyToInviteResponse extends GeneratedMessageLite
    implements Client.ReplyToInviteResponseOrBuilder
  {
    private static final ReplyToInviteResponse defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private Data.ResponseStatus status_;
    private long timestamp_;

    static
    {
      ReplyToInviteResponse localReplyToInviteResponse = new ReplyToInviteResponse();
      defaultInstance = localReplyToInviteResponse;
      localReplyToInviteResponse.status_ = Data.ResponseStatus.OK;
      localReplyToInviteResponse.timestamp_ = 0L;
    }

    private ReplyToInviteResponse()
    {
    }

    private ReplyToInviteResponse(Builder paramBuilder)
    {
      super();
    }

    public static ReplyToInviteResponse getDefaultInstance()
    {
      return defaultInstance;
    }

    public static Builder newBuilder()
    {
      return Builder.access$45500();
    }

    public static Builder newBuilder(ReplyToInviteResponse paramReplyToInviteResponse)
    {
      return Builder.access$45500().mergeFrom(paramReplyToInviteResponse);
    }

    public final ReplyToInviteResponse getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeEnumSize(1, this.status_.getNumber());
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeInt64Size(2, this.timestamp_);
        this.memoizedSerializedSize = k;
      }
    }

    public final Data.ResponseStatus getStatus()
    {
      return this.status_;
    }

    public final long getTimestamp()
    {
      return this.timestamp_;
    }

    public final boolean hasStatus()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean hasTimestamp()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeEnum(1, this.status_.getNumber());
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeInt64(2, this.timestamp_);
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Client.ReplyToInviteResponse, Builder>
      implements Client.ReplyToInviteResponseOrBuilder
    {
      private int bitField0_;
      private Data.ResponseStatus status_ = Data.ResponseStatus.OK;
      private long timestamp_;

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 8:
            Data.ResponseStatus localResponseStatus = Data.ResponseStatus.valueOf(paramCodedInputStream.readEnum());
            if (localResponseStatus == null)
              continue;
            this.bitField0_ = (0x1 | this.bitField0_);
            this.status_ = localResponseStatus;
            break;
          case 16:
          }
          this.bitField0_ = (0x2 | this.bitField0_);
          this.timestamp_ = paramCodedInputStream.readInt64();
        }
      }

      public final Client.ReplyToInviteResponse build()
      {
        Client.ReplyToInviteResponse localReplyToInviteResponse = buildPartial();
        if (!localReplyToInviteResponse.isInitialized())
          throw new UninitializedMessageException();
        return localReplyToInviteResponse;
      }

      public final Client.ReplyToInviteResponse buildPartial()
      {
        Client.ReplyToInviteResponse localReplyToInviteResponse = new Client.ReplyToInviteResponse(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Client.ReplyToInviteResponse.access$45702(localReplyToInviteResponse, this.status_);
        if ((i & 0x2) == 2)
          k |= 2;
        Client.ReplyToInviteResponse.access$45802(localReplyToInviteResponse, this.timestamp_);
        Client.ReplyToInviteResponse.access$45902(localReplyToInviteResponse, k);
        return localReplyToInviteResponse;
      }

      public final Builder clear()
      {
        super.clear();
        this.status_ = Data.ResponseStatus.OK;
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.timestamp_ = 0L;
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        return this;
      }

      public final Builder clearStatus()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.status_ = Data.ResponseStatus.OK;
        return this;
      }

      public final Builder clearTimestamp()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.timestamp_ = 0L;
        return this;
      }

      public final Client.ReplyToInviteResponse getDefaultInstanceForType()
      {
        return Client.ReplyToInviteResponse.getDefaultInstance();
      }

      public final Data.ResponseStatus getStatus()
      {
        return this.status_;
      }

      public final long getTimestamp()
      {
        return this.timestamp_;
      }

      public final boolean hasStatus()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean hasTimestamp()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Client.ReplyToInviteResponse paramReplyToInviteResponse)
      {
        if (paramReplyToInviteResponse == Client.ReplyToInviteResponse.getDefaultInstance());
        while (true)
        {
          return this;
          if (paramReplyToInviteResponse.hasStatus())
            setStatus(paramReplyToInviteResponse.getStatus());
          if (paramReplyToInviteResponse.hasTimestamp())
            setTimestamp(paramReplyToInviteResponse.getTimestamp());
        }
      }

      public final Builder setStatus(Data.ResponseStatus paramResponseStatus)
      {
        if (paramResponseStatus == null)
          throw new NullPointerException();
        this.bitField0_ = (0x1 | this.bitField0_);
        this.status_ = paramResponseStatus;
        return this;
      }

      public final Builder setTimestamp(long paramLong)
      {
        this.bitField0_ = (0x2 | this.bitField0_);
        this.timestamp_ = paramLong;
        return this;
      }
    }
  }

  public static abstract interface ReplyToInviteResponseOrBuilder extends MessageLiteOrBuilder
  {
    public abstract Data.ResponseStatus getStatus();

    public abstract long getTimestamp();

    public abstract boolean hasStatus();

    public abstract boolean hasTimestamp();
  }

  public static final class SetAclsRequest extends GeneratedMessageLite
    implements Client.SetAclsRequestOrBuilder
  {
    private static final SetAclsRequest defaultInstance;
    private static final long serialVersionUID;
    private Acl acl_;
    private int bitField0_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private Object senderId_;

    static
    {
      SetAclsRequest localSetAclsRequest = new SetAclsRequest();
      defaultInstance = localSetAclsRequest;
      localSetAclsRequest.acl_ = Acl.EVERYONE;
      localSetAclsRequest.senderId_ = "";
    }

    private SetAclsRequest()
    {
    }

    private SetAclsRequest(Builder paramBuilder)
    {
      super();
    }

    public static SetAclsRequest getDefaultInstance()
    {
      return defaultInstance;
    }

    private ByteString getSenderIdBytes()
    {
      Object localObject = this.senderId_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.senderId_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static Builder newBuilder()
    {
      return Builder.access$46100();
    }

    public static Builder newBuilder(SetAclsRequest paramSetAclsRequest)
    {
      return Builder.access$46100().mergeFrom(paramSetAclsRequest);
    }

    public final Acl getAcl()
    {
      return this.acl_;
    }

    public final SetAclsRequest getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final String getSenderId()
    {
      Object localObject1 = this.senderId_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.senderId_ = str;
      }
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeEnumSize(1, this.acl_.getNumber());
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeBytesSize(2, getSenderIdBytes());
        this.memoizedSerializedSize = k;
      }
    }

    public final boolean hasAcl()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean hasSenderId()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeEnum(1, this.acl_.getNumber());
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeBytes(2, getSenderIdBytes());
    }

    public static enum Acl
      implements Internal.EnumLite
    {
      private static Internal.EnumLiteMap<Acl> internalValueMap = new Internal.EnumLiteMap()
      {
      };
      private final int value;

      static
      {
        CIRCLES = new Acl("CIRCLES", 2, 3);
        NO_ONE = new Acl("NO_ONE", 3, 4);
        Acl[] arrayOfAcl = new Acl[4];
        arrayOfAcl[0] = EVERYONE;
        arrayOfAcl[1] = EXTENDED_CIRCLES;
        arrayOfAcl[2] = CIRCLES;
        arrayOfAcl[3] = NO_ONE;
      }

      private Acl(int paramInt1, int paramInt2)
      {
        this.value = paramInt1;
      }

      public static Acl valueOf(int paramInt)
      {
        Acl localAcl;
        switch (paramInt)
        {
        default:
          localAcl = null;
        case 1:
        case 2:
        case 3:
        case 4:
        }
        while (true)
        {
          return localAcl;
          localAcl = EVERYONE;
          continue;
          localAcl = EXTENDED_CIRCLES;
          continue;
          localAcl = CIRCLES;
          continue;
          localAcl = NO_ONE;
        }
      }

      public final int getNumber()
      {
        return this.value;
      }
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Client.SetAclsRequest, Builder>
      implements Client.SetAclsRequestOrBuilder
    {
      private Client.SetAclsRequest.Acl acl_ = Client.SetAclsRequest.Acl.EVERYONE;
      private int bitField0_;
      private Object senderId_ = "";

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 8:
            Client.SetAclsRequest.Acl localAcl = Client.SetAclsRequest.Acl.valueOf(paramCodedInputStream.readEnum());
            if (localAcl == null)
              continue;
            this.bitField0_ = (0x1 | this.bitField0_);
            this.acl_ = localAcl;
            break;
          case 18:
          }
          this.bitField0_ = (0x2 | this.bitField0_);
          this.senderId_ = paramCodedInputStream.readBytes();
        }
      }

      public final Client.SetAclsRequest build()
      {
        Client.SetAclsRequest localSetAclsRequest = buildPartial();
        if (!localSetAclsRequest.isInitialized())
          throw new UninitializedMessageException();
        return localSetAclsRequest;
      }

      public final Client.SetAclsRequest buildPartial()
      {
        Client.SetAclsRequest localSetAclsRequest = new Client.SetAclsRequest(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Client.SetAclsRequest.access$46302(localSetAclsRequest, this.acl_);
        if ((i & 0x2) == 2)
          k |= 2;
        Client.SetAclsRequest.access$46402(localSetAclsRequest, this.senderId_);
        Client.SetAclsRequest.access$46502(localSetAclsRequest, k);
        return localSetAclsRequest;
      }

      public final Builder clear()
      {
        super.clear();
        this.acl_ = Client.SetAclsRequest.Acl.EVERYONE;
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.senderId_ = "";
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        return this;
      }

      public final Builder clearAcl()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.acl_ = Client.SetAclsRequest.Acl.EVERYONE;
        return this;
      }

      public final Builder clearSenderId()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.senderId_ = Client.SetAclsRequest.getDefaultInstance().getSenderId();
        return this;
      }

      public final Client.SetAclsRequest.Acl getAcl()
      {
        return this.acl_;
      }

      public final Client.SetAclsRequest getDefaultInstanceForType()
      {
        return Client.SetAclsRequest.getDefaultInstance();
      }

      public final String getSenderId()
      {
        Object localObject = this.senderId_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.senderId_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final boolean hasAcl()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean hasSenderId()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Client.SetAclsRequest paramSetAclsRequest)
      {
        if (paramSetAclsRequest == Client.SetAclsRequest.getDefaultInstance());
        while (true)
        {
          return this;
          if (paramSetAclsRequest.hasAcl())
            setAcl(paramSetAclsRequest.getAcl());
          if (paramSetAclsRequest.hasSenderId())
            setSenderId(paramSetAclsRequest.getSenderId());
        }
      }

      public final Builder setAcl(Client.SetAclsRequest.Acl paramAcl)
      {
        if (paramAcl == null)
          throw new NullPointerException();
        this.bitField0_ = (0x1 | this.bitField0_);
        this.acl_ = paramAcl;
        return this;
      }

      public final Builder setSenderId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x2 | this.bitField0_);
        this.senderId_ = paramString;
        return this;
      }
    }
  }

  public static abstract interface SetAclsRequestOrBuilder extends MessageLiteOrBuilder
  {
    public abstract Client.SetAclsRequest.Acl getAcl();

    public abstract String getSenderId();

    public abstract boolean hasAcl();

    public abstract boolean hasSenderId();
  }

  public static final class SetAclsResponse extends GeneratedMessageLite
    implements Client.SetAclsResponseOrBuilder
  {
    private static final SetAclsResponse defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private Data.ResponseStatus status_;
    private long timestamp_;

    static
    {
      SetAclsResponse localSetAclsResponse = new SetAclsResponse();
      defaultInstance = localSetAclsResponse;
      localSetAclsResponse.status_ = Data.ResponseStatus.OK;
      localSetAclsResponse.timestamp_ = 0L;
    }

    private SetAclsResponse()
    {
    }

    private SetAclsResponse(Builder paramBuilder)
    {
      super();
    }

    public static SetAclsResponse getDefaultInstance()
    {
      return defaultInstance;
    }

    public static Builder newBuilder()
    {
      return Builder.access$46700();
    }

    public static Builder newBuilder(SetAclsResponse paramSetAclsResponse)
    {
      return Builder.access$46700().mergeFrom(paramSetAclsResponse);
    }

    public final SetAclsResponse getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeEnumSize(1, this.status_.getNumber());
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeInt64Size(2, this.timestamp_);
        this.memoizedSerializedSize = k;
      }
    }

    public final Data.ResponseStatus getStatus()
    {
      return this.status_;
    }

    public final long getTimestamp()
    {
      return this.timestamp_;
    }

    public final boolean hasStatus()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean hasTimestamp()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeEnum(1, this.status_.getNumber());
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeInt64(2, this.timestamp_);
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Client.SetAclsResponse, Builder>
      implements Client.SetAclsResponseOrBuilder
    {
      private int bitField0_;
      private Data.ResponseStatus status_ = Data.ResponseStatus.OK;
      private long timestamp_;

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 8:
            Data.ResponseStatus localResponseStatus = Data.ResponseStatus.valueOf(paramCodedInputStream.readEnum());
            if (localResponseStatus == null)
              continue;
            this.bitField0_ = (0x1 | this.bitField0_);
            this.status_ = localResponseStatus;
            break;
          case 16:
          }
          this.bitField0_ = (0x2 | this.bitField0_);
          this.timestamp_ = paramCodedInputStream.readInt64();
        }
      }

      public final Client.SetAclsResponse build()
      {
        Client.SetAclsResponse localSetAclsResponse = buildPartial();
        if (!localSetAclsResponse.isInitialized())
          throw new UninitializedMessageException();
        return localSetAclsResponse;
      }

      public final Client.SetAclsResponse buildPartial()
      {
        Client.SetAclsResponse localSetAclsResponse = new Client.SetAclsResponse(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Client.SetAclsResponse.access$46902(localSetAclsResponse, this.status_);
        if ((i & 0x2) == 2)
          k |= 2;
        Client.SetAclsResponse.access$47002(localSetAclsResponse, this.timestamp_);
        Client.SetAclsResponse.access$47102(localSetAclsResponse, k);
        return localSetAclsResponse;
      }

      public final Builder clear()
      {
        super.clear();
        this.status_ = Data.ResponseStatus.OK;
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.timestamp_ = 0L;
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        return this;
      }

      public final Builder clearStatus()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.status_ = Data.ResponseStatus.OK;
        return this;
      }

      public final Builder clearTimestamp()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.timestamp_ = 0L;
        return this;
      }

      public final Client.SetAclsResponse getDefaultInstanceForType()
      {
        return Client.SetAclsResponse.getDefaultInstance();
      }

      public final Data.ResponseStatus getStatus()
      {
        return this.status_;
      }

      public final long getTimestamp()
      {
        return this.timestamp_;
      }

      public final boolean hasStatus()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean hasTimestamp()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Client.SetAclsResponse paramSetAclsResponse)
      {
        if (paramSetAclsResponse == Client.SetAclsResponse.getDefaultInstance());
        while (true)
        {
          return this;
          if (paramSetAclsResponse.hasStatus())
            setStatus(paramSetAclsResponse.getStatus());
          if (paramSetAclsResponse.hasTimestamp())
            setTimestamp(paramSetAclsResponse.getTimestamp());
        }
      }

      public final Builder setStatus(Data.ResponseStatus paramResponseStatus)
      {
        if (paramResponseStatus == null)
          throw new NullPointerException();
        this.bitField0_ = (0x1 | this.bitField0_);
        this.status_ = paramResponseStatus;
        return this;
      }

      public final Builder setTimestamp(long paramLong)
      {
        this.bitField0_ = (0x2 | this.bitField0_);
        this.timestamp_ = paramLong;
        return this;
      }
    }
  }

  public static abstract interface SetAclsResponseOrBuilder extends MessageLiteOrBuilder
  {
    public abstract Data.ResponseStatus getStatus();

    public abstract long getTimestamp();

    public abstract boolean hasStatus();

    public abstract boolean hasTimestamp();
  }

  public static final class SetDeviceStatusRequest extends GeneratedMessageLite
    implements Client.SetDeviceStatusRequestOrBuilder
  {
    private static final SetDeviceStatusRequest defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private boolean enabled_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private Object phoneNumber_;
    private Object senderId_;

    static
    {
      SetDeviceStatusRequest localSetDeviceStatusRequest = new SetDeviceStatusRequest();
      defaultInstance = localSetDeviceStatusRequest;
      localSetDeviceStatusRequest.senderId_ = "";
      localSetDeviceStatusRequest.phoneNumber_ = "";
      localSetDeviceStatusRequest.enabled_ = false;
    }

    private SetDeviceStatusRequest()
    {
    }

    private SetDeviceStatusRequest(Builder paramBuilder)
    {
      super();
    }

    public static SetDeviceStatusRequest getDefaultInstance()
    {
      return defaultInstance;
    }

    private ByteString getPhoneNumberBytes()
    {
      Object localObject = this.phoneNumber_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.phoneNumber_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    private ByteString getSenderIdBytes()
    {
      Object localObject = this.senderId_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.senderId_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public final SetDeviceStatusRequest getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final boolean getEnabled()
    {
      return this.enabled_;
    }

    public final String getPhoneNumber()
    {
      Object localObject1 = this.phoneNumber_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.phoneNumber_ = str;
      }
    }

    public final String getSenderId()
    {
      Object localObject1 = this.senderId_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.senderId_ = str;
      }
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeBytesSize(1, getSenderIdBytes());
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeBytesSize(2, getPhoneNumberBytes());
        if ((0x4 & this.bitField0_) == 4)
          k += CodedOutputStream.computeBoolSize(3, this.enabled_);
        this.memoizedSerializedSize = k;
      }
    }

    public final boolean hasEnabled()
    {
      if ((0x4 & this.bitField0_) == 4);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasPhoneNumber()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasSenderId()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeBytes(1, getSenderIdBytes());
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeBytes(2, getPhoneNumberBytes());
      if ((0x4 & this.bitField0_) == 4)
        paramCodedOutputStream.writeBool(3, this.enabled_);
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Client.SetDeviceStatusRequest, Builder>
      implements Client.SetDeviceStatusRequestOrBuilder
    {
      private int bitField0_;
      private boolean enabled_;
      private Object phoneNumber_ = "";
      private Object senderId_ = "";

      private Client.SetDeviceStatusRequest buildPartial()
      {
        Client.SetDeviceStatusRequest localSetDeviceStatusRequest = new Client.SetDeviceStatusRequest(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Client.SetDeviceStatusRequest.access$43602(localSetDeviceStatusRequest, this.senderId_);
        if ((i & 0x2) == 2)
          k |= 2;
        Client.SetDeviceStatusRequest.access$43702(localSetDeviceStatusRequest, this.phoneNumber_);
        if ((i & 0x4) == 4)
          k |= 4;
        Client.SetDeviceStatusRequest.access$43802(localSetDeviceStatusRequest, this.enabled_);
        Client.SetDeviceStatusRequest.access$43902(localSetDeviceStatusRequest, k);
        return localSetDeviceStatusRequest;
      }

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 10:
            this.bitField0_ = (0x1 | this.bitField0_);
            this.senderId_ = paramCodedInputStream.readBytes();
            break;
          case 18:
            this.bitField0_ = (0x2 | this.bitField0_);
            this.phoneNumber_ = paramCodedInputStream.readBytes();
            break;
          case 24:
          }
          this.bitField0_ = (0x4 | this.bitField0_);
          this.enabled_ = paramCodedInputStream.readBool();
        }
      }

      public final Builder clear()
      {
        super.clear();
        this.senderId_ = "";
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.phoneNumber_ = "";
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.enabled_ = false;
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        return this;
      }

      public final Builder clearEnabled()
      {
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.enabled_ = false;
        return this;
      }

      public final Builder clearPhoneNumber()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.phoneNumber_ = Client.SetDeviceStatusRequest.getDefaultInstance().getPhoneNumber();
        return this;
      }

      public final Builder clearSenderId()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.senderId_ = Client.SetDeviceStatusRequest.getDefaultInstance().getSenderId();
        return this;
      }

      public final Client.SetDeviceStatusRequest getDefaultInstanceForType()
      {
        return Client.SetDeviceStatusRequest.getDefaultInstance();
      }

      public final boolean getEnabled()
      {
        return this.enabled_;
      }

      public final String getPhoneNumber()
      {
        Object localObject = this.phoneNumber_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.phoneNumber_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final String getSenderId()
      {
        Object localObject = this.senderId_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.senderId_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final boolean hasEnabled()
      {
        if ((0x4 & this.bitField0_) == 4);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasPhoneNumber()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasSenderId()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Client.SetDeviceStatusRequest paramSetDeviceStatusRequest)
      {
        if (paramSetDeviceStatusRequest == Client.SetDeviceStatusRequest.getDefaultInstance());
        while (true)
        {
          return this;
          if (paramSetDeviceStatusRequest.hasSenderId())
            setSenderId(paramSetDeviceStatusRequest.getSenderId());
          if (paramSetDeviceStatusRequest.hasPhoneNumber())
            setPhoneNumber(paramSetDeviceStatusRequest.getPhoneNumber());
          if (paramSetDeviceStatusRequest.hasEnabled())
            setEnabled(paramSetDeviceStatusRequest.getEnabled());
        }
      }

      public final Builder setEnabled(boolean paramBoolean)
      {
        this.bitField0_ = (0x4 | this.bitField0_);
        this.enabled_ = paramBoolean;
        return this;
      }

      public final Builder setPhoneNumber(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x2 | this.bitField0_);
        this.phoneNumber_ = paramString;
        return this;
      }

      public final Builder setSenderId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x1 | this.bitField0_);
        this.senderId_ = paramString;
        return this;
      }
    }
  }

  public static abstract interface SetDeviceStatusRequestOrBuilder extends MessageLiteOrBuilder
  {
    public abstract boolean getEnabled();

    public abstract String getPhoneNumber();

    public abstract String getSenderId();

    public abstract boolean hasEnabled();

    public abstract boolean hasPhoneNumber();

    public abstract boolean hasSenderId();
  }

  public static final class SetDeviceStatusResponse extends GeneratedMessageLite
    implements Client.SetDeviceStatusResponseOrBuilder
  {
    private static final SetDeviceStatusResponse defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private Data.ResponseStatus status_;
    private long timestamp_;

    static
    {
      SetDeviceStatusResponse localSetDeviceStatusResponse = new SetDeviceStatusResponse();
      defaultInstance = localSetDeviceStatusResponse;
      localSetDeviceStatusResponse.status_ = Data.ResponseStatus.OK;
      localSetDeviceStatusResponse.timestamp_ = 0L;
    }

    private SetDeviceStatusResponse()
    {
    }

    private SetDeviceStatusResponse(Builder paramBuilder)
    {
      super();
    }

    public static SetDeviceStatusResponse getDefaultInstance()
    {
      return defaultInstance;
    }

    public final SetDeviceStatusResponse getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeEnumSize(1, this.status_.getNumber());
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeInt64Size(2, this.timestamp_);
        this.memoizedSerializedSize = k;
      }
    }

    public final Data.ResponseStatus getStatus()
    {
      return this.status_;
    }

    public final long getTimestamp()
    {
      return this.timestamp_;
    }

    public final boolean hasStatus()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean hasTimestamp()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeEnum(1, this.status_.getNumber());
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeInt64(2, this.timestamp_);
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Client.SetDeviceStatusResponse, Builder>
      implements Client.SetDeviceStatusResponseOrBuilder
    {
      private int bitField0_;
      private Data.ResponseStatus status_ = Data.ResponseStatus.OK;
      private long timestamp_;

      private Client.SetDeviceStatusResponse buildPartial()
      {
        Client.SetDeviceStatusResponse localSetDeviceStatusResponse = new Client.SetDeviceStatusResponse(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Client.SetDeviceStatusResponse.access$44302(localSetDeviceStatusResponse, this.status_);
        if ((i & 0x2) == 2)
          k |= 2;
        Client.SetDeviceStatusResponse.access$44402(localSetDeviceStatusResponse, this.timestamp_);
        Client.SetDeviceStatusResponse.access$44502(localSetDeviceStatusResponse, k);
        return localSetDeviceStatusResponse;
      }

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 8:
            Data.ResponseStatus localResponseStatus = Data.ResponseStatus.valueOf(paramCodedInputStream.readEnum());
            if (localResponseStatus == null)
              continue;
            this.bitField0_ = (0x1 | this.bitField0_);
            this.status_ = localResponseStatus;
            break;
          case 16:
          }
          this.bitField0_ = (0x2 | this.bitField0_);
          this.timestamp_ = paramCodedInputStream.readInt64();
        }
      }

      public final Builder clear()
      {
        super.clear();
        this.status_ = Data.ResponseStatus.OK;
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.timestamp_ = 0L;
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        return this;
      }

      public final Builder clearStatus()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.status_ = Data.ResponseStatus.OK;
        return this;
      }

      public final Builder clearTimestamp()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.timestamp_ = 0L;
        return this;
      }

      public final Client.SetDeviceStatusResponse getDefaultInstanceForType()
      {
        return Client.SetDeviceStatusResponse.getDefaultInstance();
      }

      public final Data.ResponseStatus getStatus()
      {
        return this.status_;
      }

      public final long getTimestamp()
      {
        return this.timestamp_;
      }

      public final boolean hasStatus()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean hasTimestamp()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Client.SetDeviceStatusResponse paramSetDeviceStatusResponse)
      {
        if (paramSetDeviceStatusResponse == Client.SetDeviceStatusResponse.getDefaultInstance());
        while (true)
        {
          return this;
          if (paramSetDeviceStatusResponse.hasStatus())
            setStatus(paramSetDeviceStatusResponse.getStatus());
          if (paramSetDeviceStatusResponse.hasTimestamp())
            setTimestamp(paramSetDeviceStatusResponse.getTimestamp());
        }
      }

      public final Builder setStatus(Data.ResponseStatus paramResponseStatus)
      {
        if (paramResponseStatus == null)
          throw new NullPointerException();
        this.bitField0_ = (0x1 | this.bitField0_);
        this.status_ = paramResponseStatus;
        return this;
      }

      public final Builder setTimestamp(long paramLong)
      {
        this.bitField0_ = (0x2 | this.bitField0_);
        this.timestamp_ = paramLong;
        return this;
      }
    }
  }

  public static abstract interface SetDeviceStatusResponseOrBuilder extends MessageLiteOrBuilder
  {
    public abstract Data.ResponseStatus getStatus();

    public abstract long getTimestamp();

    public abstract boolean hasStatus();

    public abstract boolean hasTimestamp();
  }

  public static final class Suggestion extends GeneratedMessageLite
    implements Client.SuggestionOrBuilder
  {
    private static final Suggestion defaultInstance;
    private static final long serialVersionUID;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private List<Data.Participant> suggestedUser_;

    static
    {
      Suggestion localSuggestion = new Suggestion();
      defaultInstance = localSuggestion;
      localSuggestion.suggestedUser_ = Collections.emptyList();
    }

    private Suggestion()
    {
    }

    private Suggestion(Builder paramBuilder)
    {
      super();
    }

    public static Suggestion getDefaultInstance()
    {
      return defaultInstance;
    }

    public static Builder newBuilder()
    {
      return Builder.access$56100();
    }

    public final Suggestion getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int j;
      for (int m = i; ; m = j)
      {
        return m;
        j = 0;
        for (int k = 0; k < this.suggestedUser_.size(); k++)
          j += CodedOutputStream.computeMessageSize(1, (MessageLite)this.suggestedUser_.get(k));
        this.memoizedSerializedSize = j;
      }
    }

    public final Data.Participant getSuggestedUser(int paramInt)
    {
      return (Data.Participant)this.suggestedUser_.get(paramInt);
    }

    public final int getSuggestedUserCount()
    {
      return this.suggestedUser_.size();
    }

    public final List<Data.Participant> getSuggestedUserList()
    {
      return this.suggestedUser_;
    }

    public final Data.ParticipantOrBuilder getSuggestedUserOrBuilder(int paramInt)
    {
      return (Data.ParticipantOrBuilder)this.suggestedUser_.get(paramInt);
    }

    public final List<? extends Data.ParticipantOrBuilder> getSuggestedUserOrBuilderList()
    {
      return this.suggestedUser_;
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      for (int i = 0; i < this.suggestedUser_.size(); i++)
        paramCodedOutputStream.writeMessage(1, (MessageLite)this.suggestedUser_.get(i));
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Client.Suggestion, Builder>
      implements Client.SuggestionOrBuilder
    {
      private int bitField0_;
      private List<Data.Participant> suggestedUser_ = Collections.emptyList();

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private void ensureSuggestedUserIsMutable()
      {
        if ((0x1 & this.bitField0_) != 1)
        {
          this.suggestedUser_ = new ArrayList(this.suggestedUser_);
          this.bitField0_ = (0x1 | this.bitField0_);
        }
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 10:
          }
          Data.Participant.Builder localBuilder = Data.Participant.newBuilder();
          paramCodedInputStream.readMessage(localBuilder, paramExtensionRegistryLite);
          addSuggestedUser(localBuilder.buildPartial());
        }
      }

      public final Builder addAllSuggestedUser(Iterable<? extends Data.Participant> paramIterable)
      {
        ensureSuggestedUserIsMutable();
        GeneratedMessageLite.Builder.addAll(paramIterable, this.suggestedUser_);
        return this;
      }

      public final Builder addSuggestedUser(int paramInt, Data.Participant.Builder paramBuilder)
      {
        ensureSuggestedUserIsMutable();
        this.suggestedUser_.add(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder addSuggestedUser(int paramInt, Data.Participant paramParticipant)
      {
        if (paramParticipant == null)
          throw new NullPointerException();
        ensureSuggestedUserIsMutable();
        this.suggestedUser_.add(paramInt, paramParticipant);
        return this;
      }

      public final Builder addSuggestedUser(Data.Participant.Builder paramBuilder)
      {
        ensureSuggestedUserIsMutable();
        this.suggestedUser_.add(paramBuilder.build());
        return this;
      }

      public final Builder addSuggestedUser(Data.Participant paramParticipant)
      {
        if (paramParticipant == null)
          throw new NullPointerException();
        ensureSuggestedUserIsMutable();
        this.suggestedUser_.add(paramParticipant);
        return this;
      }

      public final Client.Suggestion build()
      {
        Client.Suggestion localSuggestion = buildPartial();
        if (!localSuggestion.isInitialized())
          throw new UninitializedMessageException();
        return localSuggestion;
      }

      public final Client.Suggestion buildPartial()
      {
        Client.Suggestion localSuggestion = new Client.Suggestion(this, (byte)0);
        if ((0x1 & this.bitField0_) == 1)
        {
          this.suggestedUser_ = Collections.unmodifiableList(this.suggestedUser_);
          this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        }
        Client.Suggestion.access$56302(localSuggestion, this.suggestedUser_);
        return localSuggestion;
      }

      public final Builder clear()
      {
        super.clear();
        this.suggestedUser_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        return this;
      }

      public final Builder clearSuggestedUser()
      {
        this.suggestedUser_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        return this;
      }

      public final Client.Suggestion getDefaultInstanceForType()
      {
        return Client.Suggestion.getDefaultInstance();
      }

      public final Data.Participant getSuggestedUser(int paramInt)
      {
        return (Data.Participant)this.suggestedUser_.get(paramInt);
      }

      public final int getSuggestedUserCount()
      {
        return this.suggestedUser_.size();
      }

      public final List<Data.Participant> getSuggestedUserList()
      {
        return Collections.unmodifiableList(this.suggestedUser_);
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Client.Suggestion paramSuggestion)
      {
        if (paramSuggestion == Client.Suggestion.getDefaultInstance());
        while (true)
        {
          return this;
          if (!paramSuggestion.suggestedUser_.isEmpty())
            if (this.suggestedUser_.isEmpty())
            {
              this.suggestedUser_ = paramSuggestion.suggestedUser_;
              this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
            }
            else
            {
              ensureSuggestedUserIsMutable();
              this.suggestedUser_.addAll(paramSuggestion.suggestedUser_);
            }
        }
      }

      public final Builder setSuggestedUser(int paramInt, Data.Participant.Builder paramBuilder)
      {
        ensureSuggestedUserIsMutable();
        this.suggestedUser_.set(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder setSuggestedUser(int paramInt, Data.Participant paramParticipant)
      {
        if (paramParticipant == null)
          throw new NullPointerException();
        ensureSuggestedUserIsMutable();
        this.suggestedUser_.set(paramInt, paramParticipant);
        return this;
      }
    }
  }

  public static abstract interface SuggestionOrBuilder extends MessageLiteOrBuilder
  {
    public abstract Data.Participant getSuggestedUser(int paramInt);

    public abstract int getSuggestedUserCount();

    public abstract List<Data.Participant> getSuggestedUserList();
  }

  public static final class SuggestionsRequest extends GeneratedMessageLite
    implements Client.SuggestionsRequestOrBuilder
  {
    private static final SuggestionsRequest defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private int count_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private LazyStringList participantId_;
    private Data.StubbyInfo stubbyInfo_;
    private SuggestionsType suggestionsType_;

    static
    {
      SuggestionsRequest localSuggestionsRequest = new SuggestionsRequest();
      defaultInstance = localSuggestionsRequest;
      localSuggestionsRequest.participantId_ = LazyStringArrayList.EMPTY;
      localSuggestionsRequest.count_ = 0;
      localSuggestionsRequest.suggestionsType_ = SuggestionsType.ALL;
      localSuggestionsRequest.stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
    }

    private SuggestionsRequest()
    {
    }

    private SuggestionsRequest(Builder paramBuilder)
    {
      super();
    }

    public static SuggestionsRequest getDefaultInstance()
    {
      return defaultInstance;
    }

    public static Builder newBuilder()
    {
      return Builder.access$55300();
    }

    public static Builder newBuilder(SuggestionsRequest paramSuggestionsRequest)
    {
      return Builder.access$55300().mergeFrom(paramSuggestionsRequest);
    }

    public final int getCount()
    {
      return this.count_;
    }

    public final SuggestionsRequest getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final String getParticipantId(int paramInt)
    {
      return (String)this.participantId_.get(paramInt);
    }

    public final int getParticipantIdCount()
    {
      return this.participantId_.size();
    }

    public final List<String> getParticipantIdList()
    {
      return this.participantId_;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int m;
      for (int n = i; ; n = m)
      {
        return n;
        int j = 0;
        for (int k = 0; k < this.participantId_.size(); k++)
          j += CodedOutputStream.computeBytesSizeNoTag(this.participantId_.getByteString(k));
        m = j + 0 + 1 * getParticipantIdList().size();
        if ((0x4 & this.bitField0_) == 4)
          m += CodedOutputStream.computeMessageSize(2, this.stubbyInfo_);
        if ((0x1 & this.bitField0_) == 1)
          m += CodedOutputStream.computeInt32Size(3, this.count_);
        if ((0x2 & this.bitField0_) == 2)
          m += CodedOutputStream.computeEnumSize(4, this.suggestionsType_.getNumber());
        this.memoizedSerializedSize = m;
      }
    }

    public final Data.StubbyInfo getStubbyInfo()
    {
      return this.stubbyInfo_;
    }

    public final SuggestionsType getSuggestionsType()
    {
      return this.suggestionsType_;
    }

    public final boolean hasCount()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean hasStubbyInfo()
    {
      if ((0x4 & this.bitField0_) == 4);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasSuggestionsType()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      for (int i = 0; i < this.participantId_.size(); i++)
        paramCodedOutputStream.writeBytes(1, this.participantId_.getByteString(i));
      if ((0x4 & this.bitField0_) == 4)
        paramCodedOutputStream.writeMessage(2, this.stubbyInfo_);
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeInt32(3, this.count_);
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeEnum(4, this.suggestionsType_.getNumber());
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Client.SuggestionsRequest, Builder>
      implements Client.SuggestionsRequestOrBuilder
    {
      private int bitField0_;
      private int count_;
      private LazyStringList participantId_ = LazyStringArrayList.EMPTY;
      private Data.StubbyInfo stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
      private Client.SuggestionsRequest.SuggestionsType suggestionsType_ = Client.SuggestionsRequest.SuggestionsType.ALL;

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private void ensureParticipantIdIsMutable()
      {
        if ((0x1 & this.bitField0_) != 1)
        {
          this.participantId_ = new LazyStringArrayList(this.participantId_);
          this.bitField0_ = (0x1 | this.bitField0_);
        }
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 10:
            ensureParticipantIdIsMutable();
            this.participantId_.add(paramCodedInputStream.readBytes());
            break;
          case 18:
            Data.StubbyInfo.Builder localBuilder = Data.StubbyInfo.newBuilder();
            if (hasStubbyInfo())
              localBuilder.mergeFrom(getStubbyInfo());
            paramCodedInputStream.readMessage(localBuilder, paramExtensionRegistryLite);
            setStubbyInfo(localBuilder.buildPartial());
            break;
          case 24:
            this.bitField0_ = (0x2 | this.bitField0_);
            this.count_ = paramCodedInputStream.readInt32();
            break;
          case 32:
          }
          Client.SuggestionsRequest.SuggestionsType localSuggestionsType = Client.SuggestionsRequest.SuggestionsType.valueOf(paramCodedInputStream.readEnum());
          if (localSuggestionsType != null)
          {
            this.bitField0_ = (0x4 | this.bitField0_);
            this.suggestionsType_ = localSuggestionsType;
          }
        }
      }

      public final Builder addAllParticipantId(Iterable<String> paramIterable)
      {
        ensureParticipantIdIsMutable();
        GeneratedMessageLite.Builder.addAll(paramIterable, this.participantId_);
        return this;
      }

      public final Builder addParticipantId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        ensureParticipantIdIsMutable();
        this.participantId_.add(paramString);
        return this;
      }

      public final Client.SuggestionsRequest build()
      {
        Client.SuggestionsRequest localSuggestionsRequest = buildPartial();
        if (!localSuggestionsRequest.isInitialized())
          throw new UninitializedMessageException();
        return localSuggestionsRequest;
      }

      public final Client.SuggestionsRequest buildPartial()
      {
        Client.SuggestionsRequest localSuggestionsRequest = new Client.SuggestionsRequest(this, (byte)0);
        int i = this.bitField0_;
        if ((0x1 & this.bitField0_) == 1)
        {
          this.participantId_ = new UnmodifiableLazyStringList(this.participantId_);
          this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        }
        Client.SuggestionsRequest.access$55502(localSuggestionsRequest, this.participantId_);
        int j = i & 0x2;
        int k = 0;
        if (j == 2)
          k = 1;
        Client.SuggestionsRequest.access$55602(localSuggestionsRequest, this.count_);
        if ((i & 0x4) == 4)
          k |= 2;
        Client.SuggestionsRequest.access$55702(localSuggestionsRequest, this.suggestionsType_);
        if ((i & 0x8) == 8)
          k |= 4;
        Client.SuggestionsRequest.access$55802(localSuggestionsRequest, this.stubbyInfo_);
        Client.SuggestionsRequest.access$55902(localSuggestionsRequest, k);
        return localSuggestionsRequest;
      }

      public final Builder clear()
      {
        super.clear();
        this.participantId_ = LazyStringArrayList.EMPTY;
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.count_ = 0;
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.suggestionsType_ = Client.SuggestionsRequest.SuggestionsType.ALL;
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        return this;
      }

      public final Builder clearCount()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.count_ = 0;
        return this;
      }

      public final Builder clearParticipantId()
      {
        this.participantId_ = LazyStringArrayList.EMPTY;
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        return this;
      }

      public final Builder clearStubbyInfo()
      {
        this.stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        return this;
      }

      public final Builder clearSuggestionsType()
      {
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.suggestionsType_ = Client.SuggestionsRequest.SuggestionsType.ALL;
        return this;
      }

      public final int getCount()
      {
        return this.count_;
      }

      public final Client.SuggestionsRequest getDefaultInstanceForType()
      {
        return Client.SuggestionsRequest.getDefaultInstance();
      }

      public final String getParticipantId(int paramInt)
      {
        return (String)this.participantId_.get(paramInt);
      }

      public final int getParticipantIdCount()
      {
        return this.participantId_.size();
      }

      public final List<String> getParticipantIdList()
      {
        return Collections.unmodifiableList(this.participantId_);
      }

      public final Data.StubbyInfo getStubbyInfo()
      {
        return this.stubbyInfo_;
      }

      public final Client.SuggestionsRequest.SuggestionsType getSuggestionsType()
      {
        return this.suggestionsType_;
      }

      public final boolean hasCount()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasStubbyInfo()
      {
        if ((0x8 & this.bitField0_) == 8);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasSuggestionsType()
      {
        if ((0x4 & this.bitField0_) == 4);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Client.SuggestionsRequest paramSuggestionsRequest)
      {
        if (paramSuggestionsRequest == Client.SuggestionsRequest.getDefaultInstance());
        label52: 
        do
        {
          return this;
          if (!paramSuggestionsRequest.participantId_.isEmpty())
          {
            if (!this.participantId_.isEmpty())
              break;
            this.participantId_ = paramSuggestionsRequest.participantId_;
            this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
          }
          if (paramSuggestionsRequest.hasCount())
            setCount(paramSuggestionsRequest.getCount());
          if (paramSuggestionsRequest.hasSuggestionsType())
            setSuggestionsType(paramSuggestionsRequest.getSuggestionsType());
        }
        while (!paramSuggestionsRequest.hasStubbyInfo());
        Data.StubbyInfo localStubbyInfo = paramSuggestionsRequest.getStubbyInfo();
        if (((0x8 & this.bitField0_) == 8) && (this.stubbyInfo_ != Data.StubbyInfo.getDefaultInstance()));
        for (this.stubbyInfo_ = Data.StubbyInfo.newBuilder(this.stubbyInfo_).mergeFrom(localStubbyInfo).buildPartial(); ; this.stubbyInfo_ = localStubbyInfo)
        {
          this.bitField0_ = (0x8 | this.bitField0_);
          break;
          ensureParticipantIdIsMutable();
          this.participantId_.addAll(paramSuggestionsRequest.participantId_);
          break label52;
        }
      }

      public final Builder setCount(int paramInt)
      {
        this.bitField0_ = (0x2 | this.bitField0_);
        this.count_ = paramInt;
        return this;
      }

      public final Builder setParticipantId(int paramInt, String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        ensureParticipantIdIsMutable();
        this.participantId_.set(paramInt, paramString);
        return this;
      }

      public final Builder setStubbyInfo(Data.StubbyInfo.Builder paramBuilder)
      {
        this.stubbyInfo_ = paramBuilder.build();
        this.bitField0_ = (0x8 | this.bitField0_);
        return this;
      }

      public final Builder setStubbyInfo(Data.StubbyInfo paramStubbyInfo)
      {
        if (paramStubbyInfo == null)
          throw new NullPointerException();
        this.stubbyInfo_ = paramStubbyInfo;
        this.bitField0_ = (0x8 | this.bitField0_);
        return this;
      }

      public final Builder setSuggestionsType(Client.SuggestionsRequest.SuggestionsType paramSuggestionsType)
      {
        if (paramSuggestionsType == null)
          throw new NullPointerException();
        this.bitField0_ = (0x4 | this.bitField0_);
        this.suggestionsType_ = paramSuggestionsType;
        return this;
      }
    }

    public static enum SuggestionsType
      implements Internal.EnumLite
    {
      private static Internal.EnumLiteMap<SuggestionsType> internalValueMap = new Internal.EnumLiteMap()
      {
      };
      private final int value;

      static
      {
        HANGOUT = new SuggestionsType("HANGOUT", 2, 3);
        SuggestionsType[] arrayOfSuggestionsType = new SuggestionsType[3];
        arrayOfSuggestionsType[0] = ALL;
        arrayOfSuggestionsType[1] = ONLY_NEW;
        arrayOfSuggestionsType[2] = HANGOUT;
      }

      private SuggestionsType(int paramInt1, int paramInt2)
      {
        this.value = paramInt1;
      }

      public static SuggestionsType valueOf(int paramInt)
      {
        SuggestionsType localSuggestionsType;
        switch (paramInt)
        {
        default:
          localSuggestionsType = null;
        case 1:
        case 2:
        case 3:
        }
        while (true)
        {
          return localSuggestionsType;
          localSuggestionsType = ALL;
          continue;
          localSuggestionsType = ONLY_NEW;
          continue;
          localSuggestionsType = HANGOUT;
        }
      }

      public final int getNumber()
      {
        return this.value;
      }
    }
  }

  public static abstract interface SuggestionsRequestOrBuilder extends MessageLiteOrBuilder
  {
    public abstract int getCount();

    public abstract String getParticipantId(int paramInt);

    public abstract int getParticipantIdCount();

    public abstract List<String> getParticipantIdList();

    public abstract Data.StubbyInfo getStubbyInfo();

    public abstract Client.SuggestionsRequest.SuggestionsType getSuggestionsType();

    public abstract boolean hasCount();

    public abstract boolean hasStubbyInfo();

    public abstract boolean hasSuggestionsType();
  }

  public static final class SuggestionsResponse extends GeneratedMessageLite
    implements Client.SuggestionsResponseOrBuilder
  {
    private static final SuggestionsResponse defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private Object requestError_;
    private Data.ResponseStatus status_;
    private List<Client.Suggestion> suggestion_;

    static
    {
      SuggestionsResponse localSuggestionsResponse = new SuggestionsResponse();
      defaultInstance = localSuggestionsResponse;
      localSuggestionsResponse.status_ = Data.ResponseStatus.OK;
      localSuggestionsResponse.requestError_ = "";
      localSuggestionsResponse.suggestion_ = Collections.emptyList();
    }

    private SuggestionsResponse()
    {
    }

    private SuggestionsResponse(Builder paramBuilder)
    {
      super();
    }

    public static SuggestionsResponse getDefaultInstance()
    {
      return defaultInstance;
    }

    private ByteString getRequestErrorBytes()
    {
      Object localObject = this.requestError_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.requestError_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static Builder newBuilder()
    {
      return Builder.access$56500();
    }

    public static Builder newBuilder(SuggestionsResponse paramSuggestionsResponse)
    {
      return Builder.access$56500().mergeFrom(paramSuggestionsResponse);
    }

    public final SuggestionsResponse getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final String getRequestError()
    {
      Object localObject1 = this.requestError_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.requestError_ = str;
      }
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int n = i; ; n = k)
      {
        return n;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeEnumSize(1, this.status_.getNumber());
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeBytesSize(2, getRequestErrorBytes());
        for (int m = 0; m < this.suggestion_.size(); m++)
          k += CodedOutputStream.computeMessageSize(3, (MessageLite)this.suggestion_.get(m));
        this.memoizedSerializedSize = k;
      }
    }

    public final Data.ResponseStatus getStatus()
    {
      return this.status_;
    }

    public final Client.Suggestion getSuggestion(int paramInt)
    {
      return (Client.Suggestion)this.suggestion_.get(paramInt);
    }

    public final int getSuggestionCount()
    {
      return this.suggestion_.size();
    }

    public final List<Client.Suggestion> getSuggestionList()
    {
      return this.suggestion_;
    }

    public final Client.SuggestionOrBuilder getSuggestionOrBuilder(int paramInt)
    {
      return (Client.SuggestionOrBuilder)this.suggestion_.get(paramInt);
    }

    public final List<? extends Client.SuggestionOrBuilder> getSuggestionOrBuilderList()
    {
      return this.suggestion_;
    }

    public final boolean hasRequestError()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasStatus()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeEnum(1, this.status_.getNumber());
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeBytes(2, getRequestErrorBytes());
      for (int i = 0; i < this.suggestion_.size(); i++)
        paramCodedOutputStream.writeMessage(3, (MessageLite)this.suggestion_.get(i));
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Client.SuggestionsResponse, Builder>
      implements Client.SuggestionsResponseOrBuilder
    {
      private int bitField0_;
      private Object requestError_ = "";
      private Data.ResponseStatus status_ = Data.ResponseStatus.OK;
      private List<Client.Suggestion> suggestion_ = Collections.emptyList();

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private void ensureSuggestionIsMutable()
      {
        if ((0x4 & this.bitField0_) != 4)
        {
          this.suggestion_ = new ArrayList(this.suggestion_);
          this.bitField0_ = (0x4 | this.bitField0_);
        }
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 8:
            Data.ResponseStatus localResponseStatus = Data.ResponseStatus.valueOf(paramCodedInputStream.readEnum());
            if (localResponseStatus == null)
              continue;
            this.bitField0_ = (0x1 | this.bitField0_);
            this.status_ = localResponseStatus;
            break;
          case 18:
            this.bitField0_ = (0x2 | this.bitField0_);
            this.requestError_ = paramCodedInputStream.readBytes();
            break;
          case 26:
          }
          Client.Suggestion.Builder localBuilder = Client.Suggestion.newBuilder();
          paramCodedInputStream.readMessage(localBuilder, paramExtensionRegistryLite);
          addSuggestion(localBuilder.buildPartial());
        }
      }

      public final Builder addAllSuggestion(Iterable<? extends Client.Suggestion> paramIterable)
      {
        ensureSuggestionIsMutable();
        GeneratedMessageLite.Builder.addAll(paramIterable, this.suggestion_);
        return this;
      }

      public final Builder addSuggestion(int paramInt, Client.Suggestion.Builder paramBuilder)
      {
        ensureSuggestionIsMutable();
        this.suggestion_.add(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder addSuggestion(int paramInt, Client.Suggestion paramSuggestion)
      {
        if (paramSuggestion == null)
          throw new NullPointerException();
        ensureSuggestionIsMutable();
        this.suggestion_.add(paramInt, paramSuggestion);
        return this;
      }

      public final Builder addSuggestion(Client.Suggestion.Builder paramBuilder)
      {
        ensureSuggestionIsMutable();
        this.suggestion_.add(paramBuilder.build());
        return this;
      }

      public final Builder addSuggestion(Client.Suggestion paramSuggestion)
      {
        if (paramSuggestion == null)
          throw new NullPointerException();
        ensureSuggestionIsMutable();
        this.suggestion_.add(paramSuggestion);
        return this;
      }

      public final Client.SuggestionsResponse build()
      {
        Client.SuggestionsResponse localSuggestionsResponse = buildPartial();
        if (!localSuggestionsResponse.isInitialized())
          throw new UninitializedMessageException();
        return localSuggestionsResponse;
      }

      public final Client.SuggestionsResponse buildPartial()
      {
        Client.SuggestionsResponse localSuggestionsResponse = new Client.SuggestionsResponse(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Client.SuggestionsResponse.access$56702(localSuggestionsResponse, this.status_);
        if ((i & 0x2) == 2)
          k |= 2;
        Client.SuggestionsResponse.access$56802(localSuggestionsResponse, this.requestError_);
        if ((0x4 & this.bitField0_) == 4)
        {
          this.suggestion_ = Collections.unmodifiableList(this.suggestion_);
          this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        }
        Client.SuggestionsResponse.access$56902(localSuggestionsResponse, this.suggestion_);
        Client.SuggestionsResponse.access$57002(localSuggestionsResponse, k);
        return localSuggestionsResponse;
      }

      public final Builder clear()
      {
        super.clear();
        this.status_ = Data.ResponseStatus.OK;
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.requestError_ = "";
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.suggestion_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        return this;
      }

      public final Builder clearRequestError()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.requestError_ = Client.SuggestionsResponse.getDefaultInstance().getRequestError();
        return this;
      }

      public final Builder clearStatus()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.status_ = Data.ResponseStatus.OK;
        return this;
      }

      public final Builder clearSuggestion()
      {
        this.suggestion_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        return this;
      }

      public final Client.SuggestionsResponse getDefaultInstanceForType()
      {
        return Client.SuggestionsResponse.getDefaultInstance();
      }

      public final String getRequestError()
      {
        Object localObject = this.requestError_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.requestError_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final Data.ResponseStatus getStatus()
      {
        return this.status_;
      }

      public final Client.Suggestion getSuggestion(int paramInt)
      {
        return (Client.Suggestion)this.suggestion_.get(paramInt);
      }

      public final int getSuggestionCount()
      {
        return this.suggestion_.size();
      }

      public final List<Client.Suggestion> getSuggestionList()
      {
        return Collections.unmodifiableList(this.suggestion_);
      }

      public final boolean hasRequestError()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasStatus()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Client.SuggestionsResponse paramSuggestionsResponse)
      {
        if (paramSuggestionsResponse == Client.SuggestionsResponse.getDefaultInstance());
        while (true)
        {
          return this;
          if (paramSuggestionsResponse.hasStatus())
            setStatus(paramSuggestionsResponse.getStatus());
          if (paramSuggestionsResponse.hasRequestError())
            setRequestError(paramSuggestionsResponse.getRequestError());
          if (!paramSuggestionsResponse.suggestion_.isEmpty())
            if (this.suggestion_.isEmpty())
            {
              this.suggestion_ = paramSuggestionsResponse.suggestion_;
              this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
            }
            else
            {
              ensureSuggestionIsMutable();
              this.suggestion_.addAll(paramSuggestionsResponse.suggestion_);
            }
        }
      }

      public final Builder setRequestError(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x2 | this.bitField0_);
        this.requestError_ = paramString;
        return this;
      }

      public final Builder setStatus(Data.ResponseStatus paramResponseStatus)
      {
        if (paramResponseStatus == null)
          throw new NullPointerException();
        this.bitField0_ = (0x1 | this.bitField0_);
        this.status_ = paramResponseStatus;
        return this;
      }

      public final Builder setSuggestion(int paramInt, Client.Suggestion.Builder paramBuilder)
      {
        ensureSuggestionIsMutable();
        this.suggestion_.set(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder setSuggestion(int paramInt, Client.Suggestion paramSuggestion)
      {
        if (paramSuggestion == null)
          throw new NullPointerException();
        ensureSuggestionIsMutable();
        this.suggestion_.set(paramInt, paramSuggestion);
        return this;
      }
    }
  }

  public static abstract interface SuggestionsResponseOrBuilder extends MessageLiteOrBuilder
  {
    public abstract String getRequestError();

    public abstract Data.ResponseStatus getStatus();

    public abstract Client.Suggestion getSuggestion(int paramInt);

    public abstract int getSuggestionCount();

    public abstract List<Client.Suggestion> getSuggestionList();

    public abstract boolean hasRequestError();

    public abstract boolean hasStatus();
  }

  public static final class TileEvent extends GeneratedMessageLite
    implements Client.TileEventOrBuilder
  {
    private static final TileEvent defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private Object conversationId_;
    private List<Data.KeyValue> eventData_;
    private Object eventType_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private Object tileType_;
    private int tileVersion_;
    private long timestamp_;

    static
    {
      TileEvent localTileEvent = new TileEvent();
      defaultInstance = localTileEvent;
      localTileEvent.conversationId_ = "";
      localTileEvent.timestamp_ = 0L;
      localTileEvent.tileType_ = "";
      localTileEvent.tileVersion_ = 0;
      localTileEvent.eventType_ = "";
      localTileEvent.eventData_ = Collections.emptyList();
    }

    private TileEvent()
    {
    }

    private TileEvent(Builder paramBuilder)
    {
      super();
    }

    private ByteString getConversationIdBytes()
    {
      Object localObject = this.conversationId_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.conversationId_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static TileEvent getDefaultInstance()
    {
      return defaultInstance;
    }

    private ByteString getEventTypeBytes()
    {
      Object localObject = this.eventType_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.eventType_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    private ByteString getTileTypeBytes()
    {
      Object localObject = this.tileType_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.tileType_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static Builder newBuilder()
    {
      return Builder.access$7200();
    }

    public static Builder newBuilder(TileEvent paramTileEvent)
    {
      return Builder.access$7200().mergeFrom(paramTileEvent);
    }

    public final String getConversationId()
    {
      Object localObject1 = this.conversationId_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.conversationId_ = str;
      }
    }

    public final TileEvent getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final Data.KeyValue getEventData(int paramInt)
    {
      return (Data.KeyValue)this.eventData_.get(paramInt);
    }

    public final int getEventDataCount()
    {
      return this.eventData_.size();
    }

    public final List<Data.KeyValue> getEventDataList()
    {
      return this.eventData_;
    }

    public final Data.KeyValueOrBuilder getEventDataOrBuilder(int paramInt)
    {
      return (Data.KeyValueOrBuilder)this.eventData_.get(paramInt);
    }

    public final List<? extends Data.KeyValueOrBuilder> getEventDataOrBuilderList()
    {
      return this.eventData_;
    }

    public final String getEventType()
    {
      Object localObject1 = this.eventType_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.eventType_ = str;
      }
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int n = i; ; n = k)
      {
        return n;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeBytesSize(1, getConversationIdBytes());
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeInt64Size(2, this.timestamp_);
        if ((0x4 & this.bitField0_) == 4)
          k += CodedOutputStream.computeBytesSize(3, getTileTypeBytes());
        if ((0x8 & this.bitField0_) == 8)
          k += CodedOutputStream.computeInt32Size(4, this.tileVersion_);
        if ((0x10 & this.bitField0_) == 16)
          k += CodedOutputStream.computeBytesSize(5, getEventTypeBytes());
        for (int m = 0; m < this.eventData_.size(); m++)
          k += CodedOutputStream.computeMessageSize(6, (MessageLite)this.eventData_.get(m));
        this.memoizedSerializedSize = k;
      }
    }

    public final String getTileType()
    {
      Object localObject1 = this.tileType_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.tileType_ = str;
      }
    }

    public final int getTileVersion()
    {
      return this.tileVersion_;
    }

    public final long getTimestamp()
    {
      return this.timestamp_;
    }

    public final boolean hasConversationId()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean hasEventType()
    {
      if ((0x10 & this.bitField0_) == 16);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasTileType()
    {
      if ((0x4 & this.bitField0_) == 4);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasTileVersion()
    {
      if ((0x8 & this.bitField0_) == 8);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasTimestamp()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeBytes(1, getConversationIdBytes());
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeInt64(2, this.timestamp_);
      if ((0x4 & this.bitField0_) == 4)
        paramCodedOutputStream.writeBytes(3, getTileTypeBytes());
      if ((0x8 & this.bitField0_) == 8)
        paramCodedOutputStream.writeInt32(4, this.tileVersion_);
      if ((0x10 & this.bitField0_) == 16)
        paramCodedOutputStream.writeBytes(5, getEventTypeBytes());
      for (int i = 0; i < this.eventData_.size(); i++)
        paramCodedOutputStream.writeMessage(6, (MessageLite)this.eventData_.get(i));
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Client.TileEvent, Builder>
      implements Client.TileEventOrBuilder
    {
      private int bitField0_;
      private Object conversationId_ = "";
      private List<Data.KeyValue> eventData_ = Collections.emptyList();
      private Object eventType_ = "";
      private Object tileType_ = "";
      private int tileVersion_;
      private long timestamp_;

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private void ensureEventDataIsMutable()
      {
        if ((0x20 & this.bitField0_) != 32)
        {
          this.eventData_ = new ArrayList(this.eventData_);
          this.bitField0_ = (0x20 | this.bitField0_);
        }
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 10:
            this.bitField0_ = (0x1 | this.bitField0_);
            this.conversationId_ = paramCodedInputStream.readBytes();
            break;
          case 16:
            this.bitField0_ = (0x2 | this.bitField0_);
            this.timestamp_ = paramCodedInputStream.readInt64();
            break;
          case 26:
            this.bitField0_ = (0x4 | this.bitField0_);
            this.tileType_ = paramCodedInputStream.readBytes();
            break;
          case 32:
            this.bitField0_ = (0x8 | this.bitField0_);
            this.tileVersion_ = paramCodedInputStream.readInt32();
            break;
          case 42:
            this.bitField0_ = (0x10 | this.bitField0_);
            this.eventType_ = paramCodedInputStream.readBytes();
            break;
          case 50:
          }
          Data.KeyValue.Builder localBuilder = Data.KeyValue.newBuilder();
          paramCodedInputStream.readMessage(localBuilder, paramExtensionRegistryLite);
          addEventData(localBuilder.buildPartial());
        }
      }

      public final Builder addAllEventData(Iterable<? extends Data.KeyValue> paramIterable)
      {
        ensureEventDataIsMutable();
        GeneratedMessageLite.Builder.addAll(paramIterable, this.eventData_);
        return this;
      }

      public final Builder addEventData(int paramInt, Data.KeyValue.Builder paramBuilder)
      {
        ensureEventDataIsMutable();
        this.eventData_.add(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder addEventData(int paramInt, Data.KeyValue paramKeyValue)
      {
        if (paramKeyValue == null)
          throw new NullPointerException();
        ensureEventDataIsMutable();
        this.eventData_.add(paramInt, paramKeyValue);
        return this;
      }

      public final Builder addEventData(Data.KeyValue.Builder paramBuilder)
      {
        ensureEventDataIsMutable();
        this.eventData_.add(paramBuilder.build());
        return this;
      }

      public final Builder addEventData(Data.KeyValue paramKeyValue)
      {
        if (paramKeyValue == null)
          throw new NullPointerException();
        ensureEventDataIsMutable();
        this.eventData_.add(paramKeyValue);
        return this;
      }

      public final Client.TileEvent build()
      {
        Client.TileEvent localTileEvent = buildPartial();
        if (!localTileEvent.isInitialized())
          throw new UninitializedMessageException();
        return localTileEvent;
      }

      public final Client.TileEvent buildPartial()
      {
        Client.TileEvent localTileEvent = new Client.TileEvent(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Client.TileEvent.access$7402(localTileEvent, this.conversationId_);
        if ((i & 0x2) == 2)
          k |= 2;
        Client.TileEvent.access$7502(localTileEvent, this.timestamp_);
        if ((i & 0x4) == 4)
          k |= 4;
        Client.TileEvent.access$7602(localTileEvent, this.tileType_);
        if ((i & 0x8) == 8)
          k |= 8;
        Client.TileEvent.access$7702(localTileEvent, this.tileVersion_);
        if ((i & 0x10) == 16)
          k |= 16;
        Client.TileEvent.access$7802(localTileEvent, this.eventType_);
        if ((0x20 & this.bitField0_) == 32)
        {
          this.eventData_ = Collections.unmodifiableList(this.eventData_);
          this.bitField0_ = (0xFFFFFFDF & this.bitField0_);
        }
        Client.TileEvent.access$7902(localTileEvent, this.eventData_);
        Client.TileEvent.access$8002(localTileEvent, k);
        return localTileEvent;
      }

      public final Builder clear()
      {
        super.clear();
        this.conversationId_ = "";
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.timestamp_ = 0L;
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.tileType_ = "";
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.tileVersion_ = 0;
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        this.eventType_ = "";
        this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        this.eventData_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFDF & this.bitField0_);
        return this;
      }

      public final Builder clearConversationId()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.conversationId_ = Client.TileEvent.getDefaultInstance().getConversationId();
        return this;
      }

      public final Builder clearEventData()
      {
        this.eventData_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFDF & this.bitField0_);
        return this;
      }

      public final Builder clearEventType()
      {
        this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        this.eventType_ = Client.TileEvent.getDefaultInstance().getEventType();
        return this;
      }

      public final Builder clearTileType()
      {
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.tileType_ = Client.TileEvent.getDefaultInstance().getTileType();
        return this;
      }

      public final Builder clearTileVersion()
      {
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        this.tileVersion_ = 0;
        return this;
      }

      public final Builder clearTimestamp()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.timestamp_ = 0L;
        return this;
      }

      public final String getConversationId()
      {
        Object localObject = this.conversationId_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.conversationId_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final Client.TileEvent getDefaultInstanceForType()
      {
        return Client.TileEvent.getDefaultInstance();
      }

      public final Data.KeyValue getEventData(int paramInt)
      {
        return (Data.KeyValue)this.eventData_.get(paramInt);
      }

      public final int getEventDataCount()
      {
        return this.eventData_.size();
      }

      public final List<Data.KeyValue> getEventDataList()
      {
        return Collections.unmodifiableList(this.eventData_);
      }

      public final String getEventType()
      {
        Object localObject = this.eventType_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.eventType_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final String getTileType()
      {
        Object localObject = this.tileType_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.tileType_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final int getTileVersion()
      {
        return this.tileVersion_;
      }

      public final long getTimestamp()
      {
        return this.timestamp_;
      }

      public final boolean hasConversationId()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean hasEventType()
      {
        if ((0x10 & this.bitField0_) == 16);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasTileType()
      {
        if ((0x4 & this.bitField0_) == 4);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasTileVersion()
      {
        if ((0x8 & this.bitField0_) == 8);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasTimestamp()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Client.TileEvent paramTileEvent)
      {
        if (paramTileEvent == Client.TileEvent.getDefaultInstance());
        while (true)
        {
          return this;
          if (paramTileEvent.hasConversationId())
            setConversationId(paramTileEvent.getConversationId());
          if (paramTileEvent.hasTimestamp())
            setTimestamp(paramTileEvent.getTimestamp());
          if (paramTileEvent.hasTileType())
            setTileType(paramTileEvent.getTileType());
          if (paramTileEvent.hasTileVersion())
            setTileVersion(paramTileEvent.getTileVersion());
          if (paramTileEvent.hasEventType())
            setEventType(paramTileEvent.getEventType());
          if (!paramTileEvent.eventData_.isEmpty())
            if (this.eventData_.isEmpty())
            {
              this.eventData_ = paramTileEvent.eventData_;
              this.bitField0_ = (0xFFFFFFDF & this.bitField0_);
            }
            else
            {
              ensureEventDataIsMutable();
              this.eventData_.addAll(paramTileEvent.eventData_);
            }
        }
      }

      public final Builder setConversationId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x1 | this.bitField0_);
        this.conversationId_ = paramString;
        return this;
      }

      public final Builder setEventData(int paramInt, Data.KeyValue.Builder paramBuilder)
      {
        ensureEventDataIsMutable();
        this.eventData_.set(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder setEventData(int paramInt, Data.KeyValue paramKeyValue)
      {
        if (paramKeyValue == null)
          throw new NullPointerException();
        ensureEventDataIsMutable();
        this.eventData_.set(paramInt, paramKeyValue);
        return this;
      }

      public final Builder setEventType(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x10 | this.bitField0_);
        this.eventType_ = paramString;
        return this;
      }

      public final Builder setTileType(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x4 | this.bitField0_);
        this.tileType_ = paramString;
        return this;
      }

      public final Builder setTileVersion(int paramInt)
      {
        this.bitField0_ = (0x8 | this.bitField0_);
        this.tileVersion_ = paramInt;
        return this;
      }

      public final Builder setTimestamp(long paramLong)
      {
        this.bitField0_ = (0x2 | this.bitField0_);
        this.timestamp_ = paramLong;
        return this;
      }
    }
  }

  public static abstract interface TileEventOrBuilder extends MessageLiteOrBuilder
  {
    public abstract String getConversationId();

    public abstract Data.KeyValue getEventData(int paramInt);

    public abstract int getEventDataCount();

    public abstract List<Data.KeyValue> getEventDataList();

    public abstract String getEventType();

    public abstract String getTileType();

    public abstract int getTileVersion();

    public abstract long getTimestamp();

    public abstract boolean hasConversationId();

    public abstract boolean hasEventType();

    public abstract boolean hasTileType();

    public abstract boolean hasTileVersion();

    public abstract boolean hasTimestamp();
  }

  public static final class TileEventRequest extends GeneratedMessageLite
    implements Client.TileEventRequestOrBuilder
  {
    private static final TileEventRequest defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private Object conversationId_;
    private List<Data.KeyValue> eventData_;
    private Object eventType_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private Data.StubbyInfo stubbyInfo_;
    private Object tileType_;
    private int tileVersion_;

    static
    {
      TileEventRequest localTileEventRequest = new TileEventRequest();
      defaultInstance = localTileEventRequest;
      localTileEventRequest.conversationId_ = "";
      localTileEventRequest.tileType_ = "";
      localTileEventRequest.tileVersion_ = 0;
      localTileEventRequest.eventType_ = "";
      localTileEventRequest.eventData_ = Collections.emptyList();
      localTileEventRequest.stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
    }

    private TileEventRequest()
    {
    }

    private TileEventRequest(Builder paramBuilder)
    {
      super();
    }

    private ByteString getConversationIdBytes()
    {
      Object localObject = this.conversationId_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.conversationId_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static TileEventRequest getDefaultInstance()
    {
      return defaultInstance;
    }

    private ByteString getEventTypeBytes()
    {
      Object localObject = this.eventType_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.eventType_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    private ByteString getTileTypeBytes()
    {
      Object localObject = this.tileType_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.tileType_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static Builder newBuilder()
    {
      return Builder.access$5500();
    }

    public static Builder newBuilder(TileEventRequest paramTileEventRequest)
    {
      return Builder.access$5500().mergeFrom(paramTileEventRequest);
    }

    public final String getConversationId()
    {
      Object localObject1 = this.conversationId_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.conversationId_ = str;
      }
    }

    public final TileEventRequest getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final Data.KeyValue getEventData(int paramInt)
    {
      return (Data.KeyValue)this.eventData_.get(paramInt);
    }

    public final int getEventDataCount()
    {
      return this.eventData_.size();
    }

    public final List<Data.KeyValue> getEventDataList()
    {
      return this.eventData_;
    }

    public final Data.KeyValueOrBuilder getEventDataOrBuilder(int paramInt)
    {
      return (Data.KeyValueOrBuilder)this.eventData_.get(paramInt);
    }

    public final List<? extends Data.KeyValueOrBuilder> getEventDataOrBuilderList()
    {
      return this.eventData_;
    }

    public final String getEventType()
    {
      Object localObject1 = this.eventType_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.eventType_ = str;
      }
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int n = i; ; n = k)
      {
        return n;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeBytesSize(1, getConversationIdBytes());
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeBytesSize(2, getTileTypeBytes());
        if ((0x4 & this.bitField0_) == 4)
          k += CodedOutputStream.computeInt32Size(3, this.tileVersion_);
        if ((0x8 & this.bitField0_) == 8)
          k += CodedOutputStream.computeBytesSize(4, getEventTypeBytes());
        for (int m = 0; m < this.eventData_.size(); m++)
          k += CodedOutputStream.computeMessageSize(5, (MessageLite)this.eventData_.get(m));
        if ((0x10 & this.bitField0_) == 16)
          k += CodedOutputStream.computeMessageSize(6, this.stubbyInfo_);
        this.memoizedSerializedSize = k;
      }
    }

    public final Data.StubbyInfo getStubbyInfo()
    {
      return this.stubbyInfo_;
    }

    public final String getTileType()
    {
      Object localObject1 = this.tileType_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.tileType_ = str;
      }
    }

    public final int getTileVersion()
    {
      return this.tileVersion_;
    }

    public final boolean hasConversationId()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean hasEventType()
    {
      if ((0x8 & this.bitField0_) == 8);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasStubbyInfo()
    {
      if ((0x10 & this.bitField0_) == 16);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasTileType()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasTileVersion()
    {
      if ((0x4 & this.bitField0_) == 4);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeBytes(1, getConversationIdBytes());
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeBytes(2, getTileTypeBytes());
      if ((0x4 & this.bitField0_) == 4)
        paramCodedOutputStream.writeInt32(3, this.tileVersion_);
      if ((0x8 & this.bitField0_) == 8)
        paramCodedOutputStream.writeBytes(4, getEventTypeBytes());
      for (int i = 0; i < this.eventData_.size(); i++)
        paramCodedOutputStream.writeMessage(5, (MessageLite)this.eventData_.get(i));
      if ((0x10 & this.bitField0_) == 16)
        paramCodedOutputStream.writeMessage(6, this.stubbyInfo_);
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Client.TileEventRequest, Builder>
      implements Client.TileEventRequestOrBuilder
    {
      private int bitField0_;
      private Object conversationId_ = "";
      private List<Data.KeyValue> eventData_ = Collections.emptyList();
      private Object eventType_ = "";
      private Data.StubbyInfo stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
      private Object tileType_ = "";
      private int tileVersion_;

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private void ensureEventDataIsMutable()
      {
        if ((0x10 & this.bitField0_) != 16)
        {
          this.eventData_ = new ArrayList(this.eventData_);
          this.bitField0_ = (0x10 | this.bitField0_);
        }
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 10:
            this.bitField0_ = (0x1 | this.bitField0_);
            this.conversationId_ = paramCodedInputStream.readBytes();
            break;
          case 18:
            this.bitField0_ = (0x2 | this.bitField0_);
            this.tileType_ = paramCodedInputStream.readBytes();
            break;
          case 24:
            this.bitField0_ = (0x4 | this.bitField0_);
            this.tileVersion_ = paramCodedInputStream.readInt32();
            break;
          case 34:
            this.bitField0_ = (0x8 | this.bitField0_);
            this.eventType_ = paramCodedInputStream.readBytes();
            break;
          case 42:
            Data.KeyValue.Builder localBuilder1 = Data.KeyValue.newBuilder();
            paramCodedInputStream.readMessage(localBuilder1, paramExtensionRegistryLite);
            addEventData(localBuilder1.buildPartial());
            break;
          case 50:
          }
          Data.StubbyInfo.Builder localBuilder = Data.StubbyInfo.newBuilder();
          if (hasStubbyInfo())
            localBuilder.mergeFrom(getStubbyInfo());
          paramCodedInputStream.readMessage(localBuilder, paramExtensionRegistryLite);
          setStubbyInfo(localBuilder.buildPartial());
        }
      }

      public final Builder addAllEventData(Iterable<? extends Data.KeyValue> paramIterable)
      {
        ensureEventDataIsMutable();
        GeneratedMessageLite.Builder.addAll(paramIterable, this.eventData_);
        return this;
      }

      public final Builder addEventData(int paramInt, Data.KeyValue.Builder paramBuilder)
      {
        ensureEventDataIsMutable();
        this.eventData_.add(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder addEventData(int paramInt, Data.KeyValue paramKeyValue)
      {
        if (paramKeyValue == null)
          throw new NullPointerException();
        ensureEventDataIsMutable();
        this.eventData_.add(paramInt, paramKeyValue);
        return this;
      }

      public final Builder addEventData(Data.KeyValue.Builder paramBuilder)
      {
        ensureEventDataIsMutable();
        this.eventData_.add(paramBuilder.build());
        return this;
      }

      public final Builder addEventData(Data.KeyValue paramKeyValue)
      {
        if (paramKeyValue == null)
          throw new NullPointerException();
        ensureEventDataIsMutable();
        this.eventData_.add(paramKeyValue);
        return this;
      }

      public final Client.TileEventRequest build()
      {
        Client.TileEventRequest localTileEventRequest = buildPartial();
        if (!localTileEventRequest.isInitialized())
          throw new UninitializedMessageException();
        return localTileEventRequest;
      }

      public final Client.TileEventRequest buildPartial()
      {
        Client.TileEventRequest localTileEventRequest = new Client.TileEventRequest(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Client.TileEventRequest.access$5702(localTileEventRequest, this.conversationId_);
        if ((i & 0x2) == 2)
          k |= 2;
        Client.TileEventRequest.access$5802(localTileEventRequest, this.tileType_);
        if ((i & 0x4) == 4)
          k |= 4;
        Client.TileEventRequest.access$5902(localTileEventRequest, this.tileVersion_);
        if ((i & 0x8) == 8)
          k |= 8;
        Client.TileEventRequest.access$6002(localTileEventRequest, this.eventType_);
        if ((0x10 & this.bitField0_) == 16)
        {
          this.eventData_ = Collections.unmodifiableList(this.eventData_);
          this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        }
        Client.TileEventRequest.access$6102(localTileEventRequest, this.eventData_);
        if ((i & 0x20) == 32)
          k |= 16;
        Client.TileEventRequest.access$6202(localTileEventRequest, this.stubbyInfo_);
        Client.TileEventRequest.access$6302(localTileEventRequest, k);
        return localTileEventRequest;
      }

      public final Builder clear()
      {
        super.clear();
        this.conversationId_ = "";
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.tileType_ = "";
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.tileVersion_ = 0;
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.eventType_ = "";
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        this.eventData_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        this.stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFDF & this.bitField0_);
        return this;
      }

      public final Builder clearConversationId()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.conversationId_ = Client.TileEventRequest.getDefaultInstance().getConversationId();
        return this;
      }

      public final Builder clearEventData()
      {
        this.eventData_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        return this;
      }

      public final Builder clearEventType()
      {
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        this.eventType_ = Client.TileEventRequest.getDefaultInstance().getEventType();
        return this;
      }

      public final Builder clearStubbyInfo()
      {
        this.stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFDF & this.bitField0_);
        return this;
      }

      public final Builder clearTileType()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.tileType_ = Client.TileEventRequest.getDefaultInstance().getTileType();
        return this;
      }

      public final Builder clearTileVersion()
      {
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.tileVersion_ = 0;
        return this;
      }

      public final String getConversationId()
      {
        Object localObject = this.conversationId_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.conversationId_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final Client.TileEventRequest getDefaultInstanceForType()
      {
        return Client.TileEventRequest.getDefaultInstance();
      }

      public final Data.KeyValue getEventData(int paramInt)
      {
        return (Data.KeyValue)this.eventData_.get(paramInt);
      }

      public final int getEventDataCount()
      {
        return this.eventData_.size();
      }

      public final List<Data.KeyValue> getEventDataList()
      {
        return Collections.unmodifiableList(this.eventData_);
      }

      public final String getEventType()
      {
        Object localObject = this.eventType_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.eventType_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final Data.StubbyInfo getStubbyInfo()
      {
        return this.stubbyInfo_;
      }

      public final String getTileType()
      {
        Object localObject = this.tileType_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.tileType_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final int getTileVersion()
      {
        return this.tileVersion_;
      }

      public final boolean hasConversationId()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean hasEventType()
      {
        if ((0x8 & this.bitField0_) == 8);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasStubbyInfo()
      {
        if ((0x20 & this.bitField0_) == 32);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasTileType()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasTileVersion()
      {
        if ((0x4 & this.bitField0_) == 4);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Client.TileEventRequest paramTileEventRequest)
      {
        if (paramTileEventRequest == Client.TileEventRequest.getDefaultInstance())
          return this;
        if (paramTileEventRequest.hasConversationId())
          setConversationId(paramTileEventRequest.getConversationId());
        if (paramTileEventRequest.hasTileType())
          setTileType(paramTileEventRequest.getTileType());
        if (paramTileEventRequest.hasTileVersion())
          setTileVersion(paramTileEventRequest.getTileVersion());
        if (paramTileEventRequest.hasEventType())
          setEventType(paramTileEventRequest.getEventType());
        label116: Data.StubbyInfo localStubbyInfo;
        if (!paramTileEventRequest.eventData_.isEmpty())
        {
          if (this.eventData_.isEmpty())
          {
            this.eventData_ = paramTileEventRequest.eventData_;
            this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
          }
        }
        else
        {
          if (!paramTileEventRequest.hasStubbyInfo())
            break label201;
          localStubbyInfo = paramTileEventRequest.getStubbyInfo();
          if (((0x20 & this.bitField0_) != 32) || (this.stubbyInfo_ == Data.StubbyInfo.getDefaultInstance()))
            break label203;
        }
        label201: label203: for (this.stubbyInfo_ = Data.StubbyInfo.newBuilder(this.stubbyInfo_).mergeFrom(localStubbyInfo).buildPartial(); ; this.stubbyInfo_ = localStubbyInfo)
        {
          this.bitField0_ = (0x20 | this.bitField0_);
          break;
          ensureEventDataIsMutable();
          this.eventData_.addAll(paramTileEventRequest.eventData_);
          break label116;
          break;
        }
      }

      public final Builder setConversationId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x1 | this.bitField0_);
        this.conversationId_ = paramString;
        return this;
      }

      public final Builder setEventData(int paramInt, Data.KeyValue.Builder paramBuilder)
      {
        ensureEventDataIsMutable();
        this.eventData_.set(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder setEventData(int paramInt, Data.KeyValue paramKeyValue)
      {
        if (paramKeyValue == null)
          throw new NullPointerException();
        ensureEventDataIsMutable();
        this.eventData_.set(paramInt, paramKeyValue);
        return this;
      }

      public final Builder setEventType(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x8 | this.bitField0_);
        this.eventType_ = paramString;
        return this;
      }

      public final Builder setStubbyInfo(Data.StubbyInfo.Builder paramBuilder)
      {
        this.stubbyInfo_ = paramBuilder.build();
        this.bitField0_ = (0x20 | this.bitField0_);
        return this;
      }

      public final Builder setStubbyInfo(Data.StubbyInfo paramStubbyInfo)
      {
        if (paramStubbyInfo == null)
          throw new NullPointerException();
        this.stubbyInfo_ = paramStubbyInfo;
        this.bitField0_ = (0x20 | this.bitField0_);
        return this;
      }

      public final Builder setTileType(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x2 | this.bitField0_);
        this.tileType_ = paramString;
        return this;
      }

      public final Builder setTileVersion(int paramInt)
      {
        this.bitField0_ = (0x4 | this.bitField0_);
        this.tileVersion_ = paramInt;
        return this;
      }
    }
  }

  public static abstract interface TileEventRequestOrBuilder extends MessageLiteOrBuilder
  {
    public abstract String getConversationId();

    public abstract Data.KeyValue getEventData(int paramInt);

    public abstract int getEventDataCount();

    public abstract List<Data.KeyValue> getEventDataList();

    public abstract String getEventType();

    public abstract Data.StubbyInfo getStubbyInfo();

    public abstract String getTileType();

    public abstract int getTileVersion();

    public abstract boolean hasConversationId();

    public abstract boolean hasEventType();

    public abstract boolean hasStubbyInfo();

    public abstract boolean hasTileType();

    public abstract boolean hasTileVersion();
  }

  public static final class TileEventResponse extends GeneratedMessageLite
    implements Client.TileEventResponseOrBuilder
  {
    private static final TileEventResponse defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private Object requestError_;
    private Data.ResponseStatus status_;
    private long timestamp_;

    static
    {
      TileEventResponse localTileEventResponse = new TileEventResponse();
      defaultInstance = localTileEventResponse;
      localTileEventResponse.status_ = Data.ResponseStatus.OK;
      localTileEventResponse.requestError_ = "";
      localTileEventResponse.timestamp_ = 0L;
    }

    private TileEventResponse()
    {
    }

    private TileEventResponse(Builder paramBuilder)
    {
      super();
    }

    public static TileEventResponse getDefaultInstance()
    {
      return defaultInstance;
    }

    private ByteString getRequestErrorBytes()
    {
      Object localObject = this.requestError_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.requestError_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static Builder newBuilder()
    {
      return Builder.access$6500();
    }

    public static Builder newBuilder(TileEventResponse paramTileEventResponse)
    {
      return Builder.access$6500().mergeFrom(paramTileEventResponse);
    }

    public final TileEventResponse getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final String getRequestError()
    {
      Object localObject1 = this.requestError_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.requestError_ = str;
      }
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeEnumSize(1, this.status_.getNumber());
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeBytesSize(2, getRequestErrorBytes());
        if ((0x4 & this.bitField0_) == 4)
          k += CodedOutputStream.computeInt64Size(3, this.timestamp_);
        this.memoizedSerializedSize = k;
      }
    }

    public final Data.ResponseStatus getStatus()
    {
      return this.status_;
    }

    public final long getTimestamp()
    {
      return this.timestamp_;
    }

    public final boolean hasRequestError()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasStatus()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean hasTimestamp()
    {
      if ((0x4 & this.bitField0_) == 4);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeEnum(1, this.status_.getNumber());
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeBytes(2, getRequestErrorBytes());
      if ((0x4 & this.bitField0_) == 4)
        paramCodedOutputStream.writeInt64(3, this.timestamp_);
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Client.TileEventResponse, Builder>
      implements Client.TileEventResponseOrBuilder
    {
      private int bitField0_;
      private Object requestError_ = "";
      private Data.ResponseStatus status_ = Data.ResponseStatus.OK;
      private long timestamp_;

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 8:
            Data.ResponseStatus localResponseStatus = Data.ResponseStatus.valueOf(paramCodedInputStream.readEnum());
            if (localResponseStatus == null)
              continue;
            this.bitField0_ = (0x1 | this.bitField0_);
            this.status_ = localResponseStatus;
            break;
          case 18:
            this.bitField0_ = (0x2 | this.bitField0_);
            this.requestError_ = paramCodedInputStream.readBytes();
            break;
          case 24:
          }
          this.bitField0_ = (0x4 | this.bitField0_);
          this.timestamp_ = paramCodedInputStream.readInt64();
        }
      }

      public final Client.TileEventResponse build()
      {
        Client.TileEventResponse localTileEventResponse = buildPartial();
        if (!localTileEventResponse.isInitialized())
          throw new UninitializedMessageException();
        return localTileEventResponse;
      }

      public final Client.TileEventResponse buildPartial()
      {
        Client.TileEventResponse localTileEventResponse = new Client.TileEventResponse(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Client.TileEventResponse.access$6702(localTileEventResponse, this.status_);
        if ((i & 0x2) == 2)
          k |= 2;
        Client.TileEventResponse.access$6802(localTileEventResponse, this.requestError_);
        if ((i & 0x4) == 4)
          k |= 4;
        Client.TileEventResponse.access$6902(localTileEventResponse, this.timestamp_);
        Client.TileEventResponse.access$7002(localTileEventResponse, k);
        return localTileEventResponse;
      }

      public final Builder clear()
      {
        super.clear();
        this.status_ = Data.ResponseStatus.OK;
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.requestError_ = "";
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.timestamp_ = 0L;
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        return this;
      }

      public final Builder clearRequestError()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.requestError_ = Client.TileEventResponse.getDefaultInstance().getRequestError();
        return this;
      }

      public final Builder clearStatus()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.status_ = Data.ResponseStatus.OK;
        return this;
      }

      public final Builder clearTimestamp()
      {
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.timestamp_ = 0L;
        return this;
      }

      public final Client.TileEventResponse getDefaultInstanceForType()
      {
        return Client.TileEventResponse.getDefaultInstance();
      }

      public final String getRequestError()
      {
        Object localObject = this.requestError_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.requestError_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final Data.ResponseStatus getStatus()
      {
        return this.status_;
      }

      public final long getTimestamp()
      {
        return this.timestamp_;
      }

      public final boolean hasRequestError()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasStatus()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean hasTimestamp()
      {
        if ((0x4 & this.bitField0_) == 4);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Client.TileEventResponse paramTileEventResponse)
      {
        if (paramTileEventResponse == Client.TileEventResponse.getDefaultInstance());
        while (true)
        {
          return this;
          if (paramTileEventResponse.hasStatus())
            setStatus(paramTileEventResponse.getStatus());
          if (paramTileEventResponse.hasRequestError())
            setRequestError(paramTileEventResponse.getRequestError());
          if (paramTileEventResponse.hasTimestamp())
            setTimestamp(paramTileEventResponse.getTimestamp());
        }
      }

      public final Builder setRequestError(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x2 | this.bitField0_);
        this.requestError_ = paramString;
        return this;
      }

      public final Builder setStatus(Data.ResponseStatus paramResponseStatus)
      {
        if (paramResponseStatus == null)
          throw new NullPointerException();
        this.bitField0_ = (0x1 | this.bitField0_);
        this.status_ = paramResponseStatus;
        return this;
      }

      public final Builder setTimestamp(long paramLong)
      {
        this.bitField0_ = (0x4 | this.bitField0_);
        this.timestamp_ = paramLong;
        return this;
      }
    }
  }

  public static abstract interface TileEventResponseOrBuilder extends MessageLiteOrBuilder
  {
    public abstract String getRequestError();

    public abstract Data.ResponseStatus getStatus();

    public abstract long getTimestamp();

    public abstract boolean hasRequestError();

    public abstract boolean hasStatus();

    public abstract boolean hasTimestamp();
  }

  public static final class Typing extends GeneratedMessageLite
    implements Client.TypingOrBuilder
  {
    private static final Typing defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private Object conversationId_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private Object senderId_;
    private long timestamp_;
    private Type type_;

    static
    {
      Typing localTyping = new Typing();
      defaultInstance = localTyping;
      localTyping.type_ = Type.UNKNOWN;
      localTyping.conversationId_ = "";
      localTyping.senderId_ = "";
      localTyping.timestamp_ = 0L;
    }

    private Typing()
    {
    }

    private Typing(Builder paramBuilder)
    {
      super();
    }

    private ByteString getConversationIdBytes()
    {
      Object localObject = this.conversationId_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.conversationId_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static Typing getDefaultInstance()
    {
      return defaultInstance;
    }

    private ByteString getSenderIdBytes()
    {
      Object localObject = this.senderId_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.senderId_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static Builder newBuilder()
    {
      return Builder.access$12200();
    }

    public static Builder newBuilder(Typing paramTyping)
    {
      return Builder.access$12200().mergeFrom(paramTyping);
    }

    public final String getConversationId()
    {
      Object localObject1 = this.conversationId_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.conversationId_ = str;
      }
    }

    public final Typing getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final String getSenderId()
    {
      Object localObject1 = this.senderId_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.senderId_ = str;
      }
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeEnumSize(1, this.type_.getNumber());
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeBytesSize(2, getConversationIdBytes());
        if ((0x4 & this.bitField0_) == 4)
          k += CodedOutputStream.computeBytesSize(3, getSenderIdBytes());
        if ((0x8 & this.bitField0_) == 8)
          k += CodedOutputStream.computeInt64Size(4, this.timestamp_);
        this.memoizedSerializedSize = k;
      }
    }

    public final long getTimestamp()
    {
      return this.timestamp_;
    }

    public final Type getType()
    {
      return this.type_;
    }

    public final boolean hasConversationId()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasSenderId()
    {
      if ((0x4 & this.bitField0_) == 4);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasTimestamp()
    {
      if ((0x8 & this.bitField0_) == 8);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasType()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeEnum(1, this.type_.getNumber());
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeBytes(2, getConversationIdBytes());
      if ((0x4 & this.bitField0_) == 4)
        paramCodedOutputStream.writeBytes(3, getSenderIdBytes());
      if ((0x8 & this.bitField0_) == 8)
        paramCodedOutputStream.writeInt64(4, this.timestamp_);
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Client.Typing, Builder>
      implements Client.TypingOrBuilder
    {
      private int bitField0_;
      private Object conversationId_ = "";
      private Object senderId_ = "";
      private long timestamp_;
      private Client.Typing.Type type_ = Client.Typing.Type.UNKNOWN;

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 8:
            Client.Typing.Type localType = Client.Typing.Type.valueOf(paramCodedInputStream.readEnum());
            if (localType == null)
              continue;
            this.bitField0_ = (0x1 | this.bitField0_);
            this.type_ = localType;
            break;
          case 18:
            this.bitField0_ = (0x2 | this.bitField0_);
            this.conversationId_ = paramCodedInputStream.readBytes();
            break;
          case 26:
            this.bitField0_ = (0x4 | this.bitField0_);
            this.senderId_ = paramCodedInputStream.readBytes();
            break;
          case 32:
          }
          this.bitField0_ = (0x8 | this.bitField0_);
          this.timestamp_ = paramCodedInputStream.readInt64();
        }
      }

      public final Client.Typing build()
      {
        Client.Typing localTyping = buildPartial();
        if (!localTyping.isInitialized())
          throw new UninitializedMessageException();
        return localTyping;
      }

      public final Client.Typing buildPartial()
      {
        Client.Typing localTyping = new Client.Typing(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Client.Typing.access$12402(localTyping, this.type_);
        if ((i & 0x2) == 2)
          k |= 2;
        Client.Typing.access$12502(localTyping, this.conversationId_);
        if ((i & 0x4) == 4)
          k |= 4;
        Client.Typing.access$12602(localTyping, this.senderId_);
        if ((i & 0x8) == 8)
          k |= 8;
        Client.Typing.access$12702(localTyping, this.timestamp_);
        Client.Typing.access$12802(localTyping, k);
        return localTyping;
      }

      public final Builder clear()
      {
        super.clear();
        this.type_ = Client.Typing.Type.UNKNOWN;
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.conversationId_ = "";
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.senderId_ = "";
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.timestamp_ = 0L;
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        return this;
      }

      public final Builder clearConversationId()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.conversationId_ = Client.Typing.getDefaultInstance().getConversationId();
        return this;
      }

      public final Builder clearSenderId()
      {
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.senderId_ = Client.Typing.getDefaultInstance().getSenderId();
        return this;
      }

      public final Builder clearTimestamp()
      {
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        this.timestamp_ = 0L;
        return this;
      }

      public final Builder clearType()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.type_ = Client.Typing.Type.UNKNOWN;
        return this;
      }

      public final String getConversationId()
      {
        Object localObject = this.conversationId_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.conversationId_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final Client.Typing getDefaultInstanceForType()
      {
        return Client.Typing.getDefaultInstance();
      }

      public final String getSenderId()
      {
        Object localObject = this.senderId_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.senderId_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final long getTimestamp()
      {
        return this.timestamp_;
      }

      public final Client.Typing.Type getType()
      {
        return this.type_;
      }

      public final boolean hasConversationId()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasSenderId()
      {
        if ((0x4 & this.bitField0_) == 4);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasTimestamp()
      {
        if ((0x8 & this.bitField0_) == 8);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasType()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Client.Typing paramTyping)
      {
        if (paramTyping == Client.Typing.getDefaultInstance());
        while (true)
        {
          return this;
          if (paramTyping.hasType())
            setType(paramTyping.getType());
          if (paramTyping.hasConversationId())
            setConversationId(paramTyping.getConversationId());
          if (paramTyping.hasSenderId())
            setSenderId(paramTyping.getSenderId());
          if (paramTyping.hasTimestamp())
            setTimestamp(paramTyping.getTimestamp());
        }
      }

      public final Builder setConversationId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x2 | this.bitField0_);
        this.conversationId_ = paramString;
        return this;
      }

      public final Builder setSenderId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x4 | this.bitField0_);
        this.senderId_ = paramString;
        return this;
      }

      public final Builder setTimestamp(long paramLong)
      {
        this.bitField0_ = (0x8 | this.bitField0_);
        this.timestamp_ = paramLong;
        return this;
      }

      public final Builder setType(Client.Typing.Type paramType)
      {
        if (paramType == null)
          throw new NullPointerException();
        this.bitField0_ = (0x1 | this.bitField0_);
        this.type_ = paramType;
        return this;
      }
    }

    public static enum Type
      implements Internal.EnumLite
    {
      private static Internal.EnumLiteMap<Type> internalValueMap = new Internal.EnumLiteMap()
      {
      };
      private final int value;

      static
      {
        START = new Type("START", 1, 1);
        PAUSE = new Type("PAUSE", 2, 2);
        CLEAR = new Type("CLEAR", 3, 3);
        Type[] arrayOfType = new Type[4];
        arrayOfType[0] = UNKNOWN;
        arrayOfType[1] = START;
        arrayOfType[2] = PAUSE;
        arrayOfType[3] = CLEAR;
      }

      private Type(int paramInt1, int paramInt2)
      {
        this.value = paramInt1;
      }

      public static Type valueOf(int paramInt)
      {
        Type localType;
        switch (paramInt)
        {
        default:
          localType = null;
        case 0:
        case 1:
        case 2:
        case 3:
        }
        while (true)
        {
          return localType;
          localType = UNKNOWN;
          continue;
          localType = START;
          continue;
          localType = PAUSE;
          continue;
          localType = CLEAR;
        }
      }

      public final int getNumber()
      {
        return this.value;
      }
    }
  }

  public static final class TypingNotification extends GeneratedMessageLite
    implements Client.TypingNotificationOrBuilder
  {
    private static final TypingNotification defaultInstance = new TypingNotification();
    private static final long serialVersionUID;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;

    private TypingNotification()
    {
    }

    private TypingNotification(Builder paramBuilder)
    {
      super();
    }

    public static TypingNotification getDefaultInstance()
    {
      return defaultInstance;
    }

    public final TypingNotification getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      while (true)
      {
        return i;
        this.memoizedSerializedSize = 0;
        i = 0;
      }
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Client.TypingNotification, Builder>
      implements Client.TypingNotificationOrBuilder
    {
      private Client.TypingNotification buildPartial()
      {
        return new Client.TypingNotification(this, (byte)0);
      }

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        int i;
        do
        {
          i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
          case 0:
          }
        }
        while (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i));
        return this;
      }

      public final Builder clear()
      {
        super.clear();
        return this;
      }

      public final Client.TypingNotification getDefaultInstanceForType()
      {
        return Client.TypingNotification.getDefaultInstance();
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Client.TypingNotification paramTypingNotification)
      {
        if (paramTypingNotification == Client.TypingNotification.getDefaultInstance());
        return this;
      }
    }

    public static enum Type
      implements Internal.EnumLite
    {
      private static Internal.EnumLiteMap<Type> internalValueMap = new Internal.EnumLiteMap()
      {
      };
      private final int value = 1;

      static
      {
        Type[] arrayOfType = new Type[1];
        arrayOfType[0] = TEMP;
      }

      private Type(int paramInt1, int paramInt2)
      {
      }

      public static Type valueOf(int paramInt)
      {
        switch (paramInt)
        {
        default:
        case 1:
        }
        for (Type localType = null; ; localType = TEMP)
          return localType;
      }

      public final int getNumber()
      {
        return this.value;
      }
    }
  }

  public static abstract interface TypingNotificationOrBuilder extends MessageLiteOrBuilder
  {
  }

  public static abstract interface TypingOrBuilder extends MessageLiteOrBuilder
  {
    public abstract String getConversationId();

    public abstract String getSenderId();

    public abstract long getTimestamp();

    public abstract Client.Typing.Type getType();

    public abstract boolean hasConversationId();

    public abstract boolean hasSenderId();

    public abstract boolean hasTimestamp();

    public abstract boolean hasType();
  }

  public static final class TypingRequest extends GeneratedMessageLite
    implements Client.TypingRequestOrBuilder
  {
    private static final TypingRequest defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private Object conversationId_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private Data.StubbyInfo stubbyInfo_;
    private Client.Typing.Type type_;

    static
    {
      TypingRequest localTypingRequest = new TypingRequest();
      defaultInstance = localTypingRequest;
      localTypingRequest.type_ = Client.Typing.Type.UNKNOWN;
      localTypingRequest.conversationId_ = "";
      localTypingRequest.stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
    }

    private TypingRequest()
    {
    }

    private TypingRequest(Builder paramBuilder)
    {
      super();
    }

    private ByteString getConversationIdBytes()
    {
      Object localObject = this.conversationId_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.conversationId_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static TypingRequest getDefaultInstance()
    {
      return defaultInstance;
    }

    public static Builder newBuilder()
    {
      return Builder.access$11000();
    }

    public static Builder newBuilder(TypingRequest paramTypingRequest)
    {
      return Builder.access$11000().mergeFrom(paramTypingRequest);
    }

    public final String getConversationId()
    {
      Object localObject1 = this.conversationId_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.conversationId_ = str;
      }
    }

    public final TypingRequest getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeEnumSize(1, this.type_.getNumber());
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeBytesSize(2, getConversationIdBytes());
        if ((0x4 & this.bitField0_) == 4)
          k += CodedOutputStream.computeMessageSize(3, this.stubbyInfo_);
        this.memoizedSerializedSize = k;
      }
    }

    public final Data.StubbyInfo getStubbyInfo()
    {
      return this.stubbyInfo_;
    }

    public final Client.Typing.Type getType()
    {
      return this.type_;
    }

    public final boolean hasConversationId()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasStubbyInfo()
    {
      if ((0x4 & this.bitField0_) == 4);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasType()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeEnum(1, this.type_.getNumber());
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeBytes(2, getConversationIdBytes());
      if ((0x4 & this.bitField0_) == 4)
        paramCodedOutputStream.writeMessage(3, this.stubbyInfo_);
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Client.TypingRequest, Builder>
      implements Client.TypingRequestOrBuilder
    {
      private int bitField0_;
      private Object conversationId_ = "";
      private Data.StubbyInfo stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
      private Client.Typing.Type type_ = Client.Typing.Type.UNKNOWN;

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 8:
            Client.Typing.Type localType = Client.Typing.Type.valueOf(paramCodedInputStream.readEnum());
            if (localType == null)
              continue;
            this.bitField0_ = (0x1 | this.bitField0_);
            this.type_ = localType;
            break;
          case 18:
            this.bitField0_ = (0x2 | this.bitField0_);
            this.conversationId_ = paramCodedInputStream.readBytes();
            break;
          case 26:
          }
          Data.StubbyInfo.Builder localBuilder = Data.StubbyInfo.newBuilder();
          if (hasStubbyInfo())
            localBuilder.mergeFrom(getStubbyInfo());
          paramCodedInputStream.readMessage(localBuilder, paramExtensionRegistryLite);
          setStubbyInfo(localBuilder.buildPartial());
        }
      }

      public final Client.TypingRequest build()
      {
        Client.TypingRequest localTypingRequest = buildPartial();
        if (!localTypingRequest.isInitialized())
          throw new UninitializedMessageException();
        return localTypingRequest;
      }

      public final Client.TypingRequest buildPartial()
      {
        Client.TypingRequest localTypingRequest = new Client.TypingRequest(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Client.TypingRequest.access$11202(localTypingRequest, this.type_);
        if ((i & 0x2) == 2)
          k |= 2;
        Client.TypingRequest.access$11302(localTypingRequest, this.conversationId_);
        if ((i & 0x4) == 4)
          k |= 4;
        Client.TypingRequest.access$11402(localTypingRequest, this.stubbyInfo_);
        Client.TypingRequest.access$11502(localTypingRequest, k);
        return localTypingRequest;
      }

      public final Builder clear()
      {
        super.clear();
        this.type_ = Client.Typing.Type.UNKNOWN;
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.conversationId_ = "";
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        return this;
      }

      public final Builder clearConversationId()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.conversationId_ = Client.TypingRequest.getDefaultInstance().getConversationId();
        return this;
      }

      public final Builder clearStubbyInfo()
      {
        this.stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        return this;
      }

      public final Builder clearType()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.type_ = Client.Typing.Type.UNKNOWN;
        return this;
      }

      public final String getConversationId()
      {
        Object localObject = this.conversationId_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.conversationId_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final Client.TypingRequest getDefaultInstanceForType()
      {
        return Client.TypingRequest.getDefaultInstance();
      }

      public final Data.StubbyInfo getStubbyInfo()
      {
        return this.stubbyInfo_;
      }

      public final Client.Typing.Type getType()
      {
        return this.type_;
      }

      public final boolean hasConversationId()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasStubbyInfo()
      {
        if ((0x4 & this.bitField0_) == 4);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasType()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Client.TypingRequest paramTypingRequest)
      {
        if (paramTypingRequest == Client.TypingRequest.getDefaultInstance());
        do
        {
          return this;
          if (paramTypingRequest.hasType())
            setType(paramTypingRequest.getType());
          if (paramTypingRequest.hasConversationId())
            setConversationId(paramTypingRequest.getConversationId());
        }
        while (!paramTypingRequest.hasStubbyInfo());
        Data.StubbyInfo localStubbyInfo = paramTypingRequest.getStubbyInfo();
        if (((0x4 & this.bitField0_) == 4) && (this.stubbyInfo_ != Data.StubbyInfo.getDefaultInstance()));
        for (this.stubbyInfo_ = Data.StubbyInfo.newBuilder(this.stubbyInfo_).mergeFrom(localStubbyInfo).buildPartial(); ; this.stubbyInfo_ = localStubbyInfo)
        {
          this.bitField0_ = (0x4 | this.bitField0_);
          break;
        }
      }

      public final Builder setConversationId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x2 | this.bitField0_);
        this.conversationId_ = paramString;
        return this;
      }

      public final Builder setStubbyInfo(Data.StubbyInfo.Builder paramBuilder)
      {
        this.stubbyInfo_ = paramBuilder.build();
        this.bitField0_ = (0x4 | this.bitField0_);
        return this;
      }

      public final Builder setStubbyInfo(Data.StubbyInfo paramStubbyInfo)
      {
        if (paramStubbyInfo == null)
          throw new NullPointerException();
        this.stubbyInfo_ = paramStubbyInfo;
        this.bitField0_ = (0x4 | this.bitField0_);
        return this;
      }

      public final Builder setType(Client.Typing.Type paramType)
      {
        if (paramType == null)
          throw new NullPointerException();
        this.bitField0_ = (0x1 | this.bitField0_);
        this.type_ = paramType;
        return this;
      }
    }
  }

  public static abstract interface TypingRequestOrBuilder extends MessageLiteOrBuilder
  {
    public abstract String getConversationId();

    public abstract Data.StubbyInfo getStubbyInfo();

    public abstract Client.Typing.Type getType();

    public abstract boolean hasConversationId();

    public abstract boolean hasStubbyInfo();

    public abstract boolean hasType();
  }

  public static final class TypingResponse extends GeneratedMessageLite
    implements Client.TypingResponseOrBuilder
  {
    private static final TypingResponse defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private Data.ResponseStatus status_;

    static
    {
      TypingResponse localTypingResponse = new TypingResponse();
      defaultInstance = localTypingResponse;
      localTypingResponse.status_ = Data.ResponseStatus.OK;
    }

    private TypingResponse()
    {
    }

    private TypingResponse(Builder paramBuilder)
    {
      super();
    }

    public static TypingResponse getDefaultInstance()
    {
      return defaultInstance;
    }

    public static Builder newBuilder()
    {
      return Builder.access$11700();
    }

    public static Builder newBuilder(TypingResponse paramTypingResponse)
    {
      return Builder.access$11700().mergeFrom(paramTypingResponse);
    }

    public final TypingResponse getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeEnumSize(1, this.status_.getNumber());
        this.memoizedSerializedSize = k;
      }
    }

    public final Data.ResponseStatus getStatus()
    {
      return this.status_;
    }

    public final boolean hasStatus()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeEnum(1, this.status_.getNumber());
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Client.TypingResponse, Builder>
      implements Client.TypingResponseOrBuilder
    {
      private int bitField0_;
      private Data.ResponseStatus status_ = Data.ResponseStatus.OK;

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 8:
          }
          Data.ResponseStatus localResponseStatus = Data.ResponseStatus.valueOf(paramCodedInputStream.readEnum());
          if (localResponseStatus != null)
          {
            this.bitField0_ = (0x1 | this.bitField0_);
            this.status_ = localResponseStatus;
          }
        }
      }

      public final Client.TypingResponse build()
      {
        Client.TypingResponse localTypingResponse = buildPartial();
        if (!localTypingResponse.isInitialized())
          throw new UninitializedMessageException();
        return localTypingResponse;
      }

      public final Client.TypingResponse buildPartial()
      {
        Client.TypingResponse localTypingResponse = new Client.TypingResponse(this, (byte)0);
        int i = 0x1 & this.bitField0_;
        int j = 0;
        if (i == 1)
          j = 1;
        Client.TypingResponse.access$11902(localTypingResponse, this.status_);
        Client.TypingResponse.access$12002(localTypingResponse, j);
        return localTypingResponse;
      }

      public final Builder clear()
      {
        super.clear();
        this.status_ = Data.ResponseStatus.OK;
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        return this;
      }

      public final Builder clearStatus()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.status_ = Data.ResponseStatus.OK;
        return this;
      }

      public final Client.TypingResponse getDefaultInstanceForType()
      {
        return Client.TypingResponse.getDefaultInstance();
      }

      public final Data.ResponseStatus getStatus()
      {
        return this.status_;
      }

      public final boolean hasStatus()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Client.TypingResponse paramTypingResponse)
      {
        if (paramTypingResponse == Client.TypingResponse.getDefaultInstance());
        while (true)
        {
          return this;
          if (paramTypingResponse.hasStatus())
            setStatus(paramTypingResponse.getStatus());
        }
      }

      public final Builder setStatus(Data.ResponseStatus paramResponseStatus)
      {
        if (paramResponseStatus == null)
          throw new NullPointerException();
        this.bitField0_ = (0x1 | this.bitField0_);
        this.status_ = paramResponseStatus;
        return this;
      }
    }
  }

  public static abstract interface TypingResponseOrBuilder extends MessageLiteOrBuilder
  {
    public abstract Data.ResponseStatus getStatus();

    public abstract boolean hasStatus();
  }

  public static final class UserCreationRequest extends GeneratedMessageLite
    implements Client.UserCreationRequestOrBuilder
  {
    private static final UserCreationRequest defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private Client.DeviceRegistrationRequest deviceRegistration_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private Data.StubbyInfo stubbyInfo_;

    static
    {
      UserCreationRequest localUserCreationRequest = new UserCreationRequest();
      defaultInstance = localUserCreationRequest;
      localUserCreationRequest.deviceRegistration_ = Client.DeviceRegistrationRequest.getDefaultInstance();
      localUserCreationRequest.stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
    }

    private UserCreationRequest()
    {
    }

    private UserCreationRequest(Builder paramBuilder)
    {
      super();
    }

    public static UserCreationRequest getDefaultInstance()
    {
      return defaultInstance;
    }

    public static Builder newBuilder()
    {
      return Builder.access$39600();
    }

    public static Builder newBuilder(UserCreationRequest paramUserCreationRequest)
    {
      return Builder.access$39600().mergeFrom(paramUserCreationRequest);
    }

    public final UserCreationRequest getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final Client.DeviceRegistrationRequest getDeviceRegistration()
    {
      return this.deviceRegistration_;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeMessageSize(1, this.deviceRegistration_);
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeMessageSize(2, this.stubbyInfo_);
        this.memoizedSerializedSize = k;
      }
    }

    public final Data.StubbyInfo getStubbyInfo()
    {
      return this.stubbyInfo_;
    }

    public final boolean hasDeviceRegistration()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean hasStubbyInfo()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeMessage(1, this.deviceRegistration_);
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeMessage(2, this.stubbyInfo_);
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Client.UserCreationRequest, Builder>
      implements Client.UserCreationRequestOrBuilder
    {
      private int bitField0_;
      private Client.DeviceRegistrationRequest deviceRegistration_ = Client.DeviceRegistrationRequest.getDefaultInstance();
      private Data.StubbyInfo stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 10:
            Client.DeviceRegistrationRequest.Builder localBuilder1 = Client.DeviceRegistrationRequest.newBuilder();
            if (hasDeviceRegistration())
              localBuilder1.mergeFrom(getDeviceRegistration());
            paramCodedInputStream.readMessage(localBuilder1, paramExtensionRegistryLite);
            setDeviceRegistration(localBuilder1.buildPartial());
            break;
          case 18:
          }
          Data.StubbyInfo.Builder localBuilder = Data.StubbyInfo.newBuilder();
          if (hasStubbyInfo())
            localBuilder.mergeFrom(getStubbyInfo());
          paramCodedInputStream.readMessage(localBuilder, paramExtensionRegistryLite);
          setStubbyInfo(localBuilder.buildPartial());
        }
      }

      public final Client.UserCreationRequest build()
      {
        Client.UserCreationRequest localUserCreationRequest = buildPartial();
        if (!localUserCreationRequest.isInitialized())
          throw new UninitializedMessageException();
        return localUserCreationRequest;
      }

      public final Client.UserCreationRequest buildPartial()
      {
        Client.UserCreationRequest localUserCreationRequest = new Client.UserCreationRequest(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Client.UserCreationRequest.access$39802(localUserCreationRequest, this.deviceRegistration_);
        if ((i & 0x2) == 2)
          k |= 2;
        Client.UserCreationRequest.access$39902(localUserCreationRequest, this.stubbyInfo_);
        Client.UserCreationRequest.access$40002(localUserCreationRequest, k);
        return localUserCreationRequest;
      }

      public final Builder clear()
      {
        super.clear();
        this.deviceRegistration_ = Client.DeviceRegistrationRequest.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        return this;
      }

      public final Builder clearDeviceRegistration()
      {
        this.deviceRegistration_ = Client.DeviceRegistrationRequest.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        return this;
      }

      public final Builder clearStubbyInfo()
      {
        this.stubbyInfo_ = Data.StubbyInfo.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        return this;
      }

      public final Client.UserCreationRequest getDefaultInstanceForType()
      {
        return Client.UserCreationRequest.getDefaultInstance();
      }

      public final Client.DeviceRegistrationRequest getDeviceRegistration()
      {
        return this.deviceRegistration_;
      }

      public final Data.StubbyInfo getStubbyInfo()
      {
        return this.stubbyInfo_;
      }

      public final boolean hasDeviceRegistration()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean hasStubbyInfo()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Client.UserCreationRequest paramUserCreationRequest)
      {
        if (paramUserCreationRequest == Client.UserCreationRequest.getDefaultInstance());
        Client.DeviceRegistrationRequest localDeviceRegistrationRequest;
        label59: 
        do
        {
          return this;
          if (paramUserCreationRequest.hasDeviceRegistration())
          {
            localDeviceRegistrationRequest = paramUserCreationRequest.getDeviceRegistration();
            if (((0x1 & this.bitField0_) != 1) || (this.deviceRegistration_ == Client.DeviceRegistrationRequest.getDefaultInstance()))
              break;
            this.deviceRegistration_ = Client.DeviceRegistrationRequest.newBuilder(this.deviceRegistration_).mergeFrom(localDeviceRegistrationRequest).buildPartial();
            this.bitField0_ = (0x1 | this.bitField0_);
          }
        }
        while (!paramUserCreationRequest.hasStubbyInfo());
        Data.StubbyInfo localStubbyInfo = paramUserCreationRequest.getStubbyInfo();
        if (((0x2 & this.bitField0_) == 2) && (this.stubbyInfo_ != Data.StubbyInfo.getDefaultInstance()));
        for (this.stubbyInfo_ = Data.StubbyInfo.newBuilder(this.stubbyInfo_).mergeFrom(localStubbyInfo).buildPartial(); ; this.stubbyInfo_ = localStubbyInfo)
        {
          this.bitField0_ = (0x2 | this.bitField0_);
          break;
          this.deviceRegistration_ = localDeviceRegistrationRequest;
          break label59;
        }
      }

      public final Builder setDeviceRegistration(Client.DeviceRegistrationRequest.Builder paramBuilder)
      {
        this.deviceRegistration_ = paramBuilder.build();
        this.bitField0_ = (0x1 | this.bitField0_);
        return this;
      }

      public final Builder setDeviceRegistration(Client.DeviceRegistrationRequest paramDeviceRegistrationRequest)
      {
        if (paramDeviceRegistrationRequest == null)
          throw new NullPointerException();
        this.deviceRegistration_ = paramDeviceRegistrationRequest;
        this.bitField0_ = (0x1 | this.bitField0_);
        return this;
      }

      public final Builder setStubbyInfo(Data.StubbyInfo.Builder paramBuilder)
      {
        this.stubbyInfo_ = paramBuilder.build();
        this.bitField0_ = (0x2 | this.bitField0_);
        return this;
      }

      public final Builder setStubbyInfo(Data.StubbyInfo paramStubbyInfo)
      {
        if (paramStubbyInfo == null)
          throw new NullPointerException();
        this.stubbyInfo_ = paramStubbyInfo;
        this.bitField0_ = (0x2 | this.bitField0_);
        return this;
      }
    }
  }

  public static abstract interface UserCreationRequestOrBuilder extends MessageLiteOrBuilder
  {
    public abstract Client.DeviceRegistrationRequest getDeviceRegistration();

    public abstract Data.StubbyInfo getStubbyInfo();

    public abstract boolean hasDeviceRegistration();

    public abstract boolean hasStubbyInfo();
  }

  public static final class UserCreationResponse extends GeneratedMessageLite
    implements Client.UserCreationResponseOrBuilder
  {
    private static final UserCreationResponse defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private Object participantId_;
    private Data.Participant participant_;
    private Data.ResponseStatus status_;
    private long timestamp_;

    static
    {
      UserCreationResponse localUserCreationResponse = new UserCreationResponse();
      defaultInstance = localUserCreationResponse;
      localUserCreationResponse.status_ = Data.ResponseStatus.OK;
      localUserCreationResponse.timestamp_ = 0L;
      localUserCreationResponse.participantId_ = "";
      localUserCreationResponse.participant_ = Data.Participant.getDefaultInstance();
    }

    private UserCreationResponse()
    {
    }

    private UserCreationResponse(Builder paramBuilder)
    {
      super();
    }

    public static UserCreationResponse getDefaultInstance()
    {
      return defaultInstance;
    }

    private ByteString getParticipantIdBytes()
    {
      Object localObject = this.participantId_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.participantId_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static Builder newBuilder()
    {
      return Builder.access$40200();
    }

    public static Builder newBuilder(UserCreationResponse paramUserCreationResponse)
    {
      return Builder.access$40200().mergeFrom(paramUserCreationResponse);
    }

    public final UserCreationResponse getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final Data.Participant getParticipant()
    {
      return this.participant_;
    }

    public final String getParticipantId()
    {
      Object localObject1 = this.participantId_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.participantId_ = str;
      }
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeEnumSize(1, this.status_.getNumber());
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeInt64Size(2, this.timestamp_);
        if ((0x4 & this.bitField0_) == 4)
          k += CodedOutputStream.computeBytesSize(3, getParticipantIdBytes());
        if ((0x8 & this.bitField0_) == 8)
          k += CodedOutputStream.computeMessageSize(4, this.participant_);
        this.memoizedSerializedSize = k;
      }
    }

    public final Data.ResponseStatus getStatus()
    {
      return this.status_;
    }

    public final long getTimestamp()
    {
      return this.timestamp_;
    }

    public final boolean hasParticipant()
    {
      if ((0x8 & this.bitField0_) == 8);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasParticipantId()
    {
      if ((0x4 & this.bitField0_) == 4);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasStatus()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean hasTimestamp()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeEnum(1, this.status_.getNumber());
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeInt64(2, this.timestamp_);
      if ((0x4 & this.bitField0_) == 4)
        paramCodedOutputStream.writeBytes(3, getParticipantIdBytes());
      if ((0x8 & this.bitField0_) == 8)
        paramCodedOutputStream.writeMessage(4, this.participant_);
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Client.UserCreationResponse, Builder>
      implements Client.UserCreationResponseOrBuilder
    {
      private int bitField0_;
      private Object participantId_ = "";
      private Data.Participant participant_ = Data.Participant.getDefaultInstance();
      private Data.ResponseStatus status_ = Data.ResponseStatus.OK;
      private long timestamp_;

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 8:
            Data.ResponseStatus localResponseStatus = Data.ResponseStatus.valueOf(paramCodedInputStream.readEnum());
            if (localResponseStatus == null)
              continue;
            this.bitField0_ = (0x1 | this.bitField0_);
            this.status_ = localResponseStatus;
            break;
          case 16:
            this.bitField0_ = (0x2 | this.bitField0_);
            this.timestamp_ = paramCodedInputStream.readInt64();
            break;
          case 26:
            this.bitField0_ = (0x4 | this.bitField0_);
            this.participantId_ = paramCodedInputStream.readBytes();
            break;
          case 34:
          }
          Data.Participant.Builder localBuilder = Data.Participant.newBuilder();
          if (hasParticipant())
            localBuilder.mergeFrom(getParticipant());
          paramCodedInputStream.readMessage(localBuilder, paramExtensionRegistryLite);
          setParticipant(localBuilder.buildPartial());
        }
      }

      public final Client.UserCreationResponse build()
      {
        Client.UserCreationResponse localUserCreationResponse = buildPartial();
        if (!localUserCreationResponse.isInitialized())
          throw new UninitializedMessageException();
        return localUserCreationResponse;
      }

      public final Client.UserCreationResponse buildPartial()
      {
        Client.UserCreationResponse localUserCreationResponse = new Client.UserCreationResponse(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Client.UserCreationResponse.access$40402(localUserCreationResponse, this.status_);
        if ((i & 0x2) == 2)
          k |= 2;
        Client.UserCreationResponse.access$40502(localUserCreationResponse, this.timestamp_);
        if ((i & 0x4) == 4)
          k |= 4;
        Client.UserCreationResponse.access$40602(localUserCreationResponse, this.participantId_);
        if ((i & 0x8) == 8)
          k |= 8;
        Client.UserCreationResponse.access$40702(localUserCreationResponse, this.participant_);
        Client.UserCreationResponse.access$40802(localUserCreationResponse, k);
        return localUserCreationResponse;
      }

      public final Builder clear()
      {
        super.clear();
        this.status_ = Data.ResponseStatus.OK;
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.timestamp_ = 0L;
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.participantId_ = "";
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.participant_ = Data.Participant.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        return this;
      }

      public final Builder clearParticipant()
      {
        this.participant_ = Data.Participant.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        return this;
      }

      public final Builder clearParticipantId()
      {
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.participantId_ = Client.UserCreationResponse.getDefaultInstance().getParticipantId();
        return this;
      }

      public final Builder clearStatus()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.status_ = Data.ResponseStatus.OK;
        return this;
      }

      public final Builder clearTimestamp()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.timestamp_ = 0L;
        return this;
      }

      public final Client.UserCreationResponse getDefaultInstanceForType()
      {
        return Client.UserCreationResponse.getDefaultInstance();
      }

      public final Data.Participant getParticipant()
      {
        return this.participant_;
      }

      public final String getParticipantId()
      {
        Object localObject = this.participantId_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.participantId_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final Data.ResponseStatus getStatus()
      {
        return this.status_;
      }

      public final long getTimestamp()
      {
        return this.timestamp_;
      }

      public final boolean hasParticipant()
      {
        if ((0x8 & this.bitField0_) == 8);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasParticipantId()
      {
        if ((0x4 & this.bitField0_) == 4);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasStatus()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean hasTimestamp()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Client.UserCreationResponse paramUserCreationResponse)
      {
        if (paramUserCreationResponse == Client.UserCreationResponse.getDefaultInstance());
        do
        {
          return this;
          if (paramUserCreationResponse.hasStatus())
            setStatus(paramUserCreationResponse.getStatus());
          if (paramUserCreationResponse.hasTimestamp())
            setTimestamp(paramUserCreationResponse.getTimestamp());
          if (paramUserCreationResponse.hasParticipantId())
            setParticipantId(paramUserCreationResponse.getParticipantId());
        }
        while (!paramUserCreationResponse.hasParticipant());
        Data.Participant localParticipant = paramUserCreationResponse.getParticipant();
        if (((0x8 & this.bitField0_) == 8) && (this.participant_ != Data.Participant.getDefaultInstance()));
        for (this.participant_ = Data.Participant.newBuilder(this.participant_).mergeFrom(localParticipant).buildPartial(); ; this.participant_ = localParticipant)
        {
          this.bitField0_ = (0x8 | this.bitField0_);
          break;
        }
      }

      public final Builder setParticipant(Data.Participant.Builder paramBuilder)
      {
        this.participant_ = paramBuilder.build();
        this.bitField0_ = (0x8 | this.bitField0_);
        return this;
      }

      public final Builder setParticipant(Data.Participant paramParticipant)
      {
        if (paramParticipant == null)
          throw new NullPointerException();
        this.participant_ = paramParticipant;
        this.bitField0_ = (0x8 | this.bitField0_);
        return this;
      }

      public final Builder setParticipantId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x4 | this.bitField0_);
        this.participantId_ = paramString;
        return this;
      }

      public final Builder setStatus(Data.ResponseStatus paramResponseStatus)
      {
        if (paramResponseStatus == null)
          throw new NullPointerException();
        this.bitField0_ = (0x1 | this.bitField0_);
        this.status_ = paramResponseStatus;
        return this;
      }

      public final Builder setTimestamp(long paramLong)
      {
        this.bitField0_ = (0x2 | this.bitField0_);
        this.timestamp_ = paramLong;
        return this;
      }
    }
  }

  public static abstract interface UserCreationResponseOrBuilder extends MessageLiteOrBuilder
  {
    public abstract Data.Participant getParticipant();

    public abstract String getParticipantId();

    public abstract Data.ResponseStatus getStatus();

    public abstract long getTimestamp();

    public abstract boolean hasParticipant();

    public abstract boolean hasParticipantId();

    public abstract boolean hasStatus();

    public abstract boolean hasTimestamp();
  }

  public static final class UserInfoRequest extends GeneratedMessageLite
    implements Client.UserInfoRequestOrBuilder
  {
    private static final UserInfoRequest defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private Object participantId_;

    static
    {
      UserInfoRequest localUserInfoRequest = new UserInfoRequest();
      defaultInstance = localUserInfoRequest;
      localUserInfoRequest.participantId_ = "";
    }

    private UserInfoRequest()
    {
    }

    private UserInfoRequest(Builder paramBuilder)
    {
      super();
    }

    public static UserInfoRequest getDefaultInstance()
    {
      return defaultInstance;
    }

    private ByteString getParticipantIdBytes()
    {
      Object localObject = this.participantId_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.participantId_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static Builder newBuilder()
    {
      return Builder.access$53900();
    }

    public static Builder newBuilder(UserInfoRequest paramUserInfoRequest)
    {
      return Builder.access$53900().mergeFrom(paramUserInfoRequest);
    }

    public final UserInfoRequest getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final String getParticipantId()
    {
      Object localObject1 = this.participantId_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.participantId_ = str;
      }
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeBytesSize(1, getParticipantIdBytes());
        this.memoizedSerializedSize = k;
      }
    }

    public final boolean hasParticipantId()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeBytes(1, getParticipantIdBytes());
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Client.UserInfoRequest, Builder>
      implements Client.UserInfoRequestOrBuilder
    {
      private int bitField0_;
      private Object participantId_ = "";

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 10:
          }
          this.bitField0_ = (0x1 | this.bitField0_);
          this.participantId_ = paramCodedInputStream.readBytes();
        }
      }

      public final Client.UserInfoRequest build()
      {
        Client.UserInfoRequest localUserInfoRequest = buildPartial();
        if (!localUserInfoRequest.isInitialized())
          throw new UninitializedMessageException();
        return localUserInfoRequest;
      }

      public final Client.UserInfoRequest buildPartial()
      {
        Client.UserInfoRequest localUserInfoRequest = new Client.UserInfoRequest(this, (byte)0);
        int i = 0x1 & this.bitField0_;
        int j = 0;
        if (i == 1)
          j = 1;
        Client.UserInfoRequest.access$54102(localUserInfoRequest, this.participantId_);
        Client.UserInfoRequest.access$54202(localUserInfoRequest, j);
        return localUserInfoRequest;
      }

      public final Builder clear()
      {
        super.clear();
        this.participantId_ = "";
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        return this;
      }

      public final Builder clearParticipantId()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.participantId_ = Client.UserInfoRequest.getDefaultInstance().getParticipantId();
        return this;
      }

      public final Client.UserInfoRequest getDefaultInstanceForType()
      {
        return Client.UserInfoRequest.getDefaultInstance();
      }

      public final String getParticipantId()
      {
        Object localObject = this.participantId_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.participantId_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final boolean hasParticipantId()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Client.UserInfoRequest paramUserInfoRequest)
      {
        if (paramUserInfoRequest == Client.UserInfoRequest.getDefaultInstance());
        while (true)
        {
          return this;
          if (paramUserInfoRequest.hasParticipantId())
            setParticipantId(paramUserInfoRequest.getParticipantId());
        }
      }

      public final Builder setParticipantId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x1 | this.bitField0_);
        this.participantId_ = paramString;
        return this;
      }
    }
  }

  public static abstract interface UserInfoRequestOrBuilder extends MessageLiteOrBuilder
  {
    public abstract String getParticipantId();

    public abstract boolean hasParticipantId();
  }

  public static final class UserInfoResponse extends GeneratedMessageLite
    implements Client.UserInfoResponseOrBuilder
  {
    private static final UserInfoResponse defaultInstance;
    private static final long serialVersionUID;
    private Client.SetAclsRequest.Acl acl_;
    private int bitField0_;
    private List<Client.DeviceInfo> device_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private Data.Participant participant_;
    private Data.ResponseStatus status_;
    private boolean userExists_;

    static
    {
      UserInfoResponse localUserInfoResponse = new UserInfoResponse();
      defaultInstance = localUserInfoResponse;
      localUserInfoResponse.status_ = Data.ResponseStatus.OK;
      localUserInfoResponse.participant_ = Data.Participant.getDefaultInstance();
      localUserInfoResponse.acl_ = Client.SetAclsRequest.Acl.EVERYONE;
      localUserInfoResponse.userExists_ = false;
      localUserInfoResponse.device_ = Collections.emptyList();
    }

    private UserInfoResponse()
    {
    }

    private UserInfoResponse(Builder paramBuilder)
    {
      super();
    }

    public static UserInfoResponse getDefaultInstance()
    {
      return defaultInstance;
    }

    public static Builder newBuilder()
    {
      return Builder.access$54400();
    }

    public static Builder newBuilder(UserInfoResponse paramUserInfoResponse)
    {
      return Builder.access$54400().mergeFrom(paramUserInfoResponse);
    }

    public final Client.SetAclsRequest.Acl getAcl()
    {
      return this.acl_;
    }

    public final UserInfoResponse getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final Client.DeviceInfo getDevice(int paramInt)
    {
      return (Client.DeviceInfo)this.device_.get(paramInt);
    }

    public final int getDeviceCount()
    {
      return this.device_.size();
    }

    public final List<Client.DeviceInfo> getDeviceList()
    {
      return this.device_;
    }

    public final Client.DeviceInfoOrBuilder getDeviceOrBuilder(int paramInt)
    {
      return (Client.DeviceInfoOrBuilder)this.device_.get(paramInt);
    }

    public final List<? extends Client.DeviceInfoOrBuilder> getDeviceOrBuilderList()
    {
      return this.device_;
    }

    public final Data.Participant getParticipant()
    {
      return this.participant_;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int n = i; ; n = k)
      {
        return n;
        int j = 0x2 & this.bitField0_;
        k = 0;
        if (j == 2)
          k = 0 + CodedOutputStream.computeMessageSize(1, this.participant_);
        if ((0x4 & this.bitField0_) == 4)
          k += CodedOutputStream.computeEnumSize(2, this.acl_.getNumber());
        if ((0x8 & this.bitField0_) == 8)
          k += CodedOutputStream.computeBoolSize(3, this.userExists_);
        for (int m = 0; m < this.device_.size(); m++)
          k += CodedOutputStream.computeMessageSize(4, (MessageLite)this.device_.get(m));
        if ((0x1 & this.bitField0_) == 1)
          k += CodedOutputStream.computeEnumSize(5, this.status_.getNumber());
        this.memoizedSerializedSize = k;
      }
    }

    public final Data.ResponseStatus getStatus()
    {
      return this.status_;
    }

    public final boolean getUserExists()
    {
      return this.userExists_;
    }

    public final boolean hasAcl()
    {
      if ((0x4 & this.bitField0_) == 4);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasParticipant()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasStatus()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean hasUserExists()
    {
      if ((0x8 & this.bitField0_) == 8);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeMessage(1, this.participant_);
      if ((0x4 & this.bitField0_) == 4)
        paramCodedOutputStream.writeEnum(2, this.acl_.getNumber());
      if ((0x8 & this.bitField0_) == 8)
        paramCodedOutputStream.writeBool(3, this.userExists_);
      for (int i = 0; i < this.device_.size(); i++)
        paramCodedOutputStream.writeMessage(4, (MessageLite)this.device_.get(i));
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeEnum(5, this.status_.getNumber());
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Client.UserInfoResponse, Builder>
      implements Client.UserInfoResponseOrBuilder
    {
      private Client.SetAclsRequest.Acl acl_ = Client.SetAclsRequest.Acl.EVERYONE;
      private int bitField0_;
      private List<Client.DeviceInfo> device_ = Collections.emptyList();
      private Data.Participant participant_ = Data.Participant.getDefaultInstance();
      private Data.ResponseStatus status_ = Data.ResponseStatus.OK;
      private boolean userExists_;

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private void ensureDeviceIsMutable()
      {
        if ((0x10 & this.bitField0_) != 16)
        {
          this.device_ = new ArrayList(this.device_);
          this.bitField0_ = (0x10 | this.bitField0_);
        }
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 10:
            Data.Participant.Builder localBuilder1 = Data.Participant.newBuilder();
            if (hasParticipant())
              localBuilder1.mergeFrom(getParticipant());
            paramCodedInputStream.readMessage(localBuilder1, paramExtensionRegistryLite);
            setParticipant(localBuilder1.buildPartial());
            break;
          case 16:
            Client.SetAclsRequest.Acl localAcl = Client.SetAclsRequest.Acl.valueOf(paramCodedInputStream.readEnum());
            if (localAcl == null)
              continue;
            this.bitField0_ = (0x4 | this.bitField0_);
            this.acl_ = localAcl;
            break;
          case 24:
            this.bitField0_ = (0x8 | this.bitField0_);
            this.userExists_ = paramCodedInputStream.readBool();
            break;
          case 34:
            Client.DeviceInfo.Builder localBuilder = Client.DeviceInfo.newBuilder();
            paramCodedInputStream.readMessage(localBuilder, paramExtensionRegistryLite);
            addDevice(localBuilder.buildPartial());
            break;
          case 40:
          }
          Data.ResponseStatus localResponseStatus = Data.ResponseStatus.valueOf(paramCodedInputStream.readEnum());
          if (localResponseStatus != null)
          {
            this.bitField0_ = (0x1 | this.bitField0_);
            this.status_ = localResponseStatus;
          }
        }
      }

      public final Builder addAllDevice(Iterable<? extends Client.DeviceInfo> paramIterable)
      {
        ensureDeviceIsMutable();
        GeneratedMessageLite.Builder.addAll(paramIterable, this.device_);
        return this;
      }

      public final Builder addDevice(int paramInt, Client.DeviceInfo.Builder paramBuilder)
      {
        ensureDeviceIsMutable();
        this.device_.add(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder addDevice(int paramInt, Client.DeviceInfo paramDeviceInfo)
      {
        if (paramDeviceInfo == null)
          throw new NullPointerException();
        ensureDeviceIsMutable();
        this.device_.add(paramInt, paramDeviceInfo);
        return this;
      }

      public final Builder addDevice(Client.DeviceInfo.Builder paramBuilder)
      {
        ensureDeviceIsMutable();
        this.device_.add(paramBuilder.build());
        return this;
      }

      public final Builder addDevice(Client.DeviceInfo paramDeviceInfo)
      {
        if (paramDeviceInfo == null)
          throw new NullPointerException();
        ensureDeviceIsMutable();
        this.device_.add(paramDeviceInfo);
        return this;
      }

      public final Client.UserInfoResponse build()
      {
        Client.UserInfoResponse localUserInfoResponse = buildPartial();
        if (!localUserInfoResponse.isInitialized())
          throw new UninitializedMessageException();
        return localUserInfoResponse;
      }

      public final Client.UserInfoResponse buildPartial()
      {
        Client.UserInfoResponse localUserInfoResponse = new Client.UserInfoResponse(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Client.UserInfoResponse.access$54602(localUserInfoResponse, this.status_);
        if ((i & 0x2) == 2)
          k |= 2;
        Client.UserInfoResponse.access$54702(localUserInfoResponse, this.participant_);
        if ((i & 0x4) == 4)
          k |= 4;
        Client.UserInfoResponse.access$54802(localUserInfoResponse, this.acl_);
        if ((i & 0x8) == 8)
          k |= 8;
        Client.UserInfoResponse.access$54902(localUserInfoResponse, this.userExists_);
        if ((0x10 & this.bitField0_) == 16)
        {
          this.device_ = Collections.unmodifiableList(this.device_);
          this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        }
        Client.UserInfoResponse.access$55002(localUserInfoResponse, this.device_);
        Client.UserInfoResponse.access$55102(localUserInfoResponse, k);
        return localUserInfoResponse;
      }

      public final Builder clear()
      {
        super.clear();
        this.status_ = Data.ResponseStatus.OK;
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.participant_ = Data.Participant.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.acl_ = Client.SetAclsRequest.Acl.EVERYONE;
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.userExists_ = false;
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        this.device_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        return this;
      }

      public final Builder clearAcl()
      {
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.acl_ = Client.SetAclsRequest.Acl.EVERYONE;
        return this;
      }

      public final Builder clearDevice()
      {
        this.device_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        return this;
      }

      public final Builder clearParticipant()
      {
        this.participant_ = Data.Participant.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        return this;
      }

      public final Builder clearStatus()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.status_ = Data.ResponseStatus.OK;
        return this;
      }

      public final Builder clearUserExists()
      {
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        this.userExists_ = false;
        return this;
      }

      public final Client.SetAclsRequest.Acl getAcl()
      {
        return this.acl_;
      }

      public final Client.UserInfoResponse getDefaultInstanceForType()
      {
        return Client.UserInfoResponse.getDefaultInstance();
      }

      public final Client.DeviceInfo getDevice(int paramInt)
      {
        return (Client.DeviceInfo)this.device_.get(paramInt);
      }

      public final int getDeviceCount()
      {
        return this.device_.size();
      }

      public final List<Client.DeviceInfo> getDeviceList()
      {
        return Collections.unmodifiableList(this.device_);
      }

      public final Data.Participant getParticipant()
      {
        return this.participant_;
      }

      public final Data.ResponseStatus getStatus()
      {
        return this.status_;
      }

      public final boolean getUserExists()
      {
        return this.userExists_;
      }

      public final boolean hasAcl()
      {
        if ((0x4 & this.bitField0_) == 4);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasParticipant()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasStatus()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean hasUserExists()
      {
        if ((0x8 & this.bitField0_) == 8);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Client.UserInfoResponse paramUserInfoResponse)
      {
        if (paramUserInfoResponse == Client.UserInfoResponse.getDefaultInstance());
        while (true)
        {
          return this;
          if (paramUserInfoResponse.hasStatus())
            setStatus(paramUserInfoResponse.getStatus());
          Data.Participant localParticipant;
          if (paramUserInfoResponse.hasParticipant())
          {
            localParticipant = paramUserInfoResponse.getParticipant();
            if (((0x2 & this.bitField0_) != 2) || (this.participant_ == Data.Participant.getDefaultInstance()))
              break label165;
          }
          label165: for (this.participant_ = Data.Participant.newBuilder(this.participant_).mergeFrom(localParticipant).buildPartial(); ; this.participant_ = localParticipant)
          {
            this.bitField0_ = (0x2 | this.bitField0_);
            if (paramUserInfoResponse.hasAcl())
              setAcl(paramUserInfoResponse.getAcl());
            if (paramUserInfoResponse.hasUserExists())
              setUserExists(paramUserInfoResponse.getUserExists());
            if (paramUserInfoResponse.device_.isEmpty())
              break;
            if (!this.device_.isEmpty())
              break label174;
            this.device_ = paramUserInfoResponse.device_;
            this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
            break;
          }
          label174: ensureDeviceIsMutable();
          this.device_.addAll(paramUserInfoResponse.device_);
        }
      }

      public final Builder setAcl(Client.SetAclsRequest.Acl paramAcl)
      {
        if (paramAcl == null)
          throw new NullPointerException();
        this.bitField0_ = (0x4 | this.bitField0_);
        this.acl_ = paramAcl;
        return this;
      }

      public final Builder setDevice(int paramInt, Client.DeviceInfo.Builder paramBuilder)
      {
        ensureDeviceIsMutable();
        this.device_.set(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder setDevice(int paramInt, Client.DeviceInfo paramDeviceInfo)
      {
        if (paramDeviceInfo == null)
          throw new NullPointerException();
        ensureDeviceIsMutable();
        this.device_.set(paramInt, paramDeviceInfo);
        return this;
      }

      public final Builder setParticipant(Data.Participant.Builder paramBuilder)
      {
        this.participant_ = paramBuilder.build();
        this.bitField0_ = (0x2 | this.bitField0_);
        return this;
      }

      public final Builder setParticipant(Data.Participant paramParticipant)
      {
        if (paramParticipant == null)
          throw new NullPointerException();
        this.participant_ = paramParticipant;
        this.bitField0_ = (0x2 | this.bitField0_);
        return this;
      }

      public final Builder setStatus(Data.ResponseStatus paramResponseStatus)
      {
        if (paramResponseStatus == null)
          throw new NullPointerException();
        this.bitField0_ = (0x1 | this.bitField0_);
        this.status_ = paramResponseStatus;
        return this;
      }

      public final Builder setUserExists(boolean paramBoolean)
      {
        this.bitField0_ = (0x8 | this.bitField0_);
        this.userExists_ = paramBoolean;
        return this;
      }
    }
  }

  public static abstract interface UserInfoResponseOrBuilder extends MessageLiteOrBuilder
  {
    public abstract Client.SetAclsRequest.Acl getAcl();

    public abstract Client.DeviceInfo getDevice(int paramInt);

    public abstract int getDeviceCount();

    public abstract List<Client.DeviceInfo> getDeviceList();

    public abstract Data.Participant getParticipant();

    public abstract Data.ResponseStatus getStatus();

    public abstract boolean getUserExists();

    public abstract boolean hasAcl();

    public abstract boolean hasParticipant();

    public abstract boolean hasStatus();

    public abstract boolean hasUserExists();
  }
}

/* Location:           C:\Dev\Java\android\adt-bundle-windows\workspace\googleplus\classes_dex2jar.jar
 * Qualified Name:     com.google.wireless.realtimechat.proto.Client
 * JD-Core Version:    0.6.2
 */