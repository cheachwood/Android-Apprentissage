package com.google.wireless.tacotruck.proto;

import com.google.apps.people.notifications.proto.base.NotificationEnums.NotificationType;
import com.google.apps.tacotown.proto.A2a.HangoutData;
import com.google.apps.tacotown.proto.A2a.HangoutData.Builder;
import com.google.protobuf.ByteString;
import com.google.protobuf.CodedInputStream;
import com.google.protobuf.CodedOutputStream;
import com.google.protobuf.ExtensionRegistryLite;
import com.google.protobuf.GeneratedMessageLite;
import com.google.protobuf.GeneratedMessageLite.Builder;
import com.google.protobuf.Internal;
import com.google.protobuf.Internal.EnumLite;
import com.google.protobuf.Internal.EnumLiteMap;
import com.google.protobuf.LazyStringArrayList;
import com.google.protobuf.LazyStringList;
import com.google.protobuf.MessageLite;
import com.google.protobuf.MessageLiteOrBuilder;
import com.google.protobuf.UninitializedMessageException;
import com.google.protobuf.UnmodifiableLazyStringList;
import com.google.wireless.webapps.Analytics.LogEnvelope;
import com.google.wireless.webapps.Analytics.LogEnvelope.Builder;
import java.io.IOException;
import java.io.InputStream;
import java.io.ObjectStreamException;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

public final class Network
{
  public static final class ActivityActionRequest extends GeneratedMessageLite
    implements Network.ActivityActionRequestOrBuilder
  {
    private static final ActivityActionRequest defaultInstance;
    private static final long serialVersionUID;
    private Object activityId_;
    private int bitField0_;
    private LazyStringList deleteCommentId_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private LazyStringList reportCommentId_;
    private boolean reverseAction_;
    private Type type_;

    static
    {
      ActivityActionRequest localActivityActionRequest = new ActivityActionRequest();
      defaultInstance = localActivityActionRequest;
      localActivityActionRequest.type_ = Type.DELETE;
      localActivityActionRequest.activityId_ = "";
      localActivityActionRequest.reverseAction_ = false;
      localActivityActionRequest.deleteCommentId_ = LazyStringArrayList.EMPTY;
      localActivityActionRequest.reportCommentId_ = LazyStringArrayList.EMPTY;
    }

    private ActivityActionRequest()
    {
    }

    private ActivityActionRequest(Builder paramBuilder)
    {
      super();
    }

    private ByteString getActivityIdBytes()
    {
      Object localObject = this.activityId_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.activityId_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static ActivityActionRequest getDefaultInstance()
    {
      return defaultInstance;
    }

    public final String getActivityId()
    {
      Object localObject1 = this.activityId_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.activityId_ = str;
      }
    }

    public final ActivityActionRequest getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final String getDeleteCommentId(int paramInt)
    {
      return (String)this.deleteCommentId_.get(paramInt);
    }

    public final int getDeleteCommentIdCount()
    {
      return this.deleteCommentId_.size();
    }

    public final List<String> getDeleteCommentIdList()
    {
      return this.deleteCommentId_;
    }

    public final String getReportCommentId(int paramInt)
    {
      return (String)this.reportCommentId_.get(paramInt);
    }

    public final int getReportCommentIdCount()
    {
      return this.reportCommentId_.size();
    }

    public final List<String> getReportCommentIdList()
    {
      return this.reportCommentId_;
    }

    public final boolean getReverseAction()
    {
      return this.reverseAction_;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int i4;
      for (int i5 = i; ; i5 = i4)
      {
        return i5;
        int j = 0x1 & this.bitField0_;
        int k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeEnumSize(1, this.type_.getNumber());
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeBytesSize(2, getActivityIdBytes());
        if ((0x4 & this.bitField0_) == 4)
          k += CodedOutputStream.computeBoolSize(3, this.reverseAction_);
        int m = 0;
        for (int n = 0; n < this.deleteCommentId_.size(); n++)
          m += CodedOutputStream.computeBytesSizeNoTag(this.deleteCommentId_.getByteString(n));
        int i1 = k + m + 1 * getDeleteCommentIdList().size();
        int i2 = 0;
        for (int i3 = 0; i3 < this.reportCommentId_.size(); i3++)
          i2 += CodedOutputStream.computeBytesSizeNoTag(this.reportCommentId_.getByteString(i3));
        i4 = i1 + i2 + 1 * getReportCommentIdList().size();
        this.memoizedSerializedSize = i4;
      }
    }

    public final Type getType()
    {
      return this.type_;
    }

    public final boolean hasActivityId()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasReverseAction()
    {
      if ((0x4 & this.bitField0_) == 4);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasType()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeEnum(1, this.type_.getNumber());
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeBytes(2, getActivityIdBytes());
      if ((0x4 & this.bitField0_) == 4)
        paramCodedOutputStream.writeBool(3, this.reverseAction_);
      for (int i = 0; i < this.deleteCommentId_.size(); i++)
        paramCodedOutputStream.writeBytes(4, this.deleteCommentId_.getByteString(i));
      for (int j = 0; j < this.reportCommentId_.size(); j++)
        paramCodedOutputStream.writeBytes(5, this.reportCommentId_.getByteString(j));
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Network.ActivityActionRequest, Builder>
      implements Network.ActivityActionRequestOrBuilder
    {
      private Object activityId_ = "";
      private int bitField0_;
      private LazyStringList deleteCommentId_ = LazyStringArrayList.EMPTY;
      private LazyStringList reportCommentId_ = LazyStringArrayList.EMPTY;
      private boolean reverseAction_;
      private Network.ActivityActionRequest.Type type_ = Network.ActivityActionRequest.Type.DELETE;

      private Network.ActivityActionRequest buildPartial()
      {
        Network.ActivityActionRequest localActivityActionRequest = new Network.ActivityActionRequest(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Network.ActivityActionRequest.access$14102(localActivityActionRequest, this.type_);
        if ((i & 0x2) == 2)
          k |= 2;
        Network.ActivityActionRequest.access$14202(localActivityActionRequest, this.activityId_);
        if ((i & 0x4) == 4)
          k |= 4;
        Network.ActivityActionRequest.access$14302(localActivityActionRequest, this.reverseAction_);
        if ((0x8 & this.bitField0_) == 8)
        {
          this.deleteCommentId_ = new UnmodifiableLazyStringList(this.deleteCommentId_);
          this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        }
        Network.ActivityActionRequest.access$14402(localActivityActionRequest, this.deleteCommentId_);
        if ((0x10 & this.bitField0_) == 16)
        {
          this.reportCommentId_ = new UnmodifiableLazyStringList(this.reportCommentId_);
          this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        }
        Network.ActivityActionRequest.access$14502(localActivityActionRequest, this.reportCommentId_);
        Network.ActivityActionRequest.access$14602(localActivityActionRequest, k);
        return localActivityActionRequest;
      }

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private void ensureDeleteCommentIdIsMutable()
      {
        if ((0x8 & this.bitField0_) != 8)
        {
          this.deleteCommentId_ = new LazyStringArrayList(this.deleteCommentId_);
          this.bitField0_ = (0x8 | this.bitField0_);
        }
      }

      private void ensureReportCommentIdIsMutable()
      {
        if ((0x10 & this.bitField0_) != 16)
        {
          this.reportCommentId_ = new LazyStringArrayList(this.reportCommentId_);
          this.bitField0_ = (0x10 | this.bitField0_);
        }
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 8:
            Network.ActivityActionRequest.Type localType = Network.ActivityActionRequest.Type.valueOf(paramCodedInputStream.readEnum());
            if (localType == null)
              continue;
            this.bitField0_ = (0x1 | this.bitField0_);
            this.type_ = localType;
            break;
          case 18:
            this.bitField0_ = (0x2 | this.bitField0_);
            this.activityId_ = paramCodedInputStream.readBytes();
            break;
          case 24:
            this.bitField0_ = (0x4 | this.bitField0_);
            this.reverseAction_ = paramCodedInputStream.readBool();
            break;
          case 34:
            ensureDeleteCommentIdIsMutable();
            this.deleteCommentId_.add(paramCodedInputStream.readBytes());
            break;
          case 42:
          }
          ensureReportCommentIdIsMutable();
          this.reportCommentId_.add(paramCodedInputStream.readBytes());
        }
      }

      public final Builder addAllDeleteCommentId(Iterable<String> paramIterable)
      {
        ensureDeleteCommentIdIsMutable();
        GeneratedMessageLite.Builder.addAll(paramIterable, this.deleteCommentId_);
        return this;
      }

      public final Builder addAllReportCommentId(Iterable<String> paramIterable)
      {
        ensureReportCommentIdIsMutable();
        GeneratedMessageLite.Builder.addAll(paramIterable, this.reportCommentId_);
        return this;
      }

      public final Builder addDeleteCommentId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        ensureDeleteCommentIdIsMutable();
        this.deleteCommentId_.add(paramString);
        return this;
      }

      public final Builder addReportCommentId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        ensureReportCommentIdIsMutable();
        this.reportCommentId_.add(paramString);
        return this;
      }

      public final Builder clear()
      {
        super.clear();
        this.type_ = Network.ActivityActionRequest.Type.DELETE;
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.activityId_ = "";
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.reverseAction_ = false;
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.deleteCommentId_ = LazyStringArrayList.EMPTY;
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        this.reportCommentId_ = LazyStringArrayList.EMPTY;
        this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        return this;
      }

      public final Builder clearActivityId()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.activityId_ = Network.ActivityActionRequest.getDefaultInstance().getActivityId();
        return this;
      }

      public final Builder clearDeleteCommentId()
      {
        this.deleteCommentId_ = LazyStringArrayList.EMPTY;
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        return this;
      }

      public final Builder clearReportCommentId()
      {
        this.reportCommentId_ = LazyStringArrayList.EMPTY;
        this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        return this;
      }

      public final Builder clearReverseAction()
      {
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.reverseAction_ = false;
        return this;
      }

      public final Builder clearType()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.type_ = Network.ActivityActionRequest.Type.DELETE;
        return this;
      }

      public final String getActivityId()
      {
        Object localObject = this.activityId_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.activityId_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final Network.ActivityActionRequest getDefaultInstanceForType()
      {
        return Network.ActivityActionRequest.getDefaultInstance();
      }

      public final String getDeleteCommentId(int paramInt)
      {
        return (String)this.deleteCommentId_.get(paramInt);
      }

      public final int getDeleteCommentIdCount()
      {
        return this.deleteCommentId_.size();
      }

      public final List<String> getDeleteCommentIdList()
      {
        return Collections.unmodifiableList(this.deleteCommentId_);
      }

      public final String getReportCommentId(int paramInt)
      {
        return (String)this.reportCommentId_.get(paramInt);
      }

      public final int getReportCommentIdCount()
      {
        return this.reportCommentId_.size();
      }

      public final List<String> getReportCommentIdList()
      {
        return Collections.unmodifiableList(this.reportCommentId_);
      }

      public final boolean getReverseAction()
      {
        return this.reverseAction_;
      }

      public final Network.ActivityActionRequest.Type getType()
      {
        return this.type_;
      }

      public final boolean hasActivityId()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasReverseAction()
      {
        if ((0x4 & this.bitField0_) == 4);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasType()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Network.ActivityActionRequest paramActivityActionRequest)
      {
        if (paramActivityActionRequest == Network.ActivityActionRequest.getDefaultInstance());
        while (true)
        {
          return this;
          if (paramActivityActionRequest.hasType())
            setType(paramActivityActionRequest.getType());
          if (paramActivityActionRequest.hasActivityId())
            setActivityId(paramActivityActionRequest.getActivityId());
          if (paramActivityActionRequest.hasReverseAction())
            setReverseAction(paramActivityActionRequest.getReverseAction());
          if (!paramActivityActionRequest.deleteCommentId_.isEmpty())
          {
            if (!this.deleteCommentId_.isEmpty())
              break label146;
            this.deleteCommentId_ = paramActivityActionRequest.deleteCommentId_;
            this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
          }
          while (true)
          {
            if (paramActivityActionRequest.reportCommentId_.isEmpty())
              break label165;
            if (!this.reportCommentId_.isEmpty())
              break label167;
            this.reportCommentId_ = paramActivityActionRequest.reportCommentId_;
            this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
            break;
            label146: ensureDeleteCommentIdIsMutable();
            this.deleteCommentId_.addAll(paramActivityActionRequest.deleteCommentId_);
          }
          label165: continue;
          label167: ensureReportCommentIdIsMutable();
          this.reportCommentId_.addAll(paramActivityActionRequest.reportCommentId_);
        }
      }

      public final Builder setActivityId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x2 | this.bitField0_);
        this.activityId_ = paramString;
        return this;
      }

      public final Builder setDeleteCommentId(int paramInt, String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        ensureDeleteCommentIdIsMutable();
        this.deleteCommentId_.set(paramInt, paramString);
        return this;
      }

      public final Builder setReportCommentId(int paramInt, String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        ensureReportCommentIdIsMutable();
        this.reportCommentId_.set(paramInt, paramString);
        return this;
      }

      public final Builder setReverseAction(boolean paramBoolean)
      {
        this.bitField0_ = (0x4 | this.bitField0_);
        this.reverseAction_ = paramBoolean;
        return this;
      }

      public final Builder setType(Network.ActivityActionRequest.Type paramType)
      {
        if (paramType == null)
          throw new NullPointerException();
        this.bitField0_ = (0x1 | this.bitField0_);
        this.type_ = paramType;
        return this;
      }
    }

    public static enum Type
      implements Internal.EnumLite
    {
      private static Internal.EnumLiteMap<Type> internalValueMap = new Internal.EnumLiteMap()
      {
      };
      private final int value;

      static
      {
        CLOSE_COMMENTS = new Type("CLOSE_COMMENTS", 3, 4);
        MUTE = new Type("MUTE", 4, 5);
        REMOVE_LOCATION = new Type("REMOVE_LOCATION", 5, 6);
        MODERATE_COMMENTS = new Type("MODERATE_COMMENTS", 6, 7);
        DELETE_COMMENT = new Type("DELETE_COMMENT", 7, 8);
        FOLLOW_ACTIVITY = new Type("FOLLOW_ACTIVITY", 8, 9);
        Type[] arrayOfType = new Type[9];
        arrayOfType[0] = DELETE;
        arrayOfType[1] = LIKE;
        arrayOfType[2] = REPORT_ABUSE;
        arrayOfType[3] = CLOSE_COMMENTS;
        arrayOfType[4] = MUTE;
        arrayOfType[5] = REMOVE_LOCATION;
        arrayOfType[6] = MODERATE_COMMENTS;
        arrayOfType[7] = DELETE_COMMENT;
        arrayOfType[8] = FOLLOW_ACTIVITY;
      }

      private Type(int paramInt1, int paramInt2)
      {
        this.value = paramInt1;
      }

      public static Type valueOf(int paramInt)
      {
        Type localType;
        switch (paramInt)
        {
        default:
          localType = null;
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
        case 6:
        case 7:
        case 8:
        case 9:
        }
        while (true)
        {
          return localType;
          localType = DELETE;
          continue;
          localType = LIKE;
          continue;
          localType = REPORT_ABUSE;
          continue;
          localType = CLOSE_COMMENTS;
          continue;
          localType = MUTE;
          continue;
          localType = REMOVE_LOCATION;
          continue;
          localType = MODERATE_COMMENTS;
          continue;
          localType = DELETE_COMMENT;
          continue;
          localType = FOLLOW_ACTIVITY;
        }
      }

      public final int getNumber()
      {
        return this.value;
      }
    }
  }

  public static abstract interface ActivityActionRequestOrBuilder extends MessageLiteOrBuilder
  {
    public abstract String getActivityId();

    public abstract String getDeleteCommentId(int paramInt);

    public abstract int getDeleteCommentIdCount();

    public abstract List<String> getDeleteCommentIdList();

    public abstract String getReportCommentId(int paramInt);

    public abstract int getReportCommentIdCount();

    public abstract List<String> getReportCommentIdList();

    public abstract boolean getReverseAction();

    public abstract Network.ActivityActionRequest.Type getType();

    public abstract boolean hasActivityId();

    public abstract boolean hasReverseAction();

    public abstract boolean hasType();
  }

  public static final class ActivityActionResponse extends GeneratedMessageLite
    implements Network.ActivityActionResponseOrBuilder
  {
    private static final ActivityActionResponse defaultInstance = new ActivityActionResponse();
    private static final long serialVersionUID;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;

    private ActivityActionResponse()
    {
    }

    private ActivityActionResponse(Builder paramBuilder)
    {
      super();
    }

    public static ActivityActionResponse getDefaultInstance()
    {
      return defaultInstance;
    }

    public final ActivityActionResponse getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      while (true)
      {
        return i;
        this.memoizedSerializedSize = 0;
        i = 0;
      }
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Network.ActivityActionResponse, Builder>
      implements Network.ActivityActionResponseOrBuilder
    {
      private Network.ActivityActionResponse buildPartial()
      {
        return new Network.ActivityActionResponse(this, (byte)0);
      }

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        int i;
        do
        {
          i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
          case 0:
          }
        }
        while (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i));
        return this;
      }

      public final Builder clear()
      {
        super.clear();
        return this;
      }

      public final Network.ActivityActionResponse getDefaultInstanceForType()
      {
        return Network.ActivityActionResponse.getDefaultInstance();
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Network.ActivityActionResponse paramActivityActionResponse)
      {
        if (paramActivityActionResponse == Network.ActivityActionResponse.getDefaultInstance());
        return this;
      }
    }
  }

  public static abstract interface ActivityActionResponseOrBuilder extends MessageLiteOrBuilder
  {
  }

  public static final class ActivityOrder extends GeneratedMessageLite
    implements Network.ActivityOrderOrBuilder
  {
    private static final ActivityOrder defaultInstance;
    private static final long serialVersionUID;
    private Object activityId_;
    private Data.PerfectStreamActivity activity_;
    private int bitField0_;
    private long lastModifiedUsec_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;

    static
    {
      ActivityOrder localActivityOrder = new ActivityOrder();
      defaultInstance = localActivityOrder;
      localActivityOrder.activityId_ = "";
      localActivityOrder.lastModifiedUsec_ = 0L;
      localActivityOrder.activity_ = Data.PerfectStreamActivity.getDefaultInstance();
    }

    private ActivityOrder()
    {
    }

    private ActivityOrder(Builder paramBuilder)
    {
      super();
    }

    private ByteString getActivityIdBytes()
    {
      Object localObject = this.activityId_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.activityId_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static ActivityOrder getDefaultInstance()
    {
      return defaultInstance;
    }

    public static Builder newBuilder()
    {
      return Builder.access$9000();
    }

    public final Data.PerfectStreamActivity getActivity()
    {
      return this.activity_;
    }

    public final String getActivityId()
    {
      Object localObject1 = this.activityId_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.activityId_ = str;
      }
    }

    public final ActivityOrder getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final long getLastModifiedUsec()
    {
      return this.lastModifiedUsec_;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeBytesSize(1, getActivityIdBytes());
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeInt64Size(2, this.lastModifiedUsec_);
        if ((0x4 & this.bitField0_) == 4)
          k += CodedOutputStream.computeMessageSize(3, this.activity_);
        this.memoizedSerializedSize = k;
      }
    }

    public final boolean hasActivity()
    {
      if ((0x4 & this.bitField0_) == 4);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasActivityId()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean hasLastModifiedUsec()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        if ((hasActivity()) && (!getActivity().isInitialized()))
        {
          this.memoizedIsInitialized = 0;
          i = 0;
        }
        else
        {
          this.memoizedIsInitialized = i;
        }
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeBytes(1, getActivityIdBytes());
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeInt64(2, this.lastModifiedUsec_);
      if ((0x4 & this.bitField0_) == 4)
        paramCodedOutputStream.writeMessage(3, this.activity_);
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Network.ActivityOrder, Builder>
      implements Network.ActivityOrderOrBuilder
    {
      private Object activityId_ = "";
      private Data.PerfectStreamActivity activity_ = Data.PerfectStreamActivity.getDefaultInstance();
      private int bitField0_;
      private long lastModifiedUsec_;

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 10:
            this.bitField0_ = (0x1 | this.bitField0_);
            this.activityId_ = paramCodedInputStream.readBytes();
            break;
          case 16:
            this.bitField0_ = (0x2 | this.bitField0_);
            this.lastModifiedUsec_ = paramCodedInputStream.readInt64();
            break;
          case 26:
          }
          Data.PerfectStreamActivity.Builder localBuilder = Data.PerfectStreamActivity.newBuilder();
          if (hasActivity())
            localBuilder.mergeFrom(getActivity());
          paramCodedInputStream.readMessage(localBuilder, paramExtensionRegistryLite);
          setActivity(localBuilder.buildPartial());
        }
      }

      public final Network.ActivityOrder build()
      {
        Network.ActivityOrder localActivityOrder = buildPartial();
        if (!localActivityOrder.isInitialized())
          throw new UninitializedMessageException();
        return localActivityOrder;
      }

      public final Network.ActivityOrder buildPartial()
      {
        Network.ActivityOrder localActivityOrder = new Network.ActivityOrder(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Network.ActivityOrder.access$9202(localActivityOrder, this.activityId_);
        if ((i & 0x2) == 2)
          k |= 2;
        Network.ActivityOrder.access$9302(localActivityOrder, this.lastModifiedUsec_);
        if ((i & 0x4) == 4)
          k |= 4;
        Network.ActivityOrder.access$9402(localActivityOrder, this.activity_);
        Network.ActivityOrder.access$9502(localActivityOrder, k);
        return localActivityOrder;
      }

      public final Builder clear()
      {
        super.clear();
        this.activityId_ = "";
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.lastModifiedUsec_ = 0L;
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.activity_ = Data.PerfectStreamActivity.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        return this;
      }

      public final Builder clearActivity()
      {
        this.activity_ = Data.PerfectStreamActivity.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        return this;
      }

      public final Builder clearActivityId()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.activityId_ = Network.ActivityOrder.getDefaultInstance().getActivityId();
        return this;
      }

      public final Builder clearLastModifiedUsec()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.lastModifiedUsec_ = 0L;
        return this;
      }

      public final Data.PerfectStreamActivity getActivity()
      {
        return this.activity_;
      }

      public final String getActivityId()
      {
        Object localObject = this.activityId_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.activityId_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final Network.ActivityOrder getDefaultInstanceForType()
      {
        return Network.ActivityOrder.getDefaultInstance();
      }

      public final long getLastModifiedUsec()
      {
        return this.lastModifiedUsec_;
      }

      public final boolean hasActivity()
      {
        if ((0x4 & this.bitField0_) == 4);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasActivityId()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean hasLastModifiedUsec()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean isInitialized()
      {
        if ((hasActivity()) && (!getActivity().isInitialized()));
        for (boolean bool = false; ; bool = true)
          return bool;
      }

      public final Builder mergeFrom(Network.ActivityOrder paramActivityOrder)
      {
        if (paramActivityOrder == Network.ActivityOrder.getDefaultInstance());
        do
        {
          return this;
          if (paramActivityOrder.hasActivityId())
            setActivityId(paramActivityOrder.getActivityId());
          if (paramActivityOrder.hasLastModifiedUsec())
            setLastModifiedUsec(paramActivityOrder.getLastModifiedUsec());
        }
        while (!paramActivityOrder.hasActivity());
        Data.PerfectStreamActivity localPerfectStreamActivity = paramActivityOrder.getActivity();
        if (((0x4 & this.bitField0_) == 4) && (this.activity_ != Data.PerfectStreamActivity.getDefaultInstance()));
        for (this.activity_ = Data.PerfectStreamActivity.newBuilder(this.activity_).mergeFrom(localPerfectStreamActivity).buildPartial(); ; this.activity_ = localPerfectStreamActivity)
        {
          this.bitField0_ = (0x4 | this.bitField0_);
          break;
        }
      }

      public final Builder setActivity(Data.PerfectStreamActivity.Builder paramBuilder)
      {
        this.activity_ = paramBuilder.build();
        this.bitField0_ = (0x4 | this.bitField0_);
        return this;
      }

      public final Builder setActivity(Data.PerfectStreamActivity paramPerfectStreamActivity)
      {
        if (paramPerfectStreamActivity == null)
          throw new NullPointerException();
        this.activity_ = paramPerfectStreamActivity;
        this.bitField0_ = (0x4 | this.bitField0_);
        return this;
      }

      public final Builder setActivityId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x1 | this.bitField0_);
        this.activityId_ = paramString;
        return this;
      }

      public final Builder setLastModifiedUsec(long paramLong)
      {
        this.bitField0_ = (0x2 | this.bitField0_);
        this.lastModifiedUsec_ = paramLong;
        return this;
      }
    }
  }

  public static abstract interface ActivityOrderOrBuilder extends MessageLiteOrBuilder
  {
    public abstract Data.PerfectStreamActivity getActivity();

    public abstract String getActivityId();

    public abstract long getLastModifiedUsec();

    public abstract boolean hasActivity();

    public abstract boolean hasActivityId();

    public abstract boolean hasLastModifiedUsec();
  }

  public static final class AnalyticsLogRequest extends GeneratedMessageLite
    implements Network.AnalyticsLogRequestOrBuilder
  {
    private static final AnalyticsLogRequest defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private Analytics.LogEnvelope logEnvelope_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;

    static
    {
      AnalyticsLogRequest localAnalyticsLogRequest = new AnalyticsLogRequest();
      defaultInstance = localAnalyticsLogRequest;
      localAnalyticsLogRequest.logEnvelope_ = Analytics.LogEnvelope.getDefaultInstance();
    }

    private AnalyticsLogRequest()
    {
    }

    private AnalyticsLogRequest(Builder paramBuilder)
    {
      super();
    }

    public static AnalyticsLogRequest getDefaultInstance()
    {
      return defaultInstance;
    }

    public final AnalyticsLogRequest getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final Analytics.LogEnvelope getLogEnvelope()
    {
      return this.logEnvelope_;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeMessageSize(1, this.logEnvelope_);
        this.memoizedSerializedSize = k;
      }
    }

    public final boolean hasLogEnvelope()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeMessage(1, this.logEnvelope_);
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Network.AnalyticsLogRequest, Builder>
      implements Network.AnalyticsLogRequestOrBuilder
    {
      private int bitField0_;
      private Analytics.LogEnvelope logEnvelope_ = Analytics.LogEnvelope.getDefaultInstance();

      private Network.AnalyticsLogRequest buildPartial()
      {
        Network.AnalyticsLogRequest localAnalyticsLogRequest = new Network.AnalyticsLogRequest(this, (byte)0);
        int i = 0x1 & this.bitField0_;
        int j = 0;
        if (i == 1)
          j = 1;
        Network.AnalyticsLogRequest.access$52202(localAnalyticsLogRequest, this.logEnvelope_);
        Network.AnalyticsLogRequest.access$52302(localAnalyticsLogRequest, j);
        return localAnalyticsLogRequest;
      }

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 10:
          }
          Analytics.LogEnvelope.Builder localBuilder = Analytics.LogEnvelope.newBuilder();
          if (hasLogEnvelope())
            localBuilder.mergeFrom(getLogEnvelope());
          paramCodedInputStream.readMessage(localBuilder, paramExtensionRegistryLite);
          setLogEnvelope(localBuilder.buildPartial());
        }
      }

      public final Builder clear()
      {
        super.clear();
        this.logEnvelope_ = Analytics.LogEnvelope.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        return this;
      }

      public final Builder clearLogEnvelope()
      {
        this.logEnvelope_ = Analytics.LogEnvelope.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        return this;
      }

      public final Network.AnalyticsLogRequest getDefaultInstanceForType()
      {
        return Network.AnalyticsLogRequest.getDefaultInstance();
      }

      public final Analytics.LogEnvelope getLogEnvelope()
      {
        return this.logEnvelope_;
      }

      public final boolean hasLogEnvelope()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Network.AnalyticsLogRequest paramAnalyticsLogRequest)
      {
        if (paramAnalyticsLogRequest == Network.AnalyticsLogRequest.getDefaultInstance());
        while (!paramAnalyticsLogRequest.hasLogEnvelope())
          return this;
        Analytics.LogEnvelope localLogEnvelope = paramAnalyticsLogRequest.getLogEnvelope();
        if (((0x1 & this.bitField0_) == 1) && (this.logEnvelope_ != Analytics.LogEnvelope.getDefaultInstance()));
        for (this.logEnvelope_ = Analytics.LogEnvelope.newBuilder(this.logEnvelope_).mergeFrom(localLogEnvelope).buildPartial(); ; this.logEnvelope_ = localLogEnvelope)
        {
          this.bitField0_ = (0x1 | this.bitField0_);
          break;
        }
      }

      public final Builder setLogEnvelope(Analytics.LogEnvelope.Builder paramBuilder)
      {
        this.logEnvelope_ = paramBuilder.build();
        this.bitField0_ = (0x1 | this.bitField0_);
        return this;
      }

      public final Builder setLogEnvelope(Analytics.LogEnvelope paramLogEnvelope)
      {
        if (paramLogEnvelope == null)
          throw new NullPointerException();
        this.logEnvelope_ = paramLogEnvelope;
        this.bitField0_ = (0x1 | this.bitField0_);
        return this;
      }
    }
  }

  public static abstract interface AnalyticsLogRequestOrBuilder extends MessageLiteOrBuilder
  {
    public abstract Analytics.LogEnvelope getLogEnvelope();

    public abstract boolean hasLogEnvelope();
  }

  public static final class AnalyticsLogResponse extends GeneratedMessageLite
    implements Network.AnalyticsLogResponseOrBuilder
  {
    private static final AnalyticsLogResponse defaultInstance = new AnalyticsLogResponse();
    private static final long serialVersionUID;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;

    private AnalyticsLogResponse()
    {
    }

    private AnalyticsLogResponse(Builder paramBuilder)
    {
      super();
    }

    public static AnalyticsLogResponse getDefaultInstance()
    {
      return defaultInstance;
    }

    public final AnalyticsLogResponse getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      while (true)
      {
        return i;
        this.memoizedSerializedSize = 0;
        i = 0;
      }
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Network.AnalyticsLogResponse, Builder>
      implements Network.AnalyticsLogResponseOrBuilder
    {
      private Network.AnalyticsLogResponse buildPartial()
      {
        return new Network.AnalyticsLogResponse(this, (byte)0);
      }

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        int i;
        do
        {
          i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
          case 0:
          }
        }
        while (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i));
        return this;
      }

      public final Builder clear()
      {
        super.clear();
        return this;
      }

      public final Network.AnalyticsLogResponse getDefaultInstanceForType()
      {
        return Network.AnalyticsLogResponse.getDefaultInstance();
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Network.AnalyticsLogResponse paramAnalyticsLogResponse)
      {
        if (paramAnalyticsLogResponse == Network.AnalyticsLogResponse.getDefaultInstance());
        return this;
      }
    }
  }

  public static abstract interface AnalyticsLogResponseOrBuilder extends MessageLiteOrBuilder
  {
  }

  public static final class BatchRequest extends GeneratedMessageLite
    implements Network.BatchRequestOrBuilder
  {
    private static final BatchRequest defaultInstance;
    private static final long serialVersionUID;
    private Object actionToken_;
    private int bitField0_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private List<Network.Request> request_;
    private boolean sendActionTokenHeader_;
    private boolean unauth_;

    static
    {
      BatchRequest localBatchRequest = new BatchRequest();
      defaultInstance = localBatchRequest;
      localBatchRequest.request_ = Collections.emptyList();
      localBatchRequest.actionToken_ = "";
      localBatchRequest.unauth_ = false;
      localBatchRequest.sendActionTokenHeader_ = false;
    }

    private BatchRequest()
    {
    }

    private BatchRequest(Builder paramBuilder)
    {
      super();
    }

    private ByteString getActionTokenBytes()
    {
      Object localObject = this.actionToken_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.actionToken_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static BatchRequest getDefaultInstance()
    {
      return defaultInstance;
    }

    public static Builder newBuilder()
    {
      return Builder.access$900();
    }

    public final String getActionToken()
    {
      Object localObject1 = this.actionToken_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.actionToken_ = str;
      }
    }

    public final BatchRequest getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final Network.Request getRequest(int paramInt)
    {
      return (Network.Request)this.request_.get(paramInt);
    }

    public final int getRequestCount()
    {
      return this.request_.size();
    }

    public final List<Network.Request> getRequestList()
    {
      return this.request_;
    }

    public final Network.RequestOrBuilder getRequestOrBuilder(int paramInt)
    {
      return (Network.RequestOrBuilder)this.request_.get(paramInt);
    }

    public final List<? extends Network.RequestOrBuilder> getRequestOrBuilderList()
    {
      return this.request_;
    }

    public final boolean getSendActionTokenHeader()
    {
      return this.sendActionTokenHeader_;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int j;
      for (int m = i; ; m = j)
      {
        return m;
        j = 0;
        for (int k = 0; k < this.request_.size(); k++)
          j += CodedOutputStream.computeMessageSize(1, (MessageLite)this.request_.get(k));
        if ((0x1 & this.bitField0_) == 1)
          j += CodedOutputStream.computeBytesSize(2, getActionTokenBytes());
        if ((0x2 & this.bitField0_) == 2)
          j += CodedOutputStream.computeBoolSize(3, this.unauth_);
        if ((0x4 & this.bitField0_) == 4)
          j += CodedOutputStream.computeBoolSize(4, this.sendActionTokenHeader_);
        this.memoizedSerializedSize = j;
      }
    }

    public final boolean getUnauth()
    {
      return this.unauth_;
    }

    public final boolean hasActionToken()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean hasSendActionTokenHeader()
    {
      if ((0x4 & this.bitField0_) == 4);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasUnauth()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      for (int i = 0; i < this.request_.size(); i++)
        paramCodedOutputStream.writeMessage(1, (MessageLite)this.request_.get(i));
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeBytes(2, getActionTokenBytes());
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeBool(3, this.unauth_);
      if ((0x4 & this.bitField0_) == 4)
        paramCodedOutputStream.writeBool(4, this.sendActionTokenHeader_);
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Network.BatchRequest, Builder>
      implements Network.BatchRequestOrBuilder
    {
      private Object actionToken_ = "";
      private int bitField0_;
      private List<Network.Request> request_ = Collections.emptyList();
      private boolean sendActionTokenHeader_;
      private boolean unauth_;

      private Network.BatchRequest buildPartial()
      {
        Network.BatchRequest localBatchRequest = new Network.BatchRequest(this, (byte)0);
        int i = this.bitField0_;
        if ((0x1 & this.bitField0_) == 1)
        {
          this.request_ = Collections.unmodifiableList(this.request_);
          this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        }
        Network.BatchRequest.access$1102(localBatchRequest, this.request_);
        int j = i & 0x2;
        int k = 0;
        if (j == 2)
          k = 1;
        Network.BatchRequest.access$1202(localBatchRequest, this.actionToken_);
        if ((i & 0x4) == 4)
          k |= 2;
        Network.BatchRequest.access$1302(localBatchRequest, this.unauth_);
        if ((i & 0x8) == 8)
          k |= 4;
        Network.BatchRequest.access$1402(localBatchRequest, this.sendActionTokenHeader_);
        Network.BatchRequest.access$1502(localBatchRequest, k);
        return localBatchRequest;
      }

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private void ensureRequestIsMutable()
      {
        if ((0x1 & this.bitField0_) != 1)
        {
          this.request_ = new ArrayList(this.request_);
          this.bitField0_ = (0x1 | this.bitField0_);
        }
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 10:
            Network.Request.Builder localBuilder = Network.Request.newBuilder();
            paramCodedInputStream.readMessage(localBuilder, paramExtensionRegistryLite);
            addRequest(localBuilder.buildPartial());
            break;
          case 18:
            this.bitField0_ = (0x2 | this.bitField0_);
            this.actionToken_ = paramCodedInputStream.readBytes();
            break;
          case 24:
            this.bitField0_ = (0x4 | this.bitField0_);
            this.unauth_ = paramCodedInputStream.readBool();
            break;
          case 32:
          }
          this.bitField0_ = (0x8 | this.bitField0_);
          this.sendActionTokenHeader_ = paramCodedInputStream.readBool();
        }
      }

      public final Builder addAllRequest(Iterable<? extends Network.Request> paramIterable)
      {
        ensureRequestIsMutable();
        GeneratedMessageLite.Builder.addAll(paramIterable, this.request_);
        return this;
      }

      public final Builder addRequest(int paramInt, Network.Request.Builder paramBuilder)
      {
        ensureRequestIsMutable();
        this.request_.add(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder addRequest(int paramInt, Network.Request paramRequest)
      {
        if (paramRequest == null)
          throw new NullPointerException();
        ensureRequestIsMutable();
        this.request_.add(paramInt, paramRequest);
        return this;
      }

      public final Builder addRequest(Network.Request.Builder paramBuilder)
      {
        ensureRequestIsMutable();
        this.request_.add(paramBuilder.build());
        return this;
      }

      public final Builder addRequest(Network.Request paramRequest)
      {
        if (paramRequest == null)
          throw new NullPointerException();
        ensureRequestIsMutable();
        this.request_.add(paramRequest);
        return this;
      }

      public final Network.BatchRequest build()
      {
        Network.BatchRequest localBatchRequest = buildPartial();
        if (!localBatchRequest.isInitialized())
          throw new UninitializedMessageException();
        return localBatchRequest;
      }

      public final Builder clear()
      {
        super.clear();
        this.request_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.actionToken_ = "";
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.unauth_ = false;
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.sendActionTokenHeader_ = false;
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        return this;
      }

      public final Builder clearActionToken()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.actionToken_ = Network.BatchRequest.getDefaultInstance().getActionToken();
        return this;
      }

      public final Builder clearRequest()
      {
        this.request_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        return this;
      }

      public final Builder clearSendActionTokenHeader()
      {
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        this.sendActionTokenHeader_ = false;
        return this;
      }

      public final Builder clearUnauth()
      {
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.unauth_ = false;
        return this;
      }

      public final String getActionToken()
      {
        Object localObject = this.actionToken_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.actionToken_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final Network.BatchRequest getDefaultInstanceForType()
      {
        return Network.BatchRequest.getDefaultInstance();
      }

      public final Network.Request getRequest(int paramInt)
      {
        return (Network.Request)this.request_.get(paramInt);
      }

      public final int getRequestCount()
      {
        return this.request_.size();
      }

      public final List<Network.Request> getRequestList()
      {
        return Collections.unmodifiableList(this.request_);
      }

      public final boolean getSendActionTokenHeader()
      {
        return this.sendActionTokenHeader_;
      }

      public final boolean getUnauth()
      {
        return this.unauth_;
      }

      public final boolean hasActionToken()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasSendActionTokenHeader()
      {
        if ((0x8 & this.bitField0_) == 8);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasUnauth()
      {
        if ((0x4 & this.bitField0_) == 4);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Network.BatchRequest paramBatchRequest)
      {
        if (paramBatchRequest == Network.BatchRequest.getDefaultInstance())
          return this;
        if (!paramBatchRequest.request_.isEmpty())
        {
          if (!this.request_.isEmpty())
            break label103;
          this.request_ = paramBatchRequest.request_;
          this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        }
        while (true)
        {
          if (paramBatchRequest.hasActionToken())
            setActionToken(paramBatchRequest.getActionToken());
          if (paramBatchRequest.hasUnauth())
            setUnauth(paramBatchRequest.getUnauth());
          if (!paramBatchRequest.hasSendActionTokenHeader())
            break;
          setSendActionTokenHeader(paramBatchRequest.getSendActionTokenHeader());
          break;
          label103: ensureRequestIsMutable();
          this.request_.addAll(paramBatchRequest.request_);
        }
      }

      public final Builder setActionToken(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x2 | this.bitField0_);
        this.actionToken_ = paramString;
        return this;
      }

      public final Builder setRequest(int paramInt, Network.Request.Builder paramBuilder)
      {
        ensureRequestIsMutable();
        this.request_.set(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder setRequest(int paramInt, Network.Request paramRequest)
      {
        if (paramRequest == null)
          throw new NullPointerException();
        ensureRequestIsMutable();
        this.request_.set(paramInt, paramRequest);
        return this;
      }

      public final Builder setSendActionTokenHeader(boolean paramBoolean)
      {
        this.bitField0_ = (0x8 | this.bitField0_);
        this.sendActionTokenHeader_ = paramBoolean;
        return this;
      }

      public final Builder setUnauth(boolean paramBoolean)
      {
        this.bitField0_ = (0x4 | this.bitField0_);
        this.unauth_ = paramBoolean;
        return this;
      }
    }
  }

  public static abstract interface BatchRequestOrBuilder extends MessageLiteOrBuilder
  {
    public abstract String getActionToken();

    public abstract Network.Request getRequest(int paramInt);

    public abstract int getRequestCount();

    public abstract List<Network.Request> getRequestList();

    public abstract boolean getSendActionTokenHeader();

    public abstract boolean getUnauth();

    public abstract boolean hasActionToken();

    public abstract boolean hasSendActionTokenHeader();

    public abstract boolean hasUnauth();
  }

  public static final class BatchResponse extends GeneratedMessageLite
    implements Network.BatchResponseOrBuilder
  {
    private static final BatchResponse defaultInstance;
    private static final long serialVersionUID;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private List<Network.Response> response_;

    static
    {
      BatchResponse localBatchResponse = new BatchResponse();
      defaultInstance = localBatchResponse;
      localBatchResponse.response_ = Collections.emptyList();
    }

    private BatchResponse()
    {
    }

    private BatchResponse(Builder paramBuilder)
    {
      super();
    }

    public static BatchResponse getDefaultInstance()
    {
      return defaultInstance;
    }

    public static BatchResponse parseFrom(InputStream paramInputStream)
      throws IOException
    {
      return Builder.access$2600((Builder)Builder.access$2700().mergeFrom(paramInputStream));
    }

    public final BatchResponse getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final Network.Response getResponse(int paramInt)
    {
      return (Network.Response)this.response_.get(paramInt);
    }

    public final int getResponseCount()
    {
      return this.response_.size();
    }

    public final List<Network.Response> getResponseList()
    {
      return this.response_;
    }

    public final Network.ResponseOrBuilder getResponseOrBuilder(int paramInt)
    {
      return (Network.ResponseOrBuilder)this.response_.get(paramInt);
    }

    public final List<? extends Network.ResponseOrBuilder> getResponseOrBuilderList()
    {
      return this.response_;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int j;
      for (int m = i; ; m = j)
      {
        return m;
        j = 0;
        for (int k = 0; k < this.response_.size(); k++)
          j += CodedOutputStream.computeMessageSize(1, (MessageLite)this.response_.get(k));
        this.memoizedSerializedSize = j;
      }
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      for (int i = 0; i < this.response_.size(); i++)
        paramCodedOutputStream.writeMessage(1, (MessageLite)this.response_.get(i));
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Network.BatchResponse, Builder>
      implements Network.BatchResponseOrBuilder
    {
      private int bitField0_;
      private List<Network.Response> response_ = Collections.emptyList();

      private Network.BatchResponse buildPartial()
      {
        Network.BatchResponse localBatchResponse = new Network.BatchResponse(this, (byte)0);
        if ((0x1 & this.bitField0_) == 1)
        {
          this.response_ = Collections.unmodifiableList(this.response_);
          this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        }
        Network.BatchResponse.access$2902(localBatchResponse, this.response_);
        return localBatchResponse;
      }

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private void ensureResponseIsMutable()
      {
        if ((0x1 & this.bitField0_) != 1)
        {
          this.response_ = new ArrayList(this.response_);
          this.bitField0_ = (0x1 | this.bitField0_);
        }
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 10:
          }
          Network.Response.Builder localBuilder = Network.Response.newBuilder();
          paramCodedInputStream.readMessage(localBuilder, paramExtensionRegistryLite);
          addResponse(localBuilder.buildPartial());
        }
      }

      public final Builder addAllResponse(Iterable<? extends Network.Response> paramIterable)
      {
        ensureResponseIsMutable();
        GeneratedMessageLite.Builder.addAll(paramIterable, this.response_);
        return this;
      }

      public final Builder addResponse(int paramInt, Network.Response.Builder paramBuilder)
      {
        ensureResponseIsMutable();
        this.response_.add(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder addResponse(int paramInt, Network.Response paramResponse)
      {
        if (paramResponse == null)
          throw new NullPointerException();
        ensureResponseIsMutable();
        this.response_.add(paramInt, paramResponse);
        return this;
      }

      public final Builder addResponse(Network.Response.Builder paramBuilder)
      {
        ensureResponseIsMutable();
        this.response_.add(paramBuilder.build());
        return this;
      }

      public final Builder addResponse(Network.Response paramResponse)
      {
        if (paramResponse == null)
          throw new NullPointerException();
        ensureResponseIsMutable();
        this.response_.add(paramResponse);
        return this;
      }

      public final Builder clear()
      {
        super.clear();
        this.response_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        return this;
      }

      public final Builder clearResponse()
      {
        this.response_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        return this;
      }

      public final Network.BatchResponse getDefaultInstanceForType()
      {
        return Network.BatchResponse.getDefaultInstance();
      }

      public final Network.Response getResponse(int paramInt)
      {
        return (Network.Response)this.response_.get(paramInt);
      }

      public final int getResponseCount()
      {
        return this.response_.size();
      }

      public final List<Network.Response> getResponseList()
      {
        return Collections.unmodifiableList(this.response_);
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Network.BatchResponse paramBatchResponse)
      {
        if (paramBatchResponse == Network.BatchResponse.getDefaultInstance());
        while (true)
        {
          return this;
          if (!paramBatchResponse.response_.isEmpty())
            if (this.response_.isEmpty())
            {
              this.response_ = paramBatchResponse.response_;
              this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
            }
            else
            {
              ensureResponseIsMutable();
              this.response_.addAll(paramBatchResponse.response_);
            }
        }
      }

      public final Builder setResponse(int paramInt, Network.Response.Builder paramBuilder)
      {
        ensureResponseIsMutable();
        this.response_.set(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder setResponse(int paramInt, Network.Response paramResponse)
      {
        if (paramResponse == null)
          throw new NullPointerException();
        ensureResponseIsMutable();
        this.response_.set(paramInt, paramResponse);
        return this;
      }
    }
  }

  public static abstract interface BatchResponseOrBuilder extends MessageLiteOrBuilder
  {
    public abstract Network.Response getResponse(int paramInt);

    public abstract int getResponseCount();

    public abstract List<Network.Response> getResponseList();
  }

  public static final class CountriesRequest extends GeneratedMessageLite
    implements Network.CountriesRequestOrBuilder
  {
    private static final CountriesRequest defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private boolean returnKnownPhoneNumber_;

    static
    {
      CountriesRequest localCountriesRequest = new CountriesRequest();
      defaultInstance = localCountriesRequest;
      localCountriesRequest.returnKnownPhoneNumber_ = true;
    }

    private CountriesRequest()
    {
    }

    private CountriesRequest(Builder paramBuilder)
    {
      super();
    }

    public static CountriesRequest getDefaultInstance()
    {
      return defaultInstance;
    }

    public final CountriesRequest getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final boolean getReturnKnownPhoneNumber()
    {
      return this.returnKnownPhoneNumber_;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeBoolSize(1, this.returnKnownPhoneNumber_);
        this.memoizedSerializedSize = k;
      }
    }

    public final boolean hasReturnKnownPhoneNumber()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeBool(1, this.returnKnownPhoneNumber_);
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Network.CountriesRequest, Builder>
      implements Network.CountriesRequestOrBuilder
    {
      private int bitField0_;
      private boolean returnKnownPhoneNumber_ = true;

      private Network.CountriesRequest buildPartial()
      {
        Network.CountriesRequest localCountriesRequest = new Network.CountriesRequest(this, (byte)0);
        int i = 0x1 & this.bitField0_;
        int j = 0;
        if (i == 1)
          j = 1;
        Network.CountriesRequest.access$70402(localCountriesRequest, this.returnKnownPhoneNumber_);
        Network.CountriesRequest.access$70502(localCountriesRequest, j);
        return localCountriesRequest;
      }

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 8:
          }
          this.bitField0_ = (0x1 | this.bitField0_);
          this.returnKnownPhoneNumber_ = paramCodedInputStream.readBool();
        }
      }

      public final Builder clear()
      {
        super.clear();
        this.returnKnownPhoneNumber_ = true;
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        return this;
      }

      public final Builder clearReturnKnownPhoneNumber()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.returnKnownPhoneNumber_ = true;
        return this;
      }

      public final Network.CountriesRequest getDefaultInstanceForType()
      {
        return Network.CountriesRequest.getDefaultInstance();
      }

      public final boolean getReturnKnownPhoneNumber()
      {
        return this.returnKnownPhoneNumber_;
      }

      public final boolean hasReturnKnownPhoneNumber()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Network.CountriesRequest paramCountriesRequest)
      {
        if (paramCountriesRequest == Network.CountriesRequest.getDefaultInstance());
        while (true)
        {
          return this;
          if (paramCountriesRequest.hasReturnKnownPhoneNumber())
            setReturnKnownPhoneNumber(paramCountriesRequest.getReturnKnownPhoneNumber());
        }
      }

      public final Builder setReturnKnownPhoneNumber(boolean paramBoolean)
      {
        this.bitField0_ = (0x1 | this.bitField0_);
        this.returnKnownPhoneNumber_ = paramBoolean;
        return this;
      }
    }
  }

  public static abstract interface CountriesRequestOrBuilder extends MessageLiteOrBuilder
  {
    public abstract boolean getReturnKnownPhoneNumber();

    public abstract boolean hasReturnKnownPhoneNumber();
  }

  public static final class CountriesResponse extends GeneratedMessageLite
    implements Network.CountriesResponseOrBuilder
  {
    private static final CountriesResponse defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private List<Data.Country> country_;
    private Data.Country currentCountry_;
    private Data.Phone knownPhoneNumber_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;

    static
    {
      CountriesResponse localCountriesResponse = new CountriesResponse();
      defaultInstance = localCountriesResponse;
      localCountriesResponse.country_ = Collections.emptyList();
      localCountriesResponse.currentCountry_ = Data.Country.getDefaultInstance();
      localCountriesResponse.knownPhoneNumber_ = Data.Phone.getDefaultInstance();
    }

    private CountriesResponse()
    {
    }

    private CountriesResponse(Builder paramBuilder)
    {
      super();
    }

    public static CountriesResponse getDefaultInstance()
    {
      return defaultInstance;
    }

    public final Data.Country getCountry(int paramInt)
    {
      return (Data.Country)this.country_.get(paramInt);
    }

    public final int getCountryCount()
    {
      return this.country_.size();
    }

    public final List<Data.Country> getCountryList()
    {
      return this.country_;
    }

    public final Data.CountryOrBuilder getCountryOrBuilder(int paramInt)
    {
      return (Data.CountryOrBuilder)this.country_.get(paramInt);
    }

    public final List<? extends Data.CountryOrBuilder> getCountryOrBuilderList()
    {
      return this.country_;
    }

    public final Data.Country getCurrentCountry()
    {
      return this.currentCountry_;
    }

    public final CountriesResponse getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final Data.Phone getKnownPhoneNumber()
    {
      return this.knownPhoneNumber_;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int j;
      for (int m = i; ; m = j)
      {
        return m;
        j = 0;
        for (int k = 0; k < this.country_.size(); k++)
          j += CodedOutputStream.computeMessageSize(1, (MessageLite)this.country_.get(k));
        if ((0x1 & this.bitField0_) == 1)
          j += CodedOutputStream.computeMessageSize(2, this.currentCountry_);
        if ((0x2 & this.bitField0_) == 2)
          j += CodedOutputStream.computeMessageSize(3, this.knownPhoneNumber_);
        this.memoizedSerializedSize = j;
      }
    }

    public final boolean hasCurrentCountry()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean hasKnownPhoneNumber()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      for (int i = 0; i < this.country_.size(); i++)
        paramCodedOutputStream.writeMessage(1, (MessageLite)this.country_.get(i));
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeMessage(2, this.currentCountry_);
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeMessage(3, this.knownPhoneNumber_);
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Network.CountriesResponse, Builder>
      implements Network.CountriesResponseOrBuilder
    {
      private int bitField0_;
      private List<Data.Country> country_ = Collections.emptyList();
      private Data.Country currentCountry_ = Data.Country.getDefaultInstance();
      private Data.Phone knownPhoneNumber_ = Data.Phone.getDefaultInstance();

      private Network.CountriesResponse buildPartial()
      {
        Network.CountriesResponse localCountriesResponse = new Network.CountriesResponse(this, (byte)0);
        int i = this.bitField0_;
        if ((0x1 & this.bitField0_) == 1)
        {
          this.country_ = Collections.unmodifiableList(this.country_);
          this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        }
        Network.CountriesResponse.access$70902(localCountriesResponse, this.country_);
        int j = i & 0x2;
        int k = 0;
        if (j == 2)
          k = 1;
        Network.CountriesResponse.access$71002(localCountriesResponse, this.currentCountry_);
        if ((i & 0x4) == 4)
          k |= 2;
        Network.CountriesResponse.access$71102(localCountriesResponse, this.knownPhoneNumber_);
        Network.CountriesResponse.access$71202(localCountriesResponse, k);
        return localCountriesResponse;
      }

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private void ensureCountryIsMutable()
      {
        if ((0x1 & this.bitField0_) != 1)
        {
          this.country_ = new ArrayList(this.country_);
          this.bitField0_ = (0x1 | this.bitField0_);
        }
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 10:
            Data.Country.Builder localBuilder2 = Data.Country.newBuilder();
            paramCodedInputStream.readMessage(localBuilder2, paramExtensionRegistryLite);
            addCountry(localBuilder2.buildPartial());
            break;
          case 18:
            Data.Country.Builder localBuilder1 = Data.Country.newBuilder();
            if (hasCurrentCountry())
              localBuilder1.mergeFrom(getCurrentCountry());
            paramCodedInputStream.readMessage(localBuilder1, paramExtensionRegistryLite);
            setCurrentCountry(localBuilder1.buildPartial());
            break;
          case 26:
          }
          Data.Phone.Builder localBuilder = Data.Phone.newBuilder();
          if (hasKnownPhoneNumber())
            localBuilder.mergeFrom(getKnownPhoneNumber());
          paramCodedInputStream.readMessage(localBuilder, paramExtensionRegistryLite);
          setKnownPhoneNumber(localBuilder.buildPartial());
        }
      }

      public final Builder addAllCountry(Iterable<? extends Data.Country> paramIterable)
      {
        ensureCountryIsMutable();
        GeneratedMessageLite.Builder.addAll(paramIterable, this.country_);
        return this;
      }

      public final Builder addCountry(int paramInt, Data.Country.Builder paramBuilder)
      {
        ensureCountryIsMutable();
        this.country_.add(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder addCountry(int paramInt, Data.Country paramCountry)
      {
        if (paramCountry == null)
          throw new NullPointerException();
        ensureCountryIsMutable();
        this.country_.add(paramInt, paramCountry);
        return this;
      }

      public final Builder addCountry(Data.Country.Builder paramBuilder)
      {
        ensureCountryIsMutable();
        this.country_.add(paramBuilder.build());
        return this;
      }

      public final Builder addCountry(Data.Country paramCountry)
      {
        if (paramCountry == null)
          throw new NullPointerException();
        ensureCountryIsMutable();
        this.country_.add(paramCountry);
        return this;
      }

      public final Builder clear()
      {
        super.clear();
        this.country_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.currentCountry_ = Data.Country.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.knownPhoneNumber_ = Data.Phone.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        return this;
      }

      public final Builder clearCountry()
      {
        this.country_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        return this;
      }

      public final Builder clearCurrentCountry()
      {
        this.currentCountry_ = Data.Country.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        return this;
      }

      public final Builder clearKnownPhoneNumber()
      {
        this.knownPhoneNumber_ = Data.Phone.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        return this;
      }

      public final Data.Country getCountry(int paramInt)
      {
        return (Data.Country)this.country_.get(paramInt);
      }

      public final int getCountryCount()
      {
        return this.country_.size();
      }

      public final List<Data.Country> getCountryList()
      {
        return Collections.unmodifiableList(this.country_);
      }

      public final Data.Country getCurrentCountry()
      {
        return this.currentCountry_;
      }

      public final Network.CountriesResponse getDefaultInstanceForType()
      {
        return Network.CountriesResponse.getDefaultInstance();
      }

      public final Data.Phone getKnownPhoneNumber()
      {
        return this.knownPhoneNumber_;
      }

      public final boolean hasCurrentCountry()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasKnownPhoneNumber()
      {
        if ((0x4 & this.bitField0_) == 4);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Network.CountriesResponse paramCountriesResponse)
      {
        if (paramCountriesResponse == Network.CountriesResponse.getDefaultInstance());
        label52: Data.Country localCountry;
        label102: 
        do
        {
          return this;
          if (!paramCountriesResponse.country_.isEmpty())
          {
            if (!this.country_.isEmpty())
              break;
            this.country_ = paramCountriesResponse.country_;
            this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
          }
          if (paramCountriesResponse.hasCurrentCountry())
          {
            localCountry = paramCountriesResponse.getCurrentCountry();
            if (((0x2 & this.bitField0_) != 2) || (this.currentCountry_ == Data.Country.getDefaultInstance()))
              break label196;
            this.currentCountry_ = Data.Country.newBuilder(this.currentCountry_).mergeFrom(localCountry).buildPartial();
            this.bitField0_ = (0x2 | this.bitField0_);
          }
        }
        while (!paramCountriesResponse.hasKnownPhoneNumber());
        Data.Phone localPhone = paramCountriesResponse.getKnownPhoneNumber();
        if (((0x4 & this.bitField0_) == 4) && (this.knownPhoneNumber_ != Data.Phone.getDefaultInstance()));
        for (this.knownPhoneNumber_ = Data.Phone.newBuilder(this.knownPhoneNumber_).mergeFrom(localPhone).buildPartial(); ; this.knownPhoneNumber_ = localPhone)
        {
          this.bitField0_ = (0x4 | this.bitField0_);
          break;
          ensureCountryIsMutable();
          this.country_.addAll(paramCountriesResponse.country_);
          break label52;
          label196: this.currentCountry_ = localCountry;
          break label102;
        }
      }

      public final Builder setCountry(int paramInt, Data.Country.Builder paramBuilder)
      {
        ensureCountryIsMutable();
        this.country_.set(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder setCountry(int paramInt, Data.Country paramCountry)
      {
        if (paramCountry == null)
          throw new NullPointerException();
        ensureCountryIsMutable();
        this.country_.set(paramInt, paramCountry);
        return this;
      }

      public final Builder setCurrentCountry(Data.Country.Builder paramBuilder)
      {
        this.currentCountry_ = paramBuilder.build();
        this.bitField0_ = (0x2 | this.bitField0_);
        return this;
      }

      public final Builder setCurrentCountry(Data.Country paramCountry)
      {
        if (paramCountry == null)
          throw new NullPointerException();
        this.currentCountry_ = paramCountry;
        this.bitField0_ = (0x2 | this.bitField0_);
        return this;
      }

      public final Builder setKnownPhoneNumber(Data.Phone.Builder paramBuilder)
      {
        this.knownPhoneNumber_ = paramBuilder.build();
        this.bitField0_ = (0x4 | this.bitField0_);
        return this;
      }

      public final Builder setKnownPhoneNumber(Data.Phone paramPhone)
      {
        if (paramPhone == null)
          throw new NullPointerException();
        this.knownPhoneNumber_ = paramPhone;
        this.bitField0_ = (0x4 | this.bitField0_);
        return this;
      }
    }
  }

  public static abstract interface CountriesResponseOrBuilder extends MessageLiteOrBuilder
  {
    public abstract Data.Country getCountry(int paramInt);

    public abstract int getCountryCount();

    public abstract List<Data.Country> getCountryList();

    public abstract Data.Country getCurrentCountry();

    public abstract Data.Phone getKnownPhoneNumber();

    public abstract boolean hasCurrentCountry();

    public abstract boolean hasKnownPhoneNumber();
  }

  public static final class CreatePhotoCommentRequest extends GeneratedMessageLite
    implements Network.CreatePhotoCommentRequestOrBuilder
  {
    private static final CreatePhotoCommentRequest defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private Object commentId_;
    private Object comment_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private long ownerGaiaId_;
    private long photoId_;

    static
    {
      CreatePhotoCommentRequest localCreatePhotoCommentRequest = new CreatePhotoCommentRequest();
      defaultInstance = localCreatePhotoCommentRequest;
      localCreatePhotoCommentRequest.photoId_ = 0L;
      localCreatePhotoCommentRequest.ownerGaiaId_ = 0L;
      localCreatePhotoCommentRequest.comment_ = "";
      localCreatePhotoCommentRequest.commentId_ = "";
    }

    private CreatePhotoCommentRequest()
    {
    }

    private CreatePhotoCommentRequest(Builder paramBuilder)
    {
      super();
    }

    private ByteString getCommentBytes()
    {
      Object localObject = this.comment_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.comment_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    private ByteString getCommentIdBytes()
    {
      Object localObject = this.commentId_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.commentId_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static CreatePhotoCommentRequest getDefaultInstance()
    {
      return defaultInstance;
    }

    public final String getComment()
    {
      Object localObject1 = this.comment_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.comment_ = str;
      }
    }

    public final String getCommentId()
    {
      Object localObject1 = this.commentId_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.commentId_ = str;
      }
    }

    public final CreatePhotoCommentRequest getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final long getOwnerGaiaId()
    {
      return this.ownerGaiaId_;
    }

    public final long getPhotoId()
    {
      return this.photoId_;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeInt64Size(1, this.photoId_);
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeInt64Size(2, this.ownerGaiaId_);
        if ((0x4 & this.bitField0_) == 4)
          k += CodedOutputStream.computeBytesSize(3, getCommentBytes());
        if ((0x8 & this.bitField0_) == 8)
          k += CodedOutputStream.computeBytesSize(4, getCommentIdBytes());
        this.memoizedSerializedSize = k;
      }
    }

    public final boolean hasComment()
    {
      if ((0x4 & this.bitField0_) == 4);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasCommentId()
    {
      if ((0x8 & this.bitField0_) == 8);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasOwnerGaiaId()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasPhotoId()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeInt64(1, this.photoId_);
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeInt64(2, this.ownerGaiaId_);
      if ((0x4 & this.bitField0_) == 4)
        paramCodedOutputStream.writeBytes(3, getCommentBytes());
      if ((0x8 & this.bitField0_) == 8)
        paramCodedOutputStream.writeBytes(4, getCommentIdBytes());
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Network.CreatePhotoCommentRequest, Builder>
      implements Network.CreatePhotoCommentRequestOrBuilder
    {
      private int bitField0_;
      private Object commentId_ = "";
      private Object comment_ = "";
      private long ownerGaiaId_;
      private long photoId_;

      private Network.CreatePhotoCommentRequest buildPartial()
      {
        Network.CreatePhotoCommentRequest localCreatePhotoCommentRequest = new Network.CreatePhotoCommentRequest(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Network.CreatePhotoCommentRequest.access$29102(localCreatePhotoCommentRequest, this.photoId_);
        if ((i & 0x2) == 2)
          k |= 2;
        Network.CreatePhotoCommentRequest.access$29202(localCreatePhotoCommentRequest, this.ownerGaiaId_);
        if ((i & 0x4) == 4)
          k |= 4;
        Network.CreatePhotoCommentRequest.access$29302(localCreatePhotoCommentRequest, this.comment_);
        if ((i & 0x8) == 8)
          k |= 8;
        Network.CreatePhotoCommentRequest.access$29402(localCreatePhotoCommentRequest, this.commentId_);
        Network.CreatePhotoCommentRequest.access$29502(localCreatePhotoCommentRequest, k);
        return localCreatePhotoCommentRequest;
      }

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 8:
            this.bitField0_ = (0x1 | this.bitField0_);
            this.photoId_ = paramCodedInputStream.readInt64();
            break;
          case 16:
            this.bitField0_ = (0x2 | this.bitField0_);
            this.ownerGaiaId_ = paramCodedInputStream.readInt64();
            break;
          case 26:
            this.bitField0_ = (0x4 | this.bitField0_);
            this.comment_ = paramCodedInputStream.readBytes();
            break;
          case 34:
          }
          this.bitField0_ = (0x8 | this.bitField0_);
          this.commentId_ = paramCodedInputStream.readBytes();
        }
      }

      public final Builder clear()
      {
        super.clear();
        this.photoId_ = 0L;
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.ownerGaiaId_ = 0L;
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.comment_ = "";
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.commentId_ = "";
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        return this;
      }

      public final Builder clearComment()
      {
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.comment_ = Network.CreatePhotoCommentRequest.getDefaultInstance().getComment();
        return this;
      }

      public final Builder clearCommentId()
      {
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        this.commentId_ = Network.CreatePhotoCommentRequest.getDefaultInstance().getCommentId();
        return this;
      }

      public final Builder clearOwnerGaiaId()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.ownerGaiaId_ = 0L;
        return this;
      }

      public final Builder clearPhotoId()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.photoId_ = 0L;
        return this;
      }

      public final String getComment()
      {
        Object localObject = this.comment_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.comment_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final String getCommentId()
      {
        Object localObject = this.commentId_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.commentId_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final Network.CreatePhotoCommentRequest getDefaultInstanceForType()
      {
        return Network.CreatePhotoCommentRequest.getDefaultInstance();
      }

      public final long getOwnerGaiaId()
      {
        return this.ownerGaiaId_;
      }

      public final long getPhotoId()
      {
        return this.photoId_;
      }

      public final boolean hasComment()
      {
        if ((0x4 & this.bitField0_) == 4);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasCommentId()
      {
        if ((0x8 & this.bitField0_) == 8);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasOwnerGaiaId()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasPhotoId()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Network.CreatePhotoCommentRequest paramCreatePhotoCommentRequest)
      {
        if (paramCreatePhotoCommentRequest == Network.CreatePhotoCommentRequest.getDefaultInstance());
        while (true)
        {
          return this;
          if (paramCreatePhotoCommentRequest.hasPhotoId())
            setPhotoId(paramCreatePhotoCommentRequest.getPhotoId());
          if (paramCreatePhotoCommentRequest.hasOwnerGaiaId())
            setOwnerGaiaId(paramCreatePhotoCommentRequest.getOwnerGaiaId());
          if (paramCreatePhotoCommentRequest.hasComment())
            setComment(paramCreatePhotoCommentRequest.getComment());
          if (paramCreatePhotoCommentRequest.hasCommentId())
            setCommentId(paramCreatePhotoCommentRequest.getCommentId());
        }
      }

      public final Builder setComment(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x4 | this.bitField0_);
        this.comment_ = paramString;
        return this;
      }

      public final Builder setCommentId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x8 | this.bitField0_);
        this.commentId_ = paramString;
        return this;
      }

      public final Builder setOwnerGaiaId(long paramLong)
      {
        this.bitField0_ = (0x2 | this.bitField0_);
        this.ownerGaiaId_ = paramLong;
        return this;
      }

      public final Builder setPhotoId(long paramLong)
      {
        this.bitField0_ = (0x1 | this.bitField0_);
        this.photoId_ = paramLong;
        return this;
      }
    }
  }

  public static abstract interface CreatePhotoCommentRequestOrBuilder extends MessageLiteOrBuilder
  {
    public abstract String getComment();

    public abstract String getCommentId();

    public abstract long getOwnerGaiaId();

    public abstract long getPhotoId();

    public abstract boolean hasComment();

    public abstract boolean hasCommentId();

    public abstract boolean hasOwnerGaiaId();

    public abstract boolean hasPhotoId();
  }

  public static final class CreatePhotoCommentResponse extends GeneratedMessageLite
    implements Network.CreatePhotoCommentResponseOrBuilder
  {
    private static final CreatePhotoCommentResponse defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private Data.Comment comment_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;

    static
    {
      CreatePhotoCommentResponse localCreatePhotoCommentResponse = new CreatePhotoCommentResponse();
      defaultInstance = localCreatePhotoCommentResponse;
      localCreatePhotoCommentResponse.comment_ = Data.Comment.getDefaultInstance();
    }

    private CreatePhotoCommentResponse()
    {
    }

    private CreatePhotoCommentResponse(Builder paramBuilder)
    {
      super();
    }

    public static CreatePhotoCommentResponse getDefaultInstance()
    {
      return defaultInstance;
    }

    public final Data.Comment getComment()
    {
      return this.comment_;
    }

    public final CreatePhotoCommentResponse getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeMessageSize(1, this.comment_);
        this.memoizedSerializedSize = k;
      }
    }

    public final boolean hasComment()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeMessage(1, this.comment_);
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Network.CreatePhotoCommentResponse, Builder>
      implements Network.CreatePhotoCommentResponseOrBuilder
    {
      private int bitField0_;
      private Data.Comment comment_ = Data.Comment.getDefaultInstance();

      private Network.CreatePhotoCommentResponse buildPartial()
      {
        Network.CreatePhotoCommentResponse localCreatePhotoCommentResponse = new Network.CreatePhotoCommentResponse(this, (byte)0);
        int i = 0x1 & this.bitField0_;
        int j = 0;
        if (i == 1)
          j = 1;
        Network.CreatePhotoCommentResponse.access$29902(localCreatePhotoCommentResponse, this.comment_);
        Network.CreatePhotoCommentResponse.access$30002(localCreatePhotoCommentResponse, j);
        return localCreatePhotoCommentResponse;
      }

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 10:
          }
          Data.Comment.Builder localBuilder = Data.Comment.newBuilder();
          if (hasComment())
            localBuilder.mergeFrom(getComment());
          paramCodedInputStream.readMessage(localBuilder, paramExtensionRegistryLite);
          setComment(localBuilder.buildPartial());
        }
      }

      public final Builder clear()
      {
        super.clear();
        this.comment_ = Data.Comment.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        return this;
      }

      public final Builder clearComment()
      {
        this.comment_ = Data.Comment.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        return this;
      }

      public final Data.Comment getComment()
      {
        return this.comment_;
      }

      public final Network.CreatePhotoCommentResponse getDefaultInstanceForType()
      {
        return Network.CreatePhotoCommentResponse.getDefaultInstance();
      }

      public final boolean hasComment()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Network.CreatePhotoCommentResponse paramCreatePhotoCommentResponse)
      {
        if (paramCreatePhotoCommentResponse == Network.CreatePhotoCommentResponse.getDefaultInstance());
        while (!paramCreatePhotoCommentResponse.hasComment())
          return this;
        Data.Comment localComment = paramCreatePhotoCommentResponse.getComment();
        if (((0x1 & this.bitField0_) == 1) && (this.comment_ != Data.Comment.getDefaultInstance()));
        for (this.comment_ = Data.Comment.newBuilder(this.comment_).mergeFrom(localComment).buildPartial(); ; this.comment_ = localComment)
        {
          this.bitField0_ = (0x1 | this.bitField0_);
          break;
        }
      }

      public final Builder setComment(Data.Comment.Builder paramBuilder)
      {
        this.comment_ = paramBuilder.build();
        this.bitField0_ = (0x1 | this.bitField0_);
        return this;
      }

      public final Builder setComment(Data.Comment paramComment)
      {
        if (paramComment == null)
          throw new NullPointerException();
        this.comment_ = paramComment;
        this.bitField0_ = (0x1 | this.bitField0_);
        return this;
      }
    }
  }

  public static abstract interface CreatePhotoCommentResponseOrBuilder extends MessageLiteOrBuilder
  {
    public abstract Data.Comment getComment();

    public abstract boolean hasComment();
  }

  public static final class CreatePlusOneRequest extends GeneratedMessageLite
    implements Network.CreatePlusOneRequestOrBuilder
  {
    private static final CreatePlusOneRequest defaultInstance;
    private static final long serialVersionUID;
    private Data.Audience audience_;
    private int bitField0_;
    private Object commentId_;
    private Object id_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private boolean returnFirstName_;
    private boolean returnGaiaId_;
    private Object title_;
    private ObjectType type_;

    static
    {
      CreatePlusOneRequest localCreatePlusOneRequest = new CreatePlusOneRequest();
      defaultInstance = localCreatePlusOneRequest;
      localCreatePlusOneRequest.type_ = ObjectType.TACO;
      localCreatePlusOneRequest.id_ = "";
      localCreatePlusOneRequest.audience_ = Data.Audience.getDefaultInstance();
      localCreatePlusOneRequest.title_ = "";
      localCreatePlusOneRequest.returnFirstName_ = false;
      localCreatePlusOneRequest.returnGaiaId_ = false;
      localCreatePlusOneRequest.commentId_ = "";
    }

    private CreatePlusOneRequest()
    {
    }

    private CreatePlusOneRequest(Builder paramBuilder)
    {
      super();
    }

    private ByteString getCommentIdBytes()
    {
      Object localObject = this.commentId_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.commentId_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static CreatePlusOneRequest getDefaultInstance()
    {
      return defaultInstance;
    }

    private ByteString getIdBytes()
    {
      Object localObject = this.id_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.id_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    private ByteString getTitleBytes()
    {
      Object localObject = this.title_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.title_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public final Data.Audience getAudience()
    {
      return this.audience_;
    }

    @Deprecated
    public final String getCommentId()
    {
      Object localObject1 = this.commentId_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.commentId_ = str;
      }
    }

    public final CreatePlusOneRequest getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final String getId()
    {
      Object localObject1 = this.id_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.id_ = str;
      }
    }

    public final boolean getReturnFirstName()
    {
      return this.returnFirstName_;
    }

    public final boolean getReturnGaiaId()
    {
      return this.returnGaiaId_;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeEnumSize(1, this.type_.getNumber());
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeBytesSize(2, getIdBytes());
        if ((0x4 & this.bitField0_) == 4)
          k += CodedOutputStream.computeMessageSize(3, this.audience_);
        if ((0x8 & this.bitField0_) == 8)
          k += CodedOutputStream.computeBytesSize(4, getTitleBytes());
        if ((0x10 & this.bitField0_) == 16)
          k += CodedOutputStream.computeBoolSize(5, this.returnFirstName_);
        if ((0x20 & this.bitField0_) == 32)
          k += CodedOutputStream.computeBoolSize(6, this.returnGaiaId_);
        if ((0x40 & this.bitField0_) == 64)
          k += CodedOutputStream.computeBytesSize(7, getCommentIdBytes());
        this.memoizedSerializedSize = k;
      }
    }

    public final String getTitle()
    {
      Object localObject1 = this.title_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.title_ = str;
      }
    }

    public final ObjectType getType()
    {
      return this.type_;
    }

    public final boolean hasAudience()
    {
      if ((0x4 & this.bitField0_) == 4);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    @Deprecated
    public final boolean hasCommentId()
    {
      if ((0x40 & this.bitField0_) == 64);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasId()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasReturnFirstName()
    {
      if ((0x10 & this.bitField0_) == 16);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasReturnGaiaId()
    {
      if ((0x20 & this.bitField0_) == 32);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasTitle()
    {
      if ((0x8 & this.bitField0_) == 8);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasType()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeEnum(1, this.type_.getNumber());
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeBytes(2, getIdBytes());
      if ((0x4 & this.bitField0_) == 4)
        paramCodedOutputStream.writeMessage(3, this.audience_);
      if ((0x8 & this.bitField0_) == 8)
        paramCodedOutputStream.writeBytes(4, getTitleBytes());
      if ((0x10 & this.bitField0_) == 16)
        paramCodedOutputStream.writeBool(5, this.returnFirstName_);
      if ((0x20 & this.bitField0_) == 32)
        paramCodedOutputStream.writeBool(6, this.returnGaiaId_);
      if ((0x40 & this.bitField0_) == 64)
        paramCodedOutputStream.writeBytes(7, getCommentIdBytes());
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Network.CreatePlusOneRequest, Builder>
      implements Network.CreatePlusOneRequestOrBuilder
    {
      private Data.Audience audience_ = Data.Audience.getDefaultInstance();
      private int bitField0_;
      private Object commentId_ = "";
      private Object id_ = "";
      private boolean returnFirstName_;
      private boolean returnGaiaId_;
      private Object title_ = "";
      private Network.CreatePlusOneRequest.ObjectType type_ = Network.CreatePlusOneRequest.ObjectType.TACO;

      private Network.CreatePlusOneRequest buildPartial()
      {
        Network.CreatePlusOneRequest localCreatePlusOneRequest = new Network.CreatePlusOneRequest(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Network.CreatePlusOneRequest.access$32302(localCreatePlusOneRequest, this.type_);
        if ((i & 0x2) == 2)
          k |= 2;
        Network.CreatePlusOneRequest.access$32402(localCreatePlusOneRequest, this.id_);
        if ((i & 0x4) == 4)
          k |= 4;
        Network.CreatePlusOneRequest.access$32502(localCreatePlusOneRequest, this.audience_);
        if ((i & 0x8) == 8)
          k |= 8;
        Network.CreatePlusOneRequest.access$32602(localCreatePlusOneRequest, this.title_);
        if ((i & 0x10) == 16)
          k |= 16;
        Network.CreatePlusOneRequest.access$32702(localCreatePlusOneRequest, this.returnFirstName_);
        if ((i & 0x20) == 32)
          k |= 32;
        Network.CreatePlusOneRequest.access$32802(localCreatePlusOneRequest, this.returnGaiaId_);
        if ((i & 0x40) == 64)
          k |= 64;
        Network.CreatePlusOneRequest.access$32902(localCreatePlusOneRequest, this.commentId_);
        Network.CreatePlusOneRequest.access$33002(localCreatePlusOneRequest, k);
        return localCreatePlusOneRequest;
      }

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 8:
            Network.CreatePlusOneRequest.ObjectType localObjectType = Network.CreatePlusOneRequest.ObjectType.valueOf(paramCodedInputStream.readEnum());
            if (localObjectType == null)
              continue;
            this.bitField0_ = (0x1 | this.bitField0_);
            this.type_ = localObjectType;
            break;
          case 18:
            this.bitField0_ = (0x2 | this.bitField0_);
            this.id_ = paramCodedInputStream.readBytes();
            break;
          case 26:
            Data.Audience.Builder localBuilder = Data.Audience.newBuilder();
            if (hasAudience())
              localBuilder.mergeFrom(getAudience());
            paramCodedInputStream.readMessage(localBuilder, paramExtensionRegistryLite);
            setAudience(localBuilder.buildPartial());
            break;
          case 34:
            this.bitField0_ = (0x8 | this.bitField0_);
            this.title_ = paramCodedInputStream.readBytes();
            break;
          case 40:
            this.bitField0_ = (0x10 | this.bitField0_);
            this.returnFirstName_ = paramCodedInputStream.readBool();
            break;
          case 48:
            this.bitField0_ = (0x20 | this.bitField0_);
            this.returnGaiaId_ = paramCodedInputStream.readBool();
            break;
          case 58:
          }
          this.bitField0_ = (0x40 | this.bitField0_);
          this.commentId_ = paramCodedInputStream.readBytes();
        }
      }

      public final Builder clear()
      {
        super.clear();
        this.type_ = Network.CreatePlusOneRequest.ObjectType.TACO;
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.id_ = "";
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.audience_ = Data.Audience.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.title_ = "";
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        this.returnFirstName_ = false;
        this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        this.returnGaiaId_ = false;
        this.bitField0_ = (0xFFFFFFDF & this.bitField0_);
        this.commentId_ = "";
        this.bitField0_ = (0xFFFFFFBF & this.bitField0_);
        return this;
      }

      public final Builder clearAudience()
      {
        this.audience_ = Data.Audience.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        return this;
      }

      @Deprecated
      public final Builder clearCommentId()
      {
        this.bitField0_ = (0xFFFFFFBF & this.bitField0_);
        this.commentId_ = Network.CreatePlusOneRequest.getDefaultInstance().getCommentId();
        return this;
      }

      public final Builder clearId()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.id_ = Network.CreatePlusOneRequest.getDefaultInstance().getId();
        return this;
      }

      public final Builder clearReturnFirstName()
      {
        this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        this.returnFirstName_ = false;
        return this;
      }

      public final Builder clearReturnGaiaId()
      {
        this.bitField0_ = (0xFFFFFFDF & this.bitField0_);
        this.returnGaiaId_ = false;
        return this;
      }

      public final Builder clearTitle()
      {
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        this.title_ = Network.CreatePlusOneRequest.getDefaultInstance().getTitle();
        return this;
      }

      public final Builder clearType()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.type_ = Network.CreatePlusOneRequest.ObjectType.TACO;
        return this;
      }

      public final Data.Audience getAudience()
      {
        return this.audience_;
      }

      @Deprecated
      public final String getCommentId()
      {
        Object localObject = this.commentId_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.commentId_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final Network.CreatePlusOneRequest getDefaultInstanceForType()
      {
        return Network.CreatePlusOneRequest.getDefaultInstance();
      }

      public final String getId()
      {
        Object localObject = this.id_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.id_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final boolean getReturnFirstName()
      {
        return this.returnFirstName_;
      }

      public final boolean getReturnGaiaId()
      {
        return this.returnGaiaId_;
      }

      public final String getTitle()
      {
        Object localObject = this.title_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.title_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final Network.CreatePlusOneRequest.ObjectType getType()
      {
        return this.type_;
      }

      public final boolean hasAudience()
      {
        if ((0x4 & this.bitField0_) == 4);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      @Deprecated
      public final boolean hasCommentId()
      {
        if ((0x40 & this.bitField0_) == 64);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasId()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasReturnFirstName()
      {
        if ((0x10 & this.bitField0_) == 16);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasReturnGaiaId()
      {
        if ((0x20 & this.bitField0_) == 32);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasTitle()
      {
        if ((0x8 & this.bitField0_) == 8);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasType()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Network.CreatePlusOneRequest paramCreatePlusOneRequest)
      {
        if (paramCreatePlusOneRequest == Network.CreatePlusOneRequest.getDefaultInstance())
          return this;
        if (paramCreatePlusOneRequest.hasType())
          setType(paramCreatePlusOneRequest.getType());
        if (paramCreatePlusOneRequest.hasId())
          setId(paramCreatePlusOneRequest.getId());
        Data.Audience localAudience;
        if (paramCreatePlusOneRequest.hasAudience())
        {
          localAudience = paramCreatePlusOneRequest.getAudience();
          if (((0x4 & this.bitField0_) != 4) || (this.audience_ == Data.Audience.getDefaultInstance()))
            break label170;
        }
        label170: for (this.audience_ = Data.Audience.newBuilder(this.audience_).mergeFrom(localAudience).buildPartial(); ; this.audience_ = localAudience)
        {
          this.bitField0_ = (0x4 | this.bitField0_);
          if (paramCreatePlusOneRequest.hasTitle())
            setTitle(paramCreatePlusOneRequest.getTitle());
          if (paramCreatePlusOneRequest.hasReturnFirstName())
            setReturnFirstName(paramCreatePlusOneRequest.getReturnFirstName());
          if (paramCreatePlusOneRequest.hasReturnGaiaId())
            setReturnGaiaId(paramCreatePlusOneRequest.getReturnGaiaId());
          if (!paramCreatePlusOneRequest.hasCommentId())
            break;
          setCommentId(paramCreatePlusOneRequest.getCommentId());
          break;
        }
      }

      public final Builder setAudience(Data.Audience.Builder paramBuilder)
      {
        this.audience_ = paramBuilder.build();
        this.bitField0_ = (0x4 | this.bitField0_);
        return this;
      }

      public final Builder setAudience(Data.Audience paramAudience)
      {
        if (paramAudience == null)
          throw new NullPointerException();
        this.audience_ = paramAudience;
        this.bitField0_ = (0x4 | this.bitField0_);
        return this;
      }

      @Deprecated
      public final Builder setCommentId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x40 | this.bitField0_);
        this.commentId_ = paramString;
        return this;
      }

      public final Builder setId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x2 | this.bitField0_);
        this.id_ = paramString;
        return this;
      }

      public final Builder setReturnFirstName(boolean paramBoolean)
      {
        this.bitField0_ = (0x10 | this.bitField0_);
        this.returnFirstName_ = paramBoolean;
        return this;
      }

      public final Builder setReturnGaiaId(boolean paramBoolean)
      {
        this.bitField0_ = (0x20 | this.bitField0_);
        this.returnGaiaId_ = paramBoolean;
        return this;
      }

      public final Builder setTitle(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x8 | this.bitField0_);
        this.title_ = paramString;
        return this;
      }

      public final Builder setType(Network.CreatePlusOneRequest.ObjectType paramObjectType)
      {
        if (paramObjectType == null)
          throw new NullPointerException();
        this.bitField0_ = (0x1 | this.bitField0_);
        this.type_ = paramObjectType;
        return this;
      }
    }

    public static enum ObjectType
      implements Internal.EnumLite
    {
      private static Internal.EnumLiteMap<ObjectType> internalValueMap = new Internal.EnumLiteMap()
      {
      };
      private final int value;

      static
      {
        AD = new ObjectType("AD", 3, 4);
        COMMENT = new ObjectType("COMMENT", 4, 5);
        ENTITY = new ObjectType("ENTITY", 5, 6);
        ObjectType[] arrayOfObjectType = new ObjectType[6];
        arrayOfObjectType[0] = TACO;
        arrayOfObjectType[1] = TORTILLA;
        arrayOfObjectType[2] = URL;
        arrayOfObjectType[3] = AD;
        arrayOfObjectType[4] = COMMENT;
        arrayOfObjectType[5] = ENTITY;
      }

      private ObjectType(int paramInt1, int paramInt2)
      {
        this.value = paramInt1;
      }

      public static ObjectType valueOf(int paramInt)
      {
        ObjectType localObjectType;
        switch (paramInt)
        {
        default:
          localObjectType = null;
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
        case 6:
        }
        while (true)
        {
          return localObjectType;
          localObjectType = TACO;
          continue;
          localObjectType = TORTILLA;
          continue;
          localObjectType = URL;
          continue;
          localObjectType = AD;
          continue;
          localObjectType = COMMENT;
          continue;
          localObjectType = ENTITY;
        }
      }

      public final int getNumber()
      {
        return this.value;
      }
    }
  }

  public static abstract interface CreatePlusOneRequestOrBuilder extends MessageLiteOrBuilder
  {
    public abstract Data.Audience getAudience();

    @Deprecated
    public abstract String getCommentId();

    public abstract String getId();

    public abstract boolean getReturnFirstName();

    public abstract boolean getReturnGaiaId();

    public abstract String getTitle();

    public abstract Network.CreatePlusOneRequest.ObjectType getType();

    public abstract boolean hasAudience();

    @Deprecated
    public abstract boolean hasCommentId();

    public abstract boolean hasId();

    public abstract boolean hasReturnFirstName();

    public abstract boolean hasReturnGaiaId();

    public abstract boolean hasTitle();

    public abstract boolean hasType();
  }

  public static final class CreatePlusOneResponse extends GeneratedMessageLite
    implements Network.CreatePlusOneResponseOrBuilder
  {
    private static final CreatePlusOneResponse defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private Data.PlusOneData plusoneData_;

    static
    {
      CreatePlusOneResponse localCreatePlusOneResponse = new CreatePlusOneResponse();
      defaultInstance = localCreatePlusOneResponse;
      localCreatePlusOneResponse.plusoneData_ = Data.PlusOneData.getDefaultInstance();
    }

    private CreatePlusOneResponse()
    {
    }

    private CreatePlusOneResponse(Builder paramBuilder)
    {
      super();
    }

    public static CreatePlusOneResponse getDefaultInstance()
    {
      return defaultInstance;
    }

    public final CreatePlusOneResponse getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final Data.PlusOneData getPlusoneData()
    {
      return this.plusoneData_;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeMessageSize(1, this.plusoneData_);
        this.memoizedSerializedSize = k;
      }
    }

    public final boolean hasPlusoneData()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeMessage(1, this.plusoneData_);
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Network.CreatePlusOneResponse, Builder>
      implements Network.CreatePlusOneResponseOrBuilder
    {
      private int bitField0_;
      private Data.PlusOneData plusoneData_ = Data.PlusOneData.getDefaultInstance();

      private Network.CreatePlusOneResponse buildPartial()
      {
        Network.CreatePlusOneResponse localCreatePlusOneResponse = new Network.CreatePlusOneResponse(this, (byte)0);
        int i = 0x1 & this.bitField0_;
        int j = 0;
        if (i == 1)
          j = 1;
        Network.CreatePlusOneResponse.access$33402(localCreatePlusOneResponse, this.plusoneData_);
        Network.CreatePlusOneResponse.access$33502(localCreatePlusOneResponse, j);
        return localCreatePlusOneResponse;
      }

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 10:
          }
          Data.PlusOneData.Builder localBuilder = Data.PlusOneData.newBuilder();
          if (hasPlusoneData())
            localBuilder.mergeFrom(getPlusoneData());
          paramCodedInputStream.readMessage(localBuilder, paramExtensionRegistryLite);
          setPlusoneData(localBuilder.buildPartial());
        }
      }

      public final Builder clear()
      {
        super.clear();
        this.plusoneData_ = Data.PlusOneData.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        return this;
      }

      public final Builder clearPlusoneData()
      {
        this.plusoneData_ = Data.PlusOneData.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        return this;
      }

      public final Network.CreatePlusOneResponse getDefaultInstanceForType()
      {
        return Network.CreatePlusOneResponse.getDefaultInstance();
      }

      public final Data.PlusOneData getPlusoneData()
      {
        return this.plusoneData_;
      }

      public final boolean hasPlusoneData()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Network.CreatePlusOneResponse paramCreatePlusOneResponse)
      {
        if (paramCreatePlusOneResponse == Network.CreatePlusOneResponse.getDefaultInstance());
        while (!paramCreatePlusOneResponse.hasPlusoneData())
          return this;
        Data.PlusOneData localPlusOneData = paramCreatePlusOneResponse.getPlusoneData();
        if (((0x1 & this.bitField0_) == 1) && (this.plusoneData_ != Data.PlusOneData.getDefaultInstance()));
        for (this.plusoneData_ = Data.PlusOneData.newBuilder(this.plusoneData_).mergeFrom(localPlusOneData).buildPartial(); ; this.plusoneData_ = localPlusOneData)
        {
          this.bitField0_ = (0x1 | this.bitField0_);
          break;
        }
      }

      public final Builder setPlusoneData(Data.PlusOneData.Builder paramBuilder)
      {
        this.plusoneData_ = paramBuilder.build();
        this.bitField0_ = (0x1 | this.bitField0_);
        return this;
      }

      public final Builder setPlusoneData(Data.PlusOneData paramPlusOneData)
      {
        if (paramPlusOneData == null)
          throw new NullPointerException();
        this.plusoneData_ = paramPlusOneData;
        this.bitField0_ = (0x1 | this.bitField0_);
        return this;
      }
    }
  }

  public static abstract interface CreatePlusOneResponseOrBuilder extends MessageLiteOrBuilder
  {
    public abstract Data.PlusOneData getPlusoneData();

    public abstract boolean hasPlusoneData();
  }

  public static final class DebugRequest extends GeneratedMessageLite
    implements Network.DebugRequestOrBuilder
  {
    private static final DebugRequest defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private Type debugType_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;

    static
    {
      DebugRequest localDebugRequest = new DebugRequest();
      defaultInstance = localDebugRequest;
      localDebugRequest.debugType_ = Type.CLEAR_USER_PREFS;
    }

    private DebugRequest()
    {
    }

    private DebugRequest(Builder paramBuilder)
    {
      super();
    }

    public static DebugRequest getDefaultInstance()
    {
      return defaultInstance;
    }

    public final Type getDebugType()
    {
      return this.debugType_;
    }

    public final DebugRequest getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeEnumSize(1, this.debugType_.getNumber());
        this.memoizedSerializedSize = k;
      }
    }

    public final boolean hasDebugType()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeEnum(1, this.debugType_.getNumber());
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Network.DebugRequest, Builder>
      implements Network.DebugRequestOrBuilder
    {
      private int bitField0_;
      private Network.DebugRequest.Type debugType_ = Network.DebugRequest.Type.CLEAR_USER_PREFS;

      private Network.DebugRequest buildPartial()
      {
        Network.DebugRequest localDebugRequest = new Network.DebugRequest(this, (byte)0);
        int i = 0x1 & this.bitField0_;
        int j = 0;
        if (i == 1)
          j = 1;
        Network.DebugRequest.access$78602(localDebugRequest, this.debugType_);
        Network.DebugRequest.access$78702(localDebugRequest, j);
        return localDebugRequest;
      }

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 8:
          }
          Network.DebugRequest.Type localType = Network.DebugRequest.Type.valueOf(paramCodedInputStream.readEnum());
          if (localType != null)
          {
            this.bitField0_ = (0x1 | this.bitField0_);
            this.debugType_ = localType;
          }
        }
      }

      public final Builder clear()
      {
        super.clear();
        this.debugType_ = Network.DebugRequest.Type.CLEAR_USER_PREFS;
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        return this;
      }

      public final Builder clearDebugType()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.debugType_ = Network.DebugRequest.Type.CLEAR_USER_PREFS;
        return this;
      }

      public final Network.DebugRequest.Type getDebugType()
      {
        return this.debugType_;
      }

      public final Network.DebugRequest getDefaultInstanceForType()
      {
        return Network.DebugRequest.getDefaultInstance();
      }

      public final boolean hasDebugType()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Network.DebugRequest paramDebugRequest)
      {
        if (paramDebugRequest == Network.DebugRequest.getDefaultInstance());
        while (true)
        {
          return this;
          if (paramDebugRequest.hasDebugType())
            setDebugType(paramDebugRequest.getDebugType());
        }
      }

      public final Builder setDebugType(Network.DebugRequest.Type paramType)
      {
        if (paramType == null)
          throw new NullPointerException();
        this.bitField0_ = (0x1 | this.bitField0_);
        this.debugType_ = paramType;
        return this;
      }
    }

    public static enum Type
      implements Internal.EnumLite
    {
      private static Internal.EnumLiteMap<Type> internalValueMap = new Internal.EnumLiteMap()
      {
      };
      private final int value = 0;

      static
      {
        Type[] arrayOfType = new Type[1];
        arrayOfType[0] = CLEAR_USER_PREFS;
      }

      private Type(int paramInt1, int paramInt2)
      {
      }

      public static Type valueOf(int paramInt)
      {
        switch (paramInt)
        {
        default:
        case 0:
        }
        for (Type localType = null; ; localType = CLEAR_USER_PREFS)
          return localType;
      }

      public final int getNumber()
      {
        return this.value;
      }
    }
  }

  public static abstract interface DebugRequestOrBuilder extends MessageLiteOrBuilder
  {
    public abstract Network.DebugRequest.Type getDebugType();

    public abstract boolean hasDebugType();
  }

  public static final class DebugResponse extends GeneratedMessageLite
    implements Network.DebugResponseOrBuilder
  {
    private static final DebugResponse defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private Object debugInfoHtml_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;

    static
    {
      DebugResponse localDebugResponse = new DebugResponse();
      defaultInstance = localDebugResponse;
      localDebugResponse.debugInfoHtml_ = "";
    }

    private DebugResponse()
    {
    }

    private DebugResponse(Builder paramBuilder)
    {
      super();
    }

    private ByteString getDebugInfoHtmlBytes()
    {
      Object localObject = this.debugInfoHtml_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.debugInfoHtml_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static DebugResponse getDefaultInstance()
    {
      return defaultInstance;
    }

    public final String getDebugInfoHtml()
    {
      Object localObject1 = this.debugInfoHtml_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.debugInfoHtml_ = str;
      }
    }

    public final DebugResponse getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeBytesSize(1, getDebugInfoHtmlBytes());
        this.memoizedSerializedSize = k;
      }
    }

    public final boolean hasDebugInfoHtml()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeBytes(1, getDebugInfoHtmlBytes());
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Network.DebugResponse, Builder>
      implements Network.DebugResponseOrBuilder
    {
      private int bitField0_;
      private Object debugInfoHtml_ = "";

      private Network.DebugResponse buildPartial()
      {
        Network.DebugResponse localDebugResponse = new Network.DebugResponse(this, (byte)0);
        int i = 0x1 & this.bitField0_;
        int j = 0;
        if (i == 1)
          j = 1;
        Network.DebugResponse.access$79102(localDebugResponse, this.debugInfoHtml_);
        Network.DebugResponse.access$79202(localDebugResponse, j);
        return localDebugResponse;
      }

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 10:
          }
          this.bitField0_ = (0x1 | this.bitField0_);
          this.debugInfoHtml_ = paramCodedInputStream.readBytes();
        }
      }

      public final Builder clear()
      {
        super.clear();
        this.debugInfoHtml_ = "";
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        return this;
      }

      public final Builder clearDebugInfoHtml()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.debugInfoHtml_ = Network.DebugResponse.getDefaultInstance().getDebugInfoHtml();
        return this;
      }

      public final String getDebugInfoHtml()
      {
        Object localObject = this.debugInfoHtml_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.debugInfoHtml_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final Network.DebugResponse getDefaultInstanceForType()
      {
        return Network.DebugResponse.getDefaultInstance();
      }

      public final boolean hasDebugInfoHtml()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Network.DebugResponse paramDebugResponse)
      {
        if (paramDebugResponse == Network.DebugResponse.getDefaultInstance());
        while (true)
        {
          return this;
          if (paramDebugResponse.hasDebugInfoHtml())
            setDebugInfoHtml(paramDebugResponse.getDebugInfoHtml());
        }
      }

      public final Builder setDebugInfoHtml(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x1 | this.bitField0_);
        this.debugInfoHtml_ = paramString;
        return this;
      }
    }
  }

  public static abstract interface DebugResponseOrBuilder extends MessageLiteOrBuilder
  {
    public abstract String getDebugInfoHtml();

    public abstract boolean hasDebugInfoHtml();
  }

  public static final class DeleteAlbumRequest extends GeneratedMessageLite
    implements Network.DeleteAlbumRequestOrBuilder
  {
    private static final DeleteAlbumRequest defaultInstance;
    private static final long serialVersionUID;
    private long albumId_;
    private int bitField0_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;

    static
    {
      DeleteAlbumRequest localDeleteAlbumRequest = new DeleteAlbumRequest();
      defaultInstance = localDeleteAlbumRequest;
      localDeleteAlbumRequest.albumId_ = 0L;
    }

    private DeleteAlbumRequest()
    {
    }

    private DeleteAlbumRequest(Builder paramBuilder)
    {
      super();
    }

    public static DeleteAlbumRequest getDefaultInstance()
    {
      return defaultInstance;
    }

    public final long getAlbumId()
    {
      return this.albumId_;
    }

    public final DeleteAlbumRequest getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeInt64Size(1, this.albumId_);
        this.memoizedSerializedSize = k;
      }
    }

    public final boolean hasAlbumId()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeInt64(1, this.albumId_);
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Network.DeleteAlbumRequest, Builder>
      implements Network.DeleteAlbumRequestOrBuilder
    {
      private long albumId_;
      private int bitField0_;

      private Network.DeleteAlbumRequest buildPartial()
      {
        Network.DeleteAlbumRequest localDeleteAlbumRequest = new Network.DeleteAlbumRequest(this, (byte)0);
        int i = 0x1 & this.bitField0_;
        int j = 0;
        if (i == 1)
          j = 1;
        Network.DeleteAlbumRequest.access$22302(localDeleteAlbumRequest, this.albumId_);
        Network.DeleteAlbumRequest.access$22402(localDeleteAlbumRequest, j);
        return localDeleteAlbumRequest;
      }

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 8:
          }
          this.bitField0_ = (0x1 | this.bitField0_);
          this.albumId_ = paramCodedInputStream.readInt64();
        }
      }

      public final Builder clear()
      {
        super.clear();
        this.albumId_ = 0L;
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        return this;
      }

      public final Builder clearAlbumId()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.albumId_ = 0L;
        return this;
      }

      public final long getAlbumId()
      {
        return this.albumId_;
      }

      public final Network.DeleteAlbumRequest getDefaultInstanceForType()
      {
        return Network.DeleteAlbumRequest.getDefaultInstance();
      }

      public final boolean hasAlbumId()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Network.DeleteAlbumRequest paramDeleteAlbumRequest)
      {
        if (paramDeleteAlbumRequest == Network.DeleteAlbumRequest.getDefaultInstance());
        while (true)
        {
          return this;
          if (paramDeleteAlbumRequest.hasAlbumId())
            setAlbumId(paramDeleteAlbumRequest.getAlbumId());
        }
      }

      public final Builder setAlbumId(long paramLong)
      {
        this.bitField0_ = (0x1 | this.bitField0_);
        this.albumId_ = paramLong;
        return this;
      }
    }
  }

  public static abstract interface DeleteAlbumRequestOrBuilder extends MessageLiteOrBuilder
  {
    public abstract long getAlbumId();

    public abstract boolean hasAlbumId();
  }

  public static final class DeleteAlbumResponse extends GeneratedMessageLite
    implements Network.DeleteAlbumResponseOrBuilder
  {
    private static final DeleteAlbumResponse defaultInstance = new DeleteAlbumResponse();
    private static final long serialVersionUID;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;

    private DeleteAlbumResponse()
    {
    }

    private DeleteAlbumResponse(Builder paramBuilder)
    {
      super();
    }

    public static DeleteAlbumResponse getDefaultInstance()
    {
      return defaultInstance;
    }

    public final DeleteAlbumResponse getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      while (true)
      {
        return i;
        this.memoizedSerializedSize = 0;
        i = 0;
      }
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Network.DeleteAlbumResponse, Builder>
      implements Network.DeleteAlbumResponseOrBuilder
    {
      private Network.DeleteAlbumResponse buildPartial()
      {
        return new Network.DeleteAlbumResponse(this, (byte)0);
      }

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        int i;
        do
        {
          i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
          case 0:
          }
        }
        while (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i));
        return this;
      }

      public final Builder clear()
      {
        super.clear();
        return this;
      }

      public final Network.DeleteAlbumResponse getDefaultInstanceForType()
      {
        return Network.DeleteAlbumResponse.getDefaultInstance();
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Network.DeleteAlbumResponse paramDeleteAlbumResponse)
      {
        if (paramDeleteAlbumResponse == Network.DeleteAlbumResponse.getDefaultInstance());
        return this;
      }
    }
  }

  public static abstract interface DeleteAlbumResponseOrBuilder extends MessageLiteOrBuilder
  {
  }

  public static final class DeletePlusOneRequest extends GeneratedMessageLite
    implements Network.DeletePlusOneRequestOrBuilder
  {
    private static final DeletePlusOneRequest defaultInstance;
    private static final long serialVersionUID;
    private Object activityId_;
    private int bitField0_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private Object plusoneId_;
    private Network.CreatePlusOneRequest.ObjectType type_;

    static
    {
      DeletePlusOneRequest localDeletePlusOneRequest = new DeletePlusOneRequest();
      defaultInstance = localDeletePlusOneRequest;
      localDeletePlusOneRequest.plusoneId_ = "";
      localDeletePlusOneRequest.activityId_ = "";
      localDeletePlusOneRequest.type_ = Network.CreatePlusOneRequest.ObjectType.TACO;
    }

    private DeletePlusOneRequest()
    {
    }

    private DeletePlusOneRequest(Builder paramBuilder)
    {
      super();
    }

    private ByteString getActivityIdBytes()
    {
      Object localObject = this.activityId_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.activityId_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static DeletePlusOneRequest getDefaultInstance()
    {
      return defaultInstance;
    }

    private ByteString getPlusoneIdBytes()
    {
      Object localObject = this.plusoneId_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.plusoneId_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public final String getActivityId()
    {
      Object localObject1 = this.activityId_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.activityId_ = str;
      }
    }

    public final DeletePlusOneRequest getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final String getPlusoneId()
    {
      Object localObject1 = this.plusoneId_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.plusoneId_ = str;
      }
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeBytesSize(1, getPlusoneIdBytes());
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeBytesSize(2, getActivityIdBytes());
        if ((0x4 & this.bitField0_) == 4)
          k += CodedOutputStream.computeEnumSize(3, this.type_.getNumber());
        this.memoizedSerializedSize = k;
      }
    }

    public final Network.CreatePlusOneRequest.ObjectType getType()
    {
      return this.type_;
    }

    public final boolean hasActivityId()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasPlusoneId()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean hasType()
    {
      if ((0x4 & this.bitField0_) == 4);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeBytes(1, getPlusoneIdBytes());
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeBytes(2, getActivityIdBytes());
      if ((0x4 & this.bitField0_) == 4)
        paramCodedOutputStream.writeEnum(3, this.type_.getNumber());
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Network.DeletePlusOneRequest, Builder>
      implements Network.DeletePlusOneRequestOrBuilder
    {
      private Object activityId_ = "";
      private int bitField0_;
      private Object plusoneId_ = "";
      private Network.CreatePlusOneRequest.ObjectType type_ = Network.CreatePlusOneRequest.ObjectType.TACO;

      private Network.DeletePlusOneRequest buildPartial()
      {
        Network.DeletePlusOneRequest localDeletePlusOneRequest = new Network.DeletePlusOneRequest(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Network.DeletePlusOneRequest.access$33902(localDeletePlusOneRequest, this.plusoneId_);
        if ((i & 0x2) == 2)
          k |= 2;
        Network.DeletePlusOneRequest.access$34002(localDeletePlusOneRequest, this.activityId_);
        if ((i & 0x4) == 4)
          k |= 4;
        Network.DeletePlusOneRequest.access$34102(localDeletePlusOneRequest, this.type_);
        Network.DeletePlusOneRequest.access$34202(localDeletePlusOneRequest, k);
        return localDeletePlusOneRequest;
      }

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 10:
            this.bitField0_ = (0x1 | this.bitField0_);
            this.plusoneId_ = paramCodedInputStream.readBytes();
            break;
          case 18:
            this.bitField0_ = (0x2 | this.bitField0_);
            this.activityId_ = paramCodedInputStream.readBytes();
            break;
          case 24:
          }
          Network.CreatePlusOneRequest.ObjectType localObjectType = Network.CreatePlusOneRequest.ObjectType.valueOf(paramCodedInputStream.readEnum());
          if (localObjectType != null)
          {
            this.bitField0_ = (0x4 | this.bitField0_);
            this.type_ = localObjectType;
          }
        }
      }

      public final Builder clear()
      {
        super.clear();
        this.plusoneId_ = "";
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.activityId_ = "";
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.type_ = Network.CreatePlusOneRequest.ObjectType.TACO;
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        return this;
      }

      public final Builder clearActivityId()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.activityId_ = Network.DeletePlusOneRequest.getDefaultInstance().getActivityId();
        return this;
      }

      public final Builder clearPlusoneId()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.plusoneId_ = Network.DeletePlusOneRequest.getDefaultInstance().getPlusoneId();
        return this;
      }

      public final Builder clearType()
      {
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.type_ = Network.CreatePlusOneRequest.ObjectType.TACO;
        return this;
      }

      public final String getActivityId()
      {
        Object localObject = this.activityId_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.activityId_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final Network.DeletePlusOneRequest getDefaultInstanceForType()
      {
        return Network.DeletePlusOneRequest.getDefaultInstance();
      }

      public final String getPlusoneId()
      {
        Object localObject = this.plusoneId_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.plusoneId_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final Network.CreatePlusOneRequest.ObjectType getType()
      {
        return this.type_;
      }

      public final boolean hasActivityId()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasPlusoneId()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean hasType()
      {
        if ((0x4 & this.bitField0_) == 4);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Network.DeletePlusOneRequest paramDeletePlusOneRequest)
      {
        if (paramDeletePlusOneRequest == Network.DeletePlusOneRequest.getDefaultInstance());
        while (true)
        {
          return this;
          if (paramDeletePlusOneRequest.hasPlusoneId())
            setPlusoneId(paramDeletePlusOneRequest.getPlusoneId());
          if (paramDeletePlusOneRequest.hasActivityId())
            setActivityId(paramDeletePlusOneRequest.getActivityId());
          if (paramDeletePlusOneRequest.hasType())
            setType(paramDeletePlusOneRequest.getType());
        }
      }

      public final Builder setActivityId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x2 | this.bitField0_);
        this.activityId_ = paramString;
        return this;
      }

      public final Builder setPlusoneId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x1 | this.bitField0_);
        this.plusoneId_ = paramString;
        return this;
      }

      public final Builder setType(Network.CreatePlusOneRequest.ObjectType paramObjectType)
      {
        if (paramObjectType == null)
          throw new NullPointerException();
        this.bitField0_ = (0x4 | this.bitField0_);
        this.type_ = paramObjectType;
        return this;
      }
    }
  }

  public static abstract interface DeletePlusOneRequestOrBuilder extends MessageLiteOrBuilder
  {
    public abstract String getActivityId();

    public abstract String getPlusoneId();

    public abstract Network.CreatePlusOneRequest.ObjectType getType();

    public abstract boolean hasActivityId();

    public abstract boolean hasPlusoneId();

    public abstract boolean hasType();
  }

  public static final class DeletePlusOneResponse extends GeneratedMessageLite
    implements Network.DeletePlusOneResponseOrBuilder
  {
    private static final DeletePlusOneResponse defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private Data.PlusOneData plusoneData_;

    static
    {
      DeletePlusOneResponse localDeletePlusOneResponse = new DeletePlusOneResponse();
      defaultInstance = localDeletePlusOneResponse;
      localDeletePlusOneResponse.plusoneData_ = Data.PlusOneData.getDefaultInstance();
    }

    private DeletePlusOneResponse()
    {
    }

    private DeletePlusOneResponse(Builder paramBuilder)
    {
      super();
    }

    public static DeletePlusOneResponse getDefaultInstance()
    {
      return defaultInstance;
    }

    public final DeletePlusOneResponse getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final Data.PlusOneData getPlusoneData()
    {
      return this.plusoneData_;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeMessageSize(1, this.plusoneData_);
        this.memoizedSerializedSize = k;
      }
    }

    public final boolean hasPlusoneData()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeMessage(1, this.plusoneData_);
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Network.DeletePlusOneResponse, Builder>
      implements Network.DeletePlusOneResponseOrBuilder
    {
      private int bitField0_;
      private Data.PlusOneData plusoneData_ = Data.PlusOneData.getDefaultInstance();

      private Network.DeletePlusOneResponse buildPartial()
      {
        Network.DeletePlusOneResponse localDeletePlusOneResponse = new Network.DeletePlusOneResponse(this, (byte)0);
        int i = 0x1 & this.bitField0_;
        int j = 0;
        if (i == 1)
          j = 1;
        Network.DeletePlusOneResponse.access$34602(localDeletePlusOneResponse, this.plusoneData_);
        Network.DeletePlusOneResponse.access$34702(localDeletePlusOneResponse, j);
        return localDeletePlusOneResponse;
      }

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 10:
          }
          Data.PlusOneData.Builder localBuilder = Data.PlusOneData.newBuilder();
          if (hasPlusoneData())
            localBuilder.mergeFrom(getPlusoneData());
          paramCodedInputStream.readMessage(localBuilder, paramExtensionRegistryLite);
          setPlusoneData(localBuilder.buildPartial());
        }
      }

      public final Builder clear()
      {
        super.clear();
        this.plusoneData_ = Data.PlusOneData.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        return this;
      }

      public final Builder clearPlusoneData()
      {
        this.plusoneData_ = Data.PlusOneData.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        return this;
      }

      public final Network.DeletePlusOneResponse getDefaultInstanceForType()
      {
        return Network.DeletePlusOneResponse.getDefaultInstance();
      }

      public final Data.PlusOneData getPlusoneData()
      {
        return this.plusoneData_;
      }

      public final boolean hasPlusoneData()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Network.DeletePlusOneResponse paramDeletePlusOneResponse)
      {
        if (paramDeletePlusOneResponse == Network.DeletePlusOneResponse.getDefaultInstance());
        while (!paramDeletePlusOneResponse.hasPlusoneData())
          return this;
        Data.PlusOneData localPlusOneData = paramDeletePlusOneResponse.getPlusoneData();
        if (((0x1 & this.bitField0_) == 1) && (this.plusoneData_ != Data.PlusOneData.getDefaultInstance()));
        for (this.plusoneData_ = Data.PlusOneData.newBuilder(this.plusoneData_).mergeFrom(localPlusOneData).buildPartial(); ; this.plusoneData_ = localPlusOneData)
        {
          this.bitField0_ = (0x1 | this.bitField0_);
          break;
        }
      }

      public final Builder setPlusoneData(Data.PlusOneData.Builder paramBuilder)
      {
        this.plusoneData_ = paramBuilder.build();
        this.bitField0_ = (0x1 | this.bitField0_);
        return this;
      }

      public final Builder setPlusoneData(Data.PlusOneData paramPlusOneData)
      {
        if (paramPlusOneData == null)
          throw new NullPointerException();
        this.plusoneData_ = paramPlusOneData;
        this.bitField0_ = (0x1 | this.bitField0_);
        return this;
      }
    }
  }

  public static abstract interface DeletePlusOneResponseOrBuilder extends MessageLiteOrBuilder
  {
    public abstract Data.PlusOneData getPlusoneData();

    public abstract boolean hasPlusoneData();
  }

  public static final class EditPhotoAlbumRequest extends GeneratedMessageLite
    implements Network.EditPhotoAlbumRequestOrBuilder
  {
    private static final EditPhotoAlbumRequest defaultInstance;
    private static final long serialVersionUID;
    private long albumId_;
    private int bitField0_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private Object name_;

    static
    {
      EditPhotoAlbumRequest localEditPhotoAlbumRequest = new EditPhotoAlbumRequest();
      defaultInstance = localEditPhotoAlbumRequest;
      localEditPhotoAlbumRequest.albumId_ = 0L;
      localEditPhotoAlbumRequest.name_ = "";
    }

    private EditPhotoAlbumRequest()
    {
    }

    private EditPhotoAlbumRequest(Builder paramBuilder)
    {
      super();
    }

    public static EditPhotoAlbumRequest getDefaultInstance()
    {
      return defaultInstance;
    }

    private ByteString getNameBytes()
    {
      Object localObject = this.name_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.name_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public final long getAlbumId()
    {
      return this.albumId_;
    }

    public final EditPhotoAlbumRequest getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final String getName()
    {
      Object localObject1 = this.name_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.name_ = str;
      }
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeInt64Size(1, this.albumId_);
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeBytesSize(2, getNameBytes());
        this.memoizedSerializedSize = k;
      }
    }

    public final boolean hasAlbumId()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean hasName()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeInt64(1, this.albumId_);
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeBytes(2, getNameBytes());
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Network.EditPhotoAlbumRequest, Builder>
      implements Network.EditPhotoAlbumRequestOrBuilder
    {
      private long albumId_;
      private int bitField0_;
      private Object name_ = "";

      private Network.EditPhotoAlbumRequest buildPartial()
      {
        Network.EditPhotoAlbumRequest localEditPhotoAlbumRequest = new Network.EditPhotoAlbumRequest(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Network.EditPhotoAlbumRequest.access$73902(localEditPhotoAlbumRequest, this.albumId_);
        if ((i & 0x2) == 2)
          k |= 2;
        Network.EditPhotoAlbumRequest.access$74002(localEditPhotoAlbumRequest, this.name_);
        Network.EditPhotoAlbumRequest.access$74102(localEditPhotoAlbumRequest, k);
        return localEditPhotoAlbumRequest;
      }

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 8:
            this.bitField0_ = (0x1 | this.bitField0_);
            this.albumId_ = paramCodedInputStream.readInt64();
            break;
          case 18:
          }
          this.bitField0_ = (0x2 | this.bitField0_);
          this.name_ = paramCodedInputStream.readBytes();
        }
      }

      public final Builder clear()
      {
        super.clear();
        this.albumId_ = 0L;
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.name_ = "";
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        return this;
      }

      public final Builder clearAlbumId()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.albumId_ = 0L;
        return this;
      }

      public final Builder clearName()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.name_ = Network.EditPhotoAlbumRequest.getDefaultInstance().getName();
        return this;
      }

      public final long getAlbumId()
      {
        return this.albumId_;
      }

      public final Network.EditPhotoAlbumRequest getDefaultInstanceForType()
      {
        return Network.EditPhotoAlbumRequest.getDefaultInstance();
      }

      public final String getName()
      {
        Object localObject = this.name_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.name_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final boolean hasAlbumId()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean hasName()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Network.EditPhotoAlbumRequest paramEditPhotoAlbumRequest)
      {
        if (paramEditPhotoAlbumRequest == Network.EditPhotoAlbumRequest.getDefaultInstance());
        while (true)
        {
          return this;
          if (paramEditPhotoAlbumRequest.hasAlbumId())
            setAlbumId(paramEditPhotoAlbumRequest.getAlbumId());
          if (paramEditPhotoAlbumRequest.hasName())
            setName(paramEditPhotoAlbumRequest.getName());
        }
      }

      public final Builder setAlbumId(long paramLong)
      {
        this.bitField0_ = (0x1 | this.bitField0_);
        this.albumId_ = paramLong;
        return this;
      }

      public final Builder setName(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x2 | this.bitField0_);
        this.name_ = paramString;
        return this;
      }
    }
  }

  public static abstract interface EditPhotoAlbumRequestOrBuilder extends MessageLiteOrBuilder
  {
    public abstract long getAlbumId();

    public abstract String getName();

    public abstract boolean hasAlbumId();

    public abstract boolean hasName();
  }

  public static final class EditPhotoAlbumResponse extends GeneratedMessageLite
    implements Network.EditPhotoAlbumResponseOrBuilder
  {
    private static final EditPhotoAlbumResponse defaultInstance;
    private static final long serialVersionUID;
    private Data.PhotoAlbum album_;
    private int bitField0_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;

    static
    {
      EditPhotoAlbumResponse localEditPhotoAlbumResponse = new EditPhotoAlbumResponse();
      defaultInstance = localEditPhotoAlbumResponse;
      localEditPhotoAlbumResponse.album_ = Data.PhotoAlbum.getDefaultInstance();
    }

    private EditPhotoAlbumResponse()
    {
    }

    private EditPhotoAlbumResponse(Builder paramBuilder)
    {
      super();
    }

    public static EditPhotoAlbumResponse getDefaultInstance()
    {
      return defaultInstance;
    }

    public final Data.PhotoAlbum getAlbum()
    {
      return this.album_;
    }

    public final EditPhotoAlbumResponse getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeMessageSize(1, this.album_);
        this.memoizedSerializedSize = k;
      }
    }

    public final boolean hasAlbum()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        if ((hasAlbum()) && (!getAlbum().isInitialized()))
        {
          this.memoizedIsInitialized = 0;
          i = 0;
        }
        else
        {
          this.memoizedIsInitialized = i;
        }
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeMessage(1, this.album_);
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Network.EditPhotoAlbumResponse, Builder>
      implements Network.EditPhotoAlbumResponseOrBuilder
    {
      private Data.PhotoAlbum album_ = Data.PhotoAlbum.getDefaultInstance();
      private int bitField0_;

      private Network.EditPhotoAlbumResponse buildPartial()
      {
        Network.EditPhotoAlbumResponse localEditPhotoAlbumResponse = new Network.EditPhotoAlbumResponse(this, (byte)0);
        int i = 0x1 & this.bitField0_;
        int j = 0;
        if (i == 1)
          j = 1;
        Network.EditPhotoAlbumResponse.access$74502(localEditPhotoAlbumResponse, this.album_);
        Network.EditPhotoAlbumResponse.access$74602(localEditPhotoAlbumResponse, j);
        return localEditPhotoAlbumResponse;
      }

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 10:
          }
          Data.PhotoAlbum.Builder localBuilder = Data.PhotoAlbum.newBuilder();
          if (hasAlbum())
            localBuilder.mergeFrom(getAlbum());
          paramCodedInputStream.readMessage(localBuilder, paramExtensionRegistryLite);
          setAlbum(localBuilder.buildPartial());
        }
      }

      public final Builder clear()
      {
        super.clear();
        this.album_ = Data.PhotoAlbum.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        return this;
      }

      public final Builder clearAlbum()
      {
        this.album_ = Data.PhotoAlbum.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        return this;
      }

      public final Data.PhotoAlbum getAlbum()
      {
        return this.album_;
      }

      public final Network.EditPhotoAlbumResponse getDefaultInstanceForType()
      {
        return Network.EditPhotoAlbumResponse.getDefaultInstance();
      }

      public final boolean hasAlbum()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean isInitialized()
      {
        if ((hasAlbum()) && (!getAlbum().isInitialized()));
        for (boolean bool = false; ; bool = true)
          return bool;
      }

      public final Builder mergeFrom(Network.EditPhotoAlbumResponse paramEditPhotoAlbumResponse)
      {
        if (paramEditPhotoAlbumResponse == Network.EditPhotoAlbumResponse.getDefaultInstance());
        while (!paramEditPhotoAlbumResponse.hasAlbum())
          return this;
        Data.PhotoAlbum localPhotoAlbum = paramEditPhotoAlbumResponse.getAlbum();
        if (((0x1 & this.bitField0_) == 1) && (this.album_ != Data.PhotoAlbum.getDefaultInstance()));
        for (this.album_ = Data.PhotoAlbum.newBuilder(this.album_).mergeFrom(localPhotoAlbum).buildPartial(); ; this.album_ = localPhotoAlbum)
        {
          this.bitField0_ = (0x1 | this.bitField0_);
          break;
        }
      }

      public final Builder setAlbum(Data.PhotoAlbum.Builder paramBuilder)
      {
        this.album_ = paramBuilder.build();
        this.bitField0_ = (0x1 | this.bitField0_);
        return this;
      }

      public final Builder setAlbum(Data.PhotoAlbum paramPhotoAlbum)
      {
        if (paramPhotoAlbum == null)
          throw new NullPointerException();
        this.album_ = paramPhotoAlbum;
        this.bitField0_ = (0x1 | this.bitField0_);
        return this;
      }
    }
  }

  public static abstract interface EditPhotoAlbumResponseOrBuilder extends MessageLiteOrBuilder
  {
    public abstract Data.PhotoAlbum getAlbum();

    public abstract boolean hasAlbum();
  }

  public static final class GetActivitiesParams extends GeneratedMessageLite
    implements Network.GetActivitiesParamsOrBuilder
  {
    private static final GetActivitiesParams defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private boolean collapsedDataOnly_;
    private Object continuationToken_;
    private boolean fetchPopularPost_;
    private Object focusGroupId_;
    private Object focusObfuscatedId_;
    private Object gaiaGroupId_;
    private Data.Location location_;
    private int maxCount_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private Object searchQuery_;
    private ViewSorting sorting_;
    private long userGaiaId_;
    private View view_;

    static
    {
      GetActivitiesParams localGetActivitiesParams = new GetActivitiesParams();
      defaultInstance = localGetActivitiesParams;
      localGetActivitiesParams.searchQuery_ = "";
      localGetActivitiesParams.location_ = Data.Location.getDefaultInstance();
      localGetActivitiesParams.userGaiaId_ = 0L;
      localGetActivitiesParams.focusObfuscatedId_ = "";
      localGetActivitiesParams.continuationToken_ = "";
      localGetActivitiesParams.focusGroupId_ = "";
      localGetActivitiesParams.gaiaGroupId_ = "";
      localGetActivitiesParams.sorting_ = ViewSorting.BEST;
      localGetActivitiesParams.maxCount_ = 0;
      localGetActivitiesParams.view_ = View.ALL;
      localGetActivitiesParams.collapsedDataOnly_ = false;
      localGetActivitiesParams.fetchPopularPost_ = false;
    }

    private GetActivitiesParams()
    {
    }

    private GetActivitiesParams(Builder paramBuilder)
    {
      super();
    }

    private ByteString getContinuationTokenBytes()
    {
      Object localObject = this.continuationToken_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.continuationToken_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static GetActivitiesParams getDefaultInstance()
    {
      return defaultInstance;
    }

    private ByteString getFocusGroupIdBytes()
    {
      Object localObject = this.focusGroupId_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.focusGroupId_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    private ByteString getFocusObfuscatedIdBytes()
    {
      Object localObject = this.focusObfuscatedId_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.focusObfuscatedId_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    private ByteString getGaiaGroupIdBytes()
    {
      Object localObject = this.gaiaGroupId_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.gaiaGroupId_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    private ByteString getSearchQueryBytes()
    {
      Object localObject = this.searchQuery_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.searchQuery_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static Builder newBuilder()
    {
      return Builder.access$3800();
    }

    public static Builder newBuilder(GetActivitiesParams paramGetActivitiesParams)
    {
      return Builder.access$3800().mergeFrom(paramGetActivitiesParams);
    }

    public final boolean getCollapsedDataOnly()
    {
      return this.collapsedDataOnly_;
    }

    public final String getContinuationToken()
    {
      Object localObject1 = this.continuationToken_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.continuationToken_ = str;
      }
    }

    public final GetActivitiesParams getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final boolean getFetchPopularPost()
    {
      return this.fetchPopularPost_;
    }

    public final String getFocusGroupId()
    {
      Object localObject1 = this.focusGroupId_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.focusGroupId_ = str;
      }
    }

    public final String getFocusObfuscatedId()
    {
      Object localObject1 = this.focusObfuscatedId_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.focusObfuscatedId_ = str;
      }
    }

    public final String getGaiaGroupId()
    {
      Object localObject1 = this.gaiaGroupId_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.gaiaGroupId_ = str;
      }
    }

    public final Data.Location getLocation()
    {
      return this.location_;
    }

    public final int getMaxCount()
    {
      return this.maxCount_;
    }

    @Deprecated
    public final String getSearchQuery()
    {
      Object localObject1 = this.searchQuery_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.searchQuery_ = str;
      }
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeBytesSize(1, getSearchQueryBytes());
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeMessageSize(2, this.location_);
        if ((0x4 & this.bitField0_) == 4)
          k += CodedOutputStream.computeInt64Size(3, this.userGaiaId_);
        if ((0x10 & this.bitField0_) == 16)
          k += CodedOutputStream.computeBytesSize(4, getContinuationTokenBytes());
        if ((0x20 & this.bitField0_) == 32)
          k += CodedOutputStream.computeBytesSize(5, getFocusGroupIdBytes());
        if ((0x40 & this.bitField0_) == 64)
          k += CodedOutputStream.computeBytesSize(6, getGaiaGroupIdBytes());
        if ((0x80 & this.bitField0_) == 128)
          k += CodedOutputStream.computeEnumSize(7, this.sorting_.getNumber());
        if ((0x100 & this.bitField0_) == 256)
          k += CodedOutputStream.computeInt32Size(8, this.maxCount_);
        if ((0x200 & this.bitField0_) == 512)
          k += CodedOutputStream.computeEnumSize(9, this.view_.getNumber());
        if ((0x8 & this.bitField0_) == 8)
          k += CodedOutputStream.computeBytesSize(10, getFocusObfuscatedIdBytes());
        if ((0x400 & this.bitField0_) == 1024)
          k += CodedOutputStream.computeBoolSize(11, this.collapsedDataOnly_);
        if ((0x800 & this.bitField0_) == 2048)
          k += CodedOutputStream.computeBoolSize(12, this.fetchPopularPost_);
        this.memoizedSerializedSize = k;
      }
    }

    @Deprecated
    public final ViewSorting getSorting()
    {
      return this.sorting_;
    }

    public final long getUserGaiaId()
    {
      return this.userGaiaId_;
    }

    public final View getView()
    {
      return this.view_;
    }

    public final boolean hasCollapsedDataOnly()
    {
      if ((0x400 & this.bitField0_) == 1024);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasContinuationToken()
    {
      if ((0x10 & this.bitField0_) == 16);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasFetchPopularPost()
    {
      if ((0x800 & this.bitField0_) == 2048);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasFocusGroupId()
    {
      if ((0x20 & this.bitField0_) == 32);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasFocusObfuscatedId()
    {
      if ((0x8 & this.bitField0_) == 8);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasGaiaGroupId()
    {
      if ((0x40 & this.bitField0_) == 64);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasLocation()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasMaxCount()
    {
      if ((0x100 & this.bitField0_) == 256);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    @Deprecated
    public final boolean hasSearchQuery()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    @Deprecated
    public final boolean hasSorting()
    {
      if ((0x80 & this.bitField0_) == 128);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasUserGaiaId()
    {
      if ((0x4 & this.bitField0_) == 4);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasView()
    {
      if ((0x200 & this.bitField0_) == 512);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        if ((hasLocation()) && (!getLocation().isInitialized()))
        {
          this.memoizedIsInitialized = 0;
          i = 0;
        }
        else
        {
          this.memoizedIsInitialized = i;
        }
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeBytes(1, getSearchQueryBytes());
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeMessage(2, this.location_);
      if ((0x4 & this.bitField0_) == 4)
        paramCodedOutputStream.writeInt64(3, this.userGaiaId_);
      if ((0x10 & this.bitField0_) == 16)
        paramCodedOutputStream.writeBytes(4, getContinuationTokenBytes());
      if ((0x20 & this.bitField0_) == 32)
        paramCodedOutputStream.writeBytes(5, getFocusGroupIdBytes());
      if ((0x40 & this.bitField0_) == 64)
        paramCodedOutputStream.writeBytes(6, getGaiaGroupIdBytes());
      if ((0x80 & this.bitField0_) == 128)
        paramCodedOutputStream.writeEnum(7, this.sorting_.getNumber());
      if ((0x100 & this.bitField0_) == 256)
        paramCodedOutputStream.writeInt32(8, this.maxCount_);
      if ((0x200 & this.bitField0_) == 512)
        paramCodedOutputStream.writeEnum(9, this.view_.getNumber());
      if ((0x8 & this.bitField0_) == 8)
        paramCodedOutputStream.writeBytes(10, getFocusObfuscatedIdBytes());
      if ((0x400 & this.bitField0_) == 1024)
        paramCodedOutputStream.writeBool(11, this.collapsedDataOnly_);
      if ((0x800 & this.bitField0_) == 2048)
        paramCodedOutputStream.writeBool(12, this.fetchPopularPost_);
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Network.GetActivitiesParams, Builder>
      implements Network.GetActivitiesParamsOrBuilder
    {
      private int bitField0_;
      private boolean collapsedDataOnly_;
      private Object continuationToken_ = "";
      private boolean fetchPopularPost_;
      private Object focusGroupId_ = "";
      private Object focusObfuscatedId_ = "";
      private Object gaiaGroupId_ = "";
      private Data.Location location_ = Data.Location.getDefaultInstance();
      private int maxCount_;
      private Object searchQuery_ = "";
      private Network.GetActivitiesParams.ViewSorting sorting_ = Network.GetActivitiesParams.ViewSorting.BEST;
      private long userGaiaId_;
      private Network.GetActivitiesParams.View view_ = Network.GetActivitiesParams.View.ALL;

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 10:
            this.bitField0_ = (0x1 | this.bitField0_);
            this.searchQuery_ = paramCodedInputStream.readBytes();
            break;
          case 18:
            Data.Location.Builder localBuilder = Data.Location.newBuilder();
            if (hasLocation())
              localBuilder.mergeFrom(getLocation());
            paramCodedInputStream.readMessage(localBuilder, paramExtensionRegistryLite);
            setLocation(localBuilder.buildPartial());
            break;
          case 24:
            this.bitField0_ = (0x4 | this.bitField0_);
            this.userGaiaId_ = paramCodedInputStream.readInt64();
            break;
          case 34:
            this.bitField0_ = (0x10 | this.bitField0_);
            this.continuationToken_ = paramCodedInputStream.readBytes();
            break;
          case 42:
            this.bitField0_ = (0x20 | this.bitField0_);
            this.focusGroupId_ = paramCodedInputStream.readBytes();
            break;
          case 50:
            this.bitField0_ = (0x40 | this.bitField0_);
            this.gaiaGroupId_ = paramCodedInputStream.readBytes();
            break;
          case 56:
            Network.GetActivitiesParams.ViewSorting localViewSorting = Network.GetActivitiesParams.ViewSorting.valueOf(paramCodedInputStream.readEnum());
            if (localViewSorting == null)
              continue;
            this.bitField0_ = (0x80 | this.bitField0_);
            this.sorting_ = localViewSorting;
            break;
          case 64:
            this.bitField0_ = (0x100 | this.bitField0_);
            this.maxCount_ = paramCodedInputStream.readInt32();
            break;
          case 72:
            Network.GetActivitiesParams.View localView = Network.GetActivitiesParams.View.valueOf(paramCodedInputStream.readEnum());
            if (localView == null)
              continue;
            this.bitField0_ = (0x200 | this.bitField0_);
            this.view_ = localView;
            break;
          case 82:
            this.bitField0_ = (0x8 | this.bitField0_);
            this.focusObfuscatedId_ = paramCodedInputStream.readBytes();
            break;
          case 88:
            this.bitField0_ = (0x400 | this.bitField0_);
            this.collapsedDataOnly_ = paramCodedInputStream.readBool();
            break;
          case 96:
          }
          this.bitField0_ = (0x800 | this.bitField0_);
          this.fetchPopularPost_ = paramCodedInputStream.readBool();
        }
      }

      public final Network.GetActivitiesParams build()
      {
        Network.GetActivitiesParams localGetActivitiesParams = buildPartial();
        if (!localGetActivitiesParams.isInitialized())
          throw new UninitializedMessageException();
        return localGetActivitiesParams;
      }

      public final Network.GetActivitiesParams buildPartial()
      {
        Network.GetActivitiesParams localGetActivitiesParams = new Network.GetActivitiesParams(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Network.GetActivitiesParams.access$4002(localGetActivitiesParams, this.searchQuery_);
        if ((i & 0x2) == 2)
          k |= 2;
        Network.GetActivitiesParams.access$4102(localGetActivitiesParams, this.location_);
        if ((i & 0x4) == 4)
          k |= 4;
        Network.GetActivitiesParams.access$4202(localGetActivitiesParams, this.userGaiaId_);
        if ((i & 0x8) == 8)
          k |= 8;
        Network.GetActivitiesParams.access$4302(localGetActivitiesParams, this.focusObfuscatedId_);
        if ((i & 0x10) == 16)
          k |= 16;
        Network.GetActivitiesParams.access$4402(localGetActivitiesParams, this.continuationToken_);
        if ((i & 0x20) == 32)
          k |= 32;
        Network.GetActivitiesParams.access$4502(localGetActivitiesParams, this.focusGroupId_);
        if ((i & 0x40) == 64)
          k |= 64;
        Network.GetActivitiesParams.access$4602(localGetActivitiesParams, this.gaiaGroupId_);
        if ((i & 0x80) == 128)
          k |= 128;
        Network.GetActivitiesParams.access$4702(localGetActivitiesParams, this.sorting_);
        if ((i & 0x100) == 256)
          k |= 256;
        Network.GetActivitiesParams.access$4802(localGetActivitiesParams, this.maxCount_);
        if ((i & 0x200) == 512)
          k |= 512;
        Network.GetActivitiesParams.access$4902(localGetActivitiesParams, this.view_);
        if ((i & 0x400) == 1024)
          k |= 1024;
        Network.GetActivitiesParams.access$5002(localGetActivitiesParams, this.collapsedDataOnly_);
        if ((i & 0x800) == 2048)
          k |= 2048;
        Network.GetActivitiesParams.access$5102(localGetActivitiesParams, this.fetchPopularPost_);
        Network.GetActivitiesParams.access$5202(localGetActivitiesParams, k);
        return localGetActivitiesParams;
      }

      public final Builder clear()
      {
        super.clear();
        this.searchQuery_ = "";
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.location_ = Data.Location.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.userGaiaId_ = 0L;
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.focusObfuscatedId_ = "";
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        this.continuationToken_ = "";
        this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        this.focusGroupId_ = "";
        this.bitField0_ = (0xFFFFFFDF & this.bitField0_);
        this.gaiaGroupId_ = "";
        this.bitField0_ = (0xFFFFFFBF & this.bitField0_);
        this.sorting_ = Network.GetActivitiesParams.ViewSorting.BEST;
        this.bitField0_ = (0xFFFFFF7F & this.bitField0_);
        this.maxCount_ = 0;
        this.bitField0_ = (0xFFFFFEFF & this.bitField0_);
        this.view_ = Network.GetActivitiesParams.View.ALL;
        this.bitField0_ = (0xFFFFFDFF & this.bitField0_);
        this.collapsedDataOnly_ = false;
        this.bitField0_ = (0xFFFFFBFF & this.bitField0_);
        this.fetchPopularPost_ = false;
        this.bitField0_ = (0xFFFFF7FF & this.bitField0_);
        return this;
      }

      public final Builder clearCollapsedDataOnly()
      {
        this.bitField0_ = (0xFFFFFBFF & this.bitField0_);
        this.collapsedDataOnly_ = false;
        return this;
      }

      public final Builder clearContinuationToken()
      {
        this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        this.continuationToken_ = Network.GetActivitiesParams.getDefaultInstance().getContinuationToken();
        return this;
      }

      public final Builder clearFetchPopularPost()
      {
        this.bitField0_ = (0xFFFFF7FF & this.bitField0_);
        this.fetchPopularPost_ = false;
        return this;
      }

      public final Builder clearFocusGroupId()
      {
        this.bitField0_ = (0xFFFFFFDF & this.bitField0_);
        this.focusGroupId_ = Network.GetActivitiesParams.getDefaultInstance().getFocusGroupId();
        return this;
      }

      public final Builder clearFocusObfuscatedId()
      {
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        this.focusObfuscatedId_ = Network.GetActivitiesParams.getDefaultInstance().getFocusObfuscatedId();
        return this;
      }

      public final Builder clearGaiaGroupId()
      {
        this.bitField0_ = (0xFFFFFFBF & this.bitField0_);
        this.gaiaGroupId_ = Network.GetActivitiesParams.getDefaultInstance().getGaiaGroupId();
        return this;
      }

      public final Builder clearLocation()
      {
        this.location_ = Data.Location.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        return this;
      }

      public final Builder clearMaxCount()
      {
        this.bitField0_ = (0xFFFFFEFF & this.bitField0_);
        this.maxCount_ = 0;
        return this;
      }

      @Deprecated
      public final Builder clearSearchQuery()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.searchQuery_ = Network.GetActivitiesParams.getDefaultInstance().getSearchQuery();
        return this;
      }

      @Deprecated
      public final Builder clearSorting()
      {
        this.bitField0_ = (0xFFFFFF7F & this.bitField0_);
        this.sorting_ = Network.GetActivitiesParams.ViewSorting.BEST;
        return this;
      }

      public final Builder clearUserGaiaId()
      {
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.userGaiaId_ = 0L;
        return this;
      }

      public final Builder clearView()
      {
        this.bitField0_ = (0xFFFFFDFF & this.bitField0_);
        this.view_ = Network.GetActivitiesParams.View.ALL;
        return this;
      }

      public final boolean getCollapsedDataOnly()
      {
        return this.collapsedDataOnly_;
      }

      public final String getContinuationToken()
      {
        Object localObject = this.continuationToken_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.continuationToken_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final Network.GetActivitiesParams getDefaultInstanceForType()
      {
        return Network.GetActivitiesParams.getDefaultInstance();
      }

      public final boolean getFetchPopularPost()
      {
        return this.fetchPopularPost_;
      }

      public final String getFocusGroupId()
      {
        Object localObject = this.focusGroupId_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.focusGroupId_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final String getFocusObfuscatedId()
      {
        Object localObject = this.focusObfuscatedId_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.focusObfuscatedId_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final String getGaiaGroupId()
      {
        Object localObject = this.gaiaGroupId_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.gaiaGroupId_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final Data.Location getLocation()
      {
        return this.location_;
      }

      public final int getMaxCount()
      {
        return this.maxCount_;
      }

      @Deprecated
      public final String getSearchQuery()
      {
        Object localObject = this.searchQuery_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.searchQuery_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      @Deprecated
      public final Network.GetActivitiesParams.ViewSorting getSorting()
      {
        return this.sorting_;
      }

      public final long getUserGaiaId()
      {
        return this.userGaiaId_;
      }

      public final Network.GetActivitiesParams.View getView()
      {
        return this.view_;
      }

      public final boolean hasCollapsedDataOnly()
      {
        if ((0x400 & this.bitField0_) == 1024);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasContinuationToken()
      {
        if ((0x10 & this.bitField0_) == 16);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasFetchPopularPost()
      {
        if ((0x800 & this.bitField0_) == 2048);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasFocusGroupId()
      {
        if ((0x20 & this.bitField0_) == 32);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasFocusObfuscatedId()
      {
        if ((0x8 & this.bitField0_) == 8);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasGaiaGroupId()
      {
        if ((0x40 & this.bitField0_) == 64);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasLocation()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasMaxCount()
      {
        if ((0x100 & this.bitField0_) == 256);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      @Deprecated
      public final boolean hasSearchQuery()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      @Deprecated
      public final boolean hasSorting()
      {
        if ((0x80 & this.bitField0_) == 128);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasUserGaiaId()
      {
        if ((0x4 & this.bitField0_) == 4);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasView()
      {
        if ((0x200 & this.bitField0_) == 512);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean isInitialized()
      {
        if ((hasLocation()) && (!getLocation().isInitialized()));
        for (boolean bool = false; ; bool = true)
          return bool;
      }

      public final Builder mergeFrom(Network.GetActivitiesParams paramGetActivitiesParams)
      {
        if (paramGetActivitiesParams == Network.GetActivitiesParams.getDefaultInstance())
          return this;
        if (paramGetActivitiesParams.hasSearchQuery())
          setSearchQuery(paramGetActivitiesParams.getSearchQuery());
        Data.Location localLocation;
        if (paramGetActivitiesParams.hasLocation())
        {
          localLocation = paramGetActivitiesParams.getLocation();
          if (((0x2 & this.bitField0_) != 2) || (this.location_ == Data.Location.getDefaultInstance()))
            break label250;
        }
        label250: for (this.location_ = Data.Location.newBuilder(this.location_).mergeFrom(localLocation).buildPartial(); ; this.location_ = localLocation)
        {
          this.bitField0_ = (0x2 | this.bitField0_);
          if (paramGetActivitiesParams.hasUserGaiaId())
            setUserGaiaId(paramGetActivitiesParams.getUserGaiaId());
          if (paramGetActivitiesParams.hasFocusObfuscatedId())
            setFocusObfuscatedId(paramGetActivitiesParams.getFocusObfuscatedId());
          if (paramGetActivitiesParams.hasContinuationToken())
            setContinuationToken(paramGetActivitiesParams.getContinuationToken());
          if (paramGetActivitiesParams.hasFocusGroupId())
            setFocusGroupId(paramGetActivitiesParams.getFocusGroupId());
          if (paramGetActivitiesParams.hasGaiaGroupId())
            setGaiaGroupId(paramGetActivitiesParams.getGaiaGroupId());
          if (paramGetActivitiesParams.hasSorting())
            setSorting(paramGetActivitiesParams.getSorting());
          if (paramGetActivitiesParams.hasMaxCount())
            setMaxCount(paramGetActivitiesParams.getMaxCount());
          if (paramGetActivitiesParams.hasView())
            setView(paramGetActivitiesParams.getView());
          if (paramGetActivitiesParams.hasCollapsedDataOnly())
            setCollapsedDataOnly(paramGetActivitiesParams.getCollapsedDataOnly());
          if (!paramGetActivitiesParams.hasFetchPopularPost())
            break;
          setFetchPopularPost(paramGetActivitiesParams.getFetchPopularPost());
          break;
        }
      }

      public final Builder setCollapsedDataOnly(boolean paramBoolean)
      {
        this.bitField0_ = (0x400 | this.bitField0_);
        this.collapsedDataOnly_ = paramBoolean;
        return this;
      }

      public final Builder setContinuationToken(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x10 | this.bitField0_);
        this.continuationToken_ = paramString;
        return this;
      }

      public final Builder setFetchPopularPost(boolean paramBoolean)
      {
        this.bitField0_ = (0x800 | this.bitField0_);
        this.fetchPopularPost_ = paramBoolean;
        return this;
      }

      public final Builder setFocusGroupId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x20 | this.bitField0_);
        this.focusGroupId_ = paramString;
        return this;
      }

      public final Builder setFocusObfuscatedId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x8 | this.bitField0_);
        this.focusObfuscatedId_ = paramString;
        return this;
      }

      public final Builder setGaiaGroupId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x40 | this.bitField0_);
        this.gaiaGroupId_ = paramString;
        return this;
      }

      public final Builder setLocation(Data.Location.Builder paramBuilder)
      {
        this.location_ = paramBuilder.build();
        this.bitField0_ = (0x2 | this.bitField0_);
        return this;
      }

      public final Builder setLocation(Data.Location paramLocation)
      {
        if (paramLocation == null)
          throw new NullPointerException();
        this.location_ = paramLocation;
        this.bitField0_ = (0x2 | this.bitField0_);
        return this;
      }

      public final Builder setMaxCount(int paramInt)
      {
        this.bitField0_ = (0x100 | this.bitField0_);
        this.maxCount_ = paramInt;
        return this;
      }

      @Deprecated
      public final Builder setSearchQuery(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x1 | this.bitField0_);
        this.searchQuery_ = paramString;
        return this;
      }

      @Deprecated
      public final Builder setSorting(Network.GetActivitiesParams.ViewSorting paramViewSorting)
      {
        if (paramViewSorting == null)
          throw new NullPointerException();
        this.bitField0_ = (0x80 | this.bitField0_);
        this.sorting_ = paramViewSorting;
        return this;
      }

      public final Builder setUserGaiaId(long paramLong)
      {
        this.bitField0_ = (0x4 | this.bitField0_);
        this.userGaiaId_ = paramLong;
        return this;
      }

      public final Builder setView(Network.GetActivitiesParams.View paramView)
      {
        if (paramView == null)
          throw new NullPointerException();
        this.bitField0_ = (0x200 | this.bitField0_);
        this.view_ = paramView;
        return this;
      }
    }

    public static enum View
      implements Internal.EnumLite
    {
      private static Internal.EnumLiteMap<View> internalValueMap = new Internal.EnumLiteMap()
      {
      };
      private final int value;

      static
      {
        NEWS = new View("NEWS", 4, 5);
        NOTIFICATIONS = new View("NOTIFICATIONS", 5, 6);
        COUPONS = new View("COUPONS", 6, 7);
        PLACES = new View("PLACES", 7, 8);
        MAIN = new View("MAIN", 8, 9);
        CIRCLES = new View("CIRCLES", 9, 10);
        ALL_MEDIA = new View("ALL_MEDIA", 10, 11);
        NEARBY_PLACES = new View("NEARBY_PLACES", 11, 12);
        NEARBY_POSTS = new View("NEARBY_POSTS", 12, 13);
        STRANGERS = new View("STRANGERS", 13, 14);
        GAMES = new View("GAMES", 14, 15);
        WHATS_HOT = new View("WHATS_HOT", 15, 16);
        View[] arrayOfView = new View[16];
        arrayOfView[0] = ALL;
        arrayOfView[1] = NEARBY;
        arrayOfView[2] = PHOTOS;
        arrayOfView[3] = VIDEOS;
        arrayOfView[4] = NEWS;
        arrayOfView[5] = NOTIFICATIONS;
        arrayOfView[6] = COUPONS;
        arrayOfView[7] = PLACES;
        arrayOfView[8] = MAIN;
        arrayOfView[9] = CIRCLES;
        arrayOfView[10] = ALL_MEDIA;
        arrayOfView[11] = NEARBY_PLACES;
        arrayOfView[12] = NEARBY_POSTS;
        arrayOfView[13] = STRANGERS;
        arrayOfView[14] = GAMES;
        arrayOfView[15] = WHATS_HOT;
      }

      private View(int paramInt1, int paramInt2)
      {
        this.value = paramInt1;
      }

      public static View valueOf(int paramInt)
      {
        View localView;
        switch (paramInt)
        {
        default:
          localView = null;
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
        case 6:
        case 7:
        case 8:
        case 9:
        case 10:
        case 11:
        case 12:
        case 13:
        case 14:
        case 15:
        case 16:
        }
        while (true)
        {
          return localView;
          localView = ALL;
          continue;
          localView = NEARBY;
          continue;
          localView = PHOTOS;
          continue;
          localView = VIDEOS;
          continue;
          localView = NEWS;
          continue;
          localView = NOTIFICATIONS;
          continue;
          localView = COUPONS;
          continue;
          localView = PLACES;
          continue;
          localView = MAIN;
          continue;
          localView = CIRCLES;
          continue;
          localView = ALL_MEDIA;
          continue;
          localView = NEARBY_PLACES;
          continue;
          localView = NEARBY_POSTS;
          continue;
          localView = STRANGERS;
          continue;
          localView = GAMES;
          continue;
          localView = WHATS_HOT;
        }
      }

      public final int getNumber()
      {
        return this.value;
      }
    }

    public static enum ViewSorting
      implements Internal.EnumLite
    {
      private static Internal.EnumLiteMap<ViewSorting> internalValueMap = new Internal.EnumLiteMap()
      {
      };
      private final int value;

      static
      {
        ViewSorting[] arrayOfViewSorting = new ViewSorting[2];
        arrayOfViewSorting[0] = BEST;
        arrayOfViewSorting[1] = RECENT;
      }

      private ViewSorting(int paramInt1, int paramInt2)
      {
        this.value = paramInt1;
      }

      public static ViewSorting valueOf(int paramInt)
      {
        ViewSorting localViewSorting;
        switch (paramInt)
        {
        default:
          localViewSorting = null;
        case 0:
        case 1:
        }
        while (true)
        {
          return localViewSorting;
          localViewSorting = BEST;
          continue;
          localViewSorting = RECENT;
        }
      }

      public final int getNumber()
      {
        return this.value;
      }
    }
  }

  public static abstract interface GetActivitiesParamsOrBuilder extends MessageLiteOrBuilder
  {
    public abstract boolean getCollapsedDataOnly();

    public abstract String getContinuationToken();

    public abstract boolean getFetchPopularPost();

    public abstract String getFocusGroupId();

    public abstract String getFocusObfuscatedId();

    public abstract String getGaiaGroupId();

    public abstract Data.Location getLocation();

    public abstract int getMaxCount();

    @Deprecated
    public abstract String getSearchQuery();

    @Deprecated
    public abstract Network.GetActivitiesParams.ViewSorting getSorting();

    public abstract long getUserGaiaId();

    public abstract Network.GetActivitiesParams.View getView();

    public abstract boolean hasCollapsedDataOnly();

    public abstract boolean hasContinuationToken();

    public abstract boolean hasFetchPopularPost();

    public abstract boolean hasFocusGroupId();

    public abstract boolean hasFocusObfuscatedId();

    public abstract boolean hasGaiaGroupId();

    public abstract boolean hasLocation();

    public abstract boolean hasMaxCount();

    @Deprecated
    public abstract boolean hasSearchQuery();

    @Deprecated
    public abstract boolean hasSorting();

    public abstract boolean hasUserGaiaId();

    public abstract boolean hasView();
  }

  public static final class GetActivitiesRequest extends GeneratedMessageLite
    implements Network.GetActivitiesRequestOrBuilder
  {
    private static final GetActivitiesRequest defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private int maxCount_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private Network.GetActivitiesParams params_;
    private View view_;

    static
    {
      GetActivitiesRequest localGetActivitiesRequest = new GetActivitiesRequest();
      defaultInstance = localGetActivitiesRequest;
      localGetActivitiesRequest.view_ = View.ALL;
      localGetActivitiesRequest.maxCount_ = 0;
      localGetActivitiesRequest.params_ = Network.GetActivitiesParams.getDefaultInstance();
    }

    private GetActivitiesRequest()
    {
    }

    private GetActivitiesRequest(Builder paramBuilder)
    {
      super();
    }

    public static GetActivitiesRequest getDefaultInstance()
    {
      return defaultInstance;
    }

    public final GetActivitiesRequest getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    @Deprecated
    public final int getMaxCount()
    {
      return this.maxCount_;
    }

    public final Network.GetActivitiesParams getParams()
    {
      return this.params_;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeEnumSize(1, this.view_.getNumber());
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeInt32Size(2, this.maxCount_);
        if ((0x4 & this.bitField0_) == 4)
          k += CodedOutputStream.computeMessageSize(3, this.params_);
        this.memoizedSerializedSize = k;
      }
    }

    @Deprecated
    public final View getView()
    {
      return this.view_;
    }

    @Deprecated
    public final boolean hasMaxCount()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasParams()
    {
      if ((0x4 & this.bitField0_) == 4);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    @Deprecated
    public final boolean hasView()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        if ((hasParams()) && (!getParams().isInitialized()))
        {
          this.memoizedIsInitialized = 0;
          i = 0;
        }
        else
        {
          this.memoizedIsInitialized = i;
        }
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeEnum(1, this.view_.getNumber());
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeInt32(2, this.maxCount_);
      if ((0x4 & this.bitField0_) == 4)
        paramCodedOutputStream.writeMessage(3, this.params_);
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Network.GetActivitiesRequest, Builder>
      implements Network.GetActivitiesRequestOrBuilder
    {
      private int bitField0_;
      private int maxCount_;
      private Network.GetActivitiesParams params_ = Network.GetActivitiesParams.getDefaultInstance();
      private Network.GetActivitiesRequest.View view_ = Network.GetActivitiesRequest.View.ALL;

      private Network.GetActivitiesRequest buildPartial()
      {
        Network.GetActivitiesRequest localGetActivitiesRequest = new Network.GetActivitiesRequest(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Network.GetActivitiesRequest.access$3302(localGetActivitiesRequest, this.view_);
        if ((i & 0x2) == 2)
          k |= 2;
        Network.GetActivitiesRequest.access$3402(localGetActivitiesRequest, this.maxCount_);
        if ((i & 0x4) == 4)
          k |= 4;
        Network.GetActivitiesRequest.access$3502(localGetActivitiesRequest, this.params_);
        Network.GetActivitiesRequest.access$3602(localGetActivitiesRequest, k);
        return localGetActivitiesRequest;
      }

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 8:
            Network.GetActivitiesRequest.View localView = Network.GetActivitiesRequest.View.valueOf(paramCodedInputStream.readEnum());
            if (localView == null)
              continue;
            this.bitField0_ = (0x1 | this.bitField0_);
            this.view_ = localView;
            break;
          case 16:
            this.bitField0_ = (0x2 | this.bitField0_);
            this.maxCount_ = paramCodedInputStream.readInt32();
            break;
          case 26:
          }
          Network.GetActivitiesParams.Builder localBuilder = Network.GetActivitiesParams.newBuilder();
          if (hasParams())
            localBuilder.mergeFrom(getParams());
          paramCodedInputStream.readMessage(localBuilder, paramExtensionRegistryLite);
          setParams(localBuilder.buildPartial());
        }
      }

      public final Builder clear()
      {
        super.clear();
        this.view_ = Network.GetActivitiesRequest.View.ALL;
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.maxCount_ = 0;
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.params_ = Network.GetActivitiesParams.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        return this;
      }

      @Deprecated
      public final Builder clearMaxCount()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.maxCount_ = 0;
        return this;
      }

      public final Builder clearParams()
      {
        this.params_ = Network.GetActivitiesParams.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        return this;
      }

      @Deprecated
      public final Builder clearView()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.view_ = Network.GetActivitiesRequest.View.ALL;
        return this;
      }

      public final Network.GetActivitiesRequest getDefaultInstanceForType()
      {
        return Network.GetActivitiesRequest.getDefaultInstance();
      }

      @Deprecated
      public final int getMaxCount()
      {
        return this.maxCount_;
      }

      public final Network.GetActivitiesParams getParams()
      {
        return this.params_;
      }

      @Deprecated
      public final Network.GetActivitiesRequest.View getView()
      {
        return this.view_;
      }

      @Deprecated
      public final boolean hasMaxCount()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasParams()
      {
        if ((0x4 & this.bitField0_) == 4);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      @Deprecated
      public final boolean hasView()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean isInitialized()
      {
        if ((hasParams()) && (!getParams().isInitialized()));
        for (boolean bool = false; ; bool = true)
          return bool;
      }

      public final Builder mergeFrom(Network.GetActivitiesRequest paramGetActivitiesRequest)
      {
        if (paramGetActivitiesRequest == Network.GetActivitiesRequest.getDefaultInstance());
        do
        {
          return this;
          if (paramGetActivitiesRequest.hasView())
            setView(paramGetActivitiesRequest.getView());
          if (paramGetActivitiesRequest.hasMaxCount())
            setMaxCount(paramGetActivitiesRequest.getMaxCount());
        }
        while (!paramGetActivitiesRequest.hasParams());
        Network.GetActivitiesParams localGetActivitiesParams = paramGetActivitiesRequest.getParams();
        if (((0x4 & this.bitField0_) == 4) && (this.params_ != Network.GetActivitiesParams.getDefaultInstance()));
        for (this.params_ = Network.GetActivitiesParams.newBuilder(this.params_).mergeFrom(localGetActivitiesParams).buildPartial(); ; this.params_ = localGetActivitiesParams)
        {
          this.bitField0_ = (0x4 | this.bitField0_);
          break;
        }
      }

      @Deprecated
      public final Builder setMaxCount(int paramInt)
      {
        this.bitField0_ = (0x2 | this.bitField0_);
        this.maxCount_ = paramInt;
        return this;
      }

      public final Builder setParams(Network.GetActivitiesParams.Builder paramBuilder)
      {
        this.params_ = paramBuilder.build();
        this.bitField0_ = (0x4 | this.bitField0_);
        return this;
      }

      public final Builder setParams(Network.GetActivitiesParams paramGetActivitiesParams)
      {
        if (paramGetActivitiesParams == null)
          throw new NullPointerException();
        this.params_ = paramGetActivitiesParams;
        this.bitField0_ = (0x4 | this.bitField0_);
        return this;
      }

      @Deprecated
      public final Builder setView(Network.GetActivitiesRequest.View paramView)
      {
        if (paramView == null)
          throw new NullPointerException();
        this.bitField0_ = (0x1 | this.bitField0_);
        this.view_ = paramView;
        return this;
      }
    }

    public static enum View
      implements Internal.EnumLite
    {
      private static Internal.EnumLiteMap<View> internalValueMap = new Internal.EnumLiteMap()
      {
      };
      private final int value;

      static
      {
        NEWS = new View("NEWS", 4, 5);
        NOTIFICATIONS = new View("NOTIFICATIONS", 5, 6);
        COUPONS = new View("COUPONS", 6, 7);
        PLACES = new View("PLACES", 7, 8);
        MAIN = new View("MAIN", 8, 9);
        CIRCLES = new View("CIRCLES", 9, 10);
        ALL_MEDIA = new View("ALL_MEDIA", 10, 11);
        NEARBY_PLACES = new View("NEARBY_PLACES", 11, 12);
        NEARBY_POSTS = new View("NEARBY_POSTS", 12, 13);
        STRANGERS = new View("STRANGERS", 13, 14);
        GAMES = new View("GAMES", 14, 15);
        WHATS_HOT = new View("WHATS_HOT", 15, 16);
        View[] arrayOfView = new View[16];
        arrayOfView[0] = ALL;
        arrayOfView[1] = NEARBY;
        arrayOfView[2] = PHOTOS;
        arrayOfView[3] = VIDEOS;
        arrayOfView[4] = NEWS;
        arrayOfView[5] = NOTIFICATIONS;
        arrayOfView[6] = COUPONS;
        arrayOfView[7] = PLACES;
        arrayOfView[8] = MAIN;
        arrayOfView[9] = CIRCLES;
        arrayOfView[10] = ALL_MEDIA;
        arrayOfView[11] = NEARBY_PLACES;
        arrayOfView[12] = NEARBY_POSTS;
        arrayOfView[13] = STRANGERS;
        arrayOfView[14] = GAMES;
        arrayOfView[15] = WHATS_HOT;
      }

      private View(int paramInt1, int paramInt2)
      {
        this.value = paramInt1;
      }

      public static View valueOf(int paramInt)
      {
        View localView;
        switch (paramInt)
        {
        default:
          localView = null;
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
        case 6:
        case 7:
        case 8:
        case 9:
        case 10:
        case 11:
        case 12:
        case 13:
        case 14:
        case 15:
        case 16:
        }
        while (true)
        {
          return localView;
          localView = ALL;
          continue;
          localView = NEARBY;
          continue;
          localView = PHOTOS;
          continue;
          localView = VIDEOS;
          continue;
          localView = NEWS;
          continue;
          localView = NOTIFICATIONS;
          continue;
          localView = COUPONS;
          continue;
          localView = PLACES;
          continue;
          localView = MAIN;
          continue;
          localView = CIRCLES;
          continue;
          localView = ALL_MEDIA;
          continue;
          localView = NEARBY_PLACES;
          continue;
          localView = NEARBY_POSTS;
          continue;
          localView = STRANGERS;
          continue;
          localView = GAMES;
          continue;
          localView = WHATS_HOT;
        }
      }

      public final int getNumber()
      {
        return this.value;
      }
    }
  }

  public static abstract interface GetActivitiesRequestOrBuilder extends MessageLiteOrBuilder
  {
    @Deprecated
    public abstract int getMaxCount();

    public abstract Network.GetActivitiesParams getParams();

    @Deprecated
    public abstract Network.GetActivitiesRequest.View getView();

    @Deprecated
    public abstract boolean hasMaxCount();

    public abstract boolean hasParams();

    @Deprecated
    public abstract boolean hasView();
  }

  public static final class GetActivitiesResponse extends GeneratedMessageLite
    implements Network.GetActivitiesResponseOrBuilder
  {
    private static final GetActivitiesResponse defaultInstance;
    private static final long serialVersionUID;
    private List<Data.PerfectStreamActivity> activity_;
    private int bitField0_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private Object nextContinuationToken_;

    static
    {
      GetActivitiesResponse localGetActivitiesResponse = new GetActivitiesResponse();
      defaultInstance = localGetActivitiesResponse;
      localGetActivitiesResponse.activity_ = Collections.emptyList();
      localGetActivitiesResponse.nextContinuationToken_ = "";
    }

    private GetActivitiesResponse()
    {
    }

    private GetActivitiesResponse(Builder paramBuilder)
    {
      super();
    }

    public static GetActivitiesResponse getDefaultInstance()
    {
      return defaultInstance;
    }

    private ByteString getNextContinuationTokenBytes()
    {
      Object localObject = this.nextContinuationToken_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.nextContinuationToken_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public final Data.PerfectStreamActivity getActivity(int paramInt)
    {
      return (Data.PerfectStreamActivity)this.activity_.get(paramInt);
    }

    public final int getActivityCount()
    {
      return this.activity_.size();
    }

    public final List<Data.PerfectStreamActivity> getActivityList()
    {
      return this.activity_;
    }

    public final Data.PerfectStreamActivityOrBuilder getActivityOrBuilder(int paramInt)
    {
      return (Data.PerfectStreamActivityOrBuilder)this.activity_.get(paramInt);
    }

    public final List<? extends Data.PerfectStreamActivityOrBuilder> getActivityOrBuilderList()
    {
      return this.activity_;
    }

    public final GetActivitiesResponse getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final String getNextContinuationToken()
    {
      Object localObject1 = this.nextContinuationToken_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.nextContinuationToken_ = str;
      }
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int j;
      for (int m = i; ; m = j)
      {
        return m;
        j = 0;
        for (int k = 0; k < this.activity_.size(); k++)
          j += CodedOutputStream.computeMessageSize(1, (MessageLite)this.activity_.get(k));
        if ((0x1 & this.bitField0_) == 1)
          j += CodedOutputStream.computeBytesSize(2, getNextContinuationTokenBytes());
        this.memoizedSerializedSize = j;
      }
    }

    public final boolean hasNextContinuationToken()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        for (int k = 0; ; k++)
        {
          if (k >= getActivityCount())
            break label61;
          if (!getActivity(k).isInitialized())
          {
            this.memoizedIsInitialized = 0;
            i = 0;
            break;
          }
        }
        label61: this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      for (int i = 0; i < this.activity_.size(); i++)
        paramCodedOutputStream.writeMessage(1, (MessageLite)this.activity_.get(i));
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeBytes(2, getNextContinuationTokenBytes());
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Network.GetActivitiesResponse, Builder>
      implements Network.GetActivitiesResponseOrBuilder
    {
      private List<Data.PerfectStreamActivity> activity_ = Collections.emptyList();
      private int bitField0_;
      private Object nextContinuationToken_ = "";

      private Network.GetActivitiesResponse buildPartial()
      {
        Network.GetActivitiesResponse localGetActivitiesResponse = new Network.GetActivitiesResponse(this, (byte)0);
        int i = this.bitField0_;
        if ((0x1 & this.bitField0_) == 1)
        {
          this.activity_ = Collections.unmodifiableList(this.activity_);
          this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        }
        Network.GetActivitiesResponse.access$5602(localGetActivitiesResponse, this.activity_);
        int j = i & 0x2;
        int k = 0;
        if (j == 2)
          k = 1;
        Network.GetActivitiesResponse.access$5702(localGetActivitiesResponse, this.nextContinuationToken_);
        Network.GetActivitiesResponse.access$5802(localGetActivitiesResponse, k);
        return localGetActivitiesResponse;
      }

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private void ensureActivityIsMutable()
      {
        if ((0x1 & this.bitField0_) != 1)
        {
          this.activity_ = new ArrayList(this.activity_);
          this.bitField0_ = (0x1 | this.bitField0_);
        }
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 10:
            Data.PerfectStreamActivity.Builder localBuilder = Data.PerfectStreamActivity.newBuilder();
            paramCodedInputStream.readMessage(localBuilder, paramExtensionRegistryLite);
            addActivity(localBuilder.buildPartial());
            break;
          case 18:
          }
          this.bitField0_ = (0x2 | this.bitField0_);
          this.nextContinuationToken_ = paramCodedInputStream.readBytes();
        }
      }

      public final Builder addActivity(int paramInt, Data.PerfectStreamActivity.Builder paramBuilder)
      {
        ensureActivityIsMutable();
        this.activity_.add(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder addActivity(int paramInt, Data.PerfectStreamActivity paramPerfectStreamActivity)
      {
        if (paramPerfectStreamActivity == null)
          throw new NullPointerException();
        ensureActivityIsMutable();
        this.activity_.add(paramInt, paramPerfectStreamActivity);
        return this;
      }

      public final Builder addActivity(Data.PerfectStreamActivity.Builder paramBuilder)
      {
        ensureActivityIsMutable();
        this.activity_.add(paramBuilder.build());
        return this;
      }

      public final Builder addActivity(Data.PerfectStreamActivity paramPerfectStreamActivity)
      {
        if (paramPerfectStreamActivity == null)
          throw new NullPointerException();
        ensureActivityIsMutable();
        this.activity_.add(paramPerfectStreamActivity);
        return this;
      }

      public final Builder addAllActivity(Iterable<? extends Data.PerfectStreamActivity> paramIterable)
      {
        ensureActivityIsMutable();
        GeneratedMessageLite.Builder.addAll(paramIterable, this.activity_);
        return this;
      }

      public final Builder clear()
      {
        super.clear();
        this.activity_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.nextContinuationToken_ = "";
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        return this;
      }

      public final Builder clearActivity()
      {
        this.activity_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        return this;
      }

      public final Builder clearNextContinuationToken()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.nextContinuationToken_ = Network.GetActivitiesResponse.getDefaultInstance().getNextContinuationToken();
        return this;
      }

      public final Data.PerfectStreamActivity getActivity(int paramInt)
      {
        return (Data.PerfectStreamActivity)this.activity_.get(paramInt);
      }

      public final int getActivityCount()
      {
        return this.activity_.size();
      }

      public final List<Data.PerfectStreamActivity> getActivityList()
      {
        return Collections.unmodifiableList(this.activity_);
      }

      public final Network.GetActivitiesResponse getDefaultInstanceForType()
      {
        return Network.GetActivitiesResponse.getDefaultInstance();
      }

      public final String getNextContinuationToken()
      {
        Object localObject = this.nextContinuationToken_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.nextContinuationToken_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final boolean hasNextContinuationToken()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean isInitialized()
      {
        int i = 0;
        if (i < getActivityCount())
          if (getActivity(i).isInitialized());
        for (boolean bool = false; ; bool = true)
        {
          return bool;
          i++;
          break;
        }
      }

      public final Builder mergeFrom(Network.GetActivitiesResponse paramGetActivitiesResponse)
      {
        if (paramGetActivitiesResponse == Network.GetActivitiesResponse.getDefaultInstance());
        label71: label90: 
        while (true)
        {
          return this;
          if (!paramGetActivitiesResponse.activity_.isEmpty())
          {
            if (!this.activity_.isEmpty())
              break label71;
            this.activity_ = paramGetActivitiesResponse.activity_;
            this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
          }
          while (true)
          {
            if (!paramGetActivitiesResponse.hasNextContinuationToken())
              break label90;
            setNextContinuationToken(paramGetActivitiesResponse.getNextContinuationToken());
            break;
            ensureActivityIsMutable();
            this.activity_.addAll(paramGetActivitiesResponse.activity_);
          }
        }
      }

      public final Builder setActivity(int paramInt, Data.PerfectStreamActivity.Builder paramBuilder)
      {
        ensureActivityIsMutable();
        this.activity_.set(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder setActivity(int paramInt, Data.PerfectStreamActivity paramPerfectStreamActivity)
      {
        if (paramPerfectStreamActivity == null)
          throw new NullPointerException();
        ensureActivityIsMutable();
        this.activity_.set(paramInt, paramPerfectStreamActivity);
        return this;
      }

      public final Builder setNextContinuationToken(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x2 | this.bitField0_);
        this.nextContinuationToken_ = paramString;
        return this;
      }
    }
  }

  public static abstract interface GetActivitiesResponseOrBuilder extends MessageLiteOrBuilder
  {
    public abstract Data.PerfectStreamActivity getActivity(int paramInt);

    public abstract int getActivityCount();

    public abstract List<Data.PerfectStreamActivity> getActivityList();

    public abstract String getNextContinuationToken();

    public abstract boolean hasNextContinuationToken();
  }

  public static final class GetActivityOrderRequest extends GeneratedMessageLite
    implements Network.GetActivityOrderRequestOrBuilder
  {
    private static final GetActivityOrderRequest defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private Network.GetActivitiesParams params_;
    private int populatedCount_;

    static
    {
      GetActivityOrderRequest localGetActivityOrderRequest = new GetActivityOrderRequest();
      defaultInstance = localGetActivityOrderRequest;
      localGetActivityOrderRequest.params_ = Network.GetActivitiesParams.getDefaultInstance();
      localGetActivityOrderRequest.populatedCount_ = 0;
    }

    private GetActivityOrderRequest()
    {
    }

    private GetActivityOrderRequest(Builder paramBuilder)
    {
      super();
    }

    public static GetActivityOrderRequest getDefaultInstance()
    {
      return defaultInstance;
    }

    public final GetActivityOrderRequest getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final Network.GetActivitiesParams getParams()
    {
      return this.params_;
    }

    public final int getPopulatedCount()
    {
      return this.populatedCount_;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeMessageSize(1, this.params_);
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeInt32Size(2, this.populatedCount_);
        this.memoizedSerializedSize = k;
      }
    }

    public final boolean hasParams()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean hasPopulatedCount()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        if ((hasParams()) && (!getParams().isInitialized()))
        {
          this.memoizedIsInitialized = 0;
          i = 0;
        }
        else
        {
          this.memoizedIsInitialized = i;
        }
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeMessage(1, this.params_);
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeInt32(2, this.populatedCount_);
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Network.GetActivityOrderRequest, Builder>
      implements Network.GetActivityOrderRequestOrBuilder
    {
      private int bitField0_;
      private Network.GetActivitiesParams params_ = Network.GetActivitiesParams.getDefaultInstance();
      private int populatedCount_;

      private Network.GetActivityOrderRequest buildPartial()
      {
        Network.GetActivityOrderRequest localGetActivityOrderRequest = new Network.GetActivityOrderRequest(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Network.GetActivityOrderRequest.access$8202(localGetActivityOrderRequest, this.params_);
        if ((i & 0x2) == 2)
          k |= 2;
        Network.GetActivityOrderRequest.access$8302(localGetActivityOrderRequest, this.populatedCount_);
        Network.GetActivityOrderRequest.access$8402(localGetActivityOrderRequest, k);
        return localGetActivityOrderRequest;
      }

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 10:
            Network.GetActivitiesParams.Builder localBuilder = Network.GetActivitiesParams.newBuilder();
            if (hasParams())
              localBuilder.mergeFrom(getParams());
            paramCodedInputStream.readMessage(localBuilder, paramExtensionRegistryLite);
            setParams(localBuilder.buildPartial());
            break;
          case 16:
          }
          this.bitField0_ = (0x2 | this.bitField0_);
          this.populatedCount_ = paramCodedInputStream.readInt32();
        }
      }

      public final Builder clear()
      {
        super.clear();
        this.params_ = Network.GetActivitiesParams.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.populatedCount_ = 0;
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        return this;
      }

      public final Builder clearParams()
      {
        this.params_ = Network.GetActivitiesParams.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        return this;
      }

      public final Builder clearPopulatedCount()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.populatedCount_ = 0;
        return this;
      }

      public final Network.GetActivityOrderRequest getDefaultInstanceForType()
      {
        return Network.GetActivityOrderRequest.getDefaultInstance();
      }

      public final Network.GetActivitiesParams getParams()
      {
        return this.params_;
      }

      public final int getPopulatedCount()
      {
        return this.populatedCount_;
      }

      public final boolean hasParams()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean hasPopulatedCount()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean isInitialized()
      {
        if ((hasParams()) && (!getParams().isInitialized()));
        for (boolean bool = false; ; bool = true)
          return bool;
      }

      public final Builder mergeFrom(Network.GetActivityOrderRequest paramGetActivityOrderRequest)
      {
        if (paramGetActivityOrderRequest == Network.GetActivityOrderRequest.getDefaultInstance())
          return this;
        Network.GetActivitiesParams localGetActivitiesParams;
        if (paramGetActivityOrderRequest.hasParams())
        {
          localGetActivitiesParams = paramGetActivityOrderRequest.getParams();
          if (((0x1 & this.bitField0_) != 1) || (this.params_ == Network.GetActivitiesParams.getDefaultInstance()))
            break label88;
        }
        label88: for (this.params_ = Network.GetActivitiesParams.newBuilder(this.params_).mergeFrom(localGetActivitiesParams).buildPartial(); ; this.params_ = localGetActivitiesParams)
        {
          this.bitField0_ = (0x1 | this.bitField0_);
          if (!paramGetActivityOrderRequest.hasPopulatedCount())
            break;
          setPopulatedCount(paramGetActivityOrderRequest.getPopulatedCount());
          break;
        }
      }

      public final Builder setParams(Network.GetActivitiesParams.Builder paramBuilder)
      {
        this.params_ = paramBuilder.build();
        this.bitField0_ = (0x1 | this.bitField0_);
        return this;
      }

      public final Builder setParams(Network.GetActivitiesParams paramGetActivitiesParams)
      {
        if (paramGetActivitiesParams == null)
          throw new NullPointerException();
        this.params_ = paramGetActivitiesParams;
        this.bitField0_ = (0x1 | this.bitField0_);
        return this;
      }

      public final Builder setPopulatedCount(int paramInt)
      {
        this.bitField0_ = (0x2 | this.bitField0_);
        this.populatedCount_ = paramInt;
        return this;
      }
    }
  }

  public static abstract interface GetActivityOrderRequestOrBuilder extends MessageLiteOrBuilder
  {
    public abstract Network.GetActivitiesParams getParams();

    public abstract int getPopulatedCount();

    public abstract boolean hasParams();

    public abstract boolean hasPopulatedCount();
  }

  public static final class GetActivityOrderResponse extends GeneratedMessageLite
    implements Network.GetActivityOrderResponseOrBuilder
  {
    private static final GetActivityOrderResponse defaultInstance;
    private static final long serialVersionUID;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private List<Network.ActivityOrder> order_;

    static
    {
      GetActivityOrderResponse localGetActivityOrderResponse = new GetActivityOrderResponse();
      defaultInstance = localGetActivityOrderResponse;
      localGetActivityOrderResponse.order_ = Collections.emptyList();
    }

    private GetActivityOrderResponse()
    {
    }

    private GetActivityOrderResponse(Builder paramBuilder)
    {
      super();
    }

    public static GetActivityOrderResponse getDefaultInstance()
    {
      return defaultInstance;
    }

    public final GetActivityOrderResponse getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final Network.ActivityOrder getOrder(int paramInt)
    {
      return (Network.ActivityOrder)this.order_.get(paramInt);
    }

    public final int getOrderCount()
    {
      return this.order_.size();
    }

    public final List<Network.ActivityOrder> getOrderList()
    {
      return this.order_;
    }

    public final Network.ActivityOrderOrBuilder getOrderOrBuilder(int paramInt)
    {
      return (Network.ActivityOrderOrBuilder)this.order_.get(paramInt);
    }

    public final List<? extends Network.ActivityOrderOrBuilder> getOrderOrBuilderList()
    {
      return this.order_;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int j;
      for (int m = i; ; m = j)
      {
        return m;
        j = 0;
        for (int k = 0; k < this.order_.size(); k++)
          j += CodedOutputStream.computeMessageSize(1, (MessageLite)this.order_.get(k));
        this.memoizedSerializedSize = j;
      }
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        for (int k = 0; ; k++)
        {
          if (k >= getOrderCount())
            break label61;
          if (!getOrder(k).isInitialized())
          {
            this.memoizedIsInitialized = 0;
            i = 0;
            break;
          }
        }
        label61: this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      for (int i = 0; i < this.order_.size(); i++)
        paramCodedOutputStream.writeMessage(1, (MessageLite)this.order_.get(i));
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Network.GetActivityOrderResponse, Builder>
      implements Network.GetActivityOrderResponseOrBuilder
    {
      private int bitField0_;
      private List<Network.ActivityOrder> order_ = Collections.emptyList();

      private Network.GetActivityOrderResponse buildPartial()
      {
        Network.GetActivityOrderResponse localGetActivityOrderResponse = new Network.GetActivityOrderResponse(this, (byte)0);
        if ((0x1 & this.bitField0_) == 1)
        {
          this.order_ = Collections.unmodifiableList(this.order_);
          this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        }
        Network.GetActivityOrderResponse.access$8802(localGetActivityOrderResponse, this.order_);
        return localGetActivityOrderResponse;
      }

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private void ensureOrderIsMutable()
      {
        if ((0x1 & this.bitField0_) != 1)
        {
          this.order_ = new ArrayList(this.order_);
          this.bitField0_ = (0x1 | this.bitField0_);
        }
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 10:
          }
          Network.ActivityOrder.Builder localBuilder = Network.ActivityOrder.newBuilder();
          paramCodedInputStream.readMessage(localBuilder, paramExtensionRegistryLite);
          addOrder(localBuilder.buildPartial());
        }
      }

      public final Builder addAllOrder(Iterable<? extends Network.ActivityOrder> paramIterable)
      {
        ensureOrderIsMutable();
        GeneratedMessageLite.Builder.addAll(paramIterable, this.order_);
        return this;
      }

      public final Builder addOrder(int paramInt, Network.ActivityOrder.Builder paramBuilder)
      {
        ensureOrderIsMutable();
        this.order_.add(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder addOrder(int paramInt, Network.ActivityOrder paramActivityOrder)
      {
        if (paramActivityOrder == null)
          throw new NullPointerException();
        ensureOrderIsMutable();
        this.order_.add(paramInt, paramActivityOrder);
        return this;
      }

      public final Builder addOrder(Network.ActivityOrder.Builder paramBuilder)
      {
        ensureOrderIsMutable();
        this.order_.add(paramBuilder.build());
        return this;
      }

      public final Builder addOrder(Network.ActivityOrder paramActivityOrder)
      {
        if (paramActivityOrder == null)
          throw new NullPointerException();
        ensureOrderIsMutable();
        this.order_.add(paramActivityOrder);
        return this;
      }

      public final Builder clear()
      {
        super.clear();
        this.order_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        return this;
      }

      public final Builder clearOrder()
      {
        this.order_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        return this;
      }

      public final Network.GetActivityOrderResponse getDefaultInstanceForType()
      {
        return Network.GetActivityOrderResponse.getDefaultInstance();
      }

      public final Network.ActivityOrder getOrder(int paramInt)
      {
        return (Network.ActivityOrder)this.order_.get(paramInt);
      }

      public final int getOrderCount()
      {
        return this.order_.size();
      }

      public final List<Network.ActivityOrder> getOrderList()
      {
        return Collections.unmodifiableList(this.order_);
      }

      public final boolean isInitialized()
      {
        int i = 0;
        if (i < getOrderCount())
          if (getOrder(i).isInitialized());
        for (boolean bool = false; ; bool = true)
        {
          return bool;
          i++;
          break;
        }
      }

      public final Builder mergeFrom(Network.GetActivityOrderResponse paramGetActivityOrderResponse)
      {
        if (paramGetActivityOrderResponse == Network.GetActivityOrderResponse.getDefaultInstance());
        while (true)
        {
          return this;
          if (!paramGetActivityOrderResponse.order_.isEmpty())
            if (this.order_.isEmpty())
            {
              this.order_ = paramGetActivityOrderResponse.order_;
              this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
            }
            else
            {
              ensureOrderIsMutable();
              this.order_.addAll(paramGetActivityOrderResponse.order_);
            }
        }
      }

      public final Builder setOrder(int paramInt, Network.ActivityOrder.Builder paramBuilder)
      {
        ensureOrderIsMutable();
        this.order_.set(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder setOrder(int paramInt, Network.ActivityOrder paramActivityOrder)
      {
        if (paramActivityOrder == null)
          throw new NullPointerException();
        ensureOrderIsMutable();
        this.order_.set(paramInt, paramActivityOrder);
        return this;
      }
    }
  }

  public static abstract interface GetActivityOrderResponseOrBuilder extends MessageLiteOrBuilder
  {
    public abstract Network.ActivityOrder getOrder(int paramInt);

    public abstract int getOrderCount();

    public abstract List<Network.ActivityOrder> getOrderList();
  }

  public static final class GetActivityRequest extends GeneratedMessageLite
    implements Network.GetActivityRequestOrBuilder
  {
    private static final GetActivityRequest defaultInstance;
    private static final long serialVersionUID;
    private LazyStringList activityId_;
    private int bitField0_;
    private boolean collapsedDataOnly_;
    private boolean fetchReadState_;
    private IdType idType_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private LazyStringList obfuscatedOwnerId_;

    static
    {
      GetActivityRequest localGetActivityRequest = new GetActivityRequest();
      defaultInstance = localGetActivityRequest;
      localGetActivityRequest.activityId_ = LazyStringArrayList.EMPTY;
      localGetActivityRequest.idType_ = IdType.MOBILE;
      localGetActivityRequest.collapsedDataOnly_ = false;
      localGetActivityRequest.fetchReadState_ = false;
      localGetActivityRequest.obfuscatedOwnerId_ = LazyStringArrayList.EMPTY;
    }

    private GetActivityRequest()
    {
    }

    private GetActivityRequest(Builder paramBuilder)
    {
      super();
    }

    public static GetActivityRequest getDefaultInstance()
    {
      return defaultInstance;
    }

    public final String getActivityId(int paramInt)
    {
      return (String)this.activityId_.get(paramInt);
    }

    public final int getActivityIdCount()
    {
      return this.activityId_.size();
    }

    public final List<String> getActivityIdList()
    {
      return this.activityId_;
    }

    public final boolean getCollapsedDataOnly()
    {
      return this.collapsedDataOnly_;
    }

    public final GetActivityRequest getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final boolean getFetchReadState()
    {
      return this.fetchReadState_;
    }

    public final IdType getIdType()
    {
      return this.idType_;
    }

    public final String getObfuscatedOwnerId(int paramInt)
    {
      return (String)this.obfuscatedOwnerId_.get(paramInt);
    }

    public final int getObfuscatedOwnerIdCount()
    {
      return this.obfuscatedOwnerId_.size();
    }

    public final List<String> getObfuscatedOwnerIdList()
    {
      return this.obfuscatedOwnerId_;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int i2;
      for (int i3 = i; ; i3 = i2)
      {
        return i3;
        int j = 0;
        for (int k = 0; k < this.activityId_.size(); k++)
          j += CodedOutputStream.computeBytesSizeNoTag(this.activityId_.getByteString(k));
        int m = j + 0 + 1 * getActivityIdList().size();
        if ((0x1 & this.bitField0_) == 1)
          m += CodedOutputStream.computeEnumSize(2, this.idType_.getNumber());
        if ((0x2 & this.bitField0_) == 2)
          m += CodedOutputStream.computeBoolSize(3, this.collapsedDataOnly_);
        if ((0x4 & this.bitField0_) == 4)
          m += CodedOutputStream.computeBoolSize(4, this.fetchReadState_);
        int n = 0;
        for (int i1 = 0; i1 < this.obfuscatedOwnerId_.size(); i1++)
          n += CodedOutputStream.computeBytesSizeNoTag(this.obfuscatedOwnerId_.getByteString(i1));
        i2 = m + n + 1 * getObfuscatedOwnerIdList().size();
        this.memoizedSerializedSize = i2;
      }
    }

    public final boolean hasCollapsedDataOnly()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasFetchReadState()
    {
      if ((0x4 & this.bitField0_) == 4);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasIdType()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      for (int i = 0; i < this.activityId_.size(); i++)
        paramCodedOutputStream.writeBytes(1, this.activityId_.getByteString(i));
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeEnum(2, this.idType_.getNumber());
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeBool(3, this.collapsedDataOnly_);
      if ((0x4 & this.bitField0_) == 4)
        paramCodedOutputStream.writeBool(4, this.fetchReadState_);
      for (int j = 0; j < this.obfuscatedOwnerId_.size(); j++)
        paramCodedOutputStream.writeBytes(5, this.obfuscatedOwnerId_.getByteString(j));
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Network.GetActivityRequest, Builder>
      implements Network.GetActivityRequestOrBuilder
    {
      private LazyStringList activityId_ = LazyStringArrayList.EMPTY;
      private int bitField0_;
      private boolean collapsedDataOnly_;
      private boolean fetchReadState_;
      private Network.GetActivityRequest.IdType idType_ = Network.GetActivityRequest.IdType.MOBILE;
      private LazyStringList obfuscatedOwnerId_ = LazyStringArrayList.EMPTY;

      private Network.GetActivityRequest buildPartial()
      {
        Network.GetActivityRequest localGetActivityRequest = new Network.GetActivityRequest(this, (byte)0);
        int i = this.bitField0_;
        if ((0x1 & this.bitField0_) == 1)
        {
          this.activityId_ = new UnmodifiableLazyStringList(this.activityId_);
          this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        }
        Network.GetActivityRequest.access$6202(localGetActivityRequest, this.activityId_);
        int j = i & 0x2;
        int k = 0;
        if (j == 2)
          k = 1;
        Network.GetActivityRequest.access$6302(localGetActivityRequest, this.idType_);
        if ((i & 0x4) == 4)
          k |= 2;
        Network.GetActivityRequest.access$6402(localGetActivityRequest, this.collapsedDataOnly_);
        if ((i & 0x8) == 8)
          k |= 4;
        Network.GetActivityRequest.access$6502(localGetActivityRequest, this.fetchReadState_);
        if ((0x10 & this.bitField0_) == 16)
        {
          this.obfuscatedOwnerId_ = new UnmodifiableLazyStringList(this.obfuscatedOwnerId_);
          this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        }
        Network.GetActivityRequest.access$6602(localGetActivityRequest, this.obfuscatedOwnerId_);
        Network.GetActivityRequest.access$6702(localGetActivityRequest, k);
        return localGetActivityRequest;
      }

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private void ensureActivityIdIsMutable()
      {
        if ((0x1 & this.bitField0_) != 1)
        {
          this.activityId_ = new LazyStringArrayList(this.activityId_);
          this.bitField0_ = (0x1 | this.bitField0_);
        }
      }

      private void ensureObfuscatedOwnerIdIsMutable()
      {
        if ((0x10 & this.bitField0_) != 16)
        {
          this.obfuscatedOwnerId_ = new LazyStringArrayList(this.obfuscatedOwnerId_);
          this.bitField0_ = (0x10 | this.bitField0_);
        }
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 10:
            ensureActivityIdIsMutable();
            this.activityId_.add(paramCodedInputStream.readBytes());
            break;
          case 16:
            Network.GetActivityRequest.IdType localIdType = Network.GetActivityRequest.IdType.valueOf(paramCodedInputStream.readEnum());
            if (localIdType == null)
              continue;
            this.bitField0_ = (0x2 | this.bitField0_);
            this.idType_ = localIdType;
            break;
          case 24:
            this.bitField0_ = (0x4 | this.bitField0_);
            this.collapsedDataOnly_ = paramCodedInputStream.readBool();
            break;
          case 32:
            this.bitField0_ = (0x8 | this.bitField0_);
            this.fetchReadState_ = paramCodedInputStream.readBool();
            break;
          case 42:
          }
          ensureObfuscatedOwnerIdIsMutable();
          this.obfuscatedOwnerId_.add(paramCodedInputStream.readBytes());
        }
      }

      public final Builder addActivityId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        ensureActivityIdIsMutable();
        this.activityId_.add(paramString);
        return this;
      }

      public final Builder addAllActivityId(Iterable<String> paramIterable)
      {
        ensureActivityIdIsMutable();
        GeneratedMessageLite.Builder.addAll(paramIterable, this.activityId_);
        return this;
      }

      public final Builder addAllObfuscatedOwnerId(Iterable<String> paramIterable)
      {
        ensureObfuscatedOwnerIdIsMutable();
        GeneratedMessageLite.Builder.addAll(paramIterable, this.obfuscatedOwnerId_);
        return this;
      }

      public final Builder addObfuscatedOwnerId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        ensureObfuscatedOwnerIdIsMutable();
        this.obfuscatedOwnerId_.add(paramString);
        return this;
      }

      public final Builder clear()
      {
        super.clear();
        this.activityId_ = LazyStringArrayList.EMPTY;
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.idType_ = Network.GetActivityRequest.IdType.MOBILE;
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.collapsedDataOnly_ = false;
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.fetchReadState_ = false;
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        this.obfuscatedOwnerId_ = LazyStringArrayList.EMPTY;
        this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        return this;
      }

      public final Builder clearActivityId()
      {
        this.activityId_ = LazyStringArrayList.EMPTY;
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        return this;
      }

      public final Builder clearCollapsedDataOnly()
      {
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.collapsedDataOnly_ = false;
        return this;
      }

      public final Builder clearFetchReadState()
      {
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        this.fetchReadState_ = false;
        return this;
      }

      public final Builder clearIdType()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.idType_ = Network.GetActivityRequest.IdType.MOBILE;
        return this;
      }

      public final Builder clearObfuscatedOwnerId()
      {
        this.obfuscatedOwnerId_ = LazyStringArrayList.EMPTY;
        this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        return this;
      }

      public final String getActivityId(int paramInt)
      {
        return (String)this.activityId_.get(paramInt);
      }

      public final int getActivityIdCount()
      {
        return this.activityId_.size();
      }

      public final List<String> getActivityIdList()
      {
        return Collections.unmodifiableList(this.activityId_);
      }

      public final boolean getCollapsedDataOnly()
      {
        return this.collapsedDataOnly_;
      }

      public final Network.GetActivityRequest getDefaultInstanceForType()
      {
        return Network.GetActivityRequest.getDefaultInstance();
      }

      public final boolean getFetchReadState()
      {
        return this.fetchReadState_;
      }

      public final Network.GetActivityRequest.IdType getIdType()
      {
        return this.idType_;
      }

      public final String getObfuscatedOwnerId(int paramInt)
      {
        return (String)this.obfuscatedOwnerId_.get(paramInt);
      }

      public final int getObfuscatedOwnerIdCount()
      {
        return this.obfuscatedOwnerId_.size();
      }

      public final List<String> getObfuscatedOwnerIdList()
      {
        return Collections.unmodifiableList(this.obfuscatedOwnerId_);
      }

      public final boolean hasCollapsedDataOnly()
      {
        if ((0x4 & this.bitField0_) == 4);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasFetchReadState()
      {
        if ((0x8 & this.bitField0_) == 8);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasIdType()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Network.GetActivityRequest paramGetActivityRequest)
      {
        if (paramGetActivityRequest == Network.GetActivityRequest.getDefaultInstance());
        while (true)
        {
          return this;
          if (!paramGetActivityRequest.activityId_.isEmpty())
          {
            if (!this.activityId_.isEmpty())
              break label146;
            this.activityId_ = paramGetActivityRequest.activityId_;
            this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
          }
          while (true)
          {
            if (paramGetActivityRequest.hasIdType())
              setIdType(paramGetActivityRequest.getIdType());
            if (paramGetActivityRequest.hasCollapsedDataOnly())
              setCollapsedDataOnly(paramGetActivityRequest.getCollapsedDataOnly());
            if (paramGetActivityRequest.hasFetchReadState())
              setFetchReadState(paramGetActivityRequest.getFetchReadState());
            if (paramGetActivityRequest.obfuscatedOwnerId_.isEmpty())
              break;
            if (!this.obfuscatedOwnerId_.isEmpty())
              break label167;
            this.obfuscatedOwnerId_ = paramGetActivityRequest.obfuscatedOwnerId_;
            this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
            break;
            label146: ensureActivityIdIsMutable();
            this.activityId_.addAll(paramGetActivityRequest.activityId_);
          }
          label167: ensureObfuscatedOwnerIdIsMutable();
          this.obfuscatedOwnerId_.addAll(paramGetActivityRequest.obfuscatedOwnerId_);
        }
      }

      public final Builder setActivityId(int paramInt, String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        ensureActivityIdIsMutable();
        this.activityId_.set(paramInt, paramString);
        return this;
      }

      public final Builder setCollapsedDataOnly(boolean paramBoolean)
      {
        this.bitField0_ = (0x4 | this.bitField0_);
        this.collapsedDataOnly_ = paramBoolean;
        return this;
      }

      public final Builder setFetchReadState(boolean paramBoolean)
      {
        this.bitField0_ = (0x8 | this.bitField0_);
        this.fetchReadState_ = paramBoolean;
        return this;
      }

      public final Builder setIdType(Network.GetActivityRequest.IdType paramIdType)
      {
        if (paramIdType == null)
          throw new NullPointerException();
        this.bitField0_ = (0x2 | this.bitField0_);
        this.idType_ = paramIdType;
        return this;
      }

      public final Builder setObfuscatedOwnerId(int paramInt, String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        ensureObfuscatedOwnerIdIsMutable();
        this.obfuscatedOwnerId_.set(paramInt, paramString);
        return this;
      }
    }

    public static enum IdType
      implements Internal.EnumLite
    {
      private static Internal.EnumLiteMap<IdType> internalValueMap = new Internal.EnumLiteMap()
      {
      };
      private final int value;

      static
      {
        DESKTOP = new IdType("DESKTOP", 1, 2);
        IdType[] arrayOfIdType = new IdType[2];
        arrayOfIdType[0] = MOBILE;
        arrayOfIdType[1] = DESKTOP;
      }

      private IdType(int paramInt1, int paramInt2)
      {
        this.value = paramInt1;
      }

      public static IdType valueOf(int paramInt)
      {
        IdType localIdType;
        switch (paramInt)
        {
        default:
          localIdType = null;
        case 1:
        case 2:
        }
        while (true)
        {
          return localIdType;
          localIdType = MOBILE;
          continue;
          localIdType = DESKTOP;
        }
      }

      public final int getNumber()
      {
        return this.value;
      }
    }
  }

  public static abstract interface GetActivityRequestOrBuilder extends MessageLiteOrBuilder
  {
    public abstract String getActivityId(int paramInt);

    public abstract int getActivityIdCount();

    public abstract List<String> getActivityIdList();

    public abstract boolean getCollapsedDataOnly();

    public abstract boolean getFetchReadState();

    public abstract Network.GetActivityRequest.IdType getIdType();

    public abstract String getObfuscatedOwnerId(int paramInt);

    public abstract int getObfuscatedOwnerIdCount();

    public abstract List<String> getObfuscatedOwnerIdList();

    public abstract boolean hasCollapsedDataOnly();

    public abstract boolean hasFetchReadState();

    public abstract boolean hasIdType();
  }

  public static final class GetActivityResponse extends GeneratedMessageLite
    implements Network.GetActivityResponseOrBuilder
  {
    private static final GetActivityResponse defaultInstance;
    private static final long serialVersionUID;
    private List<Data.PerfectStreamActivity> activity_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private List<Network.MissingActivity> missingActivity_;

    static
    {
      GetActivityResponse localGetActivityResponse = new GetActivityResponse();
      defaultInstance = localGetActivityResponse;
      localGetActivityResponse.activity_ = Collections.emptyList();
      localGetActivityResponse.missingActivity_ = Collections.emptyList();
    }

    private GetActivityResponse()
    {
    }

    private GetActivityResponse(Builder paramBuilder)
    {
      super();
    }

    public static GetActivityResponse getDefaultInstance()
    {
      return defaultInstance;
    }

    public final Data.PerfectStreamActivity getActivity(int paramInt)
    {
      return (Data.PerfectStreamActivity)this.activity_.get(paramInt);
    }

    public final int getActivityCount()
    {
      return this.activity_.size();
    }

    public final List<Data.PerfectStreamActivity> getActivityList()
    {
      return this.activity_;
    }

    public final Data.PerfectStreamActivityOrBuilder getActivityOrBuilder(int paramInt)
    {
      return (Data.PerfectStreamActivityOrBuilder)this.activity_.get(paramInt);
    }

    public final List<? extends Data.PerfectStreamActivityOrBuilder> getActivityOrBuilderList()
    {
      return this.activity_;
    }

    public final GetActivityResponse getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final Network.MissingActivity getMissingActivity(int paramInt)
    {
      return (Network.MissingActivity)this.missingActivity_.get(paramInt);
    }

    public final int getMissingActivityCount()
    {
      return this.missingActivity_.size();
    }

    public final List<Network.MissingActivity> getMissingActivityList()
    {
      return this.missingActivity_;
    }

    public final Network.MissingActivityOrBuilder getMissingActivityOrBuilder(int paramInt)
    {
      return (Network.MissingActivityOrBuilder)this.missingActivity_.get(paramInt);
    }

    public final List<? extends Network.MissingActivityOrBuilder> getMissingActivityOrBuilderList()
    {
      return this.missingActivity_;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int j;
      for (int n = i; ; n = j)
      {
        return n;
        j = 0;
        for (int k = 0; k < this.activity_.size(); k++)
          j += CodedOutputStream.computeMessageSize(1, (MessageLite)this.activity_.get(k));
        for (int m = 0; m < this.missingActivity_.size(); m++)
          j += CodedOutputStream.computeMessageSize(2, (MessageLite)this.missingActivity_.get(m));
        this.memoizedSerializedSize = j;
      }
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        for (int k = 0; ; k++)
        {
          if (k >= getActivityCount())
            break label61;
          if (!getActivity(k).isInitialized())
          {
            this.memoizedIsInitialized = 0;
            i = 0;
            break;
          }
        }
        label61: this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      for (int i = 0; i < this.activity_.size(); i++)
        paramCodedOutputStream.writeMessage(1, (MessageLite)this.activity_.get(i));
      for (int j = 0; j < this.missingActivity_.size(); j++)
        paramCodedOutputStream.writeMessage(2, (MessageLite)this.missingActivity_.get(j));
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Network.GetActivityResponse, Builder>
      implements Network.GetActivityResponseOrBuilder
    {
      private List<Data.PerfectStreamActivity> activity_ = Collections.emptyList();
      private int bitField0_;
      private List<Network.MissingActivity> missingActivity_ = Collections.emptyList();

      private Network.GetActivityResponse buildPartial()
      {
        Network.GetActivityResponse localGetActivityResponse = new Network.GetActivityResponse(this, (byte)0);
        if ((0x1 & this.bitField0_) == 1)
        {
          this.activity_ = Collections.unmodifiableList(this.activity_);
          this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        }
        Network.GetActivityResponse.access$7102(localGetActivityResponse, this.activity_);
        if ((0x2 & this.bitField0_) == 2)
        {
          this.missingActivity_ = Collections.unmodifiableList(this.missingActivity_);
          this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        }
        Network.GetActivityResponse.access$7202(localGetActivityResponse, this.missingActivity_);
        return localGetActivityResponse;
      }

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private void ensureActivityIsMutable()
      {
        if ((0x1 & this.bitField0_) != 1)
        {
          this.activity_ = new ArrayList(this.activity_);
          this.bitField0_ = (0x1 | this.bitField0_);
        }
      }

      private void ensureMissingActivityIsMutable()
      {
        if ((0x2 & this.bitField0_) != 2)
        {
          this.missingActivity_ = new ArrayList(this.missingActivity_);
          this.bitField0_ = (0x2 | this.bitField0_);
        }
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 10:
            Data.PerfectStreamActivity.Builder localBuilder1 = Data.PerfectStreamActivity.newBuilder();
            paramCodedInputStream.readMessage(localBuilder1, paramExtensionRegistryLite);
            addActivity(localBuilder1.buildPartial());
            break;
          case 18:
          }
          Network.MissingActivity.Builder localBuilder = Network.MissingActivity.newBuilder();
          paramCodedInputStream.readMessage(localBuilder, paramExtensionRegistryLite);
          addMissingActivity(localBuilder.buildPartial());
        }
      }

      public final Builder addActivity(int paramInt, Data.PerfectStreamActivity.Builder paramBuilder)
      {
        ensureActivityIsMutable();
        this.activity_.add(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder addActivity(int paramInt, Data.PerfectStreamActivity paramPerfectStreamActivity)
      {
        if (paramPerfectStreamActivity == null)
          throw new NullPointerException();
        ensureActivityIsMutable();
        this.activity_.add(paramInt, paramPerfectStreamActivity);
        return this;
      }

      public final Builder addActivity(Data.PerfectStreamActivity.Builder paramBuilder)
      {
        ensureActivityIsMutable();
        this.activity_.add(paramBuilder.build());
        return this;
      }

      public final Builder addActivity(Data.PerfectStreamActivity paramPerfectStreamActivity)
      {
        if (paramPerfectStreamActivity == null)
          throw new NullPointerException();
        ensureActivityIsMutable();
        this.activity_.add(paramPerfectStreamActivity);
        return this;
      }

      public final Builder addAllActivity(Iterable<? extends Data.PerfectStreamActivity> paramIterable)
      {
        ensureActivityIsMutable();
        GeneratedMessageLite.Builder.addAll(paramIterable, this.activity_);
        return this;
      }

      public final Builder addAllMissingActivity(Iterable<? extends Network.MissingActivity> paramIterable)
      {
        ensureMissingActivityIsMutable();
        GeneratedMessageLite.Builder.addAll(paramIterable, this.missingActivity_);
        return this;
      }

      public final Builder addMissingActivity(int paramInt, Network.MissingActivity.Builder paramBuilder)
      {
        ensureMissingActivityIsMutable();
        this.missingActivity_.add(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder addMissingActivity(int paramInt, Network.MissingActivity paramMissingActivity)
      {
        if (paramMissingActivity == null)
          throw new NullPointerException();
        ensureMissingActivityIsMutable();
        this.missingActivity_.add(paramInt, paramMissingActivity);
        return this;
      }

      public final Builder addMissingActivity(Network.MissingActivity.Builder paramBuilder)
      {
        ensureMissingActivityIsMutable();
        this.missingActivity_.add(paramBuilder.build());
        return this;
      }

      public final Builder addMissingActivity(Network.MissingActivity paramMissingActivity)
      {
        if (paramMissingActivity == null)
          throw new NullPointerException();
        ensureMissingActivityIsMutable();
        this.missingActivity_.add(paramMissingActivity);
        return this;
      }

      public final Builder clear()
      {
        super.clear();
        this.activity_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.missingActivity_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        return this;
      }

      public final Builder clearActivity()
      {
        this.activity_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        return this;
      }

      public final Builder clearMissingActivity()
      {
        this.missingActivity_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        return this;
      }

      public final Data.PerfectStreamActivity getActivity(int paramInt)
      {
        return (Data.PerfectStreamActivity)this.activity_.get(paramInt);
      }

      public final int getActivityCount()
      {
        return this.activity_.size();
      }

      public final List<Data.PerfectStreamActivity> getActivityList()
      {
        return Collections.unmodifiableList(this.activity_);
      }

      public final Network.GetActivityResponse getDefaultInstanceForType()
      {
        return Network.GetActivityResponse.getDefaultInstance();
      }

      public final Network.MissingActivity getMissingActivity(int paramInt)
      {
        return (Network.MissingActivity)this.missingActivity_.get(paramInt);
      }

      public final int getMissingActivityCount()
      {
        return this.missingActivity_.size();
      }

      public final List<Network.MissingActivity> getMissingActivityList()
      {
        return Collections.unmodifiableList(this.missingActivity_);
      }

      public final boolean isInitialized()
      {
        int i = 0;
        if (i < getActivityCount())
          if (getActivity(i).isInitialized());
        for (boolean bool = false; ; bool = true)
        {
          return bool;
          i++;
          break;
        }
      }

      public final Builder mergeFrom(Network.GetActivityResponse paramGetActivityResponse)
      {
        if (paramGetActivityResponse == Network.GetActivityResponse.getDefaultInstance());
        while (true)
        {
          return this;
          if (!paramGetActivityResponse.activity_.isEmpty())
          {
            if (!this.activity_.isEmpty())
              break label98;
            this.activity_ = paramGetActivityResponse.activity_;
            this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
          }
          while (true)
          {
            if (paramGetActivityResponse.missingActivity_.isEmpty())
              break label117;
            if (!this.missingActivity_.isEmpty())
              break label119;
            this.missingActivity_ = paramGetActivityResponse.missingActivity_;
            this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
            break;
            label98: ensureActivityIsMutable();
            this.activity_.addAll(paramGetActivityResponse.activity_);
          }
          label117: continue;
          label119: ensureMissingActivityIsMutable();
          this.missingActivity_.addAll(paramGetActivityResponse.missingActivity_);
        }
      }

      public final Builder setActivity(int paramInt, Data.PerfectStreamActivity.Builder paramBuilder)
      {
        ensureActivityIsMutable();
        this.activity_.set(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder setActivity(int paramInt, Data.PerfectStreamActivity paramPerfectStreamActivity)
      {
        if (paramPerfectStreamActivity == null)
          throw new NullPointerException();
        ensureActivityIsMutable();
        this.activity_.set(paramInt, paramPerfectStreamActivity);
        return this;
      }

      public final Builder setMissingActivity(int paramInt, Network.MissingActivity.Builder paramBuilder)
      {
        ensureMissingActivityIsMutable();
        this.missingActivity_.set(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder setMissingActivity(int paramInt, Network.MissingActivity paramMissingActivity)
      {
        if (paramMissingActivity == null)
          throw new NullPointerException();
        ensureMissingActivityIsMutable();
        this.missingActivity_.set(paramInt, paramMissingActivity);
        return this;
      }
    }
  }

  public static abstract interface GetActivityResponseOrBuilder extends MessageLiteOrBuilder
  {
    public abstract Data.PerfectStreamActivity getActivity(int paramInt);

    public abstract int getActivityCount();

    public abstract List<Data.PerfectStreamActivity> getActivityList();

    public abstract Network.MissingActivity getMissingActivity(int paramInt);

    public abstract int getMissingActivityCount();

    public abstract List<Network.MissingActivity> getMissingActivityList();
  }

  public static final class GetAlbumListRequest extends GeneratedMessageLite
    implements Network.GetAlbumListRequestOrBuilder
  {
    private static final GetAlbumListRequest defaultInstance;
    private static final long serialVersionUID;
    private Network.PhotoAlbumOptions albumOptions_;
    private List<Data.AlbumIdentifier> albumsToFetch_;
    private int bitField0_;
    private int continuationToken_;
    private Object focusObfuscatedOwnerId_;
    private int maxAlbumCount_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private long ownerGaiaId_;
    private boolean sharedAlbumsOnly_;

    static
    {
      GetAlbumListRequest localGetAlbumListRequest = new GetAlbumListRequest();
      defaultInstance = localGetAlbumListRequest;
      localGetAlbumListRequest.ownerGaiaId_ = 0L;
      localGetAlbumListRequest.focusObfuscatedOwnerId_ = "";
      localGetAlbumListRequest.maxAlbumCount_ = 0;
      localGetAlbumListRequest.continuationToken_ = 0;
      localGetAlbumListRequest.sharedAlbumsOnly_ = false;
      localGetAlbumListRequest.albumOptions_ = Network.PhotoAlbumOptions.getDefaultInstance();
      localGetAlbumListRequest.albumsToFetch_ = Collections.emptyList();
    }

    private GetAlbumListRequest()
    {
    }

    private GetAlbumListRequest(Builder paramBuilder)
    {
      super();
    }

    public static GetAlbumListRequest getDefaultInstance()
    {
      return defaultInstance;
    }

    private ByteString getFocusObfuscatedOwnerIdBytes()
    {
      Object localObject = this.focusObfuscatedOwnerId_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.focusObfuscatedOwnerId_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public final Network.PhotoAlbumOptions getAlbumOptions()
    {
      return this.albumOptions_;
    }

    public final Data.AlbumIdentifier getAlbumsToFetch(int paramInt)
    {
      return (Data.AlbumIdentifier)this.albumsToFetch_.get(paramInt);
    }

    public final int getAlbumsToFetchCount()
    {
      return this.albumsToFetch_.size();
    }

    public final List<Data.AlbumIdentifier> getAlbumsToFetchList()
    {
      return this.albumsToFetch_;
    }

    public final Data.AlbumIdentifierOrBuilder getAlbumsToFetchOrBuilder(int paramInt)
    {
      return (Data.AlbumIdentifierOrBuilder)this.albumsToFetch_.get(paramInt);
    }

    public final List<? extends Data.AlbumIdentifierOrBuilder> getAlbumsToFetchOrBuilderList()
    {
      return this.albumsToFetch_;
    }

    public final int getContinuationToken()
    {
      return this.continuationToken_;
    }

    public final GetAlbumListRequest getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final String getFocusObfuscatedOwnerId()
    {
      Object localObject1 = this.focusObfuscatedOwnerId_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.focusObfuscatedOwnerId_ = str;
      }
    }

    public final int getMaxAlbumCount()
    {
      return this.maxAlbumCount_;
    }

    public final long getOwnerGaiaId()
    {
      return this.ownerGaiaId_;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int n = i; ; n = k)
      {
        return n;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeInt64Size(1, this.ownerGaiaId_);
        if ((0x4 & this.bitField0_) == 4)
          k += CodedOutputStream.computeInt32Size(2, this.maxAlbumCount_);
        if ((0x8 & this.bitField0_) == 8)
          k += CodedOutputStream.computeInt32Size(3, this.continuationToken_);
        if ((0x10 & this.bitField0_) == 16)
          k += CodedOutputStream.computeBoolSize(4, this.sharedAlbumsOnly_);
        if ((0x20 & this.bitField0_) == 32)
          k += CodedOutputStream.computeMessageSize(5, this.albumOptions_);
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeBytesSize(6, getFocusObfuscatedOwnerIdBytes());
        for (int m = 0; m < this.albumsToFetch_.size(); m++)
          k += CodedOutputStream.computeMessageSize(7, (MessageLite)this.albumsToFetch_.get(m));
        this.memoizedSerializedSize = k;
      }
    }

    public final boolean getSharedAlbumsOnly()
    {
      return this.sharedAlbumsOnly_;
    }

    public final boolean hasAlbumOptions()
    {
      if ((0x20 & this.bitField0_) == 32);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasContinuationToken()
    {
      if ((0x8 & this.bitField0_) == 8);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasFocusObfuscatedOwnerId()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasMaxAlbumCount()
    {
      if ((0x4 & this.bitField0_) == 4);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasOwnerGaiaId()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean hasSharedAlbumsOnly()
    {
      if ((0x10 & this.bitField0_) == 16);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeInt64(1, this.ownerGaiaId_);
      if ((0x4 & this.bitField0_) == 4)
        paramCodedOutputStream.writeInt32(2, this.maxAlbumCount_);
      if ((0x8 & this.bitField0_) == 8)
        paramCodedOutputStream.writeInt32(3, this.continuationToken_);
      if ((0x10 & this.bitField0_) == 16)
        paramCodedOutputStream.writeBool(4, this.sharedAlbumsOnly_);
      if ((0x20 & this.bitField0_) == 32)
        paramCodedOutputStream.writeMessage(5, this.albumOptions_);
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeBytes(6, getFocusObfuscatedOwnerIdBytes());
      for (int i = 0; i < this.albumsToFetch_.size(); i++)
        paramCodedOutputStream.writeMessage(7, (MessageLite)this.albumsToFetch_.get(i));
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Network.GetAlbumListRequest, Builder>
      implements Network.GetAlbumListRequestOrBuilder
    {
      private Network.PhotoAlbumOptions albumOptions_ = Network.PhotoAlbumOptions.getDefaultInstance();
      private List<Data.AlbumIdentifier> albumsToFetch_ = Collections.emptyList();
      private int bitField0_;
      private int continuationToken_;
      private Object focusObfuscatedOwnerId_ = "";
      private int maxAlbumCount_;
      private long ownerGaiaId_;
      private boolean sharedAlbumsOnly_;

      private Network.GetAlbumListRequest buildPartial()
      {
        Network.GetAlbumListRequest localGetAlbumListRequest = new Network.GetAlbumListRequest(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Network.GetAlbumListRequest.access$18702(localGetAlbumListRequest, this.ownerGaiaId_);
        if ((i & 0x2) == 2)
          k |= 2;
        Network.GetAlbumListRequest.access$18802(localGetAlbumListRequest, this.focusObfuscatedOwnerId_);
        if ((i & 0x4) == 4)
          k |= 4;
        Network.GetAlbumListRequest.access$18902(localGetAlbumListRequest, this.maxAlbumCount_);
        if ((i & 0x8) == 8)
          k |= 8;
        Network.GetAlbumListRequest.access$19002(localGetAlbumListRequest, this.continuationToken_);
        if ((i & 0x10) == 16)
          k |= 16;
        Network.GetAlbumListRequest.access$19102(localGetAlbumListRequest, this.sharedAlbumsOnly_);
        if ((i & 0x20) == 32)
          k |= 32;
        Network.GetAlbumListRequest.access$19202(localGetAlbumListRequest, this.albumOptions_);
        if ((0x40 & this.bitField0_) == 64)
        {
          this.albumsToFetch_ = Collections.unmodifiableList(this.albumsToFetch_);
          this.bitField0_ = (0xFFFFFFBF & this.bitField0_);
        }
        Network.GetAlbumListRequest.access$19302(localGetAlbumListRequest, this.albumsToFetch_);
        Network.GetAlbumListRequest.access$19402(localGetAlbumListRequest, k);
        return localGetAlbumListRequest;
      }

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private void ensureAlbumsToFetchIsMutable()
      {
        if ((0x40 & this.bitField0_) != 64)
        {
          this.albumsToFetch_ = new ArrayList(this.albumsToFetch_);
          this.bitField0_ = (0x40 | this.bitField0_);
        }
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 8:
            this.bitField0_ = (0x1 | this.bitField0_);
            this.ownerGaiaId_ = paramCodedInputStream.readInt64();
            break;
          case 16:
            this.bitField0_ = (0x4 | this.bitField0_);
            this.maxAlbumCount_ = paramCodedInputStream.readInt32();
            break;
          case 24:
            this.bitField0_ = (0x8 | this.bitField0_);
            this.continuationToken_ = paramCodedInputStream.readInt32();
            break;
          case 32:
            this.bitField0_ = (0x10 | this.bitField0_);
            this.sharedAlbumsOnly_ = paramCodedInputStream.readBool();
            break;
          case 42:
            Network.PhotoAlbumOptions.Builder localBuilder1 = Network.PhotoAlbumOptions.newBuilder();
            if (hasAlbumOptions())
              localBuilder1.mergeFrom(getAlbumOptions());
            paramCodedInputStream.readMessage(localBuilder1, paramExtensionRegistryLite);
            setAlbumOptions(localBuilder1.buildPartial());
            break;
          case 50:
            this.bitField0_ = (0x2 | this.bitField0_);
            this.focusObfuscatedOwnerId_ = paramCodedInputStream.readBytes();
            break;
          case 58:
          }
          Data.AlbumIdentifier.Builder localBuilder = Data.AlbumIdentifier.newBuilder();
          paramCodedInputStream.readMessage(localBuilder, paramExtensionRegistryLite);
          addAlbumsToFetch(localBuilder.buildPartial());
        }
      }

      public final Builder addAlbumsToFetch(int paramInt, Data.AlbumIdentifier.Builder paramBuilder)
      {
        ensureAlbumsToFetchIsMutable();
        this.albumsToFetch_.add(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder addAlbumsToFetch(int paramInt, Data.AlbumIdentifier paramAlbumIdentifier)
      {
        if (paramAlbumIdentifier == null)
          throw new NullPointerException();
        ensureAlbumsToFetchIsMutable();
        this.albumsToFetch_.add(paramInt, paramAlbumIdentifier);
        return this;
      }

      public final Builder addAlbumsToFetch(Data.AlbumIdentifier.Builder paramBuilder)
      {
        ensureAlbumsToFetchIsMutable();
        this.albumsToFetch_.add(paramBuilder.build());
        return this;
      }

      public final Builder addAlbumsToFetch(Data.AlbumIdentifier paramAlbumIdentifier)
      {
        if (paramAlbumIdentifier == null)
          throw new NullPointerException();
        ensureAlbumsToFetchIsMutable();
        this.albumsToFetch_.add(paramAlbumIdentifier);
        return this;
      }

      public final Builder addAllAlbumsToFetch(Iterable<? extends Data.AlbumIdentifier> paramIterable)
      {
        ensureAlbumsToFetchIsMutable();
        GeneratedMessageLite.Builder.addAll(paramIterable, this.albumsToFetch_);
        return this;
      }

      public final Builder clear()
      {
        super.clear();
        this.ownerGaiaId_ = 0L;
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.focusObfuscatedOwnerId_ = "";
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.maxAlbumCount_ = 0;
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.continuationToken_ = 0;
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        this.sharedAlbumsOnly_ = false;
        this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        this.albumOptions_ = Network.PhotoAlbumOptions.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFDF & this.bitField0_);
        this.albumsToFetch_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFBF & this.bitField0_);
        return this;
      }

      public final Builder clearAlbumOptions()
      {
        this.albumOptions_ = Network.PhotoAlbumOptions.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFDF & this.bitField0_);
        return this;
      }

      public final Builder clearAlbumsToFetch()
      {
        this.albumsToFetch_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFBF & this.bitField0_);
        return this;
      }

      public final Builder clearContinuationToken()
      {
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        this.continuationToken_ = 0;
        return this;
      }

      public final Builder clearFocusObfuscatedOwnerId()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.focusObfuscatedOwnerId_ = Network.GetAlbumListRequest.getDefaultInstance().getFocusObfuscatedOwnerId();
        return this;
      }

      public final Builder clearMaxAlbumCount()
      {
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.maxAlbumCount_ = 0;
        return this;
      }

      public final Builder clearOwnerGaiaId()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.ownerGaiaId_ = 0L;
        return this;
      }

      public final Builder clearSharedAlbumsOnly()
      {
        this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        this.sharedAlbumsOnly_ = false;
        return this;
      }

      public final Network.PhotoAlbumOptions getAlbumOptions()
      {
        return this.albumOptions_;
      }

      public final Data.AlbumIdentifier getAlbumsToFetch(int paramInt)
      {
        return (Data.AlbumIdentifier)this.albumsToFetch_.get(paramInt);
      }

      public final int getAlbumsToFetchCount()
      {
        return this.albumsToFetch_.size();
      }

      public final List<Data.AlbumIdentifier> getAlbumsToFetchList()
      {
        return Collections.unmodifiableList(this.albumsToFetch_);
      }

      public final int getContinuationToken()
      {
        return this.continuationToken_;
      }

      public final Network.GetAlbumListRequest getDefaultInstanceForType()
      {
        return Network.GetAlbumListRequest.getDefaultInstance();
      }

      public final String getFocusObfuscatedOwnerId()
      {
        Object localObject = this.focusObfuscatedOwnerId_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.focusObfuscatedOwnerId_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final int getMaxAlbumCount()
      {
        return this.maxAlbumCount_;
      }

      public final long getOwnerGaiaId()
      {
        return this.ownerGaiaId_;
      }

      public final boolean getSharedAlbumsOnly()
      {
        return this.sharedAlbumsOnly_;
      }

      public final boolean hasAlbumOptions()
      {
        if ((0x20 & this.bitField0_) == 32);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasContinuationToken()
      {
        if ((0x8 & this.bitField0_) == 8);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasFocusObfuscatedOwnerId()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasMaxAlbumCount()
      {
        if ((0x4 & this.bitField0_) == 4);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasOwnerGaiaId()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean hasSharedAlbumsOnly()
      {
        if ((0x10 & this.bitField0_) == 16);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Network.GetAlbumListRequest paramGetAlbumListRequest)
      {
        if (paramGetAlbumListRequest == Network.GetAlbumListRequest.getDefaultInstance());
        while (true)
        {
          return this;
          if (paramGetAlbumListRequest.hasOwnerGaiaId())
            setOwnerGaiaId(paramGetAlbumListRequest.getOwnerGaiaId());
          if (paramGetAlbumListRequest.hasFocusObfuscatedOwnerId())
            setFocusObfuscatedOwnerId(paramGetAlbumListRequest.getFocusObfuscatedOwnerId());
          if (paramGetAlbumListRequest.hasMaxAlbumCount())
            setMaxAlbumCount(paramGetAlbumListRequest.getMaxAlbumCount());
          if (paramGetAlbumListRequest.hasContinuationToken())
            setContinuationToken(paramGetAlbumListRequest.getContinuationToken());
          if (paramGetAlbumListRequest.hasSharedAlbumsOnly())
            setSharedAlbumsOnly(paramGetAlbumListRequest.getSharedAlbumsOnly());
          Network.PhotoAlbumOptions localPhotoAlbumOptions;
          if (paramGetAlbumListRequest.hasAlbumOptions())
          {
            localPhotoAlbumOptions = paramGetAlbumListRequest.getAlbumOptions();
            if (((0x20 & this.bitField0_) != 32) || (this.albumOptions_ == Network.PhotoAlbumOptions.getDefaultInstance()))
              break label198;
          }
          label198: for (this.albumOptions_ = Network.PhotoAlbumOptions.newBuilder(this.albumOptions_).mergeFrom(localPhotoAlbumOptions).buildPartial(); ; this.albumOptions_ = localPhotoAlbumOptions)
          {
            this.bitField0_ = (0x20 | this.bitField0_);
            if (paramGetAlbumListRequest.albumsToFetch_.isEmpty())
              break;
            if (!this.albumsToFetch_.isEmpty())
              break label206;
            this.albumsToFetch_ = paramGetAlbumListRequest.albumsToFetch_;
            this.bitField0_ = (0xFFFFFFBF & this.bitField0_);
            break;
          }
          label206: ensureAlbumsToFetchIsMutable();
          this.albumsToFetch_.addAll(paramGetAlbumListRequest.albumsToFetch_);
        }
      }

      public final Builder setAlbumOptions(Network.PhotoAlbumOptions.Builder paramBuilder)
      {
        this.albumOptions_ = paramBuilder.build();
        this.bitField0_ = (0x20 | this.bitField0_);
        return this;
      }

      public final Builder setAlbumOptions(Network.PhotoAlbumOptions paramPhotoAlbumOptions)
      {
        if (paramPhotoAlbumOptions == null)
          throw new NullPointerException();
        this.albumOptions_ = paramPhotoAlbumOptions;
        this.bitField0_ = (0x20 | this.bitField0_);
        return this;
      }

      public final Builder setAlbumsToFetch(int paramInt, Data.AlbumIdentifier.Builder paramBuilder)
      {
        ensureAlbumsToFetchIsMutable();
        this.albumsToFetch_.set(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder setAlbumsToFetch(int paramInt, Data.AlbumIdentifier paramAlbumIdentifier)
      {
        if (paramAlbumIdentifier == null)
          throw new NullPointerException();
        ensureAlbumsToFetchIsMutable();
        this.albumsToFetch_.set(paramInt, paramAlbumIdentifier);
        return this;
      }

      public final Builder setContinuationToken(int paramInt)
      {
        this.bitField0_ = (0x8 | this.bitField0_);
        this.continuationToken_ = paramInt;
        return this;
      }

      public final Builder setFocusObfuscatedOwnerId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x2 | this.bitField0_);
        this.focusObfuscatedOwnerId_ = paramString;
        return this;
      }

      public final Builder setMaxAlbumCount(int paramInt)
      {
        this.bitField0_ = (0x4 | this.bitField0_);
        this.maxAlbumCount_ = paramInt;
        return this;
      }

      public final Builder setOwnerGaiaId(long paramLong)
      {
        this.bitField0_ = (0x1 | this.bitField0_);
        this.ownerGaiaId_ = paramLong;
        return this;
      }

      public final Builder setSharedAlbumsOnly(boolean paramBoolean)
      {
        this.bitField0_ = (0x10 | this.bitField0_);
        this.sharedAlbumsOnly_ = paramBoolean;
        return this;
      }
    }
  }

  public static abstract interface GetAlbumListRequestOrBuilder extends MessageLiteOrBuilder
  {
    public abstract Network.PhotoAlbumOptions getAlbumOptions();

    public abstract Data.AlbumIdentifier getAlbumsToFetch(int paramInt);

    public abstract int getAlbumsToFetchCount();

    public abstract List<Data.AlbumIdentifier> getAlbumsToFetchList();

    public abstract int getContinuationToken();

    public abstract String getFocusObfuscatedOwnerId();

    public abstract int getMaxAlbumCount();

    public abstract long getOwnerGaiaId();

    public abstract boolean getSharedAlbumsOnly();

    public abstract boolean hasAlbumOptions();

    public abstract boolean hasContinuationToken();

    public abstract boolean hasFocusObfuscatedOwnerId();

    public abstract boolean hasMaxAlbumCount();

    public abstract boolean hasOwnerGaiaId();

    public abstract boolean hasSharedAlbumsOnly();
  }

  public static final class GetAlbumListResponse extends GeneratedMessageLite
    implements Network.GetAlbumListResponseOrBuilder
  {
    private static final GetAlbumListResponse defaultInstance;
    private static final long serialVersionUID;
    private List<Data.PhotoAlbum> album_;
    private int bitField0_;
    private int continuationToken_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;

    static
    {
      GetAlbumListResponse localGetAlbumListResponse = new GetAlbumListResponse();
      defaultInstance = localGetAlbumListResponse;
      localGetAlbumListResponse.album_ = Collections.emptyList();
      localGetAlbumListResponse.continuationToken_ = 0;
    }

    private GetAlbumListResponse()
    {
    }

    private GetAlbumListResponse(Builder paramBuilder)
    {
      super();
    }

    public static GetAlbumListResponse getDefaultInstance()
    {
      return defaultInstance;
    }

    public final Data.PhotoAlbum getAlbum(int paramInt)
    {
      return (Data.PhotoAlbum)this.album_.get(paramInt);
    }

    public final int getAlbumCount()
    {
      return this.album_.size();
    }

    public final List<Data.PhotoAlbum> getAlbumList()
    {
      return this.album_;
    }

    public final Data.PhotoAlbumOrBuilder getAlbumOrBuilder(int paramInt)
    {
      return (Data.PhotoAlbumOrBuilder)this.album_.get(paramInt);
    }

    public final List<? extends Data.PhotoAlbumOrBuilder> getAlbumOrBuilderList()
    {
      return this.album_;
    }

    public final int getContinuationToken()
    {
      return this.continuationToken_;
    }

    public final GetAlbumListResponse getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int j;
      for (int m = i; ; m = j)
      {
        return m;
        j = 0;
        for (int k = 0; k < this.album_.size(); k++)
          j += CodedOutputStream.computeMessageSize(1, (MessageLite)this.album_.get(k));
        if ((0x1 & this.bitField0_) == 1)
          j += CodedOutputStream.computeInt32Size(2, this.continuationToken_);
        this.memoizedSerializedSize = j;
      }
    }

    public final boolean hasContinuationToken()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        for (int k = 0; ; k++)
        {
          if (k >= getAlbumCount())
            break label61;
          if (!getAlbum(k).isInitialized())
          {
            this.memoizedIsInitialized = 0;
            i = 0;
            break;
          }
        }
        label61: this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      for (int i = 0; i < this.album_.size(); i++)
        paramCodedOutputStream.writeMessage(1, (MessageLite)this.album_.get(i));
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeInt32(2, this.continuationToken_);
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Network.GetAlbumListResponse, Builder>
      implements Network.GetAlbumListResponseOrBuilder
    {
      private List<Data.PhotoAlbum> album_ = Collections.emptyList();
      private int bitField0_;
      private int continuationToken_;

      private Network.GetAlbumListResponse buildPartial()
      {
        Network.GetAlbumListResponse localGetAlbumListResponse = new Network.GetAlbumListResponse(this, (byte)0);
        int i = this.bitField0_;
        if ((0x1 & this.bitField0_) == 1)
        {
          this.album_ = Collections.unmodifiableList(this.album_);
          this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        }
        Network.GetAlbumListResponse.access$19802(localGetAlbumListResponse, this.album_);
        int j = i & 0x2;
        int k = 0;
        if (j == 2)
          k = 1;
        Network.GetAlbumListResponse.access$19902(localGetAlbumListResponse, this.continuationToken_);
        Network.GetAlbumListResponse.access$20002(localGetAlbumListResponse, k);
        return localGetAlbumListResponse;
      }

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private void ensureAlbumIsMutable()
      {
        if ((0x1 & this.bitField0_) != 1)
        {
          this.album_ = new ArrayList(this.album_);
          this.bitField0_ = (0x1 | this.bitField0_);
        }
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 10:
            Data.PhotoAlbum.Builder localBuilder = Data.PhotoAlbum.newBuilder();
            paramCodedInputStream.readMessage(localBuilder, paramExtensionRegistryLite);
            addAlbum(localBuilder.buildPartial());
            break;
          case 16:
          }
          this.bitField0_ = (0x2 | this.bitField0_);
          this.continuationToken_ = paramCodedInputStream.readInt32();
        }
      }

      public final Builder addAlbum(int paramInt, Data.PhotoAlbum.Builder paramBuilder)
      {
        ensureAlbumIsMutable();
        this.album_.add(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder addAlbum(int paramInt, Data.PhotoAlbum paramPhotoAlbum)
      {
        if (paramPhotoAlbum == null)
          throw new NullPointerException();
        ensureAlbumIsMutable();
        this.album_.add(paramInt, paramPhotoAlbum);
        return this;
      }

      public final Builder addAlbum(Data.PhotoAlbum.Builder paramBuilder)
      {
        ensureAlbumIsMutable();
        this.album_.add(paramBuilder.build());
        return this;
      }

      public final Builder addAlbum(Data.PhotoAlbum paramPhotoAlbum)
      {
        if (paramPhotoAlbum == null)
          throw new NullPointerException();
        ensureAlbumIsMutable();
        this.album_.add(paramPhotoAlbum);
        return this;
      }

      public final Builder addAllAlbum(Iterable<? extends Data.PhotoAlbum> paramIterable)
      {
        ensureAlbumIsMutable();
        GeneratedMessageLite.Builder.addAll(paramIterable, this.album_);
        return this;
      }

      public final Builder clear()
      {
        super.clear();
        this.album_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.continuationToken_ = 0;
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        return this;
      }

      public final Builder clearAlbum()
      {
        this.album_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        return this;
      }

      public final Builder clearContinuationToken()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.continuationToken_ = 0;
        return this;
      }

      public final Data.PhotoAlbum getAlbum(int paramInt)
      {
        return (Data.PhotoAlbum)this.album_.get(paramInt);
      }

      public final int getAlbumCount()
      {
        return this.album_.size();
      }

      public final List<Data.PhotoAlbum> getAlbumList()
      {
        return Collections.unmodifiableList(this.album_);
      }

      public final int getContinuationToken()
      {
        return this.continuationToken_;
      }

      public final Network.GetAlbumListResponse getDefaultInstanceForType()
      {
        return Network.GetAlbumListResponse.getDefaultInstance();
      }

      public final boolean hasContinuationToken()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean isInitialized()
      {
        int i = 0;
        if (i < getAlbumCount())
          if (getAlbum(i).isInitialized());
        for (boolean bool = false; ; bool = true)
        {
          return bool;
          i++;
          break;
        }
      }

      public final Builder mergeFrom(Network.GetAlbumListResponse paramGetAlbumListResponse)
      {
        if (paramGetAlbumListResponse == Network.GetAlbumListResponse.getDefaultInstance());
        label71: label90: 
        while (true)
        {
          return this;
          if (!paramGetAlbumListResponse.album_.isEmpty())
          {
            if (!this.album_.isEmpty())
              break label71;
            this.album_ = paramGetAlbumListResponse.album_;
            this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
          }
          while (true)
          {
            if (!paramGetAlbumListResponse.hasContinuationToken())
              break label90;
            setContinuationToken(paramGetAlbumListResponse.getContinuationToken());
            break;
            ensureAlbumIsMutable();
            this.album_.addAll(paramGetAlbumListResponse.album_);
          }
        }
      }

      public final Builder setAlbum(int paramInt, Data.PhotoAlbum.Builder paramBuilder)
      {
        ensureAlbumIsMutable();
        this.album_.set(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder setAlbum(int paramInt, Data.PhotoAlbum paramPhotoAlbum)
      {
        if (paramPhotoAlbum == null)
          throw new NullPointerException();
        ensureAlbumIsMutable();
        this.album_.set(paramInt, paramPhotoAlbum);
        return this;
      }

      public final Builder setContinuationToken(int paramInt)
      {
        this.bitField0_ = (0x2 | this.bitField0_);
        this.continuationToken_ = paramInt;
        return this;
      }
    }
  }

  public static abstract interface GetAlbumListResponseOrBuilder extends MessageLiteOrBuilder
  {
    public abstract Data.PhotoAlbum getAlbum(int paramInt);

    public abstract int getAlbumCount();

    public abstract List<Data.PhotoAlbum> getAlbumList();

    public abstract int getContinuationToken();

    public abstract boolean hasContinuationToken();
  }

  public static final class GetAlbumRequest extends GeneratedMessageLite
    implements Network.GetAlbumRequestOrBuilder
  {
    private static final GetAlbumRequest defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private Object focusObfuscatedOwnerId_;
    private long id_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private long ownerGaiaId_;
    private Network.PhotoOptions photoOptions_;
    private boolean returnAlbumInfo_;
    private boolean returnComments_;
    private boolean returnPhotos_;
    private boolean returnShapes_;
    private boolean returnUrls_;

    static
    {
      GetAlbumRequest localGetAlbumRequest = new GetAlbumRequest();
      defaultInstance = localGetAlbumRequest;
      localGetAlbumRequest.id_ = 0L;
      localGetAlbumRequest.ownerGaiaId_ = 0L;
      localGetAlbumRequest.focusObfuscatedOwnerId_ = "";
      localGetAlbumRequest.returnUrls_ = false;
      localGetAlbumRequest.returnComments_ = false;
      localGetAlbumRequest.returnShapes_ = false;
      localGetAlbumRequest.returnAlbumInfo_ = false;
      localGetAlbumRequest.returnPhotos_ = true;
      localGetAlbumRequest.photoOptions_ = Network.PhotoOptions.getDefaultInstance();
    }

    private GetAlbumRequest()
    {
    }

    private GetAlbumRequest(Builder paramBuilder)
    {
      super();
    }

    public static GetAlbumRequest getDefaultInstance()
    {
      return defaultInstance;
    }

    private ByteString getFocusObfuscatedOwnerIdBytes()
    {
      Object localObject = this.focusObfuscatedOwnerId_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.focusObfuscatedOwnerId_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public final GetAlbumRequest getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final String getFocusObfuscatedOwnerId()
    {
      Object localObject1 = this.focusObfuscatedOwnerId_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.focusObfuscatedOwnerId_ = str;
      }
    }

    public final long getId()
    {
      return this.id_;
    }

    public final long getOwnerGaiaId()
    {
      return this.ownerGaiaId_;
    }

    public final Network.PhotoOptions getPhotoOptions()
    {
      return this.photoOptions_;
    }

    public final boolean getReturnAlbumInfo()
    {
      return this.returnAlbumInfo_;
    }

    @Deprecated
    public final boolean getReturnComments()
    {
      return this.returnComments_;
    }

    public final boolean getReturnPhotos()
    {
      return this.returnPhotos_;
    }

    @Deprecated
    public final boolean getReturnShapes()
    {
      return this.returnShapes_;
    }

    @Deprecated
    public final boolean getReturnUrls()
    {
      return this.returnUrls_;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeInt64Size(1, this.id_);
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeInt64Size(2, this.ownerGaiaId_);
        if ((0x8 & this.bitField0_) == 8)
          k += CodedOutputStream.computeBoolSize(3, this.returnUrls_);
        if ((0x10 & this.bitField0_) == 16)
          k += CodedOutputStream.computeBoolSize(4, this.returnComments_);
        if ((0x20 & this.bitField0_) == 32)
          k += CodedOutputStream.computeBoolSize(5, this.returnShapes_);
        if ((0x40 & this.bitField0_) == 64)
          k += CodedOutputStream.computeBoolSize(6, this.returnAlbumInfo_);
        if ((0x100 & this.bitField0_) == 256)
          k += CodedOutputStream.computeMessageSize(7, this.photoOptions_);
        if ((0x4 & this.bitField0_) == 4)
          k += CodedOutputStream.computeBytesSize(8, getFocusObfuscatedOwnerIdBytes());
        if ((0x80 & this.bitField0_) == 128)
          k += CodedOutputStream.computeBoolSize(9, this.returnPhotos_);
        this.memoizedSerializedSize = k;
      }
    }

    public final boolean hasFocusObfuscatedOwnerId()
    {
      if ((0x4 & this.bitField0_) == 4);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasId()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean hasOwnerGaiaId()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasPhotoOptions()
    {
      if ((0x100 & this.bitField0_) == 256);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasReturnAlbumInfo()
    {
      if ((0x40 & this.bitField0_) == 64);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    @Deprecated
    public final boolean hasReturnComments()
    {
      if ((0x10 & this.bitField0_) == 16);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasReturnPhotos()
    {
      if ((0x80 & this.bitField0_) == 128);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    @Deprecated
    public final boolean hasReturnShapes()
    {
      if ((0x20 & this.bitField0_) == 32);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    @Deprecated
    public final boolean hasReturnUrls()
    {
      if ((0x8 & this.bitField0_) == 8);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeInt64(1, this.id_);
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeInt64(2, this.ownerGaiaId_);
      if ((0x8 & this.bitField0_) == 8)
        paramCodedOutputStream.writeBool(3, this.returnUrls_);
      if ((0x10 & this.bitField0_) == 16)
        paramCodedOutputStream.writeBool(4, this.returnComments_);
      if ((0x20 & this.bitField0_) == 32)
        paramCodedOutputStream.writeBool(5, this.returnShapes_);
      if ((0x40 & this.bitField0_) == 64)
        paramCodedOutputStream.writeBool(6, this.returnAlbumInfo_);
      if ((0x100 & this.bitField0_) == 256)
        paramCodedOutputStream.writeMessage(7, this.photoOptions_);
      if ((0x4 & this.bitField0_) == 4)
        paramCodedOutputStream.writeBytes(8, getFocusObfuscatedOwnerIdBytes());
      if ((0x80 & this.bitField0_) == 128)
        paramCodedOutputStream.writeBool(9, this.returnPhotos_);
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Network.GetAlbumRequest, Builder>
      implements Network.GetAlbumRequestOrBuilder
    {
      private int bitField0_;
      private Object focusObfuscatedOwnerId_ = "";
      private long id_;
      private long ownerGaiaId_;
      private Network.PhotoOptions photoOptions_ = Network.PhotoOptions.getDefaultInstance();
      private boolean returnAlbumInfo_;
      private boolean returnComments_;
      private boolean returnPhotos_ = true;
      private boolean returnShapes_;
      private boolean returnUrls_;

      private Network.GetAlbumRequest buildPartial()
      {
        Network.GetAlbumRequest localGetAlbumRequest = new Network.GetAlbumRequest(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Network.GetAlbumRequest.access$20402(localGetAlbumRequest, this.id_);
        if ((i & 0x2) == 2)
          k |= 2;
        Network.GetAlbumRequest.access$20502(localGetAlbumRequest, this.ownerGaiaId_);
        if ((i & 0x4) == 4)
          k |= 4;
        Network.GetAlbumRequest.access$20602(localGetAlbumRequest, this.focusObfuscatedOwnerId_);
        if ((i & 0x8) == 8)
          k |= 8;
        Network.GetAlbumRequest.access$20702(localGetAlbumRequest, this.returnUrls_);
        if ((i & 0x10) == 16)
          k |= 16;
        Network.GetAlbumRequest.access$20802(localGetAlbumRequest, this.returnComments_);
        if ((i & 0x20) == 32)
          k |= 32;
        Network.GetAlbumRequest.access$20902(localGetAlbumRequest, this.returnShapes_);
        if ((i & 0x40) == 64)
          k |= 64;
        Network.GetAlbumRequest.access$21002(localGetAlbumRequest, this.returnAlbumInfo_);
        if ((i & 0x80) == 128)
          k |= 128;
        Network.GetAlbumRequest.access$21102(localGetAlbumRequest, this.returnPhotos_);
        if ((i & 0x100) == 256)
          k |= 256;
        Network.GetAlbumRequest.access$21202(localGetAlbumRequest, this.photoOptions_);
        Network.GetAlbumRequest.access$21302(localGetAlbumRequest, k);
        return localGetAlbumRequest;
      }

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 8:
            this.bitField0_ = (0x1 | this.bitField0_);
            this.id_ = paramCodedInputStream.readInt64();
            break;
          case 16:
            this.bitField0_ = (0x2 | this.bitField0_);
            this.ownerGaiaId_ = paramCodedInputStream.readInt64();
            break;
          case 24:
            this.bitField0_ = (0x8 | this.bitField0_);
            this.returnUrls_ = paramCodedInputStream.readBool();
            break;
          case 32:
            this.bitField0_ = (0x10 | this.bitField0_);
            this.returnComments_ = paramCodedInputStream.readBool();
            break;
          case 40:
            this.bitField0_ = (0x20 | this.bitField0_);
            this.returnShapes_ = paramCodedInputStream.readBool();
            break;
          case 48:
            this.bitField0_ = (0x40 | this.bitField0_);
            this.returnAlbumInfo_ = paramCodedInputStream.readBool();
            break;
          case 58:
            Network.PhotoOptions.Builder localBuilder = Network.PhotoOptions.newBuilder();
            if (hasPhotoOptions())
              localBuilder.mergeFrom(getPhotoOptions());
            paramCodedInputStream.readMessage(localBuilder, paramExtensionRegistryLite);
            setPhotoOptions(localBuilder.buildPartial());
            break;
          case 66:
            this.bitField0_ = (0x4 | this.bitField0_);
            this.focusObfuscatedOwnerId_ = paramCodedInputStream.readBytes();
            break;
          case 72:
          }
          this.bitField0_ = (0x80 | this.bitField0_);
          this.returnPhotos_ = paramCodedInputStream.readBool();
        }
      }

      public final Builder clear()
      {
        super.clear();
        this.id_ = 0L;
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.ownerGaiaId_ = 0L;
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.focusObfuscatedOwnerId_ = "";
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.returnUrls_ = false;
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        this.returnComments_ = false;
        this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        this.returnShapes_ = false;
        this.bitField0_ = (0xFFFFFFDF & this.bitField0_);
        this.returnAlbumInfo_ = false;
        this.bitField0_ = (0xFFFFFFBF & this.bitField0_);
        this.returnPhotos_ = true;
        this.bitField0_ = (0xFFFFFF7F & this.bitField0_);
        this.photoOptions_ = Network.PhotoOptions.getDefaultInstance();
        this.bitField0_ = (0xFFFFFEFF & this.bitField0_);
        return this;
      }

      public final Builder clearFocusObfuscatedOwnerId()
      {
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.focusObfuscatedOwnerId_ = Network.GetAlbumRequest.getDefaultInstance().getFocusObfuscatedOwnerId();
        return this;
      }

      public final Builder clearId()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.id_ = 0L;
        return this;
      }

      public final Builder clearOwnerGaiaId()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.ownerGaiaId_ = 0L;
        return this;
      }

      public final Builder clearPhotoOptions()
      {
        this.photoOptions_ = Network.PhotoOptions.getDefaultInstance();
        this.bitField0_ = (0xFFFFFEFF & this.bitField0_);
        return this;
      }

      public final Builder clearReturnAlbumInfo()
      {
        this.bitField0_ = (0xFFFFFFBF & this.bitField0_);
        this.returnAlbumInfo_ = false;
        return this;
      }

      @Deprecated
      public final Builder clearReturnComments()
      {
        this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        this.returnComments_ = false;
        return this;
      }

      public final Builder clearReturnPhotos()
      {
        this.bitField0_ = (0xFFFFFF7F & this.bitField0_);
        this.returnPhotos_ = true;
        return this;
      }

      @Deprecated
      public final Builder clearReturnShapes()
      {
        this.bitField0_ = (0xFFFFFFDF & this.bitField0_);
        this.returnShapes_ = false;
        return this;
      }

      @Deprecated
      public final Builder clearReturnUrls()
      {
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        this.returnUrls_ = false;
        return this;
      }

      public final Network.GetAlbumRequest getDefaultInstanceForType()
      {
        return Network.GetAlbumRequest.getDefaultInstance();
      }

      public final String getFocusObfuscatedOwnerId()
      {
        Object localObject = this.focusObfuscatedOwnerId_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.focusObfuscatedOwnerId_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final long getId()
      {
        return this.id_;
      }

      public final long getOwnerGaiaId()
      {
        return this.ownerGaiaId_;
      }

      public final Network.PhotoOptions getPhotoOptions()
      {
        return this.photoOptions_;
      }

      public final boolean getReturnAlbumInfo()
      {
        return this.returnAlbumInfo_;
      }

      @Deprecated
      public final boolean getReturnComments()
      {
        return this.returnComments_;
      }

      public final boolean getReturnPhotos()
      {
        return this.returnPhotos_;
      }

      @Deprecated
      public final boolean getReturnShapes()
      {
        return this.returnShapes_;
      }

      @Deprecated
      public final boolean getReturnUrls()
      {
        return this.returnUrls_;
      }

      public final boolean hasFocusObfuscatedOwnerId()
      {
        if ((0x4 & this.bitField0_) == 4);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasId()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean hasOwnerGaiaId()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasPhotoOptions()
      {
        if ((0x100 & this.bitField0_) == 256);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasReturnAlbumInfo()
      {
        if ((0x40 & this.bitField0_) == 64);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      @Deprecated
      public final boolean hasReturnComments()
      {
        if ((0x10 & this.bitField0_) == 16);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasReturnPhotos()
      {
        if ((0x80 & this.bitField0_) == 128);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      @Deprecated
      public final boolean hasReturnShapes()
      {
        if ((0x20 & this.bitField0_) == 32);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      @Deprecated
      public final boolean hasReturnUrls()
      {
        if ((0x8 & this.bitField0_) == 8);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Network.GetAlbumRequest paramGetAlbumRequest)
      {
        if (paramGetAlbumRequest == Network.GetAlbumRequest.getDefaultInstance());
        do
        {
          return this;
          if (paramGetAlbumRequest.hasId())
            setId(paramGetAlbumRequest.getId());
          if (paramGetAlbumRequest.hasOwnerGaiaId())
            setOwnerGaiaId(paramGetAlbumRequest.getOwnerGaiaId());
          if (paramGetAlbumRequest.hasFocusObfuscatedOwnerId())
            setFocusObfuscatedOwnerId(paramGetAlbumRequest.getFocusObfuscatedOwnerId());
          if (paramGetAlbumRequest.hasReturnUrls())
            setReturnUrls(paramGetAlbumRequest.getReturnUrls());
          if (paramGetAlbumRequest.hasReturnComments())
            setReturnComments(paramGetAlbumRequest.getReturnComments());
          if (paramGetAlbumRequest.hasReturnShapes())
            setReturnShapes(paramGetAlbumRequest.getReturnShapes());
          if (paramGetAlbumRequest.hasReturnAlbumInfo())
            setReturnAlbumInfo(paramGetAlbumRequest.getReturnAlbumInfo());
          if (paramGetAlbumRequest.hasReturnPhotos())
            setReturnPhotos(paramGetAlbumRequest.getReturnPhotos());
        }
        while (!paramGetAlbumRequest.hasPhotoOptions());
        Network.PhotoOptions localPhotoOptions = paramGetAlbumRequest.getPhotoOptions();
        if (((0x100 & this.bitField0_) == 256) && (this.photoOptions_ != Network.PhotoOptions.getDefaultInstance()));
        for (this.photoOptions_ = Network.PhotoOptions.newBuilder(this.photoOptions_).mergeFrom(localPhotoOptions).buildPartial(); ; this.photoOptions_ = localPhotoOptions)
        {
          this.bitField0_ = (0x100 | this.bitField0_);
          break;
        }
      }

      public final Builder setFocusObfuscatedOwnerId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x4 | this.bitField0_);
        this.focusObfuscatedOwnerId_ = paramString;
        return this;
      }

      public final Builder setId(long paramLong)
      {
        this.bitField0_ = (0x1 | this.bitField0_);
        this.id_ = paramLong;
        return this;
      }

      public final Builder setOwnerGaiaId(long paramLong)
      {
        this.bitField0_ = (0x2 | this.bitField0_);
        this.ownerGaiaId_ = paramLong;
        return this;
      }

      public final Builder setPhotoOptions(Network.PhotoOptions.Builder paramBuilder)
      {
        this.photoOptions_ = paramBuilder.build();
        this.bitField0_ = (0x100 | this.bitField0_);
        return this;
      }

      public final Builder setPhotoOptions(Network.PhotoOptions paramPhotoOptions)
      {
        if (paramPhotoOptions == null)
          throw new NullPointerException();
        this.photoOptions_ = paramPhotoOptions;
        this.bitField0_ = (0x100 | this.bitField0_);
        return this;
      }

      public final Builder setReturnAlbumInfo(boolean paramBoolean)
      {
        this.bitField0_ = (0x40 | this.bitField0_);
        this.returnAlbumInfo_ = paramBoolean;
        return this;
      }

      @Deprecated
      public final Builder setReturnComments(boolean paramBoolean)
      {
        this.bitField0_ = (0x10 | this.bitField0_);
        this.returnComments_ = paramBoolean;
        return this;
      }

      public final Builder setReturnPhotos(boolean paramBoolean)
      {
        this.bitField0_ = (0x80 | this.bitField0_);
        this.returnPhotos_ = paramBoolean;
        return this;
      }

      @Deprecated
      public final Builder setReturnShapes(boolean paramBoolean)
      {
        this.bitField0_ = (0x20 | this.bitField0_);
        this.returnShapes_ = paramBoolean;
        return this;
      }

      @Deprecated
      public final Builder setReturnUrls(boolean paramBoolean)
      {
        this.bitField0_ = (0x8 | this.bitField0_);
        this.returnUrls_ = paramBoolean;
        return this;
      }
    }
  }

  public static abstract interface GetAlbumRequestOrBuilder extends MessageLiteOrBuilder
  {
    public abstract String getFocusObfuscatedOwnerId();

    public abstract long getId();

    public abstract long getOwnerGaiaId();

    public abstract Network.PhotoOptions getPhotoOptions();

    public abstract boolean getReturnAlbumInfo();

    @Deprecated
    public abstract boolean getReturnComments();

    public abstract boolean getReturnPhotos();

    @Deprecated
    public abstract boolean getReturnShapes();

    @Deprecated
    public abstract boolean getReturnUrls();

    public abstract boolean hasFocusObfuscatedOwnerId();

    public abstract boolean hasId();

    public abstract boolean hasOwnerGaiaId();

    public abstract boolean hasPhotoOptions();

    public abstract boolean hasReturnAlbumInfo();

    @Deprecated
    public abstract boolean hasReturnComments();

    public abstract boolean hasReturnPhotos();

    @Deprecated
    public abstract boolean hasReturnShapes();

    @Deprecated
    public abstract boolean hasReturnUrls();
  }

  public static final class GetAlbumResponse extends GeneratedMessageLite
    implements Network.GetAlbumResponseOrBuilder
  {
    private static final GetAlbumResponse defaultInstance;
    private static final long serialVersionUID;
    private Data.PhotoAlbum albumInfo_;
    private int bitField0_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private List<Data.MobilePhoto> photo_;

    static
    {
      GetAlbumResponse localGetAlbumResponse = new GetAlbumResponse();
      defaultInstance = localGetAlbumResponse;
      localGetAlbumResponse.photo_ = Collections.emptyList();
      localGetAlbumResponse.albumInfo_ = Data.PhotoAlbum.getDefaultInstance();
    }

    private GetAlbumResponse()
    {
    }

    private GetAlbumResponse(Builder paramBuilder)
    {
      super();
    }

    public static GetAlbumResponse getDefaultInstance()
    {
      return defaultInstance;
    }

    public final Data.PhotoAlbum getAlbumInfo()
    {
      return this.albumInfo_;
    }

    public final GetAlbumResponse getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final Data.MobilePhoto getPhoto(int paramInt)
    {
      return (Data.MobilePhoto)this.photo_.get(paramInt);
    }

    public final int getPhotoCount()
    {
      return this.photo_.size();
    }

    public final List<Data.MobilePhoto> getPhotoList()
    {
      return this.photo_;
    }

    public final Data.MobilePhotoOrBuilder getPhotoOrBuilder(int paramInt)
    {
      return (Data.MobilePhotoOrBuilder)this.photo_.get(paramInt);
    }

    public final List<? extends Data.MobilePhotoOrBuilder> getPhotoOrBuilderList()
    {
      return this.photo_;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int j;
      for (int m = i; ; m = j)
      {
        return m;
        j = 0;
        for (int k = 0; k < this.photo_.size(); k++)
          j += CodedOutputStream.computeMessageSize(1, (MessageLite)this.photo_.get(k));
        if ((0x1 & this.bitField0_) == 1)
          j += CodedOutputStream.computeMessageSize(2, this.albumInfo_);
        this.memoizedSerializedSize = j;
      }
    }

    public final boolean hasAlbumInfo()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        for (int k = 0; ; k++)
        {
          if (k >= getPhotoCount())
            break label61;
          if (!getPhoto(k).isInitialized())
          {
            this.memoizedIsInitialized = 0;
            i = 0;
            break;
          }
        }
        label61: if ((hasAlbumInfo()) && (!getAlbumInfo().isInitialized()))
        {
          this.memoizedIsInitialized = 0;
          i = 0;
        }
        else
        {
          this.memoizedIsInitialized = i;
        }
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      for (int i = 0; i < this.photo_.size(); i++)
        paramCodedOutputStream.writeMessage(1, (MessageLite)this.photo_.get(i));
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeMessage(2, this.albumInfo_);
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Network.GetAlbumResponse, Builder>
      implements Network.GetAlbumResponseOrBuilder
    {
      private Data.PhotoAlbum albumInfo_ = Data.PhotoAlbum.getDefaultInstance();
      private int bitField0_;
      private List<Data.MobilePhoto> photo_ = Collections.emptyList();

      private Network.GetAlbumResponse buildPartial()
      {
        Network.GetAlbumResponse localGetAlbumResponse = new Network.GetAlbumResponse(this, (byte)0);
        int i = this.bitField0_;
        if ((0x1 & this.bitField0_) == 1)
        {
          this.photo_ = Collections.unmodifiableList(this.photo_);
          this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        }
        Network.GetAlbumResponse.access$21702(localGetAlbumResponse, this.photo_);
        int j = i & 0x2;
        int k = 0;
        if (j == 2)
          k = 1;
        Network.GetAlbumResponse.access$21802(localGetAlbumResponse, this.albumInfo_);
        Network.GetAlbumResponse.access$21902(localGetAlbumResponse, k);
        return localGetAlbumResponse;
      }

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private void ensurePhotoIsMutable()
      {
        if ((0x1 & this.bitField0_) != 1)
        {
          this.photo_ = new ArrayList(this.photo_);
          this.bitField0_ = (0x1 | this.bitField0_);
        }
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 10:
            Data.MobilePhoto.Builder localBuilder1 = Data.MobilePhoto.newBuilder();
            paramCodedInputStream.readMessage(localBuilder1, paramExtensionRegistryLite);
            addPhoto(localBuilder1.buildPartial());
            break;
          case 18:
          }
          Data.PhotoAlbum.Builder localBuilder = Data.PhotoAlbum.newBuilder();
          if (hasAlbumInfo())
            localBuilder.mergeFrom(getAlbumInfo());
          paramCodedInputStream.readMessage(localBuilder, paramExtensionRegistryLite);
          setAlbumInfo(localBuilder.buildPartial());
        }
      }

      public final Builder addAllPhoto(Iterable<? extends Data.MobilePhoto> paramIterable)
      {
        ensurePhotoIsMutable();
        GeneratedMessageLite.Builder.addAll(paramIterable, this.photo_);
        return this;
      }

      public final Builder addPhoto(int paramInt, Data.MobilePhoto.Builder paramBuilder)
      {
        ensurePhotoIsMutable();
        this.photo_.add(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder addPhoto(int paramInt, Data.MobilePhoto paramMobilePhoto)
      {
        if (paramMobilePhoto == null)
          throw new NullPointerException();
        ensurePhotoIsMutable();
        this.photo_.add(paramInt, paramMobilePhoto);
        return this;
      }

      public final Builder addPhoto(Data.MobilePhoto.Builder paramBuilder)
      {
        ensurePhotoIsMutable();
        this.photo_.add(paramBuilder.build());
        return this;
      }

      public final Builder addPhoto(Data.MobilePhoto paramMobilePhoto)
      {
        if (paramMobilePhoto == null)
          throw new NullPointerException();
        ensurePhotoIsMutable();
        this.photo_.add(paramMobilePhoto);
        return this;
      }

      public final Builder clear()
      {
        super.clear();
        this.photo_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.albumInfo_ = Data.PhotoAlbum.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        return this;
      }

      public final Builder clearAlbumInfo()
      {
        this.albumInfo_ = Data.PhotoAlbum.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        return this;
      }

      public final Builder clearPhoto()
      {
        this.photo_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        return this;
      }

      public final Data.PhotoAlbum getAlbumInfo()
      {
        return this.albumInfo_;
      }

      public final Network.GetAlbumResponse getDefaultInstanceForType()
      {
        return Network.GetAlbumResponse.getDefaultInstance();
      }

      public final Data.MobilePhoto getPhoto(int paramInt)
      {
        return (Data.MobilePhoto)this.photo_.get(paramInt);
      }

      public final int getPhotoCount()
      {
        return this.photo_.size();
      }

      public final List<Data.MobilePhoto> getPhotoList()
      {
        return Collections.unmodifiableList(this.photo_);
      }

      public final boolean hasAlbumInfo()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean isInitialized()
      {
        int i = 0;
        boolean bool1;
        if (i < getPhotoCount())
        {
          boolean bool3 = getPhoto(i).isInitialized();
          bool1 = false;
          if (bool3);
        }
        while (true)
        {
          return bool1;
          i++;
          break;
          if (hasAlbumInfo())
          {
            boolean bool2 = getAlbumInfo().isInitialized();
            bool1 = false;
            if (!bool2);
          }
          else
          {
            bool1 = true;
          }
        }
      }

      public final Builder mergeFrom(Network.GetAlbumResponse paramGetAlbumResponse)
      {
        if (paramGetAlbumResponse == Network.GetAlbumResponse.getDefaultInstance())
          return this;
        label52: Data.PhotoAlbum localPhotoAlbum;
        if (!paramGetAlbumResponse.photo_.isEmpty())
        {
          if (this.photo_.isEmpty())
          {
            this.photo_ = paramGetAlbumResponse.photo_;
            this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
          }
        }
        else
        {
          if (!paramGetAlbumResponse.hasAlbumInfo())
            break label134;
          localPhotoAlbum = paramGetAlbumResponse.getAlbumInfo();
          if (((0x2 & this.bitField0_) != 2) || (this.albumInfo_ == Data.PhotoAlbum.getDefaultInstance()))
            break label136;
        }
        label134: label136: for (this.albumInfo_ = Data.PhotoAlbum.newBuilder(this.albumInfo_).mergeFrom(localPhotoAlbum).buildPartial(); ; this.albumInfo_ = localPhotoAlbum)
        {
          this.bitField0_ = (0x2 | this.bitField0_);
          break;
          ensurePhotoIsMutable();
          this.photo_.addAll(paramGetAlbumResponse.photo_);
          break label52;
          break;
        }
      }

      public final Builder setAlbumInfo(Data.PhotoAlbum.Builder paramBuilder)
      {
        this.albumInfo_ = paramBuilder.build();
        this.bitField0_ = (0x2 | this.bitField0_);
        return this;
      }

      public final Builder setAlbumInfo(Data.PhotoAlbum paramPhotoAlbum)
      {
        if (paramPhotoAlbum == null)
          throw new NullPointerException();
        this.albumInfo_ = paramPhotoAlbum;
        this.bitField0_ = (0x2 | this.bitField0_);
        return this;
      }

      public final Builder setPhoto(int paramInt, Data.MobilePhoto.Builder paramBuilder)
      {
        ensurePhotoIsMutable();
        this.photo_.set(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder setPhoto(int paramInt, Data.MobilePhoto paramMobilePhoto)
      {
        if (paramMobilePhoto == null)
          throw new NullPointerException();
        ensurePhotoIsMutable();
        this.photo_.set(paramInt, paramMobilePhoto);
        return this;
      }
    }
  }

  public static abstract interface GetAlbumResponseOrBuilder extends MessageLiteOrBuilder
  {
    public abstract Data.PhotoAlbum getAlbumInfo();

    public abstract Data.MobilePhoto getPhoto(int paramInt);

    public abstract int getPhotoCount();

    public abstract List<Data.MobilePhoto> getPhotoList();

    public abstract boolean hasAlbumInfo();
  }

  public static final class GetAudienceRequest extends GeneratedMessageLite
    implements Network.GetAudienceRequestOrBuilder
  {
    private static final GetAudienceRequest defaultInstance;
    private static final long serialVersionUID;
    private Object activityId_;
    private int bitField0_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;

    static
    {
      GetAudienceRequest localGetAudienceRequest = new GetAudienceRequest();
      defaultInstance = localGetAudienceRequest;
      localGetAudienceRequest.activityId_ = "";
    }

    private GetAudienceRequest()
    {
    }

    private GetAudienceRequest(Builder paramBuilder)
    {
      super();
    }

    private ByteString getActivityIdBytes()
    {
      Object localObject = this.activityId_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.activityId_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static GetAudienceRequest getDefaultInstance()
    {
      return defaultInstance;
    }

    public final String getActivityId()
    {
      Object localObject1 = this.activityId_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.activityId_ = str;
      }
    }

    public final GetAudienceRequest getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeBytesSize(1, getActivityIdBytes());
        this.memoizedSerializedSize = k;
      }
    }

    public final boolean hasActivityId()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeBytes(1, getActivityIdBytes());
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Network.GetAudienceRequest, Builder>
      implements Network.GetAudienceRequestOrBuilder
    {
      private Object activityId_ = "";
      private int bitField0_;

      private Network.GetAudienceRequest buildPartial()
      {
        Network.GetAudienceRequest localGetAudienceRequest = new Network.GetAudienceRequest(this, (byte)0);
        int i = 0x1 & this.bitField0_;
        int j = 0;
        if (i == 1)
          j = 1;
        Network.GetAudienceRequest.access$26602(localGetAudienceRequest, this.activityId_);
        Network.GetAudienceRequest.access$26702(localGetAudienceRequest, j);
        return localGetAudienceRequest;
      }

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 10:
          }
          this.bitField0_ = (0x1 | this.bitField0_);
          this.activityId_ = paramCodedInputStream.readBytes();
        }
      }

      public final Builder clear()
      {
        super.clear();
        this.activityId_ = "";
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        return this;
      }

      public final Builder clearActivityId()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.activityId_ = Network.GetAudienceRequest.getDefaultInstance().getActivityId();
        return this;
      }

      public final String getActivityId()
      {
        Object localObject = this.activityId_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.activityId_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final Network.GetAudienceRequest getDefaultInstanceForType()
      {
        return Network.GetAudienceRequest.getDefaultInstance();
      }

      public final boolean hasActivityId()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Network.GetAudienceRequest paramGetAudienceRequest)
      {
        if (paramGetAudienceRequest == Network.GetAudienceRequest.getDefaultInstance());
        while (true)
        {
          return this;
          if (paramGetAudienceRequest.hasActivityId())
            setActivityId(paramGetAudienceRequest.getActivityId());
        }
      }

      public final Builder setActivityId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x1 | this.bitField0_);
        this.activityId_ = paramString;
        return this;
      }
    }
  }

  public static abstract interface GetAudienceRequestOrBuilder extends MessageLiteOrBuilder
  {
    public abstract String getActivityId();

    public abstract boolean hasActivityId();
  }

  public static final class GetAudienceResponse extends GeneratedMessageLite
    implements Network.GetAudienceResponseOrBuilder
  {
    private static final GetAudienceResponse defaultInstance;
    private static final long serialVersionUID;
    private Data.Audience audience_;
    private int bitField0_;
    private Object description_;
    private Object hiddenAudienceCountText_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;

    static
    {
      GetAudienceResponse localGetAudienceResponse = new GetAudienceResponse();
      defaultInstance = localGetAudienceResponse;
      localGetAudienceResponse.audience_ = Data.Audience.getDefaultInstance();
      localGetAudienceResponse.description_ = "";
      localGetAudienceResponse.hiddenAudienceCountText_ = "";
    }

    private GetAudienceResponse()
    {
    }

    private GetAudienceResponse(Builder paramBuilder)
    {
      super();
    }

    public static GetAudienceResponse getDefaultInstance()
    {
      return defaultInstance;
    }

    private ByteString getDescriptionBytes()
    {
      Object localObject = this.description_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.description_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    private ByteString getHiddenAudienceCountTextBytes()
    {
      Object localObject = this.hiddenAudienceCountText_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.hiddenAudienceCountText_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public final Data.Audience getAudience()
    {
      return this.audience_;
    }

    public final GetAudienceResponse getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final String getDescription()
    {
      Object localObject1 = this.description_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.description_ = str;
      }
    }

    public final String getHiddenAudienceCountText()
    {
      Object localObject1 = this.hiddenAudienceCountText_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.hiddenAudienceCountText_ = str;
      }
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeMessageSize(1, this.audience_);
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeBytesSize(2, getDescriptionBytes());
        if ((0x4 & this.bitField0_) == 4)
          k += CodedOutputStream.computeBytesSize(3, getHiddenAudienceCountTextBytes());
        this.memoizedSerializedSize = k;
      }
    }

    public final boolean hasAudience()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean hasDescription()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasHiddenAudienceCountText()
    {
      if ((0x4 & this.bitField0_) == 4);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeMessage(1, this.audience_);
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeBytes(2, getDescriptionBytes());
      if ((0x4 & this.bitField0_) == 4)
        paramCodedOutputStream.writeBytes(3, getHiddenAudienceCountTextBytes());
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Network.GetAudienceResponse, Builder>
      implements Network.GetAudienceResponseOrBuilder
    {
      private Data.Audience audience_ = Data.Audience.getDefaultInstance();
      private int bitField0_;
      private Object description_ = "";
      private Object hiddenAudienceCountText_ = "";

      private Network.GetAudienceResponse buildPartial()
      {
        Network.GetAudienceResponse localGetAudienceResponse = new Network.GetAudienceResponse(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Network.GetAudienceResponse.access$27102(localGetAudienceResponse, this.audience_);
        if ((i & 0x2) == 2)
          k |= 2;
        Network.GetAudienceResponse.access$27202(localGetAudienceResponse, this.description_);
        if ((i & 0x4) == 4)
          k |= 4;
        Network.GetAudienceResponse.access$27302(localGetAudienceResponse, this.hiddenAudienceCountText_);
        Network.GetAudienceResponse.access$27402(localGetAudienceResponse, k);
        return localGetAudienceResponse;
      }

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 10:
            Data.Audience.Builder localBuilder = Data.Audience.newBuilder();
            if (hasAudience())
              localBuilder.mergeFrom(getAudience());
            paramCodedInputStream.readMessage(localBuilder, paramExtensionRegistryLite);
            setAudience(localBuilder.buildPartial());
            break;
          case 18:
            this.bitField0_ = (0x2 | this.bitField0_);
            this.description_ = paramCodedInputStream.readBytes();
            break;
          case 26:
          }
          this.bitField0_ = (0x4 | this.bitField0_);
          this.hiddenAudienceCountText_ = paramCodedInputStream.readBytes();
        }
      }

      public final Builder clear()
      {
        super.clear();
        this.audience_ = Data.Audience.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.description_ = "";
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.hiddenAudienceCountText_ = "";
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        return this;
      }

      public final Builder clearAudience()
      {
        this.audience_ = Data.Audience.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        return this;
      }

      public final Builder clearDescription()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.description_ = Network.GetAudienceResponse.getDefaultInstance().getDescription();
        return this;
      }

      public final Builder clearHiddenAudienceCountText()
      {
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.hiddenAudienceCountText_ = Network.GetAudienceResponse.getDefaultInstance().getHiddenAudienceCountText();
        return this;
      }

      public final Data.Audience getAudience()
      {
        return this.audience_;
      }

      public final Network.GetAudienceResponse getDefaultInstanceForType()
      {
        return Network.GetAudienceResponse.getDefaultInstance();
      }

      public final String getDescription()
      {
        Object localObject = this.description_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.description_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final String getHiddenAudienceCountText()
      {
        Object localObject = this.hiddenAudienceCountText_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.hiddenAudienceCountText_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final boolean hasAudience()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean hasDescription()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasHiddenAudienceCountText()
      {
        if ((0x4 & this.bitField0_) == 4);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Network.GetAudienceResponse paramGetAudienceResponse)
      {
        if (paramGetAudienceResponse == Network.GetAudienceResponse.getDefaultInstance())
          return this;
        Data.Audience localAudience;
        if (paramGetAudienceResponse.hasAudience())
        {
          localAudience = paramGetAudienceResponse.getAudience();
          if (((0x1 & this.bitField0_) != 1) || (this.audience_ == Data.Audience.getDefaultInstance()))
            break label106;
        }
        label106: for (this.audience_ = Data.Audience.newBuilder(this.audience_).mergeFrom(localAudience).buildPartial(); ; this.audience_ = localAudience)
        {
          this.bitField0_ = (0x1 | this.bitField0_);
          if (paramGetAudienceResponse.hasDescription())
            setDescription(paramGetAudienceResponse.getDescription());
          if (!paramGetAudienceResponse.hasHiddenAudienceCountText())
            break;
          setHiddenAudienceCountText(paramGetAudienceResponse.getHiddenAudienceCountText());
          break;
        }
      }

      public final Builder setAudience(Data.Audience.Builder paramBuilder)
      {
        this.audience_ = paramBuilder.build();
        this.bitField0_ = (0x1 | this.bitField0_);
        return this;
      }

      public final Builder setAudience(Data.Audience paramAudience)
      {
        if (paramAudience == null)
          throw new NullPointerException();
        this.audience_ = paramAudience;
        this.bitField0_ = (0x1 | this.bitField0_);
        return this;
      }

      public final Builder setDescription(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x2 | this.bitField0_);
        this.description_ = paramString;
        return this;
      }

      public final Builder setHiddenAudienceCountText(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x4 | this.bitField0_);
        this.hiddenAudienceCountText_ = paramString;
        return this;
      }
    }
  }

  public static abstract interface GetAudienceResponseOrBuilder extends MessageLiteOrBuilder
  {
    public abstract Data.Audience getAudience();

    public abstract String getDescription();

    public abstract String getHiddenAudienceCountText();

    public abstract boolean hasAudience();

    public abstract boolean hasDescription();

    public abstract boolean hasHiddenAudienceCountText();
  }

  public static final class GetAvatarRequest extends GeneratedMessageLite
    implements Network.GetAvatarRequestOrBuilder
  {
    private static final GetAvatarRequest defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private boolean enableSilhouette_;
    private Object focusObfuscatedId_;
    private int imageSize_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private boolean useBase64_;
    private long userId_;

    static
    {
      GetAvatarRequest localGetAvatarRequest = new GetAvatarRequest();
      defaultInstance = localGetAvatarRequest;
      localGetAvatarRequest.userId_ = 0L;
      localGetAvatarRequest.focusObfuscatedId_ = "";
      localGetAvatarRequest.useBase64_ = false;
      localGetAvatarRequest.imageSize_ = 64;
      localGetAvatarRequest.enableSilhouette_ = true;
    }

    private GetAvatarRequest()
    {
    }

    private GetAvatarRequest(Builder paramBuilder)
    {
      super();
    }

    public static GetAvatarRequest getDefaultInstance()
    {
      return defaultInstance;
    }

    private ByteString getFocusObfuscatedIdBytes()
    {
      Object localObject = this.focusObfuscatedId_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.focusObfuscatedId_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public final GetAvatarRequest getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final boolean getEnableSilhouette()
    {
      return this.enableSilhouette_;
    }

    public final String getFocusObfuscatedId()
    {
      Object localObject1 = this.focusObfuscatedId_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.focusObfuscatedId_ = str;
      }
    }

    public final int getImageSize()
    {
      return this.imageSize_;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeInt64Size(1, this.userId_);
        if ((0x4 & this.bitField0_) == 4)
          k += CodedOutputStream.computeBoolSize(2, this.useBase64_);
        if ((0x8 & this.bitField0_) == 8)
          k += CodedOutputStream.computeInt32Size(3, this.imageSize_);
        if ((0x10 & this.bitField0_) == 16)
          k += CodedOutputStream.computeBoolSize(4, this.enableSilhouette_);
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeBytesSize(5, getFocusObfuscatedIdBytes());
        this.memoizedSerializedSize = k;
      }
    }

    public final boolean getUseBase64()
    {
      return this.useBase64_;
    }

    public final long getUserId()
    {
      return this.userId_;
    }

    public final boolean hasEnableSilhouette()
    {
      if ((0x10 & this.bitField0_) == 16);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasFocusObfuscatedId()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasImageSize()
    {
      if ((0x8 & this.bitField0_) == 8);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasUseBase64()
    {
      if ((0x4 & this.bitField0_) == 4);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasUserId()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeInt64(1, this.userId_);
      if ((0x4 & this.bitField0_) == 4)
        paramCodedOutputStream.writeBool(2, this.useBase64_);
      if ((0x8 & this.bitField0_) == 8)
        paramCodedOutputStream.writeInt32(3, this.imageSize_);
      if ((0x10 & this.bitField0_) == 16)
        paramCodedOutputStream.writeBool(4, this.enableSilhouette_);
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeBytes(5, getFocusObfuscatedIdBytes());
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Network.GetAvatarRequest, Builder>
      implements Network.GetAvatarRequestOrBuilder
    {
      private int bitField0_;
      private boolean enableSilhouette_ = true;
      private Object focusObfuscatedId_ = "";
      private int imageSize_ = 64;
      private boolean useBase64_;
      private long userId_;

      private Network.GetAvatarRequest buildPartial()
      {
        Network.GetAvatarRequest localGetAvatarRequest = new Network.GetAvatarRequest(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Network.GetAvatarRequest.access$11702(localGetAvatarRequest, this.userId_);
        if ((i & 0x2) == 2)
          k |= 2;
        Network.GetAvatarRequest.access$11802(localGetAvatarRequest, this.focusObfuscatedId_);
        if ((i & 0x4) == 4)
          k |= 4;
        Network.GetAvatarRequest.access$11902(localGetAvatarRequest, this.useBase64_);
        if ((i & 0x8) == 8)
          k |= 8;
        Network.GetAvatarRequest.access$12002(localGetAvatarRequest, this.imageSize_);
        if ((i & 0x10) == 16)
          k |= 16;
        Network.GetAvatarRequest.access$12102(localGetAvatarRequest, this.enableSilhouette_);
        Network.GetAvatarRequest.access$12202(localGetAvatarRequest, k);
        return localGetAvatarRequest;
      }

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 8:
            this.bitField0_ = (0x1 | this.bitField0_);
            this.userId_ = paramCodedInputStream.readInt64();
            break;
          case 16:
            this.bitField0_ = (0x4 | this.bitField0_);
            this.useBase64_ = paramCodedInputStream.readBool();
            break;
          case 24:
            this.bitField0_ = (0x8 | this.bitField0_);
            this.imageSize_ = paramCodedInputStream.readInt32();
            break;
          case 32:
            this.bitField0_ = (0x10 | this.bitField0_);
            this.enableSilhouette_ = paramCodedInputStream.readBool();
            break;
          case 42:
          }
          this.bitField0_ = (0x2 | this.bitField0_);
          this.focusObfuscatedId_ = paramCodedInputStream.readBytes();
        }
      }

      public final Builder clear()
      {
        super.clear();
        this.userId_ = 0L;
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.focusObfuscatedId_ = "";
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.useBase64_ = false;
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.imageSize_ = 64;
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        this.enableSilhouette_ = true;
        this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        return this;
      }

      public final Builder clearEnableSilhouette()
      {
        this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        this.enableSilhouette_ = true;
        return this;
      }

      public final Builder clearFocusObfuscatedId()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.focusObfuscatedId_ = Network.GetAvatarRequest.getDefaultInstance().getFocusObfuscatedId();
        return this;
      }

      public final Builder clearImageSize()
      {
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        this.imageSize_ = 64;
        return this;
      }

      public final Builder clearUseBase64()
      {
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.useBase64_ = false;
        return this;
      }

      public final Builder clearUserId()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.userId_ = 0L;
        return this;
      }

      public final Network.GetAvatarRequest getDefaultInstanceForType()
      {
        return Network.GetAvatarRequest.getDefaultInstance();
      }

      public final boolean getEnableSilhouette()
      {
        return this.enableSilhouette_;
      }

      public final String getFocusObfuscatedId()
      {
        Object localObject = this.focusObfuscatedId_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.focusObfuscatedId_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final int getImageSize()
      {
        return this.imageSize_;
      }

      public final boolean getUseBase64()
      {
        return this.useBase64_;
      }

      public final long getUserId()
      {
        return this.userId_;
      }

      public final boolean hasEnableSilhouette()
      {
        if ((0x10 & this.bitField0_) == 16);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasFocusObfuscatedId()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasImageSize()
      {
        if ((0x8 & this.bitField0_) == 8);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasUseBase64()
      {
        if ((0x4 & this.bitField0_) == 4);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasUserId()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Network.GetAvatarRequest paramGetAvatarRequest)
      {
        if (paramGetAvatarRequest == Network.GetAvatarRequest.getDefaultInstance());
        while (true)
        {
          return this;
          if (paramGetAvatarRequest.hasUserId())
            setUserId(paramGetAvatarRequest.getUserId());
          if (paramGetAvatarRequest.hasFocusObfuscatedId())
            setFocusObfuscatedId(paramGetAvatarRequest.getFocusObfuscatedId());
          if (paramGetAvatarRequest.hasUseBase64())
            setUseBase64(paramGetAvatarRequest.getUseBase64());
          if (paramGetAvatarRequest.hasImageSize())
            setImageSize(paramGetAvatarRequest.getImageSize());
          if (paramGetAvatarRequest.hasEnableSilhouette())
            setEnableSilhouette(paramGetAvatarRequest.getEnableSilhouette());
        }
      }

      public final Builder setEnableSilhouette(boolean paramBoolean)
      {
        this.bitField0_ = (0x10 | this.bitField0_);
        this.enableSilhouette_ = paramBoolean;
        return this;
      }

      public final Builder setFocusObfuscatedId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x2 | this.bitField0_);
        this.focusObfuscatedId_ = paramString;
        return this;
      }

      public final Builder setImageSize(int paramInt)
      {
        this.bitField0_ = (0x8 | this.bitField0_);
        this.imageSize_ = paramInt;
        return this;
      }

      public final Builder setUseBase64(boolean paramBoolean)
      {
        this.bitField0_ = (0x4 | this.bitField0_);
        this.useBase64_ = paramBoolean;
        return this;
      }

      public final Builder setUserId(long paramLong)
      {
        this.bitField0_ = (0x1 | this.bitField0_);
        this.userId_ = paramLong;
        return this;
      }
    }
  }

  public static abstract interface GetAvatarRequestOrBuilder extends MessageLiteOrBuilder
  {
    public abstract boolean getEnableSilhouette();

    public abstract String getFocusObfuscatedId();

    public abstract int getImageSize();

    public abstract boolean getUseBase64();

    public abstract long getUserId();

    public abstract boolean hasEnableSilhouette();

    public abstract boolean hasFocusObfuscatedId();

    public abstract boolean hasImageSize();

    public abstract boolean hasUseBase64();

    public abstract boolean hasUserId();
  }

  public static final class GetAvatarResponse extends GeneratedMessageLite
    implements Network.GetAvatarResponseOrBuilder
  {
    private static final GetAvatarResponse defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private Object contentType_;
    private ByteString data_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;

    static
    {
      GetAvatarResponse localGetAvatarResponse = new GetAvatarResponse();
      defaultInstance = localGetAvatarResponse;
      localGetAvatarResponse.data_ = ByteString.EMPTY;
      localGetAvatarResponse.contentType_ = "";
    }

    private GetAvatarResponse()
    {
    }

    private GetAvatarResponse(Builder paramBuilder)
    {
      super();
    }

    private ByteString getContentTypeBytes()
    {
      Object localObject = this.contentType_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.contentType_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static GetAvatarResponse getDefaultInstance()
    {
      return defaultInstance;
    }

    public final String getContentType()
    {
      Object localObject1 = this.contentType_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.contentType_ = str;
      }
    }

    public final ByteString getData()
    {
      return this.data_;
    }

    public final GetAvatarResponse getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeBytesSize(1, this.data_);
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeBytesSize(2, getContentTypeBytes());
        this.memoizedSerializedSize = k;
      }
    }

    public final boolean hasContentType()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasData()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeBytes(1, this.data_);
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeBytes(2, getContentTypeBytes());
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Network.GetAvatarResponse, Builder>
      implements Network.GetAvatarResponseOrBuilder
    {
      private int bitField0_;
      private Object contentType_ = "";
      private ByteString data_ = ByteString.EMPTY;

      private Network.GetAvatarResponse buildPartial()
      {
        Network.GetAvatarResponse localGetAvatarResponse = new Network.GetAvatarResponse(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Network.GetAvatarResponse.access$12602(localGetAvatarResponse, this.data_);
        if ((i & 0x2) == 2)
          k |= 2;
        Network.GetAvatarResponse.access$12702(localGetAvatarResponse, this.contentType_);
        Network.GetAvatarResponse.access$12802(localGetAvatarResponse, k);
        return localGetAvatarResponse;
      }

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 10:
            this.bitField0_ = (0x1 | this.bitField0_);
            this.data_ = paramCodedInputStream.readBytes();
            break;
          case 18:
          }
          this.bitField0_ = (0x2 | this.bitField0_);
          this.contentType_ = paramCodedInputStream.readBytes();
        }
      }

      public final Builder clear()
      {
        super.clear();
        this.data_ = ByteString.EMPTY;
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.contentType_ = "";
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        return this;
      }

      public final Builder clearContentType()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.contentType_ = Network.GetAvatarResponse.getDefaultInstance().getContentType();
        return this;
      }

      public final Builder clearData()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.data_ = Network.GetAvatarResponse.getDefaultInstance().getData();
        return this;
      }

      public final String getContentType()
      {
        Object localObject = this.contentType_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.contentType_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final ByteString getData()
      {
        return this.data_;
      }

      public final Network.GetAvatarResponse getDefaultInstanceForType()
      {
        return Network.GetAvatarResponse.getDefaultInstance();
      }

      public final boolean hasContentType()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasData()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Network.GetAvatarResponse paramGetAvatarResponse)
      {
        if (paramGetAvatarResponse == Network.GetAvatarResponse.getDefaultInstance());
        while (true)
        {
          return this;
          if (paramGetAvatarResponse.hasData())
            setData(paramGetAvatarResponse.getData());
          if (paramGetAvatarResponse.hasContentType())
            setContentType(paramGetAvatarResponse.getContentType());
        }
      }

      public final Builder setContentType(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x2 | this.bitField0_);
        this.contentType_ = paramString;
        return this;
      }

      public final Builder setData(ByteString paramByteString)
      {
        if (paramByteString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x1 | this.bitField0_);
        this.data_ = paramByteString;
        return this;
      }
    }
  }

  public static abstract interface GetAvatarResponseOrBuilder extends MessageLiteOrBuilder
  {
    public abstract String getContentType();

    public abstract ByteString getData();

    public abstract boolean hasContentType();

    public abstract boolean hasData();
  }

  public static final class GetCoalescedNotificationsRequest extends GeneratedMessageLite
    implements Network.GetCoalescedNotificationsRequestOrBuilder
  {
    private static final GetCoalescedNotificationsRequest defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private Data.NotificationChannel channel_;
    private boolean coalesceCircleNotifications_;
    private Object continuationToken_;
    private double earliestNotificationTime_;
    private FilterType filter_;
    private List<NotificationEnums.NotificationType> includedNotificationType_;
    private int maxCount_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;

    static
    {
      GetCoalescedNotificationsRequest localGetCoalescedNotificationsRequest = new GetCoalescedNotificationsRequest();
      defaultInstance = localGetCoalescedNotificationsRequest;
      localGetCoalescedNotificationsRequest.maxCount_ = 0;
      localGetCoalescedNotificationsRequest.continuationToken_ = "";
      localGetCoalescedNotificationsRequest.filter_ = FilterType.MENTIONS_FILTER;
      localGetCoalescedNotificationsRequest.coalesceCircleNotifications_ = false;
      localGetCoalescedNotificationsRequest.channel_ = Data.NotificationChannel.IPHONE_PUSH;
      localGetCoalescedNotificationsRequest.includedNotificationType_ = Collections.emptyList();
      localGetCoalescedNotificationsRequest.earliestNotificationTime_ = 0.0D;
    }

    private GetCoalescedNotificationsRequest()
    {
    }

    private GetCoalescedNotificationsRequest(Builder paramBuilder)
    {
      super();
    }

    private ByteString getContinuationTokenBytes()
    {
      Object localObject = this.continuationToken_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.continuationToken_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static GetCoalescedNotificationsRequest getDefaultInstance()
    {
      return defaultInstance;
    }

    public final Data.NotificationChannel getChannel()
    {
      return this.channel_;
    }

    public final boolean getCoalesceCircleNotifications()
    {
      return this.coalesceCircleNotifications_;
    }

    public final String getContinuationToken()
    {
      Object localObject1 = this.continuationToken_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.continuationToken_ = str;
      }
    }

    public final GetCoalescedNotificationsRequest getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final double getEarliestNotificationTime()
    {
      return this.earliestNotificationTime_;
    }

    public final FilterType getFilter()
    {
      return this.filter_;
    }

    public final NotificationEnums.NotificationType getIncludedNotificationType(int paramInt)
    {
      return (NotificationEnums.NotificationType)this.includedNotificationType_.get(paramInt);
    }

    public final int getIncludedNotificationTypeCount()
    {
      return this.includedNotificationType_.size();
    }

    public final List<NotificationEnums.NotificationType> getIncludedNotificationTypeList()
    {
      return this.includedNotificationType_;
    }

    public final int getMaxCount()
    {
      return this.maxCount_;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int i1;
      for (int i2 = i; ; i2 = i1)
      {
        return i2;
        int j = 0x1 & this.bitField0_;
        int k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeInt32Size(1, this.maxCount_);
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeBytesSize(2, getContinuationTokenBytes());
        if ((0x4 & this.bitField0_) == 4)
          k += CodedOutputStream.computeEnumSize(3, this.filter_.getNumber());
        if ((0x8 & this.bitField0_) == 8)
          k += CodedOutputStream.computeBoolSize(4, this.coalesceCircleNotifications_);
        if ((0x10 & this.bitField0_) == 16)
          k += CodedOutputStream.computeEnumSize(5, this.channel_.getNumber());
        int m = 0;
        for (int n = 0; n < this.includedNotificationType_.size(); n++)
          m += CodedOutputStream.computeInt32SizeNoTag(((NotificationEnums.NotificationType)this.includedNotificationType_.get(n)).getNumber());
        i1 = k + m + 1 * this.includedNotificationType_.size();
        if ((0x20 & this.bitField0_) == 32)
          i1 += CodedOutputStream.computeDoubleSize(7, this.earliestNotificationTime_);
        this.memoizedSerializedSize = i1;
      }
    }

    public final boolean hasChannel()
    {
      if ((0x10 & this.bitField0_) == 16);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasCoalesceCircleNotifications()
    {
      if ((0x8 & this.bitField0_) == 8);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasContinuationToken()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasEarliestNotificationTime()
    {
      if ((0x20 & this.bitField0_) == 32);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasFilter()
    {
      if ((0x4 & this.bitField0_) == 4);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasMaxCount()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeInt32(1, this.maxCount_);
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeBytes(2, getContinuationTokenBytes());
      if ((0x4 & this.bitField0_) == 4)
        paramCodedOutputStream.writeEnum(3, this.filter_.getNumber());
      if ((0x8 & this.bitField0_) == 8)
        paramCodedOutputStream.writeBool(4, this.coalesceCircleNotifications_);
      if ((0x10 & this.bitField0_) == 16)
        paramCodedOutputStream.writeEnum(5, this.channel_.getNumber());
      for (int i = 0; i < this.includedNotificationType_.size(); i++)
        paramCodedOutputStream.writeEnum(6, ((NotificationEnums.NotificationType)this.includedNotificationType_.get(i)).getNumber());
      if ((0x20 & this.bitField0_) == 32)
        paramCodedOutputStream.writeDouble(7, this.earliestNotificationTime_);
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Network.GetCoalescedNotificationsRequest, Builder>
      implements Network.GetCoalescedNotificationsRequestOrBuilder
    {
      private int bitField0_;
      private Data.NotificationChannel channel_ = Data.NotificationChannel.IPHONE_PUSH;
      private boolean coalesceCircleNotifications_;
      private Object continuationToken_ = "";
      private double earliestNotificationTime_;
      private Network.GetCoalescedNotificationsRequest.FilterType filter_ = Network.GetCoalescedNotificationsRequest.FilterType.MENTIONS_FILTER;
      private List<NotificationEnums.NotificationType> includedNotificationType_ = Collections.emptyList();
      private int maxCount_;

      private Network.GetCoalescedNotificationsRequest buildPartial()
      {
        Network.GetCoalescedNotificationsRequest localGetCoalescedNotificationsRequest = new Network.GetCoalescedNotificationsRequest(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Network.GetCoalescedNotificationsRequest.access$44002(localGetCoalescedNotificationsRequest, this.maxCount_);
        if ((i & 0x2) == 2)
          k |= 2;
        Network.GetCoalescedNotificationsRequest.access$44102(localGetCoalescedNotificationsRequest, this.continuationToken_);
        if ((i & 0x4) == 4)
          k |= 4;
        Network.GetCoalescedNotificationsRequest.access$44202(localGetCoalescedNotificationsRequest, this.filter_);
        if ((i & 0x8) == 8)
          k |= 8;
        Network.GetCoalescedNotificationsRequest.access$44302(localGetCoalescedNotificationsRequest, this.coalesceCircleNotifications_);
        if ((i & 0x10) == 16)
          k |= 16;
        Network.GetCoalescedNotificationsRequest.access$44402(localGetCoalescedNotificationsRequest, this.channel_);
        if ((0x20 & this.bitField0_) == 32)
        {
          this.includedNotificationType_ = Collections.unmodifiableList(this.includedNotificationType_);
          this.bitField0_ = (0xFFFFFFDF & this.bitField0_);
        }
        Network.GetCoalescedNotificationsRequest.access$44502(localGetCoalescedNotificationsRequest, this.includedNotificationType_);
        if ((i & 0x40) == 64)
          k |= 32;
        Network.GetCoalescedNotificationsRequest.access$44602(localGetCoalescedNotificationsRequest, this.earliestNotificationTime_);
        Network.GetCoalescedNotificationsRequest.access$44702(localGetCoalescedNotificationsRequest, k);
        return localGetCoalescedNotificationsRequest;
      }

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private void ensureIncludedNotificationTypeIsMutable()
      {
        if ((0x20 & this.bitField0_) != 32)
        {
          this.includedNotificationType_ = new ArrayList(this.includedNotificationType_);
          this.bitField0_ = (0x20 | this.bitField0_);
        }
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 8:
            this.bitField0_ = (0x1 | this.bitField0_);
            this.maxCount_ = paramCodedInputStream.readInt32();
            break;
          case 18:
            this.bitField0_ = (0x2 | this.bitField0_);
            this.continuationToken_ = paramCodedInputStream.readBytes();
            break;
          case 24:
            Network.GetCoalescedNotificationsRequest.FilterType localFilterType = Network.GetCoalescedNotificationsRequest.FilterType.valueOf(paramCodedInputStream.readEnum());
            if (localFilterType == null)
              continue;
            this.bitField0_ = (0x4 | this.bitField0_);
            this.filter_ = localFilterType;
            break;
          case 32:
            this.bitField0_ = (0x8 | this.bitField0_);
            this.coalesceCircleNotifications_ = paramCodedInputStream.readBool();
            break;
          case 40:
            Data.NotificationChannel localNotificationChannel = Data.NotificationChannel.valueOf(paramCodedInputStream.readEnum());
            if (localNotificationChannel == null)
              continue;
            this.bitField0_ = (0x10 | this.bitField0_);
            this.channel_ = localNotificationChannel;
            break;
          case 48:
            NotificationEnums.NotificationType localNotificationType2 = NotificationEnums.NotificationType.valueOf(paramCodedInputStream.readEnum());
            if (localNotificationType2 == null)
              continue;
            addIncludedNotificationType(localNotificationType2);
            break;
          case 50:
            int j = paramCodedInputStream.pushLimit(paramCodedInputStream.readRawVarint32());
            while (paramCodedInputStream.getBytesUntilLimit() > 0)
            {
              NotificationEnums.NotificationType localNotificationType1 = NotificationEnums.NotificationType.valueOf(paramCodedInputStream.readEnum());
              if (localNotificationType1 != null)
                addIncludedNotificationType(localNotificationType1);
            }
            paramCodedInputStream.popLimit(j);
            break;
          case 57:
          }
          this.bitField0_ = (0x40 | this.bitField0_);
          this.earliestNotificationTime_ = paramCodedInputStream.readDouble();
        }
      }

      public final Builder addAllIncludedNotificationType(Iterable<? extends NotificationEnums.NotificationType> paramIterable)
      {
        ensureIncludedNotificationTypeIsMutable();
        GeneratedMessageLite.Builder.addAll(paramIterable, this.includedNotificationType_);
        return this;
      }

      public final Builder addIncludedNotificationType(NotificationEnums.NotificationType paramNotificationType)
      {
        if (paramNotificationType == null)
          throw new NullPointerException();
        ensureIncludedNotificationTypeIsMutable();
        this.includedNotificationType_.add(paramNotificationType);
        return this;
      }

      public final Builder clear()
      {
        super.clear();
        this.maxCount_ = 0;
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.continuationToken_ = "";
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.filter_ = Network.GetCoalescedNotificationsRequest.FilterType.MENTIONS_FILTER;
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.coalesceCircleNotifications_ = false;
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        this.channel_ = Data.NotificationChannel.IPHONE_PUSH;
        this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        this.includedNotificationType_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFDF & this.bitField0_);
        this.earliestNotificationTime_ = 0.0D;
        this.bitField0_ = (0xFFFFFFBF & this.bitField0_);
        return this;
      }

      public final Builder clearChannel()
      {
        this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        this.channel_ = Data.NotificationChannel.IPHONE_PUSH;
        return this;
      }

      public final Builder clearCoalesceCircleNotifications()
      {
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        this.coalesceCircleNotifications_ = false;
        return this;
      }

      public final Builder clearContinuationToken()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.continuationToken_ = Network.GetCoalescedNotificationsRequest.getDefaultInstance().getContinuationToken();
        return this;
      }

      public final Builder clearEarliestNotificationTime()
      {
        this.bitField0_ = (0xFFFFFFBF & this.bitField0_);
        this.earliestNotificationTime_ = 0.0D;
        return this;
      }

      public final Builder clearFilter()
      {
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.filter_ = Network.GetCoalescedNotificationsRequest.FilterType.MENTIONS_FILTER;
        return this;
      }

      public final Builder clearIncludedNotificationType()
      {
        this.includedNotificationType_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFDF & this.bitField0_);
        return this;
      }

      public final Builder clearMaxCount()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.maxCount_ = 0;
        return this;
      }

      public final Data.NotificationChannel getChannel()
      {
        return this.channel_;
      }

      public final boolean getCoalesceCircleNotifications()
      {
        return this.coalesceCircleNotifications_;
      }

      public final String getContinuationToken()
      {
        Object localObject = this.continuationToken_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.continuationToken_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final Network.GetCoalescedNotificationsRequest getDefaultInstanceForType()
      {
        return Network.GetCoalescedNotificationsRequest.getDefaultInstance();
      }

      public final double getEarliestNotificationTime()
      {
        return this.earliestNotificationTime_;
      }

      public final Network.GetCoalescedNotificationsRequest.FilterType getFilter()
      {
        return this.filter_;
      }

      public final NotificationEnums.NotificationType getIncludedNotificationType(int paramInt)
      {
        return (NotificationEnums.NotificationType)this.includedNotificationType_.get(paramInt);
      }

      public final int getIncludedNotificationTypeCount()
      {
        return this.includedNotificationType_.size();
      }

      public final List<NotificationEnums.NotificationType> getIncludedNotificationTypeList()
      {
        return Collections.unmodifiableList(this.includedNotificationType_);
      }

      public final int getMaxCount()
      {
        return this.maxCount_;
      }

      public final boolean hasChannel()
      {
        if ((0x10 & this.bitField0_) == 16);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasCoalesceCircleNotifications()
      {
        if ((0x8 & this.bitField0_) == 8);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasContinuationToken()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasEarliestNotificationTime()
      {
        if ((0x40 & this.bitField0_) == 64);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasFilter()
      {
        if ((0x4 & this.bitField0_) == 4);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasMaxCount()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Network.GetCoalescedNotificationsRequest paramGetCoalescedNotificationsRequest)
      {
        if (paramGetCoalescedNotificationsRequest == Network.GetCoalescedNotificationsRequest.getDefaultInstance());
        label151: label170: 
        while (true)
        {
          return this;
          if (paramGetCoalescedNotificationsRequest.hasMaxCount())
            setMaxCount(paramGetCoalescedNotificationsRequest.getMaxCount());
          if (paramGetCoalescedNotificationsRequest.hasContinuationToken())
            setContinuationToken(paramGetCoalescedNotificationsRequest.getContinuationToken());
          if (paramGetCoalescedNotificationsRequest.hasFilter())
            setFilter(paramGetCoalescedNotificationsRequest.getFilter());
          if (paramGetCoalescedNotificationsRequest.hasCoalesceCircleNotifications())
            setCoalesceCircleNotifications(paramGetCoalescedNotificationsRequest.getCoalesceCircleNotifications());
          if (paramGetCoalescedNotificationsRequest.hasChannel())
            setChannel(paramGetCoalescedNotificationsRequest.getChannel());
          if (!paramGetCoalescedNotificationsRequest.includedNotificationType_.isEmpty())
          {
            if (!this.includedNotificationType_.isEmpty())
              break label151;
            this.includedNotificationType_ = paramGetCoalescedNotificationsRequest.includedNotificationType_;
            this.bitField0_ = (0xFFFFFFDF & this.bitField0_);
          }
          while (true)
          {
            if (!paramGetCoalescedNotificationsRequest.hasEarliestNotificationTime())
              break label170;
            setEarliestNotificationTime(paramGetCoalescedNotificationsRequest.getEarliestNotificationTime());
            break;
            ensureIncludedNotificationTypeIsMutable();
            this.includedNotificationType_.addAll(paramGetCoalescedNotificationsRequest.includedNotificationType_);
          }
        }
      }

      public final Builder setChannel(Data.NotificationChannel paramNotificationChannel)
      {
        if (paramNotificationChannel == null)
          throw new NullPointerException();
        this.bitField0_ = (0x10 | this.bitField0_);
        this.channel_ = paramNotificationChannel;
        return this;
      }

      public final Builder setCoalesceCircleNotifications(boolean paramBoolean)
      {
        this.bitField0_ = (0x8 | this.bitField0_);
        this.coalesceCircleNotifications_ = paramBoolean;
        return this;
      }

      public final Builder setContinuationToken(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x2 | this.bitField0_);
        this.continuationToken_ = paramString;
        return this;
      }

      public final Builder setEarliestNotificationTime(double paramDouble)
      {
        this.bitField0_ = (0x40 | this.bitField0_);
        this.earliestNotificationTime_ = paramDouble;
        return this;
      }

      public final Builder setFilter(Network.GetCoalescedNotificationsRequest.FilterType paramFilterType)
      {
        if (paramFilterType == null)
          throw new NullPointerException();
        this.bitField0_ = (0x4 | this.bitField0_);
        this.filter_ = paramFilterType;
        return this;
      }

      public final Builder setIncludedNotificationType(int paramInt, NotificationEnums.NotificationType paramNotificationType)
      {
        if (paramNotificationType == null)
          throw new NullPointerException();
        ensureIncludedNotificationTypeIsMutable();
        this.includedNotificationType_.set(paramInt, paramNotificationType);
        return this;
      }

      public final Builder setMaxCount(int paramInt)
      {
        this.bitField0_ = (0x1 | this.bitField0_);
        this.maxCount_ = paramInt;
        return this;
      }
    }

    public static enum FilterType
      implements Internal.EnumLite
    {
      private static Internal.EnumLiteMap<FilterType> internalValueMap = new Internal.EnumLiteMap()
      {
      };
      private final int value;

      static
      {
        CIRCLE_FILTER = new FilterType("CIRCLE_FILTER", 3, 3);
        GAMES_FILTER = new FilterType("GAMES_FILTER", 4, 4);
        SYSTEM_FILTER = new FilterType("SYSTEM_FILTER", 5, 5);
        CAMERA_SYNC_FILTER = new FilterType("CAMERA_SYNC_FILTER", 6, 6);
        NO_FILTER = new FilterType("NO_FILTER", 7, 65535);
        FilterType[] arrayOfFilterType = new FilterType[8];
        arrayOfFilterType[0] = MENTIONS_FILTER;
        arrayOfFilterType[1] = MY_POSTS_FILTER;
        arrayOfFilterType[2] = NEW_COMMENTS_FILTER;
        arrayOfFilterType[3] = CIRCLE_FILTER;
        arrayOfFilterType[4] = GAMES_FILTER;
        arrayOfFilterType[5] = SYSTEM_FILTER;
        arrayOfFilterType[6] = CAMERA_SYNC_FILTER;
        arrayOfFilterType[7] = NO_FILTER;
      }

      private FilterType(int paramInt1, int paramInt2)
      {
        this.value = paramInt1;
      }

      public static FilterType valueOf(int paramInt)
      {
        FilterType localFilterType;
        switch (paramInt)
        {
        default:
          localFilterType = null;
        case 0:
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
        case 6:
        case 65535:
        }
        while (true)
        {
          return localFilterType;
          localFilterType = MENTIONS_FILTER;
          continue;
          localFilterType = MY_POSTS_FILTER;
          continue;
          localFilterType = NEW_COMMENTS_FILTER;
          continue;
          localFilterType = CIRCLE_FILTER;
          continue;
          localFilterType = GAMES_FILTER;
          continue;
          localFilterType = SYSTEM_FILTER;
          continue;
          localFilterType = CAMERA_SYNC_FILTER;
          continue;
          localFilterType = NO_FILTER;
        }
      }

      public final int getNumber()
      {
        return this.value;
      }
    }
  }

  public static abstract interface GetCoalescedNotificationsRequestOrBuilder extends MessageLiteOrBuilder
  {
    public abstract Data.NotificationChannel getChannel();

    public abstract boolean getCoalesceCircleNotifications();

    public abstract String getContinuationToken();

    public abstract double getEarliestNotificationTime();

    public abstract Network.GetCoalescedNotificationsRequest.FilterType getFilter();

    public abstract NotificationEnums.NotificationType getIncludedNotificationType(int paramInt);

    public abstract int getIncludedNotificationTypeCount();

    public abstract List<NotificationEnums.NotificationType> getIncludedNotificationTypeList();

    public abstract int getMaxCount();

    public abstract boolean hasChannel();

    public abstract boolean hasCoalesceCircleNotifications();

    public abstract boolean hasContinuationToken();

    public abstract boolean hasEarliestNotificationTime();

    public abstract boolean hasFilter();

    public abstract boolean hasMaxCount();
  }

  public static final class GetCoalescedNotificationsResponse extends GeneratedMessageLite
    implements Network.GetCoalescedNotificationsResponseOrBuilder
  {
    private static final GetCoalescedNotificationsResponse defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private Object continuationToken_;
    private double lastReadTime_;
    private double latestNotificationTime_;
    private double latestPushNotificationTime_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private List<Data.CoalescedNotification> notification_;
    private int totalPush_;
    private int totalUnread_;

    static
    {
      GetCoalescedNotificationsResponse localGetCoalescedNotificationsResponse = new GetCoalescedNotificationsResponse();
      defaultInstance = localGetCoalescedNotificationsResponse;
      localGetCoalescedNotificationsResponse.notification_ = Collections.emptyList();
      localGetCoalescedNotificationsResponse.totalUnread_ = 0;
      localGetCoalescedNotificationsResponse.latestNotificationTime_ = 0.0D;
      localGetCoalescedNotificationsResponse.continuationToken_ = "";
      localGetCoalescedNotificationsResponse.latestPushNotificationTime_ = 0.0D;
      localGetCoalescedNotificationsResponse.totalPush_ = 0;
      localGetCoalescedNotificationsResponse.lastReadTime_ = 0.0D;
    }

    private GetCoalescedNotificationsResponse()
    {
    }

    private GetCoalescedNotificationsResponse(Builder paramBuilder)
    {
      super();
    }

    private ByteString getContinuationTokenBytes()
    {
      Object localObject = this.continuationToken_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.continuationToken_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static GetCoalescedNotificationsResponse getDefaultInstance()
    {
      return defaultInstance;
    }

    public final String getContinuationToken()
    {
      Object localObject1 = this.continuationToken_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.continuationToken_ = str;
      }
    }

    public final GetCoalescedNotificationsResponse getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final double getLastReadTime()
    {
      return this.lastReadTime_;
    }

    public final double getLatestNotificationTime()
    {
      return this.latestNotificationTime_;
    }

    public final double getLatestPushNotificationTime()
    {
      return this.latestPushNotificationTime_;
    }

    public final Data.CoalescedNotification getNotification(int paramInt)
    {
      return (Data.CoalescedNotification)this.notification_.get(paramInt);
    }

    public final int getNotificationCount()
    {
      return this.notification_.size();
    }

    public final List<Data.CoalescedNotification> getNotificationList()
    {
      return this.notification_;
    }

    public final Data.CoalescedNotificationOrBuilder getNotificationOrBuilder(int paramInt)
    {
      return (Data.CoalescedNotificationOrBuilder)this.notification_.get(paramInt);
    }

    public final List<? extends Data.CoalescedNotificationOrBuilder> getNotificationOrBuilderList()
    {
      return this.notification_;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int j;
      for (int m = i; ; m = j)
      {
        return m;
        j = 0;
        for (int k = 0; k < this.notification_.size(); k++)
          j += CodedOutputStream.computeMessageSize(1, (MessageLite)this.notification_.get(k));
        if ((0x1 & this.bitField0_) == 1)
          j += CodedOutputStream.computeInt32Size(2, this.totalUnread_);
        if ((0x2 & this.bitField0_) == 2)
          j += CodedOutputStream.computeDoubleSize(3, this.latestNotificationTime_);
        if ((0x4 & this.bitField0_) == 4)
          j += CodedOutputStream.computeBytesSize(4, getContinuationTokenBytes());
        if ((0x8 & this.bitField0_) == 8)
          j += CodedOutputStream.computeDoubleSize(5, this.latestPushNotificationTime_);
        if ((0x10 & this.bitField0_) == 16)
          j += CodedOutputStream.computeInt32Size(6, this.totalPush_);
        if ((0x20 & this.bitField0_) == 32)
          j += CodedOutputStream.computeDoubleSize(7, this.lastReadTime_);
        this.memoizedSerializedSize = j;
      }
    }

    public final int getTotalPush()
    {
      return this.totalPush_;
    }

    public final int getTotalUnread()
    {
      return this.totalUnread_;
    }

    public final boolean hasContinuationToken()
    {
      if ((0x4 & this.bitField0_) == 4);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasLastReadTime()
    {
      if ((0x20 & this.bitField0_) == 32);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasLatestNotificationTime()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasLatestPushNotificationTime()
    {
      if ((0x8 & this.bitField0_) == 8);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasTotalPush()
    {
      if ((0x10 & this.bitField0_) == 16);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasTotalUnread()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      for (int i = 0; i < this.notification_.size(); i++)
        paramCodedOutputStream.writeMessage(1, (MessageLite)this.notification_.get(i));
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeInt32(2, this.totalUnread_);
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeDouble(3, this.latestNotificationTime_);
      if ((0x4 & this.bitField0_) == 4)
        paramCodedOutputStream.writeBytes(4, getContinuationTokenBytes());
      if ((0x8 & this.bitField0_) == 8)
        paramCodedOutputStream.writeDouble(5, this.latestPushNotificationTime_);
      if ((0x10 & this.bitField0_) == 16)
        paramCodedOutputStream.writeInt32(6, this.totalPush_);
      if ((0x20 & this.bitField0_) == 32)
        paramCodedOutputStream.writeDouble(7, this.lastReadTime_);
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Network.GetCoalescedNotificationsResponse, Builder>
      implements Network.GetCoalescedNotificationsResponseOrBuilder
    {
      private int bitField0_;
      private Object continuationToken_ = "";
      private double lastReadTime_;
      private double latestNotificationTime_;
      private double latestPushNotificationTime_;
      private List<Data.CoalescedNotification> notification_ = Collections.emptyList();
      private int totalPush_;
      private int totalUnread_;

      private Network.GetCoalescedNotificationsResponse buildPartial()
      {
        Network.GetCoalescedNotificationsResponse localGetCoalescedNotificationsResponse = new Network.GetCoalescedNotificationsResponse(this, (byte)0);
        int i = this.bitField0_;
        if ((0x1 & this.bitField0_) == 1)
        {
          this.notification_ = Collections.unmodifiableList(this.notification_);
          this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        }
        Network.GetCoalescedNotificationsResponse.access$45102(localGetCoalescedNotificationsResponse, this.notification_);
        int j = i & 0x2;
        int k = 0;
        if (j == 2)
          k = 1;
        Network.GetCoalescedNotificationsResponse.access$45202(localGetCoalescedNotificationsResponse, this.totalUnread_);
        if ((i & 0x4) == 4)
          k |= 2;
        Network.GetCoalescedNotificationsResponse.access$45302(localGetCoalescedNotificationsResponse, this.latestNotificationTime_);
        if ((i & 0x8) == 8)
          k |= 4;
        Network.GetCoalescedNotificationsResponse.access$45402(localGetCoalescedNotificationsResponse, this.continuationToken_);
        if ((i & 0x10) == 16)
          k |= 8;
        Network.GetCoalescedNotificationsResponse.access$45502(localGetCoalescedNotificationsResponse, this.latestPushNotificationTime_);
        if ((i & 0x20) == 32)
          k |= 16;
        Network.GetCoalescedNotificationsResponse.access$45602(localGetCoalescedNotificationsResponse, this.totalPush_);
        if ((i & 0x40) == 64)
          k |= 32;
        Network.GetCoalescedNotificationsResponse.access$45702(localGetCoalescedNotificationsResponse, this.lastReadTime_);
        Network.GetCoalescedNotificationsResponse.access$45802(localGetCoalescedNotificationsResponse, k);
        return localGetCoalescedNotificationsResponse;
      }

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private void ensureNotificationIsMutable()
      {
        if ((0x1 & this.bitField0_) != 1)
        {
          this.notification_ = new ArrayList(this.notification_);
          this.bitField0_ = (0x1 | this.bitField0_);
        }
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 10:
            Data.CoalescedNotification.Builder localBuilder = Data.CoalescedNotification.newBuilder();
            paramCodedInputStream.readMessage(localBuilder, paramExtensionRegistryLite);
            addNotification(localBuilder.buildPartial());
            break;
          case 16:
            this.bitField0_ = (0x2 | this.bitField0_);
            this.totalUnread_ = paramCodedInputStream.readInt32();
            break;
          case 25:
            this.bitField0_ = (0x4 | this.bitField0_);
            this.latestNotificationTime_ = paramCodedInputStream.readDouble();
            break;
          case 34:
            this.bitField0_ = (0x8 | this.bitField0_);
            this.continuationToken_ = paramCodedInputStream.readBytes();
            break;
          case 41:
            this.bitField0_ = (0x10 | this.bitField0_);
            this.latestPushNotificationTime_ = paramCodedInputStream.readDouble();
            break;
          case 48:
            this.bitField0_ = (0x20 | this.bitField0_);
            this.totalPush_ = paramCodedInputStream.readInt32();
            break;
          case 57:
          }
          this.bitField0_ = (0x40 | this.bitField0_);
          this.lastReadTime_ = paramCodedInputStream.readDouble();
        }
      }

      public final Builder addAllNotification(Iterable<? extends Data.CoalescedNotification> paramIterable)
      {
        ensureNotificationIsMutable();
        GeneratedMessageLite.Builder.addAll(paramIterable, this.notification_);
        return this;
      }

      public final Builder addNotification(int paramInt, Data.CoalescedNotification.Builder paramBuilder)
      {
        ensureNotificationIsMutable();
        this.notification_.add(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder addNotification(int paramInt, Data.CoalescedNotification paramCoalescedNotification)
      {
        if (paramCoalescedNotification == null)
          throw new NullPointerException();
        ensureNotificationIsMutable();
        this.notification_.add(paramInt, paramCoalescedNotification);
        return this;
      }

      public final Builder addNotification(Data.CoalescedNotification.Builder paramBuilder)
      {
        ensureNotificationIsMutable();
        this.notification_.add(paramBuilder.build());
        return this;
      }

      public final Builder addNotification(Data.CoalescedNotification paramCoalescedNotification)
      {
        if (paramCoalescedNotification == null)
          throw new NullPointerException();
        ensureNotificationIsMutable();
        this.notification_.add(paramCoalescedNotification);
        return this;
      }

      public final Builder clear()
      {
        super.clear();
        this.notification_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.totalUnread_ = 0;
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.latestNotificationTime_ = 0.0D;
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.continuationToken_ = "";
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        this.latestPushNotificationTime_ = 0.0D;
        this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        this.totalPush_ = 0;
        this.bitField0_ = (0xFFFFFFDF & this.bitField0_);
        this.lastReadTime_ = 0.0D;
        this.bitField0_ = (0xFFFFFFBF & this.bitField0_);
        return this;
      }

      public final Builder clearContinuationToken()
      {
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        this.continuationToken_ = Network.GetCoalescedNotificationsResponse.getDefaultInstance().getContinuationToken();
        return this;
      }

      public final Builder clearLastReadTime()
      {
        this.bitField0_ = (0xFFFFFFBF & this.bitField0_);
        this.lastReadTime_ = 0.0D;
        return this;
      }

      public final Builder clearLatestNotificationTime()
      {
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.latestNotificationTime_ = 0.0D;
        return this;
      }

      public final Builder clearLatestPushNotificationTime()
      {
        this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        this.latestPushNotificationTime_ = 0.0D;
        return this;
      }

      public final Builder clearNotification()
      {
        this.notification_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        return this;
      }

      public final Builder clearTotalPush()
      {
        this.bitField0_ = (0xFFFFFFDF & this.bitField0_);
        this.totalPush_ = 0;
        return this;
      }

      public final Builder clearTotalUnread()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.totalUnread_ = 0;
        return this;
      }

      public final String getContinuationToken()
      {
        Object localObject = this.continuationToken_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.continuationToken_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final Network.GetCoalescedNotificationsResponse getDefaultInstanceForType()
      {
        return Network.GetCoalescedNotificationsResponse.getDefaultInstance();
      }

      public final double getLastReadTime()
      {
        return this.lastReadTime_;
      }

      public final double getLatestNotificationTime()
      {
        return this.latestNotificationTime_;
      }

      public final double getLatestPushNotificationTime()
      {
        return this.latestPushNotificationTime_;
      }

      public final Data.CoalescedNotification getNotification(int paramInt)
      {
        return (Data.CoalescedNotification)this.notification_.get(paramInt);
      }

      public final int getNotificationCount()
      {
        return this.notification_.size();
      }

      public final List<Data.CoalescedNotification> getNotificationList()
      {
        return Collections.unmodifiableList(this.notification_);
      }

      public final int getTotalPush()
      {
        return this.totalPush_;
      }

      public final int getTotalUnread()
      {
        return this.totalUnread_;
      }

      public final boolean hasContinuationToken()
      {
        if ((0x8 & this.bitField0_) == 8);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasLastReadTime()
      {
        if ((0x40 & this.bitField0_) == 64);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasLatestNotificationTime()
      {
        if ((0x4 & this.bitField0_) == 4);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasLatestPushNotificationTime()
      {
        if ((0x10 & this.bitField0_) == 16);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasTotalPush()
      {
        if ((0x20 & this.bitField0_) == 32);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasTotalUnread()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Network.GetCoalescedNotificationsResponse paramGetCoalescedNotificationsResponse)
      {
        if (paramGetCoalescedNotificationsResponse == Network.GetCoalescedNotificationsResponse.getDefaultInstance())
          return this;
        if (!paramGetCoalescedNotificationsResponse.notification_.isEmpty())
        {
          if (!this.notification_.isEmpty())
            break label151;
          this.notification_ = paramGetCoalescedNotificationsResponse.notification_;
          this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        }
        while (true)
        {
          if (paramGetCoalescedNotificationsResponse.hasTotalUnread())
            setTotalUnread(paramGetCoalescedNotificationsResponse.getTotalUnread());
          if (paramGetCoalescedNotificationsResponse.hasLatestNotificationTime())
            setLatestNotificationTime(paramGetCoalescedNotificationsResponse.getLatestNotificationTime());
          if (paramGetCoalescedNotificationsResponse.hasContinuationToken())
            setContinuationToken(paramGetCoalescedNotificationsResponse.getContinuationToken());
          if (paramGetCoalescedNotificationsResponse.hasLatestPushNotificationTime())
            setLatestPushNotificationTime(paramGetCoalescedNotificationsResponse.getLatestPushNotificationTime());
          if (paramGetCoalescedNotificationsResponse.hasTotalPush())
            setTotalPush(paramGetCoalescedNotificationsResponse.getTotalPush());
          if (!paramGetCoalescedNotificationsResponse.hasLastReadTime())
            break;
          setLastReadTime(paramGetCoalescedNotificationsResponse.getLastReadTime());
          break;
          label151: ensureNotificationIsMutable();
          this.notification_.addAll(paramGetCoalescedNotificationsResponse.notification_);
        }
      }

      public final Builder setContinuationToken(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x8 | this.bitField0_);
        this.continuationToken_ = paramString;
        return this;
      }

      public final Builder setLastReadTime(double paramDouble)
      {
        this.bitField0_ = (0x40 | this.bitField0_);
        this.lastReadTime_ = paramDouble;
        return this;
      }

      public final Builder setLatestNotificationTime(double paramDouble)
      {
        this.bitField0_ = (0x4 | this.bitField0_);
        this.latestNotificationTime_ = paramDouble;
        return this;
      }

      public final Builder setLatestPushNotificationTime(double paramDouble)
      {
        this.bitField0_ = (0x10 | this.bitField0_);
        this.latestPushNotificationTime_ = paramDouble;
        return this;
      }

      public final Builder setNotification(int paramInt, Data.CoalescedNotification.Builder paramBuilder)
      {
        ensureNotificationIsMutable();
        this.notification_.set(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder setNotification(int paramInt, Data.CoalescedNotification paramCoalescedNotification)
      {
        if (paramCoalescedNotification == null)
          throw new NullPointerException();
        ensureNotificationIsMutable();
        this.notification_.set(paramInt, paramCoalescedNotification);
        return this;
      }

      public final Builder setTotalPush(int paramInt)
      {
        this.bitField0_ = (0x20 | this.bitField0_);
        this.totalPush_ = paramInt;
        return this;
      }

      public final Builder setTotalUnread(int paramInt)
      {
        this.bitField0_ = (0x2 | this.bitField0_);
        this.totalUnread_ = paramInt;
        return this;
      }
    }
  }

  public static abstract interface GetCoalescedNotificationsResponseOrBuilder extends MessageLiteOrBuilder
  {
    public abstract String getContinuationToken();

    public abstract double getLastReadTime();

    public abstract double getLatestNotificationTime();

    public abstract double getLatestPushNotificationTime();

    public abstract Data.CoalescedNotification getNotification(int paramInt);

    public abstract int getNotificationCount();

    public abstract List<Data.CoalescedNotification> getNotificationList();

    public abstract int getTotalPush();

    public abstract int getTotalUnread();

    public abstract boolean hasContinuationToken();

    public abstract boolean hasLastReadTime();

    public abstract boolean hasLatestNotificationTime();

    public abstract boolean hasLatestPushNotificationTime();

    public abstract boolean hasTotalPush();

    public abstract boolean hasTotalUnread();
  }

  public static final class GetEditableContentRequest extends GeneratedMessageLite
    implements Network.GetEditableContentRequestOrBuilder
  {
    private static final GetEditableContentRequest defaultInstance;
    private static final long serialVersionUID;
    private Object activityId_;
    private int bitField0_;
    private Object commentId_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;

    static
    {
      GetEditableContentRequest localGetEditableContentRequest = new GetEditableContentRequest();
      defaultInstance = localGetEditableContentRequest;
      localGetEditableContentRequest.activityId_ = "";
      localGetEditableContentRequest.commentId_ = "";
    }

    private GetEditableContentRequest()
    {
    }

    private GetEditableContentRequest(Builder paramBuilder)
    {
      super();
    }

    private ByteString getActivityIdBytes()
    {
      Object localObject = this.activityId_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.activityId_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    private ByteString getCommentIdBytes()
    {
      Object localObject = this.commentId_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.commentId_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static GetEditableContentRequest getDefaultInstance()
    {
      return defaultInstance;
    }

    public final String getActivityId()
    {
      Object localObject1 = this.activityId_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.activityId_ = str;
      }
    }

    public final String getCommentId()
    {
      Object localObject1 = this.commentId_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.commentId_ = str;
      }
    }

    public final GetEditableContentRequest getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeBytesSize(1, getActivityIdBytes());
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeBytesSize(2, getCommentIdBytes());
        this.memoizedSerializedSize = k;
      }
    }

    public final boolean hasActivityId()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean hasCommentId()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeBytes(1, getActivityIdBytes());
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeBytes(2, getCommentIdBytes());
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Network.GetEditableContentRequest, Builder>
      implements Network.GetEditableContentRequestOrBuilder
    {
      private Object activityId_ = "";
      private int bitField0_;
      private Object commentId_ = "";

      private Network.GetEditableContentRequest buildPartial()
      {
        Network.GetEditableContentRequest localGetEditableContentRequest = new Network.GetEditableContentRequest(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Network.GetEditableContentRequest.access$75002(localGetEditableContentRequest, this.activityId_);
        if ((i & 0x2) == 2)
          k |= 2;
        Network.GetEditableContentRequest.access$75102(localGetEditableContentRequest, this.commentId_);
        Network.GetEditableContentRequest.access$75202(localGetEditableContentRequest, k);
        return localGetEditableContentRequest;
      }

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 10:
            this.bitField0_ = (0x1 | this.bitField0_);
            this.activityId_ = paramCodedInputStream.readBytes();
            break;
          case 18:
          }
          this.bitField0_ = (0x2 | this.bitField0_);
          this.commentId_ = paramCodedInputStream.readBytes();
        }
      }

      public final Builder clear()
      {
        super.clear();
        this.activityId_ = "";
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.commentId_ = "";
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        return this;
      }

      public final Builder clearActivityId()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.activityId_ = Network.GetEditableContentRequest.getDefaultInstance().getActivityId();
        return this;
      }

      public final Builder clearCommentId()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.commentId_ = Network.GetEditableContentRequest.getDefaultInstance().getCommentId();
        return this;
      }

      public final String getActivityId()
      {
        Object localObject = this.activityId_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.activityId_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final String getCommentId()
      {
        Object localObject = this.commentId_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.commentId_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final Network.GetEditableContentRequest getDefaultInstanceForType()
      {
        return Network.GetEditableContentRequest.getDefaultInstance();
      }

      public final boolean hasActivityId()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean hasCommentId()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Network.GetEditableContentRequest paramGetEditableContentRequest)
      {
        if (paramGetEditableContentRequest == Network.GetEditableContentRequest.getDefaultInstance());
        while (true)
        {
          return this;
          if (paramGetEditableContentRequest.hasActivityId())
            setActivityId(paramGetEditableContentRequest.getActivityId());
          if (paramGetEditableContentRequest.hasCommentId())
            setCommentId(paramGetEditableContentRequest.getCommentId());
        }
      }

      public final Builder setActivityId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x1 | this.bitField0_);
        this.activityId_ = paramString;
        return this;
      }

      public final Builder setCommentId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x2 | this.bitField0_);
        this.commentId_ = paramString;
        return this;
      }
    }
  }

  public static abstract interface GetEditableContentRequestOrBuilder extends MessageLiteOrBuilder
  {
    public abstract String getActivityId();

    public abstract String getCommentId();

    public abstract boolean hasActivityId();

    public abstract boolean hasCommentId();
  }

  public static final class GetEditableContentResponse extends GeneratedMessageLite
    implements Network.GetEditableContentResponseOrBuilder
  {
    private static final GetEditableContentResponse defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private Object editableContent_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private List<Data.Mention> mention_;

    static
    {
      GetEditableContentResponse localGetEditableContentResponse = new GetEditableContentResponse();
      defaultInstance = localGetEditableContentResponse;
      localGetEditableContentResponse.editableContent_ = "";
      localGetEditableContentResponse.mention_ = Collections.emptyList();
    }

    private GetEditableContentResponse()
    {
    }

    private GetEditableContentResponse(Builder paramBuilder)
    {
      super();
    }

    public static GetEditableContentResponse getDefaultInstance()
    {
      return defaultInstance;
    }

    private ByteString getEditableContentBytes()
    {
      Object localObject = this.editableContent_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.editableContent_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public final GetEditableContentResponse getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final String getEditableContent()
    {
      Object localObject1 = this.editableContent_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.editableContent_ = str;
      }
    }

    public final Data.Mention getMention(int paramInt)
    {
      return (Data.Mention)this.mention_.get(paramInt);
    }

    public final int getMentionCount()
    {
      return this.mention_.size();
    }

    public final List<Data.Mention> getMentionList()
    {
      return this.mention_;
    }

    public final Data.MentionOrBuilder getMentionOrBuilder(int paramInt)
    {
      return (Data.MentionOrBuilder)this.mention_.get(paramInt);
    }

    public final List<? extends Data.MentionOrBuilder> getMentionOrBuilderList()
    {
      return this.mention_;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int n = i; ; n = k)
      {
        return n;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeBytesSize(1, getEditableContentBytes());
        for (int m = 0; m < this.mention_.size(); m++)
          k += CodedOutputStream.computeMessageSize(2, (MessageLite)this.mention_.get(m));
        this.memoizedSerializedSize = k;
      }
    }

    public final boolean hasEditableContent()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeBytes(1, getEditableContentBytes());
      for (int i = 0; i < this.mention_.size(); i++)
        paramCodedOutputStream.writeMessage(2, (MessageLite)this.mention_.get(i));
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Network.GetEditableContentResponse, Builder>
      implements Network.GetEditableContentResponseOrBuilder
    {
      private int bitField0_;
      private Object editableContent_ = "";
      private List<Data.Mention> mention_ = Collections.emptyList();

      private Network.GetEditableContentResponse buildPartial()
      {
        Network.GetEditableContentResponse localGetEditableContentResponse = new Network.GetEditableContentResponse(this, (byte)0);
        int i = 0x1 & this.bitField0_;
        int j = 0;
        if (i == 1)
          j = 1;
        Network.GetEditableContentResponse.access$75602(localGetEditableContentResponse, this.editableContent_);
        if ((0x2 & this.bitField0_) == 2)
        {
          this.mention_ = Collections.unmodifiableList(this.mention_);
          this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        }
        Network.GetEditableContentResponse.access$75702(localGetEditableContentResponse, this.mention_);
        Network.GetEditableContentResponse.access$75802(localGetEditableContentResponse, j);
        return localGetEditableContentResponse;
      }

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private void ensureMentionIsMutable()
      {
        if ((0x2 & this.bitField0_) != 2)
        {
          this.mention_ = new ArrayList(this.mention_);
          this.bitField0_ = (0x2 | this.bitField0_);
        }
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 10:
            this.bitField0_ = (0x1 | this.bitField0_);
            this.editableContent_ = paramCodedInputStream.readBytes();
            break;
          case 18:
          }
          Data.Mention.Builder localBuilder = Data.Mention.newBuilder();
          paramCodedInputStream.readMessage(localBuilder, paramExtensionRegistryLite);
          addMention(localBuilder.buildPartial());
        }
      }

      public final Builder addAllMention(Iterable<? extends Data.Mention> paramIterable)
      {
        ensureMentionIsMutable();
        GeneratedMessageLite.Builder.addAll(paramIterable, this.mention_);
        return this;
      }

      public final Builder addMention(int paramInt, Data.Mention.Builder paramBuilder)
      {
        ensureMentionIsMutable();
        this.mention_.add(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder addMention(int paramInt, Data.Mention paramMention)
      {
        if (paramMention == null)
          throw new NullPointerException();
        ensureMentionIsMutable();
        this.mention_.add(paramInt, paramMention);
        return this;
      }

      public final Builder addMention(Data.Mention.Builder paramBuilder)
      {
        ensureMentionIsMutable();
        this.mention_.add(paramBuilder.build());
        return this;
      }

      public final Builder addMention(Data.Mention paramMention)
      {
        if (paramMention == null)
          throw new NullPointerException();
        ensureMentionIsMutable();
        this.mention_.add(paramMention);
        return this;
      }

      public final Builder clear()
      {
        super.clear();
        this.editableContent_ = "";
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.mention_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        return this;
      }

      public final Builder clearEditableContent()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.editableContent_ = Network.GetEditableContentResponse.getDefaultInstance().getEditableContent();
        return this;
      }

      public final Builder clearMention()
      {
        this.mention_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        return this;
      }

      public final Network.GetEditableContentResponse getDefaultInstanceForType()
      {
        return Network.GetEditableContentResponse.getDefaultInstance();
      }

      public final String getEditableContent()
      {
        Object localObject = this.editableContent_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.editableContent_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final Data.Mention getMention(int paramInt)
      {
        return (Data.Mention)this.mention_.get(paramInt);
      }

      public final int getMentionCount()
      {
        return this.mention_.size();
      }

      public final List<Data.Mention> getMentionList()
      {
        return Collections.unmodifiableList(this.mention_);
      }

      public final boolean hasEditableContent()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Network.GetEditableContentResponse paramGetEditableContentResponse)
      {
        if (paramGetEditableContentResponse == Network.GetEditableContentResponse.getDefaultInstance());
        while (true)
        {
          return this;
          if (paramGetEditableContentResponse.hasEditableContent())
            setEditableContent(paramGetEditableContentResponse.getEditableContent());
          if (!paramGetEditableContentResponse.mention_.isEmpty())
            if (this.mention_.isEmpty())
            {
              this.mention_ = paramGetEditableContentResponse.mention_;
              this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
            }
            else
            {
              ensureMentionIsMutable();
              this.mention_.addAll(paramGetEditableContentResponse.mention_);
            }
        }
      }

      public final Builder setEditableContent(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x1 | this.bitField0_);
        this.editableContent_ = paramString;
        return this;
      }

      public final Builder setMention(int paramInt, Data.Mention.Builder paramBuilder)
      {
        ensureMentionIsMutable();
        this.mention_.set(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder setMention(int paramInt, Data.Mention paramMention)
      {
        if (paramMention == null)
          throw new NullPointerException();
        ensureMentionIsMutable();
        this.mention_.set(paramInt, paramMention);
        return this;
      }
    }
  }

  public static abstract interface GetEditableContentResponseOrBuilder extends MessageLiteOrBuilder
  {
    public abstract String getEditableContent();

    public abstract Data.Mention getMention(int paramInt);

    public abstract int getMentionCount();

    public abstract List<Data.Mention> getMentionList();

    public abstract boolean hasEditableContent();
  }

  public static final class GetEventPhotosRequest extends GeneratedMessageLite
    implements Network.GetEventPhotosRequestOrBuilder
  {
    private static final GetEventPhotosRequest defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private boolean byUser_;
    private Object eventId_;
    private long maxClusterSize_;
    private long maxInterval_;
    private int maxPhotos_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private long minTimestamp_;

    static
    {
      GetEventPhotosRequest localGetEventPhotosRequest = new GetEventPhotosRequest();
      defaultInstance = localGetEventPhotosRequest;
      localGetEventPhotosRequest.eventId_ = "";
      localGetEventPhotosRequest.maxPhotos_ = 0;
      localGetEventPhotosRequest.maxClusterSize_ = 30L;
      localGetEventPhotosRequest.byUser_ = false;
      localGetEventPhotosRequest.maxInterval_ = 1800L;
      localGetEventPhotosRequest.minTimestamp_ = 0L;
    }

    private GetEventPhotosRequest()
    {
    }

    private GetEventPhotosRequest(Builder paramBuilder)
    {
      super();
    }

    public static GetEventPhotosRequest getDefaultInstance()
    {
      return defaultInstance;
    }

    private ByteString getEventIdBytes()
    {
      Object localObject = this.eventId_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.eventId_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public final boolean getByUser()
    {
      return this.byUser_;
    }

    public final GetEventPhotosRequest getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final String getEventId()
    {
      Object localObject1 = this.eventId_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.eventId_ = str;
      }
    }

    public final long getMaxClusterSize()
    {
      return this.maxClusterSize_;
    }

    public final long getMaxInterval()
    {
      return this.maxInterval_;
    }

    public final int getMaxPhotos()
    {
      return this.maxPhotos_;
    }

    public final long getMinTimestamp()
    {
      return this.minTimestamp_;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeBytesSize(1, getEventIdBytes());
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeInt32Size(2, this.maxPhotos_);
        if ((0x4 & this.bitField0_) == 4)
          k += CodedOutputStream.computeInt64Size(3, this.maxClusterSize_);
        if ((0x8 & this.bitField0_) == 8)
          k += CodedOutputStream.computeBoolSize(4, this.byUser_);
        if ((0x10 & this.bitField0_) == 16)
          k += CodedOutputStream.computeInt64Size(5, this.maxInterval_);
        if ((0x20 & this.bitField0_) == 32)
          k += CodedOutputStream.computeInt64Size(6, this.minTimestamp_);
        this.memoizedSerializedSize = k;
      }
    }

    public final boolean hasByUser()
    {
      if ((0x8 & this.bitField0_) == 8);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasEventId()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean hasMaxClusterSize()
    {
      if ((0x4 & this.bitField0_) == 4);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasMaxInterval()
    {
      if ((0x10 & this.bitField0_) == 16);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasMaxPhotos()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasMinTimestamp()
    {
      if ((0x20 & this.bitField0_) == 32);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeBytes(1, getEventIdBytes());
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeInt32(2, this.maxPhotos_);
      if ((0x4 & this.bitField0_) == 4)
        paramCodedOutputStream.writeInt64(3, this.maxClusterSize_);
      if ((0x8 & this.bitField0_) == 8)
        paramCodedOutputStream.writeBool(4, this.byUser_);
      if ((0x10 & this.bitField0_) == 16)
        paramCodedOutputStream.writeInt64(5, this.maxInterval_);
      if ((0x20 & this.bitField0_) == 32)
        paramCodedOutputStream.writeInt64(6, this.minTimestamp_);
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Network.GetEventPhotosRequest, Builder>
      implements Network.GetEventPhotosRequestOrBuilder
    {
      private int bitField0_;
      private boolean byUser_;
      private Object eventId_ = "";
      private long maxClusterSize_ = 30L;
      private long maxInterval_ = 1800L;
      private int maxPhotos_;
      private long minTimestamp_;

      private Network.GetEventPhotosRequest buildPartial()
      {
        Network.GetEventPhotosRequest localGetEventPhotosRequest = new Network.GetEventPhotosRequest(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Network.GetEventPhotosRequest.access$77202(localGetEventPhotosRequest, this.eventId_);
        if ((i & 0x2) == 2)
          k |= 2;
        Network.GetEventPhotosRequest.access$77302(localGetEventPhotosRequest, this.maxPhotos_);
        if ((i & 0x4) == 4)
          k |= 4;
        Network.GetEventPhotosRequest.access$77402(localGetEventPhotosRequest, this.maxClusterSize_);
        if ((i & 0x8) == 8)
          k |= 8;
        Network.GetEventPhotosRequest.access$77502(localGetEventPhotosRequest, this.byUser_);
        if ((i & 0x10) == 16)
          k |= 16;
        Network.GetEventPhotosRequest.access$77602(localGetEventPhotosRequest, this.maxInterval_);
        if ((i & 0x20) == 32)
          k |= 32;
        Network.GetEventPhotosRequest.access$77702(localGetEventPhotosRequest, this.minTimestamp_);
        Network.GetEventPhotosRequest.access$77802(localGetEventPhotosRequest, k);
        return localGetEventPhotosRequest;
      }

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 10:
            this.bitField0_ = (0x1 | this.bitField0_);
            this.eventId_ = paramCodedInputStream.readBytes();
            break;
          case 16:
            this.bitField0_ = (0x2 | this.bitField0_);
            this.maxPhotos_ = paramCodedInputStream.readInt32();
            break;
          case 24:
            this.bitField0_ = (0x4 | this.bitField0_);
            this.maxClusterSize_ = paramCodedInputStream.readInt64();
            break;
          case 32:
            this.bitField0_ = (0x8 | this.bitField0_);
            this.byUser_ = paramCodedInputStream.readBool();
            break;
          case 40:
            this.bitField0_ = (0x10 | this.bitField0_);
            this.maxInterval_ = paramCodedInputStream.readInt64();
            break;
          case 48:
          }
          this.bitField0_ = (0x20 | this.bitField0_);
          this.minTimestamp_ = paramCodedInputStream.readInt64();
        }
      }

      public final Builder clear()
      {
        super.clear();
        this.eventId_ = "";
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.maxPhotos_ = 0;
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.maxClusterSize_ = 30L;
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.byUser_ = false;
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        this.maxInterval_ = 1800L;
        this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        this.minTimestamp_ = 0L;
        this.bitField0_ = (0xFFFFFFDF & this.bitField0_);
        return this;
      }

      public final Builder clearByUser()
      {
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        this.byUser_ = false;
        return this;
      }

      public final Builder clearEventId()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.eventId_ = Network.GetEventPhotosRequest.getDefaultInstance().getEventId();
        return this;
      }

      public final Builder clearMaxClusterSize()
      {
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.maxClusterSize_ = 30L;
        return this;
      }

      public final Builder clearMaxInterval()
      {
        this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        this.maxInterval_ = 1800L;
        return this;
      }

      public final Builder clearMaxPhotos()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.maxPhotos_ = 0;
        return this;
      }

      public final Builder clearMinTimestamp()
      {
        this.bitField0_ = (0xFFFFFFDF & this.bitField0_);
        this.minTimestamp_ = 0L;
        return this;
      }

      public final boolean getByUser()
      {
        return this.byUser_;
      }

      public final Network.GetEventPhotosRequest getDefaultInstanceForType()
      {
        return Network.GetEventPhotosRequest.getDefaultInstance();
      }

      public final String getEventId()
      {
        Object localObject = this.eventId_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.eventId_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final long getMaxClusterSize()
      {
        return this.maxClusterSize_;
      }

      public final long getMaxInterval()
      {
        return this.maxInterval_;
      }

      public final int getMaxPhotos()
      {
        return this.maxPhotos_;
      }

      public final long getMinTimestamp()
      {
        return this.minTimestamp_;
      }

      public final boolean hasByUser()
      {
        if ((0x8 & this.bitField0_) == 8);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasEventId()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean hasMaxClusterSize()
      {
        if ((0x4 & this.bitField0_) == 4);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasMaxInterval()
      {
        if ((0x10 & this.bitField0_) == 16);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasMaxPhotos()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasMinTimestamp()
      {
        if ((0x20 & this.bitField0_) == 32);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Network.GetEventPhotosRequest paramGetEventPhotosRequest)
      {
        if (paramGetEventPhotosRequest == Network.GetEventPhotosRequest.getDefaultInstance());
        while (true)
        {
          return this;
          if (paramGetEventPhotosRequest.hasEventId())
            setEventId(paramGetEventPhotosRequest.getEventId());
          if (paramGetEventPhotosRequest.hasMaxPhotos())
            setMaxPhotos(paramGetEventPhotosRequest.getMaxPhotos());
          if (paramGetEventPhotosRequest.hasMaxClusterSize())
            setMaxClusterSize(paramGetEventPhotosRequest.getMaxClusterSize());
          if (paramGetEventPhotosRequest.hasByUser())
            setByUser(paramGetEventPhotosRequest.getByUser());
          if (paramGetEventPhotosRequest.hasMaxInterval())
            setMaxInterval(paramGetEventPhotosRequest.getMaxInterval());
          if (paramGetEventPhotosRequest.hasMinTimestamp())
            setMinTimestamp(paramGetEventPhotosRequest.getMinTimestamp());
        }
      }

      public final Builder setByUser(boolean paramBoolean)
      {
        this.bitField0_ = (0x8 | this.bitField0_);
        this.byUser_ = paramBoolean;
        return this;
      }

      public final Builder setEventId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x1 | this.bitField0_);
        this.eventId_ = paramString;
        return this;
      }

      public final Builder setMaxClusterSize(long paramLong)
      {
        this.bitField0_ = (0x4 | this.bitField0_);
        this.maxClusterSize_ = paramLong;
        return this;
      }

      public final Builder setMaxInterval(long paramLong)
      {
        this.bitField0_ = (0x10 | this.bitField0_);
        this.maxInterval_ = paramLong;
        return this;
      }

      public final Builder setMaxPhotos(int paramInt)
      {
        this.bitField0_ = (0x2 | this.bitField0_);
        this.maxPhotos_ = paramInt;
        return this;
      }

      public final Builder setMinTimestamp(long paramLong)
      {
        this.bitField0_ = (0x20 | this.bitField0_);
        this.minTimestamp_ = paramLong;
        return this;
      }
    }
  }

  public static abstract interface GetEventPhotosRequestOrBuilder extends MessageLiteOrBuilder
  {
    public abstract boolean getByUser();

    public abstract String getEventId();

    public abstract long getMaxClusterSize();

    public abstract long getMaxInterval();

    public abstract int getMaxPhotos();

    public abstract long getMinTimestamp();

    public abstract boolean hasByUser();

    public abstract boolean hasEventId();

    public abstract boolean hasMaxClusterSize();

    public abstract boolean hasMaxInterval();

    public abstract boolean hasMaxPhotos();

    public abstract boolean hasMinTimestamp();
  }

  public static final class GetEventPhotosResponse extends GeneratedMessageLite
    implements Network.GetEventPhotosResponseOrBuilder
  {
    private static final GetEventPhotosResponse defaultInstance;
    private static final long serialVersionUID;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private List<Data.MobilePhotoGroup> photoGroup_;

    static
    {
      GetEventPhotosResponse localGetEventPhotosResponse = new GetEventPhotosResponse();
      defaultInstance = localGetEventPhotosResponse;
      localGetEventPhotosResponse.photoGroup_ = Collections.emptyList();
    }

    private GetEventPhotosResponse()
    {
    }

    private GetEventPhotosResponse(Builder paramBuilder)
    {
      super();
    }

    public static GetEventPhotosResponse getDefaultInstance()
    {
      return defaultInstance;
    }

    public final GetEventPhotosResponse getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final Data.MobilePhotoGroup getPhotoGroup(int paramInt)
    {
      return (Data.MobilePhotoGroup)this.photoGroup_.get(paramInt);
    }

    public final int getPhotoGroupCount()
    {
      return this.photoGroup_.size();
    }

    public final List<Data.MobilePhotoGroup> getPhotoGroupList()
    {
      return this.photoGroup_;
    }

    public final Data.MobilePhotoGroupOrBuilder getPhotoGroupOrBuilder(int paramInt)
    {
      return (Data.MobilePhotoGroupOrBuilder)this.photoGroup_.get(paramInt);
    }

    public final List<? extends Data.MobilePhotoGroupOrBuilder> getPhotoGroupOrBuilderList()
    {
      return this.photoGroup_;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int j;
      for (int m = i; ; m = j)
      {
        return m;
        j = 0;
        for (int k = 0; k < this.photoGroup_.size(); k++)
          j += CodedOutputStream.computeMessageSize(1, (MessageLite)this.photoGroup_.get(k));
        this.memoizedSerializedSize = j;
      }
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        for (int k = 0; ; k++)
        {
          if (k >= getPhotoGroupCount())
            break label61;
          if (!getPhotoGroup(k).isInitialized())
          {
            this.memoizedIsInitialized = 0;
            i = 0;
            break;
          }
        }
        label61: this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      for (int i = 0; i < this.photoGroup_.size(); i++)
        paramCodedOutputStream.writeMessage(1, (MessageLite)this.photoGroup_.get(i));
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Network.GetEventPhotosResponse, Builder>
      implements Network.GetEventPhotosResponseOrBuilder
    {
      private int bitField0_;
      private List<Data.MobilePhotoGroup> photoGroup_ = Collections.emptyList();

      private Network.GetEventPhotosResponse buildPartial()
      {
        Network.GetEventPhotosResponse localGetEventPhotosResponse = new Network.GetEventPhotosResponse(this, (byte)0);
        if ((0x1 & this.bitField0_) == 1)
        {
          this.photoGroup_ = Collections.unmodifiableList(this.photoGroup_);
          this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        }
        Network.GetEventPhotosResponse.access$78202(localGetEventPhotosResponse, this.photoGroup_);
        return localGetEventPhotosResponse;
      }

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private void ensurePhotoGroupIsMutable()
      {
        if ((0x1 & this.bitField0_) != 1)
        {
          this.photoGroup_ = new ArrayList(this.photoGroup_);
          this.bitField0_ = (0x1 | this.bitField0_);
        }
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 10:
          }
          Data.MobilePhotoGroup.Builder localBuilder = Data.MobilePhotoGroup.newBuilder();
          paramCodedInputStream.readMessage(localBuilder, paramExtensionRegistryLite);
          addPhotoGroup(localBuilder.buildPartial());
        }
      }

      public final Builder addAllPhotoGroup(Iterable<? extends Data.MobilePhotoGroup> paramIterable)
      {
        ensurePhotoGroupIsMutable();
        GeneratedMessageLite.Builder.addAll(paramIterable, this.photoGroup_);
        return this;
      }

      public final Builder addPhotoGroup(int paramInt, Data.MobilePhotoGroup.Builder paramBuilder)
      {
        ensurePhotoGroupIsMutable();
        this.photoGroup_.add(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder addPhotoGroup(int paramInt, Data.MobilePhotoGroup paramMobilePhotoGroup)
      {
        if (paramMobilePhotoGroup == null)
          throw new NullPointerException();
        ensurePhotoGroupIsMutable();
        this.photoGroup_.add(paramInt, paramMobilePhotoGroup);
        return this;
      }

      public final Builder addPhotoGroup(Data.MobilePhotoGroup.Builder paramBuilder)
      {
        ensurePhotoGroupIsMutable();
        this.photoGroup_.add(paramBuilder.build());
        return this;
      }

      public final Builder addPhotoGroup(Data.MobilePhotoGroup paramMobilePhotoGroup)
      {
        if (paramMobilePhotoGroup == null)
          throw new NullPointerException();
        ensurePhotoGroupIsMutable();
        this.photoGroup_.add(paramMobilePhotoGroup);
        return this;
      }

      public final Builder clear()
      {
        super.clear();
        this.photoGroup_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        return this;
      }

      public final Builder clearPhotoGroup()
      {
        this.photoGroup_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        return this;
      }

      public final Network.GetEventPhotosResponse getDefaultInstanceForType()
      {
        return Network.GetEventPhotosResponse.getDefaultInstance();
      }

      public final Data.MobilePhotoGroup getPhotoGroup(int paramInt)
      {
        return (Data.MobilePhotoGroup)this.photoGroup_.get(paramInt);
      }

      public final int getPhotoGroupCount()
      {
        return this.photoGroup_.size();
      }

      public final List<Data.MobilePhotoGroup> getPhotoGroupList()
      {
        return Collections.unmodifiableList(this.photoGroup_);
      }

      public final boolean isInitialized()
      {
        int i = 0;
        if (i < getPhotoGroupCount())
          if (getPhotoGroup(i).isInitialized());
        for (boolean bool = false; ; bool = true)
        {
          return bool;
          i++;
          break;
        }
      }

      public final Builder mergeFrom(Network.GetEventPhotosResponse paramGetEventPhotosResponse)
      {
        if (paramGetEventPhotosResponse == Network.GetEventPhotosResponse.getDefaultInstance());
        while (true)
        {
          return this;
          if (!paramGetEventPhotosResponse.photoGroup_.isEmpty())
            if (this.photoGroup_.isEmpty())
            {
              this.photoGroup_ = paramGetEventPhotosResponse.photoGroup_;
              this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
            }
            else
            {
              ensurePhotoGroupIsMutable();
              this.photoGroup_.addAll(paramGetEventPhotosResponse.photoGroup_);
            }
        }
      }

      public final Builder setPhotoGroup(int paramInt, Data.MobilePhotoGroup.Builder paramBuilder)
      {
        ensurePhotoGroupIsMutable();
        this.photoGroup_.set(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder setPhotoGroup(int paramInt, Data.MobilePhotoGroup paramMobilePhotoGroup)
      {
        if (paramMobilePhotoGroup == null)
          throw new NullPointerException();
        ensurePhotoGroupIsMutable();
        this.photoGroup_.set(paramInt, paramMobilePhotoGroup);
        return this;
      }
    }
  }

  public static abstract interface GetEventPhotosResponseOrBuilder extends MessageLiteOrBuilder
  {
    public abstract Data.MobilePhotoGroup getPhotoGroup(int paramInt);

    public abstract int getPhotoGroupCount();

    public abstract List<Data.MobilePhotoGroup> getPhotoGroupList();
  }

  public static final class GetPeopleRequest extends GeneratedMessageLite
    implements Network.GetPeopleRequestOrBuilder
  {
    private static final GetPeopleRequest defaultInstance;
    private static final long serialVersionUID;
    private LazyStringList focusObfuscatedId_;
    private List<Long> gaiaId_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;

    static
    {
      GetPeopleRequest localGetPeopleRequest = new GetPeopleRequest();
      defaultInstance = localGetPeopleRequest;
      localGetPeopleRequest.gaiaId_ = Collections.emptyList();
      localGetPeopleRequest.focusObfuscatedId_ = LazyStringArrayList.EMPTY;
    }

    private GetPeopleRequest()
    {
    }

    private GetPeopleRequest(Builder paramBuilder)
    {
      super();
    }

    public static GetPeopleRequest getDefaultInstance()
    {
      return defaultInstance;
    }

    public final GetPeopleRequest getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final String getFocusObfuscatedId(int paramInt)
    {
      return (String)this.focusObfuscatedId_.get(paramInt);
    }

    public final int getFocusObfuscatedIdCount()
    {
      return this.focusObfuscatedId_.size();
    }

    public final List<String> getFocusObfuscatedIdList()
    {
      return this.focusObfuscatedId_;
    }

    public final long getGaiaId(int paramInt)
    {
      return ((Long)this.gaiaId_.get(paramInt)).longValue();
    }

    public final int getGaiaIdCount()
    {
      return this.gaiaId_.size();
    }

    public final List<Long> getGaiaIdList()
    {
      return this.gaiaId_;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int i2;
      for (int i3 = i; ; i3 = i2)
      {
        return i3;
        int j = 0;
        for (int k = 0; k < this.gaiaId_.size(); k++)
          j += CodedOutputStream.computeRawVarint64Size(((Long)this.gaiaId_.get(k)).longValue());
        int m = j + 0 + 1 * getGaiaIdList().size();
        int n = 0;
        for (int i1 = 0; i1 < this.focusObfuscatedId_.size(); i1++)
          n += CodedOutputStream.computeBytesSizeNoTag(this.focusObfuscatedId_.getByteString(i1));
        i2 = m + n + 1 * getFocusObfuscatedIdList().size();
        this.memoizedSerializedSize = i2;
      }
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      for (int i = 0; i < this.gaiaId_.size(); i++)
        paramCodedOutputStream.writeInt64(1, ((Long)this.gaiaId_.get(i)).longValue());
      for (int j = 0; j < this.focusObfuscatedId_.size(); j++)
        paramCodedOutputStream.writeBytes(2, this.focusObfuscatedId_.getByteString(j));
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Network.GetPeopleRequest, Builder>
      implements Network.GetPeopleRequestOrBuilder
    {
      private int bitField0_;
      private LazyStringList focusObfuscatedId_ = LazyStringArrayList.EMPTY;
      private List<Long> gaiaId_ = Collections.emptyList();

      private Network.GetPeopleRequest buildPartial()
      {
        Network.GetPeopleRequest localGetPeopleRequest = new Network.GetPeopleRequest(this, (byte)0);
        if ((0x1 & this.bitField0_) == 1)
        {
          this.gaiaId_ = Collections.unmodifiableList(this.gaiaId_);
          this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        }
        Network.GetPeopleRequest.access$13202(localGetPeopleRequest, this.gaiaId_);
        if ((0x2 & this.bitField0_) == 2)
        {
          this.focusObfuscatedId_ = new UnmodifiableLazyStringList(this.focusObfuscatedId_);
          this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        }
        Network.GetPeopleRequest.access$13302(localGetPeopleRequest, this.focusObfuscatedId_);
        return localGetPeopleRequest;
      }

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private void ensureFocusObfuscatedIdIsMutable()
      {
        if ((0x2 & this.bitField0_) != 2)
        {
          this.focusObfuscatedId_ = new LazyStringArrayList(this.focusObfuscatedId_);
          this.bitField0_ = (0x2 | this.bitField0_);
        }
      }

      private void ensureGaiaIdIsMutable()
      {
        if ((0x1 & this.bitField0_) != 1)
        {
          this.gaiaId_ = new ArrayList(this.gaiaId_);
          this.bitField0_ = (0x1 | this.bitField0_);
        }
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 8:
            ensureGaiaIdIsMutable();
            this.gaiaId_.add(Long.valueOf(paramCodedInputStream.readInt64()));
            break;
          case 10:
            int j = paramCodedInputStream.pushLimit(paramCodedInputStream.readRawVarint32());
            while (paramCodedInputStream.getBytesUntilLimit() > 0)
              addGaiaId(paramCodedInputStream.readInt64());
            paramCodedInputStream.popLimit(j);
            break;
          case 18:
          }
          ensureFocusObfuscatedIdIsMutable();
          this.focusObfuscatedId_.add(paramCodedInputStream.readBytes());
        }
      }

      public final Builder addAllFocusObfuscatedId(Iterable<String> paramIterable)
      {
        ensureFocusObfuscatedIdIsMutable();
        GeneratedMessageLite.Builder.addAll(paramIterable, this.focusObfuscatedId_);
        return this;
      }

      public final Builder addAllGaiaId(Iterable<? extends Long> paramIterable)
      {
        ensureGaiaIdIsMutable();
        GeneratedMessageLite.Builder.addAll(paramIterable, this.gaiaId_);
        return this;
      }

      public final Builder addFocusObfuscatedId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        ensureFocusObfuscatedIdIsMutable();
        this.focusObfuscatedId_.add(paramString);
        return this;
      }

      public final Builder addGaiaId(long paramLong)
      {
        ensureGaiaIdIsMutable();
        this.gaiaId_.add(Long.valueOf(paramLong));
        return this;
      }

      public final Builder clear()
      {
        super.clear();
        this.gaiaId_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.focusObfuscatedId_ = LazyStringArrayList.EMPTY;
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        return this;
      }

      public final Builder clearFocusObfuscatedId()
      {
        this.focusObfuscatedId_ = LazyStringArrayList.EMPTY;
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        return this;
      }

      public final Builder clearGaiaId()
      {
        this.gaiaId_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        return this;
      }

      public final Network.GetPeopleRequest getDefaultInstanceForType()
      {
        return Network.GetPeopleRequest.getDefaultInstance();
      }

      public final String getFocusObfuscatedId(int paramInt)
      {
        return (String)this.focusObfuscatedId_.get(paramInt);
      }

      public final int getFocusObfuscatedIdCount()
      {
        return this.focusObfuscatedId_.size();
      }

      public final List<String> getFocusObfuscatedIdList()
      {
        return Collections.unmodifiableList(this.focusObfuscatedId_);
      }

      public final long getGaiaId(int paramInt)
      {
        return ((Long)this.gaiaId_.get(paramInt)).longValue();
      }

      public final int getGaiaIdCount()
      {
        return this.gaiaId_.size();
      }

      public final List<Long> getGaiaIdList()
      {
        return Collections.unmodifiableList(this.gaiaId_);
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Network.GetPeopleRequest paramGetPeopleRequest)
      {
        if (paramGetPeopleRequest == Network.GetPeopleRequest.getDefaultInstance());
        while (true)
        {
          return this;
          if (!paramGetPeopleRequest.gaiaId_.isEmpty())
          {
            if (!this.gaiaId_.isEmpty())
              break label98;
            this.gaiaId_ = paramGetPeopleRequest.gaiaId_;
            this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
          }
          while (true)
          {
            if (paramGetPeopleRequest.focusObfuscatedId_.isEmpty())
              break label117;
            if (!this.focusObfuscatedId_.isEmpty())
              break label119;
            this.focusObfuscatedId_ = paramGetPeopleRequest.focusObfuscatedId_;
            this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
            break;
            label98: ensureGaiaIdIsMutable();
            this.gaiaId_.addAll(paramGetPeopleRequest.gaiaId_);
          }
          label117: continue;
          label119: ensureFocusObfuscatedIdIsMutable();
          this.focusObfuscatedId_.addAll(paramGetPeopleRequest.focusObfuscatedId_);
        }
      }

      public final Builder setFocusObfuscatedId(int paramInt, String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        ensureFocusObfuscatedIdIsMutable();
        this.focusObfuscatedId_.set(paramInt, paramString);
        return this;
      }

      public final Builder setGaiaId(int paramInt, long paramLong)
      {
        ensureGaiaIdIsMutable();
        this.gaiaId_.set(paramInt, Long.valueOf(paramLong));
        return this;
      }
    }
  }

  public static abstract interface GetPeopleRequestOrBuilder extends MessageLiteOrBuilder
  {
    public abstract String getFocusObfuscatedId(int paramInt);

    public abstract int getFocusObfuscatedIdCount();

    public abstract List<String> getFocusObfuscatedIdList();

    public abstract long getGaiaId(int paramInt);

    public abstract int getGaiaIdCount();

    public abstract List<Long> getGaiaIdList();
  }

  public static final class GetPeopleResponse extends GeneratedMessageLite
    implements Network.GetPeopleResponseOrBuilder
  {
    private static final GetPeopleResponse defaultInstance;
    private static final long serialVersionUID;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private List<Data.Person> person_;

    static
    {
      GetPeopleResponse localGetPeopleResponse = new GetPeopleResponse();
      defaultInstance = localGetPeopleResponse;
      localGetPeopleResponse.person_ = Collections.emptyList();
    }

    private GetPeopleResponse()
    {
    }

    private GetPeopleResponse(Builder paramBuilder)
    {
      super();
    }

    public static GetPeopleResponse getDefaultInstance()
    {
      return defaultInstance;
    }

    public final GetPeopleResponse getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final Data.Person getPerson(int paramInt)
    {
      return (Data.Person)this.person_.get(paramInt);
    }

    public final int getPersonCount()
    {
      return this.person_.size();
    }

    public final List<Data.Person> getPersonList()
    {
      return this.person_;
    }

    public final Data.PersonOrBuilder getPersonOrBuilder(int paramInt)
    {
      return (Data.PersonOrBuilder)this.person_.get(paramInt);
    }

    public final List<? extends Data.PersonOrBuilder> getPersonOrBuilderList()
    {
      return this.person_;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int j;
      for (int m = i; ; m = j)
      {
        return m;
        j = 0;
        for (int k = 0; k < this.person_.size(); k++)
          j += CodedOutputStream.computeMessageSize(1, (MessageLite)this.person_.get(k));
        this.memoizedSerializedSize = j;
      }
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      for (int i = 0; i < this.person_.size(); i++)
        paramCodedOutputStream.writeMessage(1, (MessageLite)this.person_.get(i));
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Network.GetPeopleResponse, Builder>
      implements Network.GetPeopleResponseOrBuilder
    {
      private int bitField0_;
      private List<Data.Person> person_ = Collections.emptyList();

      private Network.GetPeopleResponse buildPartial()
      {
        Network.GetPeopleResponse localGetPeopleResponse = new Network.GetPeopleResponse(this, (byte)0);
        if ((0x1 & this.bitField0_) == 1)
        {
          this.person_ = Collections.unmodifiableList(this.person_);
          this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        }
        Network.GetPeopleResponse.access$13702(localGetPeopleResponse, this.person_);
        return localGetPeopleResponse;
      }

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private void ensurePersonIsMutable()
      {
        if ((0x1 & this.bitField0_) != 1)
        {
          this.person_ = new ArrayList(this.person_);
          this.bitField0_ = (0x1 | this.bitField0_);
        }
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 10:
          }
          Data.Person.Builder localBuilder = Data.Person.newBuilder();
          paramCodedInputStream.readMessage(localBuilder, paramExtensionRegistryLite);
          addPerson(localBuilder.buildPartial());
        }
      }

      public final Builder addAllPerson(Iterable<? extends Data.Person> paramIterable)
      {
        ensurePersonIsMutable();
        GeneratedMessageLite.Builder.addAll(paramIterable, this.person_);
        return this;
      }

      public final Builder addPerson(int paramInt, Data.Person.Builder paramBuilder)
      {
        ensurePersonIsMutable();
        this.person_.add(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder addPerson(int paramInt, Data.Person paramPerson)
      {
        if (paramPerson == null)
          throw new NullPointerException();
        ensurePersonIsMutable();
        this.person_.add(paramInt, paramPerson);
        return this;
      }

      public final Builder addPerson(Data.Person.Builder paramBuilder)
      {
        ensurePersonIsMutable();
        this.person_.add(paramBuilder.build());
        return this;
      }

      public final Builder addPerson(Data.Person paramPerson)
      {
        if (paramPerson == null)
          throw new NullPointerException();
        ensurePersonIsMutable();
        this.person_.add(paramPerson);
        return this;
      }

      public final Builder clear()
      {
        super.clear();
        this.person_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        return this;
      }

      public final Builder clearPerson()
      {
        this.person_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        return this;
      }

      public final Network.GetPeopleResponse getDefaultInstanceForType()
      {
        return Network.GetPeopleResponse.getDefaultInstance();
      }

      public final Data.Person getPerson(int paramInt)
      {
        return (Data.Person)this.person_.get(paramInt);
      }

      public final int getPersonCount()
      {
        return this.person_.size();
      }

      public final List<Data.Person> getPersonList()
      {
        return Collections.unmodifiableList(this.person_);
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Network.GetPeopleResponse paramGetPeopleResponse)
      {
        if (paramGetPeopleResponse == Network.GetPeopleResponse.getDefaultInstance());
        while (true)
        {
          return this;
          if (!paramGetPeopleResponse.person_.isEmpty())
            if (this.person_.isEmpty())
            {
              this.person_ = paramGetPeopleResponse.person_;
              this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
            }
            else
            {
              ensurePersonIsMutable();
              this.person_.addAll(paramGetPeopleResponse.person_);
            }
        }
      }

      public final Builder setPerson(int paramInt, Data.Person.Builder paramBuilder)
      {
        ensurePersonIsMutable();
        this.person_.set(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder setPerson(int paramInt, Data.Person paramPerson)
      {
        if (paramPerson == null)
          throw new NullPointerException();
        ensurePersonIsMutable();
        this.person_.set(paramInt, paramPerson);
        return this;
      }
    }
  }

  public static abstract interface GetPeopleResponseOrBuilder extends MessageLiteOrBuilder
  {
    public abstract Data.Person getPerson(int paramInt);

    public abstract int getPersonCount();

    public abstract List<Data.Person> getPersonList();
  }

  public static final class GetPhotoConsumptionStreamRequest extends GeneratedMessageLite
    implements Network.GetPhotoConsumptionStreamRequestOrBuilder
  {
    private static final GetPhotoConsumptionStreamRequest defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private Object focusGroupId_;
    private Object gaiaGroupId_;
    private int maxPhotoCountPerAlbum_;
    private int maxPhotoCount_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private int offset_;
    private Network.PhotoOptions photoOptions_;
    private boolean returnComments_;
    private boolean returnShapes_;

    static
    {
      GetPhotoConsumptionStreamRequest localGetPhotoConsumptionStreamRequest = new GetPhotoConsumptionStreamRequest();
      defaultInstance = localGetPhotoConsumptionStreamRequest;
      localGetPhotoConsumptionStreamRequest.maxPhotoCount_ = 0;
      localGetPhotoConsumptionStreamRequest.maxPhotoCountPerAlbum_ = 0;
      localGetPhotoConsumptionStreamRequest.offset_ = 0;
      localGetPhotoConsumptionStreamRequest.returnComments_ = false;
      localGetPhotoConsumptionStreamRequest.focusGroupId_ = "";
      localGetPhotoConsumptionStreamRequest.gaiaGroupId_ = "";
      localGetPhotoConsumptionStreamRequest.returnShapes_ = false;
      localGetPhotoConsumptionStreamRequest.photoOptions_ = Network.PhotoOptions.getDefaultInstance();
    }

    private GetPhotoConsumptionStreamRequest()
    {
    }

    private GetPhotoConsumptionStreamRequest(Builder paramBuilder)
    {
      super();
    }

    public static GetPhotoConsumptionStreamRequest getDefaultInstance()
    {
      return defaultInstance;
    }

    private ByteString getFocusGroupIdBytes()
    {
      Object localObject = this.focusGroupId_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.focusGroupId_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    private ByteString getGaiaGroupIdBytes()
    {
      Object localObject = this.gaiaGroupId_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.gaiaGroupId_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public final GetPhotoConsumptionStreamRequest getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final String getFocusGroupId()
    {
      Object localObject1 = this.focusGroupId_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.focusGroupId_ = str;
      }
    }

    public final String getGaiaGroupId()
    {
      Object localObject1 = this.gaiaGroupId_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.gaiaGroupId_ = str;
      }
    }

    public final int getMaxPhotoCount()
    {
      return this.maxPhotoCount_;
    }

    public final int getMaxPhotoCountPerAlbum()
    {
      return this.maxPhotoCountPerAlbum_;
    }

    public final int getOffset()
    {
      return this.offset_;
    }

    public final Network.PhotoOptions getPhotoOptions()
    {
      return this.photoOptions_;
    }

    @Deprecated
    public final boolean getReturnComments()
    {
      return this.returnComments_;
    }

    @Deprecated
    public final boolean getReturnShapes()
    {
      return this.returnShapes_;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeInt32Size(1, this.maxPhotoCount_);
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeInt32Size(2, this.maxPhotoCountPerAlbum_);
        if ((0x4 & this.bitField0_) == 4)
          k += CodedOutputStream.computeInt32Size(3, this.offset_);
        if ((0x8 & this.bitField0_) == 8)
          k += CodedOutputStream.computeBoolSize(4, this.returnComments_);
        if ((0x10 & this.bitField0_) == 16)
          k += CodedOutputStream.computeBytesSize(5, getFocusGroupIdBytes());
        if ((0x20 & this.bitField0_) == 32)
          k += CodedOutputStream.computeBytesSize(6, getGaiaGroupIdBytes());
        if ((0x40 & this.bitField0_) == 64)
          k += CodedOutputStream.computeBoolSize(7, this.returnShapes_);
        if ((0x80 & this.bitField0_) == 128)
          k += CodedOutputStream.computeMessageSize(8, this.photoOptions_);
        this.memoizedSerializedSize = k;
      }
    }

    public final boolean hasFocusGroupId()
    {
      if ((0x10 & this.bitField0_) == 16);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasGaiaGroupId()
    {
      if ((0x20 & this.bitField0_) == 32);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasMaxPhotoCount()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean hasMaxPhotoCountPerAlbum()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasOffset()
    {
      if ((0x4 & this.bitField0_) == 4);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasPhotoOptions()
    {
      if ((0x80 & this.bitField0_) == 128);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    @Deprecated
    public final boolean hasReturnComments()
    {
      if ((0x8 & this.bitField0_) == 8);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    @Deprecated
    public final boolean hasReturnShapes()
    {
      if ((0x40 & this.bitField0_) == 64);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeInt32(1, this.maxPhotoCount_);
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeInt32(2, this.maxPhotoCountPerAlbum_);
      if ((0x4 & this.bitField0_) == 4)
        paramCodedOutputStream.writeInt32(3, this.offset_);
      if ((0x8 & this.bitField0_) == 8)
        paramCodedOutputStream.writeBool(4, this.returnComments_);
      if ((0x10 & this.bitField0_) == 16)
        paramCodedOutputStream.writeBytes(5, getFocusGroupIdBytes());
      if ((0x20 & this.bitField0_) == 32)
        paramCodedOutputStream.writeBytes(6, getGaiaGroupIdBytes());
      if ((0x40 & this.bitField0_) == 64)
        paramCodedOutputStream.writeBool(7, this.returnShapes_);
      if ((0x80 & this.bitField0_) == 128)
        paramCodedOutputStream.writeMessage(8, this.photoOptions_);
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Network.GetPhotoConsumptionStreamRequest, Builder>
      implements Network.GetPhotoConsumptionStreamRequestOrBuilder
    {
      private int bitField0_;
      private Object focusGroupId_ = "";
      private Object gaiaGroupId_ = "";
      private int maxPhotoCountPerAlbum_;
      private int maxPhotoCount_;
      private int offset_;
      private Network.PhotoOptions photoOptions_ = Network.PhotoOptions.getDefaultInstance();
      private boolean returnComments_;
      private boolean returnShapes_;

      private Network.GetPhotoConsumptionStreamRequest buildPartial()
      {
        Network.GetPhotoConsumptionStreamRequest localGetPhotoConsumptionStreamRequest = new Network.GetPhotoConsumptionStreamRequest(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Network.GetPhotoConsumptionStreamRequest.access$41502(localGetPhotoConsumptionStreamRequest, this.maxPhotoCount_);
        if ((i & 0x2) == 2)
          k |= 2;
        Network.GetPhotoConsumptionStreamRequest.access$41602(localGetPhotoConsumptionStreamRequest, this.maxPhotoCountPerAlbum_);
        if ((i & 0x4) == 4)
          k |= 4;
        Network.GetPhotoConsumptionStreamRequest.access$41702(localGetPhotoConsumptionStreamRequest, this.offset_);
        if ((i & 0x8) == 8)
          k |= 8;
        Network.GetPhotoConsumptionStreamRequest.access$41802(localGetPhotoConsumptionStreamRequest, this.returnComments_);
        if ((i & 0x10) == 16)
          k |= 16;
        Network.GetPhotoConsumptionStreamRequest.access$41902(localGetPhotoConsumptionStreamRequest, this.focusGroupId_);
        if ((i & 0x20) == 32)
          k |= 32;
        Network.GetPhotoConsumptionStreamRequest.access$42002(localGetPhotoConsumptionStreamRequest, this.gaiaGroupId_);
        if ((i & 0x40) == 64)
          k |= 64;
        Network.GetPhotoConsumptionStreamRequest.access$42102(localGetPhotoConsumptionStreamRequest, this.returnShapes_);
        if ((i & 0x80) == 128)
          k |= 128;
        Network.GetPhotoConsumptionStreamRequest.access$42202(localGetPhotoConsumptionStreamRequest, this.photoOptions_);
        Network.GetPhotoConsumptionStreamRequest.access$42302(localGetPhotoConsumptionStreamRequest, k);
        return localGetPhotoConsumptionStreamRequest;
      }

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 8:
            this.bitField0_ = (0x1 | this.bitField0_);
            this.maxPhotoCount_ = paramCodedInputStream.readInt32();
            break;
          case 16:
            this.bitField0_ = (0x2 | this.bitField0_);
            this.maxPhotoCountPerAlbum_ = paramCodedInputStream.readInt32();
            break;
          case 24:
            this.bitField0_ = (0x4 | this.bitField0_);
            this.offset_ = paramCodedInputStream.readInt32();
            break;
          case 32:
            this.bitField0_ = (0x8 | this.bitField0_);
            this.returnComments_ = paramCodedInputStream.readBool();
            break;
          case 42:
            this.bitField0_ = (0x10 | this.bitField0_);
            this.focusGroupId_ = paramCodedInputStream.readBytes();
            break;
          case 50:
            this.bitField0_ = (0x20 | this.bitField0_);
            this.gaiaGroupId_ = paramCodedInputStream.readBytes();
            break;
          case 56:
            this.bitField0_ = (0x40 | this.bitField0_);
            this.returnShapes_ = paramCodedInputStream.readBool();
            break;
          case 66:
          }
          Network.PhotoOptions.Builder localBuilder = Network.PhotoOptions.newBuilder();
          if (hasPhotoOptions())
            localBuilder.mergeFrom(getPhotoOptions());
          paramCodedInputStream.readMessage(localBuilder, paramExtensionRegistryLite);
          setPhotoOptions(localBuilder.buildPartial());
        }
      }

      public final Builder clear()
      {
        super.clear();
        this.maxPhotoCount_ = 0;
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.maxPhotoCountPerAlbum_ = 0;
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.offset_ = 0;
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.returnComments_ = false;
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        this.focusGroupId_ = "";
        this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        this.gaiaGroupId_ = "";
        this.bitField0_ = (0xFFFFFFDF & this.bitField0_);
        this.returnShapes_ = false;
        this.bitField0_ = (0xFFFFFFBF & this.bitField0_);
        this.photoOptions_ = Network.PhotoOptions.getDefaultInstance();
        this.bitField0_ = (0xFFFFFF7F & this.bitField0_);
        return this;
      }

      public final Builder clearFocusGroupId()
      {
        this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        this.focusGroupId_ = Network.GetPhotoConsumptionStreamRequest.getDefaultInstance().getFocusGroupId();
        return this;
      }

      public final Builder clearGaiaGroupId()
      {
        this.bitField0_ = (0xFFFFFFDF & this.bitField0_);
        this.gaiaGroupId_ = Network.GetPhotoConsumptionStreamRequest.getDefaultInstance().getGaiaGroupId();
        return this;
      }

      public final Builder clearMaxPhotoCount()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.maxPhotoCount_ = 0;
        return this;
      }

      public final Builder clearMaxPhotoCountPerAlbum()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.maxPhotoCountPerAlbum_ = 0;
        return this;
      }

      public final Builder clearOffset()
      {
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.offset_ = 0;
        return this;
      }

      public final Builder clearPhotoOptions()
      {
        this.photoOptions_ = Network.PhotoOptions.getDefaultInstance();
        this.bitField0_ = (0xFFFFFF7F & this.bitField0_);
        return this;
      }

      @Deprecated
      public final Builder clearReturnComments()
      {
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        this.returnComments_ = false;
        return this;
      }

      @Deprecated
      public final Builder clearReturnShapes()
      {
        this.bitField0_ = (0xFFFFFFBF & this.bitField0_);
        this.returnShapes_ = false;
        return this;
      }

      public final Network.GetPhotoConsumptionStreamRequest getDefaultInstanceForType()
      {
        return Network.GetPhotoConsumptionStreamRequest.getDefaultInstance();
      }

      public final String getFocusGroupId()
      {
        Object localObject = this.focusGroupId_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.focusGroupId_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final String getGaiaGroupId()
      {
        Object localObject = this.gaiaGroupId_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.gaiaGroupId_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final int getMaxPhotoCount()
      {
        return this.maxPhotoCount_;
      }

      public final int getMaxPhotoCountPerAlbum()
      {
        return this.maxPhotoCountPerAlbum_;
      }

      public final int getOffset()
      {
        return this.offset_;
      }

      public final Network.PhotoOptions getPhotoOptions()
      {
        return this.photoOptions_;
      }

      @Deprecated
      public final boolean getReturnComments()
      {
        return this.returnComments_;
      }

      @Deprecated
      public final boolean getReturnShapes()
      {
        return this.returnShapes_;
      }

      public final boolean hasFocusGroupId()
      {
        if ((0x10 & this.bitField0_) == 16);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasGaiaGroupId()
      {
        if ((0x20 & this.bitField0_) == 32);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasMaxPhotoCount()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean hasMaxPhotoCountPerAlbum()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasOffset()
      {
        if ((0x4 & this.bitField0_) == 4);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasPhotoOptions()
      {
        if ((0x80 & this.bitField0_) == 128);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      @Deprecated
      public final boolean hasReturnComments()
      {
        if ((0x8 & this.bitField0_) == 8);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      @Deprecated
      public final boolean hasReturnShapes()
      {
        if ((0x40 & this.bitField0_) == 64);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Network.GetPhotoConsumptionStreamRequest paramGetPhotoConsumptionStreamRequest)
      {
        if (paramGetPhotoConsumptionStreamRequest == Network.GetPhotoConsumptionStreamRequest.getDefaultInstance());
        do
        {
          return this;
          if (paramGetPhotoConsumptionStreamRequest.hasMaxPhotoCount())
            setMaxPhotoCount(paramGetPhotoConsumptionStreamRequest.getMaxPhotoCount());
          if (paramGetPhotoConsumptionStreamRequest.hasMaxPhotoCountPerAlbum())
            setMaxPhotoCountPerAlbum(paramGetPhotoConsumptionStreamRequest.getMaxPhotoCountPerAlbum());
          if (paramGetPhotoConsumptionStreamRequest.hasOffset())
            setOffset(paramGetPhotoConsumptionStreamRequest.getOffset());
          if (paramGetPhotoConsumptionStreamRequest.hasReturnComments())
            setReturnComments(paramGetPhotoConsumptionStreamRequest.getReturnComments());
          if (paramGetPhotoConsumptionStreamRequest.hasFocusGroupId())
            setFocusGroupId(paramGetPhotoConsumptionStreamRequest.getFocusGroupId());
          if (paramGetPhotoConsumptionStreamRequest.hasGaiaGroupId())
            setGaiaGroupId(paramGetPhotoConsumptionStreamRequest.getGaiaGroupId());
          if (paramGetPhotoConsumptionStreamRequest.hasReturnShapes())
            setReturnShapes(paramGetPhotoConsumptionStreamRequest.getReturnShapes());
        }
        while (!paramGetPhotoConsumptionStreamRequest.hasPhotoOptions());
        Network.PhotoOptions localPhotoOptions = paramGetPhotoConsumptionStreamRequest.getPhotoOptions();
        if (((0x80 & this.bitField0_) == 128) && (this.photoOptions_ != Network.PhotoOptions.getDefaultInstance()));
        for (this.photoOptions_ = Network.PhotoOptions.newBuilder(this.photoOptions_).mergeFrom(localPhotoOptions).buildPartial(); ; this.photoOptions_ = localPhotoOptions)
        {
          this.bitField0_ = (0x80 | this.bitField0_);
          break;
        }
      }

      public final Builder setFocusGroupId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x10 | this.bitField0_);
        this.focusGroupId_ = paramString;
        return this;
      }

      public final Builder setGaiaGroupId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x20 | this.bitField0_);
        this.gaiaGroupId_ = paramString;
        return this;
      }

      public final Builder setMaxPhotoCount(int paramInt)
      {
        this.bitField0_ = (0x1 | this.bitField0_);
        this.maxPhotoCount_ = paramInt;
        return this;
      }

      public final Builder setMaxPhotoCountPerAlbum(int paramInt)
      {
        this.bitField0_ = (0x2 | this.bitField0_);
        this.maxPhotoCountPerAlbum_ = paramInt;
        return this;
      }

      public final Builder setOffset(int paramInt)
      {
        this.bitField0_ = (0x4 | this.bitField0_);
        this.offset_ = paramInt;
        return this;
      }

      public final Builder setPhotoOptions(Network.PhotoOptions.Builder paramBuilder)
      {
        this.photoOptions_ = paramBuilder.build();
        this.bitField0_ = (0x80 | this.bitField0_);
        return this;
      }

      public final Builder setPhotoOptions(Network.PhotoOptions paramPhotoOptions)
      {
        if (paramPhotoOptions == null)
          throw new NullPointerException();
        this.photoOptions_ = paramPhotoOptions;
        this.bitField0_ = (0x80 | this.bitField0_);
        return this;
      }

      @Deprecated
      public final Builder setReturnComments(boolean paramBoolean)
      {
        this.bitField0_ = (0x8 | this.bitField0_);
        this.returnComments_ = paramBoolean;
        return this;
      }

      @Deprecated
      public final Builder setReturnShapes(boolean paramBoolean)
      {
        this.bitField0_ = (0x40 | this.bitField0_);
        this.returnShapes_ = paramBoolean;
        return this;
      }
    }
  }

  public static abstract interface GetPhotoConsumptionStreamRequestOrBuilder extends MessageLiteOrBuilder
  {
    public abstract String getFocusGroupId();

    public abstract String getGaiaGroupId();

    public abstract int getMaxPhotoCount();

    public abstract int getMaxPhotoCountPerAlbum();

    public abstract int getOffset();

    public abstract Network.PhotoOptions getPhotoOptions();

    @Deprecated
    public abstract boolean getReturnComments();

    @Deprecated
    public abstract boolean getReturnShapes();

    public abstract boolean hasFocusGroupId();

    public abstract boolean hasGaiaGroupId();

    public abstract boolean hasMaxPhotoCount();

    public abstract boolean hasMaxPhotoCountPerAlbum();

    public abstract boolean hasOffset();

    public abstract boolean hasPhotoOptions();

    @Deprecated
    public abstract boolean hasReturnComments();

    @Deprecated
    public abstract boolean hasReturnShapes();
  }

  public static final class GetPhotoConsumptionStreamResponse extends GeneratedMessageLite
    implements Network.GetPhotoConsumptionStreamResponseOrBuilder
  {
    private static final GetPhotoConsumptionStreamResponse defaultInstance;
    private static final long serialVersionUID;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private List<Data.MobilePhoto> photo_;

    static
    {
      GetPhotoConsumptionStreamResponse localGetPhotoConsumptionStreamResponse = new GetPhotoConsumptionStreamResponse();
      defaultInstance = localGetPhotoConsumptionStreamResponse;
      localGetPhotoConsumptionStreamResponse.photo_ = Collections.emptyList();
    }

    private GetPhotoConsumptionStreamResponse()
    {
    }

    private GetPhotoConsumptionStreamResponse(Builder paramBuilder)
    {
      super();
    }

    public static GetPhotoConsumptionStreamResponse getDefaultInstance()
    {
      return defaultInstance;
    }

    public final GetPhotoConsumptionStreamResponse getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final Data.MobilePhoto getPhoto(int paramInt)
    {
      return (Data.MobilePhoto)this.photo_.get(paramInt);
    }

    public final int getPhotoCount()
    {
      return this.photo_.size();
    }

    public final List<Data.MobilePhoto> getPhotoList()
    {
      return this.photo_;
    }

    public final Data.MobilePhotoOrBuilder getPhotoOrBuilder(int paramInt)
    {
      return (Data.MobilePhotoOrBuilder)this.photo_.get(paramInt);
    }

    public final List<? extends Data.MobilePhotoOrBuilder> getPhotoOrBuilderList()
    {
      return this.photo_;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int j;
      for (int m = i; ; m = j)
      {
        return m;
        j = 0;
        for (int k = 0; k < this.photo_.size(); k++)
          j += CodedOutputStream.computeMessageSize(1, (MessageLite)this.photo_.get(k));
        this.memoizedSerializedSize = j;
      }
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        for (int k = 0; ; k++)
        {
          if (k >= getPhotoCount())
            break label61;
          if (!getPhoto(k).isInitialized())
          {
            this.memoizedIsInitialized = 0;
            i = 0;
            break;
          }
        }
        label61: this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      for (int i = 0; i < this.photo_.size(); i++)
        paramCodedOutputStream.writeMessage(1, (MessageLite)this.photo_.get(i));
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Network.GetPhotoConsumptionStreamResponse, Builder>
      implements Network.GetPhotoConsumptionStreamResponseOrBuilder
    {
      private int bitField0_;
      private List<Data.MobilePhoto> photo_ = Collections.emptyList();

      private Network.GetPhotoConsumptionStreamResponse buildPartial()
      {
        Network.GetPhotoConsumptionStreamResponse localGetPhotoConsumptionStreamResponse = new Network.GetPhotoConsumptionStreamResponse(this, (byte)0);
        if ((0x1 & this.bitField0_) == 1)
        {
          this.photo_ = Collections.unmodifiableList(this.photo_);
          this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        }
        Network.GetPhotoConsumptionStreamResponse.access$42702(localGetPhotoConsumptionStreamResponse, this.photo_);
        return localGetPhotoConsumptionStreamResponse;
      }

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private void ensurePhotoIsMutable()
      {
        if ((0x1 & this.bitField0_) != 1)
        {
          this.photo_ = new ArrayList(this.photo_);
          this.bitField0_ = (0x1 | this.bitField0_);
        }
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 10:
          }
          Data.MobilePhoto.Builder localBuilder = Data.MobilePhoto.newBuilder();
          paramCodedInputStream.readMessage(localBuilder, paramExtensionRegistryLite);
          addPhoto(localBuilder.buildPartial());
        }
      }

      public final Builder addAllPhoto(Iterable<? extends Data.MobilePhoto> paramIterable)
      {
        ensurePhotoIsMutable();
        GeneratedMessageLite.Builder.addAll(paramIterable, this.photo_);
        return this;
      }

      public final Builder addPhoto(int paramInt, Data.MobilePhoto.Builder paramBuilder)
      {
        ensurePhotoIsMutable();
        this.photo_.add(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder addPhoto(int paramInt, Data.MobilePhoto paramMobilePhoto)
      {
        if (paramMobilePhoto == null)
          throw new NullPointerException();
        ensurePhotoIsMutable();
        this.photo_.add(paramInt, paramMobilePhoto);
        return this;
      }

      public final Builder addPhoto(Data.MobilePhoto.Builder paramBuilder)
      {
        ensurePhotoIsMutable();
        this.photo_.add(paramBuilder.build());
        return this;
      }

      public final Builder addPhoto(Data.MobilePhoto paramMobilePhoto)
      {
        if (paramMobilePhoto == null)
          throw new NullPointerException();
        ensurePhotoIsMutable();
        this.photo_.add(paramMobilePhoto);
        return this;
      }

      public final Builder clear()
      {
        super.clear();
        this.photo_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        return this;
      }

      public final Builder clearPhoto()
      {
        this.photo_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        return this;
      }

      public final Network.GetPhotoConsumptionStreamResponse getDefaultInstanceForType()
      {
        return Network.GetPhotoConsumptionStreamResponse.getDefaultInstance();
      }

      public final Data.MobilePhoto getPhoto(int paramInt)
      {
        return (Data.MobilePhoto)this.photo_.get(paramInt);
      }

      public final int getPhotoCount()
      {
        return this.photo_.size();
      }

      public final List<Data.MobilePhoto> getPhotoList()
      {
        return Collections.unmodifiableList(this.photo_);
      }

      public final boolean isInitialized()
      {
        int i = 0;
        if (i < getPhotoCount())
          if (getPhoto(i).isInitialized());
        for (boolean bool = false; ; bool = true)
        {
          return bool;
          i++;
          break;
        }
      }

      public final Builder mergeFrom(Network.GetPhotoConsumptionStreamResponse paramGetPhotoConsumptionStreamResponse)
      {
        if (paramGetPhotoConsumptionStreamResponse == Network.GetPhotoConsumptionStreamResponse.getDefaultInstance());
        while (true)
        {
          return this;
          if (!paramGetPhotoConsumptionStreamResponse.photo_.isEmpty())
            if (this.photo_.isEmpty())
            {
              this.photo_ = paramGetPhotoConsumptionStreamResponse.photo_;
              this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
            }
            else
            {
              ensurePhotoIsMutable();
              this.photo_.addAll(paramGetPhotoConsumptionStreamResponse.photo_);
            }
        }
      }

      public final Builder setPhoto(int paramInt, Data.MobilePhoto.Builder paramBuilder)
      {
        ensurePhotoIsMutable();
        this.photo_.set(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder setPhoto(int paramInt, Data.MobilePhoto paramMobilePhoto)
      {
        if (paramMobilePhoto == null)
          throw new NullPointerException();
        ensurePhotoIsMutable();
        this.photo_.set(paramInt, paramMobilePhoto);
        return this;
      }
    }
  }

  public static abstract interface GetPhotoConsumptionStreamResponseOrBuilder extends MessageLiteOrBuilder
  {
    public abstract Data.MobilePhoto getPhoto(int paramInt);

    public abstract int getPhotoCount();

    public abstract List<Data.MobilePhoto> getPhotoList();
  }

  public static final class GetPhotoOrderRequest extends GeneratedMessageLite
    implements Network.GetPhotoOrderRequestOrBuilder
  {
    private static final GetPhotoOrderRequest defaultInstance;
    private static final long serialVersionUID;
    private Data.AlbumIdentifier albumIdentifier_;
    private int bitField0_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;

    static
    {
      GetPhotoOrderRequest localGetPhotoOrderRequest = new GetPhotoOrderRequest();
      defaultInstance = localGetPhotoOrderRequest;
      localGetPhotoOrderRequest.albumIdentifier_ = Data.AlbumIdentifier.getDefaultInstance();
    }

    private GetPhotoOrderRequest()
    {
    }

    private GetPhotoOrderRequest(Builder paramBuilder)
    {
      super();
    }

    public static GetPhotoOrderRequest getDefaultInstance()
    {
      return defaultInstance;
    }

    public final Data.AlbumIdentifier getAlbumIdentifier()
    {
      return this.albumIdentifier_;
    }

    public final GetPhotoOrderRequest getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeMessageSize(1, this.albumIdentifier_);
        this.memoizedSerializedSize = k;
      }
    }

    public final boolean hasAlbumIdentifier()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeMessage(1, this.albumIdentifier_);
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Network.GetPhotoOrderRequest, Builder>
      implements Network.GetPhotoOrderRequestOrBuilder
    {
      private Data.AlbumIdentifier albumIdentifier_ = Data.AlbumIdentifier.getDefaultInstance();
      private int bitField0_;

      private Network.GetPhotoOrderRequest buildPartial()
      {
        Network.GetPhotoOrderRequest localGetPhotoOrderRequest = new Network.GetPhotoOrderRequest(this, (byte)0);
        int i = 0x1 & this.bitField0_;
        int j = 0;
        if (i == 1)
          j = 1;
        Network.GetPhotoOrderRequest.access$9902(localGetPhotoOrderRequest, this.albumIdentifier_);
        Network.GetPhotoOrderRequest.access$10002(localGetPhotoOrderRequest, j);
        return localGetPhotoOrderRequest;
      }

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 10:
          }
          Data.AlbumIdentifier.Builder localBuilder = Data.AlbumIdentifier.newBuilder();
          if (hasAlbumIdentifier())
            localBuilder.mergeFrom(getAlbumIdentifier());
          paramCodedInputStream.readMessage(localBuilder, paramExtensionRegistryLite);
          setAlbumIdentifier(localBuilder.buildPartial());
        }
      }

      public final Builder clear()
      {
        super.clear();
        this.albumIdentifier_ = Data.AlbumIdentifier.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        return this;
      }

      public final Builder clearAlbumIdentifier()
      {
        this.albumIdentifier_ = Data.AlbumIdentifier.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        return this;
      }

      public final Data.AlbumIdentifier getAlbumIdentifier()
      {
        return this.albumIdentifier_;
      }

      public final Network.GetPhotoOrderRequest getDefaultInstanceForType()
      {
        return Network.GetPhotoOrderRequest.getDefaultInstance();
      }

      public final boolean hasAlbumIdentifier()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Network.GetPhotoOrderRequest paramGetPhotoOrderRequest)
      {
        if (paramGetPhotoOrderRequest == Network.GetPhotoOrderRequest.getDefaultInstance());
        while (!paramGetPhotoOrderRequest.hasAlbumIdentifier())
          return this;
        Data.AlbumIdentifier localAlbumIdentifier = paramGetPhotoOrderRequest.getAlbumIdentifier();
        if (((0x1 & this.bitField0_) == 1) && (this.albumIdentifier_ != Data.AlbumIdentifier.getDefaultInstance()));
        for (this.albumIdentifier_ = Data.AlbumIdentifier.newBuilder(this.albumIdentifier_).mergeFrom(localAlbumIdentifier).buildPartial(); ; this.albumIdentifier_ = localAlbumIdentifier)
        {
          this.bitField0_ = (0x1 | this.bitField0_);
          break;
        }
      }

      public final Builder setAlbumIdentifier(Data.AlbumIdentifier.Builder paramBuilder)
      {
        this.albumIdentifier_ = paramBuilder.build();
        this.bitField0_ = (0x1 | this.bitField0_);
        return this;
      }

      public final Builder setAlbumIdentifier(Data.AlbumIdentifier paramAlbumIdentifier)
      {
        if (paramAlbumIdentifier == null)
          throw new NullPointerException();
        this.albumIdentifier_ = paramAlbumIdentifier;
        this.bitField0_ = (0x1 | this.bitField0_);
        return this;
      }
    }
  }

  public static abstract interface GetPhotoOrderRequestOrBuilder extends MessageLiteOrBuilder
  {
    public abstract Data.AlbumIdentifier getAlbumIdentifier();

    public abstract boolean hasAlbumIdentifier();
  }

  public static final class GetPhotoOrderResponse extends GeneratedMessageLite
    implements Network.GetPhotoOrderResponseOrBuilder
  {
    private static final GetPhotoOrderResponse defaultInstance;
    private static final long serialVersionUID;
    private long albumEntityVersion_;
    private int bitField0_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private List<Network.PhotoOrder> photoOrder_;

    static
    {
      GetPhotoOrderResponse localGetPhotoOrderResponse = new GetPhotoOrderResponse();
      defaultInstance = localGetPhotoOrderResponse;
      localGetPhotoOrderResponse.photoOrder_ = Collections.emptyList();
      localGetPhotoOrderResponse.albumEntityVersion_ = 0L;
    }

    private GetPhotoOrderResponse()
    {
    }

    private GetPhotoOrderResponse(Builder paramBuilder)
    {
      super();
    }

    public static GetPhotoOrderResponse getDefaultInstance()
    {
      return defaultInstance;
    }

    public final long getAlbumEntityVersion()
    {
      return this.albumEntityVersion_;
    }

    public final GetPhotoOrderResponse getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final Network.PhotoOrder getPhotoOrder(int paramInt)
    {
      return (Network.PhotoOrder)this.photoOrder_.get(paramInt);
    }

    public final int getPhotoOrderCount()
    {
      return this.photoOrder_.size();
    }

    public final List<Network.PhotoOrder> getPhotoOrderList()
    {
      return this.photoOrder_;
    }

    public final Network.PhotoOrderOrBuilder getPhotoOrderOrBuilder(int paramInt)
    {
      return (Network.PhotoOrderOrBuilder)this.photoOrder_.get(paramInt);
    }

    public final List<? extends Network.PhotoOrderOrBuilder> getPhotoOrderOrBuilderList()
    {
      return this.photoOrder_;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int j;
      for (int m = i; ; m = j)
      {
        return m;
        j = 0;
        for (int k = 0; k < this.photoOrder_.size(); k++)
          j += CodedOutputStream.computeMessageSize(1, (MessageLite)this.photoOrder_.get(k));
        if ((0x1 & this.bitField0_) == 1)
          j += CodedOutputStream.computeInt64Size(2, this.albumEntityVersion_);
        this.memoizedSerializedSize = j;
      }
    }

    public final boolean hasAlbumEntityVersion()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      for (int i = 0; i < this.photoOrder_.size(); i++)
        paramCodedOutputStream.writeMessage(1, (MessageLite)this.photoOrder_.get(i));
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeInt64(2, this.albumEntityVersion_);
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Network.GetPhotoOrderResponse, Builder>
      implements Network.GetPhotoOrderResponseOrBuilder
    {
      private long albumEntityVersion_;
      private int bitField0_;
      private List<Network.PhotoOrder> photoOrder_ = Collections.emptyList();

      private Network.GetPhotoOrderResponse buildPartial()
      {
        Network.GetPhotoOrderResponse localGetPhotoOrderResponse = new Network.GetPhotoOrderResponse(this, (byte)0);
        int i = this.bitField0_;
        if ((0x1 & this.bitField0_) == 1)
        {
          this.photoOrder_ = Collections.unmodifiableList(this.photoOrder_);
          this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        }
        Network.GetPhotoOrderResponse.access$10402(localGetPhotoOrderResponse, this.photoOrder_);
        int j = i & 0x2;
        int k = 0;
        if (j == 2)
          k = 1;
        Network.GetPhotoOrderResponse.access$10502(localGetPhotoOrderResponse, this.albumEntityVersion_);
        Network.GetPhotoOrderResponse.access$10602(localGetPhotoOrderResponse, k);
        return localGetPhotoOrderResponse;
      }

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private void ensurePhotoOrderIsMutable()
      {
        if ((0x1 & this.bitField0_) != 1)
        {
          this.photoOrder_ = new ArrayList(this.photoOrder_);
          this.bitField0_ = (0x1 | this.bitField0_);
        }
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 10:
            Network.PhotoOrder.Builder localBuilder = Network.PhotoOrder.newBuilder();
            paramCodedInputStream.readMessage(localBuilder, paramExtensionRegistryLite);
            addPhotoOrder(localBuilder.buildPartial());
            break;
          case 16:
          }
          this.bitField0_ = (0x2 | this.bitField0_);
          this.albumEntityVersion_ = paramCodedInputStream.readInt64();
        }
      }

      public final Builder addAllPhotoOrder(Iterable<? extends Network.PhotoOrder> paramIterable)
      {
        ensurePhotoOrderIsMutable();
        GeneratedMessageLite.Builder.addAll(paramIterable, this.photoOrder_);
        return this;
      }

      public final Builder addPhotoOrder(int paramInt, Network.PhotoOrder.Builder paramBuilder)
      {
        ensurePhotoOrderIsMutable();
        this.photoOrder_.add(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder addPhotoOrder(int paramInt, Network.PhotoOrder paramPhotoOrder)
      {
        if (paramPhotoOrder == null)
          throw new NullPointerException();
        ensurePhotoOrderIsMutable();
        this.photoOrder_.add(paramInt, paramPhotoOrder);
        return this;
      }

      public final Builder addPhotoOrder(Network.PhotoOrder.Builder paramBuilder)
      {
        ensurePhotoOrderIsMutable();
        this.photoOrder_.add(paramBuilder.build());
        return this;
      }

      public final Builder addPhotoOrder(Network.PhotoOrder paramPhotoOrder)
      {
        if (paramPhotoOrder == null)
          throw new NullPointerException();
        ensurePhotoOrderIsMutable();
        this.photoOrder_.add(paramPhotoOrder);
        return this;
      }

      public final Builder clear()
      {
        super.clear();
        this.photoOrder_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.albumEntityVersion_ = 0L;
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        return this;
      }

      public final Builder clearAlbumEntityVersion()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.albumEntityVersion_ = 0L;
        return this;
      }

      public final Builder clearPhotoOrder()
      {
        this.photoOrder_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        return this;
      }

      public final long getAlbumEntityVersion()
      {
        return this.albumEntityVersion_;
      }

      public final Network.GetPhotoOrderResponse getDefaultInstanceForType()
      {
        return Network.GetPhotoOrderResponse.getDefaultInstance();
      }

      public final Network.PhotoOrder getPhotoOrder(int paramInt)
      {
        return (Network.PhotoOrder)this.photoOrder_.get(paramInt);
      }

      public final int getPhotoOrderCount()
      {
        return this.photoOrder_.size();
      }

      public final List<Network.PhotoOrder> getPhotoOrderList()
      {
        return Collections.unmodifiableList(this.photoOrder_);
      }

      public final boolean hasAlbumEntityVersion()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Network.GetPhotoOrderResponse paramGetPhotoOrderResponse)
      {
        if (paramGetPhotoOrderResponse == Network.GetPhotoOrderResponse.getDefaultInstance());
        label71: label90: 
        while (true)
        {
          return this;
          if (!paramGetPhotoOrderResponse.photoOrder_.isEmpty())
          {
            if (!this.photoOrder_.isEmpty())
              break label71;
            this.photoOrder_ = paramGetPhotoOrderResponse.photoOrder_;
            this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
          }
          while (true)
          {
            if (!paramGetPhotoOrderResponse.hasAlbumEntityVersion())
              break label90;
            setAlbumEntityVersion(paramGetPhotoOrderResponse.getAlbumEntityVersion());
            break;
            ensurePhotoOrderIsMutable();
            this.photoOrder_.addAll(paramGetPhotoOrderResponse.photoOrder_);
          }
        }
      }

      public final Builder setAlbumEntityVersion(long paramLong)
      {
        this.bitField0_ = (0x2 | this.bitField0_);
        this.albumEntityVersion_ = paramLong;
        return this;
      }

      public final Builder setPhotoOrder(int paramInt, Network.PhotoOrder.Builder paramBuilder)
      {
        ensurePhotoOrderIsMutable();
        this.photoOrder_.set(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder setPhotoOrder(int paramInt, Network.PhotoOrder paramPhotoOrder)
      {
        if (paramPhotoOrder == null)
          throw new NullPointerException();
        ensurePhotoOrderIsMutable();
        this.photoOrder_.set(paramInt, paramPhotoOrder);
        return this;
      }
    }
  }

  public static abstract interface GetPhotoOrderResponseOrBuilder extends MessageLiteOrBuilder
  {
    public abstract long getAlbumEntityVersion();

    public abstract Network.PhotoOrder getPhotoOrder(int paramInt);

    public abstract int getPhotoOrderCount();

    public abstract List<Network.PhotoOrder> getPhotoOrderList();

    public abstract boolean hasAlbumEntityVersion();
  }

  public static final class GetPhotoRequest extends GeneratedMessageLite
    implements Network.GetPhotoRequestOrBuilder
  {
    private static final GetPhotoRequest defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private Object focusObfuscatedOwnerId_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private long ownerGaiaId_;
    private long photoId_;
    private Network.PhotoOptions photoOptions_;

    static
    {
      GetPhotoRequest localGetPhotoRequest = new GetPhotoRequest();
      defaultInstance = localGetPhotoRequest;
      localGetPhotoRequest.photoId_ = 0L;
      localGetPhotoRequest.ownerGaiaId_ = 0L;
      localGetPhotoRequest.focusObfuscatedOwnerId_ = "";
      localGetPhotoRequest.photoOptions_ = Network.PhotoOptions.getDefaultInstance();
    }

    private GetPhotoRequest()
    {
    }

    private GetPhotoRequest(Builder paramBuilder)
    {
      super();
    }

    public static GetPhotoRequest getDefaultInstance()
    {
      return defaultInstance;
    }

    private ByteString getFocusObfuscatedOwnerIdBytes()
    {
      Object localObject = this.focusObfuscatedOwnerId_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.focusObfuscatedOwnerId_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public final GetPhotoRequest getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final String getFocusObfuscatedOwnerId()
    {
      Object localObject1 = this.focusObfuscatedOwnerId_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.focusObfuscatedOwnerId_ = str;
      }
    }

    public final long getOwnerGaiaId()
    {
      return this.ownerGaiaId_;
    }

    public final long getPhotoId()
    {
      return this.photoId_;
    }

    public final Network.PhotoOptions getPhotoOptions()
    {
      return this.photoOptions_;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeInt64Size(1, this.photoId_);
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeInt64Size(2, this.ownerGaiaId_);
        if ((0x8 & this.bitField0_) == 8)
          k += CodedOutputStream.computeMessageSize(3, this.photoOptions_);
        if ((0x4 & this.bitField0_) == 4)
          k += CodedOutputStream.computeBytesSize(4, getFocusObfuscatedOwnerIdBytes());
        this.memoizedSerializedSize = k;
      }
    }

    public final boolean hasFocusObfuscatedOwnerId()
    {
      if ((0x4 & this.bitField0_) == 4);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasOwnerGaiaId()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasPhotoId()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean hasPhotoOptions()
    {
      if ((0x8 & this.bitField0_) == 8);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeInt64(1, this.photoId_);
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeInt64(2, this.ownerGaiaId_);
      if ((0x8 & this.bitField0_) == 8)
        paramCodedOutputStream.writeMessage(3, this.photoOptions_);
      if ((0x4 & this.bitField0_) == 4)
        paramCodedOutputStream.writeBytes(4, getFocusObfuscatedOwnerIdBytes());
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Network.GetPhotoRequest, Builder>
      implements Network.GetPhotoRequestOrBuilder
    {
      private int bitField0_;
      private Object focusObfuscatedOwnerId_ = "";
      private long ownerGaiaId_;
      private long photoId_;
      private Network.PhotoOptions photoOptions_ = Network.PhotoOptions.getDefaultInstance();

      private Network.GetPhotoRequest buildPartial()
      {
        Network.GetPhotoRequest localGetPhotoRequest = new Network.GetPhotoRequest(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Network.GetPhotoRequest.access$67802(localGetPhotoRequest, this.photoId_);
        if ((i & 0x2) == 2)
          k |= 2;
        Network.GetPhotoRequest.access$67902(localGetPhotoRequest, this.ownerGaiaId_);
        if ((i & 0x4) == 4)
          k |= 4;
        Network.GetPhotoRequest.access$68002(localGetPhotoRequest, this.focusObfuscatedOwnerId_);
        if ((i & 0x8) == 8)
          k |= 8;
        Network.GetPhotoRequest.access$68102(localGetPhotoRequest, this.photoOptions_);
        Network.GetPhotoRequest.access$68202(localGetPhotoRequest, k);
        return localGetPhotoRequest;
      }

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 8:
            this.bitField0_ = (0x1 | this.bitField0_);
            this.photoId_ = paramCodedInputStream.readInt64();
            break;
          case 16:
            this.bitField0_ = (0x2 | this.bitField0_);
            this.ownerGaiaId_ = paramCodedInputStream.readInt64();
            break;
          case 26:
            Network.PhotoOptions.Builder localBuilder = Network.PhotoOptions.newBuilder();
            if (hasPhotoOptions())
              localBuilder.mergeFrom(getPhotoOptions());
            paramCodedInputStream.readMessage(localBuilder, paramExtensionRegistryLite);
            setPhotoOptions(localBuilder.buildPartial());
            break;
          case 34:
          }
          this.bitField0_ = (0x4 | this.bitField0_);
          this.focusObfuscatedOwnerId_ = paramCodedInputStream.readBytes();
        }
      }

      public final Builder clear()
      {
        super.clear();
        this.photoId_ = 0L;
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.ownerGaiaId_ = 0L;
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.focusObfuscatedOwnerId_ = "";
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.photoOptions_ = Network.PhotoOptions.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        return this;
      }

      public final Builder clearFocusObfuscatedOwnerId()
      {
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.focusObfuscatedOwnerId_ = Network.GetPhotoRequest.getDefaultInstance().getFocusObfuscatedOwnerId();
        return this;
      }

      public final Builder clearOwnerGaiaId()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.ownerGaiaId_ = 0L;
        return this;
      }

      public final Builder clearPhotoId()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.photoId_ = 0L;
        return this;
      }

      public final Builder clearPhotoOptions()
      {
        this.photoOptions_ = Network.PhotoOptions.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        return this;
      }

      public final Network.GetPhotoRequest getDefaultInstanceForType()
      {
        return Network.GetPhotoRequest.getDefaultInstance();
      }

      public final String getFocusObfuscatedOwnerId()
      {
        Object localObject = this.focusObfuscatedOwnerId_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.focusObfuscatedOwnerId_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final long getOwnerGaiaId()
      {
        return this.ownerGaiaId_;
      }

      public final long getPhotoId()
      {
        return this.photoId_;
      }

      public final Network.PhotoOptions getPhotoOptions()
      {
        return this.photoOptions_;
      }

      public final boolean hasFocusObfuscatedOwnerId()
      {
        if ((0x4 & this.bitField0_) == 4);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasOwnerGaiaId()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasPhotoId()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean hasPhotoOptions()
      {
        if ((0x8 & this.bitField0_) == 8);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Network.GetPhotoRequest paramGetPhotoRequest)
      {
        if (paramGetPhotoRequest == Network.GetPhotoRequest.getDefaultInstance());
        do
        {
          return this;
          if (paramGetPhotoRequest.hasPhotoId())
            setPhotoId(paramGetPhotoRequest.getPhotoId());
          if (paramGetPhotoRequest.hasOwnerGaiaId())
            setOwnerGaiaId(paramGetPhotoRequest.getOwnerGaiaId());
          if (paramGetPhotoRequest.hasFocusObfuscatedOwnerId())
            setFocusObfuscatedOwnerId(paramGetPhotoRequest.getFocusObfuscatedOwnerId());
        }
        while (!paramGetPhotoRequest.hasPhotoOptions());
        Network.PhotoOptions localPhotoOptions = paramGetPhotoRequest.getPhotoOptions();
        if (((0x8 & this.bitField0_) == 8) && (this.photoOptions_ != Network.PhotoOptions.getDefaultInstance()));
        for (this.photoOptions_ = Network.PhotoOptions.newBuilder(this.photoOptions_).mergeFrom(localPhotoOptions).buildPartial(); ; this.photoOptions_ = localPhotoOptions)
        {
          this.bitField0_ = (0x8 | this.bitField0_);
          break;
        }
      }

      public final Builder setFocusObfuscatedOwnerId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x4 | this.bitField0_);
        this.focusObfuscatedOwnerId_ = paramString;
        return this;
      }

      public final Builder setOwnerGaiaId(long paramLong)
      {
        this.bitField0_ = (0x2 | this.bitField0_);
        this.ownerGaiaId_ = paramLong;
        return this;
      }

      public final Builder setPhotoId(long paramLong)
      {
        this.bitField0_ = (0x1 | this.bitField0_);
        this.photoId_ = paramLong;
        return this;
      }

      public final Builder setPhotoOptions(Network.PhotoOptions.Builder paramBuilder)
      {
        this.photoOptions_ = paramBuilder.build();
        this.bitField0_ = (0x8 | this.bitField0_);
        return this;
      }

      public final Builder setPhotoOptions(Network.PhotoOptions paramPhotoOptions)
      {
        if (paramPhotoOptions == null)
          throw new NullPointerException();
        this.photoOptions_ = paramPhotoOptions;
        this.bitField0_ = (0x8 | this.bitField0_);
        return this;
      }
    }
  }

  public static abstract interface GetPhotoRequestOrBuilder extends MessageLiteOrBuilder
  {
    public abstract String getFocusObfuscatedOwnerId();

    public abstract long getOwnerGaiaId();

    public abstract long getPhotoId();

    public abstract Network.PhotoOptions getPhotoOptions();

    public abstract boolean hasFocusObfuscatedOwnerId();

    public abstract boolean hasOwnerGaiaId();

    public abstract boolean hasPhotoId();

    public abstract boolean hasPhotoOptions();
  }

  public static final class GetPhotoResponse extends GeneratedMessageLite
    implements Network.GetPhotoResponseOrBuilder
  {
    private static final GetPhotoResponse defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private Data.MobilePhoto photo_;

    static
    {
      GetPhotoResponse localGetPhotoResponse = new GetPhotoResponse();
      defaultInstance = localGetPhotoResponse;
      localGetPhotoResponse.photo_ = Data.MobilePhoto.getDefaultInstance();
    }

    private GetPhotoResponse()
    {
    }

    private GetPhotoResponse(Builder paramBuilder)
    {
      super();
    }

    public static GetPhotoResponse getDefaultInstance()
    {
      return defaultInstance;
    }

    public final GetPhotoResponse getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final Data.MobilePhoto getPhoto()
    {
      return this.photo_;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeMessageSize(1, this.photo_);
        this.memoizedSerializedSize = k;
      }
    }

    public final boolean hasPhoto()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        if ((hasPhoto()) && (!getPhoto().isInitialized()))
        {
          this.memoizedIsInitialized = 0;
          i = 0;
        }
        else
        {
          this.memoizedIsInitialized = i;
        }
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeMessage(1, this.photo_);
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Network.GetPhotoResponse, Builder>
      implements Network.GetPhotoResponseOrBuilder
    {
      private int bitField0_;
      private Data.MobilePhoto photo_ = Data.MobilePhoto.getDefaultInstance();

      private Network.GetPhotoResponse buildPartial()
      {
        Network.GetPhotoResponse localGetPhotoResponse = new Network.GetPhotoResponse(this, (byte)0);
        int i = 0x1 & this.bitField0_;
        int j = 0;
        if (i == 1)
          j = 1;
        Network.GetPhotoResponse.access$68602(localGetPhotoResponse, this.photo_);
        Network.GetPhotoResponse.access$68702(localGetPhotoResponse, j);
        return localGetPhotoResponse;
      }

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 10:
          }
          Data.MobilePhoto.Builder localBuilder = Data.MobilePhoto.newBuilder();
          if (hasPhoto())
            localBuilder.mergeFrom(getPhoto());
          paramCodedInputStream.readMessage(localBuilder, paramExtensionRegistryLite);
          setPhoto(localBuilder.buildPartial());
        }
      }

      public final Builder clear()
      {
        super.clear();
        this.photo_ = Data.MobilePhoto.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        return this;
      }

      public final Builder clearPhoto()
      {
        this.photo_ = Data.MobilePhoto.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        return this;
      }

      public final Network.GetPhotoResponse getDefaultInstanceForType()
      {
        return Network.GetPhotoResponse.getDefaultInstance();
      }

      public final Data.MobilePhoto getPhoto()
      {
        return this.photo_;
      }

      public final boolean hasPhoto()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean isInitialized()
      {
        if ((hasPhoto()) && (!getPhoto().isInitialized()));
        for (boolean bool = false; ; bool = true)
          return bool;
      }

      public final Builder mergeFrom(Network.GetPhotoResponse paramGetPhotoResponse)
      {
        if (paramGetPhotoResponse == Network.GetPhotoResponse.getDefaultInstance());
        while (!paramGetPhotoResponse.hasPhoto())
          return this;
        Data.MobilePhoto localMobilePhoto = paramGetPhotoResponse.getPhoto();
        if (((0x1 & this.bitField0_) == 1) && (this.photo_ != Data.MobilePhoto.getDefaultInstance()));
        for (this.photo_ = Data.MobilePhoto.newBuilder(this.photo_).mergeFrom(localMobilePhoto).buildPartial(); ; this.photo_ = localMobilePhoto)
        {
          this.bitField0_ = (0x1 | this.bitField0_);
          break;
        }
      }

      public final Builder setPhoto(Data.MobilePhoto.Builder paramBuilder)
      {
        this.photo_ = paramBuilder.build();
        this.bitField0_ = (0x1 | this.bitField0_);
        return this;
      }

      public final Builder setPhoto(Data.MobilePhoto paramMobilePhoto)
      {
        if (paramMobilePhoto == null)
          throw new NullPointerException();
        this.photo_ = paramMobilePhoto;
        this.bitField0_ = (0x1 | this.bitField0_);
        return this;
      }
    }
  }

  public static abstract interface GetPhotoResponseOrBuilder extends MessageLiteOrBuilder
  {
    public abstract Data.MobilePhoto getPhoto();

    public abstract boolean hasPhoto();
  }

  public static final class GetPhotoSettingsRequest extends GeneratedMessageLite
    implements Network.GetPhotoSettingsRequestOrBuilder
  {
    private static final GetPhotoSettingsRequest defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private Object userId_;

    static
    {
      GetPhotoSettingsRequest localGetPhotoSettingsRequest = new GetPhotoSettingsRequest();
      defaultInstance = localGetPhotoSettingsRequest;
      localGetPhotoSettingsRequest.userId_ = "";
    }

    private GetPhotoSettingsRequest()
    {
    }

    private GetPhotoSettingsRequest(Builder paramBuilder)
    {
      super();
    }

    public static GetPhotoSettingsRequest getDefaultInstance()
    {
      return defaultInstance;
    }

    private ByteString getUserIdBytes()
    {
      Object localObject = this.userId_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.userId_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public final GetPhotoSettingsRequest getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeBytesSize(1, getUserIdBytes());
        this.memoizedSerializedSize = k;
      }
    }

    public final String getUserId()
    {
      Object localObject1 = this.userId_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.userId_ = str;
      }
    }

    public final boolean hasUserId()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeBytes(1, getUserIdBytes());
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Network.GetPhotoSettingsRequest, Builder>
      implements Network.GetPhotoSettingsRequestOrBuilder
    {
      private int bitField0_;
      private Object userId_ = "";

      private Network.GetPhotoSettingsRequest buildPartial()
      {
        Network.GetPhotoSettingsRequest localGetPhotoSettingsRequest = new Network.GetPhotoSettingsRequest(this, (byte)0);
        int i = 0x1 & this.bitField0_;
        int j = 0;
        if (i == 1)
          j = 1;
        Network.GetPhotoSettingsRequest.access$76202(localGetPhotoSettingsRequest, this.userId_);
        Network.GetPhotoSettingsRequest.access$76302(localGetPhotoSettingsRequest, j);
        return localGetPhotoSettingsRequest;
      }

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 10:
          }
          this.bitField0_ = (0x1 | this.bitField0_);
          this.userId_ = paramCodedInputStream.readBytes();
        }
      }

      public final Builder clear()
      {
        super.clear();
        this.userId_ = "";
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        return this;
      }

      public final Builder clearUserId()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.userId_ = Network.GetPhotoSettingsRequest.getDefaultInstance().getUserId();
        return this;
      }

      public final Network.GetPhotoSettingsRequest getDefaultInstanceForType()
      {
        return Network.GetPhotoSettingsRequest.getDefaultInstance();
      }

      public final String getUserId()
      {
        Object localObject = this.userId_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.userId_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final boolean hasUserId()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Network.GetPhotoSettingsRequest paramGetPhotoSettingsRequest)
      {
        if (paramGetPhotoSettingsRequest == Network.GetPhotoSettingsRequest.getDefaultInstance());
        while (true)
        {
          return this;
          if (paramGetPhotoSettingsRequest.hasUserId())
            setUserId(paramGetPhotoSettingsRequest.getUserId());
        }
      }

      public final Builder setUserId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x1 | this.bitField0_);
        this.userId_ = paramString;
        return this;
      }
    }
  }

  public static abstract interface GetPhotoSettingsRequestOrBuilder extends MessageLiteOrBuilder
  {
    public abstract String getUserId();

    public abstract boolean hasUserId();
  }

  public static final class GetPhotoSettingsResponse extends GeneratedMessageLite
    implements Network.GetPhotoSettingsResponseOrBuilder
  {
    private static final GetPhotoSettingsResponse defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private boolean enablePhotoDownload_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;

    static
    {
      GetPhotoSettingsResponse localGetPhotoSettingsResponse = new GetPhotoSettingsResponse();
      defaultInstance = localGetPhotoSettingsResponse;
      localGetPhotoSettingsResponse.enablePhotoDownload_ = false;
    }

    private GetPhotoSettingsResponse()
    {
    }

    private GetPhotoSettingsResponse(Builder paramBuilder)
    {
      super();
    }

    public static GetPhotoSettingsResponse getDefaultInstance()
    {
      return defaultInstance;
    }

    public final GetPhotoSettingsResponse getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final boolean getEnablePhotoDownload()
    {
      return this.enablePhotoDownload_;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeBoolSize(1, this.enablePhotoDownload_);
        this.memoizedSerializedSize = k;
      }
    }

    public final boolean hasEnablePhotoDownload()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeBool(1, this.enablePhotoDownload_);
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Network.GetPhotoSettingsResponse, Builder>
      implements Network.GetPhotoSettingsResponseOrBuilder
    {
      private int bitField0_;
      private boolean enablePhotoDownload_;

      private Network.GetPhotoSettingsResponse buildPartial()
      {
        Network.GetPhotoSettingsResponse localGetPhotoSettingsResponse = new Network.GetPhotoSettingsResponse(this, (byte)0);
        int i = 0x1 & this.bitField0_;
        int j = 0;
        if (i == 1)
          j = 1;
        Network.GetPhotoSettingsResponse.access$76702(localGetPhotoSettingsResponse, this.enablePhotoDownload_);
        Network.GetPhotoSettingsResponse.access$76802(localGetPhotoSettingsResponse, j);
        return localGetPhotoSettingsResponse;
      }

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 8:
          }
          this.bitField0_ = (0x1 | this.bitField0_);
          this.enablePhotoDownload_ = paramCodedInputStream.readBool();
        }
      }

      public final Builder clear()
      {
        super.clear();
        this.enablePhotoDownload_ = false;
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        return this;
      }

      public final Builder clearEnablePhotoDownload()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.enablePhotoDownload_ = false;
        return this;
      }

      public final Network.GetPhotoSettingsResponse getDefaultInstanceForType()
      {
        return Network.GetPhotoSettingsResponse.getDefaultInstance();
      }

      public final boolean getEnablePhotoDownload()
      {
        return this.enablePhotoDownload_;
      }

      public final boolean hasEnablePhotoDownload()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Network.GetPhotoSettingsResponse paramGetPhotoSettingsResponse)
      {
        if (paramGetPhotoSettingsResponse == Network.GetPhotoSettingsResponse.getDefaultInstance());
        while (true)
        {
          return this;
          if (paramGetPhotoSettingsResponse.hasEnablePhotoDownload())
            setEnablePhotoDownload(paramGetPhotoSettingsResponse.getEnablePhotoDownload());
        }
      }

      public final Builder setEnablePhotoDownload(boolean paramBoolean)
      {
        this.bitField0_ = (0x1 | this.bitField0_);
        this.enablePhotoDownload_ = paramBoolean;
        return this;
      }
    }
  }

  public static abstract interface GetPhotoSettingsResponseOrBuilder extends MessageLiteOrBuilder
  {
    public abstract boolean getEnablePhotoDownload();

    public abstract boolean hasEnablePhotoDownload();
  }

  public static final class GetPhotosByActivityIdRequest extends GeneratedMessageLite
    implements Network.GetPhotosByActivityIdRequestOrBuilder
  {
    private static final GetPhotosByActivityIdRequest defaultInstance;
    private static final long serialVersionUID;
    private Object activityId_;
    private int bitField0_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private Network.PhotoOptions photoOptions_;
    private boolean returnComments_;
    private boolean returnShapes_;
    private boolean returnUrls_;

    static
    {
      GetPhotosByActivityIdRequest localGetPhotosByActivityIdRequest = new GetPhotosByActivityIdRequest();
      defaultInstance = localGetPhotosByActivityIdRequest;
      localGetPhotosByActivityIdRequest.activityId_ = "";
      localGetPhotosByActivityIdRequest.returnUrls_ = true;
      localGetPhotosByActivityIdRequest.returnComments_ = true;
      localGetPhotosByActivityIdRequest.returnShapes_ = true;
      localGetPhotosByActivityIdRequest.photoOptions_ = Network.PhotoOptions.getDefaultInstance();
    }

    private GetPhotosByActivityIdRequest()
    {
    }

    private GetPhotosByActivityIdRequest(Builder paramBuilder)
    {
      super();
    }

    private ByteString getActivityIdBytes()
    {
      Object localObject = this.activityId_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.activityId_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static GetPhotosByActivityIdRequest getDefaultInstance()
    {
      return defaultInstance;
    }

    public final String getActivityId()
    {
      Object localObject1 = this.activityId_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.activityId_ = str;
      }
    }

    public final GetPhotosByActivityIdRequest getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final Network.PhotoOptions getPhotoOptions()
    {
      return this.photoOptions_;
    }

    @Deprecated
    public final boolean getReturnComments()
    {
      return this.returnComments_;
    }

    @Deprecated
    public final boolean getReturnShapes()
    {
      return this.returnShapes_;
    }

    @Deprecated
    public final boolean getReturnUrls()
    {
      return this.returnUrls_;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeBytesSize(1, getActivityIdBytes());
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeBoolSize(2, this.returnUrls_);
        if ((0x4 & this.bitField0_) == 4)
          k += CodedOutputStream.computeBoolSize(3, this.returnComments_);
        if ((0x8 & this.bitField0_) == 8)
          k += CodedOutputStream.computeBoolSize(4, this.returnShapes_);
        if ((0x10 & this.bitField0_) == 16)
          k += CodedOutputStream.computeMessageSize(5, this.photoOptions_);
        this.memoizedSerializedSize = k;
      }
    }

    public final boolean hasActivityId()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean hasPhotoOptions()
    {
      if ((0x10 & this.bitField0_) == 16);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    @Deprecated
    public final boolean hasReturnComments()
    {
      if ((0x4 & this.bitField0_) == 4);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    @Deprecated
    public final boolean hasReturnShapes()
    {
      if ((0x8 & this.bitField0_) == 8);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    @Deprecated
    public final boolean hasReturnUrls()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeBytes(1, getActivityIdBytes());
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeBool(2, this.returnUrls_);
      if ((0x4 & this.bitField0_) == 4)
        paramCodedOutputStream.writeBool(3, this.returnComments_);
      if ((0x8 & this.bitField0_) == 8)
        paramCodedOutputStream.writeBool(4, this.returnShapes_);
      if ((0x10 & this.bitField0_) == 16)
        paramCodedOutputStream.writeMessage(5, this.photoOptions_);
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Network.GetPhotosByActivityIdRequest, Builder>
      implements Network.GetPhotosByActivityIdRequestOrBuilder
    {
      private Object activityId_ = "";
      private int bitField0_;
      private Network.PhotoOptions photoOptions_ = Network.PhotoOptions.getDefaultInstance();
      private boolean returnComments_ = true;
      private boolean returnShapes_ = true;
      private boolean returnUrls_ = true;

      private Network.GetPhotosByActivityIdRequest buildPartial()
      {
        Network.GetPhotosByActivityIdRequest localGetPhotosByActivityIdRequest = new Network.GetPhotosByActivityIdRequest(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Network.GetPhotosByActivityIdRequest.access$59702(localGetPhotosByActivityIdRequest, this.activityId_);
        if ((i & 0x2) == 2)
          k |= 2;
        Network.GetPhotosByActivityIdRequest.access$59802(localGetPhotosByActivityIdRequest, this.returnUrls_);
        if ((i & 0x4) == 4)
          k |= 4;
        Network.GetPhotosByActivityIdRequest.access$59902(localGetPhotosByActivityIdRequest, this.returnComments_);
        if ((i & 0x8) == 8)
          k |= 8;
        Network.GetPhotosByActivityIdRequest.access$60002(localGetPhotosByActivityIdRequest, this.returnShapes_);
        if ((i & 0x10) == 16)
          k |= 16;
        Network.GetPhotosByActivityIdRequest.access$60102(localGetPhotosByActivityIdRequest, this.photoOptions_);
        Network.GetPhotosByActivityIdRequest.access$60202(localGetPhotosByActivityIdRequest, k);
        return localGetPhotosByActivityIdRequest;
      }

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 10:
            this.bitField0_ = (0x1 | this.bitField0_);
            this.activityId_ = paramCodedInputStream.readBytes();
            break;
          case 16:
            this.bitField0_ = (0x2 | this.bitField0_);
            this.returnUrls_ = paramCodedInputStream.readBool();
            break;
          case 24:
            this.bitField0_ = (0x4 | this.bitField0_);
            this.returnComments_ = paramCodedInputStream.readBool();
            break;
          case 32:
            this.bitField0_ = (0x8 | this.bitField0_);
            this.returnShapes_ = paramCodedInputStream.readBool();
            break;
          case 42:
          }
          Network.PhotoOptions.Builder localBuilder = Network.PhotoOptions.newBuilder();
          if (hasPhotoOptions())
            localBuilder.mergeFrom(getPhotoOptions());
          paramCodedInputStream.readMessage(localBuilder, paramExtensionRegistryLite);
          setPhotoOptions(localBuilder.buildPartial());
        }
      }

      public final Builder clear()
      {
        super.clear();
        this.activityId_ = "";
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.returnUrls_ = true;
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.returnComments_ = true;
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.returnShapes_ = true;
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        this.photoOptions_ = Network.PhotoOptions.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        return this;
      }

      public final Builder clearActivityId()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.activityId_ = Network.GetPhotosByActivityIdRequest.getDefaultInstance().getActivityId();
        return this;
      }

      public final Builder clearPhotoOptions()
      {
        this.photoOptions_ = Network.PhotoOptions.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        return this;
      }

      @Deprecated
      public final Builder clearReturnComments()
      {
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.returnComments_ = true;
        return this;
      }

      @Deprecated
      public final Builder clearReturnShapes()
      {
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        this.returnShapes_ = true;
        return this;
      }

      @Deprecated
      public final Builder clearReturnUrls()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.returnUrls_ = true;
        return this;
      }

      public final String getActivityId()
      {
        Object localObject = this.activityId_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.activityId_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final Network.GetPhotosByActivityIdRequest getDefaultInstanceForType()
      {
        return Network.GetPhotosByActivityIdRequest.getDefaultInstance();
      }

      public final Network.PhotoOptions getPhotoOptions()
      {
        return this.photoOptions_;
      }

      @Deprecated
      public final boolean getReturnComments()
      {
        return this.returnComments_;
      }

      @Deprecated
      public final boolean getReturnShapes()
      {
        return this.returnShapes_;
      }

      @Deprecated
      public final boolean getReturnUrls()
      {
        return this.returnUrls_;
      }

      public final boolean hasActivityId()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean hasPhotoOptions()
      {
        if ((0x10 & this.bitField0_) == 16);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      @Deprecated
      public final boolean hasReturnComments()
      {
        if ((0x4 & this.bitField0_) == 4);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      @Deprecated
      public final boolean hasReturnShapes()
      {
        if ((0x8 & this.bitField0_) == 8);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      @Deprecated
      public final boolean hasReturnUrls()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Network.GetPhotosByActivityIdRequest paramGetPhotosByActivityIdRequest)
      {
        if (paramGetPhotosByActivityIdRequest == Network.GetPhotosByActivityIdRequest.getDefaultInstance());
        do
        {
          return this;
          if (paramGetPhotosByActivityIdRequest.hasActivityId())
            setActivityId(paramGetPhotosByActivityIdRequest.getActivityId());
          if (paramGetPhotosByActivityIdRequest.hasReturnUrls())
            setReturnUrls(paramGetPhotosByActivityIdRequest.getReturnUrls());
          if (paramGetPhotosByActivityIdRequest.hasReturnComments())
            setReturnComments(paramGetPhotosByActivityIdRequest.getReturnComments());
          if (paramGetPhotosByActivityIdRequest.hasReturnShapes())
            setReturnShapes(paramGetPhotosByActivityIdRequest.getReturnShapes());
        }
        while (!paramGetPhotosByActivityIdRequest.hasPhotoOptions());
        Network.PhotoOptions localPhotoOptions = paramGetPhotosByActivityIdRequest.getPhotoOptions();
        if (((0x10 & this.bitField0_) == 16) && (this.photoOptions_ != Network.PhotoOptions.getDefaultInstance()));
        for (this.photoOptions_ = Network.PhotoOptions.newBuilder(this.photoOptions_).mergeFrom(localPhotoOptions).buildPartial(); ; this.photoOptions_ = localPhotoOptions)
        {
          this.bitField0_ = (0x10 | this.bitField0_);
          break;
        }
      }

      public final Builder setActivityId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x1 | this.bitField0_);
        this.activityId_ = paramString;
        return this;
      }

      public final Builder setPhotoOptions(Network.PhotoOptions.Builder paramBuilder)
      {
        this.photoOptions_ = paramBuilder.build();
        this.bitField0_ = (0x10 | this.bitField0_);
        return this;
      }

      public final Builder setPhotoOptions(Network.PhotoOptions paramPhotoOptions)
      {
        if (paramPhotoOptions == null)
          throw new NullPointerException();
        this.photoOptions_ = paramPhotoOptions;
        this.bitField0_ = (0x10 | this.bitField0_);
        return this;
      }

      @Deprecated
      public final Builder setReturnComments(boolean paramBoolean)
      {
        this.bitField0_ = (0x4 | this.bitField0_);
        this.returnComments_ = paramBoolean;
        return this;
      }

      @Deprecated
      public final Builder setReturnShapes(boolean paramBoolean)
      {
        this.bitField0_ = (0x8 | this.bitField0_);
        this.returnShapes_ = paramBoolean;
        return this;
      }

      @Deprecated
      public final Builder setReturnUrls(boolean paramBoolean)
      {
        this.bitField0_ = (0x2 | this.bitField0_);
        this.returnUrls_ = paramBoolean;
        return this;
      }
    }
  }

  public static abstract interface GetPhotosByActivityIdRequestOrBuilder extends MessageLiteOrBuilder
  {
    public abstract String getActivityId();

    public abstract Network.PhotoOptions getPhotoOptions();

    @Deprecated
    public abstract boolean getReturnComments();

    @Deprecated
    public abstract boolean getReturnShapes();

    @Deprecated
    public abstract boolean getReturnUrls();

    public abstract boolean hasActivityId();

    public abstract boolean hasPhotoOptions();

    @Deprecated
    public abstract boolean hasReturnComments();

    @Deprecated
    public abstract boolean hasReturnShapes();

    @Deprecated
    public abstract boolean hasReturnUrls();
  }

  public static final class GetPhotosByActivityIdResponse extends GeneratedMessageLite
    implements Network.GetPhotosByActivityIdResponseOrBuilder
  {
    private static final GetPhotosByActivityIdResponse defaultInstance;
    private static final long serialVersionUID;
    private Data.PhotoAlbum albumInfo_;
    private int bitField0_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private List<Data.MobilePhoto> photo_;

    static
    {
      GetPhotosByActivityIdResponse localGetPhotosByActivityIdResponse = new GetPhotosByActivityIdResponse();
      defaultInstance = localGetPhotosByActivityIdResponse;
      localGetPhotosByActivityIdResponse.photo_ = Collections.emptyList();
      localGetPhotosByActivityIdResponse.albumInfo_ = Data.PhotoAlbum.getDefaultInstance();
    }

    private GetPhotosByActivityIdResponse()
    {
    }

    private GetPhotosByActivityIdResponse(Builder paramBuilder)
    {
      super();
    }

    public static GetPhotosByActivityIdResponse getDefaultInstance()
    {
      return defaultInstance;
    }

    public final Data.PhotoAlbum getAlbumInfo()
    {
      return this.albumInfo_;
    }

    public final GetPhotosByActivityIdResponse getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final Data.MobilePhoto getPhoto(int paramInt)
    {
      return (Data.MobilePhoto)this.photo_.get(paramInt);
    }

    public final int getPhotoCount()
    {
      return this.photo_.size();
    }

    public final List<Data.MobilePhoto> getPhotoList()
    {
      return this.photo_;
    }

    public final Data.MobilePhotoOrBuilder getPhotoOrBuilder(int paramInt)
    {
      return (Data.MobilePhotoOrBuilder)this.photo_.get(paramInt);
    }

    public final List<? extends Data.MobilePhotoOrBuilder> getPhotoOrBuilderList()
    {
      return this.photo_;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int j;
      for (int m = i; ; m = j)
      {
        return m;
        j = 0;
        for (int k = 0; k < this.photo_.size(); k++)
          j += CodedOutputStream.computeMessageSize(1, (MessageLite)this.photo_.get(k));
        if ((0x1 & this.bitField0_) == 1)
          j += CodedOutputStream.computeMessageSize(2, this.albumInfo_);
        this.memoizedSerializedSize = j;
      }
    }

    public final boolean hasAlbumInfo()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        for (int k = 0; ; k++)
        {
          if (k >= getPhotoCount())
            break label61;
          if (!getPhoto(k).isInitialized())
          {
            this.memoizedIsInitialized = 0;
            i = 0;
            break;
          }
        }
        label61: if ((hasAlbumInfo()) && (!getAlbumInfo().isInitialized()))
        {
          this.memoizedIsInitialized = 0;
          i = 0;
        }
        else
        {
          this.memoizedIsInitialized = i;
        }
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      for (int i = 0; i < this.photo_.size(); i++)
        paramCodedOutputStream.writeMessage(1, (MessageLite)this.photo_.get(i));
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeMessage(2, this.albumInfo_);
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Network.GetPhotosByActivityIdResponse, Builder>
      implements Network.GetPhotosByActivityIdResponseOrBuilder
    {
      private Data.PhotoAlbum albumInfo_ = Data.PhotoAlbum.getDefaultInstance();
      private int bitField0_;
      private List<Data.MobilePhoto> photo_ = Collections.emptyList();

      private Network.GetPhotosByActivityIdResponse buildPartial()
      {
        Network.GetPhotosByActivityIdResponse localGetPhotosByActivityIdResponse = new Network.GetPhotosByActivityIdResponse(this, (byte)0);
        int i = this.bitField0_;
        if ((0x1 & this.bitField0_) == 1)
        {
          this.photo_ = Collections.unmodifiableList(this.photo_);
          this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        }
        Network.GetPhotosByActivityIdResponse.access$60602(localGetPhotosByActivityIdResponse, this.photo_);
        int j = i & 0x2;
        int k = 0;
        if (j == 2)
          k = 1;
        Network.GetPhotosByActivityIdResponse.access$60702(localGetPhotosByActivityIdResponse, this.albumInfo_);
        Network.GetPhotosByActivityIdResponse.access$60802(localGetPhotosByActivityIdResponse, k);
        return localGetPhotosByActivityIdResponse;
      }

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private void ensurePhotoIsMutable()
      {
        if ((0x1 & this.bitField0_) != 1)
        {
          this.photo_ = new ArrayList(this.photo_);
          this.bitField0_ = (0x1 | this.bitField0_);
        }
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 10:
            Data.MobilePhoto.Builder localBuilder1 = Data.MobilePhoto.newBuilder();
            paramCodedInputStream.readMessage(localBuilder1, paramExtensionRegistryLite);
            addPhoto(localBuilder1.buildPartial());
            break;
          case 18:
          }
          Data.PhotoAlbum.Builder localBuilder = Data.PhotoAlbum.newBuilder();
          if (hasAlbumInfo())
            localBuilder.mergeFrom(getAlbumInfo());
          paramCodedInputStream.readMessage(localBuilder, paramExtensionRegistryLite);
          setAlbumInfo(localBuilder.buildPartial());
        }
      }

      public final Builder addAllPhoto(Iterable<? extends Data.MobilePhoto> paramIterable)
      {
        ensurePhotoIsMutable();
        GeneratedMessageLite.Builder.addAll(paramIterable, this.photo_);
        return this;
      }

      public final Builder addPhoto(int paramInt, Data.MobilePhoto.Builder paramBuilder)
      {
        ensurePhotoIsMutable();
        this.photo_.add(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder addPhoto(int paramInt, Data.MobilePhoto paramMobilePhoto)
      {
        if (paramMobilePhoto == null)
          throw new NullPointerException();
        ensurePhotoIsMutable();
        this.photo_.add(paramInt, paramMobilePhoto);
        return this;
      }

      public final Builder addPhoto(Data.MobilePhoto.Builder paramBuilder)
      {
        ensurePhotoIsMutable();
        this.photo_.add(paramBuilder.build());
        return this;
      }

      public final Builder addPhoto(Data.MobilePhoto paramMobilePhoto)
      {
        if (paramMobilePhoto == null)
          throw new NullPointerException();
        ensurePhotoIsMutable();
        this.photo_.add(paramMobilePhoto);
        return this;
      }

      public final Builder clear()
      {
        super.clear();
        this.photo_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.albumInfo_ = Data.PhotoAlbum.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        return this;
      }

      public final Builder clearAlbumInfo()
      {
        this.albumInfo_ = Data.PhotoAlbum.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        return this;
      }

      public final Builder clearPhoto()
      {
        this.photo_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        return this;
      }

      public final Data.PhotoAlbum getAlbumInfo()
      {
        return this.albumInfo_;
      }

      public final Network.GetPhotosByActivityIdResponse getDefaultInstanceForType()
      {
        return Network.GetPhotosByActivityIdResponse.getDefaultInstance();
      }

      public final Data.MobilePhoto getPhoto(int paramInt)
      {
        return (Data.MobilePhoto)this.photo_.get(paramInt);
      }

      public final int getPhotoCount()
      {
        return this.photo_.size();
      }

      public final List<Data.MobilePhoto> getPhotoList()
      {
        return Collections.unmodifiableList(this.photo_);
      }

      public final boolean hasAlbumInfo()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean isInitialized()
      {
        int i = 0;
        boolean bool1;
        if (i < getPhotoCount())
        {
          boolean bool3 = getPhoto(i).isInitialized();
          bool1 = false;
          if (bool3);
        }
        while (true)
        {
          return bool1;
          i++;
          break;
          if (hasAlbumInfo())
          {
            boolean bool2 = getAlbumInfo().isInitialized();
            bool1 = false;
            if (!bool2);
          }
          else
          {
            bool1 = true;
          }
        }
      }

      public final Builder mergeFrom(Network.GetPhotosByActivityIdResponse paramGetPhotosByActivityIdResponse)
      {
        if (paramGetPhotosByActivityIdResponse == Network.GetPhotosByActivityIdResponse.getDefaultInstance())
          return this;
        label52: Data.PhotoAlbum localPhotoAlbum;
        if (!paramGetPhotosByActivityIdResponse.photo_.isEmpty())
        {
          if (this.photo_.isEmpty())
          {
            this.photo_ = paramGetPhotosByActivityIdResponse.photo_;
            this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
          }
        }
        else
        {
          if (!paramGetPhotosByActivityIdResponse.hasAlbumInfo())
            break label134;
          localPhotoAlbum = paramGetPhotosByActivityIdResponse.getAlbumInfo();
          if (((0x2 & this.bitField0_) != 2) || (this.albumInfo_ == Data.PhotoAlbum.getDefaultInstance()))
            break label136;
        }
        label134: label136: for (this.albumInfo_ = Data.PhotoAlbum.newBuilder(this.albumInfo_).mergeFrom(localPhotoAlbum).buildPartial(); ; this.albumInfo_ = localPhotoAlbum)
        {
          this.bitField0_ = (0x2 | this.bitField0_);
          break;
          ensurePhotoIsMutable();
          this.photo_.addAll(paramGetPhotosByActivityIdResponse.photo_);
          break label52;
          break;
        }
      }

      public final Builder setAlbumInfo(Data.PhotoAlbum.Builder paramBuilder)
      {
        this.albumInfo_ = paramBuilder.build();
        this.bitField0_ = (0x2 | this.bitField0_);
        return this;
      }

      public final Builder setAlbumInfo(Data.PhotoAlbum paramPhotoAlbum)
      {
        if (paramPhotoAlbum == null)
          throw new NullPointerException();
        this.albumInfo_ = paramPhotoAlbum;
        this.bitField0_ = (0x2 | this.bitField0_);
        return this;
      }

      public final Builder setPhoto(int paramInt, Data.MobilePhoto.Builder paramBuilder)
      {
        ensurePhotoIsMutable();
        this.photo_.set(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder setPhoto(int paramInt, Data.MobilePhoto paramMobilePhoto)
      {
        if (paramMobilePhoto == null)
          throw new NullPointerException();
        ensurePhotoIsMutable();
        this.photo_.set(paramInt, paramMobilePhoto);
        return this;
      }
    }
  }

  public static abstract interface GetPhotosByActivityIdResponseOrBuilder extends MessageLiteOrBuilder
  {
    public abstract Data.PhotoAlbum getAlbumInfo();

    public abstract Data.MobilePhoto getPhoto(int paramInt);

    public abstract int getPhotoCount();

    public abstract List<Data.MobilePhoto> getPhotoList();

    public abstract boolean hasAlbumInfo();
  }

  public static final class GetPhotosByUserRequest extends GeneratedMessageLite
    implements Network.GetPhotosByUserRequestOrBuilder
  {
    private static final GetPhotosByUserRequest defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private Object focusObfuscatedOwnerId_;
    private long ifModifiedSince_;
    private boolean includeDeleted_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private long ownerGaiaId_;
    private Network.PhotoOptions photoOptions_;
    private int resultsPerPage_;
    private Object resumeToken_;
    private boolean returnComments_;
    private boolean returnShapes_;
    private boolean returnUrls_;

    static
    {
      GetPhotosByUserRequest localGetPhotosByUserRequest = new GetPhotosByUserRequest();
      defaultInstance = localGetPhotosByUserRequest;
      localGetPhotosByUserRequest.ownerGaiaId_ = 0L;
      localGetPhotosByUserRequest.focusObfuscatedOwnerId_ = "";
      localGetPhotosByUserRequest.returnUrls_ = false;
      localGetPhotosByUserRequest.returnComments_ = false;
      localGetPhotosByUserRequest.returnShapes_ = false;
      localGetPhotosByUserRequest.includeDeleted_ = false;
      localGetPhotosByUserRequest.ifModifiedSince_ = 0L;
      localGetPhotosByUserRequest.resultsPerPage_ = 0;
      localGetPhotosByUserRequest.resumeToken_ = "";
      localGetPhotosByUserRequest.photoOptions_ = Network.PhotoOptions.getDefaultInstance();
    }

    private GetPhotosByUserRequest()
    {
    }

    private GetPhotosByUserRequest(Builder paramBuilder)
    {
      super();
    }

    public static GetPhotosByUserRequest getDefaultInstance()
    {
      return defaultInstance;
    }

    private ByteString getFocusObfuscatedOwnerIdBytes()
    {
      Object localObject = this.focusObfuscatedOwnerId_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.focusObfuscatedOwnerId_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    private ByteString getResumeTokenBytes()
    {
      Object localObject = this.resumeToken_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.resumeToken_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public final GetPhotosByUserRequest getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final String getFocusObfuscatedOwnerId()
    {
      Object localObject1 = this.focusObfuscatedOwnerId_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.focusObfuscatedOwnerId_ = str;
      }
    }

    public final long getIfModifiedSince()
    {
      return this.ifModifiedSince_;
    }

    public final boolean getIncludeDeleted()
    {
      return this.includeDeleted_;
    }

    public final long getOwnerGaiaId()
    {
      return this.ownerGaiaId_;
    }

    public final Network.PhotoOptions getPhotoOptions()
    {
      return this.photoOptions_;
    }

    public final int getResultsPerPage()
    {
      return this.resultsPerPage_;
    }

    public final String getResumeToken()
    {
      Object localObject1 = this.resumeToken_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.resumeToken_ = str;
      }
    }

    @Deprecated
    public final boolean getReturnComments()
    {
      return this.returnComments_;
    }

    @Deprecated
    public final boolean getReturnShapes()
    {
      return this.returnShapes_;
    }

    @Deprecated
    public final boolean getReturnUrls()
    {
      return this.returnUrls_;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeInt64Size(1, this.ownerGaiaId_);
        if ((0x4 & this.bitField0_) == 4)
          k += CodedOutputStream.computeBoolSize(2, this.returnUrls_);
        if ((0x8 & this.bitField0_) == 8)
          k += CodedOutputStream.computeBoolSize(3, this.returnComments_);
        if ((0x10 & this.bitField0_) == 16)
          k += CodedOutputStream.computeBoolSize(4, this.returnShapes_);
        if ((0x20 & this.bitField0_) == 32)
          k += CodedOutputStream.computeBoolSize(5, this.includeDeleted_);
        if ((0x40 & this.bitField0_) == 64)
          k += CodedOutputStream.computeInt64Size(6, this.ifModifiedSince_);
        if ((0x80 & this.bitField0_) == 128)
          k += CodedOutputStream.computeInt32Size(7, this.resultsPerPage_);
        if ((0x100 & this.bitField0_) == 256)
          k += CodedOutputStream.computeBytesSize(8, getResumeTokenBytes());
        if ((0x200 & this.bitField0_) == 512)
          k += CodedOutputStream.computeMessageSize(9, this.photoOptions_);
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeBytesSize(10, getFocusObfuscatedOwnerIdBytes());
        this.memoizedSerializedSize = k;
      }
    }

    public final boolean hasFocusObfuscatedOwnerId()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasIfModifiedSince()
    {
      if ((0x40 & this.bitField0_) == 64);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasIncludeDeleted()
    {
      if ((0x20 & this.bitField0_) == 32);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasOwnerGaiaId()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean hasPhotoOptions()
    {
      if ((0x200 & this.bitField0_) == 512);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasResultsPerPage()
    {
      if ((0x80 & this.bitField0_) == 128);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasResumeToken()
    {
      if ((0x100 & this.bitField0_) == 256);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    @Deprecated
    public final boolean hasReturnComments()
    {
      if ((0x8 & this.bitField0_) == 8);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    @Deprecated
    public final boolean hasReturnShapes()
    {
      if ((0x10 & this.bitField0_) == 16);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    @Deprecated
    public final boolean hasReturnUrls()
    {
      if ((0x4 & this.bitField0_) == 4);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeInt64(1, this.ownerGaiaId_);
      if ((0x4 & this.bitField0_) == 4)
        paramCodedOutputStream.writeBool(2, this.returnUrls_);
      if ((0x8 & this.bitField0_) == 8)
        paramCodedOutputStream.writeBool(3, this.returnComments_);
      if ((0x10 & this.bitField0_) == 16)
        paramCodedOutputStream.writeBool(4, this.returnShapes_);
      if ((0x20 & this.bitField0_) == 32)
        paramCodedOutputStream.writeBool(5, this.includeDeleted_);
      if ((0x40 & this.bitField0_) == 64)
        paramCodedOutputStream.writeInt64(6, this.ifModifiedSince_);
      if ((0x80 & this.bitField0_) == 128)
        paramCodedOutputStream.writeInt32(7, this.resultsPerPage_);
      if ((0x100 & this.bitField0_) == 256)
        paramCodedOutputStream.writeBytes(8, getResumeTokenBytes());
      if ((0x200 & this.bitField0_) == 512)
        paramCodedOutputStream.writeMessage(9, this.photoOptions_);
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeBytes(10, getFocusObfuscatedOwnerIdBytes());
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Network.GetPhotosByUserRequest, Builder>
      implements Network.GetPhotosByUserRequestOrBuilder
    {
      private int bitField0_;
      private Object focusObfuscatedOwnerId_ = "";
      private long ifModifiedSince_;
      private boolean includeDeleted_;
      private long ownerGaiaId_;
      private Network.PhotoOptions photoOptions_ = Network.PhotoOptions.getDefaultInstance();
      private int resultsPerPage_;
      private Object resumeToken_ = "";
      private boolean returnComments_;
      private boolean returnShapes_;
      private boolean returnUrls_;

      private Network.GetPhotosByUserRequest buildPartial()
      {
        Network.GetPhotosByUserRequest localGetPhotosByUserRequest = new Network.GetPhotosByUserRequest(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Network.GetPhotosByUserRequest.access$23102(localGetPhotosByUserRequest, this.ownerGaiaId_);
        if ((i & 0x2) == 2)
          k |= 2;
        Network.GetPhotosByUserRequest.access$23202(localGetPhotosByUserRequest, this.focusObfuscatedOwnerId_);
        if ((i & 0x4) == 4)
          k |= 4;
        Network.GetPhotosByUserRequest.access$23302(localGetPhotosByUserRequest, this.returnUrls_);
        if ((i & 0x8) == 8)
          k |= 8;
        Network.GetPhotosByUserRequest.access$23402(localGetPhotosByUserRequest, this.returnComments_);
        if ((i & 0x10) == 16)
          k |= 16;
        Network.GetPhotosByUserRequest.access$23502(localGetPhotosByUserRequest, this.returnShapes_);
        if ((i & 0x20) == 32)
          k |= 32;
        Network.GetPhotosByUserRequest.access$23602(localGetPhotosByUserRequest, this.includeDeleted_);
        if ((i & 0x40) == 64)
          k |= 64;
        Network.GetPhotosByUserRequest.access$23702(localGetPhotosByUserRequest, this.ifModifiedSince_);
        if ((i & 0x80) == 128)
          k |= 128;
        Network.GetPhotosByUserRequest.access$23802(localGetPhotosByUserRequest, this.resultsPerPage_);
        if ((i & 0x100) == 256)
          k |= 256;
        Network.GetPhotosByUserRequest.access$23902(localGetPhotosByUserRequest, this.resumeToken_);
        if ((i & 0x200) == 512)
          k |= 512;
        Network.GetPhotosByUserRequest.access$24002(localGetPhotosByUserRequest, this.photoOptions_);
        Network.GetPhotosByUserRequest.access$24102(localGetPhotosByUserRequest, k);
        return localGetPhotosByUserRequest;
      }

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 8:
            this.bitField0_ = (0x1 | this.bitField0_);
            this.ownerGaiaId_ = paramCodedInputStream.readInt64();
            break;
          case 16:
            this.bitField0_ = (0x4 | this.bitField0_);
            this.returnUrls_ = paramCodedInputStream.readBool();
            break;
          case 24:
            this.bitField0_ = (0x8 | this.bitField0_);
            this.returnComments_ = paramCodedInputStream.readBool();
            break;
          case 32:
            this.bitField0_ = (0x10 | this.bitField0_);
            this.returnShapes_ = paramCodedInputStream.readBool();
            break;
          case 40:
            this.bitField0_ = (0x20 | this.bitField0_);
            this.includeDeleted_ = paramCodedInputStream.readBool();
            break;
          case 48:
            this.bitField0_ = (0x40 | this.bitField0_);
            this.ifModifiedSince_ = paramCodedInputStream.readInt64();
            break;
          case 56:
            this.bitField0_ = (0x80 | this.bitField0_);
            this.resultsPerPage_ = paramCodedInputStream.readInt32();
            break;
          case 66:
            this.bitField0_ = (0x100 | this.bitField0_);
            this.resumeToken_ = paramCodedInputStream.readBytes();
            break;
          case 74:
            Network.PhotoOptions.Builder localBuilder = Network.PhotoOptions.newBuilder();
            if (hasPhotoOptions())
              localBuilder.mergeFrom(getPhotoOptions());
            paramCodedInputStream.readMessage(localBuilder, paramExtensionRegistryLite);
            setPhotoOptions(localBuilder.buildPartial());
            break;
          case 82:
          }
          this.bitField0_ = (0x2 | this.bitField0_);
          this.focusObfuscatedOwnerId_ = paramCodedInputStream.readBytes();
        }
      }

      public final Builder clear()
      {
        super.clear();
        this.ownerGaiaId_ = 0L;
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.focusObfuscatedOwnerId_ = "";
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.returnUrls_ = false;
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.returnComments_ = false;
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        this.returnShapes_ = false;
        this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        this.includeDeleted_ = false;
        this.bitField0_ = (0xFFFFFFDF & this.bitField0_);
        this.ifModifiedSince_ = 0L;
        this.bitField0_ = (0xFFFFFFBF & this.bitField0_);
        this.resultsPerPage_ = 0;
        this.bitField0_ = (0xFFFFFF7F & this.bitField0_);
        this.resumeToken_ = "";
        this.bitField0_ = (0xFFFFFEFF & this.bitField0_);
        this.photoOptions_ = Network.PhotoOptions.getDefaultInstance();
        this.bitField0_ = (0xFFFFFDFF & this.bitField0_);
        return this;
      }

      public final Builder clearFocusObfuscatedOwnerId()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.focusObfuscatedOwnerId_ = Network.GetPhotosByUserRequest.getDefaultInstance().getFocusObfuscatedOwnerId();
        return this;
      }

      public final Builder clearIfModifiedSince()
      {
        this.bitField0_ = (0xFFFFFFBF & this.bitField0_);
        this.ifModifiedSince_ = 0L;
        return this;
      }

      public final Builder clearIncludeDeleted()
      {
        this.bitField0_ = (0xFFFFFFDF & this.bitField0_);
        this.includeDeleted_ = false;
        return this;
      }

      public final Builder clearOwnerGaiaId()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.ownerGaiaId_ = 0L;
        return this;
      }

      public final Builder clearPhotoOptions()
      {
        this.photoOptions_ = Network.PhotoOptions.getDefaultInstance();
        this.bitField0_ = (0xFFFFFDFF & this.bitField0_);
        return this;
      }

      public final Builder clearResultsPerPage()
      {
        this.bitField0_ = (0xFFFFFF7F & this.bitField0_);
        this.resultsPerPage_ = 0;
        return this;
      }

      public final Builder clearResumeToken()
      {
        this.bitField0_ = (0xFFFFFEFF & this.bitField0_);
        this.resumeToken_ = Network.GetPhotosByUserRequest.getDefaultInstance().getResumeToken();
        return this;
      }

      @Deprecated
      public final Builder clearReturnComments()
      {
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        this.returnComments_ = false;
        return this;
      }

      @Deprecated
      public final Builder clearReturnShapes()
      {
        this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        this.returnShapes_ = false;
        return this;
      }

      @Deprecated
      public final Builder clearReturnUrls()
      {
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.returnUrls_ = false;
        return this;
      }

      public final Network.GetPhotosByUserRequest getDefaultInstanceForType()
      {
        return Network.GetPhotosByUserRequest.getDefaultInstance();
      }

      public final String getFocusObfuscatedOwnerId()
      {
        Object localObject = this.focusObfuscatedOwnerId_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.focusObfuscatedOwnerId_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final long getIfModifiedSince()
      {
        return this.ifModifiedSince_;
      }

      public final boolean getIncludeDeleted()
      {
        return this.includeDeleted_;
      }

      public final long getOwnerGaiaId()
      {
        return this.ownerGaiaId_;
      }

      public final Network.PhotoOptions getPhotoOptions()
      {
        return this.photoOptions_;
      }

      public final int getResultsPerPage()
      {
        return this.resultsPerPage_;
      }

      public final String getResumeToken()
      {
        Object localObject = this.resumeToken_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.resumeToken_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      @Deprecated
      public final boolean getReturnComments()
      {
        return this.returnComments_;
      }

      @Deprecated
      public final boolean getReturnShapes()
      {
        return this.returnShapes_;
      }

      @Deprecated
      public final boolean getReturnUrls()
      {
        return this.returnUrls_;
      }

      public final boolean hasFocusObfuscatedOwnerId()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasIfModifiedSince()
      {
        if ((0x40 & this.bitField0_) == 64);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasIncludeDeleted()
      {
        if ((0x20 & this.bitField0_) == 32);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasOwnerGaiaId()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean hasPhotoOptions()
      {
        if ((0x200 & this.bitField0_) == 512);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasResultsPerPage()
      {
        if ((0x80 & this.bitField0_) == 128);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasResumeToken()
      {
        if ((0x100 & this.bitField0_) == 256);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      @Deprecated
      public final boolean hasReturnComments()
      {
        if ((0x8 & this.bitField0_) == 8);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      @Deprecated
      public final boolean hasReturnShapes()
      {
        if ((0x10 & this.bitField0_) == 16);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      @Deprecated
      public final boolean hasReturnUrls()
      {
        if ((0x4 & this.bitField0_) == 4);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Network.GetPhotosByUserRequest paramGetPhotosByUserRequest)
      {
        if (paramGetPhotosByUserRequest == Network.GetPhotosByUserRequest.getDefaultInstance());
        do
        {
          return this;
          if (paramGetPhotosByUserRequest.hasOwnerGaiaId())
            setOwnerGaiaId(paramGetPhotosByUserRequest.getOwnerGaiaId());
          if (paramGetPhotosByUserRequest.hasFocusObfuscatedOwnerId())
            setFocusObfuscatedOwnerId(paramGetPhotosByUserRequest.getFocusObfuscatedOwnerId());
          if (paramGetPhotosByUserRequest.hasReturnUrls())
            setReturnUrls(paramGetPhotosByUserRequest.getReturnUrls());
          if (paramGetPhotosByUserRequest.hasReturnComments())
            setReturnComments(paramGetPhotosByUserRequest.getReturnComments());
          if (paramGetPhotosByUserRequest.hasReturnShapes())
            setReturnShapes(paramGetPhotosByUserRequest.getReturnShapes());
          if (paramGetPhotosByUserRequest.hasIncludeDeleted())
            setIncludeDeleted(paramGetPhotosByUserRequest.getIncludeDeleted());
          if (paramGetPhotosByUserRequest.hasIfModifiedSince())
            setIfModifiedSince(paramGetPhotosByUserRequest.getIfModifiedSince());
          if (paramGetPhotosByUserRequest.hasResultsPerPage())
            setResultsPerPage(paramGetPhotosByUserRequest.getResultsPerPage());
          if (paramGetPhotosByUserRequest.hasResumeToken())
            setResumeToken(paramGetPhotosByUserRequest.getResumeToken());
        }
        while (!paramGetPhotosByUserRequest.hasPhotoOptions());
        Network.PhotoOptions localPhotoOptions = paramGetPhotosByUserRequest.getPhotoOptions();
        if (((0x200 & this.bitField0_) == 512) && (this.photoOptions_ != Network.PhotoOptions.getDefaultInstance()));
        for (this.photoOptions_ = Network.PhotoOptions.newBuilder(this.photoOptions_).mergeFrom(localPhotoOptions).buildPartial(); ; this.photoOptions_ = localPhotoOptions)
        {
          this.bitField0_ = (0x200 | this.bitField0_);
          break;
        }
      }

      public final Builder setFocusObfuscatedOwnerId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x2 | this.bitField0_);
        this.focusObfuscatedOwnerId_ = paramString;
        return this;
      }

      public final Builder setIfModifiedSince(long paramLong)
      {
        this.bitField0_ = (0x40 | this.bitField0_);
        this.ifModifiedSince_ = paramLong;
        return this;
      }

      public final Builder setIncludeDeleted(boolean paramBoolean)
      {
        this.bitField0_ = (0x20 | this.bitField0_);
        this.includeDeleted_ = paramBoolean;
        return this;
      }

      public final Builder setOwnerGaiaId(long paramLong)
      {
        this.bitField0_ = (0x1 | this.bitField0_);
        this.ownerGaiaId_ = paramLong;
        return this;
      }

      public final Builder setPhotoOptions(Network.PhotoOptions.Builder paramBuilder)
      {
        this.photoOptions_ = paramBuilder.build();
        this.bitField0_ = (0x200 | this.bitField0_);
        return this;
      }

      public final Builder setPhotoOptions(Network.PhotoOptions paramPhotoOptions)
      {
        if (paramPhotoOptions == null)
          throw new NullPointerException();
        this.photoOptions_ = paramPhotoOptions;
        this.bitField0_ = (0x200 | this.bitField0_);
        return this;
      }

      public final Builder setResultsPerPage(int paramInt)
      {
        this.bitField0_ = (0x80 | this.bitField0_);
        this.resultsPerPage_ = paramInt;
        return this;
      }

      public final Builder setResumeToken(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x100 | this.bitField0_);
        this.resumeToken_ = paramString;
        return this;
      }

      @Deprecated
      public final Builder setReturnComments(boolean paramBoolean)
      {
        this.bitField0_ = (0x8 | this.bitField0_);
        this.returnComments_ = paramBoolean;
        return this;
      }

      @Deprecated
      public final Builder setReturnShapes(boolean paramBoolean)
      {
        this.bitField0_ = (0x10 | this.bitField0_);
        this.returnShapes_ = paramBoolean;
        return this;
      }

      @Deprecated
      public final Builder setReturnUrls(boolean paramBoolean)
      {
        this.bitField0_ = (0x4 | this.bitField0_);
        this.returnUrls_ = paramBoolean;
        return this;
      }
    }
  }

  public static abstract interface GetPhotosByUserRequestOrBuilder extends MessageLiteOrBuilder
  {
    public abstract String getFocusObfuscatedOwnerId();

    public abstract long getIfModifiedSince();

    public abstract boolean getIncludeDeleted();

    public abstract long getOwnerGaiaId();

    public abstract Network.PhotoOptions getPhotoOptions();

    public abstract int getResultsPerPage();

    public abstract String getResumeToken();

    @Deprecated
    public abstract boolean getReturnComments();

    @Deprecated
    public abstract boolean getReturnShapes();

    @Deprecated
    public abstract boolean getReturnUrls();

    public abstract boolean hasFocusObfuscatedOwnerId();

    public abstract boolean hasIfModifiedSince();

    public abstract boolean hasIncludeDeleted();

    public abstract boolean hasOwnerGaiaId();

    public abstract boolean hasPhotoOptions();

    public abstract boolean hasResultsPerPage();

    public abstract boolean hasResumeToken();

    @Deprecated
    public abstract boolean hasReturnComments();

    @Deprecated
    public abstract boolean hasReturnShapes();

    @Deprecated
    public abstract boolean hasReturnUrls();
  }

  public static final class GetPhotosByUserResponse extends GeneratedMessageLite
    implements Network.GetPhotosByUserResponseOrBuilder
  {
    private static final GetPhotosByUserResponse defaultInstance;
    private static final long serialVersionUID;
    private long accountVersion_;
    private int bitField0_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private List<Data.MobilePhoto> photo_;
    private Object resumeToken_;

    static
    {
      GetPhotosByUserResponse localGetPhotosByUserResponse = new GetPhotosByUserResponse();
      defaultInstance = localGetPhotosByUserResponse;
      localGetPhotosByUserResponse.photo_ = Collections.emptyList();
      localGetPhotosByUserResponse.resumeToken_ = "";
      localGetPhotosByUserResponse.accountVersion_ = 0L;
    }

    private GetPhotosByUserResponse()
    {
    }

    private GetPhotosByUserResponse(Builder paramBuilder)
    {
      super();
    }

    public static GetPhotosByUserResponse getDefaultInstance()
    {
      return defaultInstance;
    }

    private ByteString getResumeTokenBytes()
    {
      Object localObject = this.resumeToken_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.resumeToken_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public final long getAccountVersion()
    {
      return this.accountVersion_;
    }

    public final GetPhotosByUserResponse getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final Data.MobilePhoto getPhoto(int paramInt)
    {
      return (Data.MobilePhoto)this.photo_.get(paramInt);
    }

    public final int getPhotoCount()
    {
      return this.photo_.size();
    }

    public final List<Data.MobilePhoto> getPhotoList()
    {
      return this.photo_;
    }

    public final Data.MobilePhotoOrBuilder getPhotoOrBuilder(int paramInt)
    {
      return (Data.MobilePhotoOrBuilder)this.photo_.get(paramInt);
    }

    public final List<? extends Data.MobilePhotoOrBuilder> getPhotoOrBuilderList()
    {
      return this.photo_;
    }

    public final String getResumeToken()
    {
      Object localObject1 = this.resumeToken_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.resumeToken_ = str;
      }
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int j;
      for (int m = i; ; m = j)
      {
        return m;
        j = 0;
        for (int k = 0; k < this.photo_.size(); k++)
          j += CodedOutputStream.computeMessageSize(1, (MessageLite)this.photo_.get(k));
        if ((0x1 & this.bitField0_) == 1)
          j += CodedOutputStream.computeBytesSize(2, getResumeTokenBytes());
        if ((0x2 & this.bitField0_) == 2)
          j += CodedOutputStream.computeInt64Size(3, this.accountVersion_);
        this.memoizedSerializedSize = j;
      }
    }

    public final boolean hasAccountVersion()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasResumeToken()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        for (int k = 0; ; k++)
        {
          if (k >= getPhotoCount())
            break label61;
          if (!getPhoto(k).isInitialized())
          {
            this.memoizedIsInitialized = 0;
            i = 0;
            break;
          }
        }
        label61: this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      for (int i = 0; i < this.photo_.size(); i++)
        paramCodedOutputStream.writeMessage(1, (MessageLite)this.photo_.get(i));
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeBytes(2, getResumeTokenBytes());
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeInt64(3, this.accountVersion_);
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Network.GetPhotosByUserResponse, Builder>
      implements Network.GetPhotosByUserResponseOrBuilder
    {
      private long accountVersion_;
      private int bitField0_;
      private List<Data.MobilePhoto> photo_ = Collections.emptyList();
      private Object resumeToken_ = "";

      private Network.GetPhotosByUserResponse buildPartial()
      {
        Network.GetPhotosByUserResponse localGetPhotosByUserResponse = new Network.GetPhotosByUserResponse(this, (byte)0);
        int i = this.bitField0_;
        if ((0x1 & this.bitField0_) == 1)
        {
          this.photo_ = Collections.unmodifiableList(this.photo_);
          this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        }
        Network.GetPhotosByUserResponse.access$24502(localGetPhotosByUserResponse, this.photo_);
        int j = i & 0x2;
        int k = 0;
        if (j == 2)
          k = 1;
        Network.GetPhotosByUserResponse.access$24602(localGetPhotosByUserResponse, this.resumeToken_);
        if ((i & 0x4) == 4)
          k |= 2;
        Network.GetPhotosByUserResponse.access$24702(localGetPhotosByUserResponse, this.accountVersion_);
        Network.GetPhotosByUserResponse.access$24802(localGetPhotosByUserResponse, k);
        return localGetPhotosByUserResponse;
      }

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private void ensurePhotoIsMutable()
      {
        if ((0x1 & this.bitField0_) != 1)
        {
          this.photo_ = new ArrayList(this.photo_);
          this.bitField0_ = (0x1 | this.bitField0_);
        }
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 10:
            Data.MobilePhoto.Builder localBuilder = Data.MobilePhoto.newBuilder();
            paramCodedInputStream.readMessage(localBuilder, paramExtensionRegistryLite);
            addPhoto(localBuilder.buildPartial());
            break;
          case 18:
            this.bitField0_ = (0x2 | this.bitField0_);
            this.resumeToken_ = paramCodedInputStream.readBytes();
            break;
          case 24:
          }
          this.bitField0_ = (0x4 | this.bitField0_);
          this.accountVersion_ = paramCodedInputStream.readInt64();
        }
      }

      public final Builder addAllPhoto(Iterable<? extends Data.MobilePhoto> paramIterable)
      {
        ensurePhotoIsMutable();
        GeneratedMessageLite.Builder.addAll(paramIterable, this.photo_);
        return this;
      }

      public final Builder addPhoto(int paramInt, Data.MobilePhoto.Builder paramBuilder)
      {
        ensurePhotoIsMutable();
        this.photo_.add(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder addPhoto(int paramInt, Data.MobilePhoto paramMobilePhoto)
      {
        if (paramMobilePhoto == null)
          throw new NullPointerException();
        ensurePhotoIsMutable();
        this.photo_.add(paramInt, paramMobilePhoto);
        return this;
      }

      public final Builder addPhoto(Data.MobilePhoto.Builder paramBuilder)
      {
        ensurePhotoIsMutable();
        this.photo_.add(paramBuilder.build());
        return this;
      }

      public final Builder addPhoto(Data.MobilePhoto paramMobilePhoto)
      {
        if (paramMobilePhoto == null)
          throw new NullPointerException();
        ensurePhotoIsMutable();
        this.photo_.add(paramMobilePhoto);
        return this;
      }

      public final Builder clear()
      {
        super.clear();
        this.photo_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.resumeToken_ = "";
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.accountVersion_ = 0L;
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        return this;
      }

      public final Builder clearAccountVersion()
      {
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.accountVersion_ = 0L;
        return this;
      }

      public final Builder clearPhoto()
      {
        this.photo_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        return this;
      }

      public final Builder clearResumeToken()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.resumeToken_ = Network.GetPhotosByUserResponse.getDefaultInstance().getResumeToken();
        return this;
      }

      public final long getAccountVersion()
      {
        return this.accountVersion_;
      }

      public final Network.GetPhotosByUserResponse getDefaultInstanceForType()
      {
        return Network.GetPhotosByUserResponse.getDefaultInstance();
      }

      public final Data.MobilePhoto getPhoto(int paramInt)
      {
        return (Data.MobilePhoto)this.photo_.get(paramInt);
      }

      public final int getPhotoCount()
      {
        return this.photo_.size();
      }

      public final List<Data.MobilePhoto> getPhotoList()
      {
        return Collections.unmodifiableList(this.photo_);
      }

      public final String getResumeToken()
      {
        Object localObject = this.resumeToken_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.resumeToken_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final boolean hasAccountVersion()
      {
        if ((0x4 & this.bitField0_) == 4);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasResumeToken()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean isInitialized()
      {
        int i = 0;
        if (i < getPhotoCount())
          if (getPhoto(i).isInitialized());
        for (boolean bool = false; ; bool = true)
        {
          return bool;
          i++;
          break;
        }
      }

      public final Builder mergeFrom(Network.GetPhotosByUserResponse paramGetPhotosByUserResponse)
      {
        if (paramGetPhotosByUserResponse == Network.GetPhotosByUserResponse.getDefaultInstance())
          return this;
        if (!paramGetPhotosByUserResponse.photo_.isEmpty())
        {
          if (!this.photo_.isEmpty())
            break label87;
          this.photo_ = paramGetPhotosByUserResponse.photo_;
          this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        }
        while (true)
        {
          if (paramGetPhotosByUserResponse.hasResumeToken())
            setResumeToken(paramGetPhotosByUserResponse.getResumeToken());
          if (!paramGetPhotosByUserResponse.hasAccountVersion())
            break;
          setAccountVersion(paramGetPhotosByUserResponse.getAccountVersion());
          break;
          label87: ensurePhotoIsMutable();
          this.photo_.addAll(paramGetPhotosByUserResponse.photo_);
        }
      }

      public final Builder setAccountVersion(long paramLong)
      {
        this.bitField0_ = (0x4 | this.bitField0_);
        this.accountVersion_ = paramLong;
        return this;
      }

      public final Builder setPhoto(int paramInt, Data.MobilePhoto.Builder paramBuilder)
      {
        ensurePhotoIsMutable();
        this.photo_.set(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder setPhoto(int paramInt, Data.MobilePhoto paramMobilePhoto)
      {
        if (paramMobilePhoto == null)
          throw new NullPointerException();
        ensurePhotoIsMutable();
        this.photo_.set(paramInt, paramMobilePhoto);
        return this;
      }

      public final Builder setResumeToken(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x2 | this.bitField0_);
        this.resumeToken_ = paramString;
        return this;
      }
    }
  }

  public static abstract interface GetPhotosByUserResponseOrBuilder extends MessageLiteOrBuilder
  {
    public abstract long getAccountVersion();

    public abstract Data.MobilePhoto getPhoto(int paramInt);

    public abstract int getPhotoCount();

    public abstract List<Data.MobilePhoto> getPhotoList();

    public abstract String getResumeToken();

    public abstract boolean hasAccountVersion();

    public abstract boolean hasResumeToken();
  }

  public static final class GetPhotosOfUserRequest extends GeneratedMessageLite
    implements Network.GetPhotosOfUserRequestOrBuilder
  {
    private static final GetPhotosOfUserRequest defaultInstance;
    private static final long serialVersionUID;
    private int approvedOffset_;
    private Object approvedResumeToken_;
    private int bitField0_;
    private Object focusObfuscatedId_;
    private int maxPhotoCount_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private Network.PhotoOptions photoOptions_;
    private boolean returnComments_;
    private boolean returnShapes_;
    private int unapprovedOffset_;
    private Object unapprovedResumeToken_;
    private long userGaiaId_;

    static
    {
      GetPhotosOfUserRequest localGetPhotosOfUserRequest = new GetPhotosOfUserRequest();
      defaultInstance = localGetPhotosOfUserRequest;
      localGetPhotosOfUserRequest.userGaiaId_ = 0L;
      localGetPhotosOfUserRequest.focusObfuscatedId_ = "";
      localGetPhotosOfUserRequest.returnShapes_ = false;
      localGetPhotosOfUserRequest.returnComments_ = false;
      localGetPhotosOfUserRequest.maxPhotoCount_ = 0;
      localGetPhotosOfUserRequest.approvedOffset_ = 0;
      localGetPhotosOfUserRequest.unapprovedOffset_ = 0;
      localGetPhotosOfUserRequest.approvedResumeToken_ = "";
      localGetPhotosOfUserRequest.unapprovedResumeToken_ = "";
      localGetPhotosOfUserRequest.photoOptions_ = Network.PhotoOptions.getDefaultInstance();
    }

    private GetPhotosOfUserRequest()
    {
    }

    private GetPhotosOfUserRequest(Builder paramBuilder)
    {
      super();
    }

    private ByteString getApprovedResumeTokenBytes()
    {
      Object localObject = this.approvedResumeToken_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.approvedResumeToken_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static GetPhotosOfUserRequest getDefaultInstance()
    {
      return defaultInstance;
    }

    private ByteString getFocusObfuscatedIdBytes()
    {
      Object localObject = this.focusObfuscatedId_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.focusObfuscatedId_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    private ByteString getUnapprovedResumeTokenBytes()
    {
      Object localObject = this.unapprovedResumeToken_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.unapprovedResumeToken_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    @Deprecated
    public final int getApprovedOffset()
    {
      return this.approvedOffset_;
    }

    public final String getApprovedResumeToken()
    {
      Object localObject1 = this.approvedResumeToken_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.approvedResumeToken_ = str;
      }
    }

    public final GetPhotosOfUserRequest getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final String getFocusObfuscatedId()
    {
      Object localObject1 = this.focusObfuscatedId_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.focusObfuscatedId_ = str;
      }
    }

    public final int getMaxPhotoCount()
    {
      return this.maxPhotoCount_;
    }

    public final Network.PhotoOptions getPhotoOptions()
    {
      return this.photoOptions_;
    }

    @Deprecated
    public final boolean getReturnComments()
    {
      return this.returnComments_;
    }

    @Deprecated
    public final boolean getReturnShapes()
    {
      return this.returnShapes_;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeInt64Size(1, this.userGaiaId_);
        if ((0x4 & this.bitField0_) == 4)
          k += CodedOutputStream.computeBoolSize(2, this.returnShapes_);
        if ((0x8 & this.bitField0_) == 8)
          k += CodedOutputStream.computeBoolSize(3, this.returnComments_);
        if ((0x10 & this.bitField0_) == 16)
          k += CodedOutputStream.computeInt32Size(4, this.maxPhotoCount_);
        if ((0x20 & this.bitField0_) == 32)
          k += CodedOutputStream.computeInt32Size(5, this.approvedOffset_);
        if ((0x40 & this.bitField0_) == 64)
          k += CodedOutputStream.computeInt32Size(6, this.unapprovedOffset_);
        if ((0x80 & this.bitField0_) == 128)
          k += CodedOutputStream.computeBytesSize(7, getApprovedResumeTokenBytes());
        if ((0x100 & this.bitField0_) == 256)
          k += CodedOutputStream.computeBytesSize(8, getUnapprovedResumeTokenBytes());
        if ((0x200 & this.bitField0_) == 512)
          k += CodedOutputStream.computeMessageSize(9, this.photoOptions_);
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeBytesSize(10, getFocusObfuscatedIdBytes());
        this.memoizedSerializedSize = k;
      }
    }

    @Deprecated
    public final int getUnapprovedOffset()
    {
      return this.unapprovedOffset_;
    }

    public final String getUnapprovedResumeToken()
    {
      Object localObject1 = this.unapprovedResumeToken_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.unapprovedResumeToken_ = str;
      }
    }

    public final long getUserGaiaId()
    {
      return this.userGaiaId_;
    }

    @Deprecated
    public final boolean hasApprovedOffset()
    {
      if ((0x20 & this.bitField0_) == 32);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasApprovedResumeToken()
    {
      if ((0x80 & this.bitField0_) == 128);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasFocusObfuscatedId()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasMaxPhotoCount()
    {
      if ((0x10 & this.bitField0_) == 16);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasPhotoOptions()
    {
      if ((0x200 & this.bitField0_) == 512);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    @Deprecated
    public final boolean hasReturnComments()
    {
      if ((0x8 & this.bitField0_) == 8);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    @Deprecated
    public final boolean hasReturnShapes()
    {
      if ((0x4 & this.bitField0_) == 4);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    @Deprecated
    public final boolean hasUnapprovedOffset()
    {
      if ((0x40 & this.bitField0_) == 64);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasUnapprovedResumeToken()
    {
      if ((0x100 & this.bitField0_) == 256);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasUserGaiaId()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeInt64(1, this.userGaiaId_);
      if ((0x4 & this.bitField0_) == 4)
        paramCodedOutputStream.writeBool(2, this.returnShapes_);
      if ((0x8 & this.bitField0_) == 8)
        paramCodedOutputStream.writeBool(3, this.returnComments_);
      if ((0x10 & this.bitField0_) == 16)
        paramCodedOutputStream.writeInt32(4, this.maxPhotoCount_);
      if ((0x20 & this.bitField0_) == 32)
        paramCodedOutputStream.writeInt32(5, this.approvedOffset_);
      if ((0x40 & this.bitField0_) == 64)
        paramCodedOutputStream.writeInt32(6, this.unapprovedOffset_);
      if ((0x80 & this.bitField0_) == 128)
        paramCodedOutputStream.writeBytes(7, getApprovedResumeTokenBytes());
      if ((0x100 & this.bitField0_) == 256)
        paramCodedOutputStream.writeBytes(8, getUnapprovedResumeTokenBytes());
      if ((0x200 & this.bitField0_) == 512)
        paramCodedOutputStream.writeMessage(9, this.photoOptions_);
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeBytes(10, getFocusObfuscatedIdBytes());
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Network.GetPhotosOfUserRequest, Builder>
      implements Network.GetPhotosOfUserRequestOrBuilder
    {
      private int approvedOffset_;
      private Object approvedResumeToken_ = "";
      private int bitField0_;
      private Object focusObfuscatedId_ = "";
      private int maxPhotoCount_;
      private Network.PhotoOptions photoOptions_ = Network.PhotoOptions.getDefaultInstance();
      private boolean returnComments_;
      private boolean returnShapes_;
      private int unapprovedOffset_;
      private Object unapprovedResumeToken_ = "";
      private long userGaiaId_;

      private Network.GetPhotosOfUserRequest buildPartial()
      {
        Network.GetPhotosOfUserRequest localGetPhotosOfUserRequest = new Network.GetPhotosOfUserRequest(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Network.GetPhotosOfUserRequest.access$49102(localGetPhotosOfUserRequest, this.userGaiaId_);
        if ((i & 0x2) == 2)
          k |= 2;
        Network.GetPhotosOfUserRequest.access$49202(localGetPhotosOfUserRequest, this.focusObfuscatedId_);
        if ((i & 0x4) == 4)
          k |= 4;
        Network.GetPhotosOfUserRequest.access$49302(localGetPhotosOfUserRequest, this.returnShapes_);
        if ((i & 0x8) == 8)
          k |= 8;
        Network.GetPhotosOfUserRequest.access$49402(localGetPhotosOfUserRequest, this.returnComments_);
        if ((i & 0x10) == 16)
          k |= 16;
        Network.GetPhotosOfUserRequest.access$49502(localGetPhotosOfUserRequest, this.maxPhotoCount_);
        if ((i & 0x20) == 32)
          k |= 32;
        Network.GetPhotosOfUserRequest.access$49602(localGetPhotosOfUserRequest, this.approvedOffset_);
        if ((i & 0x40) == 64)
          k |= 64;
        Network.GetPhotosOfUserRequest.access$49702(localGetPhotosOfUserRequest, this.unapprovedOffset_);
        if ((i & 0x80) == 128)
          k |= 128;
        Network.GetPhotosOfUserRequest.access$49802(localGetPhotosOfUserRequest, this.approvedResumeToken_);
        if ((i & 0x100) == 256)
          k |= 256;
        Network.GetPhotosOfUserRequest.access$49902(localGetPhotosOfUserRequest, this.unapprovedResumeToken_);
        if ((i & 0x200) == 512)
          k |= 512;
        Network.GetPhotosOfUserRequest.access$50002(localGetPhotosOfUserRequest, this.photoOptions_);
        Network.GetPhotosOfUserRequest.access$50102(localGetPhotosOfUserRequest, k);
        return localGetPhotosOfUserRequest;
      }

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 8:
            this.bitField0_ = (0x1 | this.bitField0_);
            this.userGaiaId_ = paramCodedInputStream.readInt64();
            break;
          case 16:
            this.bitField0_ = (0x4 | this.bitField0_);
            this.returnShapes_ = paramCodedInputStream.readBool();
            break;
          case 24:
            this.bitField0_ = (0x8 | this.bitField0_);
            this.returnComments_ = paramCodedInputStream.readBool();
            break;
          case 32:
            this.bitField0_ = (0x10 | this.bitField0_);
            this.maxPhotoCount_ = paramCodedInputStream.readInt32();
            break;
          case 40:
            this.bitField0_ = (0x20 | this.bitField0_);
            this.approvedOffset_ = paramCodedInputStream.readInt32();
            break;
          case 48:
            this.bitField0_ = (0x40 | this.bitField0_);
            this.unapprovedOffset_ = paramCodedInputStream.readInt32();
            break;
          case 58:
            this.bitField0_ = (0x80 | this.bitField0_);
            this.approvedResumeToken_ = paramCodedInputStream.readBytes();
            break;
          case 66:
            this.bitField0_ = (0x100 | this.bitField0_);
            this.unapprovedResumeToken_ = paramCodedInputStream.readBytes();
            break;
          case 74:
            Network.PhotoOptions.Builder localBuilder = Network.PhotoOptions.newBuilder();
            if (hasPhotoOptions())
              localBuilder.mergeFrom(getPhotoOptions());
            paramCodedInputStream.readMessage(localBuilder, paramExtensionRegistryLite);
            setPhotoOptions(localBuilder.buildPartial());
            break;
          case 82:
          }
          this.bitField0_ = (0x2 | this.bitField0_);
          this.focusObfuscatedId_ = paramCodedInputStream.readBytes();
        }
      }

      public final Builder clear()
      {
        super.clear();
        this.userGaiaId_ = 0L;
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.focusObfuscatedId_ = "";
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.returnShapes_ = false;
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.returnComments_ = false;
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        this.maxPhotoCount_ = 0;
        this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        this.approvedOffset_ = 0;
        this.bitField0_ = (0xFFFFFFDF & this.bitField0_);
        this.unapprovedOffset_ = 0;
        this.bitField0_ = (0xFFFFFFBF & this.bitField0_);
        this.approvedResumeToken_ = "";
        this.bitField0_ = (0xFFFFFF7F & this.bitField0_);
        this.unapprovedResumeToken_ = "";
        this.bitField0_ = (0xFFFFFEFF & this.bitField0_);
        this.photoOptions_ = Network.PhotoOptions.getDefaultInstance();
        this.bitField0_ = (0xFFFFFDFF & this.bitField0_);
        return this;
      }

      @Deprecated
      public final Builder clearApprovedOffset()
      {
        this.bitField0_ = (0xFFFFFFDF & this.bitField0_);
        this.approvedOffset_ = 0;
        return this;
      }

      public final Builder clearApprovedResumeToken()
      {
        this.bitField0_ = (0xFFFFFF7F & this.bitField0_);
        this.approvedResumeToken_ = Network.GetPhotosOfUserRequest.getDefaultInstance().getApprovedResumeToken();
        return this;
      }

      public final Builder clearFocusObfuscatedId()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.focusObfuscatedId_ = Network.GetPhotosOfUserRequest.getDefaultInstance().getFocusObfuscatedId();
        return this;
      }

      public final Builder clearMaxPhotoCount()
      {
        this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        this.maxPhotoCount_ = 0;
        return this;
      }

      public final Builder clearPhotoOptions()
      {
        this.photoOptions_ = Network.PhotoOptions.getDefaultInstance();
        this.bitField0_ = (0xFFFFFDFF & this.bitField0_);
        return this;
      }

      @Deprecated
      public final Builder clearReturnComments()
      {
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        this.returnComments_ = false;
        return this;
      }

      @Deprecated
      public final Builder clearReturnShapes()
      {
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.returnShapes_ = false;
        return this;
      }

      @Deprecated
      public final Builder clearUnapprovedOffset()
      {
        this.bitField0_ = (0xFFFFFFBF & this.bitField0_);
        this.unapprovedOffset_ = 0;
        return this;
      }

      public final Builder clearUnapprovedResumeToken()
      {
        this.bitField0_ = (0xFFFFFEFF & this.bitField0_);
        this.unapprovedResumeToken_ = Network.GetPhotosOfUserRequest.getDefaultInstance().getUnapprovedResumeToken();
        return this;
      }

      public final Builder clearUserGaiaId()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.userGaiaId_ = 0L;
        return this;
      }

      @Deprecated
      public final int getApprovedOffset()
      {
        return this.approvedOffset_;
      }

      public final String getApprovedResumeToken()
      {
        Object localObject = this.approvedResumeToken_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.approvedResumeToken_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final Network.GetPhotosOfUserRequest getDefaultInstanceForType()
      {
        return Network.GetPhotosOfUserRequest.getDefaultInstance();
      }

      public final String getFocusObfuscatedId()
      {
        Object localObject = this.focusObfuscatedId_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.focusObfuscatedId_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final int getMaxPhotoCount()
      {
        return this.maxPhotoCount_;
      }

      public final Network.PhotoOptions getPhotoOptions()
      {
        return this.photoOptions_;
      }

      @Deprecated
      public final boolean getReturnComments()
      {
        return this.returnComments_;
      }

      @Deprecated
      public final boolean getReturnShapes()
      {
        return this.returnShapes_;
      }

      @Deprecated
      public final int getUnapprovedOffset()
      {
        return this.unapprovedOffset_;
      }

      public final String getUnapprovedResumeToken()
      {
        Object localObject = this.unapprovedResumeToken_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.unapprovedResumeToken_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final long getUserGaiaId()
      {
        return this.userGaiaId_;
      }

      @Deprecated
      public final boolean hasApprovedOffset()
      {
        if ((0x20 & this.bitField0_) == 32);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasApprovedResumeToken()
      {
        if ((0x80 & this.bitField0_) == 128);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasFocusObfuscatedId()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasMaxPhotoCount()
      {
        if ((0x10 & this.bitField0_) == 16);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasPhotoOptions()
      {
        if ((0x200 & this.bitField0_) == 512);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      @Deprecated
      public final boolean hasReturnComments()
      {
        if ((0x8 & this.bitField0_) == 8);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      @Deprecated
      public final boolean hasReturnShapes()
      {
        if ((0x4 & this.bitField0_) == 4);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      @Deprecated
      public final boolean hasUnapprovedOffset()
      {
        if ((0x40 & this.bitField0_) == 64);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasUnapprovedResumeToken()
      {
        if ((0x100 & this.bitField0_) == 256);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasUserGaiaId()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Network.GetPhotosOfUserRequest paramGetPhotosOfUserRequest)
      {
        if (paramGetPhotosOfUserRequest == Network.GetPhotosOfUserRequest.getDefaultInstance());
        do
        {
          return this;
          if (paramGetPhotosOfUserRequest.hasUserGaiaId())
            setUserGaiaId(paramGetPhotosOfUserRequest.getUserGaiaId());
          if (paramGetPhotosOfUserRequest.hasFocusObfuscatedId())
            setFocusObfuscatedId(paramGetPhotosOfUserRequest.getFocusObfuscatedId());
          if (paramGetPhotosOfUserRequest.hasReturnShapes())
            setReturnShapes(paramGetPhotosOfUserRequest.getReturnShapes());
          if (paramGetPhotosOfUserRequest.hasReturnComments())
            setReturnComments(paramGetPhotosOfUserRequest.getReturnComments());
          if (paramGetPhotosOfUserRequest.hasMaxPhotoCount())
            setMaxPhotoCount(paramGetPhotosOfUserRequest.getMaxPhotoCount());
          if (paramGetPhotosOfUserRequest.hasApprovedOffset())
            setApprovedOffset(paramGetPhotosOfUserRequest.getApprovedOffset());
          if (paramGetPhotosOfUserRequest.hasUnapprovedOffset())
            setUnapprovedOffset(paramGetPhotosOfUserRequest.getUnapprovedOffset());
          if (paramGetPhotosOfUserRequest.hasApprovedResumeToken())
            setApprovedResumeToken(paramGetPhotosOfUserRequest.getApprovedResumeToken());
          if (paramGetPhotosOfUserRequest.hasUnapprovedResumeToken())
            setUnapprovedResumeToken(paramGetPhotosOfUserRequest.getUnapprovedResumeToken());
        }
        while (!paramGetPhotosOfUserRequest.hasPhotoOptions());
        Network.PhotoOptions localPhotoOptions = paramGetPhotosOfUserRequest.getPhotoOptions();
        if (((0x200 & this.bitField0_) == 512) && (this.photoOptions_ != Network.PhotoOptions.getDefaultInstance()));
        for (this.photoOptions_ = Network.PhotoOptions.newBuilder(this.photoOptions_).mergeFrom(localPhotoOptions).buildPartial(); ; this.photoOptions_ = localPhotoOptions)
        {
          this.bitField0_ = (0x200 | this.bitField0_);
          break;
        }
      }

      @Deprecated
      public final Builder setApprovedOffset(int paramInt)
      {
        this.bitField0_ = (0x20 | this.bitField0_);
        this.approvedOffset_ = paramInt;
        return this;
      }

      public final Builder setApprovedResumeToken(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x80 | this.bitField0_);
        this.approvedResumeToken_ = paramString;
        return this;
      }

      public final Builder setFocusObfuscatedId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x2 | this.bitField0_);
        this.focusObfuscatedId_ = paramString;
        return this;
      }

      public final Builder setMaxPhotoCount(int paramInt)
      {
        this.bitField0_ = (0x10 | this.bitField0_);
        this.maxPhotoCount_ = paramInt;
        return this;
      }

      public final Builder setPhotoOptions(Network.PhotoOptions.Builder paramBuilder)
      {
        this.photoOptions_ = paramBuilder.build();
        this.bitField0_ = (0x200 | this.bitField0_);
        return this;
      }

      public final Builder setPhotoOptions(Network.PhotoOptions paramPhotoOptions)
      {
        if (paramPhotoOptions == null)
          throw new NullPointerException();
        this.photoOptions_ = paramPhotoOptions;
        this.bitField0_ = (0x200 | this.bitField0_);
        return this;
      }

      @Deprecated
      public final Builder setReturnComments(boolean paramBoolean)
      {
        this.bitField0_ = (0x8 | this.bitField0_);
        this.returnComments_ = paramBoolean;
        return this;
      }

      @Deprecated
      public final Builder setReturnShapes(boolean paramBoolean)
      {
        this.bitField0_ = (0x4 | this.bitField0_);
        this.returnShapes_ = paramBoolean;
        return this;
      }

      @Deprecated
      public final Builder setUnapprovedOffset(int paramInt)
      {
        this.bitField0_ = (0x40 | this.bitField0_);
        this.unapprovedOffset_ = paramInt;
        return this;
      }

      public final Builder setUnapprovedResumeToken(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x100 | this.bitField0_);
        this.unapprovedResumeToken_ = paramString;
        return this;
      }

      public final Builder setUserGaiaId(long paramLong)
      {
        this.bitField0_ = (0x1 | this.bitField0_);
        this.userGaiaId_ = paramLong;
        return this;
      }
    }
  }

  public static abstract interface GetPhotosOfUserRequestOrBuilder extends MessageLiteOrBuilder
  {
    @Deprecated
    public abstract int getApprovedOffset();

    public abstract String getApprovedResumeToken();

    public abstract String getFocusObfuscatedId();

    public abstract int getMaxPhotoCount();

    public abstract Network.PhotoOptions getPhotoOptions();

    @Deprecated
    public abstract boolean getReturnComments();

    @Deprecated
    public abstract boolean getReturnShapes();

    @Deprecated
    public abstract int getUnapprovedOffset();

    public abstract String getUnapprovedResumeToken();

    public abstract long getUserGaiaId();

    @Deprecated
    public abstract boolean hasApprovedOffset();

    public abstract boolean hasApprovedResumeToken();

    public abstract boolean hasFocusObfuscatedId();

    public abstract boolean hasMaxPhotoCount();

    public abstract boolean hasPhotoOptions();

    @Deprecated
    public abstract boolean hasReturnComments();

    @Deprecated
    public abstract boolean hasReturnShapes();

    @Deprecated
    public abstract boolean hasUnapprovedOffset();

    public abstract boolean hasUnapprovedResumeToken();

    public abstract boolean hasUserGaiaId();
  }

  public static final class GetPhotosOfUserResponse extends GeneratedMessageLite
    implements Network.GetPhotosOfUserResponseOrBuilder
  {
    private static final GetPhotosOfUserResponse defaultInstance;
    private static final long serialVersionUID;
    private List<Data.MobilePhoto> approvedPhoto_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private List<Data.MobilePhoto> unapprovedPhoto_;

    static
    {
      GetPhotosOfUserResponse localGetPhotosOfUserResponse = new GetPhotosOfUserResponse();
      defaultInstance = localGetPhotosOfUserResponse;
      localGetPhotosOfUserResponse.approvedPhoto_ = Collections.emptyList();
      localGetPhotosOfUserResponse.unapprovedPhoto_ = Collections.emptyList();
    }

    private GetPhotosOfUserResponse()
    {
    }

    private GetPhotosOfUserResponse(Builder paramBuilder)
    {
      super();
    }

    public static GetPhotosOfUserResponse getDefaultInstance()
    {
      return defaultInstance;
    }

    public final Data.MobilePhoto getApprovedPhoto(int paramInt)
    {
      return (Data.MobilePhoto)this.approvedPhoto_.get(paramInt);
    }

    public final int getApprovedPhotoCount()
    {
      return this.approvedPhoto_.size();
    }

    public final List<Data.MobilePhoto> getApprovedPhotoList()
    {
      return this.approvedPhoto_;
    }

    public final Data.MobilePhotoOrBuilder getApprovedPhotoOrBuilder(int paramInt)
    {
      return (Data.MobilePhotoOrBuilder)this.approvedPhoto_.get(paramInt);
    }

    public final List<? extends Data.MobilePhotoOrBuilder> getApprovedPhotoOrBuilderList()
    {
      return this.approvedPhoto_;
    }

    public final GetPhotosOfUserResponse getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int j;
      for (int n = i; ; n = j)
      {
        return n;
        j = 0;
        for (int k = 0; k < this.approvedPhoto_.size(); k++)
          j += CodedOutputStream.computeMessageSize(1, (MessageLite)this.approvedPhoto_.get(k));
        for (int m = 0; m < this.unapprovedPhoto_.size(); m++)
          j += CodedOutputStream.computeMessageSize(2, (MessageLite)this.unapprovedPhoto_.get(m));
        this.memoizedSerializedSize = j;
      }
    }

    public final Data.MobilePhoto getUnapprovedPhoto(int paramInt)
    {
      return (Data.MobilePhoto)this.unapprovedPhoto_.get(paramInt);
    }

    public final int getUnapprovedPhotoCount()
    {
      return this.unapprovedPhoto_.size();
    }

    public final List<Data.MobilePhoto> getUnapprovedPhotoList()
    {
      return this.unapprovedPhoto_;
    }

    public final Data.MobilePhotoOrBuilder getUnapprovedPhotoOrBuilder(int paramInt)
    {
      return (Data.MobilePhotoOrBuilder)this.unapprovedPhoto_.get(paramInt);
    }

    public final List<? extends Data.MobilePhotoOrBuilder> getUnapprovedPhotoOrBuilderList()
    {
      return this.unapprovedPhoto_;
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        for (int k = 0; ; k++)
        {
          if (k >= getApprovedPhotoCount())
            break label61;
          if (!getApprovedPhoto(k).isInitialized())
          {
            this.memoizedIsInitialized = 0;
            i = 0;
            break;
          }
        }
        label61: for (int m = 0; ; m++)
        {
          if (m >= getUnapprovedPhotoCount())
            break label101;
          if (!getUnapprovedPhoto(m).isInitialized())
          {
            this.memoizedIsInitialized = 0;
            i = 0;
            break;
          }
        }
        label101: this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      for (int i = 0; i < this.approvedPhoto_.size(); i++)
        paramCodedOutputStream.writeMessage(1, (MessageLite)this.approvedPhoto_.get(i));
      for (int j = 0; j < this.unapprovedPhoto_.size(); j++)
        paramCodedOutputStream.writeMessage(2, (MessageLite)this.unapprovedPhoto_.get(j));
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Network.GetPhotosOfUserResponse, Builder>
      implements Network.GetPhotosOfUserResponseOrBuilder
    {
      private List<Data.MobilePhoto> approvedPhoto_ = Collections.emptyList();
      private int bitField0_;
      private List<Data.MobilePhoto> unapprovedPhoto_ = Collections.emptyList();

      private Network.GetPhotosOfUserResponse buildPartial()
      {
        Network.GetPhotosOfUserResponse localGetPhotosOfUserResponse = new Network.GetPhotosOfUserResponse(this, (byte)0);
        if ((0x1 & this.bitField0_) == 1)
        {
          this.approvedPhoto_ = Collections.unmodifiableList(this.approvedPhoto_);
          this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        }
        Network.GetPhotosOfUserResponse.access$50502(localGetPhotosOfUserResponse, this.approvedPhoto_);
        if ((0x2 & this.bitField0_) == 2)
        {
          this.unapprovedPhoto_ = Collections.unmodifiableList(this.unapprovedPhoto_);
          this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        }
        Network.GetPhotosOfUserResponse.access$50602(localGetPhotosOfUserResponse, this.unapprovedPhoto_);
        return localGetPhotosOfUserResponse;
      }

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private void ensureApprovedPhotoIsMutable()
      {
        if ((0x1 & this.bitField0_) != 1)
        {
          this.approvedPhoto_ = new ArrayList(this.approvedPhoto_);
          this.bitField0_ = (0x1 | this.bitField0_);
        }
      }

      private void ensureUnapprovedPhotoIsMutable()
      {
        if ((0x2 & this.bitField0_) != 2)
        {
          this.unapprovedPhoto_ = new ArrayList(this.unapprovedPhoto_);
          this.bitField0_ = (0x2 | this.bitField0_);
        }
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 10:
            Data.MobilePhoto.Builder localBuilder2 = Data.MobilePhoto.newBuilder();
            paramCodedInputStream.readMessage(localBuilder2, paramExtensionRegistryLite);
            addApprovedPhoto(localBuilder2.buildPartial());
            break;
          case 18:
          }
          Data.MobilePhoto.Builder localBuilder1 = Data.MobilePhoto.newBuilder();
          paramCodedInputStream.readMessage(localBuilder1, paramExtensionRegistryLite);
          addUnapprovedPhoto(localBuilder1.buildPartial());
        }
      }

      public final Builder addAllApprovedPhoto(Iterable<? extends Data.MobilePhoto> paramIterable)
      {
        ensureApprovedPhotoIsMutable();
        GeneratedMessageLite.Builder.addAll(paramIterable, this.approvedPhoto_);
        return this;
      }

      public final Builder addAllUnapprovedPhoto(Iterable<? extends Data.MobilePhoto> paramIterable)
      {
        ensureUnapprovedPhotoIsMutable();
        GeneratedMessageLite.Builder.addAll(paramIterable, this.unapprovedPhoto_);
        return this;
      }

      public final Builder addApprovedPhoto(int paramInt, Data.MobilePhoto.Builder paramBuilder)
      {
        ensureApprovedPhotoIsMutable();
        this.approvedPhoto_.add(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder addApprovedPhoto(int paramInt, Data.MobilePhoto paramMobilePhoto)
      {
        if (paramMobilePhoto == null)
          throw new NullPointerException();
        ensureApprovedPhotoIsMutable();
        this.approvedPhoto_.add(paramInt, paramMobilePhoto);
        return this;
      }

      public final Builder addApprovedPhoto(Data.MobilePhoto.Builder paramBuilder)
      {
        ensureApprovedPhotoIsMutable();
        this.approvedPhoto_.add(paramBuilder.build());
        return this;
      }

      public final Builder addApprovedPhoto(Data.MobilePhoto paramMobilePhoto)
      {
        if (paramMobilePhoto == null)
          throw new NullPointerException();
        ensureApprovedPhotoIsMutable();
        this.approvedPhoto_.add(paramMobilePhoto);
        return this;
      }

      public final Builder addUnapprovedPhoto(int paramInt, Data.MobilePhoto.Builder paramBuilder)
      {
        ensureUnapprovedPhotoIsMutable();
        this.unapprovedPhoto_.add(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder addUnapprovedPhoto(int paramInt, Data.MobilePhoto paramMobilePhoto)
      {
        if (paramMobilePhoto == null)
          throw new NullPointerException();
        ensureUnapprovedPhotoIsMutable();
        this.unapprovedPhoto_.add(paramInt, paramMobilePhoto);
        return this;
      }

      public final Builder addUnapprovedPhoto(Data.MobilePhoto.Builder paramBuilder)
      {
        ensureUnapprovedPhotoIsMutable();
        this.unapprovedPhoto_.add(paramBuilder.build());
        return this;
      }

      public final Builder addUnapprovedPhoto(Data.MobilePhoto paramMobilePhoto)
      {
        if (paramMobilePhoto == null)
          throw new NullPointerException();
        ensureUnapprovedPhotoIsMutable();
        this.unapprovedPhoto_.add(paramMobilePhoto);
        return this;
      }

      public final Builder clear()
      {
        super.clear();
        this.approvedPhoto_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.unapprovedPhoto_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        return this;
      }

      public final Builder clearApprovedPhoto()
      {
        this.approvedPhoto_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        return this;
      }

      public final Builder clearUnapprovedPhoto()
      {
        this.unapprovedPhoto_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        return this;
      }

      public final Data.MobilePhoto getApprovedPhoto(int paramInt)
      {
        return (Data.MobilePhoto)this.approvedPhoto_.get(paramInt);
      }

      public final int getApprovedPhotoCount()
      {
        return this.approvedPhoto_.size();
      }

      public final List<Data.MobilePhoto> getApprovedPhotoList()
      {
        return Collections.unmodifiableList(this.approvedPhoto_);
      }

      public final Network.GetPhotosOfUserResponse getDefaultInstanceForType()
      {
        return Network.GetPhotosOfUserResponse.getDefaultInstance();
      }

      public final Data.MobilePhoto getUnapprovedPhoto(int paramInt)
      {
        return (Data.MobilePhoto)this.unapprovedPhoto_.get(paramInt);
      }

      public final int getUnapprovedPhotoCount()
      {
        return this.unapprovedPhoto_.size();
      }

      public final List<Data.MobilePhoto> getUnapprovedPhotoList()
      {
        return Collections.unmodifiableList(this.unapprovedPhoto_);
      }

      public final boolean isInitialized()
      {
        int i = 0;
        boolean bool1;
        if (i < getApprovedPhotoCount())
        {
          boolean bool3 = getApprovedPhoto(i).isInitialized();
          bool1 = false;
          if (bool3);
        }
        while (true)
        {
          return bool1;
          i++;
          break;
          for (int j = 0; ; j++)
          {
            if (j >= getUnapprovedPhotoCount())
              break label68;
            boolean bool2 = getUnapprovedPhoto(j).isInitialized();
            bool1 = false;
            if (!bool2)
              break;
          }
          label68: bool1 = true;
        }
      }

      public final Builder mergeFrom(Network.GetPhotosOfUserResponse paramGetPhotosOfUserResponse)
      {
        if (paramGetPhotosOfUserResponse == Network.GetPhotosOfUserResponse.getDefaultInstance());
        while (true)
        {
          return this;
          if (!paramGetPhotosOfUserResponse.approvedPhoto_.isEmpty())
          {
            if (!this.approvedPhoto_.isEmpty())
              break label98;
            this.approvedPhoto_ = paramGetPhotosOfUserResponse.approvedPhoto_;
            this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
          }
          while (true)
          {
            if (paramGetPhotosOfUserResponse.unapprovedPhoto_.isEmpty())
              break label117;
            if (!this.unapprovedPhoto_.isEmpty())
              break label119;
            this.unapprovedPhoto_ = paramGetPhotosOfUserResponse.unapprovedPhoto_;
            this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
            break;
            label98: ensureApprovedPhotoIsMutable();
            this.approvedPhoto_.addAll(paramGetPhotosOfUserResponse.approvedPhoto_);
          }
          label117: continue;
          label119: ensureUnapprovedPhotoIsMutable();
          this.unapprovedPhoto_.addAll(paramGetPhotosOfUserResponse.unapprovedPhoto_);
        }
      }

      public final Builder setApprovedPhoto(int paramInt, Data.MobilePhoto.Builder paramBuilder)
      {
        ensureApprovedPhotoIsMutable();
        this.approvedPhoto_.set(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder setApprovedPhoto(int paramInt, Data.MobilePhoto paramMobilePhoto)
      {
        if (paramMobilePhoto == null)
          throw new NullPointerException();
        ensureApprovedPhotoIsMutable();
        this.approvedPhoto_.set(paramInt, paramMobilePhoto);
        return this;
      }

      public final Builder setUnapprovedPhoto(int paramInt, Data.MobilePhoto.Builder paramBuilder)
      {
        ensureUnapprovedPhotoIsMutable();
        this.unapprovedPhoto_.set(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder setUnapprovedPhoto(int paramInt, Data.MobilePhoto paramMobilePhoto)
      {
        if (paramMobilePhoto == null)
          throw new NullPointerException();
        ensureUnapprovedPhotoIsMutable();
        this.unapprovedPhoto_.set(paramInt, paramMobilePhoto);
        return this;
      }
    }
  }

  public static abstract interface GetPhotosOfUserResponseOrBuilder extends MessageLiteOrBuilder
  {
    public abstract Data.MobilePhoto getApprovedPhoto(int paramInt);

    public abstract int getApprovedPhotoCount();

    public abstract List<Data.MobilePhoto> getApprovedPhotoList();

    public abstract Data.MobilePhoto getUnapprovedPhoto(int paramInt);

    public abstract int getUnapprovedPhotoCount();

    public abstract List<Data.MobilePhoto> getUnapprovedPhotoList();
  }

  public static final class GetPlusOnePeopleRequest extends GeneratedMessageLite
    implements Network.GetPlusOnePeopleRequestOrBuilder
  {
    private static final GetPlusOnePeopleRequest defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private Object plusoneId_;

    static
    {
      GetPlusOnePeopleRequest localGetPlusOnePeopleRequest = new GetPlusOnePeopleRequest();
      defaultInstance = localGetPlusOnePeopleRequest;
      localGetPlusOnePeopleRequest.plusoneId_ = "";
    }

    private GetPlusOnePeopleRequest()
    {
    }

    private GetPlusOnePeopleRequest(Builder paramBuilder)
    {
      super();
    }

    public static GetPlusOnePeopleRequest getDefaultInstance()
    {
      return defaultInstance;
    }

    private ByteString getPlusoneIdBytes()
    {
      Object localObject = this.plusoneId_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.plusoneId_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public final GetPlusOnePeopleRequest getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final String getPlusoneId()
    {
      Object localObject1 = this.plusoneId_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.plusoneId_ = str;
      }
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeBytesSize(1, getPlusoneIdBytes());
        this.memoizedSerializedSize = k;
      }
    }

    public final boolean hasPlusoneId()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeBytes(1, getPlusoneIdBytes());
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Network.GetPlusOnePeopleRequest, Builder>
      implements Network.GetPlusOnePeopleRequestOrBuilder
    {
      private int bitField0_;
      private Object plusoneId_ = "";

      private Network.GetPlusOnePeopleRequest buildPartial()
      {
        Network.GetPlusOnePeopleRequest localGetPlusOnePeopleRequest = new Network.GetPlusOnePeopleRequest(this, (byte)0);
        int i = 0x1 & this.bitField0_;
        int j = 0;
        if (i == 1)
          j = 1;
        Network.GetPlusOnePeopleRequest.access$36402(localGetPlusOnePeopleRequest, this.plusoneId_);
        Network.GetPlusOnePeopleRequest.access$36502(localGetPlusOnePeopleRequest, j);
        return localGetPlusOnePeopleRequest;
      }

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 10:
          }
          this.bitField0_ = (0x1 | this.bitField0_);
          this.plusoneId_ = paramCodedInputStream.readBytes();
        }
      }

      public final Builder clear()
      {
        super.clear();
        this.plusoneId_ = "";
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        return this;
      }

      public final Builder clearPlusoneId()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.plusoneId_ = Network.GetPlusOnePeopleRequest.getDefaultInstance().getPlusoneId();
        return this;
      }

      public final Network.GetPlusOnePeopleRequest getDefaultInstanceForType()
      {
        return Network.GetPlusOnePeopleRequest.getDefaultInstance();
      }

      public final String getPlusoneId()
      {
        Object localObject = this.plusoneId_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.plusoneId_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final boolean hasPlusoneId()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Network.GetPlusOnePeopleRequest paramGetPlusOnePeopleRequest)
      {
        if (paramGetPlusOnePeopleRequest == Network.GetPlusOnePeopleRequest.getDefaultInstance());
        while (true)
        {
          return this;
          if (paramGetPlusOnePeopleRequest.hasPlusoneId())
            setPlusoneId(paramGetPlusOnePeopleRequest.getPlusoneId());
        }
      }

      public final Builder setPlusoneId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x1 | this.bitField0_);
        this.plusoneId_ = paramString;
        return this;
      }
    }
  }

  public static abstract interface GetPlusOnePeopleRequestOrBuilder extends MessageLiteOrBuilder
  {
    public abstract String getPlusoneId();

    public abstract boolean hasPlusoneId();
  }

  public static final class GetPlusOnePeopleResponse extends GeneratedMessageLite
    implements Network.GetPlusOnePeopleResponseOrBuilder
  {
    private static final GetPlusOnePeopleResponse defaultInstance;
    private static final long serialVersionUID;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private List<Data.Person> person_;

    static
    {
      GetPlusOnePeopleResponse localGetPlusOnePeopleResponse = new GetPlusOnePeopleResponse();
      defaultInstance = localGetPlusOnePeopleResponse;
      localGetPlusOnePeopleResponse.person_ = Collections.emptyList();
    }

    private GetPlusOnePeopleResponse()
    {
    }

    private GetPlusOnePeopleResponse(Builder paramBuilder)
    {
      super();
    }

    public static GetPlusOnePeopleResponse getDefaultInstance()
    {
      return defaultInstance;
    }

    public final GetPlusOnePeopleResponse getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final Data.Person getPerson(int paramInt)
    {
      return (Data.Person)this.person_.get(paramInt);
    }

    public final int getPersonCount()
    {
      return this.person_.size();
    }

    public final List<Data.Person> getPersonList()
    {
      return this.person_;
    }

    public final Data.PersonOrBuilder getPersonOrBuilder(int paramInt)
    {
      return (Data.PersonOrBuilder)this.person_.get(paramInt);
    }

    public final List<? extends Data.PersonOrBuilder> getPersonOrBuilderList()
    {
      return this.person_;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int j;
      for (int m = i; ; m = j)
      {
        return m;
        j = 0;
        for (int k = 0; k < this.person_.size(); k++)
          j += CodedOutputStream.computeMessageSize(1, (MessageLite)this.person_.get(k));
        this.memoizedSerializedSize = j;
      }
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      for (int i = 0; i < this.person_.size(); i++)
        paramCodedOutputStream.writeMessage(1, (MessageLite)this.person_.get(i));
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Network.GetPlusOnePeopleResponse, Builder>
      implements Network.GetPlusOnePeopleResponseOrBuilder
    {
      private int bitField0_;
      private List<Data.Person> person_ = Collections.emptyList();

      private Network.GetPlusOnePeopleResponse buildPartial()
      {
        Network.GetPlusOnePeopleResponse localGetPlusOnePeopleResponse = new Network.GetPlusOnePeopleResponse(this, (byte)0);
        if ((0x1 & this.bitField0_) == 1)
        {
          this.person_ = Collections.unmodifiableList(this.person_);
          this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        }
        Network.GetPlusOnePeopleResponse.access$36902(localGetPlusOnePeopleResponse, this.person_);
        return localGetPlusOnePeopleResponse;
      }

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private void ensurePersonIsMutable()
      {
        if ((0x1 & this.bitField0_) != 1)
        {
          this.person_ = new ArrayList(this.person_);
          this.bitField0_ = (0x1 | this.bitField0_);
        }
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 10:
          }
          Data.Person.Builder localBuilder = Data.Person.newBuilder();
          paramCodedInputStream.readMessage(localBuilder, paramExtensionRegistryLite);
          addPerson(localBuilder.buildPartial());
        }
      }

      public final Builder addAllPerson(Iterable<? extends Data.Person> paramIterable)
      {
        ensurePersonIsMutable();
        GeneratedMessageLite.Builder.addAll(paramIterable, this.person_);
        return this;
      }

      public final Builder addPerson(int paramInt, Data.Person.Builder paramBuilder)
      {
        ensurePersonIsMutable();
        this.person_.add(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder addPerson(int paramInt, Data.Person paramPerson)
      {
        if (paramPerson == null)
          throw new NullPointerException();
        ensurePersonIsMutable();
        this.person_.add(paramInt, paramPerson);
        return this;
      }

      public final Builder addPerson(Data.Person.Builder paramBuilder)
      {
        ensurePersonIsMutable();
        this.person_.add(paramBuilder.build());
        return this;
      }

      public final Builder addPerson(Data.Person paramPerson)
      {
        if (paramPerson == null)
          throw new NullPointerException();
        ensurePersonIsMutable();
        this.person_.add(paramPerson);
        return this;
      }

      public final Builder clear()
      {
        super.clear();
        this.person_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        return this;
      }

      public final Builder clearPerson()
      {
        this.person_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        return this;
      }

      public final Network.GetPlusOnePeopleResponse getDefaultInstanceForType()
      {
        return Network.GetPlusOnePeopleResponse.getDefaultInstance();
      }

      public final Data.Person getPerson(int paramInt)
      {
        return (Data.Person)this.person_.get(paramInt);
      }

      public final int getPersonCount()
      {
        return this.person_.size();
      }

      public final List<Data.Person> getPersonList()
      {
        return Collections.unmodifiableList(this.person_);
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Network.GetPlusOnePeopleResponse paramGetPlusOnePeopleResponse)
      {
        if (paramGetPlusOnePeopleResponse == Network.GetPlusOnePeopleResponse.getDefaultInstance());
        while (true)
        {
          return this;
          if (!paramGetPlusOnePeopleResponse.person_.isEmpty())
            if (this.person_.isEmpty())
            {
              this.person_ = paramGetPlusOnePeopleResponse.person_;
              this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
            }
            else
            {
              ensurePersonIsMutable();
              this.person_.addAll(paramGetPlusOnePeopleResponse.person_);
            }
        }
      }

      public final Builder setPerson(int paramInt, Data.Person.Builder paramBuilder)
      {
        ensurePersonIsMutable();
        this.person_.set(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder setPerson(int paramInt, Data.Person paramPerson)
      {
        if (paramPerson == null)
          throw new NullPointerException();
        ensurePersonIsMutable();
        this.person_.set(paramInt, paramPerson);
        return this;
      }
    }
  }

  public static abstract interface GetPlusOnePeopleResponseOrBuilder extends MessageLiteOrBuilder
  {
    public abstract Data.Person getPerson(int paramInt);

    public abstract int getPersonCount();

    public abstract List<Data.Person> getPersonList();
  }

  public static final class GetPlusOneRequest extends GeneratedMessageLite
    implements Network.GetPlusOneRequestOrBuilder
  {
    private static final GetPlusOneRequest defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private Object id_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private boolean returnFirstName_;
    private boolean returnGaiaId_;
    private Network.CreatePlusOneRequest.ObjectType type_;

    static
    {
      GetPlusOneRequest localGetPlusOneRequest = new GetPlusOneRequest();
      defaultInstance = localGetPlusOneRequest;
      localGetPlusOneRequest.type_ = Network.CreatePlusOneRequest.ObjectType.TACO;
      localGetPlusOneRequest.id_ = "";
      localGetPlusOneRequest.returnFirstName_ = false;
      localGetPlusOneRequest.returnGaiaId_ = false;
    }

    private GetPlusOneRequest()
    {
    }

    private GetPlusOneRequest(Builder paramBuilder)
    {
      super();
    }

    public static GetPlusOneRequest getDefaultInstance()
    {
      return defaultInstance;
    }

    private ByteString getIdBytes()
    {
      Object localObject = this.id_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.id_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public final GetPlusOneRequest getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final String getId()
    {
      Object localObject1 = this.id_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.id_ = str;
      }
    }

    public final boolean getReturnFirstName()
    {
      return this.returnFirstName_;
    }

    public final boolean getReturnGaiaId()
    {
      return this.returnGaiaId_;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeEnumSize(1, this.type_.getNumber());
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeBytesSize(2, getIdBytes());
        if ((0x4 & this.bitField0_) == 4)
          k += CodedOutputStream.computeBoolSize(3, this.returnFirstName_);
        if ((0x8 & this.bitField0_) == 8)
          k += CodedOutputStream.computeBoolSize(4, this.returnGaiaId_);
        this.memoizedSerializedSize = k;
      }
    }

    public final Network.CreatePlusOneRequest.ObjectType getType()
    {
      return this.type_;
    }

    public final boolean hasId()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasReturnFirstName()
    {
      if ((0x4 & this.bitField0_) == 4);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasReturnGaiaId()
    {
      if ((0x8 & this.bitField0_) == 8);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasType()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeEnum(1, this.type_.getNumber());
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeBytes(2, getIdBytes());
      if ((0x4 & this.bitField0_) == 4)
        paramCodedOutputStream.writeBool(3, this.returnFirstName_);
      if ((0x8 & this.bitField0_) == 8)
        paramCodedOutputStream.writeBool(4, this.returnGaiaId_);
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Network.GetPlusOneRequest, Builder>
      implements Network.GetPlusOneRequestOrBuilder
    {
      private int bitField0_;
      private Object id_ = "";
      private boolean returnFirstName_;
      private boolean returnGaiaId_;
      private Network.CreatePlusOneRequest.ObjectType type_ = Network.CreatePlusOneRequest.ObjectType.TACO;

      private Network.GetPlusOneRequest buildPartial()
      {
        Network.GetPlusOneRequest localGetPlusOneRequest = new Network.GetPlusOneRequest(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Network.GetPlusOneRequest.access$35102(localGetPlusOneRequest, this.type_);
        if ((i & 0x2) == 2)
          k |= 2;
        Network.GetPlusOneRequest.access$35202(localGetPlusOneRequest, this.id_);
        if ((i & 0x4) == 4)
          k |= 4;
        Network.GetPlusOneRequest.access$35302(localGetPlusOneRequest, this.returnFirstName_);
        if ((i & 0x8) == 8)
          k |= 8;
        Network.GetPlusOneRequest.access$35402(localGetPlusOneRequest, this.returnGaiaId_);
        Network.GetPlusOneRequest.access$35502(localGetPlusOneRequest, k);
        return localGetPlusOneRequest;
      }

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 8:
            Network.CreatePlusOneRequest.ObjectType localObjectType = Network.CreatePlusOneRequest.ObjectType.valueOf(paramCodedInputStream.readEnum());
            if (localObjectType == null)
              continue;
            this.bitField0_ = (0x1 | this.bitField0_);
            this.type_ = localObjectType;
            break;
          case 18:
            this.bitField0_ = (0x2 | this.bitField0_);
            this.id_ = paramCodedInputStream.readBytes();
            break;
          case 24:
            this.bitField0_ = (0x4 | this.bitField0_);
            this.returnFirstName_ = paramCodedInputStream.readBool();
            break;
          case 32:
          }
          this.bitField0_ = (0x8 | this.bitField0_);
          this.returnGaiaId_ = paramCodedInputStream.readBool();
        }
      }

      public final Builder clear()
      {
        super.clear();
        this.type_ = Network.CreatePlusOneRequest.ObjectType.TACO;
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.id_ = "";
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.returnFirstName_ = false;
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.returnGaiaId_ = false;
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        return this;
      }

      public final Builder clearId()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.id_ = Network.GetPlusOneRequest.getDefaultInstance().getId();
        return this;
      }

      public final Builder clearReturnFirstName()
      {
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.returnFirstName_ = false;
        return this;
      }

      public final Builder clearReturnGaiaId()
      {
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        this.returnGaiaId_ = false;
        return this;
      }

      public final Builder clearType()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.type_ = Network.CreatePlusOneRequest.ObjectType.TACO;
        return this;
      }

      public final Network.GetPlusOneRequest getDefaultInstanceForType()
      {
        return Network.GetPlusOneRequest.getDefaultInstance();
      }

      public final String getId()
      {
        Object localObject = this.id_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.id_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final boolean getReturnFirstName()
      {
        return this.returnFirstName_;
      }

      public final boolean getReturnGaiaId()
      {
        return this.returnGaiaId_;
      }

      public final Network.CreatePlusOneRequest.ObjectType getType()
      {
        return this.type_;
      }

      public final boolean hasId()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasReturnFirstName()
      {
        if ((0x4 & this.bitField0_) == 4);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasReturnGaiaId()
      {
        if ((0x8 & this.bitField0_) == 8);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasType()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Network.GetPlusOneRequest paramGetPlusOneRequest)
      {
        if (paramGetPlusOneRequest == Network.GetPlusOneRequest.getDefaultInstance());
        while (true)
        {
          return this;
          if (paramGetPlusOneRequest.hasType())
            setType(paramGetPlusOneRequest.getType());
          if (paramGetPlusOneRequest.hasId())
            setId(paramGetPlusOneRequest.getId());
          if (paramGetPlusOneRequest.hasReturnFirstName())
            setReturnFirstName(paramGetPlusOneRequest.getReturnFirstName());
          if (paramGetPlusOneRequest.hasReturnGaiaId())
            setReturnGaiaId(paramGetPlusOneRequest.getReturnGaiaId());
        }
      }

      public final Builder setId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x2 | this.bitField0_);
        this.id_ = paramString;
        return this;
      }

      public final Builder setReturnFirstName(boolean paramBoolean)
      {
        this.bitField0_ = (0x4 | this.bitField0_);
        this.returnFirstName_ = paramBoolean;
        return this;
      }

      public final Builder setReturnGaiaId(boolean paramBoolean)
      {
        this.bitField0_ = (0x8 | this.bitField0_);
        this.returnGaiaId_ = paramBoolean;
        return this;
      }

      public final Builder setType(Network.CreatePlusOneRequest.ObjectType paramObjectType)
      {
        if (paramObjectType == null)
          throw new NullPointerException();
        this.bitField0_ = (0x1 | this.bitField0_);
        this.type_ = paramObjectType;
        return this;
      }
    }
  }

  public static abstract interface GetPlusOneRequestOrBuilder extends MessageLiteOrBuilder
  {
    public abstract String getId();

    public abstract boolean getReturnFirstName();

    public abstract boolean getReturnGaiaId();

    public abstract Network.CreatePlusOneRequest.ObjectType getType();

    public abstract boolean hasId();

    public abstract boolean hasReturnFirstName();

    public abstract boolean hasReturnGaiaId();

    public abstract boolean hasType();
  }

  public static final class GetPlusOneResponse extends GeneratedMessageLite
    implements Network.GetPlusOneResponseOrBuilder
  {
    private static final GetPlusOneResponse defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private Data.PlusOneData plusoneData_;

    static
    {
      GetPlusOneResponse localGetPlusOneResponse = new GetPlusOneResponse();
      defaultInstance = localGetPlusOneResponse;
      localGetPlusOneResponse.plusoneData_ = Data.PlusOneData.getDefaultInstance();
    }

    private GetPlusOneResponse()
    {
    }

    private GetPlusOneResponse(Builder paramBuilder)
    {
      super();
    }

    public static GetPlusOneResponse getDefaultInstance()
    {
      return defaultInstance;
    }

    public final GetPlusOneResponse getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final Data.PlusOneData getPlusoneData()
    {
      return this.plusoneData_;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeMessageSize(1, this.plusoneData_);
        this.memoizedSerializedSize = k;
      }
    }

    public final boolean hasPlusoneData()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeMessage(1, this.plusoneData_);
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Network.GetPlusOneResponse, Builder>
      implements Network.GetPlusOneResponseOrBuilder
    {
      private int bitField0_;
      private Data.PlusOneData plusoneData_ = Data.PlusOneData.getDefaultInstance();

      private Network.GetPlusOneResponse buildPartial()
      {
        Network.GetPlusOneResponse localGetPlusOneResponse = new Network.GetPlusOneResponse(this, (byte)0);
        int i = 0x1 & this.bitField0_;
        int j = 0;
        if (i == 1)
          j = 1;
        Network.GetPlusOneResponse.access$35902(localGetPlusOneResponse, this.plusoneData_);
        Network.GetPlusOneResponse.access$36002(localGetPlusOneResponse, j);
        return localGetPlusOneResponse;
      }

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 10:
          }
          Data.PlusOneData.Builder localBuilder = Data.PlusOneData.newBuilder();
          if (hasPlusoneData())
            localBuilder.mergeFrom(getPlusoneData());
          paramCodedInputStream.readMessage(localBuilder, paramExtensionRegistryLite);
          setPlusoneData(localBuilder.buildPartial());
        }
      }

      public final Builder clear()
      {
        super.clear();
        this.plusoneData_ = Data.PlusOneData.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        return this;
      }

      public final Builder clearPlusoneData()
      {
        this.plusoneData_ = Data.PlusOneData.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        return this;
      }

      public final Network.GetPlusOneResponse getDefaultInstanceForType()
      {
        return Network.GetPlusOneResponse.getDefaultInstance();
      }

      public final Data.PlusOneData getPlusoneData()
      {
        return this.plusoneData_;
      }

      public final boolean hasPlusoneData()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Network.GetPlusOneResponse paramGetPlusOneResponse)
      {
        if (paramGetPlusOneResponse == Network.GetPlusOneResponse.getDefaultInstance());
        while (!paramGetPlusOneResponse.hasPlusoneData())
          return this;
        Data.PlusOneData localPlusOneData = paramGetPlusOneResponse.getPlusoneData();
        if (((0x1 & this.bitField0_) == 1) && (this.plusoneData_ != Data.PlusOneData.getDefaultInstance()));
        for (this.plusoneData_ = Data.PlusOneData.newBuilder(this.plusoneData_).mergeFrom(localPlusOneData).buildPartial(); ; this.plusoneData_ = localPlusOneData)
        {
          this.bitField0_ = (0x1 | this.bitField0_);
          break;
        }
      }

      public final Builder setPlusoneData(Data.PlusOneData.Builder paramBuilder)
      {
        this.plusoneData_ = paramBuilder.build();
        this.bitField0_ = (0x1 | this.bitField0_);
        return this;
      }

      public final Builder setPlusoneData(Data.PlusOneData paramPlusOneData)
      {
        if (paramPlusOneData == null)
          throw new NullPointerException();
        this.plusoneData_ = paramPlusOneData;
        this.bitField0_ = (0x1 | this.bitField0_);
        return this;
      }
    }
  }

  public static abstract interface GetPlusOneResponseOrBuilder extends MessageLiteOrBuilder
  {
    public abstract Data.PlusOneData getPlusoneData();

    public abstract boolean hasPlusoneData();
  }

  public static final class GetStreamPhotosRequest extends GeneratedMessageLite
    implements Network.GetStreamPhotosRequestOrBuilder
  {
    private static final GetStreamPhotosRequest defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private Object focusObfuscatedOwnerId_;
    private long ifModifiedSince_;
    private int maxPhotoCount_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private int offset_;
    private long ownerGaiaId_;
    private Network.PhotoOptions photoOptions_;
    private boolean returnComments_;
    private boolean returnShapes_;
    private boolean returnUrls_;
    private PhotosSortBy sortBy_;
    private Object streamId_;

    static
    {
      GetStreamPhotosRequest localGetStreamPhotosRequest = new GetStreamPhotosRequest();
      defaultInstance = localGetStreamPhotosRequest;
      localGetStreamPhotosRequest.ownerGaiaId_ = 0L;
      localGetStreamPhotosRequest.focusObfuscatedOwnerId_ = "";
      localGetStreamPhotosRequest.streamId_ = "";
      localGetStreamPhotosRequest.returnUrls_ = false;
      localGetStreamPhotosRequest.returnComments_ = false;
      localGetStreamPhotosRequest.returnShapes_ = false;
      localGetStreamPhotosRequest.maxPhotoCount_ = 0;
      localGetStreamPhotosRequest.offset_ = 0;
      localGetStreamPhotosRequest.sortBy_ = PhotosSortBy.TIMESTAMP;
      localGetStreamPhotosRequest.ifModifiedSince_ = 0L;
      localGetStreamPhotosRequest.photoOptions_ = Network.PhotoOptions.getDefaultInstance();
    }

    private GetStreamPhotosRequest()
    {
    }

    private GetStreamPhotosRequest(Builder paramBuilder)
    {
      super();
    }

    public static GetStreamPhotosRequest getDefaultInstance()
    {
      return defaultInstance;
    }

    private ByteString getFocusObfuscatedOwnerIdBytes()
    {
      Object localObject = this.focusObfuscatedOwnerId_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.focusObfuscatedOwnerId_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    private ByteString getStreamIdBytes()
    {
      Object localObject = this.streamId_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.streamId_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public final GetStreamPhotosRequest getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final String getFocusObfuscatedOwnerId()
    {
      Object localObject1 = this.focusObfuscatedOwnerId_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.focusObfuscatedOwnerId_ = str;
      }
    }

    public final long getIfModifiedSince()
    {
      return this.ifModifiedSince_;
    }

    public final int getMaxPhotoCount()
    {
      return this.maxPhotoCount_;
    }

    public final int getOffset()
    {
      return this.offset_;
    }

    public final long getOwnerGaiaId()
    {
      return this.ownerGaiaId_;
    }

    public final Network.PhotoOptions getPhotoOptions()
    {
      return this.photoOptions_;
    }

    @Deprecated
    public final boolean getReturnComments()
    {
      return this.returnComments_;
    }

    @Deprecated
    public final boolean getReturnShapes()
    {
      return this.returnShapes_;
    }

    @Deprecated
    public final boolean getReturnUrls()
    {
      return this.returnUrls_;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeInt64Size(1, this.ownerGaiaId_);
        if ((0x4 & this.bitField0_) == 4)
          k += CodedOutputStream.computeBytesSize(2, getStreamIdBytes());
        if ((0x8 & this.bitField0_) == 8)
          k += CodedOutputStream.computeBoolSize(3, this.returnUrls_);
        if ((0x10 & this.bitField0_) == 16)
          k += CodedOutputStream.computeBoolSize(4, this.returnComments_);
        if ((0x20 & this.bitField0_) == 32)
          k += CodedOutputStream.computeBoolSize(5, this.returnShapes_);
        if ((0x40 & this.bitField0_) == 64)
          k += CodedOutputStream.computeInt32Size(6, this.maxPhotoCount_);
        if ((0x80 & this.bitField0_) == 128)
          k += CodedOutputStream.computeInt32Size(7, this.offset_);
        if ((0x100 & this.bitField0_) == 256)
          k += CodedOutputStream.computeEnumSize(8, this.sortBy_.getNumber());
        if ((0x200 & this.bitField0_) == 512)
          k += CodedOutputStream.computeInt64Size(9, this.ifModifiedSince_);
        if ((0x400 & this.bitField0_) == 1024)
          k += CodedOutputStream.computeMessageSize(10, this.photoOptions_);
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeBytesSize(11, getFocusObfuscatedOwnerIdBytes());
        this.memoizedSerializedSize = k;
      }
    }

    public final PhotosSortBy getSortBy()
    {
      return this.sortBy_;
    }

    public final String getStreamId()
    {
      Object localObject1 = this.streamId_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.streamId_ = str;
      }
    }

    public final boolean hasFocusObfuscatedOwnerId()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasIfModifiedSince()
    {
      if ((0x200 & this.bitField0_) == 512);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasMaxPhotoCount()
    {
      if ((0x40 & this.bitField0_) == 64);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasOffset()
    {
      if ((0x80 & this.bitField0_) == 128);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasOwnerGaiaId()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean hasPhotoOptions()
    {
      if ((0x400 & this.bitField0_) == 1024);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    @Deprecated
    public final boolean hasReturnComments()
    {
      if ((0x10 & this.bitField0_) == 16);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    @Deprecated
    public final boolean hasReturnShapes()
    {
      if ((0x20 & this.bitField0_) == 32);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    @Deprecated
    public final boolean hasReturnUrls()
    {
      if ((0x8 & this.bitField0_) == 8);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasSortBy()
    {
      if ((0x100 & this.bitField0_) == 256);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasStreamId()
    {
      if ((0x4 & this.bitField0_) == 4);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeInt64(1, this.ownerGaiaId_);
      if ((0x4 & this.bitField0_) == 4)
        paramCodedOutputStream.writeBytes(2, getStreamIdBytes());
      if ((0x8 & this.bitField0_) == 8)
        paramCodedOutputStream.writeBool(3, this.returnUrls_);
      if ((0x10 & this.bitField0_) == 16)
        paramCodedOutputStream.writeBool(4, this.returnComments_);
      if ((0x20 & this.bitField0_) == 32)
        paramCodedOutputStream.writeBool(5, this.returnShapes_);
      if ((0x40 & this.bitField0_) == 64)
        paramCodedOutputStream.writeInt32(6, this.maxPhotoCount_);
      if ((0x80 & this.bitField0_) == 128)
        paramCodedOutputStream.writeInt32(7, this.offset_);
      if ((0x100 & this.bitField0_) == 256)
        paramCodedOutputStream.writeEnum(8, this.sortBy_.getNumber());
      if ((0x200 & this.bitField0_) == 512)
        paramCodedOutputStream.writeInt64(9, this.ifModifiedSince_);
      if ((0x400 & this.bitField0_) == 1024)
        paramCodedOutputStream.writeMessage(10, this.photoOptions_);
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeBytes(11, getFocusObfuscatedOwnerIdBytes());
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Network.GetStreamPhotosRequest, Builder>
      implements Network.GetStreamPhotosRequestOrBuilder
    {
      private int bitField0_;
      private Object focusObfuscatedOwnerId_ = "";
      private long ifModifiedSince_;
      private int maxPhotoCount_;
      private int offset_;
      private long ownerGaiaId_;
      private Network.PhotoOptions photoOptions_ = Network.PhotoOptions.getDefaultInstance();
      private boolean returnComments_;
      private boolean returnShapes_;
      private boolean returnUrls_;
      private Network.GetStreamPhotosRequest.PhotosSortBy sortBy_ = Network.GetStreamPhotosRequest.PhotosSortBy.TIMESTAMP;
      private Object streamId_ = "";

      private Network.GetStreamPhotosRequest buildPartial()
      {
        Network.GetStreamPhotosRequest localGetStreamPhotosRequest = new Network.GetStreamPhotosRequest(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Network.GetStreamPhotosRequest.access$39602(localGetStreamPhotosRequest, this.ownerGaiaId_);
        if ((i & 0x2) == 2)
          k |= 2;
        Network.GetStreamPhotosRequest.access$39702(localGetStreamPhotosRequest, this.focusObfuscatedOwnerId_);
        if ((i & 0x4) == 4)
          k |= 4;
        Network.GetStreamPhotosRequest.access$39802(localGetStreamPhotosRequest, this.streamId_);
        if ((i & 0x8) == 8)
          k |= 8;
        Network.GetStreamPhotosRequest.access$39902(localGetStreamPhotosRequest, this.returnUrls_);
        if ((i & 0x10) == 16)
          k |= 16;
        Network.GetStreamPhotosRequest.access$40002(localGetStreamPhotosRequest, this.returnComments_);
        if ((i & 0x20) == 32)
          k |= 32;
        Network.GetStreamPhotosRequest.access$40102(localGetStreamPhotosRequest, this.returnShapes_);
        if ((i & 0x40) == 64)
          k |= 64;
        Network.GetStreamPhotosRequest.access$40202(localGetStreamPhotosRequest, this.maxPhotoCount_);
        if ((i & 0x80) == 128)
          k |= 128;
        Network.GetStreamPhotosRequest.access$40302(localGetStreamPhotosRequest, this.offset_);
        if ((i & 0x100) == 256)
          k |= 256;
        Network.GetStreamPhotosRequest.access$40402(localGetStreamPhotosRequest, this.sortBy_);
        if ((i & 0x200) == 512)
          k |= 512;
        Network.GetStreamPhotosRequest.access$40502(localGetStreamPhotosRequest, this.ifModifiedSince_);
        if ((i & 0x400) == 1024)
          k |= 1024;
        Network.GetStreamPhotosRequest.access$40602(localGetStreamPhotosRequest, this.photoOptions_);
        Network.GetStreamPhotosRequest.access$40702(localGetStreamPhotosRequest, k);
        return localGetStreamPhotosRequest;
      }

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 8:
            this.bitField0_ = (0x1 | this.bitField0_);
            this.ownerGaiaId_ = paramCodedInputStream.readInt64();
            break;
          case 18:
            this.bitField0_ = (0x4 | this.bitField0_);
            this.streamId_ = paramCodedInputStream.readBytes();
            break;
          case 24:
            this.bitField0_ = (0x8 | this.bitField0_);
            this.returnUrls_ = paramCodedInputStream.readBool();
            break;
          case 32:
            this.bitField0_ = (0x10 | this.bitField0_);
            this.returnComments_ = paramCodedInputStream.readBool();
            break;
          case 40:
            this.bitField0_ = (0x20 | this.bitField0_);
            this.returnShapes_ = paramCodedInputStream.readBool();
            break;
          case 48:
            this.bitField0_ = (0x40 | this.bitField0_);
            this.maxPhotoCount_ = paramCodedInputStream.readInt32();
            break;
          case 56:
            this.bitField0_ = (0x80 | this.bitField0_);
            this.offset_ = paramCodedInputStream.readInt32();
            break;
          case 64:
            Network.GetStreamPhotosRequest.PhotosSortBy localPhotosSortBy = Network.GetStreamPhotosRequest.PhotosSortBy.valueOf(paramCodedInputStream.readEnum());
            if (localPhotosSortBy == null)
              continue;
            this.bitField0_ = (0x100 | this.bitField0_);
            this.sortBy_ = localPhotosSortBy;
            break;
          case 72:
            this.bitField0_ = (0x200 | this.bitField0_);
            this.ifModifiedSince_ = paramCodedInputStream.readInt64();
            break;
          case 82:
            Network.PhotoOptions.Builder localBuilder = Network.PhotoOptions.newBuilder();
            if (hasPhotoOptions())
              localBuilder.mergeFrom(getPhotoOptions());
            paramCodedInputStream.readMessage(localBuilder, paramExtensionRegistryLite);
            setPhotoOptions(localBuilder.buildPartial());
            break;
          case 90:
          }
          this.bitField0_ = (0x2 | this.bitField0_);
          this.focusObfuscatedOwnerId_ = paramCodedInputStream.readBytes();
        }
      }

      public final Builder clear()
      {
        super.clear();
        this.ownerGaiaId_ = 0L;
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.focusObfuscatedOwnerId_ = "";
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.streamId_ = "";
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.returnUrls_ = false;
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        this.returnComments_ = false;
        this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        this.returnShapes_ = false;
        this.bitField0_ = (0xFFFFFFDF & this.bitField0_);
        this.maxPhotoCount_ = 0;
        this.bitField0_ = (0xFFFFFFBF & this.bitField0_);
        this.offset_ = 0;
        this.bitField0_ = (0xFFFFFF7F & this.bitField0_);
        this.sortBy_ = Network.GetStreamPhotosRequest.PhotosSortBy.TIMESTAMP;
        this.bitField0_ = (0xFFFFFEFF & this.bitField0_);
        this.ifModifiedSince_ = 0L;
        this.bitField0_ = (0xFFFFFDFF & this.bitField0_);
        this.photoOptions_ = Network.PhotoOptions.getDefaultInstance();
        this.bitField0_ = (0xFFFFFBFF & this.bitField0_);
        return this;
      }

      public final Builder clearFocusObfuscatedOwnerId()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.focusObfuscatedOwnerId_ = Network.GetStreamPhotosRequest.getDefaultInstance().getFocusObfuscatedOwnerId();
        return this;
      }

      public final Builder clearIfModifiedSince()
      {
        this.bitField0_ = (0xFFFFFDFF & this.bitField0_);
        this.ifModifiedSince_ = 0L;
        return this;
      }

      public final Builder clearMaxPhotoCount()
      {
        this.bitField0_ = (0xFFFFFFBF & this.bitField0_);
        this.maxPhotoCount_ = 0;
        return this;
      }

      public final Builder clearOffset()
      {
        this.bitField0_ = (0xFFFFFF7F & this.bitField0_);
        this.offset_ = 0;
        return this;
      }

      public final Builder clearOwnerGaiaId()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.ownerGaiaId_ = 0L;
        return this;
      }

      public final Builder clearPhotoOptions()
      {
        this.photoOptions_ = Network.PhotoOptions.getDefaultInstance();
        this.bitField0_ = (0xFFFFFBFF & this.bitField0_);
        return this;
      }

      @Deprecated
      public final Builder clearReturnComments()
      {
        this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        this.returnComments_ = false;
        return this;
      }

      @Deprecated
      public final Builder clearReturnShapes()
      {
        this.bitField0_ = (0xFFFFFFDF & this.bitField0_);
        this.returnShapes_ = false;
        return this;
      }

      @Deprecated
      public final Builder clearReturnUrls()
      {
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        this.returnUrls_ = false;
        return this;
      }

      public final Builder clearSortBy()
      {
        this.bitField0_ = (0xFFFFFEFF & this.bitField0_);
        this.sortBy_ = Network.GetStreamPhotosRequest.PhotosSortBy.TIMESTAMP;
        return this;
      }

      public final Builder clearStreamId()
      {
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.streamId_ = Network.GetStreamPhotosRequest.getDefaultInstance().getStreamId();
        return this;
      }

      public final Network.GetStreamPhotosRequest getDefaultInstanceForType()
      {
        return Network.GetStreamPhotosRequest.getDefaultInstance();
      }

      public final String getFocusObfuscatedOwnerId()
      {
        Object localObject = this.focusObfuscatedOwnerId_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.focusObfuscatedOwnerId_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final long getIfModifiedSince()
      {
        return this.ifModifiedSince_;
      }

      public final int getMaxPhotoCount()
      {
        return this.maxPhotoCount_;
      }

      public final int getOffset()
      {
        return this.offset_;
      }

      public final long getOwnerGaiaId()
      {
        return this.ownerGaiaId_;
      }

      public final Network.PhotoOptions getPhotoOptions()
      {
        return this.photoOptions_;
      }

      @Deprecated
      public final boolean getReturnComments()
      {
        return this.returnComments_;
      }

      @Deprecated
      public final boolean getReturnShapes()
      {
        return this.returnShapes_;
      }

      @Deprecated
      public final boolean getReturnUrls()
      {
        return this.returnUrls_;
      }

      public final Network.GetStreamPhotosRequest.PhotosSortBy getSortBy()
      {
        return this.sortBy_;
      }

      public final String getStreamId()
      {
        Object localObject = this.streamId_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.streamId_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final boolean hasFocusObfuscatedOwnerId()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasIfModifiedSince()
      {
        if ((0x200 & this.bitField0_) == 512);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasMaxPhotoCount()
      {
        if ((0x40 & this.bitField0_) == 64);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasOffset()
      {
        if ((0x80 & this.bitField0_) == 128);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasOwnerGaiaId()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean hasPhotoOptions()
      {
        if ((0x400 & this.bitField0_) == 1024);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      @Deprecated
      public final boolean hasReturnComments()
      {
        if ((0x10 & this.bitField0_) == 16);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      @Deprecated
      public final boolean hasReturnShapes()
      {
        if ((0x20 & this.bitField0_) == 32);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      @Deprecated
      public final boolean hasReturnUrls()
      {
        if ((0x8 & this.bitField0_) == 8);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasSortBy()
      {
        if ((0x100 & this.bitField0_) == 256);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasStreamId()
      {
        if ((0x4 & this.bitField0_) == 4);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Network.GetStreamPhotosRequest paramGetStreamPhotosRequest)
      {
        if (paramGetStreamPhotosRequest == Network.GetStreamPhotosRequest.getDefaultInstance());
        do
        {
          return this;
          if (paramGetStreamPhotosRequest.hasOwnerGaiaId())
            setOwnerGaiaId(paramGetStreamPhotosRequest.getOwnerGaiaId());
          if (paramGetStreamPhotosRequest.hasFocusObfuscatedOwnerId())
            setFocusObfuscatedOwnerId(paramGetStreamPhotosRequest.getFocusObfuscatedOwnerId());
          if (paramGetStreamPhotosRequest.hasStreamId())
            setStreamId(paramGetStreamPhotosRequest.getStreamId());
          if (paramGetStreamPhotosRequest.hasReturnUrls())
            setReturnUrls(paramGetStreamPhotosRequest.getReturnUrls());
          if (paramGetStreamPhotosRequest.hasReturnComments())
            setReturnComments(paramGetStreamPhotosRequest.getReturnComments());
          if (paramGetStreamPhotosRequest.hasReturnShapes())
            setReturnShapes(paramGetStreamPhotosRequest.getReturnShapes());
          if (paramGetStreamPhotosRequest.hasMaxPhotoCount())
            setMaxPhotoCount(paramGetStreamPhotosRequest.getMaxPhotoCount());
          if (paramGetStreamPhotosRequest.hasOffset())
            setOffset(paramGetStreamPhotosRequest.getOffset());
          if (paramGetStreamPhotosRequest.hasSortBy())
            setSortBy(paramGetStreamPhotosRequest.getSortBy());
          if (paramGetStreamPhotosRequest.hasIfModifiedSince())
            setIfModifiedSince(paramGetStreamPhotosRequest.getIfModifiedSince());
        }
        while (!paramGetStreamPhotosRequest.hasPhotoOptions());
        Network.PhotoOptions localPhotoOptions = paramGetStreamPhotosRequest.getPhotoOptions();
        if (((0x400 & this.bitField0_) == 1024) && (this.photoOptions_ != Network.PhotoOptions.getDefaultInstance()));
        for (this.photoOptions_ = Network.PhotoOptions.newBuilder(this.photoOptions_).mergeFrom(localPhotoOptions).buildPartial(); ; this.photoOptions_ = localPhotoOptions)
        {
          this.bitField0_ = (0x400 | this.bitField0_);
          break;
        }
      }

      public final Builder setFocusObfuscatedOwnerId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x2 | this.bitField0_);
        this.focusObfuscatedOwnerId_ = paramString;
        return this;
      }

      public final Builder setIfModifiedSince(long paramLong)
      {
        this.bitField0_ = (0x200 | this.bitField0_);
        this.ifModifiedSince_ = paramLong;
        return this;
      }

      public final Builder setMaxPhotoCount(int paramInt)
      {
        this.bitField0_ = (0x40 | this.bitField0_);
        this.maxPhotoCount_ = paramInt;
        return this;
      }

      public final Builder setOffset(int paramInt)
      {
        this.bitField0_ = (0x80 | this.bitField0_);
        this.offset_ = paramInt;
        return this;
      }

      public final Builder setOwnerGaiaId(long paramLong)
      {
        this.bitField0_ = (0x1 | this.bitField0_);
        this.ownerGaiaId_ = paramLong;
        return this;
      }

      public final Builder setPhotoOptions(Network.PhotoOptions.Builder paramBuilder)
      {
        this.photoOptions_ = paramBuilder.build();
        this.bitField0_ = (0x400 | this.bitField0_);
        return this;
      }

      public final Builder setPhotoOptions(Network.PhotoOptions paramPhotoOptions)
      {
        if (paramPhotoOptions == null)
          throw new NullPointerException();
        this.photoOptions_ = paramPhotoOptions;
        this.bitField0_ = (0x400 | this.bitField0_);
        return this;
      }

      @Deprecated
      public final Builder setReturnComments(boolean paramBoolean)
      {
        this.bitField0_ = (0x10 | this.bitField0_);
        this.returnComments_ = paramBoolean;
        return this;
      }

      @Deprecated
      public final Builder setReturnShapes(boolean paramBoolean)
      {
        this.bitField0_ = (0x20 | this.bitField0_);
        this.returnShapes_ = paramBoolean;
        return this;
      }

      @Deprecated
      public final Builder setReturnUrls(boolean paramBoolean)
      {
        this.bitField0_ = (0x8 | this.bitField0_);
        this.returnUrls_ = paramBoolean;
        return this;
      }

      public final Builder setSortBy(Network.GetStreamPhotosRequest.PhotosSortBy paramPhotosSortBy)
      {
        if (paramPhotosSortBy == null)
          throw new NullPointerException();
        this.bitField0_ = (0x100 | this.bitField0_);
        this.sortBy_ = paramPhotosSortBy;
        return this;
      }

      public final Builder setStreamId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x4 | this.bitField0_);
        this.streamId_ = paramString;
        return this;
      }
    }

    public static enum PhotosSortBy
      implements Internal.EnumLite
    {
      private static Internal.EnumLiteMap<PhotosSortBy> internalValueMap = new Internal.EnumLiteMap()
      {
      };
      private final int value;

      static
      {
        PhotosSortBy[] arrayOfPhotosSortBy = new PhotosSortBy[2];
        arrayOfPhotosSortBy[0] = TIMESTAMP;
        arrayOfPhotosSortBy[1] = UPLOAD_TIME;
      }

      private PhotosSortBy(int paramInt1, int paramInt2)
      {
        this.value = paramInt1;
      }

      public static PhotosSortBy valueOf(int paramInt)
      {
        PhotosSortBy localPhotosSortBy;
        switch (paramInt)
        {
        default:
          localPhotosSortBy = null;
        case 0:
        case 1:
        }
        while (true)
        {
          return localPhotosSortBy;
          localPhotosSortBy = TIMESTAMP;
          continue;
          localPhotosSortBy = UPLOAD_TIME;
        }
      }

      public final int getNumber()
      {
        return this.value;
      }
    }
  }

  public static abstract interface GetStreamPhotosRequestOrBuilder extends MessageLiteOrBuilder
  {
    public abstract String getFocusObfuscatedOwnerId();

    public abstract long getIfModifiedSince();

    public abstract int getMaxPhotoCount();

    public abstract int getOffset();

    public abstract long getOwnerGaiaId();

    public abstract Network.PhotoOptions getPhotoOptions();

    @Deprecated
    public abstract boolean getReturnComments();

    @Deprecated
    public abstract boolean getReturnShapes();

    @Deprecated
    public abstract boolean getReturnUrls();

    public abstract Network.GetStreamPhotosRequest.PhotosSortBy getSortBy();

    public abstract String getStreamId();

    public abstract boolean hasFocusObfuscatedOwnerId();

    public abstract boolean hasIfModifiedSince();

    public abstract boolean hasMaxPhotoCount();

    public abstract boolean hasOffset();

    public abstract boolean hasOwnerGaiaId();

    public abstract boolean hasPhotoOptions();

    @Deprecated
    public abstract boolean hasReturnComments();

    @Deprecated
    public abstract boolean hasReturnShapes();

    @Deprecated
    public abstract boolean hasReturnUrls();

    public abstract boolean hasSortBy();

    public abstract boolean hasStreamId();
  }

  public static final class GetStreamPhotosResponse extends GeneratedMessageLite
    implements Network.GetStreamPhotosResponseOrBuilder
  {
    private static final GetStreamPhotosResponse defaultInstance;
    private static final long serialVersionUID;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private List<Data.MobilePhoto> photo_;

    static
    {
      GetStreamPhotosResponse localGetStreamPhotosResponse = new GetStreamPhotosResponse();
      defaultInstance = localGetStreamPhotosResponse;
      localGetStreamPhotosResponse.photo_ = Collections.emptyList();
    }

    private GetStreamPhotosResponse()
    {
    }

    private GetStreamPhotosResponse(Builder paramBuilder)
    {
      super();
    }

    public static GetStreamPhotosResponse getDefaultInstance()
    {
      return defaultInstance;
    }

    public final GetStreamPhotosResponse getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final Data.MobilePhoto getPhoto(int paramInt)
    {
      return (Data.MobilePhoto)this.photo_.get(paramInt);
    }

    public final int getPhotoCount()
    {
      return this.photo_.size();
    }

    public final List<Data.MobilePhoto> getPhotoList()
    {
      return this.photo_;
    }

    public final Data.MobilePhotoOrBuilder getPhotoOrBuilder(int paramInt)
    {
      return (Data.MobilePhotoOrBuilder)this.photo_.get(paramInt);
    }

    public final List<? extends Data.MobilePhotoOrBuilder> getPhotoOrBuilderList()
    {
      return this.photo_;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int j;
      for (int m = i; ; m = j)
      {
        return m;
        j = 0;
        for (int k = 0; k < this.photo_.size(); k++)
          j += CodedOutputStream.computeMessageSize(1, (MessageLite)this.photo_.get(k));
        this.memoizedSerializedSize = j;
      }
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        for (int k = 0; ; k++)
        {
          if (k >= getPhotoCount())
            break label61;
          if (!getPhoto(k).isInitialized())
          {
            this.memoizedIsInitialized = 0;
            i = 0;
            break;
          }
        }
        label61: this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      for (int i = 0; i < this.photo_.size(); i++)
        paramCodedOutputStream.writeMessage(1, (MessageLite)this.photo_.get(i));
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Network.GetStreamPhotosResponse, Builder>
      implements Network.GetStreamPhotosResponseOrBuilder
    {
      private int bitField0_;
      private List<Data.MobilePhoto> photo_ = Collections.emptyList();

      private Network.GetStreamPhotosResponse buildPartial()
      {
        Network.GetStreamPhotosResponse localGetStreamPhotosResponse = new Network.GetStreamPhotosResponse(this, (byte)0);
        if ((0x1 & this.bitField0_) == 1)
        {
          this.photo_ = Collections.unmodifiableList(this.photo_);
          this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        }
        Network.GetStreamPhotosResponse.access$41102(localGetStreamPhotosResponse, this.photo_);
        return localGetStreamPhotosResponse;
      }

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private void ensurePhotoIsMutable()
      {
        if ((0x1 & this.bitField0_) != 1)
        {
          this.photo_ = new ArrayList(this.photo_);
          this.bitField0_ = (0x1 | this.bitField0_);
        }
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 10:
          }
          Data.MobilePhoto.Builder localBuilder = Data.MobilePhoto.newBuilder();
          paramCodedInputStream.readMessage(localBuilder, paramExtensionRegistryLite);
          addPhoto(localBuilder.buildPartial());
        }
      }

      public final Builder addAllPhoto(Iterable<? extends Data.MobilePhoto> paramIterable)
      {
        ensurePhotoIsMutable();
        GeneratedMessageLite.Builder.addAll(paramIterable, this.photo_);
        return this;
      }

      public final Builder addPhoto(int paramInt, Data.MobilePhoto.Builder paramBuilder)
      {
        ensurePhotoIsMutable();
        this.photo_.add(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder addPhoto(int paramInt, Data.MobilePhoto paramMobilePhoto)
      {
        if (paramMobilePhoto == null)
          throw new NullPointerException();
        ensurePhotoIsMutable();
        this.photo_.add(paramInt, paramMobilePhoto);
        return this;
      }

      public final Builder addPhoto(Data.MobilePhoto.Builder paramBuilder)
      {
        ensurePhotoIsMutable();
        this.photo_.add(paramBuilder.build());
        return this;
      }

      public final Builder addPhoto(Data.MobilePhoto paramMobilePhoto)
      {
        if (paramMobilePhoto == null)
          throw new NullPointerException();
        ensurePhotoIsMutable();
        this.photo_.add(paramMobilePhoto);
        return this;
      }

      public final Builder clear()
      {
        super.clear();
        this.photo_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        return this;
      }

      public final Builder clearPhoto()
      {
        this.photo_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        return this;
      }

      public final Network.GetStreamPhotosResponse getDefaultInstanceForType()
      {
        return Network.GetStreamPhotosResponse.getDefaultInstance();
      }

      public final Data.MobilePhoto getPhoto(int paramInt)
      {
        return (Data.MobilePhoto)this.photo_.get(paramInt);
      }

      public final int getPhotoCount()
      {
        return this.photo_.size();
      }

      public final List<Data.MobilePhoto> getPhotoList()
      {
        return Collections.unmodifiableList(this.photo_);
      }

      public final boolean isInitialized()
      {
        int i = 0;
        if (i < getPhotoCount())
          if (getPhoto(i).isInitialized());
        for (boolean bool = false; ; bool = true)
        {
          return bool;
          i++;
          break;
        }
      }

      public final Builder mergeFrom(Network.GetStreamPhotosResponse paramGetStreamPhotosResponse)
      {
        if (paramGetStreamPhotosResponse == Network.GetStreamPhotosResponse.getDefaultInstance());
        while (true)
        {
          return this;
          if (!paramGetStreamPhotosResponse.photo_.isEmpty())
            if (this.photo_.isEmpty())
            {
              this.photo_ = paramGetStreamPhotosResponse.photo_;
              this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
            }
            else
            {
              ensurePhotoIsMutable();
              this.photo_.addAll(paramGetStreamPhotosResponse.photo_);
            }
        }
      }

      public final Builder setPhoto(int paramInt, Data.MobilePhoto.Builder paramBuilder)
      {
        ensurePhotoIsMutable();
        this.photo_.set(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder setPhoto(int paramInt, Data.MobilePhoto paramMobilePhoto)
      {
        if (paramMobilePhoto == null)
          throw new NullPointerException();
        ensurePhotoIsMutable();
        this.photo_.set(paramInt, paramMobilePhoto);
        return this;
      }
    }
  }

  public static abstract interface GetStreamPhotosResponseOrBuilder extends MessageLiteOrBuilder
  {
    public abstract Data.MobilePhoto getPhoto(int paramInt);

    public abstract int getPhotoCount();

    public abstract List<Data.MobilePhoto> getPhotoList();
  }

  public static final class GetUnreadNotificationsCountRequest extends GeneratedMessageLite
    implements Network.GetUnreadNotificationsCountRequestOrBuilder
  {
    private static final GetUnreadNotificationsCountRequest defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private boolean coalesceCircleNotifications_;
    private List<NotificationEnums.NotificationType> includedNotificationType_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;

    static
    {
      GetUnreadNotificationsCountRequest localGetUnreadNotificationsCountRequest = new GetUnreadNotificationsCountRequest();
      defaultInstance = localGetUnreadNotificationsCountRequest;
      localGetUnreadNotificationsCountRequest.coalesceCircleNotifications_ = false;
      localGetUnreadNotificationsCountRequest.includedNotificationType_ = Collections.emptyList();
    }

    private GetUnreadNotificationsCountRequest()
    {
    }

    private GetUnreadNotificationsCountRequest(Builder paramBuilder)
    {
      super();
    }

    public static GetUnreadNotificationsCountRequest getDefaultInstance()
    {
      return defaultInstance;
    }

    public final boolean getCoalesceCircleNotifications()
    {
      return this.coalesceCircleNotifications_;
    }

    public final GetUnreadNotificationsCountRequest getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final NotificationEnums.NotificationType getIncludedNotificationType(int paramInt)
    {
      return (NotificationEnums.NotificationType)this.includedNotificationType_.get(paramInt);
    }

    public final int getIncludedNotificationTypeCount()
    {
      return this.includedNotificationType_.size();
    }

    public final List<NotificationEnums.NotificationType> getIncludedNotificationTypeList()
    {
      return this.includedNotificationType_;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int i1;
      for (int i2 = i; ; i2 = i1)
      {
        return i2;
        int j = 0x1 & this.bitField0_;
        int k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeBoolSize(1, this.coalesceCircleNotifications_);
        int m = 0;
        for (int n = 0; n < this.includedNotificationType_.size(); n++)
          m += CodedOutputStream.computeInt32SizeNoTag(((NotificationEnums.NotificationType)this.includedNotificationType_.get(n)).getNumber());
        i1 = k + m + 1 * this.includedNotificationType_.size();
        this.memoizedSerializedSize = i1;
      }
    }

    public final boolean hasCoalesceCircleNotifications()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeBool(1, this.coalesceCircleNotifications_);
      for (int i = 0; i < this.includedNotificationType_.size(); i++)
        paramCodedOutputStream.writeEnum(2, ((NotificationEnums.NotificationType)this.includedNotificationType_.get(i)).getNumber());
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Network.GetUnreadNotificationsCountRequest, Builder>
      implements Network.GetUnreadNotificationsCountRequestOrBuilder
    {
      private int bitField0_;
      private boolean coalesceCircleNotifications_;
      private List<NotificationEnums.NotificationType> includedNotificationType_ = Collections.emptyList();

      private Network.GetUnreadNotificationsCountRequest buildPartial()
      {
        Network.GetUnreadNotificationsCountRequest localGetUnreadNotificationsCountRequest = new Network.GetUnreadNotificationsCountRequest(this, (byte)0);
        int i = 0x1 & this.bitField0_;
        int j = 0;
        if (i == 1)
          j = 1;
        Network.GetUnreadNotificationsCountRequest.access$46202(localGetUnreadNotificationsCountRequest, this.coalesceCircleNotifications_);
        if ((0x2 & this.bitField0_) == 2)
        {
          this.includedNotificationType_ = Collections.unmodifiableList(this.includedNotificationType_);
          this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        }
        Network.GetUnreadNotificationsCountRequest.access$46302(localGetUnreadNotificationsCountRequest, this.includedNotificationType_);
        Network.GetUnreadNotificationsCountRequest.access$46402(localGetUnreadNotificationsCountRequest, j);
        return localGetUnreadNotificationsCountRequest;
      }

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private void ensureIncludedNotificationTypeIsMutable()
      {
        if ((0x2 & this.bitField0_) != 2)
        {
          this.includedNotificationType_ = new ArrayList(this.includedNotificationType_);
          this.bitField0_ = (0x2 | this.bitField0_);
        }
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 8:
            this.bitField0_ = (0x1 | this.bitField0_);
            this.coalesceCircleNotifications_ = paramCodedInputStream.readBool();
            break;
          case 16:
            NotificationEnums.NotificationType localNotificationType2 = NotificationEnums.NotificationType.valueOf(paramCodedInputStream.readEnum());
            if (localNotificationType2 == null)
              continue;
            addIncludedNotificationType(localNotificationType2);
            break;
          case 18:
          }
          int j = paramCodedInputStream.pushLimit(paramCodedInputStream.readRawVarint32());
          while (paramCodedInputStream.getBytesUntilLimit() > 0)
          {
            NotificationEnums.NotificationType localNotificationType1 = NotificationEnums.NotificationType.valueOf(paramCodedInputStream.readEnum());
            if (localNotificationType1 != null)
              addIncludedNotificationType(localNotificationType1);
          }
          paramCodedInputStream.popLimit(j);
        }
      }

      public final Builder addAllIncludedNotificationType(Iterable<? extends NotificationEnums.NotificationType> paramIterable)
      {
        ensureIncludedNotificationTypeIsMutable();
        GeneratedMessageLite.Builder.addAll(paramIterable, this.includedNotificationType_);
        return this;
      }

      public final Builder addIncludedNotificationType(NotificationEnums.NotificationType paramNotificationType)
      {
        if (paramNotificationType == null)
          throw new NullPointerException();
        ensureIncludedNotificationTypeIsMutable();
        this.includedNotificationType_.add(paramNotificationType);
        return this;
      }

      public final Builder clear()
      {
        super.clear();
        this.coalesceCircleNotifications_ = false;
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.includedNotificationType_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        return this;
      }

      public final Builder clearCoalesceCircleNotifications()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.coalesceCircleNotifications_ = false;
        return this;
      }

      public final Builder clearIncludedNotificationType()
      {
        this.includedNotificationType_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        return this;
      }

      public final boolean getCoalesceCircleNotifications()
      {
        return this.coalesceCircleNotifications_;
      }

      public final Network.GetUnreadNotificationsCountRequest getDefaultInstanceForType()
      {
        return Network.GetUnreadNotificationsCountRequest.getDefaultInstance();
      }

      public final NotificationEnums.NotificationType getIncludedNotificationType(int paramInt)
      {
        return (NotificationEnums.NotificationType)this.includedNotificationType_.get(paramInt);
      }

      public final int getIncludedNotificationTypeCount()
      {
        return this.includedNotificationType_.size();
      }

      public final List<NotificationEnums.NotificationType> getIncludedNotificationTypeList()
      {
        return Collections.unmodifiableList(this.includedNotificationType_);
      }

      public final boolean hasCoalesceCircleNotifications()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Network.GetUnreadNotificationsCountRequest paramGetUnreadNotificationsCountRequest)
      {
        if (paramGetUnreadNotificationsCountRequest == Network.GetUnreadNotificationsCountRequest.getDefaultInstance());
        while (true)
        {
          return this;
          if (paramGetUnreadNotificationsCountRequest.hasCoalesceCircleNotifications())
            setCoalesceCircleNotifications(paramGetUnreadNotificationsCountRequest.getCoalesceCircleNotifications());
          if (!paramGetUnreadNotificationsCountRequest.includedNotificationType_.isEmpty())
            if (this.includedNotificationType_.isEmpty())
            {
              this.includedNotificationType_ = paramGetUnreadNotificationsCountRequest.includedNotificationType_;
              this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
            }
            else
            {
              ensureIncludedNotificationTypeIsMutable();
              this.includedNotificationType_.addAll(paramGetUnreadNotificationsCountRequest.includedNotificationType_);
            }
        }
      }

      public final Builder setCoalesceCircleNotifications(boolean paramBoolean)
      {
        this.bitField0_ = (0x1 | this.bitField0_);
        this.coalesceCircleNotifications_ = paramBoolean;
        return this;
      }

      public final Builder setIncludedNotificationType(int paramInt, NotificationEnums.NotificationType paramNotificationType)
      {
        if (paramNotificationType == null)
          throw new NullPointerException();
        ensureIncludedNotificationTypeIsMutable();
        this.includedNotificationType_.set(paramInt, paramNotificationType);
        return this;
      }
    }
  }

  public static abstract interface GetUnreadNotificationsCountRequestOrBuilder extends MessageLiteOrBuilder
  {
    public abstract boolean getCoalesceCircleNotifications();

    public abstract NotificationEnums.NotificationType getIncludedNotificationType(int paramInt);

    public abstract int getIncludedNotificationTypeCount();

    public abstract List<NotificationEnums.NotificationType> getIncludedNotificationTypeList();

    public abstract boolean hasCoalesceCircleNotifications();
  }

  public static final class GetUnreadNotificationsCountResponse extends GeneratedMessageLite
    implements Network.GetUnreadNotificationsCountResponseOrBuilder
  {
    private static final GetUnreadNotificationsCountResponse defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private int unreadCount_;

    static
    {
      GetUnreadNotificationsCountResponse localGetUnreadNotificationsCountResponse = new GetUnreadNotificationsCountResponse();
      defaultInstance = localGetUnreadNotificationsCountResponse;
      localGetUnreadNotificationsCountResponse.unreadCount_ = 0;
    }

    private GetUnreadNotificationsCountResponse()
    {
    }

    private GetUnreadNotificationsCountResponse(Builder paramBuilder)
    {
      super();
    }

    public static GetUnreadNotificationsCountResponse getDefaultInstance()
    {
      return defaultInstance;
    }

    public final GetUnreadNotificationsCountResponse getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeInt32Size(1, this.unreadCount_);
        this.memoizedSerializedSize = k;
      }
    }

    public final int getUnreadCount()
    {
      return this.unreadCount_;
    }

    public final boolean hasUnreadCount()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeInt32(1, this.unreadCount_);
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Network.GetUnreadNotificationsCountResponse, Builder>
      implements Network.GetUnreadNotificationsCountResponseOrBuilder
    {
      private int bitField0_;
      private int unreadCount_;

      private Network.GetUnreadNotificationsCountResponse buildPartial()
      {
        Network.GetUnreadNotificationsCountResponse localGetUnreadNotificationsCountResponse = new Network.GetUnreadNotificationsCountResponse(this, (byte)0);
        int i = 0x1 & this.bitField0_;
        int j = 0;
        if (i == 1)
          j = 1;
        Network.GetUnreadNotificationsCountResponse.access$46802(localGetUnreadNotificationsCountResponse, this.unreadCount_);
        Network.GetUnreadNotificationsCountResponse.access$46902(localGetUnreadNotificationsCountResponse, j);
        return localGetUnreadNotificationsCountResponse;
      }

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 8:
          }
          this.bitField0_ = (0x1 | this.bitField0_);
          this.unreadCount_ = paramCodedInputStream.readInt32();
        }
      }

      public final Builder clear()
      {
        super.clear();
        this.unreadCount_ = 0;
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        return this;
      }

      public final Builder clearUnreadCount()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.unreadCount_ = 0;
        return this;
      }

      public final Network.GetUnreadNotificationsCountResponse getDefaultInstanceForType()
      {
        return Network.GetUnreadNotificationsCountResponse.getDefaultInstance();
      }

      public final int getUnreadCount()
      {
        return this.unreadCount_;
      }

      public final boolean hasUnreadCount()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Network.GetUnreadNotificationsCountResponse paramGetUnreadNotificationsCountResponse)
      {
        if (paramGetUnreadNotificationsCountResponse == Network.GetUnreadNotificationsCountResponse.getDefaultInstance());
        while (true)
        {
          return this;
          if (paramGetUnreadNotificationsCountResponse.hasUnreadCount())
            setUnreadCount(paramGetUnreadNotificationsCountResponse.getUnreadCount());
        }
      }

      public final Builder setUnreadCount(int paramInt)
      {
        this.bitField0_ = (0x1 | this.bitField0_);
        this.unreadCount_ = paramInt;
        return this;
      }
    }
  }

  public static abstract interface GetUnreadNotificationsCountResponseOrBuilder extends MessageLiteOrBuilder
  {
    public abstract int getUnreadCount();

    public abstract boolean hasUnreadCount();
  }

  public static final class InteractionsRequest extends GeneratedMessageLite
    implements Network.InteractionsRequestOrBuilder
  {
    private static final InteractionsRequest defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private List<Data.Interaction> interaction_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private Object number_;

    static
    {
      InteractionsRequest localInteractionsRequest = new InteractionsRequest();
      defaultInstance = localInteractionsRequest;
      localInteractionsRequest.number_ = "";
      localInteractionsRequest.interaction_ = Collections.emptyList();
    }

    private InteractionsRequest()
    {
    }

    private InteractionsRequest(Builder paramBuilder)
    {
      super();
    }

    public static InteractionsRequest getDefaultInstance()
    {
      return defaultInstance;
    }

    private ByteString getNumberBytes()
    {
      Object localObject = this.number_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.number_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public final InteractionsRequest getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final Data.Interaction getInteraction(int paramInt)
    {
      return (Data.Interaction)this.interaction_.get(paramInt);
    }

    public final int getInteractionCount()
    {
      return this.interaction_.size();
    }

    public final List<Data.Interaction> getInteractionList()
    {
      return this.interaction_;
    }

    public final Data.InteractionOrBuilder getInteractionOrBuilder(int paramInt)
    {
      return (Data.InteractionOrBuilder)this.interaction_.get(paramInt);
    }

    public final List<? extends Data.InteractionOrBuilder> getInteractionOrBuilderList()
    {
      return this.interaction_;
    }

    public final String getNumber()
    {
      Object localObject1 = this.number_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.number_ = str;
      }
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int n = i; ; n = k)
      {
        return n;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeBytesSize(1, getNumberBytes());
        for (int m = 0; m < this.interaction_.size(); m++)
          k += CodedOutputStream.computeMessageSize(2, (MessageLite)this.interaction_.get(m));
        this.memoizedSerializedSize = k;
      }
    }

    public final boolean hasNumber()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeBytes(1, getNumberBytes());
      for (int i = 0; i < this.interaction_.size(); i++)
        paramCodedOutputStream.writeMessage(2, (MessageLite)this.interaction_.get(i));
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Network.InteractionsRequest, Builder>
      implements Network.InteractionsRequestOrBuilder
    {
      private int bitField0_;
      private List<Data.Interaction> interaction_ = Collections.emptyList();
      private Object number_ = "";

      private Network.InteractionsRequest buildPartial()
      {
        Network.InteractionsRequest localInteractionsRequest = new Network.InteractionsRequest(this, (byte)0);
        int i = 0x1 & this.bitField0_;
        int j = 0;
        if (i == 1)
          j = 1;
        Network.InteractionsRequest.access$43102(localInteractionsRequest, this.number_);
        if ((0x2 & this.bitField0_) == 2)
        {
          this.interaction_ = Collections.unmodifiableList(this.interaction_);
          this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        }
        Network.InteractionsRequest.access$43202(localInteractionsRequest, this.interaction_);
        Network.InteractionsRequest.access$43302(localInteractionsRequest, j);
        return localInteractionsRequest;
      }

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private void ensureInteractionIsMutable()
      {
        if ((0x2 & this.bitField0_) != 2)
        {
          this.interaction_ = new ArrayList(this.interaction_);
          this.bitField0_ = (0x2 | this.bitField0_);
        }
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 10:
            this.bitField0_ = (0x1 | this.bitField0_);
            this.number_ = paramCodedInputStream.readBytes();
            break;
          case 18:
          }
          Data.Interaction.Builder localBuilder = Data.Interaction.newBuilder();
          paramCodedInputStream.readMessage(localBuilder, paramExtensionRegistryLite);
          addInteraction(localBuilder.buildPartial());
        }
      }

      public final Builder addAllInteraction(Iterable<? extends Data.Interaction> paramIterable)
      {
        ensureInteractionIsMutable();
        GeneratedMessageLite.Builder.addAll(paramIterable, this.interaction_);
        return this;
      }

      public final Builder addInteraction(int paramInt, Data.Interaction.Builder paramBuilder)
      {
        ensureInteractionIsMutable();
        this.interaction_.add(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder addInteraction(int paramInt, Data.Interaction paramInteraction)
      {
        if (paramInteraction == null)
          throw new NullPointerException();
        ensureInteractionIsMutable();
        this.interaction_.add(paramInt, paramInteraction);
        return this;
      }

      public final Builder addInteraction(Data.Interaction.Builder paramBuilder)
      {
        ensureInteractionIsMutable();
        this.interaction_.add(paramBuilder.build());
        return this;
      }

      public final Builder addInteraction(Data.Interaction paramInteraction)
      {
        if (paramInteraction == null)
          throw new NullPointerException();
        ensureInteractionIsMutable();
        this.interaction_.add(paramInteraction);
        return this;
      }

      public final Builder clear()
      {
        super.clear();
        this.number_ = "";
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.interaction_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        return this;
      }

      public final Builder clearInteraction()
      {
        this.interaction_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        return this;
      }

      public final Builder clearNumber()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.number_ = Network.InteractionsRequest.getDefaultInstance().getNumber();
        return this;
      }

      public final Network.InteractionsRequest getDefaultInstanceForType()
      {
        return Network.InteractionsRequest.getDefaultInstance();
      }

      public final Data.Interaction getInteraction(int paramInt)
      {
        return (Data.Interaction)this.interaction_.get(paramInt);
      }

      public final int getInteractionCount()
      {
        return this.interaction_.size();
      }

      public final List<Data.Interaction> getInteractionList()
      {
        return Collections.unmodifiableList(this.interaction_);
      }

      public final String getNumber()
      {
        Object localObject = this.number_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.number_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final boolean hasNumber()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Network.InteractionsRequest paramInteractionsRequest)
      {
        if (paramInteractionsRequest == Network.InteractionsRequest.getDefaultInstance());
        while (true)
        {
          return this;
          if (paramInteractionsRequest.hasNumber())
            setNumber(paramInteractionsRequest.getNumber());
          if (!paramInteractionsRequest.interaction_.isEmpty())
            if (this.interaction_.isEmpty())
            {
              this.interaction_ = paramInteractionsRequest.interaction_;
              this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
            }
            else
            {
              ensureInteractionIsMutable();
              this.interaction_.addAll(paramInteractionsRequest.interaction_);
            }
        }
      }

      public final Builder setInteraction(int paramInt, Data.Interaction.Builder paramBuilder)
      {
        ensureInteractionIsMutable();
        this.interaction_.set(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder setInteraction(int paramInt, Data.Interaction paramInteraction)
      {
        if (paramInteraction == null)
          throw new NullPointerException();
        ensureInteractionIsMutable();
        this.interaction_.set(paramInt, paramInteraction);
        return this;
      }

      public final Builder setNumber(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x1 | this.bitField0_);
        this.number_ = paramString;
        return this;
      }
    }
  }

  public static abstract interface InteractionsRequestOrBuilder extends MessageLiteOrBuilder
  {
    public abstract Data.Interaction getInteraction(int paramInt);

    public abstract int getInteractionCount();

    public abstract List<Data.Interaction> getInteractionList();

    public abstract String getNumber();

    public abstract boolean hasNumber();
  }

  public static final class InteractionsResponse extends GeneratedMessageLite
    implements Network.InteractionsResponseOrBuilder
  {
    private static final InteractionsResponse defaultInstance = new InteractionsResponse();
    private static final long serialVersionUID;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;

    private InteractionsResponse()
    {
    }

    private InteractionsResponse(Builder paramBuilder)
    {
      super();
    }

    public static InteractionsResponse getDefaultInstance()
    {
      return defaultInstance;
    }

    public final InteractionsResponse getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      while (true)
      {
        return i;
        this.memoizedSerializedSize = 0;
        i = 0;
      }
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Network.InteractionsResponse, Builder>
      implements Network.InteractionsResponseOrBuilder
    {
      private Network.InteractionsResponse buildPartial()
      {
        return new Network.InteractionsResponse(this, (byte)0);
      }

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        int i;
        do
        {
          i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
          case 0:
          }
        }
        while (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i));
        return this;
      }

      public final Builder clear()
      {
        super.clear();
        return this;
      }

      public final Network.InteractionsResponse getDefaultInstanceForType()
      {
        return Network.InteractionsResponse.getDefaultInstance();
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Network.InteractionsResponse paramInteractionsResponse)
      {
        if (paramInteractionsResponse == Network.InteractionsResponse.getDefaultInstance());
        return this;
      }
    }
  }

  public static abstract interface InteractionsResponseOrBuilder extends MessageLiteOrBuilder
  {
  }

  public static final class MarkActivityAsReadRequest extends GeneratedMessageLite
    implements Network.MarkActivityAsReadRequestOrBuilder
  {
    private static final MarkActivityAsReadRequest defaultInstance;
    private static final long serialVersionUID;
    private LazyStringList activityId_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;

    static
    {
      MarkActivityAsReadRequest localMarkActivityAsReadRequest = new MarkActivityAsReadRequest();
      defaultInstance = localMarkActivityAsReadRequest;
      localMarkActivityAsReadRequest.activityId_ = LazyStringArrayList.EMPTY;
    }

    private MarkActivityAsReadRequest()
    {
    }

    private MarkActivityAsReadRequest(Builder paramBuilder)
    {
      super();
    }

    public static MarkActivityAsReadRequest getDefaultInstance()
    {
      return defaultInstance;
    }

    public final String getActivityId(int paramInt)
    {
      return (String)this.activityId_.get(paramInt);
    }

    public final int getActivityIdCount()
    {
      return this.activityId_.size();
    }

    public final List<String> getActivityIdList()
    {
      return this.activityId_;
    }

    public final MarkActivityAsReadRequest getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int m;
      for (int n = i; ; n = m)
      {
        return n;
        int j = 0;
        for (int k = 0; k < this.activityId_.size(); k++)
          j += CodedOutputStream.computeBytesSizeNoTag(this.activityId_.getByteString(k));
        m = j + 0 + 1 * getActivityIdList().size();
        this.memoizedSerializedSize = m;
      }
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      for (int i = 0; i < this.activityId_.size(); i++)
        paramCodedOutputStream.writeBytes(1, this.activityId_.getByteString(i));
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Network.MarkActivityAsReadRequest, Builder>
      implements Network.MarkActivityAsReadRequestOrBuilder
    {
      private LazyStringList activityId_ = LazyStringArrayList.EMPTY;
      private int bitField0_;

      private Network.MarkActivityAsReadRequest buildPartial()
      {
        Network.MarkActivityAsReadRequest localMarkActivityAsReadRequest = new Network.MarkActivityAsReadRequest(this, (byte)0);
        if ((0x1 & this.bitField0_) == 1)
        {
          this.activityId_ = new UnmodifiableLazyStringList(this.activityId_);
          this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        }
        Network.MarkActivityAsReadRequest.access$48302(localMarkActivityAsReadRequest, this.activityId_);
        return localMarkActivityAsReadRequest;
      }

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private void ensureActivityIdIsMutable()
      {
        if ((0x1 & this.bitField0_) != 1)
        {
          this.activityId_ = new LazyStringArrayList(this.activityId_);
          this.bitField0_ = (0x1 | this.bitField0_);
        }
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 10:
          }
          ensureActivityIdIsMutable();
          this.activityId_.add(paramCodedInputStream.readBytes());
        }
      }

      public final Builder addActivityId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        ensureActivityIdIsMutable();
        this.activityId_.add(paramString);
        return this;
      }

      public final Builder addAllActivityId(Iterable<String> paramIterable)
      {
        ensureActivityIdIsMutable();
        GeneratedMessageLite.Builder.addAll(paramIterable, this.activityId_);
        return this;
      }

      public final Builder clear()
      {
        super.clear();
        this.activityId_ = LazyStringArrayList.EMPTY;
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        return this;
      }

      public final Builder clearActivityId()
      {
        this.activityId_ = LazyStringArrayList.EMPTY;
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        return this;
      }

      public final String getActivityId(int paramInt)
      {
        return (String)this.activityId_.get(paramInt);
      }

      public final int getActivityIdCount()
      {
        return this.activityId_.size();
      }

      public final List<String> getActivityIdList()
      {
        return Collections.unmodifiableList(this.activityId_);
      }

      public final Network.MarkActivityAsReadRequest getDefaultInstanceForType()
      {
        return Network.MarkActivityAsReadRequest.getDefaultInstance();
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Network.MarkActivityAsReadRequest paramMarkActivityAsReadRequest)
      {
        if (paramMarkActivityAsReadRequest == Network.MarkActivityAsReadRequest.getDefaultInstance());
        while (true)
        {
          return this;
          if (!paramMarkActivityAsReadRequest.activityId_.isEmpty())
            if (this.activityId_.isEmpty())
            {
              this.activityId_ = paramMarkActivityAsReadRequest.activityId_;
              this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
            }
            else
            {
              ensureActivityIdIsMutable();
              this.activityId_.addAll(paramMarkActivityAsReadRequest.activityId_);
            }
        }
      }

      public final Builder setActivityId(int paramInt, String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        ensureActivityIdIsMutable();
        this.activityId_.set(paramInt, paramString);
        return this;
      }
    }
  }

  public static abstract interface MarkActivityAsReadRequestOrBuilder extends MessageLiteOrBuilder
  {
    public abstract String getActivityId(int paramInt);

    public abstract int getActivityIdCount();

    public abstract List<String> getActivityIdList();
  }

  public static final class MarkActivityAsReadResponse extends GeneratedMessageLite
    implements Network.MarkActivityAsReadResponseOrBuilder
  {
    private static final MarkActivityAsReadResponse defaultInstance;
    private static final long serialVersionUID;
    private LazyStringList activityId_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;

    static
    {
      MarkActivityAsReadResponse localMarkActivityAsReadResponse = new MarkActivityAsReadResponse();
      defaultInstance = localMarkActivityAsReadResponse;
      localMarkActivityAsReadResponse.activityId_ = LazyStringArrayList.EMPTY;
    }

    private MarkActivityAsReadResponse()
    {
    }

    private MarkActivityAsReadResponse(Builder paramBuilder)
    {
      super();
    }

    public static MarkActivityAsReadResponse getDefaultInstance()
    {
      return defaultInstance;
    }

    public final String getActivityId(int paramInt)
    {
      return (String)this.activityId_.get(paramInt);
    }

    public final int getActivityIdCount()
    {
      return this.activityId_.size();
    }

    public final List<String> getActivityIdList()
    {
      return this.activityId_;
    }

    public final MarkActivityAsReadResponse getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int m;
      for (int n = i; ; n = m)
      {
        return n;
        int j = 0;
        for (int k = 0; k < this.activityId_.size(); k++)
          j += CodedOutputStream.computeBytesSizeNoTag(this.activityId_.getByteString(k));
        m = j + 0 + 1 * getActivityIdList().size();
        this.memoizedSerializedSize = m;
      }
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      for (int i = 0; i < this.activityId_.size(); i++)
        paramCodedOutputStream.writeBytes(1, this.activityId_.getByteString(i));
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Network.MarkActivityAsReadResponse, Builder>
      implements Network.MarkActivityAsReadResponseOrBuilder
    {
      private LazyStringList activityId_ = LazyStringArrayList.EMPTY;
      private int bitField0_;

      private Network.MarkActivityAsReadResponse buildPartial()
      {
        Network.MarkActivityAsReadResponse localMarkActivityAsReadResponse = new Network.MarkActivityAsReadResponse(this, (byte)0);
        if ((0x1 & this.bitField0_) == 1)
        {
          this.activityId_ = new UnmodifiableLazyStringList(this.activityId_);
          this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        }
        Network.MarkActivityAsReadResponse.access$48702(localMarkActivityAsReadResponse, this.activityId_);
        return localMarkActivityAsReadResponse;
      }

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private void ensureActivityIdIsMutable()
      {
        if ((0x1 & this.bitField0_) != 1)
        {
          this.activityId_ = new LazyStringArrayList(this.activityId_);
          this.bitField0_ = (0x1 | this.bitField0_);
        }
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 10:
          }
          ensureActivityIdIsMutable();
          this.activityId_.add(paramCodedInputStream.readBytes());
        }
      }

      public final Builder addActivityId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        ensureActivityIdIsMutable();
        this.activityId_.add(paramString);
        return this;
      }

      public final Builder addAllActivityId(Iterable<String> paramIterable)
      {
        ensureActivityIdIsMutable();
        GeneratedMessageLite.Builder.addAll(paramIterable, this.activityId_);
        return this;
      }

      public final Builder clear()
      {
        super.clear();
        this.activityId_ = LazyStringArrayList.EMPTY;
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        return this;
      }

      public final Builder clearActivityId()
      {
        this.activityId_ = LazyStringArrayList.EMPTY;
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        return this;
      }

      public final String getActivityId(int paramInt)
      {
        return (String)this.activityId_.get(paramInt);
      }

      public final int getActivityIdCount()
      {
        return this.activityId_.size();
      }

      public final List<String> getActivityIdList()
      {
        return Collections.unmodifiableList(this.activityId_);
      }

      public final Network.MarkActivityAsReadResponse getDefaultInstanceForType()
      {
        return Network.MarkActivityAsReadResponse.getDefaultInstance();
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Network.MarkActivityAsReadResponse paramMarkActivityAsReadResponse)
      {
        if (paramMarkActivityAsReadResponse == Network.MarkActivityAsReadResponse.getDefaultInstance());
        while (true)
        {
          return this;
          if (!paramMarkActivityAsReadResponse.activityId_.isEmpty())
            if (this.activityId_.isEmpty())
            {
              this.activityId_ = paramMarkActivityAsReadResponse.activityId_;
              this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
            }
            else
            {
              ensureActivityIdIsMutable();
              this.activityId_.addAll(paramMarkActivityAsReadResponse.activityId_);
            }
        }
      }

      public final Builder setActivityId(int paramInt, String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        ensureActivityIdIsMutable();
        this.activityId_.set(paramInt, paramString);
        return this;
      }
    }
  }

  public static abstract interface MarkActivityAsReadResponseOrBuilder extends MessageLiteOrBuilder
  {
    public abstract String getActivityId(int paramInt);

    public abstract int getActivityIdCount();

    public abstract List<String> getActivityIdList();
  }

  public static final class MediaReference extends GeneratedMessageLite
    implements Network.MediaReferenceOrBuilder
  {
    private static final MediaReference defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private Object clientAssignedId_;
    private MediaType mediaType_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private PicasaPhotoId picasaPhotoId_;
    private ByteString thumbnailBytes_;

    static
    {
      MediaReference localMediaReference = new MediaReference();
      defaultInstance = localMediaReference;
      localMediaReference.clientAssignedId_ = "";
      localMediaReference.picasaPhotoId_ = PicasaPhotoId.getDefaultInstance();
      localMediaReference.thumbnailBytes_ = ByteString.EMPTY;
      localMediaReference.mediaType_ = MediaType.PHOTO;
    }

    private MediaReference()
    {
    }

    private MediaReference(Builder paramBuilder)
    {
      super();
    }

    private ByteString getClientAssignedIdBytes()
    {
      Object localObject = this.clientAssignedId_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.clientAssignedId_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static MediaReference getDefaultInstance()
    {
      return defaultInstance;
    }

    public static Builder newBuilder()
    {
      return Builder.access$65200();
    }

    public static Builder newBuilder(MediaReference paramMediaReference)
    {
      return Builder.access$65200().mergeFrom(paramMediaReference);
    }

    public final String getClientAssignedId()
    {
      Object localObject1 = this.clientAssignedId_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.clientAssignedId_ = str;
      }
    }

    public final MediaReference getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final MediaType getMediaType()
    {
      return this.mediaType_;
    }

    public final PicasaPhotoId getPicasaPhotoId()
    {
      return this.picasaPhotoId_;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeBytesSize(1, getClientAssignedIdBytes());
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeMessageSize(2, this.picasaPhotoId_);
        if ((0x4 & this.bitField0_) == 4)
          k += CodedOutputStream.computeBytesSize(3, this.thumbnailBytes_);
        if ((0x8 & this.bitField0_) == 8)
          k += CodedOutputStream.computeEnumSize(4, this.mediaType_.getNumber());
        this.memoizedSerializedSize = k;
      }
    }

    public final ByteString getThumbnailBytes()
    {
      return this.thumbnailBytes_;
    }

    public final boolean hasClientAssignedId()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean hasMediaType()
    {
      if ((0x8 & this.bitField0_) == 8);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasPicasaPhotoId()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasThumbnailBytes()
    {
      if ((0x4 & this.bitField0_) == 4);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeBytes(1, getClientAssignedIdBytes());
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeMessage(2, this.picasaPhotoId_);
      if ((0x4 & this.bitField0_) == 4)
        paramCodedOutputStream.writeBytes(3, this.thumbnailBytes_);
      if ((0x8 & this.bitField0_) == 8)
        paramCodedOutputStream.writeEnum(4, this.mediaType_.getNumber());
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Network.MediaReference, Builder>
      implements Network.MediaReferenceOrBuilder
    {
      private int bitField0_;
      private Object clientAssignedId_ = "";
      private Network.MediaReference.MediaType mediaType_ = Network.MediaReference.MediaType.PHOTO;
      private Network.MediaReference.PicasaPhotoId picasaPhotoId_ = Network.MediaReference.PicasaPhotoId.getDefaultInstance();
      private ByteString thumbnailBytes_ = ByteString.EMPTY;

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 10:
            this.bitField0_ = (0x1 | this.bitField0_);
            this.clientAssignedId_ = paramCodedInputStream.readBytes();
            break;
          case 18:
            Network.MediaReference.PicasaPhotoId.Builder localBuilder = Network.MediaReference.PicasaPhotoId.newBuilder();
            if (hasPicasaPhotoId())
              localBuilder.mergeFrom(getPicasaPhotoId());
            paramCodedInputStream.readMessage(localBuilder, paramExtensionRegistryLite);
            setPicasaPhotoId(localBuilder.buildPartial());
            break;
          case 26:
            this.bitField0_ = (0x4 | this.bitField0_);
            this.thumbnailBytes_ = paramCodedInputStream.readBytes();
            break;
          case 32:
          }
          Network.MediaReference.MediaType localMediaType = Network.MediaReference.MediaType.valueOf(paramCodedInputStream.readEnum());
          if (localMediaType != null)
          {
            this.bitField0_ = (0x8 | this.bitField0_);
            this.mediaType_ = localMediaType;
          }
        }
      }

      public final Network.MediaReference build()
      {
        Network.MediaReference localMediaReference = buildPartial();
        if (!localMediaReference.isInitialized())
          throw new UninitializedMessageException();
        return localMediaReference;
      }

      public final Network.MediaReference buildPartial()
      {
        Network.MediaReference localMediaReference = new Network.MediaReference(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Network.MediaReference.access$65402(localMediaReference, this.clientAssignedId_);
        if ((i & 0x2) == 2)
          k |= 2;
        Network.MediaReference.access$65502(localMediaReference, this.picasaPhotoId_);
        if ((i & 0x4) == 4)
          k |= 4;
        Network.MediaReference.access$65602(localMediaReference, this.thumbnailBytes_);
        if ((i & 0x8) == 8)
          k |= 8;
        Network.MediaReference.access$65702(localMediaReference, this.mediaType_);
        Network.MediaReference.access$65802(localMediaReference, k);
        return localMediaReference;
      }

      public final Builder clear()
      {
        super.clear();
        this.clientAssignedId_ = "";
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.picasaPhotoId_ = Network.MediaReference.PicasaPhotoId.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.thumbnailBytes_ = ByteString.EMPTY;
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.mediaType_ = Network.MediaReference.MediaType.PHOTO;
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        return this;
      }

      public final Builder clearClientAssignedId()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.clientAssignedId_ = Network.MediaReference.getDefaultInstance().getClientAssignedId();
        return this;
      }

      public final Builder clearMediaType()
      {
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        this.mediaType_ = Network.MediaReference.MediaType.PHOTO;
        return this;
      }

      public final Builder clearPicasaPhotoId()
      {
        this.picasaPhotoId_ = Network.MediaReference.PicasaPhotoId.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        return this;
      }

      public final Builder clearThumbnailBytes()
      {
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.thumbnailBytes_ = Network.MediaReference.getDefaultInstance().getThumbnailBytes();
        return this;
      }

      public final String getClientAssignedId()
      {
        Object localObject = this.clientAssignedId_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.clientAssignedId_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final Network.MediaReference getDefaultInstanceForType()
      {
        return Network.MediaReference.getDefaultInstance();
      }

      public final Network.MediaReference.MediaType getMediaType()
      {
        return this.mediaType_;
      }

      public final Network.MediaReference.PicasaPhotoId getPicasaPhotoId()
      {
        return this.picasaPhotoId_;
      }

      public final ByteString getThumbnailBytes()
      {
        return this.thumbnailBytes_;
      }

      public final boolean hasClientAssignedId()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean hasMediaType()
      {
        if ((0x8 & this.bitField0_) == 8);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasPicasaPhotoId()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasThumbnailBytes()
      {
        if ((0x4 & this.bitField0_) == 4);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Network.MediaReference paramMediaReference)
      {
        if (paramMediaReference == Network.MediaReference.getDefaultInstance())
          return this;
        if (paramMediaReference.hasClientAssignedId())
          setClientAssignedId(paramMediaReference.getClientAssignedId());
        Network.MediaReference.PicasaPhotoId localPicasaPhotoId;
        if (paramMediaReference.hasPicasaPhotoId())
        {
          localPicasaPhotoId = paramMediaReference.getPicasaPhotoId();
          if (((0x2 & this.bitField0_) != 2) || (this.picasaPhotoId_ == Network.MediaReference.PicasaPhotoId.getDefaultInstance()))
            break label122;
        }
        label122: for (this.picasaPhotoId_ = Network.MediaReference.PicasaPhotoId.newBuilder(this.picasaPhotoId_).mergeFrom(localPicasaPhotoId).buildPartial(); ; this.picasaPhotoId_ = localPicasaPhotoId)
        {
          this.bitField0_ = (0x2 | this.bitField0_);
          if (paramMediaReference.hasThumbnailBytes())
            setThumbnailBytes(paramMediaReference.getThumbnailBytes());
          if (!paramMediaReference.hasMediaType())
            break;
          setMediaType(paramMediaReference.getMediaType());
          break;
        }
      }

      public final Builder setClientAssignedId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x1 | this.bitField0_);
        this.clientAssignedId_ = paramString;
        return this;
      }

      public final Builder setMediaType(Network.MediaReference.MediaType paramMediaType)
      {
        if (paramMediaType == null)
          throw new NullPointerException();
        this.bitField0_ = (0x8 | this.bitField0_);
        this.mediaType_ = paramMediaType;
        return this;
      }

      public final Builder setPicasaPhotoId(Network.MediaReference.PicasaPhotoId.Builder paramBuilder)
      {
        this.picasaPhotoId_ = paramBuilder.build();
        this.bitField0_ = (0x2 | this.bitField0_);
        return this;
      }

      public final Builder setPicasaPhotoId(Network.MediaReference.PicasaPhotoId paramPicasaPhotoId)
      {
        if (paramPicasaPhotoId == null)
          throw new NullPointerException();
        this.picasaPhotoId_ = paramPicasaPhotoId;
        this.bitField0_ = (0x2 | this.bitField0_);
        return this;
      }

      public final Builder setThumbnailBytes(ByteString paramByteString)
      {
        if (paramByteString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x4 | this.bitField0_);
        this.thumbnailBytes_ = paramByteString;
        return this;
      }
    }

    public static enum MediaType
      implements Internal.EnumLite
    {
      private static Internal.EnumLiteMap<MediaType> internalValueMap = new Internal.EnumLiteMap()
      {
      };
      private final int value;

      static
      {
        MediaType[] arrayOfMediaType = new MediaType[2];
        arrayOfMediaType[0] = PHOTO;
        arrayOfMediaType[1] = VIDEO;
      }

      private MediaType(int paramInt1, int paramInt2)
      {
        this.value = paramInt1;
      }

      public static MediaType valueOf(int paramInt)
      {
        MediaType localMediaType;
        switch (paramInt)
        {
        default:
          localMediaType = null;
        case 1:
        case 2:
        }
        while (true)
        {
          return localMediaType;
          localMediaType = PHOTO;
          continue;
          localMediaType = VIDEO;
        }
      }

      public final int getNumber()
      {
        return this.value;
      }
    }

    public static final class PicasaPhotoId extends GeneratedMessageLite
      implements Network.MediaReference.PicasaPhotoIdOrBuilder
    {
      private static final PicasaPhotoId defaultInstance;
      private static final long serialVersionUID;
      private int bitField0_;
      private Object focusObfuscatedOwnerId_;
      private byte memoizedIsInitialized = -1;
      private int memoizedSerializedSize = -1;
      private long ownerGaiaId_;
      private long photoId_;

      static
      {
        PicasaPhotoId localPicasaPhotoId = new PicasaPhotoId();
        defaultInstance = localPicasaPhotoId;
        localPicasaPhotoId.photoId_ = 0L;
        localPicasaPhotoId.ownerGaiaId_ = 0L;
        localPicasaPhotoId.focusObfuscatedOwnerId_ = "";
      }

      private PicasaPhotoId()
      {
      }

      private PicasaPhotoId(Builder paramBuilder)
      {
        super();
      }

      public static PicasaPhotoId getDefaultInstance()
      {
        return defaultInstance;
      }

      private ByteString getFocusObfuscatedOwnerIdBytes()
      {
        Object localObject = this.focusObfuscatedOwnerId_;
        ByteString localByteString;
        if ((localObject instanceof String))
        {
          localByteString = ByteString.copyFromUtf8((String)localObject);
          this.focusObfuscatedOwnerId_ = localByteString;
        }
        while (true)
        {
          return localByteString;
          localByteString = (ByteString)localObject;
        }
      }

      public static Builder newBuilder()
      {
        return Builder.access$64500();
      }

      public static Builder newBuilder(PicasaPhotoId paramPicasaPhotoId)
      {
        return Builder.access$64500().mergeFrom(paramPicasaPhotoId);
      }

      public final PicasaPhotoId getDefaultInstanceForType()
      {
        return defaultInstance;
      }

      public final String getFocusObfuscatedOwnerId()
      {
        Object localObject1 = this.focusObfuscatedOwnerId_;
        if ((localObject1 instanceof String));
        String str;
        for (Object localObject2 = (String)localObject1; ; localObject2 = str)
        {
          return localObject2;
          ByteString localByteString = (ByteString)localObject1;
          str = localByteString.toStringUtf8();
          if (Internal.isValidUtf8(localByteString))
            this.focusObfuscatedOwnerId_ = str;
        }
      }

      public final long getOwnerGaiaId()
      {
        return this.ownerGaiaId_;
      }

      public final long getPhotoId()
      {
        return this.photoId_;
      }

      public final int getSerializedSize()
      {
        int i = this.memoizedSerializedSize;
        if (i != -1);
        int k;
        for (int m = i; ; m = k)
        {
          return m;
          int j = 0x1 & this.bitField0_;
          k = 0;
          if (j == 1)
            k = 0 + CodedOutputStream.computeInt64Size(1, this.photoId_);
          if ((0x2 & this.bitField0_) == 2)
            k += CodedOutputStream.computeInt64Size(2, this.ownerGaiaId_);
          if ((0x4 & this.bitField0_) == 4)
            k += CodedOutputStream.computeBytesSize(3, getFocusObfuscatedOwnerIdBytes());
          this.memoizedSerializedSize = k;
        }
      }

      public final boolean hasFocusObfuscatedOwnerId()
      {
        if ((0x4 & this.bitField0_) == 4);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasOwnerGaiaId()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasPhotoId()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean isInitialized()
      {
        int i = 1;
        int j = this.memoizedIsInitialized;
        if (j != -1)
          if (j != i);
        while (true)
        {
          return i;
          i = 0;
          continue;
          this.memoizedIsInitialized = i;
        }
      }

      protected final Object writeReplace()
        throws ObjectStreamException
      {
        return super.writeReplace();
      }

      public final void writeTo(CodedOutputStream paramCodedOutputStream)
        throws IOException
      {
        getSerializedSize();
        if ((0x1 & this.bitField0_) == 1)
          paramCodedOutputStream.writeInt64(1, this.photoId_);
        if ((0x2 & this.bitField0_) == 2)
          paramCodedOutputStream.writeInt64(2, this.ownerGaiaId_);
        if ((0x4 & this.bitField0_) == 4)
          paramCodedOutputStream.writeBytes(3, getFocusObfuscatedOwnerIdBytes());
      }

      public static final class Builder extends GeneratedMessageLite.Builder<Network.MediaReference.PicasaPhotoId, Builder>
        implements Network.MediaReference.PicasaPhotoIdOrBuilder
      {
        private int bitField0_;
        private Object focusObfuscatedOwnerId_ = "";
        private long ownerGaiaId_;
        private long photoId_;

        private Builder clone()
        {
          return new Builder().mergeFrom(buildPartial());
        }

        private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
          throws IOException
        {
          while (true)
          {
            int i = paramCodedInputStream.readTag();
            switch (i)
            {
            default:
              if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
                continue;
            case 0:
              return this;
            case 8:
              this.bitField0_ = (0x1 | this.bitField0_);
              this.photoId_ = paramCodedInputStream.readInt64();
              break;
            case 16:
              this.bitField0_ = (0x2 | this.bitField0_);
              this.ownerGaiaId_ = paramCodedInputStream.readInt64();
              break;
            case 26:
            }
            this.bitField0_ = (0x4 | this.bitField0_);
            this.focusObfuscatedOwnerId_ = paramCodedInputStream.readBytes();
          }
        }

        public final Network.MediaReference.PicasaPhotoId build()
        {
          Network.MediaReference.PicasaPhotoId localPicasaPhotoId = buildPartial();
          if (!localPicasaPhotoId.isInitialized())
            throw new UninitializedMessageException();
          return localPicasaPhotoId;
        }

        public final Network.MediaReference.PicasaPhotoId buildPartial()
        {
          Network.MediaReference.PicasaPhotoId localPicasaPhotoId = new Network.MediaReference.PicasaPhotoId(this, (byte)0);
          int i = this.bitField0_;
          int j = i & 0x1;
          int k = 0;
          if (j == 1)
            k = 1;
          Network.MediaReference.PicasaPhotoId.access$64702(localPicasaPhotoId, this.photoId_);
          if ((i & 0x2) == 2)
            k |= 2;
          Network.MediaReference.PicasaPhotoId.access$64802(localPicasaPhotoId, this.ownerGaiaId_);
          if ((i & 0x4) == 4)
            k |= 4;
          Network.MediaReference.PicasaPhotoId.access$64902(localPicasaPhotoId, this.focusObfuscatedOwnerId_);
          Network.MediaReference.PicasaPhotoId.access$65002(localPicasaPhotoId, k);
          return localPicasaPhotoId;
        }

        public final Builder clear()
        {
          super.clear();
          this.photoId_ = 0L;
          this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
          this.ownerGaiaId_ = 0L;
          this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
          this.focusObfuscatedOwnerId_ = "";
          this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
          return this;
        }

        public final Builder clearFocusObfuscatedOwnerId()
        {
          this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
          this.focusObfuscatedOwnerId_ = Network.MediaReference.PicasaPhotoId.getDefaultInstance().getFocusObfuscatedOwnerId();
          return this;
        }

        public final Builder clearOwnerGaiaId()
        {
          this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
          this.ownerGaiaId_ = 0L;
          return this;
        }

        public final Builder clearPhotoId()
        {
          this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
          this.photoId_ = 0L;
          return this;
        }

        public final Network.MediaReference.PicasaPhotoId getDefaultInstanceForType()
        {
          return Network.MediaReference.PicasaPhotoId.getDefaultInstance();
        }

        public final String getFocusObfuscatedOwnerId()
        {
          Object localObject = this.focusObfuscatedOwnerId_;
          String str;
          if (!(localObject instanceof String))
          {
            str = ((ByteString)localObject).toStringUtf8();
            this.focusObfuscatedOwnerId_ = str;
          }
          while (true)
          {
            return str;
            str = (String)localObject;
          }
        }

        public final long getOwnerGaiaId()
        {
          return this.ownerGaiaId_;
        }

        public final long getPhotoId()
        {
          return this.photoId_;
        }

        public final boolean hasFocusObfuscatedOwnerId()
        {
          if ((0x4 & this.bitField0_) == 4);
          for (boolean bool = true; ; bool = false)
            return bool;
        }

        public final boolean hasOwnerGaiaId()
        {
          if ((0x2 & this.bitField0_) == 2);
          for (boolean bool = true; ; bool = false)
            return bool;
        }

        public final boolean hasPhotoId()
        {
          int i = 1;
          if ((0x1 & this.bitField0_) == i);
          while (true)
          {
            return i;
            int j = 0;
          }
        }

        public final boolean isInitialized()
        {
          return true;
        }

        public final Builder mergeFrom(Network.MediaReference.PicasaPhotoId paramPicasaPhotoId)
        {
          if (paramPicasaPhotoId == Network.MediaReference.PicasaPhotoId.getDefaultInstance());
          while (true)
          {
            return this;
            if (paramPicasaPhotoId.hasPhotoId())
              setPhotoId(paramPicasaPhotoId.getPhotoId());
            if (paramPicasaPhotoId.hasOwnerGaiaId())
              setOwnerGaiaId(paramPicasaPhotoId.getOwnerGaiaId());
            if (paramPicasaPhotoId.hasFocusObfuscatedOwnerId())
              setFocusObfuscatedOwnerId(paramPicasaPhotoId.getFocusObfuscatedOwnerId());
          }
        }

        public final Builder setFocusObfuscatedOwnerId(String paramString)
        {
          if (paramString == null)
            throw new NullPointerException();
          this.bitField0_ = (0x4 | this.bitField0_);
          this.focusObfuscatedOwnerId_ = paramString;
          return this;
        }

        public final Builder setOwnerGaiaId(long paramLong)
        {
          this.bitField0_ = (0x2 | this.bitField0_);
          this.ownerGaiaId_ = paramLong;
          return this;
        }

        public final Builder setPhotoId(long paramLong)
        {
          this.bitField0_ = (0x1 | this.bitField0_);
          this.photoId_ = paramLong;
          return this;
        }
      }
    }

    public static abstract interface PicasaPhotoIdOrBuilder extends MessageLiteOrBuilder
    {
      public abstract String getFocusObfuscatedOwnerId();

      public abstract long getOwnerGaiaId();

      public abstract long getPhotoId();

      public abstract boolean hasFocusObfuscatedOwnerId();

      public abstract boolean hasOwnerGaiaId();

      public abstract boolean hasPhotoId();
    }
  }

  public static abstract interface MediaReferenceOrBuilder extends MessageLiteOrBuilder
  {
    public abstract String getClientAssignedId();

    public abstract Network.MediaReference.MediaType getMediaType();

    public abstract Network.MediaReference.PicasaPhotoId getPicasaPhotoId();

    public abstract ByteString getThumbnailBytes();

    public abstract boolean hasClientAssignedId();

    public abstract boolean hasMediaType();

    public abstract boolean hasPicasaPhotoId();

    public abstract boolean hasThumbnailBytes();
  }

  public static final class MissingActivity extends GeneratedMessageLite
    implements Network.MissingActivityOrBuilder
  {
    private static final MissingActivity defaultInstance;
    private static final long serialVersionUID;
    private Object activityId_;
    private int bitField0_;
    private ErrorCode errorCode_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;

    static
    {
      MissingActivity localMissingActivity = new MissingActivity();
      defaultInstance = localMissingActivity;
      localMissingActivity.activityId_ = "";
      localMissingActivity.errorCode_ = ErrorCode.NOT_FOUND;
    }

    private MissingActivity()
    {
    }

    private MissingActivity(Builder paramBuilder)
    {
      super();
    }

    private ByteString getActivityIdBytes()
    {
      Object localObject = this.activityId_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.activityId_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static MissingActivity getDefaultInstance()
    {
      return defaultInstance;
    }

    public static Builder newBuilder()
    {
      return Builder.access$7400();
    }

    public final String getActivityId()
    {
      Object localObject1 = this.activityId_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.activityId_ = str;
      }
    }

    public final MissingActivity getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final ErrorCode getErrorCode()
    {
      return this.errorCode_;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeBytesSize(1, getActivityIdBytes());
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeEnumSize(2, this.errorCode_.getNumber());
        this.memoizedSerializedSize = k;
      }
    }

    public final boolean hasActivityId()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean hasErrorCode()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeBytes(1, getActivityIdBytes());
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeEnum(2, this.errorCode_.getNumber());
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Network.MissingActivity, Builder>
      implements Network.MissingActivityOrBuilder
    {
      private Object activityId_ = "";
      private int bitField0_;
      private Network.MissingActivity.ErrorCode errorCode_ = Network.MissingActivity.ErrorCode.NOT_FOUND;

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 10:
            this.bitField0_ = (0x1 | this.bitField0_);
            this.activityId_ = paramCodedInputStream.readBytes();
            break;
          case 16:
          }
          Network.MissingActivity.ErrorCode localErrorCode = Network.MissingActivity.ErrorCode.valueOf(paramCodedInputStream.readEnum());
          if (localErrorCode != null)
          {
            this.bitField0_ = (0x2 | this.bitField0_);
            this.errorCode_ = localErrorCode;
          }
        }
      }

      public final Network.MissingActivity build()
      {
        Network.MissingActivity localMissingActivity = buildPartial();
        if (!localMissingActivity.isInitialized())
          throw new UninitializedMessageException();
        return localMissingActivity;
      }

      public final Network.MissingActivity buildPartial()
      {
        Network.MissingActivity localMissingActivity = new Network.MissingActivity(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Network.MissingActivity.access$7602(localMissingActivity, this.activityId_);
        if ((i & 0x2) == 2)
          k |= 2;
        Network.MissingActivity.access$7702(localMissingActivity, this.errorCode_);
        Network.MissingActivity.access$7802(localMissingActivity, k);
        return localMissingActivity;
      }

      public final Builder clear()
      {
        super.clear();
        this.activityId_ = "";
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.errorCode_ = Network.MissingActivity.ErrorCode.NOT_FOUND;
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        return this;
      }

      public final Builder clearActivityId()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.activityId_ = Network.MissingActivity.getDefaultInstance().getActivityId();
        return this;
      }

      public final Builder clearErrorCode()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.errorCode_ = Network.MissingActivity.ErrorCode.NOT_FOUND;
        return this;
      }

      public final String getActivityId()
      {
        Object localObject = this.activityId_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.activityId_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final Network.MissingActivity getDefaultInstanceForType()
      {
        return Network.MissingActivity.getDefaultInstance();
      }

      public final Network.MissingActivity.ErrorCode getErrorCode()
      {
        return this.errorCode_;
      }

      public final boolean hasActivityId()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean hasErrorCode()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Network.MissingActivity paramMissingActivity)
      {
        if (paramMissingActivity == Network.MissingActivity.getDefaultInstance());
        while (true)
        {
          return this;
          if (paramMissingActivity.hasActivityId())
            setActivityId(paramMissingActivity.getActivityId());
          if (paramMissingActivity.hasErrorCode())
            setErrorCode(paramMissingActivity.getErrorCode());
        }
      }

      public final Builder setActivityId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x1 | this.bitField0_);
        this.activityId_ = paramString;
        return this;
      }

      public final Builder setErrorCode(Network.MissingActivity.ErrorCode paramErrorCode)
      {
        if (paramErrorCode == null)
          throw new NullPointerException();
        this.bitField0_ = (0x2 | this.bitField0_);
        this.errorCode_ = paramErrorCode;
        return this;
      }
    }

    public static enum ErrorCode
      implements Internal.EnumLite
    {
      private static Internal.EnumLiteMap<ErrorCode> internalValueMap = new Internal.EnumLiteMap()
      {
      };
      private final int value;

      static
      {
        ErrorCode[] arrayOfErrorCode = new ErrorCode[2];
        arrayOfErrorCode[0] = NOT_FOUND;
        arrayOfErrorCode[1] = NO_PERMISSION;
      }

      private ErrorCode(int paramInt1, int paramInt2)
      {
        this.value = paramInt1;
      }

      public static ErrorCode valueOf(int paramInt)
      {
        ErrorCode localErrorCode;
        switch (paramInt)
        {
        default:
          localErrorCode = null;
        case 1:
        case 2:
        }
        while (true)
        {
          return localErrorCode;
          localErrorCode = NOT_FOUND;
          continue;
          localErrorCode = NO_PERMISSION;
        }
      }

      public final int getNumber()
      {
        return this.value;
      }
    }
  }

  public static abstract interface MissingActivityOrBuilder extends MessageLiteOrBuilder
  {
    public abstract String getActivityId();

    public abstract Network.MissingActivity.ErrorCode getErrorCode();

    public abstract boolean hasActivityId();

    public abstract boolean hasErrorCode();
  }

  public static final class NameTagApprovalRequest extends GeneratedMessageLite
    implements Network.NameTagApprovalRequestOrBuilder
  {
    private static final NameTagApprovalRequest defaultInstance;
    private static final long serialVersionUID;
    private boolean approve_;
    private int bitField0_;
    private Object focusObfuscatedOwnerId_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private long ownerGaiaId_;
    private long photoId_;
    private long shapeId_;

    static
    {
      NameTagApprovalRequest localNameTagApprovalRequest = new NameTagApprovalRequest();
      defaultInstance = localNameTagApprovalRequest;
      localNameTagApprovalRequest.ownerGaiaId_ = 0L;
      localNameTagApprovalRequest.focusObfuscatedOwnerId_ = "";
      localNameTagApprovalRequest.photoId_ = 0L;
      localNameTagApprovalRequest.approve_ = false;
      localNameTagApprovalRequest.shapeId_ = 0L;
    }

    private NameTagApprovalRequest()
    {
    }

    private NameTagApprovalRequest(Builder paramBuilder)
    {
      super();
    }

    public static NameTagApprovalRequest getDefaultInstance()
    {
      return defaultInstance;
    }

    private ByteString getFocusObfuscatedOwnerIdBytes()
    {
      Object localObject = this.focusObfuscatedOwnerId_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.focusObfuscatedOwnerId_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public final boolean getApprove()
    {
      return this.approve_;
    }

    public final NameTagApprovalRequest getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final String getFocusObfuscatedOwnerId()
    {
      Object localObject1 = this.focusObfuscatedOwnerId_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.focusObfuscatedOwnerId_ = str;
      }
    }

    public final long getOwnerGaiaId()
    {
      return this.ownerGaiaId_;
    }

    public final long getPhotoId()
    {
      return this.photoId_;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeInt64Size(1, this.ownerGaiaId_);
        if ((0x4 & this.bitField0_) == 4)
          k += CodedOutputStream.computeInt64Size(2, this.photoId_);
        if ((0x8 & this.bitField0_) == 8)
          k += CodedOutputStream.computeBoolSize(3, this.approve_);
        if ((0x10 & this.bitField0_) == 16)
          k += CodedOutputStream.computeInt64Size(4, this.shapeId_);
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeBytesSize(5, getFocusObfuscatedOwnerIdBytes());
        this.memoizedSerializedSize = k;
      }
    }

    public final long getShapeId()
    {
      return this.shapeId_;
    }

    public final boolean hasApprove()
    {
      if ((0x8 & this.bitField0_) == 8);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasFocusObfuscatedOwnerId()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasOwnerGaiaId()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean hasPhotoId()
    {
      if ((0x4 & this.bitField0_) == 4);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasShapeId()
    {
      if ((0x10 & this.bitField0_) == 16);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeInt64(1, this.ownerGaiaId_);
      if ((0x4 & this.bitField0_) == 4)
        paramCodedOutputStream.writeInt64(2, this.photoId_);
      if ((0x8 & this.bitField0_) == 8)
        paramCodedOutputStream.writeBool(3, this.approve_);
      if ((0x10 & this.bitField0_) == 16)
        paramCodedOutputStream.writeInt64(4, this.shapeId_);
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeBytes(5, getFocusObfuscatedOwnerIdBytes());
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Network.NameTagApprovalRequest, Builder>
      implements Network.NameTagApprovalRequestOrBuilder
    {
      private boolean approve_;
      private int bitField0_;
      private Object focusObfuscatedOwnerId_ = "";
      private long ownerGaiaId_;
      private long photoId_;
      private long shapeId_;

      private Network.NameTagApprovalRequest buildPartial()
      {
        Network.NameTagApprovalRequest localNameTagApprovalRequest = new Network.NameTagApprovalRequest(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Network.NameTagApprovalRequest.access$51002(localNameTagApprovalRequest, this.ownerGaiaId_);
        if ((i & 0x2) == 2)
          k |= 2;
        Network.NameTagApprovalRequest.access$51102(localNameTagApprovalRequest, this.focusObfuscatedOwnerId_);
        if ((i & 0x4) == 4)
          k |= 4;
        Network.NameTagApprovalRequest.access$51202(localNameTagApprovalRequest, this.photoId_);
        if ((i & 0x8) == 8)
          k |= 8;
        Network.NameTagApprovalRequest.access$51302(localNameTagApprovalRequest, this.approve_);
        if ((i & 0x10) == 16)
          k |= 16;
        Network.NameTagApprovalRequest.access$51402(localNameTagApprovalRequest, this.shapeId_);
        Network.NameTagApprovalRequest.access$51502(localNameTagApprovalRequest, k);
        return localNameTagApprovalRequest;
      }

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 8:
            this.bitField0_ = (0x1 | this.bitField0_);
            this.ownerGaiaId_ = paramCodedInputStream.readInt64();
            break;
          case 16:
            this.bitField0_ = (0x4 | this.bitField0_);
            this.photoId_ = paramCodedInputStream.readInt64();
            break;
          case 24:
            this.bitField0_ = (0x8 | this.bitField0_);
            this.approve_ = paramCodedInputStream.readBool();
            break;
          case 32:
            this.bitField0_ = (0x10 | this.bitField0_);
            this.shapeId_ = paramCodedInputStream.readInt64();
            break;
          case 42:
          }
          this.bitField0_ = (0x2 | this.bitField0_);
          this.focusObfuscatedOwnerId_ = paramCodedInputStream.readBytes();
        }
      }

      public final Builder clear()
      {
        super.clear();
        this.ownerGaiaId_ = 0L;
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.focusObfuscatedOwnerId_ = "";
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.photoId_ = 0L;
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.approve_ = false;
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        this.shapeId_ = 0L;
        this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        return this;
      }

      public final Builder clearApprove()
      {
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        this.approve_ = false;
        return this;
      }

      public final Builder clearFocusObfuscatedOwnerId()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.focusObfuscatedOwnerId_ = Network.NameTagApprovalRequest.getDefaultInstance().getFocusObfuscatedOwnerId();
        return this;
      }

      public final Builder clearOwnerGaiaId()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.ownerGaiaId_ = 0L;
        return this;
      }

      public final Builder clearPhotoId()
      {
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.photoId_ = 0L;
        return this;
      }

      public final Builder clearShapeId()
      {
        this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        this.shapeId_ = 0L;
        return this;
      }

      public final boolean getApprove()
      {
        return this.approve_;
      }

      public final Network.NameTagApprovalRequest getDefaultInstanceForType()
      {
        return Network.NameTagApprovalRequest.getDefaultInstance();
      }

      public final String getFocusObfuscatedOwnerId()
      {
        Object localObject = this.focusObfuscatedOwnerId_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.focusObfuscatedOwnerId_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final long getOwnerGaiaId()
      {
        return this.ownerGaiaId_;
      }

      public final long getPhotoId()
      {
        return this.photoId_;
      }

      public final long getShapeId()
      {
        return this.shapeId_;
      }

      public final boolean hasApprove()
      {
        if ((0x8 & this.bitField0_) == 8);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasFocusObfuscatedOwnerId()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasOwnerGaiaId()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean hasPhotoId()
      {
        if ((0x4 & this.bitField0_) == 4);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasShapeId()
      {
        if ((0x10 & this.bitField0_) == 16);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Network.NameTagApprovalRequest paramNameTagApprovalRequest)
      {
        if (paramNameTagApprovalRequest == Network.NameTagApprovalRequest.getDefaultInstance());
        while (true)
        {
          return this;
          if (paramNameTagApprovalRequest.hasOwnerGaiaId())
            setOwnerGaiaId(paramNameTagApprovalRequest.getOwnerGaiaId());
          if (paramNameTagApprovalRequest.hasFocusObfuscatedOwnerId())
            setFocusObfuscatedOwnerId(paramNameTagApprovalRequest.getFocusObfuscatedOwnerId());
          if (paramNameTagApprovalRequest.hasPhotoId())
            setPhotoId(paramNameTagApprovalRequest.getPhotoId());
          if (paramNameTagApprovalRequest.hasApprove())
            setApprove(paramNameTagApprovalRequest.getApprove());
          if (paramNameTagApprovalRequest.hasShapeId())
            setShapeId(paramNameTagApprovalRequest.getShapeId());
        }
      }

      public final Builder setApprove(boolean paramBoolean)
      {
        this.bitField0_ = (0x8 | this.bitField0_);
        this.approve_ = paramBoolean;
        return this;
      }

      public final Builder setFocusObfuscatedOwnerId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x2 | this.bitField0_);
        this.focusObfuscatedOwnerId_ = paramString;
        return this;
      }

      public final Builder setOwnerGaiaId(long paramLong)
      {
        this.bitField0_ = (0x1 | this.bitField0_);
        this.ownerGaiaId_ = paramLong;
        return this;
      }

      public final Builder setPhotoId(long paramLong)
      {
        this.bitField0_ = (0x4 | this.bitField0_);
        this.photoId_ = paramLong;
        return this;
      }

      public final Builder setShapeId(long paramLong)
      {
        this.bitField0_ = (0x10 | this.bitField0_);
        this.shapeId_ = paramLong;
        return this;
      }
    }
  }

  public static abstract interface NameTagApprovalRequestOrBuilder extends MessageLiteOrBuilder
  {
    public abstract boolean getApprove();

    public abstract String getFocusObfuscatedOwnerId();

    public abstract long getOwnerGaiaId();

    public abstract long getPhotoId();

    public abstract long getShapeId();

    public abstract boolean hasApprove();

    public abstract boolean hasFocusObfuscatedOwnerId();

    public abstract boolean hasOwnerGaiaId();

    public abstract boolean hasPhotoId();

    public abstract boolean hasShapeId();
  }

  public static final class NameTagApprovalResponse extends GeneratedMessageLite
    implements Network.NameTagApprovalResponseOrBuilder
  {
    private static final NameTagApprovalResponse defaultInstance = new NameTagApprovalResponse();
    private static final long serialVersionUID;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;

    private NameTagApprovalResponse()
    {
    }

    private NameTagApprovalResponse(Builder paramBuilder)
    {
      super();
    }

    public static NameTagApprovalResponse getDefaultInstance()
    {
      return defaultInstance;
    }

    public final NameTagApprovalResponse getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      while (true)
      {
        return i;
        this.memoizedSerializedSize = 0;
        i = 0;
      }
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Network.NameTagApprovalResponse, Builder>
      implements Network.NameTagApprovalResponseOrBuilder
    {
      private Network.NameTagApprovalResponse buildPartial()
      {
        return new Network.NameTagApprovalResponse(this, (byte)0);
      }

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        int i;
        do
        {
          i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
          case 0:
          }
        }
        while (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i));
        return this;
      }

      public final Builder clear()
      {
        super.clear();
        return this;
      }

      public final Network.NameTagApprovalResponse getDefaultInstanceForType()
      {
        return Network.NameTagApprovalResponse.getDefaultInstance();
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Network.NameTagApprovalResponse paramNameTagApprovalResponse)
      {
        if (paramNameTagApprovalResponse == Network.NameTagApprovalResponse.getDefaultInstance());
        return this;
      }
    }
  }

  public static abstract interface NameTagApprovalResponseOrBuilder extends MessageLiteOrBuilder
  {
  }

  public static final class NotificationSettingsRequest extends GeneratedMessageLite
    implements Network.NotificationSettingsRequestOrBuilder
  {
    private static final NotificationSettingsRequest defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private Data.NotificationChannel channel_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private Data.NotificationSettings notificationSettings_;
    private long userGaiaId_;

    static
    {
      NotificationSettingsRequest localNotificationSettingsRequest = new NotificationSettingsRequest();
      defaultInstance = localNotificationSettingsRequest;
      localNotificationSettingsRequest.userGaiaId_ = 0L;
      localNotificationSettingsRequest.notificationSettings_ = Data.NotificationSettings.getDefaultInstance();
      localNotificationSettingsRequest.channel_ = Data.NotificationChannel.EMAIL;
    }

    private NotificationSettingsRequest()
    {
    }

    private NotificationSettingsRequest(Builder paramBuilder)
    {
      super();
    }

    public static NotificationSettingsRequest getDefaultInstance()
    {
      return defaultInstance;
    }

    public final Data.NotificationChannel getChannel()
    {
      return this.channel_;
    }

    public final NotificationSettingsRequest getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final Data.NotificationSettings getNotificationSettings()
    {
      return this.notificationSettings_;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeInt64Size(1, this.userGaiaId_);
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeMessageSize(2, this.notificationSettings_);
        if ((0x4 & this.bitField0_) == 4)
          k += CodedOutputStream.computeEnumSize(3, this.channel_.getNumber());
        this.memoizedSerializedSize = k;
      }
    }

    @Deprecated
    public final long getUserGaiaId()
    {
      return this.userGaiaId_;
    }

    public final boolean hasChannel()
    {
      if ((0x4 & this.bitField0_) == 4);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasNotificationSettings()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    @Deprecated
    public final boolean hasUserGaiaId()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeInt64(1, this.userGaiaId_);
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeMessage(2, this.notificationSettings_);
      if ((0x4 & this.bitField0_) == 4)
        paramCodedOutputStream.writeEnum(3, this.channel_.getNumber());
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Network.NotificationSettingsRequest, Builder>
      implements Network.NotificationSettingsRequestOrBuilder
    {
      private int bitField0_;
      private Data.NotificationChannel channel_ = Data.NotificationChannel.EMAIL;
      private Data.NotificationSettings notificationSettings_ = Data.NotificationSettings.getDefaultInstance();
      private long userGaiaId_;

      private Network.NotificationSettingsRequest buildPartial()
      {
        Network.NotificationSettingsRequest localNotificationSettingsRequest = new Network.NotificationSettingsRequest(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Network.NotificationSettingsRequest.access$58502(localNotificationSettingsRequest, this.userGaiaId_);
        if ((i & 0x2) == 2)
          k |= 2;
        Network.NotificationSettingsRequest.access$58602(localNotificationSettingsRequest, this.notificationSettings_);
        if ((i & 0x4) == 4)
          k |= 4;
        Network.NotificationSettingsRequest.access$58702(localNotificationSettingsRequest, this.channel_);
        Network.NotificationSettingsRequest.access$58802(localNotificationSettingsRequest, k);
        return localNotificationSettingsRequest;
      }

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 8:
            this.bitField0_ = (0x1 | this.bitField0_);
            this.userGaiaId_ = paramCodedInputStream.readInt64();
            break;
          case 18:
            Data.NotificationSettings.Builder localBuilder = Data.NotificationSettings.newBuilder();
            if (hasNotificationSettings())
              localBuilder.mergeFrom(getNotificationSettings());
            paramCodedInputStream.readMessage(localBuilder, paramExtensionRegistryLite);
            setNotificationSettings(localBuilder.buildPartial());
            break;
          case 24:
          }
          Data.NotificationChannel localNotificationChannel = Data.NotificationChannel.valueOf(paramCodedInputStream.readEnum());
          if (localNotificationChannel != null)
          {
            this.bitField0_ = (0x4 | this.bitField0_);
            this.channel_ = localNotificationChannel;
          }
        }
      }

      public final Builder clear()
      {
        super.clear();
        this.userGaiaId_ = 0L;
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.notificationSettings_ = Data.NotificationSettings.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.channel_ = Data.NotificationChannel.EMAIL;
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        return this;
      }

      public final Builder clearChannel()
      {
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.channel_ = Data.NotificationChannel.EMAIL;
        return this;
      }

      public final Builder clearNotificationSettings()
      {
        this.notificationSettings_ = Data.NotificationSettings.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        return this;
      }

      @Deprecated
      public final Builder clearUserGaiaId()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.userGaiaId_ = 0L;
        return this;
      }

      public final Data.NotificationChannel getChannel()
      {
        return this.channel_;
      }

      public final Network.NotificationSettingsRequest getDefaultInstanceForType()
      {
        return Network.NotificationSettingsRequest.getDefaultInstance();
      }

      public final Data.NotificationSettings getNotificationSettings()
      {
        return this.notificationSettings_;
      }

      @Deprecated
      public final long getUserGaiaId()
      {
        return this.userGaiaId_;
      }

      public final boolean hasChannel()
      {
        if ((0x4 & this.bitField0_) == 4);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasNotificationSettings()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      @Deprecated
      public final boolean hasUserGaiaId()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Network.NotificationSettingsRequest paramNotificationSettingsRequest)
      {
        if (paramNotificationSettingsRequest == Network.NotificationSettingsRequest.getDefaultInstance())
          return this;
        if (paramNotificationSettingsRequest.hasUserGaiaId())
          setUserGaiaId(paramNotificationSettingsRequest.getUserGaiaId());
        Data.NotificationSettings localNotificationSettings;
        if (paramNotificationSettingsRequest.hasNotificationSettings())
        {
          localNotificationSettings = paramNotificationSettingsRequest.getNotificationSettings();
          if (((0x2 & this.bitField0_) != 2) || (this.notificationSettings_ == Data.NotificationSettings.getDefaultInstance()))
            break label104;
        }
        label104: for (this.notificationSettings_ = Data.NotificationSettings.newBuilder(this.notificationSettings_).mergeFrom(localNotificationSettings).buildPartial(); ; this.notificationSettings_ = localNotificationSettings)
        {
          this.bitField0_ = (0x2 | this.bitField0_);
          if (!paramNotificationSettingsRequest.hasChannel())
            break;
          setChannel(paramNotificationSettingsRequest.getChannel());
          break;
        }
      }

      public final Builder setChannel(Data.NotificationChannel paramNotificationChannel)
      {
        if (paramNotificationChannel == null)
          throw new NullPointerException();
        this.bitField0_ = (0x4 | this.bitField0_);
        this.channel_ = paramNotificationChannel;
        return this;
      }

      public final Builder setNotificationSettings(Data.NotificationSettings.Builder paramBuilder)
      {
        this.notificationSettings_ = paramBuilder.build();
        this.bitField0_ = (0x2 | this.bitField0_);
        return this;
      }

      public final Builder setNotificationSettings(Data.NotificationSettings paramNotificationSettings)
      {
        if (paramNotificationSettings == null)
          throw new NullPointerException();
        this.notificationSettings_ = paramNotificationSettings;
        this.bitField0_ = (0x2 | this.bitField0_);
        return this;
      }

      @Deprecated
      public final Builder setUserGaiaId(long paramLong)
      {
        this.bitField0_ = (0x1 | this.bitField0_);
        this.userGaiaId_ = paramLong;
        return this;
      }
    }
  }

  public static abstract interface NotificationSettingsRequestOrBuilder extends MessageLiteOrBuilder
  {
    public abstract Data.NotificationChannel getChannel();

    public abstract Data.NotificationSettings getNotificationSettings();

    @Deprecated
    public abstract long getUserGaiaId();

    public abstract boolean hasChannel();

    public abstract boolean hasNotificationSettings();

    @Deprecated
    public abstract boolean hasUserGaiaId();
  }

  public static final class NotificationSettingsResponse extends GeneratedMessageLite
    implements Network.NotificationSettingsResponseOrBuilder
  {
    private static final NotificationSettingsResponse defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private Data.NotificationSettings notificationSettings_;

    static
    {
      NotificationSettingsResponse localNotificationSettingsResponse = new NotificationSettingsResponse();
      defaultInstance = localNotificationSettingsResponse;
      localNotificationSettingsResponse.notificationSettings_ = Data.NotificationSettings.getDefaultInstance();
    }

    private NotificationSettingsResponse()
    {
    }

    private NotificationSettingsResponse(Builder paramBuilder)
    {
      super();
    }

    public static NotificationSettingsResponse getDefaultInstance()
    {
      return defaultInstance;
    }

    public final NotificationSettingsResponse getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final Data.NotificationSettings getNotificationSettings()
    {
      return this.notificationSettings_;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeMessageSize(1, this.notificationSettings_);
        this.memoizedSerializedSize = k;
      }
    }

    public final boolean hasNotificationSettings()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeMessage(1, this.notificationSettings_);
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Network.NotificationSettingsResponse, Builder>
      implements Network.NotificationSettingsResponseOrBuilder
    {
      private int bitField0_;
      private Data.NotificationSettings notificationSettings_ = Data.NotificationSettings.getDefaultInstance();

      private Network.NotificationSettingsResponse buildPartial()
      {
        Network.NotificationSettingsResponse localNotificationSettingsResponse = new Network.NotificationSettingsResponse(this, (byte)0);
        int i = 0x1 & this.bitField0_;
        int j = 0;
        if (i == 1)
          j = 1;
        Network.NotificationSettingsResponse.access$59202(localNotificationSettingsResponse, this.notificationSettings_);
        Network.NotificationSettingsResponse.access$59302(localNotificationSettingsResponse, j);
        return localNotificationSettingsResponse;
      }

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 10:
          }
          Data.NotificationSettings.Builder localBuilder = Data.NotificationSettings.newBuilder();
          if (hasNotificationSettings())
            localBuilder.mergeFrom(getNotificationSettings());
          paramCodedInputStream.readMessage(localBuilder, paramExtensionRegistryLite);
          setNotificationSettings(localBuilder.buildPartial());
        }
      }

      public final Builder clear()
      {
        super.clear();
        this.notificationSettings_ = Data.NotificationSettings.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        return this;
      }

      public final Builder clearNotificationSettings()
      {
        this.notificationSettings_ = Data.NotificationSettings.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        return this;
      }

      public final Network.NotificationSettingsResponse getDefaultInstanceForType()
      {
        return Network.NotificationSettingsResponse.getDefaultInstance();
      }

      public final Data.NotificationSettings getNotificationSettings()
      {
        return this.notificationSettings_;
      }

      public final boolean hasNotificationSettings()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Network.NotificationSettingsResponse paramNotificationSettingsResponse)
      {
        if (paramNotificationSettingsResponse == Network.NotificationSettingsResponse.getDefaultInstance());
        while (!paramNotificationSettingsResponse.hasNotificationSettings())
          return this;
        Data.NotificationSettings localNotificationSettings = paramNotificationSettingsResponse.getNotificationSettings();
        if (((0x1 & this.bitField0_) == 1) && (this.notificationSettings_ != Data.NotificationSettings.getDefaultInstance()));
        for (this.notificationSettings_ = Data.NotificationSettings.newBuilder(this.notificationSettings_).mergeFrom(localNotificationSettings).buildPartial(); ; this.notificationSettings_ = localNotificationSettings)
        {
          this.bitField0_ = (0x1 | this.bitField0_);
          break;
        }
      }

      public final Builder setNotificationSettings(Data.NotificationSettings.Builder paramBuilder)
      {
        this.notificationSettings_ = paramBuilder.build();
        this.bitField0_ = (0x1 | this.bitField0_);
        return this;
      }

      public final Builder setNotificationSettings(Data.NotificationSettings paramNotificationSettings)
      {
        if (paramNotificationSettings == null)
          throw new NullPointerException();
        this.notificationSettings_ = paramNotificationSettings;
        this.bitField0_ = (0x1 | this.bitField0_);
        return this;
      }
    }
  }

  public static abstract interface NotificationSettingsResponseOrBuilder extends MessageLiteOrBuilder
  {
    public abstract Data.NotificationSettings getNotificationSettings();

    public abstract boolean hasNotificationSettings();
  }

  public static final class OutOfBoxRequest extends GeneratedMessageLite
    implements Network.OutOfBoxRequestOrBuilder
  {
    private static final OutOfBoxRequest defaultInstance;
    private static final long serialVersionUID;
    private Data.OutOfBoxAction action_;
    private int bitField0_;
    private Object continueUrl_;
    private List<Data.OutOfBoxInputField> input_;
    private boolean integrated_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private Object postMessageTargetOrigin_;
    private UpgradeType upgradeType_;

    static
    {
      OutOfBoxRequest localOutOfBoxRequest = new OutOfBoxRequest();
      defaultInstance = localOutOfBoxRequest;
      localOutOfBoxRequest.input_ = Collections.emptyList();
      localOutOfBoxRequest.action_ = Data.OutOfBoxAction.getDefaultInstance();
      localOutOfBoxRequest.upgradeType_ = UpgradeType.GOOGLE_PLUS;
      localOutOfBoxRequest.continueUrl_ = "";
      localOutOfBoxRequest.integrated_ = false;
      localOutOfBoxRequest.postMessageTargetOrigin_ = "";
    }

    private OutOfBoxRequest()
    {
    }

    private OutOfBoxRequest(Builder paramBuilder)
    {
      super();
    }

    private ByteString getContinueUrlBytes()
    {
      Object localObject = this.continueUrl_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.continueUrl_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static OutOfBoxRequest getDefaultInstance()
    {
      return defaultInstance;
    }

    private ByteString getPostMessageTargetOriginBytes()
    {
      Object localObject = this.postMessageTargetOrigin_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.postMessageTargetOrigin_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public final Data.OutOfBoxAction getAction()
    {
      return this.action_;
    }

    public final String getContinueUrl()
    {
      Object localObject1 = this.continueUrl_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.continueUrl_ = str;
      }
    }

    public final OutOfBoxRequest getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final Data.OutOfBoxInputField getInput(int paramInt)
    {
      return (Data.OutOfBoxInputField)this.input_.get(paramInt);
    }

    public final int getInputCount()
    {
      return this.input_.size();
    }

    public final List<Data.OutOfBoxInputField> getInputList()
    {
      return this.input_;
    }

    public final Data.OutOfBoxInputFieldOrBuilder getInputOrBuilder(int paramInt)
    {
      return (Data.OutOfBoxInputFieldOrBuilder)this.input_.get(paramInt);
    }

    public final List<? extends Data.OutOfBoxInputFieldOrBuilder> getInputOrBuilderList()
    {
      return this.input_;
    }

    public final boolean getIntegrated()
    {
      return this.integrated_;
    }

    public final String getPostMessageTargetOrigin()
    {
      Object localObject1 = this.postMessageTargetOrigin_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.postMessageTargetOrigin_ = str;
      }
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int j;
      for (int m = i; ; m = j)
      {
        return m;
        j = 0;
        for (int k = 0; k < this.input_.size(); k++)
          j += CodedOutputStream.computeMessageSize(1, (MessageLite)this.input_.get(k));
        if ((0x1 & this.bitField0_) == 1)
          j += CodedOutputStream.computeMessageSize(2, this.action_);
        if ((0x2 & this.bitField0_) == 2)
          j += CodedOutputStream.computeEnumSize(3, this.upgradeType_.getNumber());
        if ((0x4 & this.bitField0_) == 4)
          j += CodedOutputStream.computeBytesSize(4, getContinueUrlBytes());
        if ((0x8 & this.bitField0_) == 8)
          j += CodedOutputStream.computeBoolSize(5, this.integrated_);
        if ((0x10 & this.bitField0_) == 16)
          j += CodedOutputStream.computeBytesSize(6, getPostMessageTargetOriginBytes());
        this.memoizedSerializedSize = j;
      }
    }

    public final UpgradeType getUpgradeType()
    {
      return this.upgradeType_;
    }

    public final boolean hasAction()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean hasContinueUrl()
    {
      if ((0x4 & this.bitField0_) == 4);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasIntegrated()
    {
      if ((0x8 & this.bitField0_) == 8);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasPostMessageTargetOrigin()
    {
      if ((0x10 & this.bitField0_) == 16);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasUpgradeType()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      for (int i = 0; i < this.input_.size(); i++)
        paramCodedOutputStream.writeMessage(1, (MessageLite)this.input_.get(i));
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeMessage(2, this.action_);
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeEnum(3, this.upgradeType_.getNumber());
      if ((0x4 & this.bitField0_) == 4)
        paramCodedOutputStream.writeBytes(4, getContinueUrlBytes());
      if ((0x8 & this.bitField0_) == 8)
        paramCodedOutputStream.writeBool(5, this.integrated_);
      if ((0x10 & this.bitField0_) == 16)
        paramCodedOutputStream.writeBytes(6, getPostMessageTargetOriginBytes());
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Network.OutOfBoxRequest, Builder>
      implements Network.OutOfBoxRequestOrBuilder
    {
      private Data.OutOfBoxAction action_ = Data.OutOfBoxAction.getDefaultInstance();
      private int bitField0_;
      private Object continueUrl_ = "";
      private List<Data.OutOfBoxInputField> input_ = Collections.emptyList();
      private boolean integrated_;
      private Object postMessageTargetOrigin_ = "";
      private Network.OutOfBoxRequest.UpgradeType upgradeType_ = Network.OutOfBoxRequest.UpgradeType.GOOGLE_PLUS;

      private Network.OutOfBoxRequest buildPartial()
      {
        Network.OutOfBoxRequest localOutOfBoxRequest = new Network.OutOfBoxRequest(this, (byte)0);
        int i = this.bitField0_;
        if ((0x1 & this.bitField0_) == 1)
        {
          this.input_ = Collections.unmodifiableList(this.input_);
          this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        }
        Network.OutOfBoxRequest.access$53002(localOutOfBoxRequest, this.input_);
        int j = i & 0x2;
        int k = 0;
        if (j == 2)
          k = 1;
        Network.OutOfBoxRequest.access$53102(localOutOfBoxRequest, this.action_);
        if ((i & 0x4) == 4)
          k |= 2;
        Network.OutOfBoxRequest.access$53202(localOutOfBoxRequest, this.upgradeType_);
        if ((i & 0x8) == 8)
          k |= 4;
        Network.OutOfBoxRequest.access$53302(localOutOfBoxRequest, this.continueUrl_);
        if ((i & 0x10) == 16)
          k |= 8;
        Network.OutOfBoxRequest.access$53402(localOutOfBoxRequest, this.integrated_);
        if ((i & 0x20) == 32)
          k |= 16;
        Network.OutOfBoxRequest.access$53502(localOutOfBoxRequest, this.postMessageTargetOrigin_);
        Network.OutOfBoxRequest.access$53602(localOutOfBoxRequest, k);
        return localOutOfBoxRequest;
      }

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private void ensureInputIsMutable()
      {
        if ((0x1 & this.bitField0_) != 1)
        {
          this.input_ = new ArrayList(this.input_);
          this.bitField0_ = (0x1 | this.bitField0_);
        }
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 10:
            Data.OutOfBoxInputField.Builder localBuilder1 = Data.OutOfBoxInputField.newBuilder();
            paramCodedInputStream.readMessage(localBuilder1, paramExtensionRegistryLite);
            addInput(localBuilder1.buildPartial());
            break;
          case 18:
            Data.OutOfBoxAction.Builder localBuilder = Data.OutOfBoxAction.newBuilder();
            if (hasAction())
              localBuilder.mergeFrom(getAction());
            paramCodedInputStream.readMessage(localBuilder, paramExtensionRegistryLite);
            setAction(localBuilder.buildPartial());
            break;
          case 24:
            Network.OutOfBoxRequest.UpgradeType localUpgradeType = Network.OutOfBoxRequest.UpgradeType.valueOf(paramCodedInputStream.readEnum());
            if (localUpgradeType == null)
              continue;
            this.bitField0_ = (0x4 | this.bitField0_);
            this.upgradeType_ = localUpgradeType;
            break;
          case 34:
            this.bitField0_ = (0x8 | this.bitField0_);
            this.continueUrl_ = paramCodedInputStream.readBytes();
            break;
          case 40:
            this.bitField0_ = (0x10 | this.bitField0_);
            this.integrated_ = paramCodedInputStream.readBool();
            break;
          case 50:
          }
          this.bitField0_ = (0x20 | this.bitField0_);
          this.postMessageTargetOrigin_ = paramCodedInputStream.readBytes();
        }
      }

      public final Builder addAllInput(Iterable<? extends Data.OutOfBoxInputField> paramIterable)
      {
        ensureInputIsMutable();
        GeneratedMessageLite.Builder.addAll(paramIterable, this.input_);
        return this;
      }

      public final Builder addInput(int paramInt, Data.OutOfBoxInputField.Builder paramBuilder)
      {
        ensureInputIsMutable();
        this.input_.add(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder addInput(int paramInt, Data.OutOfBoxInputField paramOutOfBoxInputField)
      {
        if (paramOutOfBoxInputField == null)
          throw new NullPointerException();
        ensureInputIsMutable();
        this.input_.add(paramInt, paramOutOfBoxInputField);
        return this;
      }

      public final Builder addInput(Data.OutOfBoxInputField.Builder paramBuilder)
      {
        ensureInputIsMutable();
        this.input_.add(paramBuilder.build());
        return this;
      }

      public final Builder addInput(Data.OutOfBoxInputField paramOutOfBoxInputField)
      {
        if (paramOutOfBoxInputField == null)
          throw new NullPointerException();
        ensureInputIsMutable();
        this.input_.add(paramOutOfBoxInputField);
        return this;
      }

      public final Builder clear()
      {
        super.clear();
        this.input_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.action_ = Data.OutOfBoxAction.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.upgradeType_ = Network.OutOfBoxRequest.UpgradeType.GOOGLE_PLUS;
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.continueUrl_ = "";
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        this.integrated_ = false;
        this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        this.postMessageTargetOrigin_ = "";
        this.bitField0_ = (0xFFFFFFDF & this.bitField0_);
        return this;
      }

      public final Builder clearAction()
      {
        this.action_ = Data.OutOfBoxAction.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        return this;
      }

      public final Builder clearContinueUrl()
      {
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        this.continueUrl_ = Network.OutOfBoxRequest.getDefaultInstance().getContinueUrl();
        return this;
      }

      public final Builder clearInput()
      {
        this.input_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        return this;
      }

      public final Builder clearIntegrated()
      {
        this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        this.integrated_ = false;
        return this;
      }

      public final Builder clearPostMessageTargetOrigin()
      {
        this.bitField0_ = (0xFFFFFFDF & this.bitField0_);
        this.postMessageTargetOrigin_ = Network.OutOfBoxRequest.getDefaultInstance().getPostMessageTargetOrigin();
        return this;
      }

      public final Builder clearUpgradeType()
      {
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.upgradeType_ = Network.OutOfBoxRequest.UpgradeType.GOOGLE_PLUS;
        return this;
      }

      public final Data.OutOfBoxAction getAction()
      {
        return this.action_;
      }

      public final String getContinueUrl()
      {
        Object localObject = this.continueUrl_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.continueUrl_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final Network.OutOfBoxRequest getDefaultInstanceForType()
      {
        return Network.OutOfBoxRequest.getDefaultInstance();
      }

      public final Data.OutOfBoxInputField getInput(int paramInt)
      {
        return (Data.OutOfBoxInputField)this.input_.get(paramInt);
      }

      public final int getInputCount()
      {
        return this.input_.size();
      }

      public final List<Data.OutOfBoxInputField> getInputList()
      {
        return Collections.unmodifiableList(this.input_);
      }

      public final boolean getIntegrated()
      {
        return this.integrated_;
      }

      public final String getPostMessageTargetOrigin()
      {
        Object localObject = this.postMessageTargetOrigin_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.postMessageTargetOrigin_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final Network.OutOfBoxRequest.UpgradeType getUpgradeType()
      {
        return this.upgradeType_;
      }

      public final boolean hasAction()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasContinueUrl()
      {
        if ((0x8 & this.bitField0_) == 8);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasIntegrated()
      {
        if ((0x10 & this.bitField0_) == 16);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasPostMessageTargetOrigin()
      {
        if ((0x20 & this.bitField0_) == 32);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasUpgradeType()
      {
        if ((0x4 & this.bitField0_) == 4);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Network.OutOfBoxRequest paramOutOfBoxRequest)
      {
        if (paramOutOfBoxRequest == Network.OutOfBoxRequest.getDefaultInstance())
          return this;
        label52: Data.OutOfBoxAction localOutOfBoxAction;
        if (!paramOutOfBoxRequest.input_.isEmpty())
        {
          if (this.input_.isEmpty())
          {
            this.input_ = paramOutOfBoxRequest.input_;
            this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
          }
        }
        else if (paramOutOfBoxRequest.hasAction())
        {
          localOutOfBoxAction = paramOutOfBoxRequest.getAction();
          if (((0x2 & this.bitField0_) != 2) || (this.action_ == Data.OutOfBoxAction.getDefaultInstance()))
            break label202;
        }
        label202: for (this.action_ = Data.OutOfBoxAction.newBuilder(this.action_).mergeFrom(localOutOfBoxAction).buildPartial(); ; this.action_ = localOutOfBoxAction)
        {
          this.bitField0_ = (0x2 | this.bitField0_);
          if (paramOutOfBoxRequest.hasUpgradeType())
            setUpgradeType(paramOutOfBoxRequest.getUpgradeType());
          if (paramOutOfBoxRequest.hasContinueUrl())
            setContinueUrl(paramOutOfBoxRequest.getContinueUrl());
          if (paramOutOfBoxRequest.hasIntegrated())
            setIntegrated(paramOutOfBoxRequest.getIntegrated());
          if (!paramOutOfBoxRequest.hasPostMessageTargetOrigin())
            break;
          setPostMessageTargetOrigin(paramOutOfBoxRequest.getPostMessageTargetOrigin());
          break;
          ensureInputIsMutable();
          this.input_.addAll(paramOutOfBoxRequest.input_);
          break label52;
        }
      }

      public final Builder setAction(Data.OutOfBoxAction.Builder paramBuilder)
      {
        this.action_ = paramBuilder.build();
        this.bitField0_ = (0x2 | this.bitField0_);
        return this;
      }

      public final Builder setAction(Data.OutOfBoxAction paramOutOfBoxAction)
      {
        if (paramOutOfBoxAction == null)
          throw new NullPointerException();
        this.action_ = paramOutOfBoxAction;
        this.bitField0_ = (0x2 | this.bitField0_);
        return this;
      }

      public final Builder setContinueUrl(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x8 | this.bitField0_);
        this.continueUrl_ = paramString;
        return this;
      }

      public final Builder setInput(int paramInt, Data.OutOfBoxInputField.Builder paramBuilder)
      {
        ensureInputIsMutable();
        this.input_.set(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder setInput(int paramInt, Data.OutOfBoxInputField paramOutOfBoxInputField)
      {
        if (paramOutOfBoxInputField == null)
          throw new NullPointerException();
        ensureInputIsMutable();
        this.input_.set(paramInt, paramOutOfBoxInputField);
        return this;
      }

      public final Builder setIntegrated(boolean paramBoolean)
      {
        this.bitField0_ = (0x10 | this.bitField0_);
        this.integrated_ = paramBoolean;
        return this;
      }

      public final Builder setPostMessageTargetOrigin(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x20 | this.bitField0_);
        this.postMessageTargetOrigin_ = paramString;
        return this;
      }

      public final Builder setUpgradeType(Network.OutOfBoxRequest.UpgradeType paramUpgradeType)
      {
        if (paramUpgradeType == null)
          throw new NullPointerException();
        this.bitField0_ = (0x4 | this.bitField0_);
        this.upgradeType_ = paramUpgradeType;
        return this;
      }
    }

    public static enum UpgradeType
      implements Internal.EnumLite
    {
      private static Internal.EnumLiteMap<UpgradeType> internalValueMap = new Internal.EnumLiteMap()
      {
      };
      private final int value;

      static
      {
        UpgradeType[] arrayOfUpgradeType = new UpgradeType[2];
        arrayOfUpgradeType[0] = GOOGLE_PLUS;
        arrayOfUpgradeType[1] = PLUSONE;
      }

      private UpgradeType(int paramInt1, int paramInt2)
      {
        this.value = paramInt1;
      }

      public static UpgradeType valueOf(int paramInt)
      {
        UpgradeType localUpgradeType;
        switch (paramInt)
        {
        default:
          localUpgradeType = null;
        case 1:
        case 2:
        }
        while (true)
        {
          return localUpgradeType;
          localUpgradeType = GOOGLE_PLUS;
          continue;
          localUpgradeType = PLUSONE;
        }
      }

      public final int getNumber()
      {
        return this.value;
      }
    }
  }

  public static abstract interface OutOfBoxRequestOrBuilder extends MessageLiteOrBuilder
  {
    public abstract Data.OutOfBoxAction getAction();

    public abstract String getContinueUrl();

    public abstract Data.OutOfBoxInputField getInput(int paramInt);

    public abstract int getInputCount();

    public abstract List<Data.OutOfBoxInputField> getInputList();

    public abstract boolean getIntegrated();

    public abstract String getPostMessageTargetOrigin();

    public abstract Network.OutOfBoxRequest.UpgradeType getUpgradeType();

    public abstract boolean hasAction();

    public abstract boolean hasContinueUrl();

    public abstract boolean hasIntegrated();

    public abstract boolean hasPostMessageTargetOrigin();

    public abstract boolean hasUpgradeType();
  }

  public static final class OutOfBoxResponse extends GeneratedMessageLite
    implements Network.OutOfBoxResponseOrBuilder
  {
    private static final OutOfBoxResponse defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private Object continueUrl_;
    private Data.OutOfBoxView failureView_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private Object postMessageTargetOrigin_;
    private Object redirectUrl_;
    private boolean signupComplete_;
    private boolean smsSent_;
    private Data.OutOfBoxView view_;

    static
    {
      OutOfBoxResponse localOutOfBoxResponse = new OutOfBoxResponse();
      defaultInstance = localOutOfBoxResponse;
      localOutOfBoxResponse.view_ = Data.OutOfBoxView.getDefaultInstance();
      localOutOfBoxResponse.signupComplete_ = false;
      localOutOfBoxResponse.redirectUrl_ = "";
      localOutOfBoxResponse.smsSent_ = false;
      localOutOfBoxResponse.failureView_ = Data.OutOfBoxView.getDefaultInstance();
      localOutOfBoxResponse.continueUrl_ = "";
      localOutOfBoxResponse.postMessageTargetOrigin_ = "";
    }

    private OutOfBoxResponse()
    {
    }

    private OutOfBoxResponse(Builder paramBuilder)
    {
      super();
    }

    private ByteString getContinueUrlBytes()
    {
      Object localObject = this.continueUrl_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.continueUrl_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static OutOfBoxResponse getDefaultInstance()
    {
      return defaultInstance;
    }

    private ByteString getPostMessageTargetOriginBytes()
    {
      Object localObject = this.postMessageTargetOrigin_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.postMessageTargetOrigin_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    private ByteString getRedirectUrlBytes()
    {
      Object localObject = this.redirectUrl_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.redirectUrl_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public final String getContinueUrl()
    {
      Object localObject1 = this.continueUrl_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.continueUrl_ = str;
      }
    }

    public final OutOfBoxResponse getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final Data.OutOfBoxView getFailureView()
    {
      return this.failureView_;
    }

    public final String getPostMessageTargetOrigin()
    {
      Object localObject1 = this.postMessageTargetOrigin_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.postMessageTargetOrigin_ = str;
      }
    }

    public final String getRedirectUrl()
    {
      Object localObject1 = this.redirectUrl_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.redirectUrl_ = str;
      }
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeMessageSize(1, this.view_);
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeBoolSize(2, this.signupComplete_);
        if ((0x4 & this.bitField0_) == 4)
          k += CodedOutputStream.computeBytesSize(3, getRedirectUrlBytes());
        if ((0x8 & this.bitField0_) == 8)
          k += CodedOutputStream.computeBoolSize(4, this.smsSent_);
        if ((0x10 & this.bitField0_) == 16)
          k += CodedOutputStream.computeMessageSize(5, this.failureView_);
        if ((0x20 & this.bitField0_) == 32)
          k += CodedOutputStream.computeBytesSize(6, getContinueUrlBytes());
        if ((0x40 & this.bitField0_) == 64)
          k += CodedOutputStream.computeBytesSize(7, getPostMessageTargetOriginBytes());
        this.memoizedSerializedSize = k;
      }
    }

    public final boolean getSignupComplete()
    {
      return this.signupComplete_;
    }

    public final boolean getSmsSent()
    {
      return this.smsSent_;
    }

    public final Data.OutOfBoxView getView()
    {
      return this.view_;
    }

    public final boolean hasContinueUrl()
    {
      if ((0x20 & this.bitField0_) == 32);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasFailureView()
    {
      if ((0x10 & this.bitField0_) == 16);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasPostMessageTargetOrigin()
    {
      if ((0x40 & this.bitField0_) == 64);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasRedirectUrl()
    {
      if ((0x4 & this.bitField0_) == 4);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasSignupComplete()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasSmsSent()
    {
      if ((0x8 & this.bitField0_) == 8);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasView()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeMessage(1, this.view_);
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeBool(2, this.signupComplete_);
      if ((0x4 & this.bitField0_) == 4)
        paramCodedOutputStream.writeBytes(3, getRedirectUrlBytes());
      if ((0x8 & this.bitField0_) == 8)
        paramCodedOutputStream.writeBool(4, this.smsSent_);
      if ((0x10 & this.bitField0_) == 16)
        paramCodedOutputStream.writeMessage(5, this.failureView_);
      if ((0x20 & this.bitField0_) == 32)
        paramCodedOutputStream.writeBytes(6, getContinueUrlBytes());
      if ((0x40 & this.bitField0_) == 64)
        paramCodedOutputStream.writeBytes(7, getPostMessageTargetOriginBytes());
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Network.OutOfBoxResponse, Builder>
      implements Network.OutOfBoxResponseOrBuilder
    {
      private int bitField0_;
      private Object continueUrl_ = "";
      private Data.OutOfBoxView failureView_ = Data.OutOfBoxView.getDefaultInstance();
      private Object postMessageTargetOrigin_ = "";
      private Object redirectUrl_ = "";
      private boolean signupComplete_;
      private boolean smsSent_;
      private Data.OutOfBoxView view_ = Data.OutOfBoxView.getDefaultInstance();

      private Network.OutOfBoxResponse buildPartial()
      {
        Network.OutOfBoxResponse localOutOfBoxResponse = new Network.OutOfBoxResponse(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Network.OutOfBoxResponse.access$54002(localOutOfBoxResponse, this.view_);
        if ((i & 0x2) == 2)
          k |= 2;
        Network.OutOfBoxResponse.access$54102(localOutOfBoxResponse, this.signupComplete_);
        if ((i & 0x4) == 4)
          k |= 4;
        Network.OutOfBoxResponse.access$54202(localOutOfBoxResponse, this.redirectUrl_);
        if ((i & 0x8) == 8)
          k |= 8;
        Network.OutOfBoxResponse.access$54302(localOutOfBoxResponse, this.smsSent_);
        if ((i & 0x10) == 16)
          k |= 16;
        Network.OutOfBoxResponse.access$54402(localOutOfBoxResponse, this.failureView_);
        if ((i & 0x20) == 32)
          k |= 32;
        Network.OutOfBoxResponse.access$54502(localOutOfBoxResponse, this.continueUrl_);
        if ((i & 0x40) == 64)
          k |= 64;
        Network.OutOfBoxResponse.access$54602(localOutOfBoxResponse, this.postMessageTargetOrigin_);
        Network.OutOfBoxResponse.access$54702(localOutOfBoxResponse, k);
        return localOutOfBoxResponse;
      }

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 10:
            Data.OutOfBoxView.Builder localBuilder2 = Data.OutOfBoxView.newBuilder();
            if (hasView())
              localBuilder2.mergeFrom(getView());
            paramCodedInputStream.readMessage(localBuilder2, paramExtensionRegistryLite);
            setView(localBuilder2.buildPartial());
            break;
          case 16:
            this.bitField0_ = (0x2 | this.bitField0_);
            this.signupComplete_ = paramCodedInputStream.readBool();
            break;
          case 26:
            this.bitField0_ = (0x4 | this.bitField0_);
            this.redirectUrl_ = paramCodedInputStream.readBytes();
            break;
          case 32:
            this.bitField0_ = (0x8 | this.bitField0_);
            this.smsSent_ = paramCodedInputStream.readBool();
            break;
          case 42:
            Data.OutOfBoxView.Builder localBuilder1 = Data.OutOfBoxView.newBuilder();
            if (hasFailureView())
              localBuilder1.mergeFrom(getFailureView());
            paramCodedInputStream.readMessage(localBuilder1, paramExtensionRegistryLite);
            setFailureView(localBuilder1.buildPartial());
            break;
          case 50:
            this.bitField0_ = (0x20 | this.bitField0_);
            this.continueUrl_ = paramCodedInputStream.readBytes();
            break;
          case 58:
          }
          this.bitField0_ = (0x40 | this.bitField0_);
          this.postMessageTargetOrigin_ = paramCodedInputStream.readBytes();
        }
      }

      public final Builder clear()
      {
        super.clear();
        this.view_ = Data.OutOfBoxView.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.signupComplete_ = false;
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.redirectUrl_ = "";
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.smsSent_ = false;
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        this.failureView_ = Data.OutOfBoxView.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        this.continueUrl_ = "";
        this.bitField0_ = (0xFFFFFFDF & this.bitField0_);
        this.postMessageTargetOrigin_ = "";
        this.bitField0_ = (0xFFFFFFBF & this.bitField0_);
        return this;
      }

      public final Builder clearContinueUrl()
      {
        this.bitField0_ = (0xFFFFFFDF & this.bitField0_);
        this.continueUrl_ = Network.OutOfBoxResponse.getDefaultInstance().getContinueUrl();
        return this;
      }

      public final Builder clearFailureView()
      {
        this.failureView_ = Data.OutOfBoxView.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        return this;
      }

      public final Builder clearPostMessageTargetOrigin()
      {
        this.bitField0_ = (0xFFFFFFBF & this.bitField0_);
        this.postMessageTargetOrigin_ = Network.OutOfBoxResponse.getDefaultInstance().getPostMessageTargetOrigin();
        return this;
      }

      public final Builder clearRedirectUrl()
      {
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.redirectUrl_ = Network.OutOfBoxResponse.getDefaultInstance().getRedirectUrl();
        return this;
      }

      public final Builder clearSignupComplete()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.signupComplete_ = false;
        return this;
      }

      public final Builder clearSmsSent()
      {
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        this.smsSent_ = false;
        return this;
      }

      public final Builder clearView()
      {
        this.view_ = Data.OutOfBoxView.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        return this;
      }

      public final String getContinueUrl()
      {
        Object localObject = this.continueUrl_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.continueUrl_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final Network.OutOfBoxResponse getDefaultInstanceForType()
      {
        return Network.OutOfBoxResponse.getDefaultInstance();
      }

      public final Data.OutOfBoxView getFailureView()
      {
        return this.failureView_;
      }

      public final String getPostMessageTargetOrigin()
      {
        Object localObject = this.postMessageTargetOrigin_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.postMessageTargetOrigin_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final String getRedirectUrl()
      {
        Object localObject = this.redirectUrl_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.redirectUrl_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final boolean getSignupComplete()
      {
        return this.signupComplete_;
      }

      public final boolean getSmsSent()
      {
        return this.smsSent_;
      }

      public final Data.OutOfBoxView getView()
      {
        return this.view_;
      }

      public final boolean hasContinueUrl()
      {
        if ((0x20 & this.bitField0_) == 32);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasFailureView()
      {
        if ((0x10 & this.bitField0_) == 16);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasPostMessageTargetOrigin()
      {
        if ((0x40 & this.bitField0_) == 64);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasRedirectUrl()
      {
        if ((0x4 & this.bitField0_) == 4);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasSignupComplete()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasSmsSent()
      {
        if ((0x8 & this.bitField0_) == 8);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasView()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Network.OutOfBoxResponse paramOutOfBoxResponse)
      {
        if (paramOutOfBoxResponse == Network.OutOfBoxResponse.getDefaultInstance())
          return this;
        Data.OutOfBoxView localOutOfBoxView2;
        label61: Data.OutOfBoxView localOutOfBoxView1;
        if (paramOutOfBoxResponse.hasView())
        {
          localOutOfBoxView2 = paramOutOfBoxResponse.getView();
          if (((0x1 & this.bitField0_) == 1) && (this.view_ != Data.OutOfBoxView.getDefaultInstance()))
          {
            this.view_ = Data.OutOfBoxView.newBuilder(this.view_).mergeFrom(localOutOfBoxView2).buildPartial();
            this.bitField0_ = (0x1 | this.bitField0_);
          }
        }
        else
        {
          if (paramOutOfBoxResponse.hasSignupComplete())
            setSignupComplete(paramOutOfBoxResponse.getSignupComplete());
          if (paramOutOfBoxResponse.hasRedirectUrl())
            setRedirectUrl(paramOutOfBoxResponse.getRedirectUrl());
          if (paramOutOfBoxResponse.hasSmsSent())
            setSmsSent(paramOutOfBoxResponse.getSmsSent());
          if (paramOutOfBoxResponse.hasFailureView())
          {
            localOutOfBoxView1 = paramOutOfBoxResponse.getFailureView();
            if (((0x10 & this.bitField0_) != 16) || (this.failureView_ == Data.OutOfBoxView.getDefaultInstance()))
              break label228;
          }
        }
        label228: for (this.failureView_ = Data.OutOfBoxView.newBuilder(this.failureView_).mergeFrom(localOutOfBoxView1).buildPartial(); ; this.failureView_ = localOutOfBoxView1)
        {
          this.bitField0_ = (0x10 | this.bitField0_);
          if (paramOutOfBoxResponse.hasContinueUrl())
            setContinueUrl(paramOutOfBoxResponse.getContinueUrl());
          if (!paramOutOfBoxResponse.hasPostMessageTargetOrigin())
            break;
          setPostMessageTargetOrigin(paramOutOfBoxResponse.getPostMessageTargetOrigin());
          break;
          this.view_ = localOutOfBoxView2;
          break label61;
        }
      }

      public final Builder setContinueUrl(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x20 | this.bitField0_);
        this.continueUrl_ = paramString;
        return this;
      }

      public final Builder setFailureView(Data.OutOfBoxView.Builder paramBuilder)
      {
        this.failureView_ = paramBuilder.build();
        this.bitField0_ = (0x10 | this.bitField0_);
        return this;
      }

      public final Builder setFailureView(Data.OutOfBoxView paramOutOfBoxView)
      {
        if (paramOutOfBoxView == null)
          throw new NullPointerException();
        this.failureView_ = paramOutOfBoxView;
        this.bitField0_ = (0x10 | this.bitField0_);
        return this;
      }

      public final Builder setPostMessageTargetOrigin(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x40 | this.bitField0_);
        this.postMessageTargetOrigin_ = paramString;
        return this;
      }

      public final Builder setRedirectUrl(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x4 | this.bitField0_);
        this.redirectUrl_ = paramString;
        return this;
      }

      public final Builder setSignupComplete(boolean paramBoolean)
      {
        this.bitField0_ = (0x2 | this.bitField0_);
        this.signupComplete_ = paramBoolean;
        return this;
      }

      public final Builder setSmsSent(boolean paramBoolean)
      {
        this.bitField0_ = (0x8 | this.bitField0_);
        this.smsSent_ = paramBoolean;
        return this;
      }

      public final Builder setView(Data.OutOfBoxView.Builder paramBuilder)
      {
        this.view_ = paramBuilder.build();
        this.bitField0_ = (0x1 | this.bitField0_);
        return this;
      }

      public final Builder setView(Data.OutOfBoxView paramOutOfBoxView)
      {
        if (paramOutOfBoxView == null)
          throw new NullPointerException();
        this.view_ = paramOutOfBoxView;
        this.bitField0_ = (0x1 | this.bitField0_);
        return this;
      }
    }
  }

  public static abstract interface OutOfBoxResponseOrBuilder extends MessageLiteOrBuilder
  {
    public abstract String getContinueUrl();

    public abstract Data.OutOfBoxView getFailureView();

    public abstract String getPostMessageTargetOrigin();

    public abstract String getRedirectUrl();

    public abstract boolean getSignupComplete();

    public abstract boolean getSmsSent();

    public abstract Data.OutOfBoxView getView();

    public abstract boolean hasContinueUrl();

    public abstract boolean hasFailureView();

    public abstract boolean hasPostMessageTargetOrigin();

    public abstract boolean hasRedirectUrl();

    public abstract boolean hasSignupComplete();

    public abstract boolean hasSmsSent();

    public abstract boolean hasView();
  }

  public static final class PhoneVerificationRequest extends GeneratedMessageLite
    implements Network.PhoneVerificationRequestOrBuilder
  {
    private static final PhoneVerificationRequest defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private Data.Phone phone_;

    static
    {
      PhoneVerificationRequest localPhoneVerificationRequest = new PhoneVerificationRequest();
      defaultInstance = localPhoneVerificationRequest;
      localPhoneVerificationRequest.phone_ = Data.Phone.getDefaultInstance();
    }

    private PhoneVerificationRequest()
    {
    }

    private PhoneVerificationRequest(Builder paramBuilder)
    {
      super();
    }

    public static PhoneVerificationRequest getDefaultInstance()
    {
      return defaultInstance;
    }

    public final PhoneVerificationRequest getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final Data.Phone getPhone()
    {
      return this.phone_;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeMessageSize(1, this.phone_);
        this.memoizedSerializedSize = k;
      }
    }

    public final boolean hasPhone()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeMessage(1, this.phone_);
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Network.PhoneVerificationRequest, Builder>
      implements Network.PhoneVerificationRequestOrBuilder
    {
      private int bitField0_;
      private Data.Phone phone_ = Data.Phone.getDefaultInstance();

      private Network.PhoneVerificationRequest buildPartial()
      {
        Network.PhoneVerificationRequest localPhoneVerificationRequest = new Network.PhoneVerificationRequest(this, (byte)0);
        int i = 0x1 & this.bitField0_;
        int j = 0;
        if (i == 1)
          j = 1;
        Network.PhoneVerificationRequest.access$71602(localPhoneVerificationRequest, this.phone_);
        Network.PhoneVerificationRequest.access$71702(localPhoneVerificationRequest, j);
        return localPhoneVerificationRequest;
      }

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 10:
          }
          Data.Phone.Builder localBuilder = Data.Phone.newBuilder();
          if (hasPhone())
            localBuilder.mergeFrom(getPhone());
          paramCodedInputStream.readMessage(localBuilder, paramExtensionRegistryLite);
          setPhone(localBuilder.buildPartial());
        }
      }

      public final Builder clear()
      {
        super.clear();
        this.phone_ = Data.Phone.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        return this;
      }

      public final Builder clearPhone()
      {
        this.phone_ = Data.Phone.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        return this;
      }

      public final Network.PhoneVerificationRequest getDefaultInstanceForType()
      {
        return Network.PhoneVerificationRequest.getDefaultInstance();
      }

      public final Data.Phone getPhone()
      {
        return this.phone_;
      }

      public final boolean hasPhone()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Network.PhoneVerificationRequest paramPhoneVerificationRequest)
      {
        if (paramPhoneVerificationRequest == Network.PhoneVerificationRequest.getDefaultInstance());
        while (!paramPhoneVerificationRequest.hasPhone())
          return this;
        Data.Phone localPhone = paramPhoneVerificationRequest.getPhone();
        if (((0x1 & this.bitField0_) == 1) && (this.phone_ != Data.Phone.getDefaultInstance()));
        for (this.phone_ = Data.Phone.newBuilder(this.phone_).mergeFrom(localPhone).buildPartial(); ; this.phone_ = localPhone)
        {
          this.bitField0_ = (0x1 | this.bitField0_);
          break;
        }
      }

      public final Builder setPhone(Data.Phone.Builder paramBuilder)
      {
        this.phone_ = paramBuilder.build();
        this.bitField0_ = (0x1 | this.bitField0_);
        return this;
      }

      public final Builder setPhone(Data.Phone paramPhone)
      {
        if (paramPhone == null)
          throw new NullPointerException();
        this.phone_ = paramPhone;
        this.bitField0_ = (0x1 | this.bitField0_);
        return this;
      }
    }
  }

  public static abstract interface PhoneVerificationRequestOrBuilder extends MessageLiteOrBuilder
  {
    public abstract Data.Phone getPhone();

    public abstract boolean hasPhone();
  }

  public static final class PhoneVerificationResponse extends GeneratedMessageLite
    implements Network.PhoneVerificationResponseOrBuilder
  {
    private static final PhoneVerificationResponse defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private Object description_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private Status status_;

    static
    {
      PhoneVerificationResponse localPhoneVerificationResponse = new PhoneVerificationResponse();
      defaultInstance = localPhoneVerificationResponse;
      localPhoneVerificationResponse.status_ = Status.UNKNOWN;
      localPhoneVerificationResponse.description_ = "";
    }

    private PhoneVerificationResponse()
    {
    }

    private PhoneVerificationResponse(Builder paramBuilder)
    {
      super();
    }

    public static PhoneVerificationResponse getDefaultInstance()
    {
      return defaultInstance;
    }

    private ByteString getDescriptionBytes()
    {
      Object localObject = this.description_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.description_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public final PhoneVerificationResponse getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final String getDescription()
    {
      Object localObject1 = this.description_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.description_ = str;
      }
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeEnumSize(1, this.status_.getNumber());
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeBytesSize(2, getDescriptionBytes());
        this.memoizedSerializedSize = k;
      }
    }

    public final Status getStatus()
    {
      return this.status_;
    }

    public final boolean hasDescription()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasStatus()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeEnum(1, this.status_.getNumber());
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeBytes(2, getDescriptionBytes());
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Network.PhoneVerificationResponse, Builder>
      implements Network.PhoneVerificationResponseOrBuilder
    {
      private int bitField0_;
      private Object description_ = "";
      private Network.PhoneVerificationResponse.Status status_ = Network.PhoneVerificationResponse.Status.UNKNOWN;

      private Network.PhoneVerificationResponse buildPartial()
      {
        Network.PhoneVerificationResponse localPhoneVerificationResponse = new Network.PhoneVerificationResponse(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Network.PhoneVerificationResponse.access$72102(localPhoneVerificationResponse, this.status_);
        if ((i & 0x2) == 2)
          k |= 2;
        Network.PhoneVerificationResponse.access$72202(localPhoneVerificationResponse, this.description_);
        Network.PhoneVerificationResponse.access$72302(localPhoneVerificationResponse, k);
        return localPhoneVerificationResponse;
      }

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 8:
            Network.PhoneVerificationResponse.Status localStatus = Network.PhoneVerificationResponse.Status.valueOf(paramCodedInputStream.readEnum());
            if (localStatus == null)
              continue;
            this.bitField0_ = (0x1 | this.bitField0_);
            this.status_ = localStatus;
            break;
          case 18:
          }
          this.bitField0_ = (0x2 | this.bitField0_);
          this.description_ = paramCodedInputStream.readBytes();
        }
      }

      public final Builder clear()
      {
        super.clear();
        this.status_ = Network.PhoneVerificationResponse.Status.UNKNOWN;
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.description_ = "";
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        return this;
      }

      public final Builder clearDescription()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.description_ = Network.PhoneVerificationResponse.getDefaultInstance().getDescription();
        return this;
      }

      public final Builder clearStatus()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.status_ = Network.PhoneVerificationResponse.Status.UNKNOWN;
        return this;
      }

      public final Network.PhoneVerificationResponse getDefaultInstanceForType()
      {
        return Network.PhoneVerificationResponse.getDefaultInstance();
      }

      public final String getDescription()
      {
        Object localObject = this.description_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.description_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final Network.PhoneVerificationResponse.Status getStatus()
      {
        return this.status_;
      }

      public final boolean hasDescription()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasStatus()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Network.PhoneVerificationResponse paramPhoneVerificationResponse)
      {
        if (paramPhoneVerificationResponse == Network.PhoneVerificationResponse.getDefaultInstance());
        while (true)
        {
          return this;
          if (paramPhoneVerificationResponse.hasStatus())
            setStatus(paramPhoneVerificationResponse.getStatus());
          if (paramPhoneVerificationResponse.hasDescription())
            setDescription(paramPhoneVerificationResponse.getDescription());
        }
      }

      public final Builder setDescription(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x2 | this.bitField0_);
        this.description_ = paramString;
        return this;
      }

      public final Builder setStatus(Network.PhoneVerificationResponse.Status paramStatus)
      {
        if (paramStatus == null)
          throw new NullPointerException();
        this.bitField0_ = (0x1 | this.bitField0_);
        this.status_ = paramStatus;
        return this;
      }
    }

    public static enum Status
      implements Internal.EnumLite
    {
      private static Internal.EnumLiteMap<Status> internalValueMap = new Internal.EnumLiteMap()
      {
      };
      private final int value;

      static
      {
        SMS_SENT = new Status("SMS_SENT", 1, 1);
        ALREADY_VERIFIED = new Status("ALREADY_VERIFIED", 2, 2);
        FATAL_ERROR = new Status("FATAL_ERROR", 3, 3);
        ERROR = new Status("ERROR", 4, 4);
        Status[] arrayOfStatus = new Status[5];
        arrayOfStatus[0] = UNKNOWN;
        arrayOfStatus[1] = SMS_SENT;
        arrayOfStatus[2] = ALREADY_VERIFIED;
        arrayOfStatus[3] = FATAL_ERROR;
        arrayOfStatus[4] = ERROR;
      }

      private Status(int paramInt1, int paramInt2)
      {
        this.value = paramInt1;
      }

      public static Status valueOf(int paramInt)
      {
        Status localStatus;
        switch (paramInt)
        {
        default:
          localStatus = null;
        case 0:
        case 1:
        case 2:
        case 3:
        case 4:
        }
        while (true)
        {
          return localStatus;
          localStatus = UNKNOWN;
          continue;
          localStatus = SMS_SENT;
          continue;
          localStatus = ALREADY_VERIFIED;
          continue;
          localStatus = FATAL_ERROR;
          continue;
          localStatus = ERROR;
        }
      }

      public final int getNumber()
      {
        return this.value;
      }
    }
  }

  public static abstract interface PhoneVerificationResponseOrBuilder extends MessageLiteOrBuilder
  {
    public abstract String getDescription();

    public abstract Network.PhoneVerificationResponse.Status getStatus();

    public abstract boolean hasDescription();

    public abstract boolean hasStatus();
  }

  public static final class PhoneVerificationValidationRequest extends GeneratedMessageLite
    implements Network.PhoneVerificationValidationRequestOrBuilder
  {
    private static final PhoneVerificationValidationRequest defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private Object idvGaiaId_;
    private Object idvPin_;
    private Object idvRequestId_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;

    static
    {
      PhoneVerificationValidationRequest localPhoneVerificationValidationRequest = new PhoneVerificationValidationRequest();
      defaultInstance = localPhoneVerificationValidationRequest;
      localPhoneVerificationValidationRequest.idvRequestId_ = "";
      localPhoneVerificationValidationRequest.idvPin_ = "";
      localPhoneVerificationValidationRequest.idvGaiaId_ = "";
    }

    private PhoneVerificationValidationRequest()
    {
    }

    private PhoneVerificationValidationRequest(Builder paramBuilder)
    {
      super();
    }

    public static PhoneVerificationValidationRequest getDefaultInstance()
    {
      return defaultInstance;
    }

    private ByteString getIdvGaiaIdBytes()
    {
      Object localObject = this.idvGaiaId_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.idvGaiaId_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    private ByteString getIdvPinBytes()
    {
      Object localObject = this.idvPin_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.idvPin_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    private ByteString getIdvRequestIdBytes()
    {
      Object localObject = this.idvRequestId_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.idvRequestId_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public final PhoneVerificationValidationRequest getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final String getIdvGaiaId()
    {
      Object localObject1 = this.idvGaiaId_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.idvGaiaId_ = str;
      }
    }

    public final String getIdvPin()
    {
      Object localObject1 = this.idvPin_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.idvPin_ = str;
      }
    }

    public final String getIdvRequestId()
    {
      Object localObject1 = this.idvRequestId_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.idvRequestId_ = str;
      }
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeBytesSize(1, getIdvRequestIdBytes());
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeBytesSize(2, getIdvPinBytes());
        if ((0x4 & this.bitField0_) == 4)
          k += CodedOutputStream.computeBytesSize(3, getIdvGaiaIdBytes());
        this.memoizedSerializedSize = k;
      }
    }

    public final boolean hasIdvGaiaId()
    {
      if ((0x4 & this.bitField0_) == 4);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasIdvPin()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasIdvRequestId()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeBytes(1, getIdvRequestIdBytes());
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeBytes(2, getIdvPinBytes());
      if ((0x4 & this.bitField0_) == 4)
        paramCodedOutputStream.writeBytes(3, getIdvGaiaIdBytes());
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Network.PhoneVerificationValidationRequest, Builder>
      implements Network.PhoneVerificationValidationRequestOrBuilder
    {
      private int bitField0_;
      private Object idvGaiaId_ = "";
      private Object idvPin_ = "";
      private Object idvRequestId_ = "";

      private Network.PhoneVerificationValidationRequest buildPartial()
      {
        Network.PhoneVerificationValidationRequest localPhoneVerificationValidationRequest = new Network.PhoneVerificationValidationRequest(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Network.PhoneVerificationValidationRequest.access$72702(localPhoneVerificationValidationRequest, this.idvRequestId_);
        if ((i & 0x2) == 2)
          k |= 2;
        Network.PhoneVerificationValidationRequest.access$72802(localPhoneVerificationValidationRequest, this.idvPin_);
        if ((i & 0x4) == 4)
          k |= 4;
        Network.PhoneVerificationValidationRequest.access$72902(localPhoneVerificationValidationRequest, this.idvGaiaId_);
        Network.PhoneVerificationValidationRequest.access$73002(localPhoneVerificationValidationRequest, k);
        return localPhoneVerificationValidationRequest;
      }

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 10:
            this.bitField0_ = (0x1 | this.bitField0_);
            this.idvRequestId_ = paramCodedInputStream.readBytes();
            break;
          case 18:
            this.bitField0_ = (0x2 | this.bitField0_);
            this.idvPin_ = paramCodedInputStream.readBytes();
            break;
          case 26:
          }
          this.bitField0_ = (0x4 | this.bitField0_);
          this.idvGaiaId_ = paramCodedInputStream.readBytes();
        }
      }

      public final Builder clear()
      {
        super.clear();
        this.idvRequestId_ = "";
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.idvPin_ = "";
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.idvGaiaId_ = "";
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        return this;
      }

      public final Builder clearIdvGaiaId()
      {
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.idvGaiaId_ = Network.PhoneVerificationValidationRequest.getDefaultInstance().getIdvGaiaId();
        return this;
      }

      public final Builder clearIdvPin()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.idvPin_ = Network.PhoneVerificationValidationRequest.getDefaultInstance().getIdvPin();
        return this;
      }

      public final Builder clearIdvRequestId()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.idvRequestId_ = Network.PhoneVerificationValidationRequest.getDefaultInstance().getIdvRequestId();
        return this;
      }

      public final Network.PhoneVerificationValidationRequest getDefaultInstanceForType()
      {
        return Network.PhoneVerificationValidationRequest.getDefaultInstance();
      }

      public final String getIdvGaiaId()
      {
        Object localObject = this.idvGaiaId_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.idvGaiaId_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final String getIdvPin()
      {
        Object localObject = this.idvPin_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.idvPin_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final String getIdvRequestId()
      {
        Object localObject = this.idvRequestId_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.idvRequestId_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final boolean hasIdvGaiaId()
      {
        if ((0x4 & this.bitField0_) == 4);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasIdvPin()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasIdvRequestId()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Network.PhoneVerificationValidationRequest paramPhoneVerificationValidationRequest)
      {
        if (paramPhoneVerificationValidationRequest == Network.PhoneVerificationValidationRequest.getDefaultInstance());
        while (true)
        {
          return this;
          if (paramPhoneVerificationValidationRequest.hasIdvRequestId())
            setIdvRequestId(paramPhoneVerificationValidationRequest.getIdvRequestId());
          if (paramPhoneVerificationValidationRequest.hasIdvPin())
            setIdvPin(paramPhoneVerificationValidationRequest.getIdvPin());
          if (paramPhoneVerificationValidationRequest.hasIdvGaiaId())
            setIdvGaiaId(paramPhoneVerificationValidationRequest.getIdvGaiaId());
        }
      }

      public final Builder setIdvGaiaId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x4 | this.bitField0_);
        this.idvGaiaId_ = paramString;
        return this;
      }

      public final Builder setIdvPin(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x2 | this.bitField0_);
        this.idvPin_ = paramString;
        return this;
      }

      public final Builder setIdvRequestId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x1 | this.bitField0_);
        this.idvRequestId_ = paramString;
        return this;
      }
    }
  }

  public static abstract interface PhoneVerificationValidationRequestOrBuilder extends MessageLiteOrBuilder
  {
    public abstract String getIdvGaiaId();

    public abstract String getIdvPin();

    public abstract String getIdvRequestId();

    public abstract boolean hasIdvGaiaId();

    public abstract boolean hasIdvPin();

    public abstract boolean hasIdvRequestId();
  }

  public static final class PhoneVerificationValidationResponse extends GeneratedMessageLite
    implements Network.PhoneVerificationValidationResponseOrBuilder
  {
    private static final PhoneVerificationValidationResponse defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private Status status_;

    static
    {
      PhoneVerificationValidationResponse localPhoneVerificationValidationResponse = new PhoneVerificationValidationResponse();
      defaultInstance = localPhoneVerificationValidationResponse;
      localPhoneVerificationValidationResponse.status_ = Status.UNKNOWN;
    }

    private PhoneVerificationValidationResponse()
    {
    }

    private PhoneVerificationValidationResponse(Builder paramBuilder)
    {
      super();
    }

    public static PhoneVerificationValidationResponse getDefaultInstance()
    {
      return defaultInstance;
    }

    public final PhoneVerificationValidationResponse getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeEnumSize(1, this.status_.getNumber());
        this.memoizedSerializedSize = k;
      }
    }

    public final Status getStatus()
    {
      return this.status_;
    }

    public final boolean hasStatus()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeEnum(1, this.status_.getNumber());
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Network.PhoneVerificationValidationResponse, Builder>
      implements Network.PhoneVerificationValidationResponseOrBuilder
    {
      private int bitField0_;
      private Network.PhoneVerificationValidationResponse.Status status_ = Network.PhoneVerificationValidationResponse.Status.UNKNOWN;

      private Network.PhoneVerificationValidationResponse buildPartial()
      {
        Network.PhoneVerificationValidationResponse localPhoneVerificationValidationResponse = new Network.PhoneVerificationValidationResponse(this, (byte)0);
        int i = 0x1 & this.bitField0_;
        int j = 0;
        if (i == 1)
          j = 1;
        Network.PhoneVerificationValidationResponse.access$73402(localPhoneVerificationValidationResponse, this.status_);
        Network.PhoneVerificationValidationResponse.access$73502(localPhoneVerificationValidationResponse, j);
        return localPhoneVerificationValidationResponse;
      }

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 8:
          }
          Network.PhoneVerificationValidationResponse.Status localStatus = Network.PhoneVerificationValidationResponse.Status.valueOf(paramCodedInputStream.readEnum());
          if (localStatus != null)
          {
            this.bitField0_ = (0x1 | this.bitField0_);
            this.status_ = localStatus;
          }
        }
      }

      public final Builder clear()
      {
        super.clear();
        this.status_ = Network.PhoneVerificationValidationResponse.Status.UNKNOWN;
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        return this;
      }

      public final Builder clearStatus()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.status_ = Network.PhoneVerificationValidationResponse.Status.UNKNOWN;
        return this;
      }

      public final Network.PhoneVerificationValidationResponse getDefaultInstanceForType()
      {
        return Network.PhoneVerificationValidationResponse.getDefaultInstance();
      }

      public final Network.PhoneVerificationValidationResponse.Status getStatus()
      {
        return this.status_;
      }

      public final boolean hasStatus()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Network.PhoneVerificationValidationResponse paramPhoneVerificationValidationResponse)
      {
        if (paramPhoneVerificationValidationResponse == Network.PhoneVerificationValidationResponse.getDefaultInstance());
        while (true)
        {
          return this;
          if (paramPhoneVerificationValidationResponse.hasStatus())
            setStatus(paramPhoneVerificationValidationResponse.getStatus());
        }
      }

      public final Builder setStatus(Network.PhoneVerificationValidationResponse.Status paramStatus)
      {
        if (paramStatus == null)
          throw new NullPointerException();
        this.bitField0_ = (0x1 | this.bitField0_);
        this.status_ = paramStatus;
        return this;
      }
    }

    public static enum Status
      implements Internal.EnumLite
    {
      private static Internal.EnumLiteMap<Status> internalValueMap = new Internal.EnumLiteMap()
      {
      };
      private final int value;

      static
      {
        SUCCESS = new Status("SUCCESS", 1, 1);
        FAILURE = new Status("FAILURE", 2, 2);
        Status[] arrayOfStatus = new Status[3];
        arrayOfStatus[0] = UNKNOWN;
        arrayOfStatus[1] = SUCCESS;
        arrayOfStatus[2] = FAILURE;
      }

      private Status(int paramInt1, int paramInt2)
      {
        this.value = paramInt1;
      }

      public static Status valueOf(int paramInt)
      {
        Status localStatus;
        switch (paramInt)
        {
        default:
          localStatus = null;
        case 0:
        case 1:
        case 2:
        }
        while (true)
        {
          return localStatus;
          localStatus = UNKNOWN;
          continue;
          localStatus = SUCCESS;
          continue;
          localStatus = FAILURE;
        }
      }

      public final int getNumber()
      {
        return this.value;
      }
    }
  }

  public static abstract interface PhoneVerificationValidationResponseOrBuilder extends MessageLiteOrBuilder
  {
    public abstract Network.PhoneVerificationValidationResponse.Status getStatus();

    public abstract boolean hasStatus();
  }

  public static final class PhotoActionRequest extends GeneratedMessageLite
    implements Network.PhotoActionRequestOrBuilder
  {
    private static final PhotoActionRequest defaultInstance;
    private static final long serialVersionUID;
    private Object activityId_;
    private long albumId_;
    private int bitField0_;
    private Object focusObfuscatedOwnerId_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private long ownerGaiaId_;
    private long photoId_;
    private long shapeId_;
    private Object subjectGaiaId_;
    private Type type_;
    private Data.MobileShape.Rect userShape_;

    static
    {
      PhotoActionRequest localPhotoActionRequest = new PhotoActionRequest();
      defaultInstance = localPhotoActionRequest;
      localPhotoActionRequest.type_ = Type.REPORT_SPAM;
      localPhotoActionRequest.ownerGaiaId_ = 0L;
      localPhotoActionRequest.focusObfuscatedOwnerId_ = "";
      localPhotoActionRequest.photoId_ = 0L;
      localPhotoActionRequest.activityId_ = "";
      localPhotoActionRequest.albumId_ = 0L;
      localPhotoActionRequest.subjectGaiaId_ = "";
      localPhotoActionRequest.shapeId_ = 0L;
      localPhotoActionRequest.userShape_ = Data.MobileShape.Rect.getDefaultInstance();
    }

    private PhotoActionRequest()
    {
    }

    private PhotoActionRequest(Builder paramBuilder)
    {
      super();
    }

    private ByteString getActivityIdBytes()
    {
      Object localObject = this.activityId_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.activityId_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static PhotoActionRequest getDefaultInstance()
    {
      return defaultInstance;
    }

    private ByteString getFocusObfuscatedOwnerIdBytes()
    {
      Object localObject = this.focusObfuscatedOwnerId_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.focusObfuscatedOwnerId_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    private ByteString getSubjectGaiaIdBytes()
    {
      Object localObject = this.subjectGaiaId_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.subjectGaiaId_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public final String getActivityId()
    {
      Object localObject1 = this.activityId_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.activityId_ = str;
      }
    }

    public final long getAlbumId()
    {
      return this.albumId_;
    }

    public final PhotoActionRequest getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final String getFocusObfuscatedOwnerId()
    {
      Object localObject1 = this.focusObfuscatedOwnerId_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.focusObfuscatedOwnerId_ = str;
      }
    }

    public final long getOwnerGaiaId()
    {
      return this.ownerGaiaId_;
    }

    public final long getPhotoId()
    {
      return this.photoId_;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeEnumSize(1, this.type_.getNumber());
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeInt64Size(2, this.ownerGaiaId_);
        if ((0x8 & this.bitField0_) == 8)
          k += CodedOutputStream.computeInt64Size(3, this.photoId_);
        if ((0x10 & this.bitField0_) == 16)
          k += CodedOutputStream.computeBytesSize(4, getActivityIdBytes());
        if ((0x20 & this.bitField0_) == 32)
          k += CodedOutputStream.computeInt64Size(5, this.albumId_);
        if ((0x4 & this.bitField0_) == 4)
          k += CodedOutputStream.computeBytesSize(6, getFocusObfuscatedOwnerIdBytes());
        if ((0x40 & this.bitField0_) == 64)
          k += CodedOutputStream.computeBytesSize(7, getSubjectGaiaIdBytes());
        if ((0x80 & this.bitField0_) == 128)
          k += CodedOutputStream.computeInt64Size(8, this.shapeId_);
        if ((0x100 & this.bitField0_) == 256)
          k += CodedOutputStream.computeMessageSize(9, this.userShape_);
        this.memoizedSerializedSize = k;
      }
    }

    public final long getShapeId()
    {
      return this.shapeId_;
    }

    public final String getSubjectGaiaId()
    {
      Object localObject1 = this.subjectGaiaId_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.subjectGaiaId_ = str;
      }
    }

    public final Type getType()
    {
      return this.type_;
    }

    public final Data.MobileShape.Rect getUserShape()
    {
      return this.userShape_;
    }

    public final boolean hasActivityId()
    {
      if ((0x10 & this.bitField0_) == 16);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasAlbumId()
    {
      if ((0x20 & this.bitField0_) == 32);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasFocusObfuscatedOwnerId()
    {
      if ((0x4 & this.bitField0_) == 4);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasOwnerGaiaId()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasPhotoId()
    {
      if ((0x8 & this.bitField0_) == 8);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasShapeId()
    {
      if ((0x80 & this.bitField0_) == 128);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasSubjectGaiaId()
    {
      if ((0x40 & this.bitField0_) == 64);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasType()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean hasUserShape()
    {
      if ((0x100 & this.bitField0_) == 256);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        if ((hasUserShape()) && (!getUserShape().isInitialized()))
        {
          this.memoizedIsInitialized = 0;
          i = 0;
        }
        else
        {
          this.memoizedIsInitialized = i;
        }
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeEnum(1, this.type_.getNumber());
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeInt64(2, this.ownerGaiaId_);
      if ((0x8 & this.bitField0_) == 8)
        paramCodedOutputStream.writeInt64(3, this.photoId_);
      if ((0x10 & this.bitField0_) == 16)
        paramCodedOutputStream.writeBytes(4, getActivityIdBytes());
      if ((0x20 & this.bitField0_) == 32)
        paramCodedOutputStream.writeInt64(5, this.albumId_);
      if ((0x4 & this.bitField0_) == 4)
        paramCodedOutputStream.writeBytes(6, getFocusObfuscatedOwnerIdBytes());
      if ((0x40 & this.bitField0_) == 64)
        paramCodedOutputStream.writeBytes(7, getSubjectGaiaIdBytes());
      if ((0x80 & this.bitField0_) == 128)
        paramCodedOutputStream.writeInt64(8, this.shapeId_);
      if ((0x100 & this.bitField0_) == 256)
        paramCodedOutputStream.writeMessage(9, this.userShape_);
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Network.PhotoActionRequest, Builder>
      implements Network.PhotoActionRequestOrBuilder
    {
      private Object activityId_ = "";
      private long albumId_;
      private int bitField0_;
      private Object focusObfuscatedOwnerId_ = "";
      private long ownerGaiaId_;
      private long photoId_;
      private long shapeId_;
      private Object subjectGaiaId_ = "";
      private Network.PhotoActionRequest.Type type_ = Network.PhotoActionRequest.Type.REPORT_SPAM;
      private Data.MobileShape.Rect userShape_ = Data.MobileShape.Rect.getDefaultInstance();

      private Network.PhotoActionRequest buildPartial()
      {
        Network.PhotoActionRequest localPhotoActionRequest = new Network.PhotoActionRequest(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Network.PhotoActionRequest.access$56902(localPhotoActionRequest, this.type_);
        if ((i & 0x2) == 2)
          k |= 2;
        Network.PhotoActionRequest.access$57002(localPhotoActionRequest, this.ownerGaiaId_);
        if ((i & 0x4) == 4)
          k |= 4;
        Network.PhotoActionRequest.access$57102(localPhotoActionRequest, this.focusObfuscatedOwnerId_);
        if ((i & 0x8) == 8)
          k |= 8;
        Network.PhotoActionRequest.access$57202(localPhotoActionRequest, this.photoId_);
        if ((i & 0x10) == 16)
          k |= 16;
        Network.PhotoActionRequest.access$57302(localPhotoActionRequest, this.activityId_);
        if ((i & 0x20) == 32)
          k |= 32;
        Network.PhotoActionRequest.access$57402(localPhotoActionRequest, this.albumId_);
        if ((i & 0x40) == 64)
          k |= 64;
        Network.PhotoActionRequest.access$57502(localPhotoActionRequest, this.subjectGaiaId_);
        if ((i & 0x80) == 128)
          k |= 128;
        Network.PhotoActionRequest.access$57602(localPhotoActionRequest, this.shapeId_);
        if ((i & 0x100) == 256)
          k |= 256;
        Network.PhotoActionRequest.access$57702(localPhotoActionRequest, this.userShape_);
        Network.PhotoActionRequest.access$57802(localPhotoActionRequest, k);
        return localPhotoActionRequest;
      }

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 8:
            Network.PhotoActionRequest.Type localType = Network.PhotoActionRequest.Type.valueOf(paramCodedInputStream.readEnum());
            if (localType == null)
              continue;
            this.bitField0_ = (0x1 | this.bitField0_);
            this.type_ = localType;
            break;
          case 16:
            this.bitField0_ = (0x2 | this.bitField0_);
            this.ownerGaiaId_ = paramCodedInputStream.readInt64();
            break;
          case 24:
            this.bitField0_ = (0x8 | this.bitField0_);
            this.photoId_ = paramCodedInputStream.readInt64();
            break;
          case 34:
            this.bitField0_ = (0x10 | this.bitField0_);
            this.activityId_ = paramCodedInputStream.readBytes();
            break;
          case 40:
            this.bitField0_ = (0x20 | this.bitField0_);
            this.albumId_ = paramCodedInputStream.readInt64();
            break;
          case 50:
            this.bitField0_ = (0x4 | this.bitField0_);
            this.focusObfuscatedOwnerId_ = paramCodedInputStream.readBytes();
            break;
          case 58:
            this.bitField0_ = (0x40 | this.bitField0_);
            this.subjectGaiaId_ = paramCodedInputStream.readBytes();
            break;
          case 64:
            this.bitField0_ = (0x80 | this.bitField0_);
            this.shapeId_ = paramCodedInputStream.readInt64();
            break;
          case 74:
          }
          Data.MobileShape.Rect.Builder localBuilder = Data.MobileShape.Rect.newBuilder();
          if (hasUserShape())
            localBuilder.mergeFrom(getUserShape());
          paramCodedInputStream.readMessage(localBuilder, paramExtensionRegistryLite);
          setUserShape(localBuilder.buildPartial());
        }
      }

      public final Builder clear()
      {
        super.clear();
        this.type_ = Network.PhotoActionRequest.Type.REPORT_SPAM;
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.ownerGaiaId_ = 0L;
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.focusObfuscatedOwnerId_ = "";
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.photoId_ = 0L;
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        this.activityId_ = "";
        this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        this.albumId_ = 0L;
        this.bitField0_ = (0xFFFFFFDF & this.bitField0_);
        this.subjectGaiaId_ = "";
        this.bitField0_ = (0xFFFFFFBF & this.bitField0_);
        this.shapeId_ = 0L;
        this.bitField0_ = (0xFFFFFF7F & this.bitField0_);
        this.userShape_ = Data.MobileShape.Rect.getDefaultInstance();
        this.bitField0_ = (0xFFFFFEFF & this.bitField0_);
        return this;
      }

      public final Builder clearActivityId()
      {
        this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        this.activityId_ = Network.PhotoActionRequest.getDefaultInstance().getActivityId();
        return this;
      }

      public final Builder clearAlbumId()
      {
        this.bitField0_ = (0xFFFFFFDF & this.bitField0_);
        this.albumId_ = 0L;
        return this;
      }

      public final Builder clearFocusObfuscatedOwnerId()
      {
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.focusObfuscatedOwnerId_ = Network.PhotoActionRequest.getDefaultInstance().getFocusObfuscatedOwnerId();
        return this;
      }

      public final Builder clearOwnerGaiaId()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.ownerGaiaId_ = 0L;
        return this;
      }

      public final Builder clearPhotoId()
      {
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        this.photoId_ = 0L;
        return this;
      }

      public final Builder clearShapeId()
      {
        this.bitField0_ = (0xFFFFFF7F & this.bitField0_);
        this.shapeId_ = 0L;
        return this;
      }

      public final Builder clearSubjectGaiaId()
      {
        this.bitField0_ = (0xFFFFFFBF & this.bitField0_);
        this.subjectGaiaId_ = Network.PhotoActionRequest.getDefaultInstance().getSubjectGaiaId();
        return this;
      }

      public final Builder clearType()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.type_ = Network.PhotoActionRequest.Type.REPORT_SPAM;
        return this;
      }

      public final Builder clearUserShape()
      {
        this.userShape_ = Data.MobileShape.Rect.getDefaultInstance();
        this.bitField0_ = (0xFFFFFEFF & this.bitField0_);
        return this;
      }

      public final String getActivityId()
      {
        Object localObject = this.activityId_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.activityId_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final long getAlbumId()
      {
        return this.albumId_;
      }

      public final Network.PhotoActionRequest getDefaultInstanceForType()
      {
        return Network.PhotoActionRequest.getDefaultInstance();
      }

      public final String getFocusObfuscatedOwnerId()
      {
        Object localObject = this.focusObfuscatedOwnerId_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.focusObfuscatedOwnerId_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final long getOwnerGaiaId()
      {
        return this.ownerGaiaId_;
      }

      public final long getPhotoId()
      {
        return this.photoId_;
      }

      public final long getShapeId()
      {
        return this.shapeId_;
      }

      public final String getSubjectGaiaId()
      {
        Object localObject = this.subjectGaiaId_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.subjectGaiaId_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final Network.PhotoActionRequest.Type getType()
      {
        return this.type_;
      }

      public final Data.MobileShape.Rect getUserShape()
      {
        return this.userShape_;
      }

      public final boolean hasActivityId()
      {
        if ((0x10 & this.bitField0_) == 16);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasAlbumId()
      {
        if ((0x20 & this.bitField0_) == 32);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasFocusObfuscatedOwnerId()
      {
        if ((0x4 & this.bitField0_) == 4);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasOwnerGaiaId()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasPhotoId()
      {
        if ((0x8 & this.bitField0_) == 8);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasShapeId()
      {
        if ((0x80 & this.bitField0_) == 128);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasSubjectGaiaId()
      {
        if ((0x40 & this.bitField0_) == 64);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasType()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean hasUserShape()
      {
        if ((0x100 & this.bitField0_) == 256);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean isInitialized()
      {
        if ((hasUserShape()) && (!getUserShape().isInitialized()));
        for (boolean bool = false; ; bool = true)
          return bool;
      }

      public final Builder mergeFrom(Network.PhotoActionRequest paramPhotoActionRequest)
      {
        if (paramPhotoActionRequest == Network.PhotoActionRequest.getDefaultInstance());
        do
        {
          return this;
          if (paramPhotoActionRequest.hasType())
            setType(paramPhotoActionRequest.getType());
          if (paramPhotoActionRequest.hasOwnerGaiaId())
            setOwnerGaiaId(paramPhotoActionRequest.getOwnerGaiaId());
          if (paramPhotoActionRequest.hasFocusObfuscatedOwnerId())
            setFocusObfuscatedOwnerId(paramPhotoActionRequest.getFocusObfuscatedOwnerId());
          if (paramPhotoActionRequest.hasPhotoId())
            setPhotoId(paramPhotoActionRequest.getPhotoId());
          if (paramPhotoActionRequest.hasActivityId())
            setActivityId(paramPhotoActionRequest.getActivityId());
          if (paramPhotoActionRequest.hasAlbumId())
            setAlbumId(paramPhotoActionRequest.getAlbumId());
          if (paramPhotoActionRequest.hasSubjectGaiaId())
            setSubjectGaiaId(paramPhotoActionRequest.getSubjectGaiaId());
          if (paramPhotoActionRequest.hasShapeId())
            setShapeId(paramPhotoActionRequest.getShapeId());
        }
        while (!paramPhotoActionRequest.hasUserShape());
        Data.MobileShape.Rect localRect = paramPhotoActionRequest.getUserShape();
        if (((0x100 & this.bitField0_) == 256) && (this.userShape_ != Data.MobileShape.Rect.getDefaultInstance()));
        for (this.userShape_ = Data.MobileShape.Rect.newBuilder(this.userShape_).mergeFrom(localRect).buildPartial(); ; this.userShape_ = localRect)
        {
          this.bitField0_ = (0x100 | this.bitField0_);
          break;
        }
      }

      public final Builder setActivityId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x10 | this.bitField0_);
        this.activityId_ = paramString;
        return this;
      }

      public final Builder setAlbumId(long paramLong)
      {
        this.bitField0_ = (0x20 | this.bitField0_);
        this.albumId_ = paramLong;
        return this;
      }

      public final Builder setFocusObfuscatedOwnerId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x4 | this.bitField0_);
        this.focusObfuscatedOwnerId_ = paramString;
        return this;
      }

      public final Builder setOwnerGaiaId(long paramLong)
      {
        this.bitField0_ = (0x2 | this.bitField0_);
        this.ownerGaiaId_ = paramLong;
        return this;
      }

      public final Builder setPhotoId(long paramLong)
      {
        this.bitField0_ = (0x8 | this.bitField0_);
        this.photoId_ = paramLong;
        return this;
      }

      public final Builder setShapeId(long paramLong)
      {
        this.bitField0_ = (0x80 | this.bitField0_);
        this.shapeId_ = paramLong;
        return this;
      }

      public final Builder setSubjectGaiaId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x40 | this.bitField0_);
        this.subjectGaiaId_ = paramString;
        return this;
      }

      public final Builder setType(Network.PhotoActionRequest.Type paramType)
      {
        if (paramType == null)
          throw new NullPointerException();
        this.bitField0_ = (0x1 | this.bitField0_);
        this.type_ = paramType;
        return this;
      }

      public final Builder setUserShape(Data.MobileShape.Rect.Builder paramBuilder)
      {
        this.userShape_ = paramBuilder.build();
        this.bitField0_ = (0x100 | this.bitField0_);
        return this;
      }

      public final Builder setUserShape(Data.MobileShape.Rect paramRect)
      {
        if (paramRect == null)
          throw new NullPointerException();
        this.userShape_ = paramRect;
        this.bitField0_ = (0x100 | this.bitField0_);
        return this;
      }
    }

    public static enum Type
      implements Internal.EnumLite
    {
      private static Internal.EnumLiteMap<Type> internalValueMap = new Internal.EnumLiteMap()
      {
      };
      private final int value;

      static
      {
        DELETE = new Type("DELETE", 1, 2);
        CREATE_PLUS_ONE = new Type("CREATE_PLUS_ONE", 2, 3);
        DELETE_PLUS_ONE = new Type("DELETE_PLUS_ONE", 3, 4);
        CREATE_TAG = new Type("CREATE_TAG", 4, 5);
        Type[] arrayOfType = new Type[5];
        arrayOfType[0] = REPORT_SPAM;
        arrayOfType[1] = DELETE;
        arrayOfType[2] = CREATE_PLUS_ONE;
        arrayOfType[3] = DELETE_PLUS_ONE;
        arrayOfType[4] = CREATE_TAG;
      }

      private Type(int paramInt1, int paramInt2)
      {
        this.value = paramInt1;
      }

      public static Type valueOf(int paramInt)
      {
        Type localType;
        switch (paramInt)
        {
        default:
          localType = null;
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
        }
        while (true)
        {
          return localType;
          localType = REPORT_SPAM;
          continue;
          localType = DELETE;
          continue;
          localType = CREATE_PLUS_ONE;
          continue;
          localType = DELETE_PLUS_ONE;
          continue;
          localType = CREATE_TAG;
        }
      }

      public final int getNumber()
      {
        return this.value;
      }
    }
  }

  public static abstract interface PhotoActionRequestOrBuilder extends MessageLiteOrBuilder
  {
    public abstract String getActivityId();

    public abstract long getAlbumId();

    public abstract String getFocusObfuscatedOwnerId();

    public abstract long getOwnerGaiaId();

    public abstract long getPhotoId();

    public abstract long getShapeId();

    public abstract String getSubjectGaiaId();

    public abstract Network.PhotoActionRequest.Type getType();

    public abstract Data.MobileShape.Rect getUserShape();

    public abstract boolean hasActivityId();

    public abstract boolean hasAlbumId();

    public abstract boolean hasFocusObfuscatedOwnerId();

    public abstract boolean hasOwnerGaiaId();

    public abstract boolean hasPhotoId();

    public abstract boolean hasShapeId();

    public abstract boolean hasSubjectGaiaId();

    public abstract boolean hasType();

    public abstract boolean hasUserShape();
  }

  public static final class PhotoActionResponse extends GeneratedMessageLite
    implements Network.PhotoActionResponseOrBuilder
  {
    private static final PhotoActionResponse defaultInstance = new PhotoActionResponse();
    private static final long serialVersionUID;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;

    private PhotoActionResponse()
    {
    }

    private PhotoActionResponse(Builder paramBuilder)
    {
      super();
    }

    public static PhotoActionResponse getDefaultInstance()
    {
      return defaultInstance;
    }

    public final PhotoActionResponse getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      while (true)
      {
        return i;
        this.memoizedSerializedSize = 0;
        i = 0;
      }
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Network.PhotoActionResponse, Builder>
      implements Network.PhotoActionResponseOrBuilder
    {
      private Network.PhotoActionResponse buildPartial()
      {
        return new Network.PhotoActionResponse(this, (byte)0);
      }

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        int i;
        do
        {
          i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
          case 0:
          }
        }
        while (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i));
        return this;
      }

      public final Builder clear()
      {
        super.clear();
        return this;
      }

      public final Network.PhotoActionResponse getDefaultInstanceForType()
      {
        return Network.PhotoActionResponse.getDefaultInstance();
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Network.PhotoActionResponse paramPhotoActionResponse)
      {
        if (paramPhotoActionResponse == Network.PhotoActionResponse.getDefaultInstance());
        return this;
      }
    }
  }

  public static abstract interface PhotoActionResponseOrBuilder extends MessageLiteOrBuilder
  {
  }

  public static final class PhotoAlbumOptions extends GeneratedMessageLite
    implements Network.PhotoAlbumOptionsOrBuilder
  {
    private static final PhotoAlbumOptions defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private int maxPreviewCount_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;

    static
    {
      PhotoAlbumOptions localPhotoAlbumOptions = new PhotoAlbumOptions();
      defaultInstance = localPhotoAlbumOptions;
      localPhotoAlbumOptions.maxPreviewCount_ = 0;
    }

    private PhotoAlbumOptions()
    {
    }

    private PhotoAlbumOptions(Builder paramBuilder)
    {
      super();
    }

    public static PhotoAlbumOptions getDefaultInstance()
    {
      return defaultInstance;
    }

    public static Builder newBuilder()
    {
      return Builder.access$67100();
    }

    public static Builder newBuilder(PhotoAlbumOptions paramPhotoAlbumOptions)
    {
      return Builder.access$67100().mergeFrom(paramPhotoAlbumOptions);
    }

    public final PhotoAlbumOptions getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final int getMaxPreviewCount()
    {
      return this.maxPreviewCount_;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeInt32Size(1, this.maxPreviewCount_);
        this.memoizedSerializedSize = k;
      }
    }

    public final boolean hasMaxPreviewCount()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeInt32(1, this.maxPreviewCount_);
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Network.PhotoAlbumOptions, Builder>
      implements Network.PhotoAlbumOptionsOrBuilder
    {
      private int bitField0_;
      private int maxPreviewCount_;

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 8:
          }
          this.bitField0_ = (0x1 | this.bitField0_);
          this.maxPreviewCount_ = paramCodedInputStream.readInt32();
        }
      }

      public final Network.PhotoAlbumOptions build()
      {
        Network.PhotoAlbumOptions localPhotoAlbumOptions = buildPartial();
        if (!localPhotoAlbumOptions.isInitialized())
          throw new UninitializedMessageException();
        return localPhotoAlbumOptions;
      }

      public final Network.PhotoAlbumOptions buildPartial()
      {
        Network.PhotoAlbumOptions localPhotoAlbumOptions = new Network.PhotoAlbumOptions(this, (byte)0);
        int i = 0x1 & this.bitField0_;
        int j = 0;
        if (i == 1)
          j = 1;
        Network.PhotoAlbumOptions.access$67302(localPhotoAlbumOptions, this.maxPreviewCount_);
        Network.PhotoAlbumOptions.access$67402(localPhotoAlbumOptions, j);
        return localPhotoAlbumOptions;
      }

      public final Builder clear()
      {
        super.clear();
        this.maxPreviewCount_ = 0;
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        return this;
      }

      public final Builder clearMaxPreviewCount()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.maxPreviewCount_ = 0;
        return this;
      }

      public final Network.PhotoAlbumOptions getDefaultInstanceForType()
      {
        return Network.PhotoAlbumOptions.getDefaultInstance();
      }

      public final int getMaxPreviewCount()
      {
        return this.maxPreviewCount_;
      }

      public final boolean hasMaxPreviewCount()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Network.PhotoAlbumOptions paramPhotoAlbumOptions)
      {
        if (paramPhotoAlbumOptions == Network.PhotoAlbumOptions.getDefaultInstance());
        while (true)
        {
          return this;
          if (paramPhotoAlbumOptions.hasMaxPreviewCount())
            setMaxPreviewCount(paramPhotoAlbumOptions.getMaxPreviewCount());
        }
      }

      public final Builder setMaxPreviewCount(int paramInt)
      {
        this.bitField0_ = (0x1 | this.bitField0_);
        this.maxPreviewCount_ = paramInt;
        return this;
      }
    }
  }

  public static abstract interface PhotoAlbumOptionsOrBuilder extends MessageLiteOrBuilder
  {
    public abstract int getMaxPreviewCount();

    public abstract boolean hasMaxPreviewCount();
  }

  public static final class PhotoOptions extends GeneratedMessageLite
    implements Network.PhotoOptionsOrBuilder
  {
    private static final PhotoOptions defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private int maxCommentCount_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private boolean returnComments_;
    private boolean returnDownloadability_;
    private boolean returnImageUrls_;
    private boolean returnPlusOnes_;
    private boolean returnShapes_;
    private boolean returnVideoUrls_;

    static
    {
      PhotoOptions localPhotoOptions = new PhotoOptions();
      defaultInstance = localPhotoOptions;
      localPhotoOptions.returnImageUrls_ = true;
      localPhotoOptions.returnComments_ = true;
      localPhotoOptions.returnShapes_ = true;
      localPhotoOptions.returnVideoUrls_ = true;
      localPhotoOptions.returnPlusOnes_ = true;
      localPhotoOptions.maxCommentCount_ = 0;
      localPhotoOptions.returnDownloadability_ = true;
    }

    private PhotoOptions()
    {
    }

    private PhotoOptions(Builder paramBuilder)
    {
      super();
    }

    public static PhotoOptions getDefaultInstance()
    {
      return defaultInstance;
    }

    public static Builder newBuilder()
    {
      return Builder.access$66000();
    }

    public static Builder newBuilder(PhotoOptions paramPhotoOptions)
    {
      return Builder.access$66000().mergeFrom(paramPhotoOptions);
    }

    public final PhotoOptions getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final int getMaxCommentCount()
    {
      return this.maxCommentCount_;
    }

    public final boolean getReturnComments()
    {
      return this.returnComments_;
    }

    public final boolean getReturnDownloadability()
    {
      return this.returnDownloadability_;
    }

    public final boolean getReturnImageUrls()
    {
      return this.returnImageUrls_;
    }

    public final boolean getReturnPlusOnes()
    {
      return this.returnPlusOnes_;
    }

    public final boolean getReturnShapes()
    {
      return this.returnShapes_;
    }

    public final boolean getReturnVideoUrls()
    {
      return this.returnVideoUrls_;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeBoolSize(1, this.returnImageUrls_);
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeBoolSize(2, this.returnComments_);
        if ((0x4 & this.bitField0_) == 4)
          k += CodedOutputStream.computeBoolSize(3, this.returnShapes_);
        if ((0x8 & this.bitField0_) == 8)
          k += CodedOutputStream.computeBoolSize(4, this.returnVideoUrls_);
        if ((0x10 & this.bitField0_) == 16)
          k += CodedOutputStream.computeBoolSize(5, this.returnPlusOnes_);
        if ((0x20 & this.bitField0_) == 32)
          k += CodedOutputStream.computeInt32Size(6, this.maxCommentCount_);
        if ((0x40 & this.bitField0_) == 64)
          k += CodedOutputStream.computeBoolSize(7, this.returnDownloadability_);
        this.memoizedSerializedSize = k;
      }
    }

    public final boolean hasMaxCommentCount()
    {
      if ((0x20 & this.bitField0_) == 32);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasReturnComments()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasReturnDownloadability()
    {
      if ((0x40 & this.bitField0_) == 64);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasReturnImageUrls()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean hasReturnPlusOnes()
    {
      if ((0x10 & this.bitField0_) == 16);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasReturnShapes()
    {
      if ((0x4 & this.bitField0_) == 4);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasReturnVideoUrls()
    {
      if ((0x8 & this.bitField0_) == 8);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeBool(1, this.returnImageUrls_);
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeBool(2, this.returnComments_);
      if ((0x4 & this.bitField0_) == 4)
        paramCodedOutputStream.writeBool(3, this.returnShapes_);
      if ((0x8 & this.bitField0_) == 8)
        paramCodedOutputStream.writeBool(4, this.returnVideoUrls_);
      if ((0x10 & this.bitField0_) == 16)
        paramCodedOutputStream.writeBool(5, this.returnPlusOnes_);
      if ((0x20 & this.bitField0_) == 32)
        paramCodedOutputStream.writeInt32(6, this.maxCommentCount_);
      if ((0x40 & this.bitField0_) == 64)
        paramCodedOutputStream.writeBool(7, this.returnDownloadability_);
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Network.PhotoOptions, Builder>
      implements Network.PhotoOptionsOrBuilder
    {
      private int bitField0_;
      private int maxCommentCount_;
      private boolean returnComments_ = true;
      private boolean returnDownloadability_ = true;
      private boolean returnImageUrls_ = true;
      private boolean returnPlusOnes_ = true;
      private boolean returnShapes_ = true;
      private boolean returnVideoUrls_ = true;

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 8:
            this.bitField0_ = (0x1 | this.bitField0_);
            this.returnImageUrls_ = paramCodedInputStream.readBool();
            break;
          case 16:
            this.bitField0_ = (0x2 | this.bitField0_);
            this.returnComments_ = paramCodedInputStream.readBool();
            break;
          case 24:
            this.bitField0_ = (0x4 | this.bitField0_);
            this.returnShapes_ = paramCodedInputStream.readBool();
            break;
          case 32:
            this.bitField0_ = (0x8 | this.bitField0_);
            this.returnVideoUrls_ = paramCodedInputStream.readBool();
            break;
          case 40:
            this.bitField0_ = (0x10 | this.bitField0_);
            this.returnPlusOnes_ = paramCodedInputStream.readBool();
            break;
          case 48:
            this.bitField0_ = (0x20 | this.bitField0_);
            this.maxCommentCount_ = paramCodedInputStream.readInt32();
            break;
          case 56:
          }
          this.bitField0_ = (0x40 | this.bitField0_);
          this.returnDownloadability_ = paramCodedInputStream.readBool();
        }
      }

      public final Network.PhotoOptions build()
      {
        Network.PhotoOptions localPhotoOptions = buildPartial();
        if (!localPhotoOptions.isInitialized())
          throw new UninitializedMessageException();
        return localPhotoOptions;
      }

      public final Network.PhotoOptions buildPartial()
      {
        Network.PhotoOptions localPhotoOptions = new Network.PhotoOptions(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Network.PhotoOptions.access$66202(localPhotoOptions, this.returnImageUrls_);
        if ((i & 0x2) == 2)
          k |= 2;
        Network.PhotoOptions.access$66302(localPhotoOptions, this.returnComments_);
        if ((i & 0x4) == 4)
          k |= 4;
        Network.PhotoOptions.access$66402(localPhotoOptions, this.returnShapes_);
        if ((i & 0x8) == 8)
          k |= 8;
        Network.PhotoOptions.access$66502(localPhotoOptions, this.returnVideoUrls_);
        if ((i & 0x10) == 16)
          k |= 16;
        Network.PhotoOptions.access$66602(localPhotoOptions, this.returnPlusOnes_);
        if ((i & 0x20) == 32)
          k |= 32;
        Network.PhotoOptions.access$66702(localPhotoOptions, this.maxCommentCount_);
        if ((i & 0x40) == 64)
          k |= 64;
        Network.PhotoOptions.access$66802(localPhotoOptions, this.returnDownloadability_);
        Network.PhotoOptions.access$66902(localPhotoOptions, k);
        return localPhotoOptions;
      }

      public final Builder clear()
      {
        super.clear();
        this.returnImageUrls_ = true;
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.returnComments_ = true;
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.returnShapes_ = true;
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.returnVideoUrls_ = true;
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        this.returnPlusOnes_ = true;
        this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        this.maxCommentCount_ = 0;
        this.bitField0_ = (0xFFFFFFDF & this.bitField0_);
        this.returnDownloadability_ = true;
        this.bitField0_ = (0xFFFFFFBF & this.bitField0_);
        return this;
      }

      public final Builder clearMaxCommentCount()
      {
        this.bitField0_ = (0xFFFFFFDF & this.bitField0_);
        this.maxCommentCount_ = 0;
        return this;
      }

      public final Builder clearReturnComments()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.returnComments_ = true;
        return this;
      }

      public final Builder clearReturnDownloadability()
      {
        this.bitField0_ = (0xFFFFFFBF & this.bitField0_);
        this.returnDownloadability_ = true;
        return this;
      }

      public final Builder clearReturnImageUrls()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.returnImageUrls_ = true;
        return this;
      }

      public final Builder clearReturnPlusOnes()
      {
        this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        this.returnPlusOnes_ = true;
        return this;
      }

      public final Builder clearReturnShapes()
      {
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.returnShapes_ = true;
        return this;
      }

      public final Builder clearReturnVideoUrls()
      {
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        this.returnVideoUrls_ = true;
        return this;
      }

      public final Network.PhotoOptions getDefaultInstanceForType()
      {
        return Network.PhotoOptions.getDefaultInstance();
      }

      public final int getMaxCommentCount()
      {
        return this.maxCommentCount_;
      }

      public final boolean getReturnComments()
      {
        return this.returnComments_;
      }

      public final boolean getReturnDownloadability()
      {
        return this.returnDownloadability_;
      }

      public final boolean getReturnImageUrls()
      {
        return this.returnImageUrls_;
      }

      public final boolean getReturnPlusOnes()
      {
        return this.returnPlusOnes_;
      }

      public final boolean getReturnShapes()
      {
        return this.returnShapes_;
      }

      public final boolean getReturnVideoUrls()
      {
        return this.returnVideoUrls_;
      }

      public final boolean hasMaxCommentCount()
      {
        if ((0x20 & this.bitField0_) == 32);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasReturnComments()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasReturnDownloadability()
      {
        if ((0x40 & this.bitField0_) == 64);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasReturnImageUrls()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean hasReturnPlusOnes()
      {
        if ((0x10 & this.bitField0_) == 16);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasReturnShapes()
      {
        if ((0x4 & this.bitField0_) == 4);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasReturnVideoUrls()
      {
        if ((0x8 & this.bitField0_) == 8);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Network.PhotoOptions paramPhotoOptions)
      {
        if (paramPhotoOptions == Network.PhotoOptions.getDefaultInstance());
        while (true)
        {
          return this;
          if (paramPhotoOptions.hasReturnImageUrls())
            setReturnImageUrls(paramPhotoOptions.getReturnImageUrls());
          if (paramPhotoOptions.hasReturnComments())
            setReturnComments(paramPhotoOptions.getReturnComments());
          if (paramPhotoOptions.hasReturnShapes())
            setReturnShapes(paramPhotoOptions.getReturnShapes());
          if (paramPhotoOptions.hasReturnVideoUrls())
            setReturnVideoUrls(paramPhotoOptions.getReturnVideoUrls());
          if (paramPhotoOptions.hasReturnPlusOnes())
            setReturnPlusOnes(paramPhotoOptions.getReturnPlusOnes());
          if (paramPhotoOptions.hasMaxCommentCount())
            setMaxCommentCount(paramPhotoOptions.getMaxCommentCount());
          if (paramPhotoOptions.hasReturnDownloadability())
            setReturnDownloadability(paramPhotoOptions.getReturnDownloadability());
        }
      }

      public final Builder setMaxCommentCount(int paramInt)
      {
        this.bitField0_ = (0x20 | this.bitField0_);
        this.maxCommentCount_ = paramInt;
        return this;
      }

      public final Builder setReturnComments(boolean paramBoolean)
      {
        this.bitField0_ = (0x2 | this.bitField0_);
        this.returnComments_ = paramBoolean;
        return this;
      }

      public final Builder setReturnDownloadability(boolean paramBoolean)
      {
        this.bitField0_ = (0x40 | this.bitField0_);
        this.returnDownloadability_ = paramBoolean;
        return this;
      }

      public final Builder setReturnImageUrls(boolean paramBoolean)
      {
        this.bitField0_ = (0x1 | this.bitField0_);
        this.returnImageUrls_ = paramBoolean;
        return this;
      }

      public final Builder setReturnPlusOnes(boolean paramBoolean)
      {
        this.bitField0_ = (0x10 | this.bitField0_);
        this.returnPlusOnes_ = paramBoolean;
        return this;
      }

      public final Builder setReturnShapes(boolean paramBoolean)
      {
        this.bitField0_ = (0x4 | this.bitField0_);
        this.returnShapes_ = paramBoolean;
        return this;
      }

      public final Builder setReturnVideoUrls(boolean paramBoolean)
      {
        this.bitField0_ = (0x8 | this.bitField0_);
        this.returnVideoUrls_ = paramBoolean;
        return this;
      }
    }
  }

  public static abstract interface PhotoOptionsOrBuilder extends MessageLiteOrBuilder
  {
    public abstract int getMaxCommentCount();

    public abstract boolean getReturnComments();

    public abstract boolean getReturnDownloadability();

    public abstract boolean getReturnImageUrls();

    public abstract boolean getReturnPlusOnes();

    public abstract boolean getReturnShapes();

    public abstract boolean getReturnVideoUrls();

    public abstract boolean hasMaxCommentCount();

    public abstract boolean hasReturnComments();

    public abstract boolean hasReturnDownloadability();

    public abstract boolean hasReturnImageUrls();

    public abstract boolean hasReturnPlusOnes();

    public abstract boolean hasReturnShapes();

    public abstract boolean hasReturnVideoUrls();
  }

  public static final class PhotoOrder extends GeneratedMessageLite
    implements Network.PhotoOrderOrBuilder
  {
    private static final PhotoOrder defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private long entityVersion_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private Object ownerId_;
    private long photoId_;

    static
    {
      PhotoOrder localPhotoOrder = new PhotoOrder();
      defaultInstance = localPhotoOrder;
      localPhotoOrder.ownerId_ = "";
      localPhotoOrder.photoId_ = 0L;
      localPhotoOrder.entityVersion_ = 0L;
    }

    private PhotoOrder()
    {
    }

    private PhotoOrder(Builder paramBuilder)
    {
      super();
    }

    public static PhotoOrder getDefaultInstance()
    {
      return defaultInstance;
    }

    private ByteString getOwnerIdBytes()
    {
      Object localObject = this.ownerId_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.ownerId_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static Builder newBuilder()
    {
      return Builder.access$10800();
    }

    public final PhotoOrder getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final long getEntityVersion()
    {
      return this.entityVersion_;
    }

    public final String getOwnerId()
    {
      Object localObject1 = this.ownerId_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.ownerId_ = str;
      }
    }

    public final long getPhotoId()
    {
      return this.photoId_;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeBytesSize(1, getOwnerIdBytes());
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeInt64Size(2, this.photoId_);
        if ((0x4 & this.bitField0_) == 4)
          k += CodedOutputStream.computeInt64Size(3, this.entityVersion_);
        this.memoizedSerializedSize = k;
      }
    }

    public final boolean hasEntityVersion()
    {
      if ((0x4 & this.bitField0_) == 4);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasOwnerId()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean hasPhotoId()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeBytes(1, getOwnerIdBytes());
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeInt64(2, this.photoId_);
      if ((0x4 & this.bitField0_) == 4)
        paramCodedOutputStream.writeInt64(3, this.entityVersion_);
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Network.PhotoOrder, Builder>
      implements Network.PhotoOrderOrBuilder
    {
      private int bitField0_;
      private long entityVersion_;
      private Object ownerId_ = "";
      private long photoId_;

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 10:
            this.bitField0_ = (0x1 | this.bitField0_);
            this.ownerId_ = paramCodedInputStream.readBytes();
            break;
          case 16:
            this.bitField0_ = (0x2 | this.bitField0_);
            this.photoId_ = paramCodedInputStream.readInt64();
            break;
          case 24:
          }
          this.bitField0_ = (0x4 | this.bitField0_);
          this.entityVersion_ = paramCodedInputStream.readInt64();
        }
      }

      public final Network.PhotoOrder build()
      {
        Network.PhotoOrder localPhotoOrder = buildPartial();
        if (!localPhotoOrder.isInitialized())
          throw new UninitializedMessageException();
        return localPhotoOrder;
      }

      public final Network.PhotoOrder buildPartial()
      {
        Network.PhotoOrder localPhotoOrder = new Network.PhotoOrder(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Network.PhotoOrder.access$11002(localPhotoOrder, this.ownerId_);
        if ((i & 0x2) == 2)
          k |= 2;
        Network.PhotoOrder.access$11102(localPhotoOrder, this.photoId_);
        if ((i & 0x4) == 4)
          k |= 4;
        Network.PhotoOrder.access$11202(localPhotoOrder, this.entityVersion_);
        Network.PhotoOrder.access$11302(localPhotoOrder, k);
        return localPhotoOrder;
      }

      public final Builder clear()
      {
        super.clear();
        this.ownerId_ = "";
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.photoId_ = 0L;
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.entityVersion_ = 0L;
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        return this;
      }

      public final Builder clearEntityVersion()
      {
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.entityVersion_ = 0L;
        return this;
      }

      public final Builder clearOwnerId()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.ownerId_ = Network.PhotoOrder.getDefaultInstance().getOwnerId();
        return this;
      }

      public final Builder clearPhotoId()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.photoId_ = 0L;
        return this;
      }

      public final Network.PhotoOrder getDefaultInstanceForType()
      {
        return Network.PhotoOrder.getDefaultInstance();
      }

      public final long getEntityVersion()
      {
        return this.entityVersion_;
      }

      public final String getOwnerId()
      {
        Object localObject = this.ownerId_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.ownerId_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final long getPhotoId()
      {
        return this.photoId_;
      }

      public final boolean hasEntityVersion()
      {
        if ((0x4 & this.bitField0_) == 4);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasOwnerId()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean hasPhotoId()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Network.PhotoOrder paramPhotoOrder)
      {
        if (paramPhotoOrder == Network.PhotoOrder.getDefaultInstance());
        while (true)
        {
          return this;
          if (paramPhotoOrder.hasOwnerId())
            setOwnerId(paramPhotoOrder.getOwnerId());
          if (paramPhotoOrder.hasPhotoId())
            setPhotoId(paramPhotoOrder.getPhotoId());
          if (paramPhotoOrder.hasEntityVersion())
            setEntityVersion(paramPhotoOrder.getEntityVersion());
        }
      }

      public final Builder setEntityVersion(long paramLong)
      {
        this.bitField0_ = (0x4 | this.bitField0_);
        this.entityVersion_ = paramLong;
        return this;
      }

      public final Builder setOwnerId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x1 | this.bitField0_);
        this.ownerId_ = paramString;
        return this;
      }

      public final Builder setPhotoId(long paramLong)
      {
        this.bitField0_ = (0x2 | this.bitField0_);
        this.photoId_ = paramLong;
        return this;
      }
    }
  }

  public static abstract interface PhotoOrderOrBuilder extends MessageLiteOrBuilder
  {
    public abstract long getEntityVersion();

    public abstract String getOwnerId();

    public abstract long getPhotoId();

    public abstract boolean hasEntityVersion();

    public abstract boolean hasOwnerId();

    public abstract boolean hasPhotoId();
  }

  public static final class PhotoPlusOneRequest extends GeneratedMessageLite
    implements Network.PhotoPlusOneRequestOrBuilder
  {
    private static final PhotoPlusOneRequest defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private boolean like_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private long ownerGaiaId_;
    private long photoId_;

    static
    {
      PhotoPlusOneRequest localPhotoPlusOneRequest = new PhotoPlusOneRequest();
      defaultInstance = localPhotoPlusOneRequest;
      localPhotoPlusOneRequest.like_ = false;
      localPhotoPlusOneRequest.photoId_ = 0L;
      localPhotoPlusOneRequest.ownerGaiaId_ = 0L;
    }

    private PhotoPlusOneRequest()
    {
    }

    private PhotoPlusOneRequest(Builder paramBuilder)
    {
      super();
    }

    public static PhotoPlusOneRequest getDefaultInstance()
    {
      return defaultInstance;
    }

    public final PhotoPlusOneRequest getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final boolean getLike()
    {
      return this.like_;
    }

    public final long getOwnerGaiaId()
    {
      return this.ownerGaiaId_;
    }

    public final long getPhotoId()
    {
      return this.photoId_;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeBoolSize(1, this.like_);
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeInt64Size(2, this.photoId_);
        if ((0x4 & this.bitField0_) == 4)
          k += CodedOutputStream.computeInt64Size(3, this.ownerGaiaId_);
        this.memoizedSerializedSize = k;
      }
    }

    public final boolean hasLike()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean hasOwnerGaiaId()
    {
      if ((0x4 & this.bitField0_) == 4);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasPhotoId()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeBool(1, this.like_);
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeInt64(2, this.photoId_);
      if ((0x4 & this.bitField0_) == 4)
        paramCodedOutputStream.writeInt64(3, this.ownerGaiaId_);
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Network.PhotoPlusOneRequest, Builder>
      implements Network.PhotoPlusOneRequestOrBuilder
    {
      private int bitField0_;
      private boolean like_;
      private long ownerGaiaId_;
      private long photoId_;

      private Network.PhotoPlusOneRequest buildPartial()
      {
        Network.PhotoPlusOneRequest localPhotoPlusOneRequest = new Network.PhotoPlusOneRequest(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Network.PhotoPlusOneRequest.access$30402(localPhotoPlusOneRequest, this.like_);
        if ((i & 0x2) == 2)
          k |= 2;
        Network.PhotoPlusOneRequest.access$30502(localPhotoPlusOneRequest, this.photoId_);
        if ((i & 0x4) == 4)
          k |= 4;
        Network.PhotoPlusOneRequest.access$30602(localPhotoPlusOneRequest, this.ownerGaiaId_);
        Network.PhotoPlusOneRequest.access$30702(localPhotoPlusOneRequest, k);
        return localPhotoPlusOneRequest;
      }

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 8:
            this.bitField0_ = (0x1 | this.bitField0_);
            this.like_ = paramCodedInputStream.readBool();
            break;
          case 16:
            this.bitField0_ = (0x2 | this.bitField0_);
            this.photoId_ = paramCodedInputStream.readInt64();
            break;
          case 24:
          }
          this.bitField0_ = (0x4 | this.bitField0_);
          this.ownerGaiaId_ = paramCodedInputStream.readInt64();
        }
      }

      public final Builder clear()
      {
        super.clear();
        this.like_ = false;
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.photoId_ = 0L;
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.ownerGaiaId_ = 0L;
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        return this;
      }

      public final Builder clearLike()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.like_ = false;
        return this;
      }

      public final Builder clearOwnerGaiaId()
      {
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.ownerGaiaId_ = 0L;
        return this;
      }

      public final Builder clearPhotoId()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.photoId_ = 0L;
        return this;
      }

      public final Network.PhotoPlusOneRequest getDefaultInstanceForType()
      {
        return Network.PhotoPlusOneRequest.getDefaultInstance();
      }

      public final boolean getLike()
      {
        return this.like_;
      }

      public final long getOwnerGaiaId()
      {
        return this.ownerGaiaId_;
      }

      public final long getPhotoId()
      {
        return this.photoId_;
      }

      public final boolean hasLike()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean hasOwnerGaiaId()
      {
        if ((0x4 & this.bitField0_) == 4);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasPhotoId()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Network.PhotoPlusOneRequest paramPhotoPlusOneRequest)
      {
        if (paramPhotoPlusOneRequest == Network.PhotoPlusOneRequest.getDefaultInstance());
        while (true)
        {
          return this;
          if (paramPhotoPlusOneRequest.hasLike())
            setLike(paramPhotoPlusOneRequest.getLike());
          if (paramPhotoPlusOneRequest.hasPhotoId())
            setPhotoId(paramPhotoPlusOneRequest.getPhotoId());
          if (paramPhotoPlusOneRequest.hasOwnerGaiaId())
            setOwnerGaiaId(paramPhotoPlusOneRequest.getOwnerGaiaId());
        }
      }

      public final Builder setLike(boolean paramBoolean)
      {
        this.bitField0_ = (0x1 | this.bitField0_);
        this.like_ = paramBoolean;
        return this;
      }

      public final Builder setOwnerGaiaId(long paramLong)
      {
        this.bitField0_ = (0x4 | this.bitField0_);
        this.ownerGaiaId_ = paramLong;
        return this;
      }

      public final Builder setPhotoId(long paramLong)
      {
        this.bitField0_ = (0x2 | this.bitField0_);
        this.photoId_ = paramLong;
        return this;
      }
    }
  }

  public static abstract interface PhotoPlusOneRequestOrBuilder extends MessageLiteOrBuilder
  {
    public abstract boolean getLike();

    public abstract long getOwnerGaiaId();

    public abstract long getPhotoId();

    public abstract boolean hasLike();

    public abstract boolean hasOwnerGaiaId();

    public abstract boolean hasPhotoId();
  }

  public static final class PhotoPlusOneResponse extends GeneratedMessageLite
    implements Network.PhotoPlusOneResponseOrBuilder
  {
    private static final PhotoPlusOneResponse defaultInstance = new PhotoPlusOneResponse();
    private static final long serialVersionUID;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;

    private PhotoPlusOneResponse()
    {
    }

    private PhotoPlusOneResponse(Builder paramBuilder)
    {
      super();
    }

    public static PhotoPlusOneResponse getDefaultInstance()
    {
      return defaultInstance;
    }

    public final PhotoPlusOneResponse getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      while (true)
      {
        return i;
        this.memoizedSerializedSize = 0;
        i = 0;
      }
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Network.PhotoPlusOneResponse, Builder>
      implements Network.PhotoPlusOneResponseOrBuilder
    {
      private Network.PhotoPlusOneResponse buildPartial()
      {
        return new Network.PhotoPlusOneResponse(this, (byte)0);
      }

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        int i;
        do
        {
          i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
          case 0:
          }
        }
        while (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i));
        return this;
      }

      public final Builder clear()
      {
        super.clear();
        return this;
      }

      public final Network.PhotoPlusOneResponse getDefaultInstanceForType()
      {
        return Network.PhotoPlusOneResponse.getDefaultInstance();
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Network.PhotoPlusOneResponse paramPhotoPlusOneResponse)
      {
        if (paramPhotoPlusOneResponse == Network.PhotoPlusOneResponse.getDefaultInstance());
        return this;
      }
    }
  }

  public static abstract interface PhotoPlusOneResponseOrBuilder extends MessageLiteOrBuilder
  {
  }

  public static final class PhotosHomeRequest extends GeneratedMessageLite
    implements Network.PhotosHomeRequestOrBuilder
  {
    private static final PhotosHomeRequest defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private int maxCoverCountPerSection_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;

    static
    {
      PhotosHomeRequest localPhotosHomeRequest = new PhotosHomeRequest();
      defaultInstance = localPhotosHomeRequest;
      localPhotosHomeRequest.maxCoverCountPerSection_ = 0;
    }

    private PhotosHomeRequest()
    {
    }

    private PhotosHomeRequest(Builder paramBuilder)
    {
      super();
    }

    public static PhotosHomeRequest getDefaultInstance()
    {
      return defaultInstance;
    }

    public final PhotosHomeRequest getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final int getMaxCoverCountPerSection()
    {
      return this.maxCoverCountPerSection_;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeInt32Size(1, this.maxCoverCountPerSection_);
        this.memoizedSerializedSize = k;
      }
    }

    public final boolean hasMaxCoverCountPerSection()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeInt32(1, this.maxCoverCountPerSection_);
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Network.PhotosHomeRequest, Builder>
      implements Network.PhotosHomeRequestOrBuilder
    {
      private int bitField0_;
      private int maxCoverCountPerSection_;

      private Network.PhotosHomeRequest buildPartial()
      {
        Network.PhotosHomeRequest localPhotosHomeRequest = new Network.PhotosHomeRequest(this, (byte)0);
        int i = 0x1 & this.bitField0_;
        int j = 0;
        if (i == 1)
          j = 1;
        Network.PhotosHomeRequest.access$55102(localPhotosHomeRequest, this.maxCoverCountPerSection_);
        Network.PhotosHomeRequest.access$55202(localPhotosHomeRequest, j);
        return localPhotosHomeRequest;
      }

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 8:
          }
          this.bitField0_ = (0x1 | this.bitField0_);
          this.maxCoverCountPerSection_ = paramCodedInputStream.readInt32();
        }
      }

      public final Builder clear()
      {
        super.clear();
        this.maxCoverCountPerSection_ = 0;
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        return this;
      }

      public final Builder clearMaxCoverCountPerSection()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.maxCoverCountPerSection_ = 0;
        return this;
      }

      public final Network.PhotosHomeRequest getDefaultInstanceForType()
      {
        return Network.PhotosHomeRequest.getDefaultInstance();
      }

      public final int getMaxCoverCountPerSection()
      {
        return this.maxCoverCountPerSection_;
      }

      public final boolean hasMaxCoverCountPerSection()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Network.PhotosHomeRequest paramPhotosHomeRequest)
      {
        if (paramPhotosHomeRequest == Network.PhotosHomeRequest.getDefaultInstance());
        while (true)
        {
          return this;
          if (paramPhotosHomeRequest.hasMaxCoverCountPerSection())
            setMaxCoverCountPerSection(paramPhotosHomeRequest.getMaxCoverCountPerSection());
        }
      }

      public final Builder setMaxCoverCountPerSection(int paramInt)
      {
        this.bitField0_ = (0x1 | this.bitField0_);
        this.maxCoverCountPerSection_ = paramInt;
        return this;
      }
    }
  }

  public static abstract interface PhotosHomeRequestOrBuilder extends MessageLiteOrBuilder
  {
    public abstract int getMaxCoverCountPerSection();

    public abstract boolean hasMaxCoverCountPerSection();
  }

  public static final class PhotosHomeResponse extends GeneratedMessageLite
    implements Network.PhotosHomeResponseOrBuilder
  {
    private static final PhotosHomeResponse defaultInstance;
    private static final long serialVersionUID;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private List<Section> section_;

    static
    {
      PhotosHomeResponse localPhotosHomeResponse = new PhotosHomeResponse();
      defaultInstance = localPhotosHomeResponse;
      localPhotosHomeResponse.section_ = Collections.emptyList();
    }

    private PhotosHomeResponse()
    {
    }

    private PhotosHomeResponse(Builder paramBuilder)
    {
      super();
    }

    public static PhotosHomeResponse getDefaultInstance()
    {
      return defaultInstance;
    }

    public final PhotosHomeResponse getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final Section getSection(int paramInt)
    {
      return (Section)this.section_.get(paramInt);
    }

    public final int getSectionCount()
    {
      return this.section_.size();
    }

    public final List<Section> getSectionList()
    {
      return this.section_;
    }

    public final SectionOrBuilder getSectionOrBuilder(int paramInt)
    {
      return (SectionOrBuilder)this.section_.get(paramInt);
    }

    public final List<? extends SectionOrBuilder> getSectionOrBuilderList()
    {
      return this.section_;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int j;
      for (int m = i; ; m = j)
      {
        return m;
        j = 0;
        for (int k = 0; k < this.section_.size(); k++)
          j += CodedOutputStream.computeMessageSize(1, (MessageLite)this.section_.get(k));
        this.memoizedSerializedSize = j;
      }
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        for (int k = 0; ; k++)
        {
          if (k >= getSectionCount())
            break label61;
          if (!getSection(k).isInitialized())
          {
            this.memoizedIsInitialized = 0;
            i = 0;
            break;
          }
        }
        label61: this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      for (int i = 0; i < this.section_.size(); i++)
        paramCodedOutputStream.writeMessage(1, (MessageLite)this.section_.get(i));
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Network.PhotosHomeResponse, Builder>
      implements Network.PhotosHomeResponseOrBuilder
    {
      private int bitField0_;
      private List<Network.PhotosHomeResponse.Section> section_ = Collections.emptyList();

      private Network.PhotosHomeResponse buildPartial()
      {
        Network.PhotosHomeResponse localPhotosHomeResponse = new Network.PhotosHomeResponse(this, (byte)0);
        if ((0x1 & this.bitField0_) == 1)
        {
          this.section_ = Collections.unmodifiableList(this.section_);
          this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        }
        Network.PhotosHomeResponse.access$56502(localPhotosHomeResponse, this.section_);
        return localPhotosHomeResponse;
      }

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private void ensureSectionIsMutable()
      {
        if ((0x1 & this.bitField0_) != 1)
        {
          this.section_ = new ArrayList(this.section_);
          this.bitField0_ = (0x1 | this.bitField0_);
        }
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 10:
          }
          Network.PhotosHomeResponse.Section.Builder localBuilder = Network.PhotosHomeResponse.Section.newBuilder();
          paramCodedInputStream.readMessage(localBuilder, paramExtensionRegistryLite);
          addSection(localBuilder.buildPartial());
        }
      }

      public final Builder addAllSection(Iterable<? extends Network.PhotosHomeResponse.Section> paramIterable)
      {
        ensureSectionIsMutable();
        GeneratedMessageLite.Builder.addAll(paramIterable, this.section_);
        return this;
      }

      public final Builder addSection(int paramInt, Network.PhotosHomeResponse.Section.Builder paramBuilder)
      {
        ensureSectionIsMutable();
        this.section_.add(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder addSection(int paramInt, Network.PhotosHomeResponse.Section paramSection)
      {
        if (paramSection == null)
          throw new NullPointerException();
        ensureSectionIsMutable();
        this.section_.add(paramInt, paramSection);
        return this;
      }

      public final Builder addSection(Network.PhotosHomeResponse.Section.Builder paramBuilder)
      {
        ensureSectionIsMutable();
        this.section_.add(paramBuilder.build());
        return this;
      }

      public final Builder addSection(Network.PhotosHomeResponse.Section paramSection)
      {
        if (paramSection == null)
          throw new NullPointerException();
        ensureSectionIsMutable();
        this.section_.add(paramSection);
        return this;
      }

      public final Builder clear()
      {
        super.clear();
        this.section_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        return this;
      }

      public final Builder clearSection()
      {
        this.section_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        return this;
      }

      public final Network.PhotosHomeResponse getDefaultInstanceForType()
      {
        return Network.PhotosHomeResponse.getDefaultInstance();
      }

      public final Network.PhotosHomeResponse.Section getSection(int paramInt)
      {
        return (Network.PhotosHomeResponse.Section)this.section_.get(paramInt);
      }

      public final int getSectionCount()
      {
        return this.section_.size();
      }

      public final List<Network.PhotosHomeResponse.Section> getSectionList()
      {
        return Collections.unmodifiableList(this.section_);
      }

      public final boolean isInitialized()
      {
        int i = 0;
        if (i < getSectionCount())
          if (getSection(i).isInitialized());
        for (boolean bool = false; ; bool = true)
        {
          return bool;
          i++;
          break;
        }
      }

      public final Builder mergeFrom(Network.PhotosHomeResponse paramPhotosHomeResponse)
      {
        if (paramPhotosHomeResponse == Network.PhotosHomeResponse.getDefaultInstance());
        while (true)
        {
          return this;
          if (!paramPhotosHomeResponse.section_.isEmpty())
            if (this.section_.isEmpty())
            {
              this.section_ = paramPhotosHomeResponse.section_;
              this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
            }
            else
            {
              ensureSectionIsMutable();
              this.section_.addAll(paramPhotosHomeResponse.section_);
            }
        }
      }

      public final Builder setSection(int paramInt, Network.PhotosHomeResponse.Section.Builder paramBuilder)
      {
        ensureSectionIsMutable();
        this.section_.set(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder setSection(int paramInt, Network.PhotosHomeResponse.Section paramSection)
      {
        if (paramSection == null)
          throw new NullPointerException();
        ensureSectionIsMutable();
        this.section_.set(paramInt, paramSection);
        return this;
      }
    }

    public static final class Section extends GeneratedMessageLite
      implements Network.PhotosHomeResponse.SectionOrBuilder
    {
      private static final Section defaultInstance;
      private static final long serialVersionUID;
      private int bitField0_;
      private List<Data.MobilePhoto> cover_;
      private byte memoizedIsInitialized = -1;
      private int memoizedSerializedSize = -1;
      private int notificationCount_;
      private long timestampMsec_;
      private int totalCount_;
      private Type type_;

      static
      {
        Section localSection = new Section();
        defaultInstance = localSection;
        localSection.type_ = Type.FROM_MY_CIRCLES;
        localSection.totalCount_ = 0;
        localSection.cover_ = Collections.emptyList();
        localSection.timestampMsec_ = 0L;
        localSection.notificationCount_ = 0;
      }

      private Section()
      {
      }

      private Section(Builder paramBuilder)
      {
        super();
      }

      public static Section getDefaultInstance()
      {
        return defaultInstance;
      }

      public static Builder newBuilder()
      {
        return Builder.access$55400();
      }

      public final Data.MobilePhoto getCover(int paramInt)
      {
        return (Data.MobilePhoto)this.cover_.get(paramInt);
      }

      public final int getCoverCount()
      {
        return this.cover_.size();
      }

      public final List<Data.MobilePhoto> getCoverList()
      {
        return this.cover_;
      }

      public final Data.MobilePhotoOrBuilder getCoverOrBuilder(int paramInt)
      {
        return (Data.MobilePhotoOrBuilder)this.cover_.get(paramInt);
      }

      public final List<? extends Data.MobilePhotoOrBuilder> getCoverOrBuilderList()
      {
        return this.cover_;
      }

      public final Section getDefaultInstanceForType()
      {
        return defaultInstance;
      }

      public final int getNotificationCount()
      {
        return this.notificationCount_;
      }

      public final int getSerializedSize()
      {
        int i = this.memoizedSerializedSize;
        if (i != -1);
        int k;
        for (int n = i; ; n = k)
        {
          return n;
          int j = 0x1 & this.bitField0_;
          k = 0;
          if (j == 1)
            k = 0 + CodedOutputStream.computeEnumSize(1, this.type_.getNumber());
          if ((0x2 & this.bitField0_) == 2)
            k += CodedOutputStream.computeInt32Size(2, this.totalCount_);
          for (int m = 0; m < this.cover_.size(); m++)
            k += CodedOutputStream.computeMessageSize(3, (MessageLite)this.cover_.get(m));
          if ((0x4 & this.bitField0_) == 4)
            k += CodedOutputStream.computeInt64Size(4, this.timestampMsec_);
          if ((0x8 & this.bitField0_) == 8)
            k += CodedOutputStream.computeInt32Size(5, this.notificationCount_);
          this.memoizedSerializedSize = k;
        }
      }

      public final long getTimestampMsec()
      {
        return this.timestampMsec_;
      }

      public final int getTotalCount()
      {
        return this.totalCount_;
      }

      public final Type getType()
      {
        return this.type_;
      }

      public final boolean hasNotificationCount()
      {
        if ((0x8 & this.bitField0_) == 8);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasTimestampMsec()
      {
        if ((0x4 & this.bitField0_) == 4);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasTotalCount()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasType()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean isInitialized()
      {
        int i = 1;
        int j = this.memoizedIsInitialized;
        if (j != -1)
          if (j != i);
        while (true)
        {
          return i;
          i = 0;
          continue;
          for (int k = 0; ; k++)
          {
            if (k >= getCoverCount())
              break label61;
            if (!getCover(k).isInitialized())
            {
              this.memoizedIsInitialized = 0;
              i = 0;
              break;
            }
          }
          label61: this.memoizedIsInitialized = i;
        }
      }

      protected final Object writeReplace()
        throws ObjectStreamException
      {
        return super.writeReplace();
      }

      public final void writeTo(CodedOutputStream paramCodedOutputStream)
        throws IOException
      {
        getSerializedSize();
        if ((0x1 & this.bitField0_) == 1)
          paramCodedOutputStream.writeEnum(1, this.type_.getNumber());
        if ((0x2 & this.bitField0_) == 2)
          paramCodedOutputStream.writeInt32(2, this.totalCount_);
        for (int i = 0; i < this.cover_.size(); i++)
          paramCodedOutputStream.writeMessage(3, (MessageLite)this.cover_.get(i));
        if ((0x4 & this.bitField0_) == 4)
          paramCodedOutputStream.writeInt64(4, this.timestampMsec_);
        if ((0x8 & this.bitField0_) == 8)
          paramCodedOutputStream.writeInt32(5, this.notificationCount_);
      }

      public static final class Builder extends GeneratedMessageLite.Builder<Network.PhotosHomeResponse.Section, Builder>
        implements Network.PhotosHomeResponse.SectionOrBuilder
      {
        private int bitField0_;
        private List<Data.MobilePhoto> cover_ = Collections.emptyList();
        private int notificationCount_;
        private long timestampMsec_;
        private int totalCount_;
        private Network.PhotosHomeResponse.Section.Type type_ = Network.PhotosHomeResponse.Section.Type.FROM_MY_CIRCLES;

        private Builder clone()
        {
          return new Builder().mergeFrom(buildPartial());
        }

        private void ensureCoverIsMutable()
        {
          if ((0x4 & this.bitField0_) != 4)
          {
            this.cover_ = new ArrayList(this.cover_);
            this.bitField0_ = (0x4 | this.bitField0_);
          }
        }

        private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
          throws IOException
        {
          while (true)
          {
            int i = paramCodedInputStream.readTag();
            switch (i)
            {
            default:
              if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
                continue;
            case 0:
              return this;
            case 8:
              Network.PhotosHomeResponse.Section.Type localType = Network.PhotosHomeResponse.Section.Type.valueOf(paramCodedInputStream.readEnum());
              if (localType == null)
                continue;
              this.bitField0_ = (0x1 | this.bitField0_);
              this.type_ = localType;
              break;
            case 16:
              this.bitField0_ = (0x2 | this.bitField0_);
              this.totalCount_ = paramCodedInputStream.readInt32();
              break;
            case 26:
              Data.MobilePhoto.Builder localBuilder = Data.MobilePhoto.newBuilder();
              paramCodedInputStream.readMessage(localBuilder, paramExtensionRegistryLite);
              addCover(localBuilder.buildPartial());
              break;
            case 32:
              this.bitField0_ = (0x8 | this.bitField0_);
              this.timestampMsec_ = paramCodedInputStream.readInt64();
              break;
            case 40:
            }
            this.bitField0_ = (0x10 | this.bitField0_);
            this.notificationCount_ = paramCodedInputStream.readInt32();
          }
        }

        public final Builder addAllCover(Iterable<? extends Data.MobilePhoto> paramIterable)
        {
          ensureCoverIsMutable();
          GeneratedMessageLite.Builder.addAll(paramIterable, this.cover_);
          return this;
        }

        public final Builder addCover(int paramInt, Data.MobilePhoto.Builder paramBuilder)
        {
          ensureCoverIsMutable();
          this.cover_.add(paramInt, paramBuilder.build());
          return this;
        }

        public final Builder addCover(int paramInt, Data.MobilePhoto paramMobilePhoto)
        {
          if (paramMobilePhoto == null)
            throw new NullPointerException();
          ensureCoverIsMutable();
          this.cover_.add(paramInt, paramMobilePhoto);
          return this;
        }

        public final Builder addCover(Data.MobilePhoto.Builder paramBuilder)
        {
          ensureCoverIsMutable();
          this.cover_.add(paramBuilder.build());
          return this;
        }

        public final Builder addCover(Data.MobilePhoto paramMobilePhoto)
        {
          if (paramMobilePhoto == null)
            throw new NullPointerException();
          ensureCoverIsMutable();
          this.cover_.add(paramMobilePhoto);
          return this;
        }

        public final Network.PhotosHomeResponse.Section build()
        {
          Network.PhotosHomeResponse.Section localSection = buildPartial();
          if (!localSection.isInitialized())
            throw new UninitializedMessageException();
          return localSection;
        }

        public final Network.PhotosHomeResponse.Section buildPartial()
        {
          Network.PhotosHomeResponse.Section localSection = new Network.PhotosHomeResponse.Section(this, (byte)0);
          int i = this.bitField0_;
          int j = i & 0x1;
          int k = 0;
          if (j == 1)
            k = 1;
          Network.PhotosHomeResponse.Section.access$55602(localSection, this.type_);
          if ((i & 0x2) == 2)
            k |= 2;
          Network.PhotosHomeResponse.Section.access$55702(localSection, this.totalCount_);
          if ((0x4 & this.bitField0_) == 4)
          {
            this.cover_ = Collections.unmodifiableList(this.cover_);
            this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
          }
          Network.PhotosHomeResponse.Section.access$55802(localSection, this.cover_);
          if ((i & 0x8) == 8)
            k |= 4;
          Network.PhotosHomeResponse.Section.access$55902(localSection, this.timestampMsec_);
          if ((i & 0x10) == 16)
            k |= 8;
          Network.PhotosHomeResponse.Section.access$56002(localSection, this.notificationCount_);
          Network.PhotosHomeResponse.Section.access$56102(localSection, k);
          return localSection;
        }

        public final Builder clear()
        {
          super.clear();
          this.type_ = Network.PhotosHomeResponse.Section.Type.FROM_MY_CIRCLES;
          this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
          this.totalCount_ = 0;
          this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
          this.cover_ = Collections.emptyList();
          this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
          this.timestampMsec_ = 0L;
          this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
          this.notificationCount_ = 0;
          this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
          return this;
        }

        public final Builder clearCover()
        {
          this.cover_ = Collections.emptyList();
          this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
          return this;
        }

        public final Builder clearNotificationCount()
        {
          this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
          this.notificationCount_ = 0;
          return this;
        }

        public final Builder clearTimestampMsec()
        {
          this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
          this.timestampMsec_ = 0L;
          return this;
        }

        public final Builder clearTotalCount()
        {
          this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
          this.totalCount_ = 0;
          return this;
        }

        public final Builder clearType()
        {
          this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
          this.type_ = Network.PhotosHomeResponse.Section.Type.FROM_MY_CIRCLES;
          return this;
        }

        public final Data.MobilePhoto getCover(int paramInt)
        {
          return (Data.MobilePhoto)this.cover_.get(paramInt);
        }

        public final int getCoverCount()
        {
          return this.cover_.size();
        }

        public final List<Data.MobilePhoto> getCoverList()
        {
          return Collections.unmodifiableList(this.cover_);
        }

        public final Network.PhotosHomeResponse.Section getDefaultInstanceForType()
        {
          return Network.PhotosHomeResponse.Section.getDefaultInstance();
        }

        public final int getNotificationCount()
        {
          return this.notificationCount_;
        }

        public final long getTimestampMsec()
        {
          return this.timestampMsec_;
        }

        public final int getTotalCount()
        {
          return this.totalCount_;
        }

        public final Network.PhotosHomeResponse.Section.Type getType()
        {
          return this.type_;
        }

        public final boolean hasNotificationCount()
        {
          if ((0x10 & this.bitField0_) == 16);
          for (boolean bool = true; ; bool = false)
            return bool;
        }

        public final boolean hasTimestampMsec()
        {
          if ((0x8 & this.bitField0_) == 8);
          for (boolean bool = true; ; bool = false)
            return bool;
        }

        public final boolean hasTotalCount()
        {
          if ((0x2 & this.bitField0_) == 2);
          for (boolean bool = true; ; bool = false)
            return bool;
        }

        public final boolean hasType()
        {
          int i = 1;
          if ((0x1 & this.bitField0_) == i);
          while (true)
          {
            return i;
            int j = 0;
          }
        }

        public final boolean isInitialized()
        {
          int i = 0;
          if (i < getCoverCount())
            if (getCover(i).isInitialized());
          for (boolean bool = false; ; bool = true)
          {
            return bool;
            i++;
            break;
          }
        }

        public final Builder mergeFrom(Network.PhotosHomeResponse.Section paramSection)
        {
          if (paramSection == Network.PhotosHomeResponse.Section.getDefaultInstance())
            return this;
          if (paramSection.hasType())
            setType(paramSection.getType());
          if (paramSection.hasTotalCount())
            setTotalCount(paramSection.getTotalCount());
          if (!paramSection.cover_.isEmpty())
          {
            if (!this.cover_.isEmpty())
              break label119;
            this.cover_ = paramSection.cover_;
            this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
          }
          while (true)
          {
            if (paramSection.hasTimestampMsec())
              setTimestampMsec(paramSection.getTimestampMsec());
            if (!paramSection.hasNotificationCount())
              break;
            setNotificationCount(paramSection.getNotificationCount());
            break;
            label119: ensureCoverIsMutable();
            this.cover_.addAll(paramSection.cover_);
          }
        }

        public final Builder setCover(int paramInt, Data.MobilePhoto.Builder paramBuilder)
        {
          ensureCoverIsMutable();
          this.cover_.set(paramInt, paramBuilder.build());
          return this;
        }

        public final Builder setCover(int paramInt, Data.MobilePhoto paramMobilePhoto)
        {
          if (paramMobilePhoto == null)
            throw new NullPointerException();
          ensureCoverIsMutable();
          this.cover_.set(paramInt, paramMobilePhoto);
          return this;
        }

        public final Builder setNotificationCount(int paramInt)
        {
          this.bitField0_ = (0x10 | this.bitField0_);
          this.notificationCount_ = paramInt;
          return this;
        }

        public final Builder setTimestampMsec(long paramLong)
        {
          this.bitField0_ = (0x8 | this.bitField0_);
          this.timestampMsec_ = paramLong;
          return this;
        }

        public final Builder setTotalCount(int paramInt)
        {
          this.bitField0_ = (0x2 | this.bitField0_);
          this.totalCount_ = paramInt;
          return this;
        }

        public final Builder setType(Network.PhotosHomeResponse.Section.Type paramType)
        {
          if (paramType == null)
            throw new NullPointerException();
          this.bitField0_ = (0x1 | this.bitField0_);
          this.type_ = paramType;
          return this;
        }
      }

      public static enum Type
        implements Internal.EnumLite
      {
        private static Internal.EnumLiteMap<Type> internalValueMap = new Internal.EnumLiteMap()
        {
        };
        private final int value;

        static
        {
          MY_ALBUMS = new Type("MY_ALBUMS", 2, 2);
          FROM_MY_PHONE = new Type("FROM_MY_PHONE", 3, 3);
          Type[] arrayOfType = new Type[4];
          arrayOfType[0] = FROM_MY_CIRCLES;
          arrayOfType[1] = PHOTOS_OF_ME;
          arrayOfType[2] = MY_ALBUMS;
          arrayOfType[3] = FROM_MY_PHONE;
        }

        private Type(int paramInt1, int paramInt2)
        {
          this.value = paramInt1;
        }

        public static Type valueOf(int paramInt)
        {
          Type localType;
          switch (paramInt)
          {
          default:
            localType = null;
          case 0:
          case 1:
          case 2:
          case 3:
          }
          while (true)
          {
            return localType;
            localType = FROM_MY_CIRCLES;
            continue;
            localType = PHOTOS_OF_ME;
            continue;
            localType = MY_ALBUMS;
            continue;
            localType = FROM_MY_PHONE;
          }
        }

        public final int getNumber()
        {
          return this.value;
        }
      }
    }

    public static abstract interface SectionOrBuilder extends MessageLiteOrBuilder
    {
      public abstract Data.MobilePhoto getCover(int paramInt);

      public abstract int getCoverCount();

      public abstract List<Data.MobilePhoto> getCoverList();

      public abstract int getNotificationCount();

      public abstract long getTimestampMsec();

      public abstract int getTotalCount();

      public abstract Network.PhotosHomeResponse.Section.Type getType();

      public abstract boolean hasNotificationCount();

      public abstract boolean hasTimestampMsec();

      public abstract boolean hasTotalCount();

      public abstract boolean hasType();
    }
  }

  public static abstract interface PhotosHomeResponseOrBuilder extends MessageLiteOrBuilder
  {
    public abstract Network.PhotosHomeResponse.Section getSection(int paramInt);

    public abstract int getSectionCount();

    public abstract List<Network.PhotosHomeResponse.Section> getSectionList();
  }

  public static final class PlaceSearchLogRequest extends GeneratedMessageLite
    implements Network.PlaceSearchLogRequestOrBuilder
  {
    private static final PlaceSearchLogRequest defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private Object query_;
    private Data.PlaceSearchEvent searchEvent_;

    static
    {
      PlaceSearchLogRequest localPlaceSearchLogRequest = new PlaceSearchLogRequest();
      defaultInstance = localPlaceSearchLogRequest;
      localPlaceSearchLogRequest.query_ = "";
      localPlaceSearchLogRequest.searchEvent_ = Data.PlaceSearchEvent.getDefaultInstance();
    }

    private PlaceSearchLogRequest()
    {
    }

    private PlaceSearchLogRequest(Builder paramBuilder)
    {
      super();
    }

    public static PlaceSearchLogRequest getDefaultInstance()
    {
      return defaultInstance;
    }

    private ByteString getQueryBytes()
    {
      Object localObject = this.query_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.query_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public final PlaceSearchLogRequest getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final String getQuery()
    {
      Object localObject1 = this.query_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.query_ = str;
      }
    }

    public final Data.PlaceSearchEvent getSearchEvent()
    {
      return this.searchEvent_;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeBytesSize(1, getQueryBytes());
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeMessageSize(2, this.searchEvent_);
        this.memoizedSerializedSize = k;
      }
    }

    public final boolean hasQuery()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean hasSearchEvent()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeBytes(1, getQueryBytes());
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeMessage(2, this.searchEvent_);
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Network.PlaceSearchLogRequest, Builder>
      implements Network.PlaceSearchLogRequestOrBuilder
    {
      private int bitField0_;
      private Object query_ = "";
      private Data.PlaceSearchEvent searchEvent_ = Data.PlaceSearchEvent.getDefaultInstance();

      private Network.PlaceSearchLogRequest buildPartial()
      {
        Network.PlaceSearchLogRequest localPlaceSearchLogRequest = new Network.PlaceSearchLogRequest(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Network.PlaceSearchLogRequest.access$38702(localPlaceSearchLogRequest, this.query_);
        if ((i & 0x2) == 2)
          k |= 2;
        Network.PlaceSearchLogRequest.access$38802(localPlaceSearchLogRequest, this.searchEvent_);
        Network.PlaceSearchLogRequest.access$38902(localPlaceSearchLogRequest, k);
        return localPlaceSearchLogRequest;
      }

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 10:
            this.bitField0_ = (0x1 | this.bitField0_);
            this.query_ = paramCodedInputStream.readBytes();
            break;
          case 18:
          }
          Data.PlaceSearchEvent.Builder localBuilder = Data.PlaceSearchEvent.newBuilder();
          if (hasSearchEvent())
            localBuilder.mergeFrom(getSearchEvent());
          paramCodedInputStream.readMessage(localBuilder, paramExtensionRegistryLite);
          setSearchEvent(localBuilder.buildPartial());
        }
      }

      public final Builder clear()
      {
        super.clear();
        this.query_ = "";
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.searchEvent_ = Data.PlaceSearchEvent.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        return this;
      }

      public final Builder clearQuery()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.query_ = Network.PlaceSearchLogRequest.getDefaultInstance().getQuery();
        return this;
      }

      public final Builder clearSearchEvent()
      {
        this.searchEvent_ = Data.PlaceSearchEvent.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        return this;
      }

      public final Network.PlaceSearchLogRequest getDefaultInstanceForType()
      {
        return Network.PlaceSearchLogRequest.getDefaultInstance();
      }

      public final String getQuery()
      {
        Object localObject = this.query_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.query_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final Data.PlaceSearchEvent getSearchEvent()
      {
        return this.searchEvent_;
      }

      public final boolean hasQuery()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean hasSearchEvent()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Network.PlaceSearchLogRequest paramPlaceSearchLogRequest)
      {
        if (paramPlaceSearchLogRequest == Network.PlaceSearchLogRequest.getDefaultInstance());
        do
        {
          return this;
          if (paramPlaceSearchLogRequest.hasQuery())
            setQuery(paramPlaceSearchLogRequest.getQuery());
        }
        while (!paramPlaceSearchLogRequest.hasSearchEvent());
        Data.PlaceSearchEvent localPlaceSearchEvent = paramPlaceSearchLogRequest.getSearchEvent();
        if (((0x2 & this.bitField0_) == 2) && (this.searchEvent_ != Data.PlaceSearchEvent.getDefaultInstance()));
        for (this.searchEvent_ = Data.PlaceSearchEvent.newBuilder(this.searchEvent_).mergeFrom(localPlaceSearchEvent).buildPartial(); ; this.searchEvent_ = localPlaceSearchEvent)
        {
          this.bitField0_ = (0x2 | this.bitField0_);
          break;
        }
      }

      public final Builder setQuery(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x1 | this.bitField0_);
        this.query_ = paramString;
        return this;
      }

      public final Builder setSearchEvent(Data.PlaceSearchEvent.Builder paramBuilder)
      {
        this.searchEvent_ = paramBuilder.build();
        this.bitField0_ = (0x2 | this.bitField0_);
        return this;
      }

      public final Builder setSearchEvent(Data.PlaceSearchEvent paramPlaceSearchEvent)
      {
        if (paramPlaceSearchEvent == null)
          throw new NullPointerException();
        this.searchEvent_ = paramPlaceSearchEvent;
        this.bitField0_ = (0x2 | this.bitField0_);
        return this;
      }
    }
  }

  public static abstract interface PlaceSearchLogRequestOrBuilder extends MessageLiteOrBuilder
  {
    public abstract String getQuery();

    public abstract Data.PlaceSearchEvent getSearchEvent();

    public abstract boolean hasQuery();

    public abstract boolean hasSearchEvent();
  }

  public static final class PlaceSearchLogResponse extends GeneratedMessageLite
    implements Network.PlaceSearchLogResponseOrBuilder
  {
    private static final PlaceSearchLogResponse defaultInstance = new PlaceSearchLogResponse();
    private static final long serialVersionUID;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;

    private PlaceSearchLogResponse()
    {
    }

    private PlaceSearchLogResponse(Builder paramBuilder)
    {
      super();
    }

    public static PlaceSearchLogResponse getDefaultInstance()
    {
      return defaultInstance;
    }

    public final PlaceSearchLogResponse getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      while (true)
      {
        return i;
        this.memoizedSerializedSize = 0;
        i = 0;
      }
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Network.PlaceSearchLogResponse, Builder>
      implements Network.PlaceSearchLogResponseOrBuilder
    {
      private Network.PlaceSearchLogResponse buildPartial()
      {
        return new Network.PlaceSearchLogResponse(this, (byte)0);
      }

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        int i;
        do
        {
          i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
          case 0:
          }
        }
        while (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i));
        return this;
      }

      public final Builder clear()
      {
        super.clear();
        return this;
      }

      public final Network.PlaceSearchLogResponse getDefaultInstanceForType()
      {
        return Network.PlaceSearchLogResponse.getDefaultInstance();
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Network.PlaceSearchLogResponse paramPlaceSearchLogResponse)
      {
        if (paramPlaceSearchLogResponse == Network.PlaceSearchLogResponse.getDefaultInstance());
        return this;
      }
    }
  }

  public static abstract interface PlaceSearchLogResponseOrBuilder extends MessageLiteOrBuilder
  {
  }

  public static final class PlaceSearchRequest extends GeneratedMessageLite
    implements Network.PlaceSearchRequestOrBuilder
  {
    private static final PlaceSearchRequest defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private Data.Point position_;
    private Object query_;
    private int searchRadius_;

    static
    {
      PlaceSearchRequest localPlaceSearchRequest = new PlaceSearchRequest();
      defaultInstance = localPlaceSearchRequest;
      localPlaceSearchRequest.position_ = Data.Point.getDefaultInstance();
      localPlaceSearchRequest.query_ = "";
      localPlaceSearchRequest.searchRadius_ = 0;
    }

    private PlaceSearchRequest()
    {
    }

    private PlaceSearchRequest(Builder paramBuilder)
    {
      super();
    }

    public static PlaceSearchRequest getDefaultInstance()
    {
      return defaultInstance;
    }

    private ByteString getQueryBytes()
    {
      Object localObject = this.query_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.query_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public final PlaceSearchRequest getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final Data.Point getPosition()
    {
      return this.position_;
    }

    public final String getQuery()
    {
      Object localObject1 = this.query_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.query_ = str;
      }
    }

    public final int getSearchRadius()
    {
      return this.searchRadius_;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeMessageSize(1, this.position_);
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeBytesSize(2, getQueryBytes());
        if ((0x4 & this.bitField0_) == 4)
          k += CodedOutputStream.computeInt32Size(3, this.searchRadius_);
        this.memoizedSerializedSize = k;
      }
    }

    public final boolean hasPosition()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean hasQuery()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasSearchRadius()
    {
      if ((0x4 & this.bitField0_) == 4);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        if ((hasPosition()) && (!getPosition().isInitialized()))
        {
          this.memoizedIsInitialized = 0;
          i = 0;
        }
        else
        {
          this.memoizedIsInitialized = i;
        }
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeMessage(1, this.position_);
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeBytes(2, getQueryBytes());
      if ((0x4 & this.bitField0_) == 4)
        paramCodedOutputStream.writeInt32(3, this.searchRadius_);
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Network.PlaceSearchRequest, Builder>
      implements Network.PlaceSearchRequestOrBuilder
    {
      private int bitField0_;
      private Data.Point position_ = Data.Point.getDefaultInstance();
      private Object query_ = "";
      private int searchRadius_;

      private Network.PlaceSearchRequest buildPartial()
      {
        Network.PlaceSearchRequest localPlaceSearchRequest = new Network.PlaceSearchRequest(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Network.PlaceSearchRequest.access$37302(localPlaceSearchRequest, this.position_);
        if ((i & 0x2) == 2)
          k |= 2;
        Network.PlaceSearchRequest.access$37402(localPlaceSearchRequest, this.query_);
        if ((i & 0x4) == 4)
          k |= 4;
        Network.PlaceSearchRequest.access$37502(localPlaceSearchRequest, this.searchRadius_);
        Network.PlaceSearchRequest.access$37602(localPlaceSearchRequest, k);
        return localPlaceSearchRequest;
      }

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 10:
            Data.Point.Builder localBuilder = Data.Point.newBuilder();
            if (hasPosition())
              localBuilder.mergeFrom(getPosition());
            paramCodedInputStream.readMessage(localBuilder, paramExtensionRegistryLite);
            setPosition(localBuilder.buildPartial());
            break;
          case 18:
            this.bitField0_ = (0x2 | this.bitField0_);
            this.query_ = paramCodedInputStream.readBytes();
            break;
          case 24:
          }
          this.bitField0_ = (0x4 | this.bitField0_);
          this.searchRadius_ = paramCodedInputStream.readInt32();
        }
      }

      public final Builder clear()
      {
        super.clear();
        this.position_ = Data.Point.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.query_ = "";
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.searchRadius_ = 0;
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        return this;
      }

      public final Builder clearPosition()
      {
        this.position_ = Data.Point.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        return this;
      }

      public final Builder clearQuery()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.query_ = Network.PlaceSearchRequest.getDefaultInstance().getQuery();
        return this;
      }

      public final Builder clearSearchRadius()
      {
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.searchRadius_ = 0;
        return this;
      }

      public final Network.PlaceSearchRequest getDefaultInstanceForType()
      {
        return Network.PlaceSearchRequest.getDefaultInstance();
      }

      public final Data.Point getPosition()
      {
        return this.position_;
      }

      public final String getQuery()
      {
        Object localObject = this.query_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.query_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final int getSearchRadius()
      {
        return this.searchRadius_;
      }

      public final boolean hasPosition()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean hasQuery()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasSearchRadius()
      {
        if ((0x4 & this.bitField0_) == 4);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean isInitialized()
      {
        if ((hasPosition()) && (!getPosition().isInitialized()));
        for (boolean bool = false; ; bool = true)
          return bool;
      }

      public final Builder mergeFrom(Network.PlaceSearchRequest paramPlaceSearchRequest)
      {
        if (paramPlaceSearchRequest == Network.PlaceSearchRequest.getDefaultInstance())
          return this;
        Data.Point localPoint;
        if (paramPlaceSearchRequest.hasPosition())
        {
          localPoint = paramPlaceSearchRequest.getPosition();
          if (((0x1 & this.bitField0_) != 1) || (this.position_ == Data.Point.getDefaultInstance()))
            break label106;
        }
        label106: for (this.position_ = Data.Point.newBuilder(this.position_).mergeFrom(localPoint).buildPartial(); ; this.position_ = localPoint)
        {
          this.bitField0_ = (0x1 | this.bitField0_);
          if (paramPlaceSearchRequest.hasQuery())
            setQuery(paramPlaceSearchRequest.getQuery());
          if (!paramPlaceSearchRequest.hasSearchRadius())
            break;
          setSearchRadius(paramPlaceSearchRequest.getSearchRadius());
          break;
        }
      }

      public final Builder setPosition(Data.Point.Builder paramBuilder)
      {
        this.position_ = paramBuilder.build();
        this.bitField0_ = (0x1 | this.bitField0_);
        return this;
      }

      public final Builder setPosition(Data.Point paramPoint)
      {
        if (paramPoint == null)
          throw new NullPointerException();
        this.position_ = paramPoint;
        this.bitField0_ = (0x1 | this.bitField0_);
        return this;
      }

      public final Builder setQuery(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x2 | this.bitField0_);
        this.query_ = paramString;
        return this;
      }

      public final Builder setSearchRadius(int paramInt)
      {
        this.bitField0_ = (0x4 | this.bitField0_);
        this.searchRadius_ = paramInt;
        return this;
      }
    }
  }

  public static abstract interface PlaceSearchRequestOrBuilder extends MessageLiteOrBuilder
  {
    public abstract Data.Point getPosition();

    public abstract String getQuery();

    public abstract int getSearchRadius();

    public abstract boolean hasPosition();

    public abstract boolean hasQuery();

    public abstract boolean hasSearchRadius();
  }

  public static final class PlaceSearchResponse extends GeneratedMessageLite
    implements Network.PlaceSearchResponseOrBuilder
  {
    private static final PlaceSearchResponse defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private List<Data.Location> place_;
    private Object query_;
    private Data.PlaceSearchEvent searchEvent_;

    static
    {
      PlaceSearchResponse localPlaceSearchResponse = new PlaceSearchResponse();
      defaultInstance = localPlaceSearchResponse;
      localPlaceSearchResponse.place_ = Collections.emptyList();
      localPlaceSearchResponse.query_ = "";
      localPlaceSearchResponse.searchEvent_ = Data.PlaceSearchEvent.getDefaultInstance();
    }

    private PlaceSearchResponse()
    {
    }

    private PlaceSearchResponse(Builder paramBuilder)
    {
      super();
    }

    public static PlaceSearchResponse getDefaultInstance()
    {
      return defaultInstance;
    }

    private ByteString getQueryBytes()
    {
      Object localObject = this.query_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.query_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public final PlaceSearchResponse getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final Data.Location getPlace(int paramInt)
    {
      return (Data.Location)this.place_.get(paramInt);
    }

    public final int getPlaceCount()
    {
      return this.place_.size();
    }

    public final List<Data.Location> getPlaceList()
    {
      return this.place_;
    }

    public final Data.LocationOrBuilder getPlaceOrBuilder(int paramInt)
    {
      return (Data.LocationOrBuilder)this.place_.get(paramInt);
    }

    public final List<? extends Data.LocationOrBuilder> getPlaceOrBuilderList()
    {
      return this.place_;
    }

    public final String getQuery()
    {
      Object localObject1 = this.query_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.query_ = str;
      }
    }

    public final Data.PlaceSearchEvent getSearchEvent()
    {
      return this.searchEvent_;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int j;
      for (int m = i; ; m = j)
      {
        return m;
        j = 0;
        for (int k = 0; k < this.place_.size(); k++)
          j += CodedOutputStream.computeMessageSize(1, (MessageLite)this.place_.get(k));
        if ((0x1 & this.bitField0_) == 1)
          j += CodedOutputStream.computeBytesSize(2, getQueryBytes());
        if ((0x2 & this.bitField0_) == 2)
          j += CodedOutputStream.computeMessageSize(3, this.searchEvent_);
        this.memoizedSerializedSize = j;
      }
    }

    public final boolean hasQuery()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean hasSearchEvent()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        for (int k = 0; ; k++)
        {
          if (k >= getPlaceCount())
            break label61;
          if (!getPlace(k).isInitialized())
          {
            this.memoizedIsInitialized = 0;
            i = 0;
            break;
          }
        }
        label61: this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      for (int i = 0; i < this.place_.size(); i++)
        paramCodedOutputStream.writeMessage(1, (MessageLite)this.place_.get(i));
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeBytes(2, getQueryBytes());
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeMessage(3, this.searchEvent_);
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Network.PlaceSearchResponse, Builder>
      implements Network.PlaceSearchResponseOrBuilder
    {
      private int bitField0_;
      private List<Data.Location> place_ = Collections.emptyList();
      private Object query_ = "";
      private Data.PlaceSearchEvent searchEvent_ = Data.PlaceSearchEvent.getDefaultInstance();

      private Network.PlaceSearchResponse buildPartial()
      {
        Network.PlaceSearchResponse localPlaceSearchResponse = new Network.PlaceSearchResponse(this, (byte)0);
        int i = this.bitField0_;
        if ((0x1 & this.bitField0_) == 1)
        {
          this.place_ = Collections.unmodifiableList(this.place_);
          this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        }
        Network.PlaceSearchResponse.access$38002(localPlaceSearchResponse, this.place_);
        int j = i & 0x2;
        int k = 0;
        if (j == 2)
          k = 1;
        Network.PlaceSearchResponse.access$38102(localPlaceSearchResponse, this.query_);
        if ((i & 0x4) == 4)
          k |= 2;
        Network.PlaceSearchResponse.access$38202(localPlaceSearchResponse, this.searchEvent_);
        Network.PlaceSearchResponse.access$38302(localPlaceSearchResponse, k);
        return localPlaceSearchResponse;
      }

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private void ensurePlaceIsMutable()
      {
        if ((0x1 & this.bitField0_) != 1)
        {
          this.place_ = new ArrayList(this.place_);
          this.bitField0_ = (0x1 | this.bitField0_);
        }
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 10:
            Data.Location.Builder localBuilder1 = Data.Location.newBuilder();
            paramCodedInputStream.readMessage(localBuilder1, paramExtensionRegistryLite);
            addPlace(localBuilder1.buildPartial());
            break;
          case 18:
            this.bitField0_ = (0x2 | this.bitField0_);
            this.query_ = paramCodedInputStream.readBytes();
            break;
          case 26:
          }
          Data.PlaceSearchEvent.Builder localBuilder = Data.PlaceSearchEvent.newBuilder();
          if (hasSearchEvent())
            localBuilder.mergeFrom(getSearchEvent());
          paramCodedInputStream.readMessage(localBuilder, paramExtensionRegistryLite);
          setSearchEvent(localBuilder.buildPartial());
        }
      }

      public final Builder addAllPlace(Iterable<? extends Data.Location> paramIterable)
      {
        ensurePlaceIsMutable();
        GeneratedMessageLite.Builder.addAll(paramIterable, this.place_);
        return this;
      }

      public final Builder addPlace(int paramInt, Data.Location.Builder paramBuilder)
      {
        ensurePlaceIsMutable();
        this.place_.add(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder addPlace(int paramInt, Data.Location paramLocation)
      {
        if (paramLocation == null)
          throw new NullPointerException();
        ensurePlaceIsMutable();
        this.place_.add(paramInt, paramLocation);
        return this;
      }

      public final Builder addPlace(Data.Location.Builder paramBuilder)
      {
        ensurePlaceIsMutable();
        this.place_.add(paramBuilder.build());
        return this;
      }

      public final Builder addPlace(Data.Location paramLocation)
      {
        if (paramLocation == null)
          throw new NullPointerException();
        ensurePlaceIsMutable();
        this.place_.add(paramLocation);
        return this;
      }

      public final Builder clear()
      {
        super.clear();
        this.place_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.query_ = "";
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.searchEvent_ = Data.PlaceSearchEvent.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        return this;
      }

      public final Builder clearPlace()
      {
        this.place_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        return this;
      }

      public final Builder clearQuery()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.query_ = Network.PlaceSearchResponse.getDefaultInstance().getQuery();
        return this;
      }

      public final Builder clearSearchEvent()
      {
        this.searchEvent_ = Data.PlaceSearchEvent.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        return this;
      }

      public final Network.PlaceSearchResponse getDefaultInstanceForType()
      {
        return Network.PlaceSearchResponse.getDefaultInstance();
      }

      public final Data.Location getPlace(int paramInt)
      {
        return (Data.Location)this.place_.get(paramInt);
      }

      public final int getPlaceCount()
      {
        return this.place_.size();
      }

      public final List<Data.Location> getPlaceList()
      {
        return Collections.unmodifiableList(this.place_);
      }

      public final String getQuery()
      {
        Object localObject = this.query_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.query_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final Data.PlaceSearchEvent getSearchEvent()
      {
        return this.searchEvent_;
      }

      public final boolean hasQuery()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasSearchEvent()
      {
        if ((0x4 & this.bitField0_) == 4);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean isInitialized()
      {
        int i = 0;
        if (i < getPlaceCount())
          if (getPlace(i).isInitialized());
        for (boolean bool = false; ; bool = true)
        {
          return bool;
          i++;
          break;
        }
      }

      public final Builder mergeFrom(Network.PlaceSearchResponse paramPlaceSearchResponse)
      {
        if (paramPlaceSearchResponse == Network.PlaceSearchResponse.getDefaultInstance());
        label52: 
        do
        {
          return this;
          if (!paramPlaceSearchResponse.place_.isEmpty())
          {
            if (!this.place_.isEmpty())
              break;
            this.place_ = paramPlaceSearchResponse.place_;
            this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
          }
          if (paramPlaceSearchResponse.hasQuery())
            setQuery(paramPlaceSearchResponse.getQuery());
        }
        while (!paramPlaceSearchResponse.hasSearchEvent());
        Data.PlaceSearchEvent localPlaceSearchEvent = paramPlaceSearchResponse.getSearchEvent();
        if (((0x4 & this.bitField0_) == 4) && (this.searchEvent_ != Data.PlaceSearchEvent.getDefaultInstance()));
        for (this.searchEvent_ = Data.PlaceSearchEvent.newBuilder(this.searchEvent_).mergeFrom(localPlaceSearchEvent).buildPartial(); ; this.searchEvent_ = localPlaceSearchEvent)
        {
          this.bitField0_ = (0x4 | this.bitField0_);
          break;
          ensurePlaceIsMutable();
          this.place_.addAll(paramPlaceSearchResponse.place_);
          break label52;
        }
      }

      public final Builder setPlace(int paramInt, Data.Location.Builder paramBuilder)
      {
        ensurePlaceIsMutable();
        this.place_.set(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder setPlace(int paramInt, Data.Location paramLocation)
      {
        if (paramLocation == null)
          throw new NullPointerException();
        ensurePlaceIsMutable();
        this.place_.set(paramInt, paramLocation);
        return this;
      }

      public final Builder setQuery(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x2 | this.bitField0_);
        this.query_ = paramString;
        return this;
      }

      public final Builder setSearchEvent(Data.PlaceSearchEvent.Builder paramBuilder)
      {
        this.searchEvent_ = paramBuilder.build();
        this.bitField0_ = (0x4 | this.bitField0_);
        return this;
      }

      public final Builder setSearchEvent(Data.PlaceSearchEvent paramPlaceSearchEvent)
      {
        if (paramPlaceSearchEvent == null)
          throw new NullPointerException();
        this.searchEvent_ = paramPlaceSearchEvent;
        this.bitField0_ = (0x4 | this.bitField0_);
        return this;
      }
    }
  }

  public static abstract interface PlaceSearchResponseOrBuilder extends MessageLiteOrBuilder
  {
    public abstract Data.Location getPlace(int paramInt);

    public abstract int getPlaceCount();

    public abstract List<Data.Location> getPlaceList();

    public abstract String getQuery();

    public abstract Data.PlaceSearchEvent getSearchEvent();

    public abstract boolean hasQuery();

    public abstract boolean hasSearchEvent();
  }

  public static final class PostRequest extends GeneratedMessageLite
    implements Network.PostRequestOrBuilder
  {
    private static final PostRequest defaultInstance;
    private static final long serialVersionUID;
    private Object activityId_;
    private long albumId_;
    private Data.Audience audience_;
    private int bitField0_;
    private LazyStringList circleId_;
    private Object commentId_;
    private Object content_;
    private A2a.HangoutData hangoutData_;
    private Data.Location location_;
    private List<Network.MediaReference> mediaRef_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private List<Data.Mention> mention_;
    private NotificationLevel notificationLevel_;
    private List<OnlinePhotoId> onlinePhotoId_;
    private LazyStringList photo_;
    private Type postType_;
    private boolean public_;
    private LazyStringList sharedWithUserEmail_;
    private Network.MediaReference.PicasaPhotoId targetPhotoId_;

    static
    {
      PostRequest localPostRequest = new PostRequest();
      defaultInstance = localPostRequest;
      localPostRequest.postType_ = Type.CREATE_ACTIVITY;
      localPostRequest.activityId_ = "";
      localPostRequest.commentId_ = "";
      localPostRequest.content_ = "";
      localPostRequest.location_ = Data.Location.getDefaultInstance();
      localPostRequest.circleId_ = LazyStringArrayList.EMPTY;
      localPostRequest.public_ = false;
      localPostRequest.sharedWithUserEmail_ = LazyStringArrayList.EMPTY;
      localPostRequest.photo_ = LazyStringArrayList.EMPTY;
      localPostRequest.audience_ = Data.Audience.getDefaultInstance();
      localPostRequest.albumId_ = 0L;
      localPostRequest.onlinePhotoId_ = Collections.emptyList();
      localPostRequest.mediaRef_ = Collections.emptyList();
      localPostRequest.mention_ = Collections.emptyList();
      localPostRequest.targetPhotoId_ = Network.MediaReference.PicasaPhotoId.getDefaultInstance();
      localPostRequest.hangoutData_ = A2a.HangoutData.getDefaultInstance();
      localPostRequest.notificationLevel_ = NotificationLevel.DEFAULT;
    }

    private PostRequest()
    {
    }

    private PostRequest(Builder paramBuilder)
    {
      super();
    }

    private ByteString getActivityIdBytes()
    {
      Object localObject = this.activityId_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.activityId_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    private ByteString getCommentIdBytes()
    {
      Object localObject = this.commentId_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.commentId_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    private ByteString getContentBytes()
    {
      Object localObject = this.content_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.content_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static PostRequest getDefaultInstance()
    {
      return defaultInstance;
    }

    public final String getActivityId()
    {
      Object localObject1 = this.activityId_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.activityId_ = str;
      }
    }

    public final long getAlbumId()
    {
      return this.albumId_;
    }

    public final Data.Audience getAudience()
    {
      return this.audience_;
    }

    public final String getCircleId(int paramInt)
    {
      return (String)this.circleId_.get(paramInt);
    }

    public final int getCircleIdCount()
    {
      return this.circleId_.size();
    }

    public final List<String> getCircleIdList()
    {
      return this.circleId_;
    }

    public final String getCommentId()
    {
      Object localObject1 = this.commentId_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.commentId_ = str;
      }
    }

    public final String getContent()
    {
      Object localObject1 = this.content_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.content_ = str;
      }
    }

    public final PostRequest getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final A2a.HangoutData getHangoutData()
    {
      return this.hangoutData_;
    }

    public final Data.Location getLocation()
    {
      return this.location_;
    }

    public final Network.MediaReference getMediaRef(int paramInt)
    {
      return (Network.MediaReference)this.mediaRef_.get(paramInt);
    }

    public final int getMediaRefCount()
    {
      return this.mediaRef_.size();
    }

    public final List<Network.MediaReference> getMediaRefList()
    {
      return this.mediaRef_;
    }

    public final Network.MediaReferenceOrBuilder getMediaRefOrBuilder(int paramInt)
    {
      return (Network.MediaReferenceOrBuilder)this.mediaRef_.get(paramInt);
    }

    public final List<? extends Network.MediaReferenceOrBuilder> getMediaRefOrBuilderList()
    {
      return this.mediaRef_;
    }

    public final Data.Mention getMention(int paramInt)
    {
      return (Data.Mention)this.mention_.get(paramInt);
    }

    public final int getMentionCount()
    {
      return this.mention_.size();
    }

    public final List<Data.Mention> getMentionList()
    {
      return this.mention_;
    }

    public final Data.MentionOrBuilder getMentionOrBuilder(int paramInt)
    {
      return (Data.MentionOrBuilder)this.mention_.get(paramInt);
    }

    public final List<? extends Data.MentionOrBuilder> getMentionOrBuilderList()
    {
      return this.mention_;
    }

    public final NotificationLevel getNotificationLevel()
    {
      return this.notificationLevel_;
    }

    @Deprecated
    public final OnlinePhotoId getOnlinePhotoId(int paramInt)
    {
      return (OnlinePhotoId)this.onlinePhotoId_.get(paramInt);
    }

    @Deprecated
    public final int getOnlinePhotoIdCount()
    {
      return this.onlinePhotoId_.size();
    }

    @Deprecated
    public final List<OnlinePhotoId> getOnlinePhotoIdList()
    {
      return this.onlinePhotoId_;
    }

    @Deprecated
    public final OnlinePhotoIdOrBuilder getOnlinePhotoIdOrBuilder(int paramInt)
    {
      return (OnlinePhotoIdOrBuilder)this.onlinePhotoId_.get(paramInt);
    }

    @Deprecated
    public final List<? extends OnlinePhotoIdOrBuilder> getOnlinePhotoIdOrBuilderList()
    {
      return this.onlinePhotoId_;
    }

    @Deprecated
    public final String getPhoto(int paramInt)
    {
      return (String)this.photo_.get(paramInt);
    }

    @Deprecated
    public final int getPhotoCount()
    {
      return this.photo_.size();
    }

    @Deprecated
    public final List<String> getPhotoList()
    {
      return this.photo_;
    }

    public final Type getPostType()
    {
      return this.postType_;
    }

    @Deprecated
    public final boolean getPublic()
    {
      return this.public_;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int i7;
      for (int i11 = i; ; i11 = i7)
      {
        return i11;
        int j = 0x1 & this.bitField0_;
        int k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeEnumSize(1, this.postType_.getNumber());
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeBytesSize(2, getActivityIdBytes());
        if ((0x4 & this.bitField0_) == 4)
          k += CodedOutputStream.computeBytesSize(3, getCommentIdBytes());
        if ((0x8 & this.bitField0_) == 8)
          k += CodedOutputStream.computeBytesSize(4, getContentBytes());
        if ((0x10 & this.bitField0_) == 16)
          k += CodedOutputStream.computeMessageSize(5, this.location_);
        int m = 0;
        for (int n = 0; n < this.circleId_.size(); n++)
          m += CodedOutputStream.computeBytesSizeNoTag(this.circleId_.getByteString(n));
        int i1 = k + m + 1 * getCircleIdList().size();
        if ((0x20 & this.bitField0_) == 32)
          i1 += CodedOutputStream.computeBoolSize(7, this.public_);
        int i2 = 0;
        for (int i3 = 0; i3 < this.sharedWithUserEmail_.size(); i3++)
          i2 += CodedOutputStream.computeBytesSizeNoTag(this.sharedWithUserEmail_.getByteString(i3));
        int i4 = i1 + i2 + 1 * getSharedWithUserEmailList().size();
        int i5 = 0;
        for (int i6 = 0; i6 < this.photo_.size(); i6++)
          i5 += CodedOutputStream.computeBytesSizeNoTag(this.photo_.getByteString(i6));
        i7 = i4 + i5 + 1 * getPhotoList().size();
        if ((0x40 & this.bitField0_) == 64)
          i7 += CodedOutputStream.computeMessageSize(10, this.audience_);
        if ((0x80 & this.bitField0_) == 128)
          i7 += CodedOutputStream.computeInt64Size(11, this.albumId_);
        for (int i8 = 0; i8 < this.onlinePhotoId_.size(); i8++)
          i7 += CodedOutputStream.computeMessageSize(12, (MessageLite)this.onlinePhotoId_.get(i8));
        for (int i9 = 0; i9 < this.mediaRef_.size(); i9++)
          i7 += CodedOutputStream.computeMessageSize(13, (MessageLite)this.mediaRef_.get(i9));
        for (int i10 = 0; i10 < this.mention_.size(); i10++)
          i7 += CodedOutputStream.computeMessageSize(14, (MessageLite)this.mention_.get(i10));
        if ((0x100 & this.bitField0_) == 256)
          i7 += CodedOutputStream.computeMessageSize(15, this.targetPhotoId_);
        if ((0x200 & this.bitField0_) == 512)
          i7 += CodedOutputStream.computeMessageSize(16, this.hangoutData_);
        if ((0x400 & this.bitField0_) == 1024)
          i7 += CodedOutputStream.computeEnumSize(17, this.notificationLevel_.getNumber());
        this.memoizedSerializedSize = i7;
      }
    }

    public final String getSharedWithUserEmail(int paramInt)
    {
      return (String)this.sharedWithUserEmail_.get(paramInt);
    }

    public final int getSharedWithUserEmailCount()
    {
      return this.sharedWithUserEmail_.size();
    }

    public final List<String> getSharedWithUserEmailList()
    {
      return this.sharedWithUserEmail_;
    }

    public final Network.MediaReference.PicasaPhotoId getTargetPhotoId()
    {
      return this.targetPhotoId_;
    }

    public final boolean hasActivityId()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasAlbumId()
    {
      if ((0x80 & this.bitField0_) == 128);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasAudience()
    {
      if ((0x40 & this.bitField0_) == 64);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasCommentId()
    {
      if ((0x4 & this.bitField0_) == 4);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasContent()
    {
      if ((0x8 & this.bitField0_) == 8);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasHangoutData()
    {
      if ((0x200 & this.bitField0_) == 512);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasLocation()
    {
      if ((0x10 & this.bitField0_) == 16);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasNotificationLevel()
    {
      if ((0x400 & this.bitField0_) == 1024);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasPostType()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    @Deprecated
    public final boolean hasPublic()
    {
      if ((0x20 & this.bitField0_) == 32);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasTargetPhotoId()
    {
      if ((0x100 & this.bitField0_) == 256);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        if ((hasLocation()) && (!getLocation().isInitialized()))
        {
          this.memoizedIsInitialized = 0;
          i = 0;
        }
        else if ((hasHangoutData()) && (!getHangoutData().isInitialized()))
        {
          this.memoizedIsInitialized = 0;
          i = 0;
        }
        else
        {
          this.memoizedIsInitialized = i;
        }
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeEnum(1, this.postType_.getNumber());
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeBytes(2, getActivityIdBytes());
      if ((0x4 & this.bitField0_) == 4)
        paramCodedOutputStream.writeBytes(3, getCommentIdBytes());
      if ((0x8 & this.bitField0_) == 8)
        paramCodedOutputStream.writeBytes(4, getContentBytes());
      if ((0x10 & this.bitField0_) == 16)
        paramCodedOutputStream.writeMessage(5, this.location_);
      for (int i = 0; i < this.circleId_.size(); i++)
        paramCodedOutputStream.writeBytes(6, this.circleId_.getByteString(i));
      if ((0x20 & this.bitField0_) == 32)
        paramCodedOutputStream.writeBool(7, this.public_);
      for (int j = 0; j < this.sharedWithUserEmail_.size(); j++)
        paramCodedOutputStream.writeBytes(8, this.sharedWithUserEmail_.getByteString(j));
      for (int k = 0; k < this.photo_.size(); k++)
        paramCodedOutputStream.writeBytes(9, this.photo_.getByteString(k));
      if ((0x40 & this.bitField0_) == 64)
        paramCodedOutputStream.writeMessage(10, this.audience_);
      if ((0x80 & this.bitField0_) == 128)
        paramCodedOutputStream.writeInt64(11, this.albumId_);
      for (int m = 0; m < this.onlinePhotoId_.size(); m++)
        paramCodedOutputStream.writeMessage(12, (MessageLite)this.onlinePhotoId_.get(m));
      for (int n = 0; n < this.mediaRef_.size(); n++)
        paramCodedOutputStream.writeMessage(13, (MessageLite)this.mediaRef_.get(n));
      for (int i1 = 0; i1 < this.mention_.size(); i1++)
        paramCodedOutputStream.writeMessage(14, (MessageLite)this.mention_.get(i1));
      if ((0x100 & this.bitField0_) == 256)
        paramCodedOutputStream.writeMessage(15, this.targetPhotoId_);
      if ((0x200 & this.bitField0_) == 512)
        paramCodedOutputStream.writeMessage(16, this.hangoutData_);
      if ((0x400 & this.bitField0_) == 1024)
        paramCodedOutputStream.writeEnum(17, this.notificationLevel_.getNumber());
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Network.PostRequest, Builder>
      implements Network.PostRequestOrBuilder
    {
      private Object activityId_ = "";
      private long albumId_;
      private Data.Audience audience_ = Data.Audience.getDefaultInstance();
      private int bitField0_;
      private LazyStringList circleId_ = LazyStringArrayList.EMPTY;
      private Object commentId_ = "";
      private Object content_ = "";
      private A2a.HangoutData hangoutData_ = A2a.HangoutData.getDefaultInstance();
      private Data.Location location_ = Data.Location.getDefaultInstance();
      private List<Network.MediaReference> mediaRef_ = Collections.emptyList();
      private List<Data.Mention> mention_ = Collections.emptyList();
      private Network.PostRequest.NotificationLevel notificationLevel_ = Network.PostRequest.NotificationLevel.DEFAULT;
      private List<Network.PostRequest.OnlinePhotoId> onlinePhotoId_ = Collections.emptyList();
      private LazyStringList photo_ = LazyStringArrayList.EMPTY;
      private Network.PostRequest.Type postType_ = Network.PostRequest.Type.CREATE_ACTIVITY;
      private boolean public_;
      private LazyStringList sharedWithUserEmail_ = LazyStringArrayList.EMPTY;
      private Network.MediaReference.PicasaPhotoId targetPhotoId_ = Network.MediaReference.PicasaPhotoId.getDefaultInstance();

      private Network.PostRequest buildPartial()
      {
        Network.PostRequest localPostRequest = new Network.PostRequest(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Network.PostRequest.access$15902(localPostRequest, this.postType_);
        if ((i & 0x2) == 2)
          k |= 2;
        Network.PostRequest.access$16002(localPostRequest, this.activityId_);
        if ((i & 0x4) == 4)
          k |= 4;
        Network.PostRequest.access$16102(localPostRequest, this.commentId_);
        if ((i & 0x8) == 8)
          k |= 8;
        Network.PostRequest.access$16202(localPostRequest, this.content_);
        if ((i & 0x10) == 16)
          k |= 16;
        Network.PostRequest.access$16302(localPostRequest, this.location_);
        if ((0x20 & this.bitField0_) == 32)
        {
          this.circleId_ = new UnmodifiableLazyStringList(this.circleId_);
          this.bitField0_ = (0xFFFFFFDF & this.bitField0_);
        }
        Network.PostRequest.access$16402(localPostRequest, this.circleId_);
        if ((i & 0x40) == 64)
          k |= 32;
        Network.PostRequest.access$16502(localPostRequest, this.public_);
        if ((0x80 & this.bitField0_) == 128)
        {
          this.sharedWithUserEmail_ = new UnmodifiableLazyStringList(this.sharedWithUserEmail_);
          this.bitField0_ = (0xFFFFFF7F & this.bitField0_);
        }
        Network.PostRequest.access$16602(localPostRequest, this.sharedWithUserEmail_);
        if ((0x100 & this.bitField0_) == 256)
        {
          this.photo_ = new UnmodifiableLazyStringList(this.photo_);
          this.bitField0_ = (0xFFFFFEFF & this.bitField0_);
        }
        Network.PostRequest.access$16702(localPostRequest, this.photo_);
        if ((i & 0x200) == 512)
          k |= 64;
        Network.PostRequest.access$16802(localPostRequest, this.audience_);
        if ((i & 0x400) == 1024)
          k |= 128;
        Network.PostRequest.access$16902(localPostRequest, this.albumId_);
        if ((0x800 & this.bitField0_) == 2048)
        {
          this.onlinePhotoId_ = Collections.unmodifiableList(this.onlinePhotoId_);
          this.bitField0_ = (0xFFFFF7FF & this.bitField0_);
        }
        Network.PostRequest.access$17002(localPostRequest, this.onlinePhotoId_);
        if ((0x1000 & this.bitField0_) == 4096)
        {
          this.mediaRef_ = Collections.unmodifiableList(this.mediaRef_);
          this.bitField0_ = (0xFFFFEFFF & this.bitField0_);
        }
        Network.PostRequest.access$17102(localPostRequest, this.mediaRef_);
        if ((0x2000 & this.bitField0_) == 8192)
        {
          this.mention_ = Collections.unmodifiableList(this.mention_);
          this.bitField0_ = (0xFFFFDFFF & this.bitField0_);
        }
        Network.PostRequest.access$17202(localPostRequest, this.mention_);
        if ((i & 0x4000) == 16384)
          k |= 256;
        Network.PostRequest.access$17302(localPostRequest, this.targetPhotoId_);
        if ((i & 0x8000) == 32768)
          k |= 512;
        Network.PostRequest.access$17402(localPostRequest, this.hangoutData_);
        if ((i & 0x10000) == 65536)
          k |= 1024;
        Network.PostRequest.access$17502(localPostRequest, this.notificationLevel_);
        Network.PostRequest.access$17602(localPostRequest, k);
        return localPostRequest;
      }

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private void ensureCircleIdIsMutable()
      {
        if ((0x20 & this.bitField0_) != 32)
        {
          this.circleId_ = new LazyStringArrayList(this.circleId_);
          this.bitField0_ = (0x20 | this.bitField0_);
        }
      }

      private void ensureMediaRefIsMutable()
      {
        if ((0x1000 & this.bitField0_) != 4096)
        {
          this.mediaRef_ = new ArrayList(this.mediaRef_);
          this.bitField0_ = (0x1000 | this.bitField0_);
        }
      }

      private void ensureMentionIsMutable()
      {
        if ((0x2000 & this.bitField0_) != 8192)
        {
          this.mention_ = new ArrayList(this.mention_);
          this.bitField0_ = (0x2000 | this.bitField0_);
        }
      }

      private void ensureOnlinePhotoIdIsMutable()
      {
        if ((0x800 & this.bitField0_) != 2048)
        {
          this.onlinePhotoId_ = new ArrayList(this.onlinePhotoId_);
          this.bitField0_ = (0x800 | this.bitField0_);
        }
      }

      private void ensurePhotoIsMutable()
      {
        if ((0x100 & this.bitField0_) != 256)
        {
          this.photo_ = new LazyStringArrayList(this.photo_);
          this.bitField0_ = (0x100 | this.bitField0_);
        }
      }

      private void ensureSharedWithUserEmailIsMutable()
      {
        if ((0x80 & this.bitField0_) != 128)
        {
          this.sharedWithUserEmail_ = new LazyStringArrayList(this.sharedWithUserEmail_);
          this.bitField0_ = (0x80 | this.bitField0_);
        }
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 8:
            Network.PostRequest.Type localType = Network.PostRequest.Type.valueOf(paramCodedInputStream.readEnum());
            if (localType == null)
              continue;
            this.bitField0_ = (0x1 | this.bitField0_);
            this.postType_ = localType;
            break;
          case 18:
            this.bitField0_ = (0x2 | this.bitField0_);
            this.activityId_ = paramCodedInputStream.readBytes();
            break;
          case 26:
            this.bitField0_ = (0x4 | this.bitField0_);
            this.commentId_ = paramCodedInputStream.readBytes();
            break;
          case 34:
            this.bitField0_ = (0x8 | this.bitField0_);
            this.content_ = paramCodedInputStream.readBytes();
            break;
          case 42:
            Data.Location.Builder localBuilder6 = Data.Location.newBuilder();
            if (hasLocation())
              localBuilder6.mergeFrom(getLocation());
            paramCodedInputStream.readMessage(localBuilder6, paramExtensionRegistryLite);
            setLocation(localBuilder6.buildPartial());
            break;
          case 50:
            ensureCircleIdIsMutable();
            this.circleId_.add(paramCodedInputStream.readBytes());
            break;
          case 56:
            this.bitField0_ = (0x40 | this.bitField0_);
            this.public_ = paramCodedInputStream.readBool();
            break;
          case 66:
            ensureSharedWithUserEmailIsMutable();
            this.sharedWithUserEmail_.add(paramCodedInputStream.readBytes());
            break;
          case 74:
            ensurePhotoIsMutable();
            this.photo_.add(paramCodedInputStream.readBytes());
            break;
          case 82:
            Data.Audience.Builder localBuilder5 = Data.Audience.newBuilder();
            if (hasAudience())
              localBuilder5.mergeFrom(getAudience());
            paramCodedInputStream.readMessage(localBuilder5, paramExtensionRegistryLite);
            setAudience(localBuilder5.buildPartial());
            break;
          case 88:
            this.bitField0_ = (0x400 | this.bitField0_);
            this.albumId_ = paramCodedInputStream.readInt64();
            break;
          case 98:
            Network.PostRequest.OnlinePhotoId.Builder localBuilder4 = Network.PostRequest.OnlinePhotoId.newBuilder();
            paramCodedInputStream.readMessage(localBuilder4, paramExtensionRegistryLite);
            addOnlinePhotoId(localBuilder4.buildPartial());
            break;
          case 106:
            Network.MediaReference.Builder localBuilder3 = Network.MediaReference.newBuilder();
            paramCodedInputStream.readMessage(localBuilder3, paramExtensionRegistryLite);
            addMediaRef(localBuilder3.buildPartial());
            break;
          case 114:
            Data.Mention.Builder localBuilder2 = Data.Mention.newBuilder();
            paramCodedInputStream.readMessage(localBuilder2, paramExtensionRegistryLite);
            addMention(localBuilder2.buildPartial());
            break;
          case 122:
            Network.MediaReference.PicasaPhotoId.Builder localBuilder1 = Network.MediaReference.PicasaPhotoId.newBuilder();
            if (hasTargetPhotoId())
              localBuilder1.mergeFrom(getTargetPhotoId());
            paramCodedInputStream.readMessage(localBuilder1, paramExtensionRegistryLite);
            setTargetPhotoId(localBuilder1.buildPartial());
            break;
          case 130:
            A2a.HangoutData.Builder localBuilder = A2a.HangoutData.newBuilder();
            if (hasHangoutData())
              localBuilder.mergeFrom(getHangoutData());
            paramCodedInputStream.readMessage(localBuilder, paramExtensionRegistryLite);
            setHangoutData(localBuilder.buildPartial());
            break;
          case 136:
          }
          Network.PostRequest.NotificationLevel localNotificationLevel = Network.PostRequest.NotificationLevel.valueOf(paramCodedInputStream.readEnum());
          if (localNotificationLevel != null)
          {
            this.bitField0_ = (0x10000 | this.bitField0_);
            this.notificationLevel_ = localNotificationLevel;
          }
        }
      }

      public final Builder addAllCircleId(Iterable<String> paramIterable)
      {
        ensureCircleIdIsMutable();
        GeneratedMessageLite.Builder.addAll(paramIterable, this.circleId_);
        return this;
      }

      public final Builder addAllMediaRef(Iterable<? extends Network.MediaReference> paramIterable)
      {
        ensureMediaRefIsMutable();
        GeneratedMessageLite.Builder.addAll(paramIterable, this.mediaRef_);
        return this;
      }

      public final Builder addAllMention(Iterable<? extends Data.Mention> paramIterable)
      {
        ensureMentionIsMutable();
        GeneratedMessageLite.Builder.addAll(paramIterable, this.mention_);
        return this;
      }

      @Deprecated
      public final Builder addAllOnlinePhotoId(Iterable<? extends Network.PostRequest.OnlinePhotoId> paramIterable)
      {
        ensureOnlinePhotoIdIsMutable();
        GeneratedMessageLite.Builder.addAll(paramIterable, this.onlinePhotoId_);
        return this;
      }

      @Deprecated
      public final Builder addAllPhoto(Iterable<String> paramIterable)
      {
        ensurePhotoIsMutable();
        GeneratedMessageLite.Builder.addAll(paramIterable, this.photo_);
        return this;
      }

      public final Builder addAllSharedWithUserEmail(Iterable<String> paramIterable)
      {
        ensureSharedWithUserEmailIsMutable();
        GeneratedMessageLite.Builder.addAll(paramIterable, this.sharedWithUserEmail_);
        return this;
      }

      public final Builder addCircleId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        ensureCircleIdIsMutable();
        this.circleId_.add(paramString);
        return this;
      }

      public final Builder addMediaRef(int paramInt, Network.MediaReference.Builder paramBuilder)
      {
        ensureMediaRefIsMutable();
        this.mediaRef_.add(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder addMediaRef(int paramInt, Network.MediaReference paramMediaReference)
      {
        if (paramMediaReference == null)
          throw new NullPointerException();
        ensureMediaRefIsMutable();
        this.mediaRef_.add(paramInt, paramMediaReference);
        return this;
      }

      public final Builder addMediaRef(Network.MediaReference.Builder paramBuilder)
      {
        ensureMediaRefIsMutable();
        this.mediaRef_.add(paramBuilder.build());
        return this;
      }

      public final Builder addMediaRef(Network.MediaReference paramMediaReference)
      {
        if (paramMediaReference == null)
          throw new NullPointerException();
        ensureMediaRefIsMutable();
        this.mediaRef_.add(paramMediaReference);
        return this;
      }

      public final Builder addMention(int paramInt, Data.Mention.Builder paramBuilder)
      {
        ensureMentionIsMutable();
        this.mention_.add(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder addMention(int paramInt, Data.Mention paramMention)
      {
        if (paramMention == null)
          throw new NullPointerException();
        ensureMentionIsMutable();
        this.mention_.add(paramInt, paramMention);
        return this;
      }

      public final Builder addMention(Data.Mention.Builder paramBuilder)
      {
        ensureMentionIsMutable();
        this.mention_.add(paramBuilder.build());
        return this;
      }

      public final Builder addMention(Data.Mention paramMention)
      {
        if (paramMention == null)
          throw new NullPointerException();
        ensureMentionIsMutable();
        this.mention_.add(paramMention);
        return this;
      }

      @Deprecated
      public final Builder addOnlinePhotoId(int paramInt, Network.PostRequest.OnlinePhotoId.Builder paramBuilder)
      {
        ensureOnlinePhotoIdIsMutable();
        this.onlinePhotoId_.add(paramInt, paramBuilder.build());
        return this;
      }

      @Deprecated
      public final Builder addOnlinePhotoId(int paramInt, Network.PostRequest.OnlinePhotoId paramOnlinePhotoId)
      {
        if (paramOnlinePhotoId == null)
          throw new NullPointerException();
        ensureOnlinePhotoIdIsMutable();
        this.onlinePhotoId_.add(paramInt, paramOnlinePhotoId);
        return this;
      }

      @Deprecated
      public final Builder addOnlinePhotoId(Network.PostRequest.OnlinePhotoId.Builder paramBuilder)
      {
        ensureOnlinePhotoIdIsMutable();
        this.onlinePhotoId_.add(paramBuilder.build());
        return this;
      }

      @Deprecated
      public final Builder addOnlinePhotoId(Network.PostRequest.OnlinePhotoId paramOnlinePhotoId)
      {
        if (paramOnlinePhotoId == null)
          throw new NullPointerException();
        ensureOnlinePhotoIdIsMutable();
        this.onlinePhotoId_.add(paramOnlinePhotoId);
        return this;
      }

      @Deprecated
      public final Builder addPhoto(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        ensurePhotoIsMutable();
        this.photo_.add(paramString);
        return this;
      }

      public final Builder addSharedWithUserEmail(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        ensureSharedWithUserEmailIsMutable();
        this.sharedWithUserEmail_.add(paramString);
        return this;
      }

      public final Builder clear()
      {
        super.clear();
        this.postType_ = Network.PostRequest.Type.CREATE_ACTIVITY;
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.activityId_ = "";
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.commentId_ = "";
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.content_ = "";
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        this.location_ = Data.Location.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        this.circleId_ = LazyStringArrayList.EMPTY;
        this.bitField0_ = (0xFFFFFFDF & this.bitField0_);
        this.public_ = false;
        this.bitField0_ = (0xFFFFFFBF & this.bitField0_);
        this.sharedWithUserEmail_ = LazyStringArrayList.EMPTY;
        this.bitField0_ = (0xFFFFFF7F & this.bitField0_);
        this.photo_ = LazyStringArrayList.EMPTY;
        this.bitField0_ = (0xFFFFFEFF & this.bitField0_);
        this.audience_ = Data.Audience.getDefaultInstance();
        this.bitField0_ = (0xFFFFFDFF & this.bitField0_);
        this.albumId_ = 0L;
        this.bitField0_ = (0xFFFFFBFF & this.bitField0_);
        this.onlinePhotoId_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFF7FF & this.bitField0_);
        this.mediaRef_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFEFFF & this.bitField0_);
        this.mention_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFDFFF & this.bitField0_);
        this.targetPhotoId_ = Network.MediaReference.PicasaPhotoId.getDefaultInstance();
        this.bitField0_ = (0xFFFFBFFF & this.bitField0_);
        this.hangoutData_ = A2a.HangoutData.getDefaultInstance();
        this.bitField0_ = (0xFFFF7FFF & this.bitField0_);
        this.notificationLevel_ = Network.PostRequest.NotificationLevel.DEFAULT;
        this.bitField0_ = (0xFFFEFFFF & this.bitField0_);
        return this;
      }

      public final Builder clearActivityId()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.activityId_ = Network.PostRequest.getDefaultInstance().getActivityId();
        return this;
      }

      public final Builder clearAlbumId()
      {
        this.bitField0_ = (0xFFFFFBFF & this.bitField0_);
        this.albumId_ = 0L;
        return this;
      }

      public final Builder clearAudience()
      {
        this.audience_ = Data.Audience.getDefaultInstance();
        this.bitField0_ = (0xFFFFFDFF & this.bitField0_);
        return this;
      }

      public final Builder clearCircleId()
      {
        this.circleId_ = LazyStringArrayList.EMPTY;
        this.bitField0_ = (0xFFFFFFDF & this.bitField0_);
        return this;
      }

      public final Builder clearCommentId()
      {
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.commentId_ = Network.PostRequest.getDefaultInstance().getCommentId();
        return this;
      }

      public final Builder clearContent()
      {
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        this.content_ = Network.PostRequest.getDefaultInstance().getContent();
        return this;
      }

      public final Builder clearHangoutData()
      {
        this.hangoutData_ = A2a.HangoutData.getDefaultInstance();
        this.bitField0_ = (0xFFFF7FFF & this.bitField0_);
        return this;
      }

      public final Builder clearLocation()
      {
        this.location_ = Data.Location.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        return this;
      }

      public final Builder clearMediaRef()
      {
        this.mediaRef_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFEFFF & this.bitField0_);
        return this;
      }

      public final Builder clearMention()
      {
        this.mention_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFDFFF & this.bitField0_);
        return this;
      }

      public final Builder clearNotificationLevel()
      {
        this.bitField0_ = (0xFFFEFFFF & this.bitField0_);
        this.notificationLevel_ = Network.PostRequest.NotificationLevel.DEFAULT;
        return this;
      }

      @Deprecated
      public final Builder clearOnlinePhotoId()
      {
        this.onlinePhotoId_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFF7FF & this.bitField0_);
        return this;
      }

      @Deprecated
      public final Builder clearPhoto()
      {
        this.photo_ = LazyStringArrayList.EMPTY;
        this.bitField0_ = (0xFFFFFEFF & this.bitField0_);
        return this;
      }

      public final Builder clearPostType()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.postType_ = Network.PostRequest.Type.CREATE_ACTIVITY;
        return this;
      }

      @Deprecated
      public final Builder clearPublic()
      {
        this.bitField0_ = (0xFFFFFFBF & this.bitField0_);
        this.public_ = false;
        return this;
      }

      public final Builder clearSharedWithUserEmail()
      {
        this.sharedWithUserEmail_ = LazyStringArrayList.EMPTY;
        this.bitField0_ = (0xFFFFFF7F & this.bitField0_);
        return this;
      }

      public final Builder clearTargetPhotoId()
      {
        this.targetPhotoId_ = Network.MediaReference.PicasaPhotoId.getDefaultInstance();
        this.bitField0_ = (0xFFFFBFFF & this.bitField0_);
        return this;
      }

      public final String getActivityId()
      {
        Object localObject = this.activityId_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.activityId_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final long getAlbumId()
      {
        return this.albumId_;
      }

      public final Data.Audience getAudience()
      {
        return this.audience_;
      }

      public final String getCircleId(int paramInt)
      {
        return (String)this.circleId_.get(paramInt);
      }

      public final int getCircleIdCount()
      {
        return this.circleId_.size();
      }

      public final List<String> getCircleIdList()
      {
        return Collections.unmodifiableList(this.circleId_);
      }

      public final String getCommentId()
      {
        Object localObject = this.commentId_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.commentId_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final String getContent()
      {
        Object localObject = this.content_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.content_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final Network.PostRequest getDefaultInstanceForType()
      {
        return Network.PostRequest.getDefaultInstance();
      }

      public final A2a.HangoutData getHangoutData()
      {
        return this.hangoutData_;
      }

      public final Data.Location getLocation()
      {
        return this.location_;
      }

      public final Network.MediaReference getMediaRef(int paramInt)
      {
        return (Network.MediaReference)this.mediaRef_.get(paramInt);
      }

      public final int getMediaRefCount()
      {
        return this.mediaRef_.size();
      }

      public final List<Network.MediaReference> getMediaRefList()
      {
        return Collections.unmodifiableList(this.mediaRef_);
      }

      public final Data.Mention getMention(int paramInt)
      {
        return (Data.Mention)this.mention_.get(paramInt);
      }

      public final int getMentionCount()
      {
        return this.mention_.size();
      }

      public final List<Data.Mention> getMentionList()
      {
        return Collections.unmodifiableList(this.mention_);
      }

      public final Network.PostRequest.NotificationLevel getNotificationLevel()
      {
        return this.notificationLevel_;
      }

      @Deprecated
      public final Network.PostRequest.OnlinePhotoId getOnlinePhotoId(int paramInt)
      {
        return (Network.PostRequest.OnlinePhotoId)this.onlinePhotoId_.get(paramInt);
      }

      @Deprecated
      public final int getOnlinePhotoIdCount()
      {
        return this.onlinePhotoId_.size();
      }

      @Deprecated
      public final List<Network.PostRequest.OnlinePhotoId> getOnlinePhotoIdList()
      {
        return Collections.unmodifiableList(this.onlinePhotoId_);
      }

      @Deprecated
      public final String getPhoto(int paramInt)
      {
        return (String)this.photo_.get(paramInt);
      }

      @Deprecated
      public final int getPhotoCount()
      {
        return this.photo_.size();
      }

      @Deprecated
      public final List<String> getPhotoList()
      {
        return Collections.unmodifiableList(this.photo_);
      }

      public final Network.PostRequest.Type getPostType()
      {
        return this.postType_;
      }

      @Deprecated
      public final boolean getPublic()
      {
        return this.public_;
      }

      public final String getSharedWithUserEmail(int paramInt)
      {
        return (String)this.sharedWithUserEmail_.get(paramInt);
      }

      public final int getSharedWithUserEmailCount()
      {
        return this.sharedWithUserEmail_.size();
      }

      public final List<String> getSharedWithUserEmailList()
      {
        return Collections.unmodifiableList(this.sharedWithUserEmail_);
      }

      public final Network.MediaReference.PicasaPhotoId getTargetPhotoId()
      {
        return this.targetPhotoId_;
      }

      public final boolean hasActivityId()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasAlbumId()
      {
        if ((0x400 & this.bitField0_) == 1024);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasAudience()
      {
        if ((0x200 & this.bitField0_) == 512);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasCommentId()
      {
        if ((0x4 & this.bitField0_) == 4);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasContent()
      {
        if ((0x8 & this.bitField0_) == 8);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasHangoutData()
      {
        if ((0x8000 & this.bitField0_) == 32768);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasLocation()
      {
        if ((0x10 & this.bitField0_) == 16);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasNotificationLevel()
      {
        if ((0x10000 & this.bitField0_) == 65536);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasPostType()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      @Deprecated
      public final boolean hasPublic()
      {
        if ((0x40 & this.bitField0_) == 64);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasTargetPhotoId()
      {
        if ((0x4000 & this.bitField0_) == 16384);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean isInitialized()
      {
        boolean bool1;
        if (hasLocation())
        {
          boolean bool3 = getLocation().isInitialized();
          bool1 = false;
          if (bool3);
        }
        while (true)
        {
          return bool1;
          if (hasHangoutData())
          {
            boolean bool2 = getHangoutData().isInitialized();
            bool1 = false;
            if (!bool2);
          }
          else
          {
            bool1 = true;
          }
        }
      }

      public final Builder mergeFrom(Network.PostRequest paramPostRequest)
      {
        if (paramPostRequest == Network.PostRequest.getDefaultInstance())
          return this;
        if (paramPostRequest.hasPostType())
          setPostType(paramPostRequest.getPostType());
        if (paramPostRequest.hasActivityId())
          setActivityId(paramPostRequest.getActivityId());
        if (paramPostRequest.hasCommentId())
          setCommentId(paramPostRequest.getCommentId());
        if (paramPostRequest.hasContent())
          setContent(paramPostRequest.getContent());
        Data.Location localLocation;
        label127: Data.Audience localAudience;
        label181: label241: label501: Network.MediaReference.PicasaPhotoId localPicasaPhotoId;
        label285: label341: A2a.HangoutData localHangoutData;
        if (paramPostRequest.hasLocation())
        {
          localLocation = paramPostRequest.getLocation();
          if (((0x10 & this.bitField0_) == 16) && (this.location_ != Data.Location.getDefaultInstance()))
          {
            this.location_ = Data.Location.newBuilder(this.location_).mergeFrom(localLocation).buildPartial();
            this.bitField0_ = (0x10 | this.bitField0_);
          }
        }
        else
        {
          if (!paramPostRequest.circleId_.isEmpty())
          {
            if (!this.circleId_.isEmpty())
              break label660;
            this.circleId_ = paramPostRequest.circleId_;
            this.bitField0_ = (0xFFFFFFDF & this.bitField0_);
          }
          if (paramPostRequest.hasPublic())
            setPublic(paramPostRequest.getPublic());
          if (!paramPostRequest.sharedWithUserEmail_.isEmpty())
          {
            if (!this.sharedWithUserEmail_.isEmpty())
              break label681;
            this.sharedWithUserEmail_ = paramPostRequest.sharedWithUserEmail_;
            this.bitField0_ = (0xFFFFFF7F & this.bitField0_);
          }
          if (!paramPostRequest.photo_.isEmpty())
          {
            if (!this.photo_.isEmpty())
              break label702;
            this.photo_ = paramPostRequest.photo_;
            this.bitField0_ = (0xFFFFFEFF & this.bitField0_);
          }
          if (paramPostRequest.hasAudience())
          {
            localAudience = paramPostRequest.getAudience();
            if (((0x200 & this.bitField0_) != 512) || (this.audience_ == Data.Audience.getDefaultInstance()))
              break label723;
            this.audience_ = Data.Audience.newBuilder(this.audience_).mergeFrom(localAudience).buildPartial();
            this.bitField0_ = (0x200 | this.bitField0_);
          }
          if (paramPostRequest.hasAlbumId())
            setAlbumId(paramPostRequest.getAlbumId());
          if (!paramPostRequest.onlinePhotoId_.isEmpty())
          {
            if (!this.onlinePhotoId_.isEmpty())
              break label732;
            this.onlinePhotoId_ = paramPostRequest.onlinePhotoId_;
            this.bitField0_ = (0xFFFFF7FF & this.bitField0_);
          }
          label413: if (!paramPostRequest.mediaRef_.isEmpty())
          {
            if (!this.mediaRef_.isEmpty())
              break label753;
            this.mediaRef_ = paramPostRequest.mediaRef_;
            this.bitField0_ = (0xFFFFEFFF & this.bitField0_);
          }
          label457: if (!paramPostRequest.mention_.isEmpty())
          {
            if (!this.mention_.isEmpty())
              break label774;
            this.mention_ = paramPostRequest.mention_;
            this.bitField0_ = (0xFFFFDFFF & this.bitField0_);
          }
          if (paramPostRequest.hasTargetPhotoId())
          {
            localPicasaPhotoId = paramPostRequest.getTargetPhotoId();
            if (((0x4000 & this.bitField0_) != 16384) || (this.targetPhotoId_ == Network.MediaReference.PicasaPhotoId.getDefaultInstance()))
              break label795;
            this.targetPhotoId_ = Network.MediaReference.PicasaPhotoId.newBuilder(this.targetPhotoId_).mergeFrom(localPicasaPhotoId).buildPartial();
            label557: this.bitField0_ = (0x4000 | this.bitField0_);
          }
          if (paramPostRequest.hasHangoutData())
          {
            localHangoutData = paramPostRequest.getHangoutData();
            if (((0x8000 & this.bitField0_) != 32768) || (this.hangoutData_ == A2a.HangoutData.getDefaultInstance()))
              break label804;
          }
        }
        label660: label795: label804: for (this.hangoutData_ = A2a.HangoutData.newBuilder(this.hangoutData_).mergeFrom(localHangoutData).buildPartial(); ; this.hangoutData_ = localHangoutData)
        {
          this.bitField0_ = (0x8000 | this.bitField0_);
          if (!paramPostRequest.hasNotificationLevel())
            break;
          setNotificationLevel(paramPostRequest.getNotificationLevel());
          break;
          this.location_ = localLocation;
          break label127;
          ensureCircleIdIsMutable();
          this.circleId_.addAll(paramPostRequest.circleId_);
          break label181;
          label681: ensureSharedWithUserEmailIsMutable();
          this.sharedWithUserEmail_.addAll(paramPostRequest.sharedWithUserEmail_);
          break label241;
          label702: ensurePhotoIsMutable();
          this.photo_.addAll(paramPostRequest.photo_);
          break label285;
          label723: this.audience_ = localAudience;
          break label341;
          label732: ensureOnlinePhotoIdIsMutable();
          this.onlinePhotoId_.addAll(paramPostRequest.onlinePhotoId_);
          break label413;
          label753: ensureMediaRefIsMutable();
          this.mediaRef_.addAll(paramPostRequest.mediaRef_);
          break label457;
          ensureMentionIsMutable();
          this.mention_.addAll(paramPostRequest.mention_);
          break label501;
          this.targetPhotoId_ = localPicasaPhotoId;
          break label557;
        }
      }

      public final Builder setActivityId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x2 | this.bitField0_);
        this.activityId_ = paramString;
        return this;
      }

      public final Builder setAlbumId(long paramLong)
      {
        this.bitField0_ = (0x400 | this.bitField0_);
        this.albumId_ = paramLong;
        return this;
      }

      public final Builder setAudience(Data.Audience.Builder paramBuilder)
      {
        this.audience_ = paramBuilder.build();
        this.bitField0_ = (0x200 | this.bitField0_);
        return this;
      }

      public final Builder setAudience(Data.Audience paramAudience)
      {
        if (paramAudience == null)
          throw new NullPointerException();
        this.audience_ = paramAudience;
        this.bitField0_ = (0x200 | this.bitField0_);
        return this;
      }

      public final Builder setCircleId(int paramInt, String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        ensureCircleIdIsMutable();
        this.circleId_.set(paramInt, paramString);
        return this;
      }

      public final Builder setCommentId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x4 | this.bitField0_);
        this.commentId_ = paramString;
        return this;
      }

      public final Builder setContent(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x8 | this.bitField0_);
        this.content_ = paramString;
        return this;
      }

      public final Builder setHangoutData(A2a.HangoutData.Builder paramBuilder)
      {
        this.hangoutData_ = paramBuilder.build();
        this.bitField0_ = (0x8000 | this.bitField0_);
        return this;
      }

      public final Builder setHangoutData(A2a.HangoutData paramHangoutData)
      {
        if (paramHangoutData == null)
          throw new NullPointerException();
        this.hangoutData_ = paramHangoutData;
        this.bitField0_ = (0x8000 | this.bitField0_);
        return this;
      }

      public final Builder setLocation(Data.Location.Builder paramBuilder)
      {
        this.location_ = paramBuilder.build();
        this.bitField0_ = (0x10 | this.bitField0_);
        return this;
      }

      public final Builder setLocation(Data.Location paramLocation)
      {
        if (paramLocation == null)
          throw new NullPointerException();
        this.location_ = paramLocation;
        this.bitField0_ = (0x10 | this.bitField0_);
        return this;
      }

      public final Builder setMediaRef(int paramInt, Network.MediaReference.Builder paramBuilder)
      {
        ensureMediaRefIsMutable();
        this.mediaRef_.set(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder setMediaRef(int paramInt, Network.MediaReference paramMediaReference)
      {
        if (paramMediaReference == null)
          throw new NullPointerException();
        ensureMediaRefIsMutable();
        this.mediaRef_.set(paramInt, paramMediaReference);
        return this;
      }

      public final Builder setMention(int paramInt, Data.Mention.Builder paramBuilder)
      {
        ensureMentionIsMutable();
        this.mention_.set(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder setMention(int paramInt, Data.Mention paramMention)
      {
        if (paramMention == null)
          throw new NullPointerException();
        ensureMentionIsMutable();
        this.mention_.set(paramInt, paramMention);
        return this;
      }

      public final Builder setNotificationLevel(Network.PostRequest.NotificationLevel paramNotificationLevel)
      {
        if (paramNotificationLevel == null)
          throw new NullPointerException();
        this.bitField0_ = (0x10000 | this.bitField0_);
        this.notificationLevel_ = paramNotificationLevel;
        return this;
      }

      @Deprecated
      public final Builder setOnlinePhotoId(int paramInt, Network.PostRequest.OnlinePhotoId.Builder paramBuilder)
      {
        ensureOnlinePhotoIdIsMutable();
        this.onlinePhotoId_.set(paramInt, paramBuilder.build());
        return this;
      }

      @Deprecated
      public final Builder setOnlinePhotoId(int paramInt, Network.PostRequest.OnlinePhotoId paramOnlinePhotoId)
      {
        if (paramOnlinePhotoId == null)
          throw new NullPointerException();
        ensureOnlinePhotoIdIsMutable();
        this.onlinePhotoId_.set(paramInt, paramOnlinePhotoId);
        return this;
      }

      @Deprecated
      public final Builder setPhoto(int paramInt, String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        ensurePhotoIsMutable();
        this.photo_.set(paramInt, paramString);
        return this;
      }

      public final Builder setPostType(Network.PostRequest.Type paramType)
      {
        if (paramType == null)
          throw new NullPointerException();
        this.bitField0_ = (0x1 | this.bitField0_);
        this.postType_ = paramType;
        return this;
      }

      @Deprecated
      public final Builder setPublic(boolean paramBoolean)
      {
        this.bitField0_ = (0x40 | this.bitField0_);
        this.public_ = paramBoolean;
        return this;
      }

      public final Builder setSharedWithUserEmail(int paramInt, String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        ensureSharedWithUserEmailIsMutable();
        this.sharedWithUserEmail_.set(paramInt, paramString);
        return this;
      }

      public final Builder setTargetPhotoId(Network.MediaReference.PicasaPhotoId.Builder paramBuilder)
      {
        this.targetPhotoId_ = paramBuilder.build();
        this.bitField0_ = (0x4000 | this.bitField0_);
        return this;
      }

      public final Builder setTargetPhotoId(Network.MediaReference.PicasaPhotoId paramPicasaPhotoId)
      {
        if (paramPicasaPhotoId == null)
          throw new NullPointerException();
        this.targetPhotoId_ = paramPicasaPhotoId;
        this.bitField0_ = (0x4000 | this.bitField0_);
        return this;
      }
    }

    public static enum NotificationLevel
      implements Internal.EnumLite
    {
      private static Internal.EnumLiteMap<NotificationLevel> internalValueMap = new Internal.EnumLiteMap()
      {
      };
      private final int value;

      static
      {
        NotificationLevel[] arrayOfNotificationLevel = new NotificationLevel[4];
        arrayOfNotificationLevel[0] = DEFAULT;
        arrayOfNotificationLevel[1] = NOTIFY_ALL;
        arrayOfNotificationLevel[2] = NOTIFY_ALL_SANDBAR_ONLY;
        arrayOfNotificationLevel[3] = NOTIFY_NONE;
      }

      private NotificationLevel(int paramInt1, int paramInt2)
      {
        this.value = paramInt1;
      }

      public static NotificationLevel valueOf(int paramInt)
      {
        NotificationLevel localNotificationLevel;
        switch (paramInt)
        {
        default:
          localNotificationLevel = null;
        case 0:
        case 1:
        case 3:
        case 2:
        }
        while (true)
        {
          return localNotificationLevel;
          localNotificationLevel = DEFAULT;
          continue;
          localNotificationLevel = NOTIFY_ALL;
          continue;
          localNotificationLevel = NOTIFY_ALL_SANDBAR_ONLY;
          continue;
          localNotificationLevel = NOTIFY_NONE;
        }
      }

      public final int getNumber()
      {
        return this.value;
      }
    }

    public static final class OnlinePhotoId extends GeneratedMessageLite
      implements Network.PostRequest.OnlinePhotoIdOrBuilder
    {
      private static final OnlinePhotoId defaultInstance;
      private static final long serialVersionUID;
      private int bitField0_;
      private byte memoizedIsInitialized = -1;
      private int memoizedSerializedSize = -1;
      private long ownerGaiaId_;
      private long photoId_;

      static
      {
        OnlinePhotoId localOnlinePhotoId = new OnlinePhotoId();
        defaultInstance = localOnlinePhotoId;
        localOnlinePhotoId.photoId_ = 0L;
        localOnlinePhotoId.ownerGaiaId_ = 0L;
      }

      private OnlinePhotoId()
      {
      }

      private OnlinePhotoId(Builder paramBuilder)
      {
        super();
      }

      public static OnlinePhotoId getDefaultInstance()
      {
        return defaultInstance;
      }

      public static Builder newBuilder()
      {
        return Builder.access$15100();
      }

      public final OnlinePhotoId getDefaultInstanceForType()
      {
        return defaultInstance;
      }

      public final long getOwnerGaiaId()
      {
        return this.ownerGaiaId_;
      }

      public final long getPhotoId()
      {
        return this.photoId_;
      }

      public final int getSerializedSize()
      {
        int i = this.memoizedSerializedSize;
        if (i != -1);
        int k;
        for (int m = i; ; m = k)
        {
          return m;
          int j = 0x1 & this.bitField0_;
          k = 0;
          if (j == 1)
            k = 0 + CodedOutputStream.computeInt64Size(1, this.photoId_);
          if ((0x2 & this.bitField0_) == 2)
            k += CodedOutputStream.computeInt64Size(2, this.ownerGaiaId_);
          this.memoizedSerializedSize = k;
        }
      }

      public final boolean hasOwnerGaiaId()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasPhotoId()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean isInitialized()
      {
        int i = 1;
        int j = this.memoizedIsInitialized;
        if (j != -1)
          if (j != i);
        while (true)
        {
          return i;
          i = 0;
          continue;
          this.memoizedIsInitialized = i;
        }
      }

      protected final Object writeReplace()
        throws ObjectStreamException
      {
        return super.writeReplace();
      }

      public final void writeTo(CodedOutputStream paramCodedOutputStream)
        throws IOException
      {
        getSerializedSize();
        if ((0x1 & this.bitField0_) == 1)
          paramCodedOutputStream.writeInt64(1, this.photoId_);
        if ((0x2 & this.bitField0_) == 2)
          paramCodedOutputStream.writeInt64(2, this.ownerGaiaId_);
      }

      public static final class Builder extends GeneratedMessageLite.Builder<Network.PostRequest.OnlinePhotoId, Builder>
        implements Network.PostRequest.OnlinePhotoIdOrBuilder
      {
        private int bitField0_;
        private long ownerGaiaId_;
        private long photoId_;

        private Builder clone()
        {
          return new Builder().mergeFrom(buildPartial());
        }

        private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
          throws IOException
        {
          while (true)
          {
            int i = paramCodedInputStream.readTag();
            switch (i)
            {
            default:
              if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
                continue;
            case 0:
              return this;
            case 8:
              this.bitField0_ = (0x1 | this.bitField0_);
              this.photoId_ = paramCodedInputStream.readInt64();
              break;
            case 16:
            }
            this.bitField0_ = (0x2 | this.bitField0_);
            this.ownerGaiaId_ = paramCodedInputStream.readInt64();
          }
        }

        public final Network.PostRequest.OnlinePhotoId build()
        {
          Network.PostRequest.OnlinePhotoId localOnlinePhotoId = buildPartial();
          if (!localOnlinePhotoId.isInitialized())
            throw new UninitializedMessageException();
          return localOnlinePhotoId;
        }

        public final Network.PostRequest.OnlinePhotoId buildPartial()
        {
          Network.PostRequest.OnlinePhotoId localOnlinePhotoId = new Network.PostRequest.OnlinePhotoId(this, (byte)0);
          int i = this.bitField0_;
          int j = i & 0x1;
          int k = 0;
          if (j == 1)
            k = 1;
          Network.PostRequest.OnlinePhotoId.access$15302(localOnlinePhotoId, this.photoId_);
          if ((i & 0x2) == 2)
            k |= 2;
          Network.PostRequest.OnlinePhotoId.access$15402(localOnlinePhotoId, this.ownerGaiaId_);
          Network.PostRequest.OnlinePhotoId.access$15502(localOnlinePhotoId, k);
          return localOnlinePhotoId;
        }

        public final Builder clear()
        {
          super.clear();
          this.photoId_ = 0L;
          this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
          this.ownerGaiaId_ = 0L;
          this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
          return this;
        }

        public final Builder clearOwnerGaiaId()
        {
          this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
          this.ownerGaiaId_ = 0L;
          return this;
        }

        public final Builder clearPhotoId()
        {
          this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
          this.photoId_ = 0L;
          return this;
        }

        public final Network.PostRequest.OnlinePhotoId getDefaultInstanceForType()
        {
          return Network.PostRequest.OnlinePhotoId.getDefaultInstance();
        }

        public final long getOwnerGaiaId()
        {
          return this.ownerGaiaId_;
        }

        public final long getPhotoId()
        {
          return this.photoId_;
        }

        public final boolean hasOwnerGaiaId()
        {
          if ((0x2 & this.bitField0_) == 2);
          for (boolean bool = true; ; bool = false)
            return bool;
        }

        public final boolean hasPhotoId()
        {
          int i = 1;
          if ((0x1 & this.bitField0_) == i);
          while (true)
          {
            return i;
            int j = 0;
          }
        }

        public final boolean isInitialized()
        {
          return true;
        }

        public final Builder mergeFrom(Network.PostRequest.OnlinePhotoId paramOnlinePhotoId)
        {
          if (paramOnlinePhotoId == Network.PostRequest.OnlinePhotoId.getDefaultInstance());
          while (true)
          {
            return this;
            if (paramOnlinePhotoId.hasPhotoId())
              setPhotoId(paramOnlinePhotoId.getPhotoId());
            if (paramOnlinePhotoId.hasOwnerGaiaId())
              setOwnerGaiaId(paramOnlinePhotoId.getOwnerGaiaId());
          }
        }

        public final Builder setOwnerGaiaId(long paramLong)
        {
          this.bitField0_ = (0x2 | this.bitField0_);
          this.ownerGaiaId_ = paramLong;
          return this;
        }

        public final Builder setPhotoId(long paramLong)
        {
          this.bitField0_ = (0x1 | this.bitField0_);
          this.photoId_ = paramLong;
          return this;
        }
      }
    }

    public static abstract interface OnlinePhotoIdOrBuilder extends MessageLiteOrBuilder
    {
      public abstract long getOwnerGaiaId();

      public abstract long getPhotoId();

      public abstract boolean hasOwnerGaiaId();

      public abstract boolean hasPhotoId();
    }

    public static enum Type
      implements Internal.EnumLite
    {
      private static Internal.EnumLiteMap<Type> internalValueMap = new Internal.EnumLiteMap()
      {
      };
      private final int value;

      static
      {
        CHECKIN = new Type("CHECKIN", 5, 6);
        Type[] arrayOfType = new Type[6];
        arrayOfType[0] = CREATE_ACTIVITY;
        arrayOfType[1] = CREATE_COMMENT;
        arrayOfType[2] = EDIT_ACTIVITY;
        arrayOfType[3] = EDIT_COMMENT;
        arrayOfType[4] = RESHARE;
        arrayOfType[5] = CHECKIN;
      }

      private Type(int paramInt1, int paramInt2)
      {
        this.value = paramInt1;
      }

      public static Type valueOf(int paramInt)
      {
        Type localType;
        switch (paramInt)
        {
        default:
          localType = null;
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
        case 6:
        }
        while (true)
        {
          return localType;
          localType = CREATE_ACTIVITY;
          continue;
          localType = CREATE_COMMENT;
          continue;
          localType = EDIT_ACTIVITY;
          continue;
          localType = EDIT_COMMENT;
          continue;
          localType = RESHARE;
          continue;
          localType = CHECKIN;
        }
      }

      public final int getNumber()
      {
        return this.value;
      }
    }
  }

  public static abstract interface PostRequestOrBuilder extends MessageLiteOrBuilder
  {
    public abstract String getActivityId();

    public abstract long getAlbumId();

    public abstract Data.Audience getAudience();

    public abstract String getCircleId(int paramInt);

    public abstract int getCircleIdCount();

    public abstract List<String> getCircleIdList();

    public abstract String getCommentId();

    public abstract String getContent();

    public abstract A2a.HangoutData getHangoutData();

    public abstract Data.Location getLocation();

    public abstract Network.MediaReference getMediaRef(int paramInt);

    public abstract int getMediaRefCount();

    public abstract List<Network.MediaReference> getMediaRefList();

    public abstract Data.Mention getMention(int paramInt);

    public abstract int getMentionCount();

    public abstract List<Data.Mention> getMentionList();

    public abstract Network.PostRequest.NotificationLevel getNotificationLevel();

    @Deprecated
    public abstract Network.PostRequest.OnlinePhotoId getOnlinePhotoId(int paramInt);

    @Deprecated
    public abstract int getOnlinePhotoIdCount();

    @Deprecated
    public abstract List<Network.PostRequest.OnlinePhotoId> getOnlinePhotoIdList();

    @Deprecated
    public abstract String getPhoto(int paramInt);

    @Deprecated
    public abstract int getPhotoCount();

    @Deprecated
    public abstract List<String> getPhotoList();

    public abstract Network.PostRequest.Type getPostType();

    @Deprecated
    public abstract boolean getPublic();

    public abstract String getSharedWithUserEmail(int paramInt);

    public abstract int getSharedWithUserEmailCount();

    public abstract List<String> getSharedWithUserEmailList();

    public abstract Network.MediaReference.PicasaPhotoId getTargetPhotoId();

    public abstract boolean hasActivityId();

    public abstract boolean hasAlbumId();

    public abstract boolean hasAudience();

    public abstract boolean hasCommentId();

    public abstract boolean hasContent();

    public abstract boolean hasHangoutData();

    public abstract boolean hasLocation();

    public abstract boolean hasNotificationLevel();

    public abstract boolean hasPostType();

    @Deprecated
    public abstract boolean hasPublic();

    public abstract boolean hasTargetPhotoId();
  }

  public static final class PostResponse extends GeneratedMessageLite
    implements Network.PostResponseOrBuilder
  {
    private static final PostResponse defaultInstance;
    private static final long serialVersionUID;
    private Object activityId_;
    private long albumId_;
    private int bitField0_;
    private Object commentId_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;

    static
    {
      PostResponse localPostResponse = new PostResponse();
      defaultInstance = localPostResponse;
      localPostResponse.activityId_ = "";
      localPostResponse.albumId_ = 0L;
      localPostResponse.commentId_ = "";
    }

    private PostResponse()
    {
    }

    private PostResponse(Builder paramBuilder)
    {
      super();
    }

    private ByteString getActivityIdBytes()
    {
      Object localObject = this.activityId_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.activityId_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    private ByteString getCommentIdBytes()
    {
      Object localObject = this.commentId_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.commentId_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static PostResponse getDefaultInstance()
    {
      return defaultInstance;
    }

    public final String getActivityId()
    {
      Object localObject1 = this.activityId_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.activityId_ = str;
      }
    }

    public final long getAlbumId()
    {
      return this.albumId_;
    }

    public final String getCommentId()
    {
      Object localObject1 = this.commentId_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.commentId_ = str;
      }
    }

    public final PostResponse getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeBytesSize(1, getActivityIdBytes());
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeInt64Size(2, this.albumId_);
        if ((0x4 & this.bitField0_) == 4)
          k += CodedOutputStream.computeBytesSize(3, getCommentIdBytes());
        this.memoizedSerializedSize = k;
      }
    }

    public final boolean hasActivityId()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean hasAlbumId()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasCommentId()
    {
      if ((0x4 & this.bitField0_) == 4);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeBytes(1, getActivityIdBytes());
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeInt64(2, this.albumId_);
      if ((0x4 & this.bitField0_) == 4)
        paramCodedOutputStream.writeBytes(3, getCommentIdBytes());
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Network.PostResponse, Builder>
      implements Network.PostResponseOrBuilder
    {
      private Object activityId_ = "";
      private long albumId_;
      private int bitField0_;
      private Object commentId_ = "";

      private Network.PostResponse buildPartial()
      {
        Network.PostResponse localPostResponse = new Network.PostResponse(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Network.PostResponse.access$18002(localPostResponse, this.activityId_);
        if ((i & 0x2) == 2)
          k |= 2;
        Network.PostResponse.access$18102(localPostResponse, this.albumId_);
        if ((i & 0x4) == 4)
          k |= 4;
        Network.PostResponse.access$18202(localPostResponse, this.commentId_);
        Network.PostResponse.access$18302(localPostResponse, k);
        return localPostResponse;
      }

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 10:
            this.bitField0_ = (0x1 | this.bitField0_);
            this.activityId_ = paramCodedInputStream.readBytes();
            break;
          case 16:
            this.bitField0_ = (0x2 | this.bitField0_);
            this.albumId_ = paramCodedInputStream.readInt64();
            break;
          case 26:
          }
          this.bitField0_ = (0x4 | this.bitField0_);
          this.commentId_ = paramCodedInputStream.readBytes();
        }
      }

      public final Builder clear()
      {
        super.clear();
        this.activityId_ = "";
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.albumId_ = 0L;
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.commentId_ = "";
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        return this;
      }

      public final Builder clearActivityId()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.activityId_ = Network.PostResponse.getDefaultInstance().getActivityId();
        return this;
      }

      public final Builder clearAlbumId()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.albumId_ = 0L;
        return this;
      }

      public final Builder clearCommentId()
      {
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.commentId_ = Network.PostResponse.getDefaultInstance().getCommentId();
        return this;
      }

      public final String getActivityId()
      {
        Object localObject = this.activityId_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.activityId_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final long getAlbumId()
      {
        return this.albumId_;
      }

      public final String getCommentId()
      {
        Object localObject = this.commentId_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.commentId_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final Network.PostResponse getDefaultInstanceForType()
      {
        return Network.PostResponse.getDefaultInstance();
      }

      public final boolean hasActivityId()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean hasAlbumId()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasCommentId()
      {
        if ((0x4 & this.bitField0_) == 4);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Network.PostResponse paramPostResponse)
      {
        if (paramPostResponse == Network.PostResponse.getDefaultInstance());
        while (true)
        {
          return this;
          if (paramPostResponse.hasActivityId())
            setActivityId(paramPostResponse.getActivityId());
          if (paramPostResponse.hasAlbumId())
            setAlbumId(paramPostResponse.getAlbumId());
          if (paramPostResponse.hasCommentId())
            setCommentId(paramPostResponse.getCommentId());
        }
      }

      public final Builder setActivityId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x1 | this.bitField0_);
        this.activityId_ = paramString;
        return this;
      }

      public final Builder setAlbumId(long paramLong)
      {
        this.bitField0_ = (0x2 | this.bitField0_);
        this.albumId_ = paramLong;
        return this;
      }

      public final Builder setCommentId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x4 | this.bitField0_);
        this.commentId_ = paramString;
        return this;
      }
    }
  }

  public static abstract interface PostResponseOrBuilder extends MessageLiteOrBuilder
  {
    public abstract String getActivityId();

    public abstract long getAlbumId();

    public abstract String getCommentId();

    public abstract boolean hasActivityId();

    public abstract boolean hasAlbumId();

    public abstract boolean hasCommentId();
  }

  public static final class ReportAbuseRequest extends GeneratedMessageLite
    implements Network.ReportAbuseRequestOrBuilder
  {
    private static final ReportAbuseRequest defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private ContentType contentType_;
    private Object id_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;

    static
    {
      ReportAbuseRequest localReportAbuseRequest = new ReportAbuseRequest();
      defaultInstance = localReportAbuseRequest;
      localReportAbuseRequest.id_ = "";
      localReportAbuseRequest.contentType_ = ContentType.PLATFORM;
    }

    private ReportAbuseRequest()
    {
    }

    private ReportAbuseRequest(Builder paramBuilder)
    {
      super();
    }

    public static ReportAbuseRequest getDefaultInstance()
    {
      return defaultInstance;
    }

    private ByteString getIdBytes()
    {
      Object localObject = this.id_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.id_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public final ContentType getContentType()
    {
      return this.contentType_;
    }

    public final ReportAbuseRequest getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final String getId()
    {
      Object localObject1 = this.id_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.id_ = str;
      }
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeBytesSize(1, getIdBytes());
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeEnumSize(2, this.contentType_.getNumber());
        this.memoizedSerializedSize = k;
      }
    }

    public final boolean hasContentType()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasId()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeBytes(1, getIdBytes());
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeEnum(2, this.contentType_.getNumber());
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Network.ReportAbuseRequest, Builder>
      implements Network.ReportAbuseRequestOrBuilder
    {
      private int bitField0_;
      private Network.ReportAbuseRequest.ContentType contentType_ = Network.ReportAbuseRequest.ContentType.PLATFORM;
      private Object id_ = "";

      private Network.ReportAbuseRequest buildPartial()
      {
        Network.ReportAbuseRequest localReportAbuseRequest = new Network.ReportAbuseRequest(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Network.ReportAbuseRequest.access$31402(localReportAbuseRequest, this.id_);
        if ((i & 0x2) == 2)
          k |= 2;
        Network.ReportAbuseRequest.access$31502(localReportAbuseRequest, this.contentType_);
        Network.ReportAbuseRequest.access$31602(localReportAbuseRequest, k);
        return localReportAbuseRequest;
      }

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 10:
            this.bitField0_ = (0x1 | this.bitField0_);
            this.id_ = paramCodedInputStream.readBytes();
            break;
          case 16:
          }
          Network.ReportAbuseRequest.ContentType localContentType = Network.ReportAbuseRequest.ContentType.valueOf(paramCodedInputStream.readEnum());
          if (localContentType != null)
          {
            this.bitField0_ = (0x2 | this.bitField0_);
            this.contentType_ = localContentType;
          }
        }
      }

      public final Builder clear()
      {
        super.clear();
        this.id_ = "";
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.contentType_ = Network.ReportAbuseRequest.ContentType.PLATFORM;
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        return this;
      }

      public final Builder clearContentType()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.contentType_ = Network.ReportAbuseRequest.ContentType.PLATFORM;
        return this;
      }

      public final Builder clearId()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.id_ = Network.ReportAbuseRequest.getDefaultInstance().getId();
        return this;
      }

      public final Network.ReportAbuseRequest.ContentType getContentType()
      {
        return this.contentType_;
      }

      public final Network.ReportAbuseRequest getDefaultInstanceForType()
      {
        return Network.ReportAbuseRequest.getDefaultInstance();
      }

      public final String getId()
      {
        Object localObject = this.id_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.id_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final boolean hasContentType()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasId()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Network.ReportAbuseRequest paramReportAbuseRequest)
      {
        if (paramReportAbuseRequest == Network.ReportAbuseRequest.getDefaultInstance());
        while (true)
        {
          return this;
          if (paramReportAbuseRequest.hasId())
            setId(paramReportAbuseRequest.getId());
          if (paramReportAbuseRequest.hasContentType())
            setContentType(paramReportAbuseRequest.getContentType());
        }
      }

      public final Builder setContentType(Network.ReportAbuseRequest.ContentType paramContentType)
      {
        if (paramContentType == null)
          throw new NullPointerException();
        this.bitField0_ = (0x2 | this.bitField0_);
        this.contentType_ = paramContentType;
        return this;
      }

      public final Builder setId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x1 | this.bitField0_);
        this.id_ = paramString;
        return this;
      }
    }

    public static enum ContentType
      implements Internal.EnumLite
    {
      private static Internal.EnumLiteMap<ContentType> internalValueMap = new Internal.EnumLiteMap()
      {
      };
      private final int value = 1;

      static
      {
        ContentType[] arrayOfContentType = new ContentType[1];
        arrayOfContentType[0] = PLATFORM;
      }

      private ContentType(int paramInt1, int paramInt2)
      {
      }

      public static ContentType valueOf(int paramInt)
      {
        switch (paramInt)
        {
        default:
        case 1:
        }
        for (ContentType localContentType = null; ; localContentType = PLATFORM)
          return localContentType;
      }

      public final int getNumber()
      {
        return this.value;
      }
    }
  }

  public static abstract interface ReportAbuseRequestOrBuilder extends MessageLiteOrBuilder
  {
    public abstract Network.ReportAbuseRequest.ContentType getContentType();

    public abstract String getId();

    public abstract boolean hasContentType();

    public abstract boolean hasId();
  }

  public static final class ReportAbuseResponse extends GeneratedMessageLite
    implements Network.ReportAbuseResponseOrBuilder
  {
    private static final ReportAbuseResponse defaultInstance = new ReportAbuseResponse();
    private static final long serialVersionUID;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;

    private ReportAbuseResponse()
    {
    }

    private ReportAbuseResponse(Builder paramBuilder)
    {
      super();
    }

    public static ReportAbuseResponse getDefaultInstance()
    {
      return defaultInstance;
    }

    public final ReportAbuseResponse getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      while (true)
      {
        return i;
        this.memoizedSerializedSize = 0;
        i = 0;
      }
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Network.ReportAbuseResponse, Builder>
      implements Network.ReportAbuseResponseOrBuilder
    {
      private Network.ReportAbuseResponse buildPartial()
      {
        return new Network.ReportAbuseResponse(this, (byte)0);
      }

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        int i;
        do
        {
          i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
          case 0:
          }
        }
        while (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i));
        return this;
      }

      public final Builder clear()
      {
        super.clear();
        return this;
      }

      public final Network.ReportAbuseResponse getDefaultInstanceForType()
      {
        return Network.ReportAbuseResponse.getDefaultInstance();
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Network.ReportAbuseResponse paramReportAbuseResponse)
      {
        if (paramReportAbuseResponse == Network.ReportAbuseResponse.getDefaultInstance());
        return this;
      }
    }
  }

  public static abstract interface ReportAbuseResponseOrBuilder extends MessageLiteOrBuilder
  {
  }

  public static final class Request extends GeneratedMessageLite
    implements Network.RequestOrBuilder
  {
    private static final Request defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private long favaRequestId_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private ByteString requestBody_;
    private Object requestId_;
    private Type requestType_;

    static
    {
      Request localRequest = new Request();
      defaultInstance = localRequest;
      localRequest.requestId_ = "";
      localRequest.requestType_ = Type.GET_ACTIVITIES;
      localRequest.requestBody_ = ByteString.EMPTY;
      localRequest.favaRequestId_ = 0L;
    }

    private Request()
    {
    }

    private Request(Builder paramBuilder)
    {
      super();
    }

    public static Request getDefaultInstance()
    {
      return defaultInstance;
    }

    private ByteString getRequestIdBytes()
    {
      Object localObject = this.requestId_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.requestId_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static Builder newBuilder()
    {
      return Builder.access$100();
    }

    public final Request getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    @Deprecated
    public final long getFavaRequestId()
    {
      return this.favaRequestId_;
    }

    public final ByteString getRequestBody()
    {
      return this.requestBody_;
    }

    public final String getRequestId()
    {
      Object localObject1 = this.requestId_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.requestId_ = str;
      }
    }

    public final Type getRequestType()
    {
      return this.requestType_;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeBytesSize(1, getRequestIdBytes());
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeEnumSize(2, this.requestType_.getNumber());
        if ((0x4 & this.bitField0_) == 4)
          k += CodedOutputStream.computeBytesSize(3, this.requestBody_);
        if ((0x8 & this.bitField0_) == 8)
          k += CodedOutputStream.computeInt64Size(4, this.favaRequestId_);
        this.memoizedSerializedSize = k;
      }
    }

    @Deprecated
    public final boolean hasFavaRequestId()
    {
      if ((0x8 & this.bitField0_) == 8);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasRequestBody()
    {
      if ((0x4 & this.bitField0_) == 4);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasRequestId()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean hasRequestType()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeBytes(1, getRequestIdBytes());
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeEnum(2, this.requestType_.getNumber());
      if ((0x4 & this.bitField0_) == 4)
        paramCodedOutputStream.writeBytes(3, this.requestBody_);
      if ((0x8 & this.bitField0_) == 8)
        paramCodedOutputStream.writeInt64(4, this.favaRequestId_);
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Network.Request, Builder>
      implements Network.RequestOrBuilder
    {
      private int bitField0_;
      private long favaRequestId_;
      private ByteString requestBody_ = ByteString.EMPTY;
      private Object requestId_ = "";
      private Network.Request.Type requestType_ = Network.Request.Type.GET_ACTIVITIES;

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 10:
            this.bitField0_ = (0x1 | this.bitField0_);
            this.requestId_ = paramCodedInputStream.readBytes();
            break;
          case 16:
            Network.Request.Type localType = Network.Request.Type.valueOf(paramCodedInputStream.readEnum());
            if (localType == null)
              continue;
            this.bitField0_ = (0x2 | this.bitField0_);
            this.requestType_ = localType;
            break;
          case 26:
            this.bitField0_ = (0x4 | this.bitField0_);
            this.requestBody_ = paramCodedInputStream.readBytes();
            break;
          case 32:
          }
          this.bitField0_ = (0x8 | this.bitField0_);
          this.favaRequestId_ = paramCodedInputStream.readInt64();
        }
      }

      public final Network.Request build()
      {
        Network.Request localRequest = buildPartial();
        if (!localRequest.isInitialized())
          throw new UninitializedMessageException();
        return localRequest;
      }

      public final Network.Request buildPartial()
      {
        Network.Request localRequest = new Network.Request(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Network.Request.access$302(localRequest, this.requestId_);
        if ((i & 0x2) == 2)
          k |= 2;
        Network.Request.access$402(localRequest, this.requestType_);
        if ((i & 0x4) == 4)
          k |= 4;
        Network.Request.access$502(localRequest, this.requestBody_);
        if ((i & 0x8) == 8)
          k |= 8;
        Network.Request.access$602(localRequest, this.favaRequestId_);
        Network.Request.access$702(localRequest, k);
        return localRequest;
      }

      public final Builder clear()
      {
        super.clear();
        this.requestId_ = "";
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.requestType_ = Network.Request.Type.GET_ACTIVITIES;
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.requestBody_ = ByteString.EMPTY;
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.favaRequestId_ = 0L;
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        return this;
      }

      @Deprecated
      public final Builder clearFavaRequestId()
      {
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        this.favaRequestId_ = 0L;
        return this;
      }

      public final Builder clearRequestBody()
      {
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.requestBody_ = Network.Request.getDefaultInstance().getRequestBody();
        return this;
      }

      public final Builder clearRequestId()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.requestId_ = Network.Request.getDefaultInstance().getRequestId();
        return this;
      }

      public final Builder clearRequestType()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.requestType_ = Network.Request.Type.GET_ACTIVITIES;
        return this;
      }

      public final Network.Request getDefaultInstanceForType()
      {
        return Network.Request.getDefaultInstance();
      }

      @Deprecated
      public final long getFavaRequestId()
      {
        return this.favaRequestId_;
      }

      public final ByteString getRequestBody()
      {
        return this.requestBody_;
      }

      public final String getRequestId()
      {
        Object localObject = this.requestId_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.requestId_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final Network.Request.Type getRequestType()
      {
        return this.requestType_;
      }

      @Deprecated
      public final boolean hasFavaRequestId()
      {
        if ((0x8 & this.bitField0_) == 8);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasRequestBody()
      {
        if ((0x4 & this.bitField0_) == 4);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasRequestId()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean hasRequestType()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Network.Request paramRequest)
      {
        if (paramRequest == Network.Request.getDefaultInstance());
        while (true)
        {
          return this;
          if (paramRequest.hasRequestId())
            setRequestId(paramRequest.getRequestId());
          if (paramRequest.hasRequestType())
            setRequestType(paramRequest.getRequestType());
          if (paramRequest.hasRequestBody())
            setRequestBody(paramRequest.getRequestBody());
          if (paramRequest.hasFavaRequestId())
            setFavaRequestId(paramRequest.getFavaRequestId());
        }
      }

      @Deprecated
      public final Builder setFavaRequestId(long paramLong)
      {
        this.bitField0_ = (0x8 | this.bitField0_);
        this.favaRequestId_ = paramLong;
        return this;
      }

      public final Builder setRequestBody(ByteString paramByteString)
      {
        if (paramByteString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x4 | this.bitField0_);
        this.requestBody_ = paramByteString;
        return this;
      }

      public final Builder setRequestId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x1 | this.bitField0_);
        this.requestId_ = paramString;
        return this;
      }

      public final Builder setRequestType(Network.Request.Type paramType)
      {
        if (paramType == null)
          throw new NullPointerException();
        this.bitField0_ = (0x2 | this.bitField0_);
        this.requestType_ = paramType;
        return this;
      }
    }

    public static enum Type
      implements Internal.EnumLite
    {
      private static Internal.EnumLiteMap<Type> internalValueMap = new Internal.EnumLiteMap()
      {
      };
      private final int value;

      static
      {
        GET_AVATAR = new Type("GET_AVATAR", 3, 4);
        ACTIVITY_ACTION = new Type("ACTIVITY_ACTION", 4, 5);
        POST = new Type("POST", 5, 6);
        GET_ALBUM_LIST = new Type("GET_ALBUM_LIST", 6, 7);
        GET_CIRCLES = new Type("GET_CIRCLES", 7, 8);
        SETTINGS = new Type("SETTINGS", 8, 9);
        GET_AUDIENCE = new Type("GET_AUDIENCE", 9, 10);
        SNAP_TO_PLACE = new Type("SNAP_TO_PLACE", 10, 11);
        GET_ALBUM = new Type("GET_ALBUM", 11, 12);
        GET_NOTIFICATIONS = new Type("GET_NOTIFICATIONS", 12, 13);
        CREATE_PLUS_ONE = new Type("CREATE_PLUS_ONE", 13, 14);
        PLACE_SEARCH = new Type("PLACE_SEARCH", 14, 15);
        PLACE_SEARCH_LOG = new Type("PLACE_SEARCH_LOG", 15, 16);
        GET_COALESCED_NOTIFICATIONS = new Type("GET_COALESCED_NOTIFICATIONS", 16, 17);
        SET_NOTIFICATIONS_LAST_READ_TIME = new Type("SET_NOTIFICATIONS_LAST_READ_TIME", 17, 18);
        GET_UNREAD_NOTIFICATIONS_COUNT = new Type("GET_UNREAD_NOTIFICATIONS_COUNT", 18, 19);
        GET_STREAM_PHOTOS = new Type("GET_STREAM_PHOTOS", 19, 20);
        CREATE_PHOTO_COMMENT = new Type("CREATE_PHOTO_COMMENT", 20, 21);
        PHOTO_PLUS_ONE = new Type("PHOTO_PLUS_ONE", 21, 22);
        GET_PHOTOS_OF_USER = new Type("GET_PHOTOS_OF_USER", 22, 23);
        INTERACTIONS = new Type("INTERACTIONS", 23, 24);
        NAME_TAG_APPROVAL = new Type("NAME_TAG_APPROVAL", 24, 25);
        GET_PHOTO_CONSUMPTION_STREAM = new Type("GET_PHOTO_CONSUMPTION_STREAM", 25, 26);
        DELETE_PLUS_ONE = new Type("DELETE_PLUS_ONE", 26, 27);
        ANALYTICS_LOG = new Type("ANALYTICS_LOG", 27, 28);
        GET_PLUS_ONE = new Type("GET_PLUS_ONE", 28, 29);
        OUT_OF_BOX = new Type("OUT_OF_BOX", 29, 30);
        PHOTOS_HOME = new Type("PHOTOS_HOME", 30, 31);
        PHOTO_ACTION = new Type("PHOTO_ACTION", 31, 32);
        NOTIFICATION_SETTINGS = new Type("NOTIFICATION_SETTINGS", 32, 33);
        GET_PHOTOS_BY_ACTIVITY_ID = new Type("GET_PHOTOS_BY_ACTIVITY_ID", 33, 34);
        SET_DEFAULT_NOTIFICATION_SETTINGS = new Type("SET_DEFAULT_NOTIFICATION_SETTINGS", 34, 35);
        SET_PROFILE_PHOTO = new Type("SET_PROFILE_PHOTO", 35, 36);
        REPORT_ABUSE = new Type("REPORT_ABUSE", 36, 37);
        GET_ACTIVITY_ORDER = new Type("GET_ACTIVITY_ORDER", 37, 38);
        UPLOAD_PHOTO = new Type("UPLOAD_PHOTO", 38, 39);
        GET_PHOTOS_BY_USER = new Type("GET_PHOTOS_BY_USER", 39, 40);
        GET_PHOTO = new Type("GET_PHOTO", 40, 41);
        SEARCH = new Type("SEARCH", 41, 42);
        COUNTRIES = new Type("COUNTRIES", 42, 43);
        PHONE_VERIFICATION = new Type("PHONE_VERIFICATION", 43, 44);
        PHONE_VERIFICATION_VALIDATION = new Type("PHONE_VERIFICATION_VALIDATION", 44, 45);
        DEBUG = new Type("DEBUG", 45, 46);
        MARK_ACTIVITY_AS_READ = new Type("MARK_ACTIVITY_AS_READ", 46, 47);
        GET_PLUS_ONE_PEOPLE = new Type("GET_PLUS_ONE_PEOPLE", 47, 48);
        EDIT_ALBUM = new Type("EDIT_ALBUM", 48, 49);
        GET_PHOTO_ORDER = new Type("GET_PHOTO_ORDER", 49, 50);
        DELETE_ALBUM = new Type("DELETE_ALBUM", 50, 51);
        GET_EDITABLE_CONTENT = new Type("GET_EDITABLE_CONTENT", 51, 52);
        GET_PHOTO_SETTINGS = new Type("GET_PHOTO_SETTINGS", 52, 53);
        GET_EVENT_PHOTOS = new Type("GET_EVENT_PHOTOS", 53, 54);
        Type[] arrayOfType = new Type[54];
        arrayOfType[0] = GET_ACTIVITIES;
        arrayOfType[1] = GET_ACTIVITY;
        arrayOfType[2] = GET_PEOPLE;
        arrayOfType[3] = GET_AVATAR;
        arrayOfType[4] = ACTIVITY_ACTION;
        arrayOfType[5] = POST;
        arrayOfType[6] = GET_ALBUM_LIST;
        arrayOfType[7] = GET_CIRCLES;
        arrayOfType[8] = SETTINGS;
        arrayOfType[9] = GET_AUDIENCE;
        arrayOfType[10] = SNAP_TO_PLACE;
        arrayOfType[11] = GET_ALBUM;
        arrayOfType[12] = GET_NOTIFICATIONS;
        arrayOfType[13] = CREATE_PLUS_ONE;
        arrayOfType[14] = PLACE_SEARCH;
        arrayOfType[15] = PLACE_SEARCH_LOG;
        arrayOfType[16] = GET_COALESCED_NOTIFICATIONS;
        arrayOfType[17] = SET_NOTIFICATIONS_LAST_READ_TIME;
        arrayOfType[18] = GET_UNREAD_NOTIFICATIONS_COUNT;
        arrayOfType[19] = GET_STREAM_PHOTOS;
        arrayOfType[20] = CREATE_PHOTO_COMMENT;
        arrayOfType[21] = PHOTO_PLUS_ONE;
        arrayOfType[22] = GET_PHOTOS_OF_USER;
        arrayOfType[23] = INTERACTIONS;
        arrayOfType[24] = NAME_TAG_APPROVAL;
        arrayOfType[25] = GET_PHOTO_CONSUMPTION_STREAM;
        arrayOfType[26] = DELETE_PLUS_ONE;
        arrayOfType[27] = ANALYTICS_LOG;
        arrayOfType[28] = GET_PLUS_ONE;
        arrayOfType[29] = OUT_OF_BOX;
        arrayOfType[30] = PHOTOS_HOME;
        arrayOfType[31] = PHOTO_ACTION;
        arrayOfType[32] = NOTIFICATION_SETTINGS;
        arrayOfType[33] = GET_PHOTOS_BY_ACTIVITY_ID;
        arrayOfType[34] = SET_DEFAULT_NOTIFICATION_SETTINGS;
        arrayOfType[35] = SET_PROFILE_PHOTO;
        arrayOfType[36] = REPORT_ABUSE;
        arrayOfType[37] = GET_ACTIVITY_ORDER;
        arrayOfType[38] = UPLOAD_PHOTO;
        arrayOfType[39] = GET_PHOTOS_BY_USER;
        arrayOfType[40] = GET_PHOTO;
        arrayOfType[41] = SEARCH;
        arrayOfType[42] = COUNTRIES;
        arrayOfType[43] = PHONE_VERIFICATION;
        arrayOfType[44] = PHONE_VERIFICATION_VALIDATION;
        arrayOfType[45] = DEBUG;
        arrayOfType[46] = MARK_ACTIVITY_AS_READ;
        arrayOfType[47] = GET_PLUS_ONE_PEOPLE;
        arrayOfType[48] = EDIT_ALBUM;
        arrayOfType[49] = GET_PHOTO_ORDER;
        arrayOfType[50] = DELETE_ALBUM;
        arrayOfType[51] = GET_EDITABLE_CONTENT;
        arrayOfType[52] = GET_PHOTO_SETTINGS;
        arrayOfType[53] = GET_EVENT_PHOTOS;
      }

      private Type(int paramInt1, int paramInt2)
      {
        this.value = paramInt1;
      }

      public static Type valueOf(int paramInt)
      {
        Type localType;
        switch (paramInt)
        {
        default:
          localType = null;
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
        case 6:
        case 7:
        case 8:
        case 9:
        case 10:
        case 11:
        case 12:
        case 13:
        case 14:
        case 15:
        case 16:
        case 17:
        case 18:
        case 19:
        case 20:
        case 21:
        case 22:
        case 23:
        case 24:
        case 25:
        case 26:
        case 27:
        case 28:
        case 29:
        case 30:
        case 31:
        case 32:
        case 33:
        case 34:
        case 35:
        case 36:
        case 37:
        case 38:
        case 39:
        case 40:
        case 41:
        case 42:
        case 43:
        case 44:
        case 45:
        case 46:
        case 47:
        case 48:
        case 49:
        case 50:
        case 51:
        case 52:
        case 53:
        case 54:
        }
        while (true)
        {
          return localType;
          localType = GET_ACTIVITIES;
          continue;
          localType = GET_ACTIVITY;
          continue;
          localType = GET_PEOPLE;
          continue;
          localType = GET_AVATAR;
          continue;
          localType = ACTIVITY_ACTION;
          continue;
          localType = POST;
          continue;
          localType = GET_ALBUM_LIST;
          continue;
          localType = GET_CIRCLES;
          continue;
          localType = SETTINGS;
          continue;
          localType = GET_AUDIENCE;
          continue;
          localType = SNAP_TO_PLACE;
          continue;
          localType = GET_ALBUM;
          continue;
          localType = GET_NOTIFICATIONS;
          continue;
          localType = CREATE_PLUS_ONE;
          continue;
          localType = PLACE_SEARCH;
          continue;
          localType = PLACE_SEARCH_LOG;
          continue;
          localType = GET_COALESCED_NOTIFICATIONS;
          continue;
          localType = SET_NOTIFICATIONS_LAST_READ_TIME;
          continue;
          localType = GET_UNREAD_NOTIFICATIONS_COUNT;
          continue;
          localType = GET_STREAM_PHOTOS;
          continue;
          localType = CREATE_PHOTO_COMMENT;
          continue;
          localType = PHOTO_PLUS_ONE;
          continue;
          localType = GET_PHOTOS_OF_USER;
          continue;
          localType = INTERACTIONS;
          continue;
          localType = NAME_TAG_APPROVAL;
          continue;
          localType = GET_PHOTO_CONSUMPTION_STREAM;
          continue;
          localType = DELETE_PLUS_ONE;
          continue;
          localType = ANALYTICS_LOG;
          continue;
          localType = GET_PLUS_ONE;
          continue;
          localType = OUT_OF_BOX;
          continue;
          localType = PHOTOS_HOME;
          continue;
          localType = PHOTO_ACTION;
          continue;
          localType = NOTIFICATION_SETTINGS;
          continue;
          localType = GET_PHOTOS_BY_ACTIVITY_ID;
          continue;
          localType = SET_DEFAULT_NOTIFICATION_SETTINGS;
          continue;
          localType = SET_PROFILE_PHOTO;
          continue;
          localType = REPORT_ABUSE;
          continue;
          localType = GET_ACTIVITY_ORDER;
          continue;
          localType = UPLOAD_PHOTO;
          continue;
          localType = GET_PHOTOS_BY_USER;
          continue;
          localType = GET_PHOTO;
          continue;
          localType = SEARCH;
          continue;
          localType = COUNTRIES;
          continue;
          localType = PHONE_VERIFICATION;
          continue;
          localType = PHONE_VERIFICATION_VALIDATION;
          continue;
          localType = DEBUG;
          continue;
          localType = MARK_ACTIVITY_AS_READ;
          continue;
          localType = GET_PLUS_ONE_PEOPLE;
          continue;
          localType = EDIT_ALBUM;
          continue;
          localType = GET_PHOTO_ORDER;
          continue;
          localType = DELETE_ALBUM;
          continue;
          localType = GET_EDITABLE_CONTENT;
          continue;
          localType = GET_PHOTO_SETTINGS;
          continue;
          localType = GET_EVENT_PHOTOS;
        }
      }

      public final int getNumber()
      {
        return this.value;
      }
    }
  }

  public static abstract interface RequestOrBuilder extends MessageLiteOrBuilder
  {
    @Deprecated
    public abstract long getFavaRequestId();

    public abstract ByteString getRequestBody();

    public abstract String getRequestId();

    public abstract Network.Request.Type getRequestType();

    @Deprecated
    public abstract boolean hasFavaRequestId();

    public abstract boolean hasRequestBody();

    public abstract boolean hasRequestId();

    public abstract boolean hasRequestType();
  }

  public static final class Response extends GeneratedMessageLite
    implements Network.ResponseOrBuilder
  {
    private static final Response defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private ErrorCode errorCode_;
    private List<Long> favaRequestId_;
    private boolean isMasterResponse_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private Object requestId_;
    private Network.Request.Type requestType_;
    private ByteString responseBody_;

    static
    {
      Response localResponse = new Response();
      defaultInstance = localResponse;
      localResponse.requestId_ = "";
      localResponse.requestType_ = Network.Request.Type.GET_ACTIVITIES;
      localResponse.errorCode_ = ErrorCode.SERVER_ERROR;
      localResponse.responseBody_ = ByteString.EMPTY;
      localResponse.isMasterResponse_ = false;
      localResponse.favaRequestId_ = Collections.emptyList();
    }

    private Response()
    {
    }

    private Response(Builder paramBuilder)
    {
      super();
    }

    public static Response getDefaultInstance()
    {
      return defaultInstance;
    }

    private ByteString getRequestIdBytes()
    {
      Object localObject = this.requestId_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.requestId_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static Builder newBuilder()
    {
      return Builder.access$1700();
    }

    public final Response getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final ErrorCode getErrorCode()
    {
      return this.errorCode_;
    }

    public final long getFavaRequestId(int paramInt)
    {
      return ((Long)this.favaRequestId_.get(paramInt)).longValue();
    }

    public final int getFavaRequestIdCount()
    {
      return this.favaRequestId_.size();
    }

    public final List<Long> getFavaRequestIdList()
    {
      return this.favaRequestId_;
    }

    public final boolean getIsMasterResponse()
    {
      return this.isMasterResponse_;
    }

    public final String getRequestId()
    {
      Object localObject1 = this.requestId_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.requestId_ = str;
      }
    }

    public final Network.Request.Type getRequestType()
    {
      return this.requestType_;
    }

    public final ByteString getResponseBody()
    {
      return this.responseBody_;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int i1;
      for (int i2 = i; ; i2 = i1)
      {
        return i2;
        int j = 0x1 & this.bitField0_;
        int k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeBytesSize(1, getRequestIdBytes());
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeEnumSize(2, this.requestType_.getNumber());
        if ((0x4 & this.bitField0_) == 4)
          k += CodedOutputStream.computeEnumSize(3, this.errorCode_.getNumber());
        if ((0x8 & this.bitField0_) == 8)
          k += CodedOutputStream.computeBytesSize(4, this.responseBody_);
        if ((0x10 & this.bitField0_) == 16)
          k += CodedOutputStream.computeBoolSize(5, this.isMasterResponse_);
        int m = 0;
        for (int n = 0; n < this.favaRequestId_.size(); n++)
          m += CodedOutputStream.computeRawVarint64Size(((Long)this.favaRequestId_.get(n)).longValue());
        i1 = k + m + 1 * getFavaRequestIdList().size();
        this.memoizedSerializedSize = i1;
      }
    }

    public final boolean hasErrorCode()
    {
      if ((0x4 & this.bitField0_) == 4);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasIsMasterResponse()
    {
      if ((0x10 & this.bitField0_) == 16);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasRequestId()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean hasRequestType()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasResponseBody()
    {
      if ((0x8 & this.bitField0_) == 8);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeBytes(1, getRequestIdBytes());
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeEnum(2, this.requestType_.getNumber());
      if ((0x4 & this.bitField0_) == 4)
        paramCodedOutputStream.writeEnum(3, this.errorCode_.getNumber());
      if ((0x8 & this.bitField0_) == 8)
        paramCodedOutputStream.writeBytes(4, this.responseBody_);
      if ((0x10 & this.bitField0_) == 16)
        paramCodedOutputStream.writeBool(5, this.isMasterResponse_);
      for (int i = 0; i < this.favaRequestId_.size(); i++)
        paramCodedOutputStream.writeInt64(6, ((Long)this.favaRequestId_.get(i)).longValue());
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Network.Response, Builder>
      implements Network.ResponseOrBuilder
    {
      private int bitField0_;
      private Network.Response.ErrorCode errorCode_ = Network.Response.ErrorCode.SERVER_ERROR;
      private List<Long> favaRequestId_ = Collections.emptyList();
      private boolean isMasterResponse_;
      private Object requestId_ = "";
      private Network.Request.Type requestType_ = Network.Request.Type.GET_ACTIVITIES;
      private ByteString responseBody_ = ByteString.EMPTY;

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private void ensureFavaRequestIdIsMutable()
      {
        if ((0x20 & this.bitField0_) != 32)
        {
          this.favaRequestId_ = new ArrayList(this.favaRequestId_);
          this.bitField0_ = (0x20 | this.bitField0_);
        }
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 10:
            this.bitField0_ = (0x1 | this.bitField0_);
            this.requestId_ = paramCodedInputStream.readBytes();
            break;
          case 16:
            Network.Request.Type localType = Network.Request.Type.valueOf(paramCodedInputStream.readEnum());
            if (localType == null)
              continue;
            this.bitField0_ = (0x2 | this.bitField0_);
            this.requestType_ = localType;
            break;
          case 24:
            Network.Response.ErrorCode localErrorCode = Network.Response.ErrorCode.valueOf(paramCodedInputStream.readEnum());
            if (localErrorCode == null)
              continue;
            this.bitField0_ = (0x4 | this.bitField0_);
            this.errorCode_ = localErrorCode;
            break;
          case 34:
            this.bitField0_ = (0x8 | this.bitField0_);
            this.responseBody_ = paramCodedInputStream.readBytes();
            break;
          case 40:
            this.bitField0_ = (0x10 | this.bitField0_);
            this.isMasterResponse_ = paramCodedInputStream.readBool();
            break;
          case 48:
            ensureFavaRequestIdIsMutable();
            this.favaRequestId_.add(Long.valueOf(paramCodedInputStream.readInt64()));
            break;
          case 50:
          }
          int j = paramCodedInputStream.pushLimit(paramCodedInputStream.readRawVarint32());
          while (paramCodedInputStream.getBytesUntilLimit() > 0)
            addFavaRequestId(paramCodedInputStream.readInt64());
          paramCodedInputStream.popLimit(j);
        }
      }

      public final Builder addAllFavaRequestId(Iterable<? extends Long> paramIterable)
      {
        ensureFavaRequestIdIsMutable();
        GeneratedMessageLite.Builder.addAll(paramIterable, this.favaRequestId_);
        return this;
      }

      public final Builder addFavaRequestId(long paramLong)
      {
        ensureFavaRequestIdIsMutable();
        this.favaRequestId_.add(Long.valueOf(paramLong));
        return this;
      }

      public final Network.Response build()
      {
        Network.Response localResponse = buildPartial();
        if (!localResponse.isInitialized())
          throw new UninitializedMessageException();
        return localResponse;
      }

      public final Network.Response buildPartial()
      {
        Network.Response localResponse = new Network.Response(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Network.Response.access$1902(localResponse, this.requestId_);
        if ((i & 0x2) == 2)
          k |= 2;
        Network.Response.access$2002(localResponse, this.requestType_);
        if ((i & 0x4) == 4)
          k |= 4;
        Network.Response.access$2102(localResponse, this.errorCode_);
        if ((i & 0x8) == 8)
          k |= 8;
        Network.Response.access$2202(localResponse, this.responseBody_);
        if ((i & 0x10) == 16)
          k |= 16;
        Network.Response.access$2302(localResponse, this.isMasterResponse_);
        if ((0x20 & this.bitField0_) == 32)
        {
          this.favaRequestId_ = Collections.unmodifiableList(this.favaRequestId_);
          this.bitField0_ = (0xFFFFFFDF & this.bitField0_);
        }
        Network.Response.access$2402(localResponse, this.favaRequestId_);
        Network.Response.access$2502(localResponse, k);
        return localResponse;
      }

      public final Builder clear()
      {
        super.clear();
        this.requestId_ = "";
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.requestType_ = Network.Request.Type.GET_ACTIVITIES;
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.errorCode_ = Network.Response.ErrorCode.SERVER_ERROR;
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.responseBody_ = ByteString.EMPTY;
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        this.isMasterResponse_ = false;
        this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        this.favaRequestId_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFDF & this.bitField0_);
        return this;
      }

      public final Builder clearErrorCode()
      {
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.errorCode_ = Network.Response.ErrorCode.SERVER_ERROR;
        return this;
      }

      public final Builder clearFavaRequestId()
      {
        this.favaRequestId_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFDF & this.bitField0_);
        return this;
      }

      public final Builder clearIsMasterResponse()
      {
        this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        this.isMasterResponse_ = false;
        return this;
      }

      public final Builder clearRequestId()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.requestId_ = Network.Response.getDefaultInstance().getRequestId();
        return this;
      }

      public final Builder clearRequestType()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.requestType_ = Network.Request.Type.GET_ACTIVITIES;
        return this;
      }

      public final Builder clearResponseBody()
      {
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        this.responseBody_ = Network.Response.getDefaultInstance().getResponseBody();
        return this;
      }

      public final Network.Response getDefaultInstanceForType()
      {
        return Network.Response.getDefaultInstance();
      }

      public final Network.Response.ErrorCode getErrorCode()
      {
        return this.errorCode_;
      }

      public final long getFavaRequestId(int paramInt)
      {
        return ((Long)this.favaRequestId_.get(paramInt)).longValue();
      }

      public final int getFavaRequestIdCount()
      {
        return this.favaRequestId_.size();
      }

      public final List<Long> getFavaRequestIdList()
      {
        return Collections.unmodifiableList(this.favaRequestId_);
      }

      public final boolean getIsMasterResponse()
      {
        return this.isMasterResponse_;
      }

      public final String getRequestId()
      {
        Object localObject = this.requestId_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.requestId_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final Network.Request.Type getRequestType()
      {
        return this.requestType_;
      }

      public final ByteString getResponseBody()
      {
        return this.responseBody_;
      }

      public final boolean hasErrorCode()
      {
        if ((0x4 & this.bitField0_) == 4);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasIsMasterResponse()
      {
        if ((0x10 & this.bitField0_) == 16);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasRequestId()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean hasRequestType()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasResponseBody()
      {
        if ((0x8 & this.bitField0_) == 8);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Network.Response paramResponse)
      {
        if (paramResponse == Network.Response.getDefaultInstance());
        while (true)
        {
          return this;
          if (paramResponse.hasRequestId())
            setRequestId(paramResponse.getRequestId());
          if (paramResponse.hasRequestType())
            setRequestType(paramResponse.getRequestType());
          if (paramResponse.hasErrorCode())
            setErrorCode(paramResponse.getErrorCode());
          if (paramResponse.hasResponseBody())
            setResponseBody(paramResponse.getResponseBody());
          if (paramResponse.hasIsMasterResponse())
            setIsMasterResponse(paramResponse.getIsMasterResponse());
          if (!paramResponse.favaRequestId_.isEmpty())
            if (this.favaRequestId_.isEmpty())
            {
              this.favaRequestId_ = paramResponse.favaRequestId_;
              this.bitField0_ = (0xFFFFFFDF & this.bitField0_);
            }
            else
            {
              ensureFavaRequestIdIsMutable();
              this.favaRequestId_.addAll(paramResponse.favaRequestId_);
            }
        }
      }

      public final Builder setErrorCode(Network.Response.ErrorCode paramErrorCode)
      {
        if (paramErrorCode == null)
          throw new NullPointerException();
        this.bitField0_ = (0x4 | this.bitField0_);
        this.errorCode_ = paramErrorCode;
        return this;
      }

      public final Builder setFavaRequestId(int paramInt, long paramLong)
      {
        ensureFavaRequestIdIsMutable();
        this.favaRequestId_.set(paramInt, Long.valueOf(paramLong));
        return this;
      }

      public final Builder setIsMasterResponse(boolean paramBoolean)
      {
        this.bitField0_ = (0x10 | this.bitField0_);
        this.isMasterResponse_ = paramBoolean;
        return this;
      }

      public final Builder setRequestId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x1 | this.bitField0_);
        this.requestId_ = paramString;
        return this;
      }

      public final Builder setRequestType(Network.Request.Type paramType)
      {
        if (paramType == null)
          throw new NullPointerException();
        this.bitField0_ = (0x2 | this.bitField0_);
        this.requestType_ = paramType;
        return this;
      }

      public final Builder setResponseBody(ByteString paramByteString)
      {
        if (paramByteString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x8 | this.bitField0_);
        this.responseBody_ = paramByteString;
        return this;
      }
    }

    public static enum ErrorCode
      implements Internal.EnumLite
    {
      private static Internal.EnumLiteMap<ErrorCode> internalValueMap = new Internal.EnumLiteMap()
      {
      };
      private final int value;

      static
      {
        BAD_REQUEST = new ErrorCode("BAD_REQUEST", 1, 2);
        NOT_FOUND = new ErrorCode("NOT_FOUND", 2, 3);
        INVALID_ACTION_TOKEN = new ErrorCode("INVALID_ACTION_TOKEN", 3, 4);
        NOT_AUTHENTICATED = new ErrorCode("NOT_AUTHENTICATED", 4, 5);
        PERMISSION_ERROR = new ErrorCode("PERMISSION_ERROR", 5, 6);
        NETWORK_ERROR = new ErrorCode("NETWORK_ERROR", 6, 7);
        OUT_OF_BOX_REQUIRED = new ErrorCode("OUT_OF_BOX_REQUIRED", 7, 8);
        APP_UPGRADE_REQUIRED = new ErrorCode("APP_UPGRADE_REQUIRED", 8, 9);
        HAS_PLUSONE_OPT_IN_REQUIRED = new ErrorCode("HAS_PLUSONE_OPT_IN_REQUIRED", 9, 10);
        BAD_PROFILE = new ErrorCode("BAD_PROFILE", 10, 11);
        AGE_RESTRICTED = new ErrorCode("AGE_RESTRICTED", 11, 12);
        ES_STREAM_POST_RESTRICTIONS_NOT_SUPPORTED = new ErrorCode("ES_STREAM_POST_RESTRICTIONS_NOT_SUPPORTED", 12, 13);
        ErrorCode[] arrayOfErrorCode = new ErrorCode[13];
        arrayOfErrorCode[0] = SERVER_ERROR;
        arrayOfErrorCode[1] = BAD_REQUEST;
        arrayOfErrorCode[2] = NOT_FOUND;
        arrayOfErrorCode[3] = INVALID_ACTION_TOKEN;
        arrayOfErrorCode[4] = NOT_AUTHENTICATED;
        arrayOfErrorCode[5] = PERMISSION_ERROR;
        arrayOfErrorCode[6] = NETWORK_ERROR;
        arrayOfErrorCode[7] = OUT_OF_BOX_REQUIRED;
        arrayOfErrorCode[8] = APP_UPGRADE_REQUIRED;
        arrayOfErrorCode[9] = HAS_PLUSONE_OPT_IN_REQUIRED;
        arrayOfErrorCode[10] = BAD_PROFILE;
        arrayOfErrorCode[11] = AGE_RESTRICTED;
        arrayOfErrorCode[12] = ES_STREAM_POST_RESTRICTIONS_NOT_SUPPORTED;
      }

      private ErrorCode(int paramInt1, int paramInt2)
      {
        this.value = paramInt1;
      }

      public static ErrorCode valueOf(int paramInt)
      {
        ErrorCode localErrorCode;
        switch (paramInt)
        {
        default:
          localErrorCode = null;
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
        case 6:
        case 7:
        case 8:
        case 9:
        case 10:
        case 11:
        case 12:
        case 13:
        }
        while (true)
        {
          return localErrorCode;
          localErrorCode = SERVER_ERROR;
          continue;
          localErrorCode = BAD_REQUEST;
          continue;
          localErrorCode = NOT_FOUND;
          continue;
          localErrorCode = INVALID_ACTION_TOKEN;
          continue;
          localErrorCode = NOT_AUTHENTICATED;
          continue;
          localErrorCode = PERMISSION_ERROR;
          continue;
          localErrorCode = NETWORK_ERROR;
          continue;
          localErrorCode = OUT_OF_BOX_REQUIRED;
          continue;
          localErrorCode = APP_UPGRADE_REQUIRED;
          continue;
          localErrorCode = HAS_PLUSONE_OPT_IN_REQUIRED;
          continue;
          localErrorCode = BAD_PROFILE;
          continue;
          localErrorCode = AGE_RESTRICTED;
          continue;
          localErrorCode = ES_STREAM_POST_RESTRICTIONS_NOT_SUPPORTED;
        }
      }

      public final int getNumber()
      {
        return this.value;
      }
    }
  }

  public static abstract interface ResponseOrBuilder extends MessageLiteOrBuilder
  {
    public abstract Network.Response.ErrorCode getErrorCode();

    public abstract long getFavaRequestId(int paramInt);

    public abstract int getFavaRequestIdCount();

    public abstract List<Long> getFavaRequestIdList();

    public abstract boolean getIsMasterResponse();

    public abstract String getRequestId();

    public abstract Network.Request.Type getRequestType();

    public abstract ByteString getResponseBody();

    public abstract boolean hasErrorCode();

    public abstract boolean hasIsMasterResponse();

    public abstract boolean hasRequestId();

    public abstract boolean hasRequestType();

    public abstract boolean hasResponseBody();
  }

  public static final class SearchRequest extends GeneratedMessageLite
    implements Network.SearchRequestOrBuilder
  {
    private static final SearchRequest defaultInstance;
    private static final long serialVersionUID;
    private Data.ActivityRequestData activityRequestData_;
    private int bitField0_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private Data.PeopleRequestData peopleRequestData_;
    private Data.SearchQuery searchQuery_;

    static
    {
      SearchRequest localSearchRequest = new SearchRequest();
      defaultInstance = localSearchRequest;
      localSearchRequest.searchQuery_ = Data.SearchQuery.getDefaultInstance();
      localSearchRequest.peopleRequestData_ = Data.PeopleRequestData.getDefaultInstance();
      localSearchRequest.activityRequestData_ = Data.ActivityRequestData.getDefaultInstance();
    }

    private SearchRequest()
    {
    }

    private SearchRequest(Builder paramBuilder)
    {
      super();
    }

    public static SearchRequest getDefaultInstance()
    {
      return defaultInstance;
    }

    public final Data.ActivityRequestData getActivityRequestData()
    {
      return this.activityRequestData_;
    }

    public final SearchRequest getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final Data.PeopleRequestData getPeopleRequestData()
    {
      return this.peopleRequestData_;
    }

    public final Data.SearchQuery getSearchQuery()
    {
      return this.searchQuery_;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeMessageSize(1, this.searchQuery_);
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeMessageSize(2, this.peopleRequestData_);
        if ((0x4 & this.bitField0_) == 4)
          k += CodedOutputStream.computeMessageSize(3, this.activityRequestData_);
        this.memoizedSerializedSize = k;
      }
    }

    public final boolean hasActivityRequestData()
    {
      if ((0x4 & this.bitField0_) == 4);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasPeopleRequestData()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasSearchQuery()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        if ((hasSearchQuery()) && (!getSearchQuery().isInitialized()))
        {
          this.memoizedIsInitialized = 0;
          i = 0;
        }
        else
        {
          this.memoizedIsInitialized = i;
        }
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeMessage(1, this.searchQuery_);
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeMessage(2, this.peopleRequestData_);
      if ((0x4 & this.bitField0_) == 4)
        paramCodedOutputStream.writeMessage(3, this.activityRequestData_);
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Network.SearchRequest, Builder>
      implements Network.SearchRequestOrBuilder
    {
      private Data.ActivityRequestData activityRequestData_ = Data.ActivityRequestData.getDefaultInstance();
      private int bitField0_;
      private Data.PeopleRequestData peopleRequestData_ = Data.PeopleRequestData.getDefaultInstance();
      private Data.SearchQuery searchQuery_ = Data.SearchQuery.getDefaultInstance();

      private Network.SearchRequest buildPartial()
      {
        Network.SearchRequest localSearchRequest = new Network.SearchRequest(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Network.SearchRequest.access$69102(localSearchRequest, this.searchQuery_);
        if ((i & 0x2) == 2)
          k |= 2;
        Network.SearchRequest.access$69202(localSearchRequest, this.peopleRequestData_);
        if ((i & 0x4) == 4)
          k |= 4;
        Network.SearchRequest.access$69302(localSearchRequest, this.activityRequestData_);
        Network.SearchRequest.access$69402(localSearchRequest, k);
        return localSearchRequest;
      }

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 10:
            Data.SearchQuery.Builder localBuilder2 = Data.SearchQuery.newBuilder();
            if (hasSearchQuery())
              localBuilder2.mergeFrom(getSearchQuery());
            paramCodedInputStream.readMessage(localBuilder2, paramExtensionRegistryLite);
            setSearchQuery(localBuilder2.buildPartial());
            break;
          case 18:
            Data.PeopleRequestData.Builder localBuilder1 = Data.PeopleRequestData.newBuilder();
            if (hasPeopleRequestData())
              localBuilder1.mergeFrom(getPeopleRequestData());
            paramCodedInputStream.readMessage(localBuilder1, paramExtensionRegistryLite);
            setPeopleRequestData(localBuilder1.buildPartial());
            break;
          case 26:
          }
          Data.ActivityRequestData.Builder localBuilder = Data.ActivityRequestData.newBuilder();
          if (hasActivityRequestData())
            localBuilder.mergeFrom(getActivityRequestData());
          paramCodedInputStream.readMessage(localBuilder, paramExtensionRegistryLite);
          setActivityRequestData(localBuilder.buildPartial());
        }
      }

      public final Builder clear()
      {
        super.clear();
        this.searchQuery_ = Data.SearchQuery.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.peopleRequestData_ = Data.PeopleRequestData.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.activityRequestData_ = Data.ActivityRequestData.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        return this;
      }

      public final Builder clearActivityRequestData()
      {
        this.activityRequestData_ = Data.ActivityRequestData.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        return this;
      }

      public final Builder clearPeopleRequestData()
      {
        this.peopleRequestData_ = Data.PeopleRequestData.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        return this;
      }

      public final Builder clearSearchQuery()
      {
        this.searchQuery_ = Data.SearchQuery.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        return this;
      }

      public final Data.ActivityRequestData getActivityRequestData()
      {
        return this.activityRequestData_;
      }

      public final Network.SearchRequest getDefaultInstanceForType()
      {
        return Network.SearchRequest.getDefaultInstance();
      }

      public final Data.PeopleRequestData getPeopleRequestData()
      {
        return this.peopleRequestData_;
      }

      public final Data.SearchQuery getSearchQuery()
      {
        return this.searchQuery_;
      }

      public final boolean hasActivityRequestData()
      {
        if ((0x4 & this.bitField0_) == 4);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasPeopleRequestData()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasSearchQuery()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean isInitialized()
      {
        if ((hasSearchQuery()) && (!getSearchQuery().isInitialized()));
        for (boolean bool = false; ; bool = true)
          return bool;
      }

      public final Builder mergeFrom(Network.SearchRequest paramSearchRequest)
      {
        if (paramSearchRequest == Network.SearchRequest.getDefaultInstance());
        Data.SearchQuery localSearchQuery;
        label61: Data.PeopleRequestData localPeopleRequestData;
        label121: 
        do
        {
          return this;
          if (paramSearchRequest.hasSearchQuery())
          {
            localSearchQuery = paramSearchRequest.getSearchQuery();
            if (((0x1 & this.bitField0_) != 1) || (this.searchQuery_ == Data.SearchQuery.getDefaultInstance()))
              break;
            this.searchQuery_ = Data.SearchQuery.newBuilder(this.searchQuery_).mergeFrom(localSearchQuery).buildPartial();
            this.bitField0_ = (0x1 | this.bitField0_);
          }
          if (paramSearchRequest.hasPeopleRequestData())
          {
            localPeopleRequestData = paramSearchRequest.getPeopleRequestData();
            if (((0x2 & this.bitField0_) != 2) || (this.peopleRequestData_ == Data.PeopleRequestData.getDefaultInstance()))
              break label203;
            this.peopleRequestData_ = Data.PeopleRequestData.newBuilder(this.peopleRequestData_).mergeFrom(localPeopleRequestData).buildPartial();
            this.bitField0_ = (0x2 | this.bitField0_);
          }
        }
        while (!paramSearchRequest.hasActivityRequestData());
        Data.ActivityRequestData localActivityRequestData = paramSearchRequest.getActivityRequestData();
        if (((0x4 & this.bitField0_) == 4) && (this.activityRequestData_ != Data.ActivityRequestData.getDefaultInstance()));
        for (this.activityRequestData_ = Data.ActivityRequestData.newBuilder(this.activityRequestData_).mergeFrom(localActivityRequestData).buildPartial(); ; this.activityRequestData_ = localActivityRequestData)
        {
          this.bitField0_ = (0x4 | this.bitField0_);
          break;
          this.searchQuery_ = localSearchQuery;
          break label61;
          label203: this.peopleRequestData_ = localPeopleRequestData;
          break label121;
        }
      }

      public final Builder setActivityRequestData(Data.ActivityRequestData.Builder paramBuilder)
      {
        this.activityRequestData_ = paramBuilder.build();
        this.bitField0_ = (0x4 | this.bitField0_);
        return this;
      }

      public final Builder setActivityRequestData(Data.ActivityRequestData paramActivityRequestData)
      {
        if (paramActivityRequestData == null)
          throw new NullPointerException();
        this.activityRequestData_ = paramActivityRequestData;
        this.bitField0_ = (0x4 | this.bitField0_);
        return this;
      }

      public final Builder setPeopleRequestData(Data.PeopleRequestData.Builder paramBuilder)
      {
        this.peopleRequestData_ = paramBuilder.build();
        this.bitField0_ = (0x2 | this.bitField0_);
        return this;
      }

      public final Builder setPeopleRequestData(Data.PeopleRequestData paramPeopleRequestData)
      {
        if (paramPeopleRequestData == null)
          throw new NullPointerException();
        this.peopleRequestData_ = paramPeopleRequestData;
        this.bitField0_ = (0x2 | this.bitField0_);
        return this;
      }

      public final Builder setSearchQuery(Data.SearchQuery.Builder paramBuilder)
      {
        this.searchQuery_ = paramBuilder.build();
        this.bitField0_ = (0x1 | this.bitField0_);
        return this;
      }

      public final Builder setSearchQuery(Data.SearchQuery paramSearchQuery)
      {
        if (paramSearchQuery == null)
          throw new NullPointerException();
        this.searchQuery_ = paramSearchQuery;
        this.bitField0_ = (0x1 | this.bitField0_);
        return this;
      }
    }
  }

  public static abstract interface SearchRequestOrBuilder extends MessageLiteOrBuilder
  {
    public abstract Data.ActivityRequestData getActivityRequestData();

    public abstract Data.PeopleRequestData getPeopleRequestData();

    public abstract Data.SearchQuery getSearchQuery();

    public abstract boolean hasActivityRequestData();

    public abstract boolean hasPeopleRequestData();

    public abstract boolean hasSearchQuery();
  }

  public static final class SearchResponse extends GeneratedMessageLite
    implements Network.SearchResponseOrBuilder
  {
    private static final SearchResponse defaultInstance;
    private static final long serialVersionUID;
    private Data.ActivityResults activityResults_;
    private int bitField0_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private Data.PeopleResults peopleResults_;

    static
    {
      SearchResponse localSearchResponse = new SearchResponse();
      defaultInstance = localSearchResponse;
      localSearchResponse.peopleResults_ = Data.PeopleResults.getDefaultInstance();
      localSearchResponse.activityResults_ = Data.ActivityResults.getDefaultInstance();
    }

    private SearchResponse()
    {
    }

    private SearchResponse(Builder paramBuilder)
    {
      super();
    }

    public static SearchResponse getDefaultInstance()
    {
      return defaultInstance;
    }

    public final Data.ActivityResults getActivityResults()
    {
      return this.activityResults_;
    }

    public final SearchResponse getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final Data.PeopleResults getPeopleResults()
    {
      return this.peopleResults_;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeMessageSize(1, this.peopleResults_);
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeMessageSize(2, this.activityResults_);
        this.memoizedSerializedSize = k;
      }
    }

    public final boolean hasActivityResults()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasPeopleResults()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        if ((hasActivityResults()) && (!getActivityResults().isInitialized()))
        {
          this.memoizedIsInitialized = 0;
          i = 0;
        }
        else
        {
          this.memoizedIsInitialized = i;
        }
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeMessage(1, this.peopleResults_);
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeMessage(2, this.activityResults_);
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Network.SearchResponse, Builder>
      implements Network.SearchResponseOrBuilder
    {
      private Data.ActivityResults activityResults_ = Data.ActivityResults.getDefaultInstance();
      private int bitField0_;
      private Data.PeopleResults peopleResults_ = Data.PeopleResults.getDefaultInstance();

      private Network.SearchResponse buildPartial()
      {
        Network.SearchResponse localSearchResponse = new Network.SearchResponse(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Network.SearchResponse.access$69802(localSearchResponse, this.peopleResults_);
        if ((i & 0x2) == 2)
          k |= 2;
        Network.SearchResponse.access$69902(localSearchResponse, this.activityResults_);
        Network.SearchResponse.access$70002(localSearchResponse, k);
        return localSearchResponse;
      }

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 10:
            Data.PeopleResults.Builder localBuilder1 = Data.PeopleResults.newBuilder();
            if (hasPeopleResults())
              localBuilder1.mergeFrom(getPeopleResults());
            paramCodedInputStream.readMessage(localBuilder1, paramExtensionRegistryLite);
            setPeopleResults(localBuilder1.buildPartial());
            break;
          case 18:
          }
          Data.ActivityResults.Builder localBuilder = Data.ActivityResults.newBuilder();
          if (hasActivityResults())
            localBuilder.mergeFrom(getActivityResults());
          paramCodedInputStream.readMessage(localBuilder, paramExtensionRegistryLite);
          setActivityResults(localBuilder.buildPartial());
        }
      }

      public final Builder clear()
      {
        super.clear();
        this.peopleResults_ = Data.PeopleResults.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.activityResults_ = Data.ActivityResults.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        return this;
      }

      public final Builder clearActivityResults()
      {
        this.activityResults_ = Data.ActivityResults.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        return this;
      }

      public final Builder clearPeopleResults()
      {
        this.peopleResults_ = Data.PeopleResults.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        return this;
      }

      public final Data.ActivityResults getActivityResults()
      {
        return this.activityResults_;
      }

      public final Network.SearchResponse getDefaultInstanceForType()
      {
        return Network.SearchResponse.getDefaultInstance();
      }

      public final Data.PeopleResults getPeopleResults()
      {
        return this.peopleResults_;
      }

      public final boolean hasActivityResults()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasPeopleResults()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean isInitialized()
      {
        if ((hasActivityResults()) && (!getActivityResults().isInitialized()));
        for (boolean bool = false; ; bool = true)
          return bool;
      }

      public final Builder mergeFrom(Network.SearchResponse paramSearchResponse)
      {
        if (paramSearchResponse == Network.SearchResponse.getDefaultInstance());
        Data.PeopleResults localPeopleResults;
        label59: 
        do
        {
          return this;
          if (paramSearchResponse.hasPeopleResults())
          {
            localPeopleResults = paramSearchResponse.getPeopleResults();
            if (((0x1 & this.bitField0_) != 1) || (this.peopleResults_ == Data.PeopleResults.getDefaultInstance()))
              break;
            this.peopleResults_ = Data.PeopleResults.newBuilder(this.peopleResults_).mergeFrom(localPeopleResults).buildPartial();
            this.bitField0_ = (0x1 | this.bitField0_);
          }
        }
        while (!paramSearchResponse.hasActivityResults());
        Data.ActivityResults localActivityResults = paramSearchResponse.getActivityResults();
        if (((0x2 & this.bitField0_) == 2) && (this.activityResults_ != Data.ActivityResults.getDefaultInstance()));
        for (this.activityResults_ = Data.ActivityResults.newBuilder(this.activityResults_).mergeFrom(localActivityResults).buildPartial(); ; this.activityResults_ = localActivityResults)
        {
          this.bitField0_ = (0x2 | this.bitField0_);
          break;
          this.peopleResults_ = localPeopleResults;
          break label59;
        }
      }

      public final Builder setActivityResults(Data.ActivityResults.Builder paramBuilder)
      {
        this.activityResults_ = paramBuilder.build();
        this.bitField0_ = (0x2 | this.bitField0_);
        return this;
      }

      public final Builder setActivityResults(Data.ActivityResults paramActivityResults)
      {
        if (paramActivityResults == null)
          throw new NullPointerException();
        this.activityResults_ = paramActivityResults;
        this.bitField0_ = (0x2 | this.bitField0_);
        return this;
      }

      public final Builder setPeopleResults(Data.PeopleResults.Builder paramBuilder)
      {
        this.peopleResults_ = paramBuilder.build();
        this.bitField0_ = (0x1 | this.bitField0_);
        return this;
      }

      public final Builder setPeopleResults(Data.PeopleResults paramPeopleResults)
      {
        if (paramPeopleResults == null)
          throw new NullPointerException();
        this.peopleResults_ = paramPeopleResults;
        this.bitField0_ = (0x1 | this.bitField0_);
        return this;
      }
    }
  }

  public static abstract interface SearchResponseOrBuilder extends MessageLiteOrBuilder
  {
    public abstract Data.ActivityResults getActivityResults();

    public abstract Data.PeopleResults getPeopleResults();

    public abstract boolean hasActivityResults();

    public abstract boolean hasPeopleResults();
  }

  public static final class SetDefaultNotificationSettingsRequest extends GeneratedMessageLite
    implements Network.SetDefaultNotificationSettingsRequestOrBuilder
  {
    private static final SetDefaultNotificationSettingsRequest defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private Data.NotificationChannel channelToEnable_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private long userGaiaId_;

    static
    {
      SetDefaultNotificationSettingsRequest localSetDefaultNotificationSettingsRequest = new SetDefaultNotificationSettingsRequest();
      defaultInstance = localSetDefaultNotificationSettingsRequest;
      localSetDefaultNotificationSettingsRequest.userGaiaId_ = 0L;
      localSetDefaultNotificationSettingsRequest.channelToEnable_ = Data.NotificationChannel.IPHONE_PUSH;
    }

    private SetDefaultNotificationSettingsRequest()
    {
    }

    private SetDefaultNotificationSettingsRequest(Builder paramBuilder)
    {
      super();
    }

    public static SetDefaultNotificationSettingsRequest getDefaultInstance()
    {
      return defaultInstance;
    }

    public final Data.NotificationChannel getChannelToEnable()
    {
      return this.channelToEnable_;
    }

    public final SetDefaultNotificationSettingsRequest getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeInt64Size(1, this.userGaiaId_);
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeEnumSize(2, this.channelToEnable_.getNumber());
        this.memoizedSerializedSize = k;
      }
    }

    @Deprecated
    public final long getUserGaiaId()
    {
      return this.userGaiaId_;
    }

    public final boolean hasChannelToEnable()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    @Deprecated
    public final boolean hasUserGaiaId()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeInt64(1, this.userGaiaId_);
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeEnum(2, this.channelToEnable_.getNumber());
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Network.SetDefaultNotificationSettingsRequest, Builder>
      implements Network.SetDefaultNotificationSettingsRequestOrBuilder
    {
      private int bitField0_;
      private Data.NotificationChannel channelToEnable_ = Data.NotificationChannel.IPHONE_PUSH;
      private long userGaiaId_;

      private Network.SetDefaultNotificationSettingsRequest buildPartial()
      {
        Network.SetDefaultNotificationSettingsRequest localSetDefaultNotificationSettingsRequest = new Network.SetDefaultNotificationSettingsRequest(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Network.SetDefaultNotificationSettingsRequest.access$61202(localSetDefaultNotificationSettingsRequest, this.userGaiaId_);
        if ((i & 0x2) == 2)
          k |= 2;
        Network.SetDefaultNotificationSettingsRequest.access$61302(localSetDefaultNotificationSettingsRequest, this.channelToEnable_);
        Network.SetDefaultNotificationSettingsRequest.access$61402(localSetDefaultNotificationSettingsRequest, k);
        return localSetDefaultNotificationSettingsRequest;
      }

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 8:
            this.bitField0_ = (0x1 | this.bitField0_);
            this.userGaiaId_ = paramCodedInputStream.readInt64();
            break;
          case 16:
          }
          Data.NotificationChannel localNotificationChannel = Data.NotificationChannel.valueOf(paramCodedInputStream.readEnum());
          if (localNotificationChannel != null)
          {
            this.bitField0_ = (0x2 | this.bitField0_);
            this.channelToEnable_ = localNotificationChannel;
          }
        }
      }

      public final Builder clear()
      {
        super.clear();
        this.userGaiaId_ = 0L;
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.channelToEnable_ = Data.NotificationChannel.IPHONE_PUSH;
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        return this;
      }

      public final Builder clearChannelToEnable()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.channelToEnable_ = Data.NotificationChannel.IPHONE_PUSH;
        return this;
      }

      @Deprecated
      public final Builder clearUserGaiaId()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.userGaiaId_ = 0L;
        return this;
      }

      public final Data.NotificationChannel getChannelToEnable()
      {
        return this.channelToEnable_;
      }

      public final Network.SetDefaultNotificationSettingsRequest getDefaultInstanceForType()
      {
        return Network.SetDefaultNotificationSettingsRequest.getDefaultInstance();
      }

      @Deprecated
      public final long getUserGaiaId()
      {
        return this.userGaiaId_;
      }

      public final boolean hasChannelToEnable()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      @Deprecated
      public final boolean hasUserGaiaId()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Network.SetDefaultNotificationSettingsRequest paramSetDefaultNotificationSettingsRequest)
      {
        if (paramSetDefaultNotificationSettingsRequest == Network.SetDefaultNotificationSettingsRequest.getDefaultInstance());
        while (true)
        {
          return this;
          if (paramSetDefaultNotificationSettingsRequest.hasUserGaiaId())
            setUserGaiaId(paramSetDefaultNotificationSettingsRequest.getUserGaiaId());
          if (paramSetDefaultNotificationSettingsRequest.hasChannelToEnable())
            setChannelToEnable(paramSetDefaultNotificationSettingsRequest.getChannelToEnable());
        }
      }

      public final Builder setChannelToEnable(Data.NotificationChannel paramNotificationChannel)
      {
        if (paramNotificationChannel == null)
          throw new NullPointerException();
        this.bitField0_ = (0x2 | this.bitField0_);
        this.channelToEnable_ = paramNotificationChannel;
        return this;
      }

      @Deprecated
      public final Builder setUserGaiaId(long paramLong)
      {
        this.bitField0_ = (0x1 | this.bitField0_);
        this.userGaiaId_ = paramLong;
        return this;
      }
    }
  }

  public static abstract interface SetDefaultNotificationSettingsRequestOrBuilder extends MessageLiteOrBuilder
  {
    public abstract Data.NotificationChannel getChannelToEnable();

    @Deprecated
    public abstract long getUserGaiaId();

    public abstract boolean hasChannelToEnable();

    @Deprecated
    public abstract boolean hasUserGaiaId();
  }

  public static final class SetDefaultNotificationSettingsResponse extends GeneratedMessageLite
    implements Network.SetDefaultNotificationSettingsResponseOrBuilder
  {
    private static final SetDefaultNotificationSettingsResponse defaultInstance = new SetDefaultNotificationSettingsResponse();
    private static final long serialVersionUID;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;

    private SetDefaultNotificationSettingsResponse()
    {
    }

    private SetDefaultNotificationSettingsResponse(Builder paramBuilder)
    {
      super();
    }

    public static SetDefaultNotificationSettingsResponse getDefaultInstance()
    {
      return defaultInstance;
    }

    public final SetDefaultNotificationSettingsResponse getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      while (true)
      {
        return i;
        this.memoizedSerializedSize = 0;
        i = 0;
      }
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Network.SetDefaultNotificationSettingsResponse, Builder>
      implements Network.SetDefaultNotificationSettingsResponseOrBuilder
    {
      private Network.SetDefaultNotificationSettingsResponse buildPartial()
      {
        return new Network.SetDefaultNotificationSettingsResponse(this, (byte)0);
      }

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        int i;
        do
        {
          i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
          case 0:
          }
        }
        while (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i));
        return this;
      }

      public final Builder clear()
      {
        super.clear();
        return this;
      }

      public final Network.SetDefaultNotificationSettingsResponse getDefaultInstanceForType()
      {
        return Network.SetDefaultNotificationSettingsResponse.getDefaultInstance();
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Network.SetDefaultNotificationSettingsResponse paramSetDefaultNotificationSettingsResponse)
      {
        if (paramSetDefaultNotificationSettingsResponse == Network.SetDefaultNotificationSettingsResponse.getDefaultInstance());
        return this;
      }
    }
  }

  public static abstract interface SetDefaultNotificationSettingsResponseOrBuilder extends MessageLiteOrBuilder
  {
  }

  public static final class SetNotificationsLastReadTimeRequest extends GeneratedMessageLite
    implements Network.SetNotificationsLastReadTimeRequestOrBuilder
  {
    private static final SetNotificationsLastReadTimeRequest defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private double lastReadTime_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;

    static
    {
      SetNotificationsLastReadTimeRequest localSetNotificationsLastReadTimeRequest = new SetNotificationsLastReadTimeRequest();
      defaultInstance = localSetNotificationsLastReadTimeRequest;
      localSetNotificationsLastReadTimeRequest.lastReadTime_ = 0.0D;
    }

    private SetNotificationsLastReadTimeRequest()
    {
    }

    private SetNotificationsLastReadTimeRequest(Builder paramBuilder)
    {
      super();
    }

    public static SetNotificationsLastReadTimeRequest getDefaultInstance()
    {
      return defaultInstance;
    }

    public final SetNotificationsLastReadTimeRequest getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final double getLastReadTime()
    {
      return this.lastReadTime_;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeDoubleSize(1, this.lastReadTime_);
        this.memoizedSerializedSize = k;
      }
    }

    public final boolean hasLastReadTime()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeDouble(1, this.lastReadTime_);
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Network.SetNotificationsLastReadTimeRequest, Builder>
      implements Network.SetNotificationsLastReadTimeRequestOrBuilder
    {
      private int bitField0_;
      private double lastReadTime_;

      private Network.SetNotificationsLastReadTimeRequest buildPartial()
      {
        Network.SetNotificationsLastReadTimeRequest localSetNotificationsLastReadTimeRequest = new Network.SetNotificationsLastReadTimeRequest(this, (byte)0);
        int i = 0x1 & this.bitField0_;
        int j = 0;
        if (i == 1)
          j = 1;
        Network.SetNotificationsLastReadTimeRequest.access$47302(localSetNotificationsLastReadTimeRequest, this.lastReadTime_);
        Network.SetNotificationsLastReadTimeRequest.access$47402(localSetNotificationsLastReadTimeRequest, j);
        return localSetNotificationsLastReadTimeRequest;
      }

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 9:
          }
          this.bitField0_ = (0x1 | this.bitField0_);
          this.lastReadTime_ = paramCodedInputStream.readDouble();
        }
      }

      public final Builder clear()
      {
        super.clear();
        this.lastReadTime_ = 0.0D;
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        return this;
      }

      public final Builder clearLastReadTime()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.lastReadTime_ = 0.0D;
        return this;
      }

      public final Network.SetNotificationsLastReadTimeRequest getDefaultInstanceForType()
      {
        return Network.SetNotificationsLastReadTimeRequest.getDefaultInstance();
      }

      public final double getLastReadTime()
      {
        return this.lastReadTime_;
      }

      public final boolean hasLastReadTime()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Network.SetNotificationsLastReadTimeRequest paramSetNotificationsLastReadTimeRequest)
      {
        if (paramSetNotificationsLastReadTimeRequest == Network.SetNotificationsLastReadTimeRequest.getDefaultInstance());
        while (true)
        {
          return this;
          if (paramSetNotificationsLastReadTimeRequest.hasLastReadTime())
            setLastReadTime(paramSetNotificationsLastReadTimeRequest.getLastReadTime());
        }
      }

      public final Builder setLastReadTime(double paramDouble)
      {
        this.bitField0_ = (0x1 | this.bitField0_);
        this.lastReadTime_ = paramDouble;
        return this;
      }
    }
  }

  public static abstract interface SetNotificationsLastReadTimeRequestOrBuilder extends MessageLiteOrBuilder
  {
    public abstract double getLastReadTime();

    public abstract boolean hasLastReadTime();
  }

  public static final class SetNotificationsLastReadTimeResponse extends GeneratedMessageLite
    implements Network.SetNotificationsLastReadTimeResponseOrBuilder
  {
    private static final SetNotificationsLastReadTimeResponse defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private double lastReadTime_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;

    static
    {
      SetNotificationsLastReadTimeResponse localSetNotificationsLastReadTimeResponse = new SetNotificationsLastReadTimeResponse();
      defaultInstance = localSetNotificationsLastReadTimeResponse;
      localSetNotificationsLastReadTimeResponse.lastReadTime_ = 0.0D;
    }

    private SetNotificationsLastReadTimeResponse()
    {
    }

    private SetNotificationsLastReadTimeResponse(Builder paramBuilder)
    {
      super();
    }

    public static SetNotificationsLastReadTimeResponse getDefaultInstance()
    {
      return defaultInstance;
    }

    public final SetNotificationsLastReadTimeResponse getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final double getLastReadTime()
    {
      return this.lastReadTime_;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeDoubleSize(1, this.lastReadTime_);
        this.memoizedSerializedSize = k;
      }
    }

    public final boolean hasLastReadTime()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeDouble(1, this.lastReadTime_);
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Network.SetNotificationsLastReadTimeResponse, Builder>
      implements Network.SetNotificationsLastReadTimeResponseOrBuilder
    {
      private int bitField0_;
      private double lastReadTime_;

      private Network.SetNotificationsLastReadTimeResponse buildPartial()
      {
        Network.SetNotificationsLastReadTimeResponse localSetNotificationsLastReadTimeResponse = new Network.SetNotificationsLastReadTimeResponse(this, (byte)0);
        int i = 0x1 & this.bitField0_;
        int j = 0;
        if (i == 1)
          j = 1;
        Network.SetNotificationsLastReadTimeResponse.access$47802(localSetNotificationsLastReadTimeResponse, this.lastReadTime_);
        Network.SetNotificationsLastReadTimeResponse.access$47902(localSetNotificationsLastReadTimeResponse, j);
        return localSetNotificationsLastReadTimeResponse;
      }

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 9:
          }
          this.bitField0_ = (0x1 | this.bitField0_);
          this.lastReadTime_ = paramCodedInputStream.readDouble();
        }
      }

      public final Builder clear()
      {
        super.clear();
        this.lastReadTime_ = 0.0D;
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        return this;
      }

      public final Builder clearLastReadTime()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.lastReadTime_ = 0.0D;
        return this;
      }

      public final Network.SetNotificationsLastReadTimeResponse getDefaultInstanceForType()
      {
        return Network.SetNotificationsLastReadTimeResponse.getDefaultInstance();
      }

      public final double getLastReadTime()
      {
        return this.lastReadTime_;
      }

      public final boolean hasLastReadTime()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Network.SetNotificationsLastReadTimeResponse paramSetNotificationsLastReadTimeResponse)
      {
        if (paramSetNotificationsLastReadTimeResponse == Network.SetNotificationsLastReadTimeResponse.getDefaultInstance());
        while (true)
        {
          return this;
          if (paramSetNotificationsLastReadTimeResponse.hasLastReadTime())
            setLastReadTime(paramSetNotificationsLastReadTimeResponse.getLastReadTime());
        }
      }

      public final Builder setLastReadTime(double paramDouble)
      {
        this.bitField0_ = (0x1 | this.bitField0_);
        this.lastReadTime_ = paramDouble;
        return this;
      }
    }
  }

  public static abstract interface SetNotificationsLastReadTimeResponseOrBuilder extends MessageLiteOrBuilder
  {
    public abstract double getLastReadTime();

    public abstract boolean hasLastReadTime();
  }

  public static final class SetProfilePhotoRequest extends GeneratedMessageLite
    implements Network.SetProfilePhotoRequestOrBuilder
  {
    private static final SetProfilePhotoRequest defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private Network.MediaReference mediaRef_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private Object photo_;

    static
    {
      SetProfilePhotoRequest localSetProfilePhotoRequest = new SetProfilePhotoRequest();
      defaultInstance = localSetProfilePhotoRequest;
      localSetProfilePhotoRequest.photo_ = "";
      localSetProfilePhotoRequest.mediaRef_ = Network.MediaReference.getDefaultInstance();
    }

    private SetProfilePhotoRequest()
    {
    }

    private SetProfilePhotoRequest(Builder paramBuilder)
    {
      super();
    }

    public static SetProfilePhotoRequest getDefaultInstance()
    {
      return defaultInstance;
    }

    private ByteString getPhotoBytes()
    {
      Object localObject = this.photo_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.photo_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public final SetProfilePhotoRequest getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final Network.MediaReference getMediaRef()
    {
      return this.mediaRef_;
    }

    @Deprecated
    public final String getPhoto()
    {
      Object localObject1 = this.photo_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.photo_ = str;
      }
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeBytesSize(1, getPhotoBytes());
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeMessageSize(2, this.mediaRef_);
        this.memoizedSerializedSize = k;
      }
    }

    public final boolean hasMediaRef()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    @Deprecated
    public final boolean hasPhoto()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeBytes(1, getPhotoBytes());
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeMessage(2, this.mediaRef_);
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Network.SetProfilePhotoRequest, Builder>
      implements Network.SetProfilePhotoRequestOrBuilder
    {
      private int bitField0_;
      private Network.MediaReference mediaRef_ = Network.MediaReference.getDefaultInstance();
      private Object photo_ = "";

      private Network.SetProfilePhotoRequest buildPartial()
      {
        Network.SetProfilePhotoRequest localSetProfilePhotoRequest = new Network.SetProfilePhotoRequest(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Network.SetProfilePhotoRequest.access$62102(localSetProfilePhotoRequest, this.photo_);
        if ((i & 0x2) == 2)
          k |= 2;
        Network.SetProfilePhotoRequest.access$62202(localSetProfilePhotoRequest, this.mediaRef_);
        Network.SetProfilePhotoRequest.access$62302(localSetProfilePhotoRequest, k);
        return localSetProfilePhotoRequest;
      }

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 10:
            this.bitField0_ = (0x1 | this.bitField0_);
            this.photo_ = paramCodedInputStream.readBytes();
            break;
          case 18:
          }
          Network.MediaReference.Builder localBuilder = Network.MediaReference.newBuilder();
          if (hasMediaRef())
            localBuilder.mergeFrom(getMediaRef());
          paramCodedInputStream.readMessage(localBuilder, paramExtensionRegistryLite);
          setMediaRef(localBuilder.buildPartial());
        }
      }

      public final Builder clear()
      {
        super.clear();
        this.photo_ = "";
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.mediaRef_ = Network.MediaReference.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        return this;
      }

      public final Builder clearMediaRef()
      {
        this.mediaRef_ = Network.MediaReference.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        return this;
      }

      @Deprecated
      public final Builder clearPhoto()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.photo_ = Network.SetProfilePhotoRequest.getDefaultInstance().getPhoto();
        return this;
      }

      public final Network.SetProfilePhotoRequest getDefaultInstanceForType()
      {
        return Network.SetProfilePhotoRequest.getDefaultInstance();
      }

      public final Network.MediaReference getMediaRef()
      {
        return this.mediaRef_;
      }

      @Deprecated
      public final String getPhoto()
      {
        Object localObject = this.photo_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.photo_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final boolean hasMediaRef()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      @Deprecated
      public final boolean hasPhoto()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Network.SetProfilePhotoRequest paramSetProfilePhotoRequest)
      {
        if (paramSetProfilePhotoRequest == Network.SetProfilePhotoRequest.getDefaultInstance());
        do
        {
          return this;
          if (paramSetProfilePhotoRequest.hasPhoto())
            setPhoto(paramSetProfilePhotoRequest.getPhoto());
        }
        while (!paramSetProfilePhotoRequest.hasMediaRef());
        Network.MediaReference localMediaReference = paramSetProfilePhotoRequest.getMediaRef();
        if (((0x2 & this.bitField0_) == 2) && (this.mediaRef_ != Network.MediaReference.getDefaultInstance()));
        for (this.mediaRef_ = Network.MediaReference.newBuilder(this.mediaRef_).mergeFrom(localMediaReference).buildPartial(); ; this.mediaRef_ = localMediaReference)
        {
          this.bitField0_ = (0x2 | this.bitField0_);
          break;
        }
      }

      public final Builder setMediaRef(Network.MediaReference.Builder paramBuilder)
      {
        this.mediaRef_ = paramBuilder.build();
        this.bitField0_ = (0x2 | this.bitField0_);
        return this;
      }

      public final Builder setMediaRef(Network.MediaReference paramMediaReference)
      {
        if (paramMediaReference == null)
          throw new NullPointerException();
        this.mediaRef_ = paramMediaReference;
        this.bitField0_ = (0x2 | this.bitField0_);
        return this;
      }

      @Deprecated
      public final Builder setPhoto(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x1 | this.bitField0_);
        this.photo_ = paramString;
        return this;
      }
    }
  }

  public static abstract interface SetProfilePhotoRequestOrBuilder extends MessageLiteOrBuilder
  {
    public abstract Network.MediaReference getMediaRef();

    @Deprecated
    public abstract String getPhoto();

    public abstract boolean hasMediaRef();

    @Deprecated
    public abstract boolean hasPhoto();
  }

  public static final class SetProfilePhotoResponse extends GeneratedMessageLite
    implements Network.SetProfilePhotoResponseOrBuilder
  {
    private static final SetProfilePhotoResponse defaultInstance;
    private static final long serialVersionUID;
    private long albumId_;
    private int bitField0_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;

    static
    {
      SetProfilePhotoResponse localSetProfilePhotoResponse = new SetProfilePhotoResponse();
      defaultInstance = localSetProfilePhotoResponse;
      localSetProfilePhotoResponse.albumId_ = 0L;
    }

    private SetProfilePhotoResponse()
    {
    }

    private SetProfilePhotoResponse(Builder paramBuilder)
    {
      super();
    }

    public static SetProfilePhotoResponse getDefaultInstance()
    {
      return defaultInstance;
    }

    public final long getAlbumId()
    {
      return this.albumId_;
    }

    public final SetProfilePhotoResponse getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeInt64Size(1, this.albumId_);
        this.memoizedSerializedSize = k;
      }
    }

    public final boolean hasAlbumId()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeInt64(1, this.albumId_);
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Network.SetProfilePhotoResponse, Builder>
      implements Network.SetProfilePhotoResponseOrBuilder
    {
      private long albumId_;
      private int bitField0_;

      private Network.SetProfilePhotoResponse buildPartial()
      {
        Network.SetProfilePhotoResponse localSetProfilePhotoResponse = new Network.SetProfilePhotoResponse(this, (byte)0);
        int i = 0x1 & this.bitField0_;
        int j = 0;
        if (i == 1)
          j = 1;
        Network.SetProfilePhotoResponse.access$62702(localSetProfilePhotoResponse, this.albumId_);
        Network.SetProfilePhotoResponse.access$62802(localSetProfilePhotoResponse, j);
        return localSetProfilePhotoResponse;
      }

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 8:
          }
          this.bitField0_ = (0x1 | this.bitField0_);
          this.albumId_ = paramCodedInputStream.readInt64();
        }
      }

      public final Builder clear()
      {
        super.clear();
        this.albumId_ = 0L;
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        return this;
      }

      public final Builder clearAlbumId()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.albumId_ = 0L;
        return this;
      }

      public final long getAlbumId()
      {
        return this.albumId_;
      }

      public final Network.SetProfilePhotoResponse getDefaultInstanceForType()
      {
        return Network.SetProfilePhotoResponse.getDefaultInstance();
      }

      public final boolean hasAlbumId()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Network.SetProfilePhotoResponse paramSetProfilePhotoResponse)
      {
        if (paramSetProfilePhotoResponse == Network.SetProfilePhotoResponse.getDefaultInstance());
        while (true)
        {
          return this;
          if (paramSetProfilePhotoResponse.hasAlbumId())
            setAlbumId(paramSetProfilePhotoResponse.getAlbumId());
        }
      }

      public final Builder setAlbumId(long paramLong)
      {
        this.bitField0_ = (0x1 | this.bitField0_);
        this.albumId_ = paramLong;
        return this;
      }
    }
  }

  public static abstract interface SetProfilePhotoResponseOrBuilder extends MessageLiteOrBuilder
  {
    public abstract long getAlbumId();

    public abstract boolean hasAlbumId();
  }

  public static final class SettingsRequest extends GeneratedMessageLite
    implements Network.SettingsRequestOrBuilder
  {
    private static final SettingsRequest defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private Data.UserPreferences userPreferences_;

    static
    {
      SettingsRequest localSettingsRequest = new SettingsRequest();
      defaultInstance = localSettingsRequest;
      localSettingsRequest.userPreferences_ = Data.UserPreferences.getDefaultInstance();
    }

    private SettingsRequest()
    {
    }

    private SettingsRequest(Builder paramBuilder)
    {
      super();
    }

    public static SettingsRequest getDefaultInstance()
    {
      return defaultInstance;
    }

    public final SettingsRequest getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeMessageSize(1, this.userPreferences_);
        this.memoizedSerializedSize = k;
      }
    }

    public final Data.UserPreferences getUserPreferences()
    {
      return this.userPreferences_;
    }

    public final boolean hasUserPreferences()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeMessage(1, this.userPreferences_);
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Network.SettingsRequest, Builder>
      implements Network.SettingsRequestOrBuilder
    {
      private int bitField0_;
      private Data.UserPreferences userPreferences_ = Data.UserPreferences.getDefaultInstance();

      private Network.SettingsRequest buildPartial()
      {
        Network.SettingsRequest localSettingsRequest = new Network.SettingsRequest(this, (byte)0);
        int i = 0x1 & this.bitField0_;
        int j = 0;
        if (i == 1)
          j = 1;
        Network.SettingsRequest.access$25202(localSettingsRequest, this.userPreferences_);
        Network.SettingsRequest.access$25302(localSettingsRequest, j);
        return localSettingsRequest;
      }

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 10:
          }
          Data.UserPreferences.Builder localBuilder = Data.UserPreferences.newBuilder();
          if (hasUserPreferences())
            localBuilder.mergeFrom(getUserPreferences());
          paramCodedInputStream.readMessage(localBuilder, paramExtensionRegistryLite);
          setUserPreferences(localBuilder.buildPartial());
        }
      }

      public final Builder clear()
      {
        super.clear();
        this.userPreferences_ = Data.UserPreferences.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        return this;
      }

      public final Builder clearUserPreferences()
      {
        this.userPreferences_ = Data.UserPreferences.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        return this;
      }

      public final Network.SettingsRequest getDefaultInstanceForType()
      {
        return Network.SettingsRequest.getDefaultInstance();
      }

      public final Data.UserPreferences getUserPreferences()
      {
        return this.userPreferences_;
      }

      public final boolean hasUserPreferences()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Network.SettingsRequest paramSettingsRequest)
      {
        if (paramSettingsRequest == Network.SettingsRequest.getDefaultInstance());
        while (!paramSettingsRequest.hasUserPreferences())
          return this;
        Data.UserPreferences localUserPreferences = paramSettingsRequest.getUserPreferences();
        if (((0x1 & this.bitField0_) == 1) && (this.userPreferences_ != Data.UserPreferences.getDefaultInstance()));
        for (this.userPreferences_ = Data.UserPreferences.newBuilder(this.userPreferences_).mergeFrom(localUserPreferences).buildPartial(); ; this.userPreferences_ = localUserPreferences)
        {
          this.bitField0_ = (0x1 | this.bitField0_);
          break;
        }
      }

      public final Builder setUserPreferences(Data.UserPreferences.Builder paramBuilder)
      {
        this.userPreferences_ = paramBuilder.build();
        this.bitField0_ = (0x1 | this.bitField0_);
        return this;
      }

      public final Builder setUserPreferences(Data.UserPreferences paramUserPreferences)
      {
        if (paramUserPreferences == null)
          throw new NullPointerException();
        this.userPreferences_ = paramUserPreferences;
        this.bitField0_ = (0x1 | this.bitField0_);
        return this;
      }
    }
  }

  public static abstract interface SettingsRequestOrBuilder extends MessageLiteOrBuilder
  {
    public abstract Data.UserPreferences getUserPreferences();

    public abstract boolean hasUserPreferences();
  }

  public static final class SettingsResponse extends GeneratedMessageLite
    implements Network.SettingsResponseOrBuilder
  {
    private static final SettingsResponse defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private boolean isChild_;
    private int latestAppVersion_;
    private int mandatoryAppVersion_;
    private Data.Person me_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private Data.UserPreferences userPreferences_;

    static
    {
      SettingsResponse localSettingsResponse = new SettingsResponse();
      defaultInstance = localSettingsResponse;
      localSettingsResponse.me_ = Data.Person.getDefaultInstance();
      localSettingsResponse.latestAppVersion_ = 0;
      localSettingsResponse.mandatoryAppVersion_ = 0;
      localSettingsResponse.userPreferences_ = Data.UserPreferences.getDefaultInstance();
      localSettingsResponse.isChild_ = false;
    }

    private SettingsResponse()
    {
    }

    private SettingsResponse(Builder paramBuilder)
    {
      super();
    }

    public static SettingsResponse getDefaultInstance()
    {
      return defaultInstance;
    }

    public final SettingsResponse getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final boolean getIsChild()
    {
      return this.isChild_;
    }

    public final int getLatestAppVersion()
    {
      return this.latestAppVersion_;
    }

    public final int getMandatoryAppVersion()
    {
      return this.mandatoryAppVersion_;
    }

    public final Data.Person getMe()
    {
      return this.me_;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeMessageSize(1, this.me_);
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeInt32Size(2, this.latestAppVersion_);
        if ((0x4 & this.bitField0_) == 4)
          k += CodedOutputStream.computeInt32Size(3, this.mandatoryAppVersion_);
        if ((0x8 & this.bitField0_) == 8)
          k += CodedOutputStream.computeMessageSize(4, this.userPreferences_);
        if ((0x10 & this.bitField0_) == 16)
          k += CodedOutputStream.computeBoolSize(5, this.isChild_);
        this.memoizedSerializedSize = k;
      }
    }

    public final Data.UserPreferences getUserPreferences()
    {
      return this.userPreferences_;
    }

    public final boolean hasIsChild()
    {
      if ((0x10 & this.bitField0_) == 16);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasLatestAppVersion()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasMandatoryAppVersion()
    {
      if ((0x4 & this.bitField0_) == 4);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasMe()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean hasUserPreferences()
    {
      if ((0x8 & this.bitField0_) == 8);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeMessage(1, this.me_);
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeInt32(2, this.latestAppVersion_);
      if ((0x4 & this.bitField0_) == 4)
        paramCodedOutputStream.writeInt32(3, this.mandatoryAppVersion_);
      if ((0x8 & this.bitField0_) == 8)
        paramCodedOutputStream.writeMessage(4, this.userPreferences_);
      if ((0x10 & this.bitField0_) == 16)
        paramCodedOutputStream.writeBool(5, this.isChild_);
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Network.SettingsResponse, Builder>
      implements Network.SettingsResponseOrBuilder
    {
      private int bitField0_;
      private boolean isChild_;
      private int latestAppVersion_;
      private int mandatoryAppVersion_;
      private Data.Person me_ = Data.Person.getDefaultInstance();
      private Data.UserPreferences userPreferences_ = Data.UserPreferences.getDefaultInstance();

      private Network.SettingsResponse buildPartial()
      {
        Network.SettingsResponse localSettingsResponse = new Network.SettingsResponse(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Network.SettingsResponse.access$25702(localSettingsResponse, this.me_);
        if ((i & 0x2) == 2)
          k |= 2;
        Network.SettingsResponse.access$25802(localSettingsResponse, this.latestAppVersion_);
        if ((i & 0x4) == 4)
          k |= 4;
        Network.SettingsResponse.access$25902(localSettingsResponse, this.mandatoryAppVersion_);
        if ((i & 0x8) == 8)
          k |= 8;
        Network.SettingsResponse.access$26002(localSettingsResponse, this.userPreferences_);
        if ((i & 0x10) == 16)
          k |= 16;
        Network.SettingsResponse.access$26102(localSettingsResponse, this.isChild_);
        Network.SettingsResponse.access$26202(localSettingsResponse, k);
        return localSettingsResponse;
      }

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 10:
            Data.Person.Builder localBuilder1 = Data.Person.newBuilder();
            if (hasMe())
              localBuilder1.mergeFrom(getMe());
            paramCodedInputStream.readMessage(localBuilder1, paramExtensionRegistryLite);
            setMe(localBuilder1.buildPartial());
            break;
          case 16:
            this.bitField0_ = (0x2 | this.bitField0_);
            this.latestAppVersion_ = paramCodedInputStream.readInt32();
            break;
          case 24:
            this.bitField0_ = (0x4 | this.bitField0_);
            this.mandatoryAppVersion_ = paramCodedInputStream.readInt32();
            break;
          case 34:
            Data.UserPreferences.Builder localBuilder = Data.UserPreferences.newBuilder();
            if (hasUserPreferences())
              localBuilder.mergeFrom(getUserPreferences());
            paramCodedInputStream.readMessage(localBuilder, paramExtensionRegistryLite);
            setUserPreferences(localBuilder.buildPartial());
            break;
          case 40:
          }
          this.bitField0_ = (0x10 | this.bitField0_);
          this.isChild_ = paramCodedInputStream.readBool();
        }
      }

      public final Builder clear()
      {
        super.clear();
        this.me_ = Data.Person.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.latestAppVersion_ = 0;
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.mandatoryAppVersion_ = 0;
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.userPreferences_ = Data.UserPreferences.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        this.isChild_ = false;
        this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        return this;
      }

      public final Builder clearIsChild()
      {
        this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        this.isChild_ = false;
        return this;
      }

      public final Builder clearLatestAppVersion()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.latestAppVersion_ = 0;
        return this;
      }

      public final Builder clearMandatoryAppVersion()
      {
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.mandatoryAppVersion_ = 0;
        return this;
      }

      public final Builder clearMe()
      {
        this.me_ = Data.Person.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        return this;
      }

      public final Builder clearUserPreferences()
      {
        this.userPreferences_ = Data.UserPreferences.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        return this;
      }

      public final Network.SettingsResponse getDefaultInstanceForType()
      {
        return Network.SettingsResponse.getDefaultInstance();
      }

      public final boolean getIsChild()
      {
        return this.isChild_;
      }

      public final int getLatestAppVersion()
      {
        return this.latestAppVersion_;
      }

      public final int getMandatoryAppVersion()
      {
        return this.mandatoryAppVersion_;
      }

      public final Data.Person getMe()
      {
        return this.me_;
      }

      public final Data.UserPreferences getUserPreferences()
      {
        return this.userPreferences_;
      }

      public final boolean hasIsChild()
      {
        if ((0x10 & this.bitField0_) == 16);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasLatestAppVersion()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasMandatoryAppVersion()
      {
        if ((0x4 & this.bitField0_) == 4);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasMe()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean hasUserPreferences()
      {
        if ((0x8 & this.bitField0_) == 8);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Network.SettingsResponse paramSettingsResponse)
      {
        if (paramSettingsResponse == Network.SettingsResponse.getDefaultInstance())
          return this;
        Data.Person localPerson;
        label61: Data.UserPreferences localUserPreferences;
        if (paramSettingsResponse.hasMe())
        {
          localPerson = paramSettingsResponse.getMe();
          if (((0x1 & this.bitField0_) == 1) && (this.me_ != Data.Person.getDefaultInstance()))
          {
            this.me_ = Data.Person.newBuilder(this.me_).mergeFrom(localPerson).buildPartial();
            this.bitField0_ = (0x1 | this.bitField0_);
          }
        }
        else
        {
          if (paramSettingsResponse.hasLatestAppVersion())
            setLatestAppVersion(paramSettingsResponse.getLatestAppVersion());
          if (paramSettingsResponse.hasMandatoryAppVersion())
            setMandatoryAppVersion(paramSettingsResponse.getMandatoryAppVersion());
          if (paramSettingsResponse.hasUserPreferences())
          {
            localUserPreferences = paramSettingsResponse.getUserPreferences();
            if (((0x8 & this.bitField0_) != 8) || (this.userPreferences_ == Data.UserPreferences.getDefaultInstance()))
              break label194;
          }
        }
        label194: for (this.userPreferences_ = Data.UserPreferences.newBuilder(this.userPreferences_).mergeFrom(localUserPreferences).buildPartial(); ; this.userPreferences_ = localUserPreferences)
        {
          this.bitField0_ = (0x8 | this.bitField0_);
          if (!paramSettingsResponse.hasIsChild())
            break;
          setIsChild(paramSettingsResponse.getIsChild());
          break;
          this.me_ = localPerson;
          break label61;
        }
      }

      public final Builder setIsChild(boolean paramBoolean)
      {
        this.bitField0_ = (0x10 | this.bitField0_);
        this.isChild_ = paramBoolean;
        return this;
      }

      public final Builder setLatestAppVersion(int paramInt)
      {
        this.bitField0_ = (0x2 | this.bitField0_);
        this.latestAppVersion_ = paramInt;
        return this;
      }

      public final Builder setMandatoryAppVersion(int paramInt)
      {
        this.bitField0_ = (0x4 | this.bitField0_);
        this.mandatoryAppVersion_ = paramInt;
        return this;
      }

      public final Builder setMe(Data.Person.Builder paramBuilder)
      {
        this.me_ = paramBuilder.build();
        this.bitField0_ = (0x1 | this.bitField0_);
        return this;
      }

      public final Builder setMe(Data.Person paramPerson)
      {
        if (paramPerson == null)
          throw new NullPointerException();
        this.me_ = paramPerson;
        this.bitField0_ = (0x1 | this.bitField0_);
        return this;
      }

      public final Builder setUserPreferences(Data.UserPreferences.Builder paramBuilder)
      {
        this.userPreferences_ = paramBuilder.build();
        this.bitField0_ = (0x8 | this.bitField0_);
        return this;
      }

      public final Builder setUserPreferences(Data.UserPreferences paramUserPreferences)
      {
        if (paramUserPreferences == null)
          throw new NullPointerException();
        this.userPreferences_ = paramUserPreferences;
        this.bitField0_ = (0x8 | this.bitField0_);
        return this;
      }
    }
  }

  public static abstract interface SettingsResponseOrBuilder extends MessageLiteOrBuilder
  {
    public abstract boolean getIsChild();

    public abstract int getLatestAppVersion();

    public abstract int getMandatoryAppVersion();

    public abstract Data.Person getMe();

    public abstract Data.UserPreferences getUserPreferences();

    public abstract boolean hasIsChild();

    public abstract boolean hasLatestAppVersion();

    public abstract boolean hasMandatoryAppVersion();

    public abstract boolean hasMe();

    public abstract boolean hasUserPreferences();
  }

  public static final class SnapToPlaceRequest extends GeneratedMessageLite
    implements Network.SnapToPlaceRequestOrBuilder
  {
    private static final SnapToPlaceRequest defaultInstance;
    private static final long serialVersionUID;
    private int accuracyInMeters_;
    private int bitField0_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private Data.Point position_;

    static
    {
      SnapToPlaceRequest localSnapToPlaceRequest = new SnapToPlaceRequest();
      defaultInstance = localSnapToPlaceRequest;
      localSnapToPlaceRequest.position_ = Data.Point.getDefaultInstance();
      localSnapToPlaceRequest.accuracyInMeters_ = 0;
    }

    private SnapToPlaceRequest()
    {
    }

    private SnapToPlaceRequest(Builder paramBuilder)
    {
      super();
    }

    public static SnapToPlaceRequest getDefaultInstance()
    {
      return defaultInstance;
    }

    public final int getAccuracyInMeters()
    {
      return this.accuracyInMeters_;
    }

    public final SnapToPlaceRequest getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final Data.Point getPosition()
    {
      return this.position_;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeMessageSize(1, this.position_);
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeInt32Size(2, this.accuracyInMeters_);
        this.memoizedSerializedSize = k;
      }
    }

    public final boolean hasAccuracyInMeters()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasPosition()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        if ((hasPosition()) && (!getPosition().isInitialized()))
        {
          this.memoizedIsInitialized = 0;
          i = 0;
        }
        else
        {
          this.memoizedIsInitialized = i;
        }
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeMessage(1, this.position_);
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeInt32(2, this.accuracyInMeters_);
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Network.SnapToPlaceRequest, Builder>
      implements Network.SnapToPlaceRequestOrBuilder
    {
      private int accuracyInMeters_;
      private int bitField0_;
      private Data.Point position_ = Data.Point.getDefaultInstance();

      private Network.SnapToPlaceRequest buildPartial()
      {
        Network.SnapToPlaceRequest localSnapToPlaceRequest = new Network.SnapToPlaceRequest(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Network.SnapToPlaceRequest.access$27802(localSnapToPlaceRequest, this.position_);
        if ((i & 0x2) == 2)
          k |= 2;
        Network.SnapToPlaceRequest.access$27902(localSnapToPlaceRequest, this.accuracyInMeters_);
        Network.SnapToPlaceRequest.access$28002(localSnapToPlaceRequest, k);
        return localSnapToPlaceRequest;
      }

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 10:
            Data.Point.Builder localBuilder = Data.Point.newBuilder();
            if (hasPosition())
              localBuilder.mergeFrom(getPosition());
            paramCodedInputStream.readMessage(localBuilder, paramExtensionRegistryLite);
            setPosition(localBuilder.buildPartial());
            break;
          case 16:
          }
          this.bitField0_ = (0x2 | this.bitField0_);
          this.accuracyInMeters_ = paramCodedInputStream.readInt32();
        }
      }

      public final Builder clear()
      {
        super.clear();
        this.position_ = Data.Point.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.accuracyInMeters_ = 0;
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        return this;
      }

      public final Builder clearAccuracyInMeters()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.accuracyInMeters_ = 0;
        return this;
      }

      public final Builder clearPosition()
      {
        this.position_ = Data.Point.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        return this;
      }

      public final int getAccuracyInMeters()
      {
        return this.accuracyInMeters_;
      }

      public final Network.SnapToPlaceRequest getDefaultInstanceForType()
      {
        return Network.SnapToPlaceRequest.getDefaultInstance();
      }

      public final Data.Point getPosition()
      {
        return this.position_;
      }

      public final boolean hasAccuracyInMeters()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasPosition()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean isInitialized()
      {
        if ((hasPosition()) && (!getPosition().isInitialized()));
        for (boolean bool = false; ; bool = true)
          return bool;
      }

      public final Builder mergeFrom(Network.SnapToPlaceRequest paramSnapToPlaceRequest)
      {
        if (paramSnapToPlaceRequest == Network.SnapToPlaceRequest.getDefaultInstance())
          return this;
        Data.Point localPoint;
        if (paramSnapToPlaceRequest.hasPosition())
        {
          localPoint = paramSnapToPlaceRequest.getPosition();
          if (((0x1 & this.bitField0_) != 1) || (this.position_ == Data.Point.getDefaultInstance()))
            break label88;
        }
        label88: for (this.position_ = Data.Point.newBuilder(this.position_).mergeFrom(localPoint).buildPartial(); ; this.position_ = localPoint)
        {
          this.bitField0_ = (0x1 | this.bitField0_);
          if (!paramSnapToPlaceRequest.hasAccuracyInMeters())
            break;
          setAccuracyInMeters(paramSnapToPlaceRequest.getAccuracyInMeters());
          break;
        }
      }

      public final Builder setAccuracyInMeters(int paramInt)
      {
        this.bitField0_ = (0x2 | this.bitField0_);
        this.accuracyInMeters_ = paramInt;
        return this;
      }

      public final Builder setPosition(Data.Point.Builder paramBuilder)
      {
        this.position_ = paramBuilder.build();
        this.bitField0_ = (0x1 | this.bitField0_);
        return this;
      }

      public final Builder setPosition(Data.Point paramPoint)
      {
        if (paramPoint == null)
          throw new NullPointerException();
        this.position_ = paramPoint;
        this.bitField0_ = (0x1 | this.bitField0_);
        return this;
      }
    }
  }

  public static abstract interface SnapToPlaceRequestOrBuilder extends MessageLiteOrBuilder
  {
    public abstract int getAccuracyInMeters();

    public abstract Data.Point getPosition();

    public abstract boolean hasAccuracyInMeters();

    public abstract boolean hasPosition();
  }

  public static final class SnapToPlaceResponse extends GeneratedMessageLite
    implements Network.SnapToPlaceResponseOrBuilder
  {
    private static final SnapToPlaceResponse defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private List<Data.Location> place_;
    private List<Data.ReverseGeocode> reverseGeocode_;
    private boolean userIsAtFirstLocation_;

    static
    {
      SnapToPlaceResponse localSnapToPlaceResponse = new SnapToPlaceResponse();
      defaultInstance = localSnapToPlaceResponse;
      localSnapToPlaceResponse.place_ = Collections.emptyList();
      localSnapToPlaceResponse.reverseGeocode_ = Collections.emptyList();
      localSnapToPlaceResponse.userIsAtFirstLocation_ = false;
    }

    private SnapToPlaceResponse()
    {
    }

    private SnapToPlaceResponse(Builder paramBuilder)
    {
      super();
    }

    public static SnapToPlaceResponse getDefaultInstance()
    {
      return defaultInstance;
    }

    public final SnapToPlaceResponse getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final Data.Location getPlace(int paramInt)
    {
      return (Data.Location)this.place_.get(paramInt);
    }

    public final int getPlaceCount()
    {
      return this.place_.size();
    }

    public final List<Data.Location> getPlaceList()
    {
      return this.place_;
    }

    public final Data.LocationOrBuilder getPlaceOrBuilder(int paramInt)
    {
      return (Data.LocationOrBuilder)this.place_.get(paramInt);
    }

    public final List<? extends Data.LocationOrBuilder> getPlaceOrBuilderList()
    {
      return this.place_;
    }

    public final Data.ReverseGeocode getReverseGeocode(int paramInt)
    {
      return (Data.ReverseGeocode)this.reverseGeocode_.get(paramInt);
    }

    public final int getReverseGeocodeCount()
    {
      return this.reverseGeocode_.size();
    }

    public final List<Data.ReverseGeocode> getReverseGeocodeList()
    {
      return this.reverseGeocode_;
    }

    public final Data.ReverseGeocodeOrBuilder getReverseGeocodeOrBuilder(int paramInt)
    {
      return (Data.ReverseGeocodeOrBuilder)this.reverseGeocode_.get(paramInt);
    }

    public final List<? extends Data.ReverseGeocodeOrBuilder> getReverseGeocodeOrBuilderList()
    {
      return this.reverseGeocode_;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int j;
      for (int n = i; ; n = j)
      {
        return n;
        j = 0;
        for (int k = 0; k < this.place_.size(); k++)
          j += CodedOutputStream.computeMessageSize(1, (MessageLite)this.place_.get(k));
        for (int m = 0; m < this.reverseGeocode_.size(); m++)
          j += CodedOutputStream.computeMessageSize(2, (MessageLite)this.reverseGeocode_.get(m));
        if ((0x1 & this.bitField0_) == 1)
          j += CodedOutputStream.computeBoolSize(3, this.userIsAtFirstLocation_);
        this.memoizedSerializedSize = j;
      }
    }

    public final boolean getUserIsAtFirstLocation()
    {
      return this.userIsAtFirstLocation_;
    }

    public final boolean hasUserIsAtFirstLocation()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        for (int k = 0; ; k++)
        {
          if (k >= getPlaceCount())
            break label61;
          if (!getPlace(k).isInitialized())
          {
            this.memoizedIsInitialized = 0;
            i = 0;
            break;
          }
        }
        label61: this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      for (int i = 0; i < this.place_.size(); i++)
        paramCodedOutputStream.writeMessage(1, (MessageLite)this.place_.get(i));
      for (int j = 0; j < this.reverseGeocode_.size(); j++)
        paramCodedOutputStream.writeMessage(2, (MessageLite)this.reverseGeocode_.get(j));
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeBool(3, this.userIsAtFirstLocation_);
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Network.SnapToPlaceResponse, Builder>
      implements Network.SnapToPlaceResponseOrBuilder
    {
      private int bitField0_;
      private List<Data.Location> place_ = Collections.emptyList();
      private List<Data.ReverseGeocode> reverseGeocode_ = Collections.emptyList();
      private boolean userIsAtFirstLocation_;

      private Network.SnapToPlaceResponse buildPartial()
      {
        Network.SnapToPlaceResponse localSnapToPlaceResponse = new Network.SnapToPlaceResponse(this, (byte)0);
        int i = this.bitField0_;
        if ((0x1 & this.bitField0_) == 1)
        {
          this.place_ = Collections.unmodifiableList(this.place_);
          this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        }
        Network.SnapToPlaceResponse.access$28402(localSnapToPlaceResponse, this.place_);
        if ((0x2 & this.bitField0_) == 2)
        {
          this.reverseGeocode_ = Collections.unmodifiableList(this.reverseGeocode_);
          this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        }
        Network.SnapToPlaceResponse.access$28502(localSnapToPlaceResponse, this.reverseGeocode_);
        int j = i & 0x4;
        int k = 0;
        if (j == 4)
          k = 1;
        Network.SnapToPlaceResponse.access$28602(localSnapToPlaceResponse, this.userIsAtFirstLocation_);
        Network.SnapToPlaceResponse.access$28702(localSnapToPlaceResponse, k);
        return localSnapToPlaceResponse;
      }

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private void ensurePlaceIsMutable()
      {
        if ((0x1 & this.bitField0_) != 1)
        {
          this.place_ = new ArrayList(this.place_);
          this.bitField0_ = (0x1 | this.bitField0_);
        }
      }

      private void ensureReverseGeocodeIsMutable()
      {
        if ((0x2 & this.bitField0_) != 2)
        {
          this.reverseGeocode_ = new ArrayList(this.reverseGeocode_);
          this.bitField0_ = (0x2 | this.bitField0_);
        }
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 10:
            Data.Location.Builder localBuilder1 = Data.Location.newBuilder();
            paramCodedInputStream.readMessage(localBuilder1, paramExtensionRegistryLite);
            addPlace(localBuilder1.buildPartial());
            break;
          case 18:
            Data.ReverseGeocode.Builder localBuilder = Data.ReverseGeocode.newBuilder();
            paramCodedInputStream.readMessage(localBuilder, paramExtensionRegistryLite);
            addReverseGeocode(localBuilder.buildPartial());
            break;
          case 24:
          }
          this.bitField0_ = (0x4 | this.bitField0_);
          this.userIsAtFirstLocation_ = paramCodedInputStream.readBool();
        }
      }

      public final Builder addAllPlace(Iterable<? extends Data.Location> paramIterable)
      {
        ensurePlaceIsMutable();
        GeneratedMessageLite.Builder.addAll(paramIterable, this.place_);
        return this;
      }

      public final Builder addAllReverseGeocode(Iterable<? extends Data.ReverseGeocode> paramIterable)
      {
        ensureReverseGeocodeIsMutable();
        GeneratedMessageLite.Builder.addAll(paramIterable, this.reverseGeocode_);
        return this;
      }

      public final Builder addPlace(int paramInt, Data.Location.Builder paramBuilder)
      {
        ensurePlaceIsMutable();
        this.place_.add(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder addPlace(int paramInt, Data.Location paramLocation)
      {
        if (paramLocation == null)
          throw new NullPointerException();
        ensurePlaceIsMutable();
        this.place_.add(paramInt, paramLocation);
        return this;
      }

      public final Builder addPlace(Data.Location.Builder paramBuilder)
      {
        ensurePlaceIsMutable();
        this.place_.add(paramBuilder.build());
        return this;
      }

      public final Builder addPlace(Data.Location paramLocation)
      {
        if (paramLocation == null)
          throw new NullPointerException();
        ensurePlaceIsMutable();
        this.place_.add(paramLocation);
        return this;
      }

      public final Builder addReverseGeocode(int paramInt, Data.ReverseGeocode.Builder paramBuilder)
      {
        ensureReverseGeocodeIsMutable();
        this.reverseGeocode_.add(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder addReverseGeocode(int paramInt, Data.ReverseGeocode paramReverseGeocode)
      {
        if (paramReverseGeocode == null)
          throw new NullPointerException();
        ensureReverseGeocodeIsMutable();
        this.reverseGeocode_.add(paramInt, paramReverseGeocode);
        return this;
      }

      public final Builder addReverseGeocode(Data.ReverseGeocode.Builder paramBuilder)
      {
        ensureReverseGeocodeIsMutable();
        this.reverseGeocode_.add(paramBuilder.build());
        return this;
      }

      public final Builder addReverseGeocode(Data.ReverseGeocode paramReverseGeocode)
      {
        if (paramReverseGeocode == null)
          throw new NullPointerException();
        ensureReverseGeocodeIsMutable();
        this.reverseGeocode_.add(paramReverseGeocode);
        return this;
      }

      public final Builder clear()
      {
        super.clear();
        this.place_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.reverseGeocode_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.userIsAtFirstLocation_ = false;
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        return this;
      }

      public final Builder clearPlace()
      {
        this.place_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        return this;
      }

      public final Builder clearReverseGeocode()
      {
        this.reverseGeocode_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        return this;
      }

      public final Builder clearUserIsAtFirstLocation()
      {
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.userIsAtFirstLocation_ = false;
        return this;
      }

      public final Network.SnapToPlaceResponse getDefaultInstanceForType()
      {
        return Network.SnapToPlaceResponse.getDefaultInstance();
      }

      public final Data.Location getPlace(int paramInt)
      {
        return (Data.Location)this.place_.get(paramInt);
      }

      public final int getPlaceCount()
      {
        return this.place_.size();
      }

      public final List<Data.Location> getPlaceList()
      {
        return Collections.unmodifiableList(this.place_);
      }

      public final Data.ReverseGeocode getReverseGeocode(int paramInt)
      {
        return (Data.ReverseGeocode)this.reverseGeocode_.get(paramInt);
      }

      public final int getReverseGeocodeCount()
      {
        return this.reverseGeocode_.size();
      }

      public final List<Data.ReverseGeocode> getReverseGeocodeList()
      {
        return Collections.unmodifiableList(this.reverseGeocode_);
      }

      public final boolean getUserIsAtFirstLocation()
      {
        return this.userIsAtFirstLocation_;
      }

      public final boolean hasUserIsAtFirstLocation()
      {
        if ((0x4 & this.bitField0_) == 4);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean isInitialized()
      {
        int i = 0;
        if (i < getPlaceCount())
          if (getPlace(i).isInitialized());
        for (boolean bool = false; ; bool = true)
        {
          return bool;
          i++;
          break;
        }
      }

      public final Builder mergeFrom(Network.SnapToPlaceResponse paramSnapToPlaceResponse)
      {
        if (paramSnapToPlaceResponse == Network.SnapToPlaceResponse.getDefaultInstance());
        label135: label154: 
        while (true)
        {
          return this;
          if (!paramSnapToPlaceResponse.place_.isEmpty())
          {
            if (this.place_.isEmpty())
            {
              this.place_ = paramSnapToPlaceResponse.place_;
              this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
            }
          }
          else
            label52: if (!paramSnapToPlaceResponse.reverseGeocode_.isEmpty())
            {
              if (!this.reverseGeocode_.isEmpty())
                break label135;
              this.reverseGeocode_ = paramSnapToPlaceResponse.reverseGeocode_;
              this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
            }
          while (true)
          {
            if (!paramSnapToPlaceResponse.hasUserIsAtFirstLocation())
              break label154;
            setUserIsAtFirstLocation(paramSnapToPlaceResponse.getUserIsAtFirstLocation());
            break;
            ensurePlaceIsMutable();
            this.place_.addAll(paramSnapToPlaceResponse.place_);
            break label52;
            ensureReverseGeocodeIsMutable();
            this.reverseGeocode_.addAll(paramSnapToPlaceResponse.reverseGeocode_);
          }
        }
      }

      public final Builder setPlace(int paramInt, Data.Location.Builder paramBuilder)
      {
        ensurePlaceIsMutable();
        this.place_.set(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder setPlace(int paramInt, Data.Location paramLocation)
      {
        if (paramLocation == null)
          throw new NullPointerException();
        ensurePlaceIsMutable();
        this.place_.set(paramInt, paramLocation);
        return this;
      }

      public final Builder setReverseGeocode(int paramInt, Data.ReverseGeocode.Builder paramBuilder)
      {
        ensureReverseGeocodeIsMutable();
        this.reverseGeocode_.set(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder setReverseGeocode(int paramInt, Data.ReverseGeocode paramReverseGeocode)
      {
        if (paramReverseGeocode == null)
          throw new NullPointerException();
        ensureReverseGeocodeIsMutable();
        this.reverseGeocode_.set(paramInt, paramReverseGeocode);
        return this;
      }

      public final Builder setUserIsAtFirstLocation(boolean paramBoolean)
      {
        this.bitField0_ = (0x4 | this.bitField0_);
        this.userIsAtFirstLocation_ = paramBoolean;
        return this;
      }
    }
  }

  public static abstract interface SnapToPlaceResponseOrBuilder extends MessageLiteOrBuilder
  {
    public abstract Data.Location getPlace(int paramInt);

    public abstract int getPlaceCount();

    public abstract List<Data.Location> getPlaceList();

    public abstract Data.ReverseGeocode getReverseGeocode(int paramInt);

    public abstract int getReverseGeocodeCount();

    public abstract List<Data.ReverseGeocode> getReverseGeocodeList();

    public abstract boolean getUserIsAtFirstLocation();

    public abstract boolean hasUserIsAtFirstLocation();
  }

  public static final class UploadPhotoRequest extends GeneratedMessageLite
    implements Network.UploadPhotoRequestOrBuilder
  {
    private static final UploadPhotoRequest defaultInstance;
    private static final long serialVersionUID;
    private Object albumLabel_;
    private Object albumTitle_;
    private int bitField0_;
    private Network.MediaReference mediaRef_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private boolean returnAlbumInfo_;
    private LazyStringList streamId_;

    static
    {
      UploadPhotoRequest localUploadPhotoRequest = new UploadPhotoRequest();
      defaultInstance = localUploadPhotoRequest;
      localUploadPhotoRequest.albumTitle_ = "";
      localUploadPhotoRequest.albumLabel_ = "";
      localUploadPhotoRequest.mediaRef_ = Network.MediaReference.getDefaultInstance();
      localUploadPhotoRequest.streamId_ = LazyStringArrayList.EMPTY;
      localUploadPhotoRequest.returnAlbumInfo_ = false;
    }

    private UploadPhotoRequest()
    {
    }

    private UploadPhotoRequest(Builder paramBuilder)
    {
      super();
    }

    private ByteString getAlbumLabelBytes()
    {
      Object localObject = this.albumLabel_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.albumLabel_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    private ByteString getAlbumTitleBytes()
    {
      Object localObject = this.albumTitle_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.albumTitle_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static UploadPhotoRequest getDefaultInstance()
    {
      return defaultInstance;
    }

    public final String getAlbumLabel()
    {
      Object localObject1 = this.albumLabel_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.albumLabel_ = str;
      }
    }

    public final String getAlbumTitle()
    {
      Object localObject1 = this.albumTitle_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.albumTitle_ = str;
      }
    }

    public final UploadPhotoRequest getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final Network.MediaReference getMediaRef()
    {
      return this.mediaRef_;
    }

    public final boolean getReturnAlbumInfo()
    {
      return this.returnAlbumInfo_;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int i1;
      for (int i2 = i; ; i2 = i1)
      {
        return i2;
        int j = 0x1 & this.bitField0_;
        int k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeBytesSize(1, getAlbumTitleBytes());
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeBytesSize(2, getAlbumLabelBytes());
        if ((0x4 & this.bitField0_) == 4)
          k += CodedOutputStream.computeMessageSize(3, this.mediaRef_);
        int m = 0;
        for (int n = 0; n < this.streamId_.size(); n++)
          m += CodedOutputStream.computeBytesSizeNoTag(this.streamId_.getByteString(n));
        i1 = k + m + 1 * getStreamIdList().size();
        if ((0x8 & this.bitField0_) == 8)
          i1 += CodedOutputStream.computeBoolSize(5, this.returnAlbumInfo_);
        this.memoizedSerializedSize = i1;
      }
    }

    public final String getStreamId(int paramInt)
    {
      return (String)this.streamId_.get(paramInt);
    }

    public final int getStreamIdCount()
    {
      return this.streamId_.size();
    }

    public final List<String> getStreamIdList()
    {
      return this.streamId_;
    }

    public final boolean hasAlbumLabel()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasAlbumTitle()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean hasMediaRef()
    {
      if ((0x4 & this.bitField0_) == 4);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasReturnAlbumInfo()
    {
      if ((0x8 & this.bitField0_) == 8);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeBytes(1, getAlbumTitleBytes());
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeBytes(2, getAlbumLabelBytes());
      if ((0x4 & this.bitField0_) == 4)
        paramCodedOutputStream.writeMessage(3, this.mediaRef_);
      for (int i = 0; i < this.streamId_.size(); i++)
        paramCodedOutputStream.writeBytes(4, this.streamId_.getByteString(i));
      if ((0x8 & this.bitField0_) == 8)
        paramCodedOutputStream.writeBool(5, this.returnAlbumInfo_);
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Network.UploadPhotoRequest, Builder>
      implements Network.UploadPhotoRequestOrBuilder
    {
      private Object albumLabel_ = "";
      private Object albumTitle_ = "";
      private int bitField0_;
      private Network.MediaReference mediaRef_ = Network.MediaReference.getDefaultInstance();
      private boolean returnAlbumInfo_;
      private LazyStringList streamId_ = LazyStringArrayList.EMPTY;

      private Network.UploadPhotoRequest buildPartial()
      {
        Network.UploadPhotoRequest localUploadPhotoRequest = new Network.UploadPhotoRequest(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Network.UploadPhotoRequest.access$63202(localUploadPhotoRequest, this.albumTitle_);
        if ((i & 0x2) == 2)
          k |= 2;
        Network.UploadPhotoRequest.access$63302(localUploadPhotoRequest, this.albumLabel_);
        if ((i & 0x4) == 4)
          k |= 4;
        Network.UploadPhotoRequest.access$63402(localUploadPhotoRequest, this.mediaRef_);
        if ((0x8 & this.bitField0_) == 8)
        {
          this.streamId_ = new UnmodifiableLazyStringList(this.streamId_);
          this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        }
        Network.UploadPhotoRequest.access$63502(localUploadPhotoRequest, this.streamId_);
        if ((i & 0x10) == 16)
          k |= 8;
        Network.UploadPhotoRequest.access$63602(localUploadPhotoRequest, this.returnAlbumInfo_);
        Network.UploadPhotoRequest.access$63702(localUploadPhotoRequest, k);
        return localUploadPhotoRequest;
      }

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private void ensureStreamIdIsMutable()
      {
        if ((0x8 & this.bitField0_) != 8)
        {
          this.streamId_ = new LazyStringArrayList(this.streamId_);
          this.bitField0_ = (0x8 | this.bitField0_);
        }
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 10:
            this.bitField0_ = (0x1 | this.bitField0_);
            this.albumTitle_ = paramCodedInputStream.readBytes();
            break;
          case 18:
            this.bitField0_ = (0x2 | this.bitField0_);
            this.albumLabel_ = paramCodedInputStream.readBytes();
            break;
          case 26:
            Network.MediaReference.Builder localBuilder = Network.MediaReference.newBuilder();
            if (hasMediaRef())
              localBuilder.mergeFrom(getMediaRef());
            paramCodedInputStream.readMessage(localBuilder, paramExtensionRegistryLite);
            setMediaRef(localBuilder.buildPartial());
            break;
          case 34:
            ensureStreamIdIsMutable();
            this.streamId_.add(paramCodedInputStream.readBytes());
            break;
          case 40:
          }
          this.bitField0_ = (0x10 | this.bitField0_);
          this.returnAlbumInfo_ = paramCodedInputStream.readBool();
        }
      }

      public final Builder addAllStreamId(Iterable<String> paramIterable)
      {
        ensureStreamIdIsMutable();
        GeneratedMessageLite.Builder.addAll(paramIterable, this.streamId_);
        return this;
      }

      public final Builder addStreamId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        ensureStreamIdIsMutable();
        this.streamId_.add(paramString);
        return this;
      }

      public final Builder clear()
      {
        super.clear();
        this.albumTitle_ = "";
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.albumLabel_ = "";
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.mediaRef_ = Network.MediaReference.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.streamId_ = LazyStringArrayList.EMPTY;
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        this.returnAlbumInfo_ = false;
        this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        return this;
      }

      public final Builder clearAlbumLabel()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.albumLabel_ = Network.UploadPhotoRequest.getDefaultInstance().getAlbumLabel();
        return this;
      }

      public final Builder clearAlbumTitle()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.albumTitle_ = Network.UploadPhotoRequest.getDefaultInstance().getAlbumTitle();
        return this;
      }

      public final Builder clearMediaRef()
      {
        this.mediaRef_ = Network.MediaReference.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        return this;
      }

      public final Builder clearReturnAlbumInfo()
      {
        this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        this.returnAlbumInfo_ = false;
        return this;
      }

      public final Builder clearStreamId()
      {
        this.streamId_ = LazyStringArrayList.EMPTY;
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        return this;
      }

      public final String getAlbumLabel()
      {
        Object localObject = this.albumLabel_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.albumLabel_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final String getAlbumTitle()
      {
        Object localObject = this.albumTitle_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.albumTitle_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final Network.UploadPhotoRequest getDefaultInstanceForType()
      {
        return Network.UploadPhotoRequest.getDefaultInstance();
      }

      public final Network.MediaReference getMediaRef()
      {
        return this.mediaRef_;
      }

      public final boolean getReturnAlbumInfo()
      {
        return this.returnAlbumInfo_;
      }

      public final String getStreamId(int paramInt)
      {
        return (String)this.streamId_.get(paramInt);
      }

      public final int getStreamIdCount()
      {
        return this.streamId_.size();
      }

      public final List<String> getStreamIdList()
      {
        return Collections.unmodifiableList(this.streamId_);
      }

      public final boolean hasAlbumLabel()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasAlbumTitle()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean hasMediaRef()
      {
        if ((0x4 & this.bitField0_) == 4);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasReturnAlbumInfo()
      {
        if ((0x10 & this.bitField0_) == 16);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Network.UploadPhotoRequest paramUploadPhotoRequest)
      {
        if (paramUploadPhotoRequest == Network.UploadPhotoRequest.getDefaultInstance());
        label174: label193: 
        while (true)
        {
          return this;
          if (paramUploadPhotoRequest.hasAlbumTitle())
            setAlbumTitle(paramUploadPhotoRequest.getAlbumTitle());
          if (paramUploadPhotoRequest.hasAlbumLabel())
            setAlbumLabel(paramUploadPhotoRequest.getAlbumLabel());
          Network.MediaReference localMediaReference;
          if (paramUploadPhotoRequest.hasMediaRef())
          {
            localMediaReference = paramUploadPhotoRequest.getMediaRef();
            if (((0x4 & this.bitField0_) == 4) && (this.mediaRef_ != Network.MediaReference.getDefaultInstance()))
            {
              this.mediaRef_ = Network.MediaReference.newBuilder(this.mediaRef_).mergeFrom(localMediaReference).buildPartial();
              label93: this.bitField0_ = (0x4 | this.bitField0_);
            }
          }
          else if (!paramUploadPhotoRequest.streamId_.isEmpty())
          {
            if (!this.streamId_.isEmpty())
              break label174;
            this.streamId_ = paramUploadPhotoRequest.streamId_;
            this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
          }
          while (true)
          {
            if (!paramUploadPhotoRequest.hasReturnAlbumInfo())
              break label193;
            setReturnAlbumInfo(paramUploadPhotoRequest.getReturnAlbumInfo());
            break;
            this.mediaRef_ = localMediaReference;
            break label93;
            ensureStreamIdIsMutable();
            this.streamId_.addAll(paramUploadPhotoRequest.streamId_);
          }
        }
      }

      public final Builder setAlbumLabel(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x2 | this.bitField0_);
        this.albumLabel_ = paramString;
        return this;
      }

      public final Builder setAlbumTitle(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x1 | this.bitField0_);
        this.albumTitle_ = paramString;
        return this;
      }

      public final Builder setMediaRef(Network.MediaReference.Builder paramBuilder)
      {
        this.mediaRef_ = paramBuilder.build();
        this.bitField0_ = (0x4 | this.bitField0_);
        return this;
      }

      public final Builder setMediaRef(Network.MediaReference paramMediaReference)
      {
        if (paramMediaReference == null)
          throw new NullPointerException();
        this.mediaRef_ = paramMediaReference;
        this.bitField0_ = (0x4 | this.bitField0_);
        return this;
      }

      public final Builder setReturnAlbumInfo(boolean paramBoolean)
      {
        this.bitField0_ = (0x10 | this.bitField0_);
        this.returnAlbumInfo_ = paramBoolean;
        return this;
      }

      public final Builder setStreamId(int paramInt, String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        ensureStreamIdIsMutable();
        this.streamId_.set(paramInt, paramString);
        return this;
      }
    }
  }

  public static abstract interface UploadPhotoRequestOrBuilder extends MessageLiteOrBuilder
  {
    public abstract String getAlbumLabel();

    public abstract String getAlbumTitle();

    public abstract Network.MediaReference getMediaRef();

    public abstract boolean getReturnAlbumInfo();

    public abstract String getStreamId(int paramInt);

    public abstract int getStreamIdCount();

    public abstract List<String> getStreamIdList();

    public abstract boolean hasAlbumLabel();

    public abstract boolean hasAlbumTitle();

    public abstract boolean hasMediaRef();

    public abstract boolean hasReturnAlbumInfo();
  }

  public static final class UploadPhotoResponse extends GeneratedMessageLite
    implements Network.UploadPhotoResponseOrBuilder
  {
    private static final UploadPhotoResponse defaultInstance;
    private static final long serialVersionUID;
    private Data.PhotoAlbum album_;
    private int bitField0_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private Data.MobilePhoto photo_;

    static
    {
      UploadPhotoResponse localUploadPhotoResponse = new UploadPhotoResponse();
      defaultInstance = localUploadPhotoResponse;
      localUploadPhotoResponse.photo_ = Data.MobilePhoto.getDefaultInstance();
      localUploadPhotoResponse.album_ = Data.PhotoAlbum.getDefaultInstance();
    }

    private UploadPhotoResponse()
    {
    }

    private UploadPhotoResponse(Builder paramBuilder)
    {
      super();
    }

    public static UploadPhotoResponse getDefaultInstance()
    {
      return defaultInstance;
    }

    public final Data.PhotoAlbum getAlbum()
    {
      return this.album_;
    }

    public final UploadPhotoResponse getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final Data.MobilePhoto getPhoto()
    {
      return this.photo_;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeMessageSize(1, this.photo_);
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeMessageSize(2, this.album_);
        this.memoizedSerializedSize = k;
      }
    }

    public final boolean hasAlbum()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasPhoto()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        if ((hasPhoto()) && (!getPhoto().isInitialized()))
        {
          this.memoizedIsInitialized = 0;
          i = 0;
        }
        else if ((hasAlbum()) && (!getAlbum().isInitialized()))
        {
          this.memoizedIsInitialized = 0;
          i = 0;
        }
        else
        {
          this.memoizedIsInitialized = i;
        }
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeMessage(1, this.photo_);
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeMessage(2, this.album_);
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Network.UploadPhotoResponse, Builder>
      implements Network.UploadPhotoResponseOrBuilder
    {
      private Data.PhotoAlbum album_ = Data.PhotoAlbum.getDefaultInstance();
      private int bitField0_;
      private Data.MobilePhoto photo_ = Data.MobilePhoto.getDefaultInstance();

      private Network.UploadPhotoResponse buildPartial()
      {
        Network.UploadPhotoResponse localUploadPhotoResponse = new Network.UploadPhotoResponse(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Network.UploadPhotoResponse.access$64102(localUploadPhotoResponse, this.photo_);
        if ((i & 0x2) == 2)
          k |= 2;
        Network.UploadPhotoResponse.access$64202(localUploadPhotoResponse, this.album_);
        Network.UploadPhotoResponse.access$64302(localUploadPhotoResponse, k);
        return localUploadPhotoResponse;
      }

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 10:
            Data.MobilePhoto.Builder localBuilder1 = Data.MobilePhoto.newBuilder();
            if (hasPhoto())
              localBuilder1.mergeFrom(getPhoto());
            paramCodedInputStream.readMessage(localBuilder1, paramExtensionRegistryLite);
            setPhoto(localBuilder1.buildPartial());
            break;
          case 18:
          }
          Data.PhotoAlbum.Builder localBuilder = Data.PhotoAlbum.newBuilder();
          if (hasAlbum())
            localBuilder.mergeFrom(getAlbum());
          paramCodedInputStream.readMessage(localBuilder, paramExtensionRegistryLite);
          setAlbum(localBuilder.buildPartial());
        }
      }

      public final Builder clear()
      {
        super.clear();
        this.photo_ = Data.MobilePhoto.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.album_ = Data.PhotoAlbum.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        return this;
      }

      public final Builder clearAlbum()
      {
        this.album_ = Data.PhotoAlbum.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        return this;
      }

      public final Builder clearPhoto()
      {
        this.photo_ = Data.MobilePhoto.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        return this;
      }

      public final Data.PhotoAlbum getAlbum()
      {
        return this.album_;
      }

      public final Network.UploadPhotoResponse getDefaultInstanceForType()
      {
        return Network.UploadPhotoResponse.getDefaultInstance();
      }

      public final Data.MobilePhoto getPhoto()
      {
        return this.photo_;
      }

      public final boolean hasAlbum()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasPhoto()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean isInitialized()
      {
        boolean bool1;
        if (hasPhoto())
        {
          boolean bool3 = getPhoto().isInitialized();
          bool1 = false;
          if (bool3);
        }
        while (true)
        {
          return bool1;
          if (hasAlbum())
          {
            boolean bool2 = getAlbum().isInitialized();
            bool1 = false;
            if (!bool2);
          }
          else
          {
            bool1 = true;
          }
        }
      }

      public final Builder mergeFrom(Network.UploadPhotoResponse paramUploadPhotoResponse)
      {
        if (paramUploadPhotoResponse == Network.UploadPhotoResponse.getDefaultInstance());
        Data.MobilePhoto localMobilePhoto;
        label59: 
        do
        {
          return this;
          if (paramUploadPhotoResponse.hasPhoto())
          {
            localMobilePhoto = paramUploadPhotoResponse.getPhoto();
            if (((0x1 & this.bitField0_) != 1) || (this.photo_ == Data.MobilePhoto.getDefaultInstance()))
              break;
            this.photo_ = Data.MobilePhoto.newBuilder(this.photo_).mergeFrom(localMobilePhoto).buildPartial();
            this.bitField0_ = (0x1 | this.bitField0_);
          }
        }
        while (!paramUploadPhotoResponse.hasAlbum());
        Data.PhotoAlbum localPhotoAlbum = paramUploadPhotoResponse.getAlbum();
        if (((0x2 & this.bitField0_) == 2) && (this.album_ != Data.PhotoAlbum.getDefaultInstance()));
        for (this.album_ = Data.PhotoAlbum.newBuilder(this.album_).mergeFrom(localPhotoAlbum).buildPartial(); ; this.album_ = localPhotoAlbum)
        {
          this.bitField0_ = (0x2 | this.bitField0_);
          break;
          this.photo_ = localMobilePhoto;
          break label59;
        }
      }

      public final Builder setAlbum(Data.PhotoAlbum.Builder paramBuilder)
      {
        this.album_ = paramBuilder.build();
        this.bitField0_ = (0x2 | this.bitField0_);
        return this;
      }

      public final Builder setAlbum(Data.PhotoAlbum paramPhotoAlbum)
      {
        if (paramPhotoAlbum == null)
          throw new NullPointerException();
        this.album_ = paramPhotoAlbum;
        this.bitField0_ = (0x2 | this.bitField0_);
        return this;
      }

      public final Builder setPhoto(Data.MobilePhoto.Builder paramBuilder)
      {
        this.photo_ = paramBuilder.build();
        this.bitField0_ = (0x1 | this.bitField0_);
        return this;
      }

      public final Builder setPhoto(Data.MobilePhoto paramMobilePhoto)
      {
        if (paramMobilePhoto == null)
          throw new NullPointerException();
        this.photo_ = paramMobilePhoto;
        this.bitField0_ = (0x1 | this.bitField0_);
        return this;
      }
    }
  }

  public static abstract interface UploadPhotoResponseOrBuilder extends MessageLiteOrBuilder
  {
    public abstract Data.PhotoAlbum getAlbum();

    public abstract Data.MobilePhoto getPhoto();

    public abstract boolean hasAlbum();

    public abstract boolean hasPhoto();
  }
}

/* Location:           C:\Dev\Java\android\adt-bundle-windows\workspace\googleplus\classes_dex2jar.jar
 * Qualified Name:     com.google.wireless.tacotruck.proto.Network
 * JD-Core Version:    0.6.2
 */