package com.google.wireless.tacotruck.proto;

import com.google.apps.people.notifications.proto.base.NotificationEnums.NotificationType;
import com.google.apps.tacotown.proto.A2a.HangoutData;
import com.google.apps.tacotown.proto.A2a.HangoutData.Builder;
import com.google.protobuf.ByteString;
import com.google.protobuf.CodedInputStream;
import com.google.protobuf.CodedOutputStream;
import com.google.protobuf.ExtensionRegistryLite;
import com.google.protobuf.GeneratedMessageLite;
import com.google.protobuf.GeneratedMessageLite.Builder;
import com.google.protobuf.Internal;
import com.google.protobuf.Internal.EnumLite;
import com.google.protobuf.Internal.EnumLiteMap;
import com.google.protobuf.LazyStringArrayList;
import com.google.protobuf.LazyStringList;
import com.google.protobuf.MessageLite;
import com.google.protobuf.MessageLiteOrBuilder;
import com.google.protobuf.UninitializedMessageException;
import com.google.protobuf.UnmodifiableLazyStringList;
import com.google.protos.embed.EmbedClient.EmbedClientItem;
import com.google.protos.embed.EmbedClient.EmbedClientItem.Builder;
import com.google.wireless.contacts.proto.Circles.MobileCircle.Type;
import com.google.wireless.contacts.proto.Contact.MobileContact.ProfileType;
import java.io.IOException;
import java.io.ObjectStreamException;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

public final class Data
{
  public static final class ActionState extends GeneratedMessageLite
    implements Data.ActionStateOrBuilder
  {
    private static final ActionState defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private boolean viewerCanComment_;
    private boolean viewerCanPlusone_;
    private boolean viewerCanReshare_;
    private boolean viewerHasMuted_;
    private boolean viewerHasRead_;
    private boolean viewerIsFollowing_;

    static
    {
      ActionState localActionState = new ActionState();
      defaultInstance = localActionState;
      localActionState.viewerCanComment_ = false;
      localActionState.viewerIsFollowing_ = false;
      localActionState.viewerHasMuted_ = false;
      localActionState.viewerCanReshare_ = false;
      localActionState.viewerHasRead_ = false;
      localActionState.viewerCanPlusone_ = false;
    }

    private ActionState()
    {
    }

    private ActionState(Builder paramBuilder)
    {
      super();
    }

    public static ActionState getDefaultInstance()
    {
      return defaultInstance;
    }

    public static Builder newBuilder()
    {
      return Builder.access$16500();
    }

    public static Builder newBuilder(ActionState paramActionState)
    {
      return Builder.access$16500().mergeFrom(paramActionState);
    }

    public final ActionState getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeBoolSize(1, this.viewerCanComment_);
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeBoolSize(2, this.viewerIsFollowing_);
        if ((0x4 & this.bitField0_) == 4)
          k += CodedOutputStream.computeBoolSize(3, this.viewerHasMuted_);
        if ((0x8 & this.bitField0_) == 8)
          k += CodedOutputStream.computeBoolSize(4, this.viewerCanReshare_);
        if ((0x10 & this.bitField0_) == 16)
          k += CodedOutputStream.computeBoolSize(5, this.viewerHasRead_);
        if ((0x20 & this.bitField0_) == 32)
          k += CodedOutputStream.computeBoolSize(6, this.viewerCanPlusone_);
        this.memoizedSerializedSize = k;
      }
    }

    public final boolean getViewerCanComment()
    {
      return this.viewerCanComment_;
    }

    public final boolean getViewerCanPlusone()
    {
      return this.viewerCanPlusone_;
    }

    public final boolean getViewerCanReshare()
    {
      return this.viewerCanReshare_;
    }

    public final boolean getViewerHasMuted()
    {
      return this.viewerHasMuted_;
    }

    public final boolean getViewerHasRead()
    {
      return this.viewerHasRead_;
    }

    public final boolean getViewerIsFollowing()
    {
      return this.viewerIsFollowing_;
    }

    public final boolean hasViewerCanComment()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean hasViewerCanPlusone()
    {
      if ((0x20 & this.bitField0_) == 32);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasViewerCanReshare()
    {
      if ((0x8 & this.bitField0_) == 8);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasViewerHasMuted()
    {
      if ((0x4 & this.bitField0_) == 4);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasViewerHasRead()
    {
      if ((0x10 & this.bitField0_) == 16);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasViewerIsFollowing()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeBool(1, this.viewerCanComment_);
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeBool(2, this.viewerIsFollowing_);
      if ((0x4 & this.bitField0_) == 4)
        paramCodedOutputStream.writeBool(3, this.viewerHasMuted_);
      if ((0x8 & this.bitField0_) == 8)
        paramCodedOutputStream.writeBool(4, this.viewerCanReshare_);
      if ((0x10 & this.bitField0_) == 16)
        paramCodedOutputStream.writeBool(5, this.viewerHasRead_);
      if ((0x20 & this.bitField0_) == 32)
        paramCodedOutputStream.writeBool(6, this.viewerCanPlusone_);
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Data.ActionState, Builder>
      implements Data.ActionStateOrBuilder
    {
      private int bitField0_;
      private boolean viewerCanComment_;
      private boolean viewerCanPlusone_;
      private boolean viewerCanReshare_;
      private boolean viewerHasMuted_;
      private boolean viewerHasRead_;
      private boolean viewerIsFollowing_;

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 8:
            this.bitField0_ = (0x1 | this.bitField0_);
            this.viewerCanComment_ = paramCodedInputStream.readBool();
            break;
          case 16:
            this.bitField0_ = (0x2 | this.bitField0_);
            this.viewerIsFollowing_ = paramCodedInputStream.readBool();
            break;
          case 24:
            this.bitField0_ = (0x4 | this.bitField0_);
            this.viewerHasMuted_ = paramCodedInputStream.readBool();
            break;
          case 32:
            this.bitField0_ = (0x8 | this.bitField0_);
            this.viewerCanReshare_ = paramCodedInputStream.readBool();
            break;
          case 40:
            this.bitField0_ = (0x10 | this.bitField0_);
            this.viewerHasRead_ = paramCodedInputStream.readBool();
            break;
          case 48:
          }
          this.bitField0_ = (0x20 | this.bitField0_);
          this.viewerCanPlusone_ = paramCodedInputStream.readBool();
        }
      }

      public final Data.ActionState build()
      {
        Data.ActionState localActionState = buildPartial();
        if (!localActionState.isInitialized())
          throw new UninitializedMessageException();
        return localActionState;
      }

      public final Data.ActionState buildPartial()
      {
        Data.ActionState localActionState = new Data.ActionState(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Data.ActionState.access$16702(localActionState, this.viewerCanComment_);
        if ((i & 0x2) == 2)
          k |= 2;
        Data.ActionState.access$16802(localActionState, this.viewerIsFollowing_);
        if ((i & 0x4) == 4)
          k |= 4;
        Data.ActionState.access$16902(localActionState, this.viewerHasMuted_);
        if ((i & 0x8) == 8)
          k |= 8;
        Data.ActionState.access$17002(localActionState, this.viewerCanReshare_);
        if ((i & 0x10) == 16)
          k |= 16;
        Data.ActionState.access$17102(localActionState, this.viewerHasRead_);
        if ((i & 0x20) == 32)
          k |= 32;
        Data.ActionState.access$17202(localActionState, this.viewerCanPlusone_);
        Data.ActionState.access$17302(localActionState, k);
        return localActionState;
      }

      public final Builder clear()
      {
        super.clear();
        this.viewerCanComment_ = false;
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.viewerIsFollowing_ = false;
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.viewerHasMuted_ = false;
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.viewerCanReshare_ = false;
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        this.viewerHasRead_ = false;
        this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        this.viewerCanPlusone_ = false;
        this.bitField0_ = (0xFFFFFFDF & this.bitField0_);
        return this;
      }

      public final Builder clearViewerCanComment()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.viewerCanComment_ = false;
        return this;
      }

      public final Builder clearViewerCanPlusone()
      {
        this.bitField0_ = (0xFFFFFFDF & this.bitField0_);
        this.viewerCanPlusone_ = false;
        return this;
      }

      public final Builder clearViewerCanReshare()
      {
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        this.viewerCanReshare_ = false;
        return this;
      }

      public final Builder clearViewerHasMuted()
      {
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.viewerHasMuted_ = false;
        return this;
      }

      public final Builder clearViewerHasRead()
      {
        this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        this.viewerHasRead_ = false;
        return this;
      }

      public final Builder clearViewerIsFollowing()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.viewerIsFollowing_ = false;
        return this;
      }

      public final Data.ActionState getDefaultInstanceForType()
      {
        return Data.ActionState.getDefaultInstance();
      }

      public final boolean getViewerCanComment()
      {
        return this.viewerCanComment_;
      }

      public final boolean getViewerCanPlusone()
      {
        return this.viewerCanPlusone_;
      }

      public final boolean getViewerCanReshare()
      {
        return this.viewerCanReshare_;
      }

      public final boolean getViewerHasMuted()
      {
        return this.viewerHasMuted_;
      }

      public final boolean getViewerHasRead()
      {
        return this.viewerHasRead_;
      }

      public final boolean getViewerIsFollowing()
      {
        return this.viewerIsFollowing_;
      }

      public final boolean hasViewerCanComment()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean hasViewerCanPlusone()
      {
        if ((0x20 & this.bitField0_) == 32);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasViewerCanReshare()
      {
        if ((0x8 & this.bitField0_) == 8);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasViewerHasMuted()
      {
        if ((0x4 & this.bitField0_) == 4);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasViewerHasRead()
      {
        if ((0x10 & this.bitField0_) == 16);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasViewerIsFollowing()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Data.ActionState paramActionState)
      {
        if (paramActionState == Data.ActionState.getDefaultInstance());
        while (true)
        {
          return this;
          if (paramActionState.hasViewerCanComment())
            setViewerCanComment(paramActionState.getViewerCanComment());
          if (paramActionState.hasViewerIsFollowing())
            setViewerIsFollowing(paramActionState.getViewerIsFollowing());
          if (paramActionState.hasViewerHasMuted())
            setViewerHasMuted(paramActionState.getViewerHasMuted());
          if (paramActionState.hasViewerCanReshare())
            setViewerCanReshare(paramActionState.getViewerCanReshare());
          if (paramActionState.hasViewerHasRead())
            setViewerHasRead(paramActionState.getViewerHasRead());
          if (paramActionState.hasViewerCanPlusone())
            setViewerCanPlusone(paramActionState.getViewerCanPlusone());
        }
      }

      public final Builder setViewerCanComment(boolean paramBoolean)
      {
        this.bitField0_ = (0x1 | this.bitField0_);
        this.viewerCanComment_ = paramBoolean;
        return this;
      }

      public final Builder setViewerCanPlusone(boolean paramBoolean)
      {
        this.bitField0_ = (0x20 | this.bitField0_);
        this.viewerCanPlusone_ = paramBoolean;
        return this;
      }

      public final Builder setViewerCanReshare(boolean paramBoolean)
      {
        this.bitField0_ = (0x8 | this.bitField0_);
        this.viewerCanReshare_ = paramBoolean;
        return this;
      }

      public final Builder setViewerHasMuted(boolean paramBoolean)
      {
        this.bitField0_ = (0x4 | this.bitField0_);
        this.viewerHasMuted_ = paramBoolean;
        return this;
      }

      public final Builder setViewerHasRead(boolean paramBoolean)
      {
        this.bitField0_ = (0x10 | this.bitField0_);
        this.viewerHasRead_ = paramBoolean;
        return this;
      }

      public final Builder setViewerIsFollowing(boolean paramBoolean)
      {
        this.bitField0_ = (0x2 | this.bitField0_);
        this.viewerIsFollowing_ = paramBoolean;
        return this;
      }
    }
  }

  public static abstract interface ActionStateOrBuilder extends MessageLiteOrBuilder
  {
    public abstract boolean getViewerCanComment();

    public abstract boolean getViewerCanPlusone();

    public abstract boolean getViewerCanReshare();

    public abstract boolean getViewerHasMuted();

    public abstract boolean getViewerHasRead();

    public abstract boolean getViewerIsFollowing();

    public abstract boolean hasViewerCanComment();

    public abstract boolean hasViewerCanPlusone();

    public abstract boolean hasViewerCanReshare();

    public abstract boolean hasViewerHasMuted();

    public abstract boolean hasViewerHasRead();

    public abstract boolean hasViewerIsFollowing();
  }

  public static final class ActivityRequestData extends GeneratedMessageLite
    implements Data.ActivityRequestDataOrBuilder
  {
    private static final ActivityRequestData defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private boolean collapsedDataOnly_;
    private int maxResults_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private Object shownActivitiesBlob_;

    static
    {
      ActivityRequestData localActivityRequestData = new ActivityRequestData();
      defaultInstance = localActivityRequestData;
      localActivityRequestData.shownActivitiesBlob_ = "";
      localActivityRequestData.maxResults_ = 20;
      localActivityRequestData.collapsedDataOnly_ = false;
    }

    private ActivityRequestData()
    {
    }

    private ActivityRequestData(Builder paramBuilder)
    {
      super();
    }

    public static ActivityRequestData getDefaultInstance()
    {
      return defaultInstance;
    }

    private ByteString getShownActivitiesBlobBytes()
    {
      Object localObject = this.shownActivitiesBlob_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.shownActivitiesBlob_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static Builder newBuilder()
    {
      return Builder.access$55400();
    }

    public static Builder newBuilder(ActivityRequestData paramActivityRequestData)
    {
      return Builder.access$55400().mergeFrom(paramActivityRequestData);
    }

    public final boolean getCollapsedDataOnly()
    {
      return this.collapsedDataOnly_;
    }

    public final ActivityRequestData getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final int getMaxResults()
    {
      return this.maxResults_;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeBytesSize(1, getShownActivitiesBlobBytes());
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeInt32Size(2, this.maxResults_);
        if ((0x4 & this.bitField0_) == 4)
          k += CodedOutputStream.computeBoolSize(3, this.collapsedDataOnly_);
        this.memoizedSerializedSize = k;
      }
    }

    public final String getShownActivitiesBlob()
    {
      Object localObject1 = this.shownActivitiesBlob_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.shownActivitiesBlob_ = str;
      }
    }

    public final boolean hasCollapsedDataOnly()
    {
      if ((0x4 & this.bitField0_) == 4);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasMaxResults()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasShownActivitiesBlob()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeBytes(1, getShownActivitiesBlobBytes());
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeInt32(2, this.maxResults_);
      if ((0x4 & this.bitField0_) == 4)
        paramCodedOutputStream.writeBool(3, this.collapsedDataOnly_);
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Data.ActivityRequestData, Builder>
      implements Data.ActivityRequestDataOrBuilder
    {
      private int bitField0_;
      private boolean collapsedDataOnly_;
      private int maxResults_ = 20;
      private Object shownActivitiesBlob_ = "";

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 10:
            this.bitField0_ = (0x1 | this.bitField0_);
            this.shownActivitiesBlob_ = paramCodedInputStream.readBytes();
            break;
          case 16:
            this.bitField0_ = (0x2 | this.bitField0_);
            this.maxResults_ = paramCodedInputStream.readInt32();
            break;
          case 24:
          }
          this.bitField0_ = (0x4 | this.bitField0_);
          this.collapsedDataOnly_ = paramCodedInputStream.readBool();
        }
      }

      public final Data.ActivityRequestData build()
      {
        Data.ActivityRequestData localActivityRequestData = buildPartial();
        if (!localActivityRequestData.isInitialized())
          throw new UninitializedMessageException();
        return localActivityRequestData;
      }

      public final Data.ActivityRequestData buildPartial()
      {
        Data.ActivityRequestData localActivityRequestData = new Data.ActivityRequestData(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Data.ActivityRequestData.access$55602(localActivityRequestData, this.shownActivitiesBlob_);
        if ((i & 0x2) == 2)
          k |= 2;
        Data.ActivityRequestData.access$55702(localActivityRequestData, this.maxResults_);
        if ((i & 0x4) == 4)
          k |= 4;
        Data.ActivityRequestData.access$55802(localActivityRequestData, this.collapsedDataOnly_);
        Data.ActivityRequestData.access$55902(localActivityRequestData, k);
        return localActivityRequestData;
      }

      public final Builder clear()
      {
        super.clear();
        this.shownActivitiesBlob_ = "";
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.maxResults_ = 20;
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.collapsedDataOnly_ = false;
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        return this;
      }

      public final Builder clearCollapsedDataOnly()
      {
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.collapsedDataOnly_ = false;
        return this;
      }

      public final Builder clearMaxResults()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.maxResults_ = 20;
        return this;
      }

      public final Builder clearShownActivitiesBlob()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.shownActivitiesBlob_ = Data.ActivityRequestData.getDefaultInstance().getShownActivitiesBlob();
        return this;
      }

      public final boolean getCollapsedDataOnly()
      {
        return this.collapsedDataOnly_;
      }

      public final Data.ActivityRequestData getDefaultInstanceForType()
      {
        return Data.ActivityRequestData.getDefaultInstance();
      }

      public final int getMaxResults()
      {
        return this.maxResults_;
      }

      public final String getShownActivitiesBlob()
      {
        Object localObject = this.shownActivitiesBlob_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.shownActivitiesBlob_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final boolean hasCollapsedDataOnly()
      {
        if ((0x4 & this.bitField0_) == 4);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasMaxResults()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasShownActivitiesBlob()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Data.ActivityRequestData paramActivityRequestData)
      {
        if (paramActivityRequestData == Data.ActivityRequestData.getDefaultInstance());
        while (true)
        {
          return this;
          if (paramActivityRequestData.hasShownActivitiesBlob())
            setShownActivitiesBlob(paramActivityRequestData.getShownActivitiesBlob());
          if (paramActivityRequestData.hasMaxResults())
            setMaxResults(paramActivityRequestData.getMaxResults());
          if (paramActivityRequestData.hasCollapsedDataOnly())
            setCollapsedDataOnly(paramActivityRequestData.getCollapsedDataOnly());
        }
      }

      public final Builder setCollapsedDataOnly(boolean paramBoolean)
      {
        this.bitField0_ = (0x4 | this.bitField0_);
        this.collapsedDataOnly_ = paramBoolean;
        return this;
      }

      public final Builder setMaxResults(int paramInt)
      {
        this.bitField0_ = (0x2 | this.bitField0_);
        this.maxResults_ = paramInt;
        return this;
      }

      public final Builder setShownActivitiesBlob(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x1 | this.bitField0_);
        this.shownActivitiesBlob_ = paramString;
        return this;
      }
    }
  }

  public static abstract interface ActivityRequestDataOrBuilder extends MessageLiteOrBuilder
  {
    public abstract boolean getCollapsedDataOnly();

    public abstract int getMaxResults();

    public abstract String getShownActivitiesBlob();

    public abstract boolean hasCollapsedDataOnly();

    public abstract boolean hasMaxResults();

    public abstract boolean hasShownActivitiesBlob();
  }

  public static final class ActivityResults extends GeneratedMessageLite
    implements Data.ActivityResultsOrBuilder
  {
    private static final ActivityResults defaultInstance;
    private static final long serialVersionUID;
    private List<Data.PerfectStreamActivity> activity_;
    private int bitField0_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private Object shownActivitiesBlob_;

    static
    {
      ActivityResults localActivityResults = new ActivityResults();
      defaultInstance = localActivityResults;
      localActivityResults.activity_ = Collections.emptyList();
      localActivityResults.shownActivitiesBlob_ = "";
    }

    private ActivityResults()
    {
    }

    private ActivityResults(Builder paramBuilder)
    {
      super();
    }

    public static ActivityResults getDefaultInstance()
    {
      return defaultInstance;
    }

    private ByteString getShownActivitiesBlobBytes()
    {
      Object localObject = this.shownActivitiesBlob_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.shownActivitiesBlob_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static Builder newBuilder()
    {
      return Builder.access$57400();
    }

    public static Builder newBuilder(ActivityResults paramActivityResults)
    {
      return Builder.access$57400().mergeFrom(paramActivityResults);
    }

    public final Data.PerfectStreamActivity getActivity(int paramInt)
    {
      return (Data.PerfectStreamActivity)this.activity_.get(paramInt);
    }

    public final int getActivityCount()
    {
      return this.activity_.size();
    }

    public final List<Data.PerfectStreamActivity> getActivityList()
    {
      return this.activity_;
    }

    public final Data.PerfectStreamActivityOrBuilder getActivityOrBuilder(int paramInt)
    {
      return (Data.PerfectStreamActivityOrBuilder)this.activity_.get(paramInt);
    }

    public final List<? extends Data.PerfectStreamActivityOrBuilder> getActivityOrBuilderList()
    {
      return this.activity_;
    }

    public final ActivityResults getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int j;
      for (int m = i; ; m = j)
      {
        return m;
        j = 0;
        for (int k = 0; k < this.activity_.size(); k++)
          j += CodedOutputStream.computeMessageSize(1, (MessageLite)this.activity_.get(k));
        if ((0x1 & this.bitField0_) == 1)
          j += CodedOutputStream.computeBytesSize(2, getShownActivitiesBlobBytes());
        this.memoizedSerializedSize = j;
      }
    }

    public final String getShownActivitiesBlob()
    {
      Object localObject1 = this.shownActivitiesBlob_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.shownActivitiesBlob_ = str;
      }
    }

    public final boolean hasShownActivitiesBlob()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        for (int k = 0; ; k++)
        {
          if (k >= getActivityCount())
            break label61;
          if (!getActivity(k).isInitialized())
          {
            this.memoizedIsInitialized = 0;
            i = 0;
            break;
          }
        }
        label61: this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      for (int i = 0; i < this.activity_.size(); i++)
        paramCodedOutputStream.writeMessage(1, (MessageLite)this.activity_.get(i));
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeBytes(2, getShownActivitiesBlobBytes());
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Data.ActivityResults, Builder>
      implements Data.ActivityResultsOrBuilder
    {
      private List<Data.PerfectStreamActivity> activity_ = Collections.emptyList();
      private int bitField0_;
      private Object shownActivitiesBlob_ = "";

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private void ensureActivityIsMutable()
      {
        if ((0x1 & this.bitField0_) != 1)
        {
          this.activity_ = new ArrayList(this.activity_);
          this.bitField0_ = (0x1 | this.bitField0_);
        }
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 10:
            Data.PerfectStreamActivity.Builder localBuilder = Data.PerfectStreamActivity.newBuilder();
            paramCodedInputStream.readMessage(localBuilder, paramExtensionRegistryLite);
            addActivity(localBuilder.buildPartial());
            break;
          case 18:
          }
          this.bitField0_ = (0x2 | this.bitField0_);
          this.shownActivitiesBlob_ = paramCodedInputStream.readBytes();
        }
      }

      public final Builder addActivity(int paramInt, Data.PerfectStreamActivity.Builder paramBuilder)
      {
        ensureActivityIsMutable();
        this.activity_.add(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder addActivity(int paramInt, Data.PerfectStreamActivity paramPerfectStreamActivity)
      {
        if (paramPerfectStreamActivity == null)
          throw new NullPointerException();
        ensureActivityIsMutable();
        this.activity_.add(paramInt, paramPerfectStreamActivity);
        return this;
      }

      public final Builder addActivity(Data.PerfectStreamActivity.Builder paramBuilder)
      {
        ensureActivityIsMutable();
        this.activity_.add(paramBuilder.build());
        return this;
      }

      public final Builder addActivity(Data.PerfectStreamActivity paramPerfectStreamActivity)
      {
        if (paramPerfectStreamActivity == null)
          throw new NullPointerException();
        ensureActivityIsMutable();
        this.activity_.add(paramPerfectStreamActivity);
        return this;
      }

      public final Builder addAllActivity(Iterable<? extends Data.PerfectStreamActivity> paramIterable)
      {
        ensureActivityIsMutable();
        GeneratedMessageLite.Builder.addAll(paramIterable, this.activity_);
        return this;
      }

      public final Data.ActivityResults build()
      {
        Data.ActivityResults localActivityResults = buildPartial();
        if (!localActivityResults.isInitialized())
          throw new UninitializedMessageException();
        return localActivityResults;
      }

      public final Data.ActivityResults buildPartial()
      {
        Data.ActivityResults localActivityResults = new Data.ActivityResults(this, (byte)0);
        int i = this.bitField0_;
        if ((0x1 & this.bitField0_) == 1)
        {
          this.activity_ = Collections.unmodifiableList(this.activity_);
          this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        }
        Data.ActivityResults.access$57602(localActivityResults, this.activity_);
        int j = i & 0x2;
        int k = 0;
        if (j == 2)
          k = 1;
        Data.ActivityResults.access$57702(localActivityResults, this.shownActivitiesBlob_);
        Data.ActivityResults.access$57802(localActivityResults, k);
        return localActivityResults;
      }

      public final Builder clear()
      {
        super.clear();
        this.activity_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.shownActivitiesBlob_ = "";
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        return this;
      }

      public final Builder clearActivity()
      {
        this.activity_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        return this;
      }

      public final Builder clearShownActivitiesBlob()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.shownActivitiesBlob_ = Data.ActivityResults.getDefaultInstance().getShownActivitiesBlob();
        return this;
      }

      public final Data.PerfectStreamActivity getActivity(int paramInt)
      {
        return (Data.PerfectStreamActivity)this.activity_.get(paramInt);
      }

      public final int getActivityCount()
      {
        return this.activity_.size();
      }

      public final List<Data.PerfectStreamActivity> getActivityList()
      {
        return Collections.unmodifiableList(this.activity_);
      }

      public final Data.ActivityResults getDefaultInstanceForType()
      {
        return Data.ActivityResults.getDefaultInstance();
      }

      public final String getShownActivitiesBlob()
      {
        Object localObject = this.shownActivitiesBlob_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.shownActivitiesBlob_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final boolean hasShownActivitiesBlob()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean isInitialized()
      {
        int i = 0;
        if (i < getActivityCount())
          if (getActivity(i).isInitialized());
        for (boolean bool = false; ; bool = true)
        {
          return bool;
          i++;
          break;
        }
      }

      public final Builder mergeFrom(Data.ActivityResults paramActivityResults)
      {
        if (paramActivityResults == Data.ActivityResults.getDefaultInstance());
        label71: label90: 
        while (true)
        {
          return this;
          if (!paramActivityResults.activity_.isEmpty())
          {
            if (!this.activity_.isEmpty())
              break label71;
            this.activity_ = paramActivityResults.activity_;
            this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
          }
          while (true)
          {
            if (!paramActivityResults.hasShownActivitiesBlob())
              break label90;
            setShownActivitiesBlob(paramActivityResults.getShownActivitiesBlob());
            break;
            ensureActivityIsMutable();
            this.activity_.addAll(paramActivityResults.activity_);
          }
        }
      }

      public final Builder setActivity(int paramInt, Data.PerfectStreamActivity.Builder paramBuilder)
      {
        ensureActivityIsMutable();
        this.activity_.set(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder setActivity(int paramInt, Data.PerfectStreamActivity paramPerfectStreamActivity)
      {
        if (paramPerfectStreamActivity == null)
          throw new NullPointerException();
        ensureActivityIsMutable();
        this.activity_.set(paramInt, paramPerfectStreamActivity);
        return this;
      }

      public final Builder setShownActivitiesBlob(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x2 | this.bitField0_);
        this.shownActivitiesBlob_ = paramString;
        return this;
      }
    }
  }

  public static abstract interface ActivityResultsOrBuilder extends MessageLiteOrBuilder
  {
    public abstract Data.PerfectStreamActivity getActivity(int paramInt);

    public abstract int getActivityCount();

    public abstract List<Data.PerfectStreamActivity> getActivityList();

    public abstract String getShownActivitiesBlob();

    public abstract boolean hasShownActivitiesBlob();
  }

  public static final class AlbumIdentifier extends GeneratedMessageLite
    implements Data.AlbumIdentifierOrBuilder
  {
    private static final AlbumIdentifier defaultInstance;
    private static final long serialVersionUID;
    private long albumId_;
    private int bitField0_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private Object ownerId_;
    private Type type_;

    static
    {
      AlbumIdentifier localAlbumIdentifier = new AlbumIdentifier();
      defaultInstance = localAlbumIdentifier;
      localAlbumIdentifier.type_ = Type.FROM_YOUR_CIRCLES;
      localAlbumIdentifier.ownerId_ = "";
      localAlbumIdentifier.albumId_ = 0L;
    }

    private AlbumIdentifier()
    {
    }

    private AlbumIdentifier(Builder paramBuilder)
    {
      super();
    }

    public static AlbumIdentifier getDefaultInstance()
    {
      return defaultInstance;
    }

    private ByteString getOwnerIdBytes()
    {
      Object localObject = this.ownerId_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.ownerId_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static Builder newBuilder()
    {
      return Builder.access$18300();
    }

    public static Builder newBuilder(AlbumIdentifier paramAlbumIdentifier)
    {
      return Builder.access$18300().mergeFrom(paramAlbumIdentifier);
    }

    public final long getAlbumId()
    {
      return this.albumId_;
    }

    public final AlbumIdentifier getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final String getOwnerId()
    {
      Object localObject1 = this.ownerId_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.ownerId_ = str;
      }
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeEnumSize(1, this.type_.getNumber());
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeBytesSize(2, getOwnerIdBytes());
        if ((0x4 & this.bitField0_) == 4)
          k += CodedOutputStream.computeInt64Size(3, this.albumId_);
        this.memoizedSerializedSize = k;
      }
    }

    public final Type getType()
    {
      return this.type_;
    }

    public final boolean hasAlbumId()
    {
      if ((0x4 & this.bitField0_) == 4);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasOwnerId()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasType()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeEnum(1, this.type_.getNumber());
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeBytes(2, getOwnerIdBytes());
      if ((0x4 & this.bitField0_) == 4)
        paramCodedOutputStream.writeInt64(3, this.albumId_);
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Data.AlbumIdentifier, Builder>
      implements Data.AlbumIdentifierOrBuilder
    {
      private long albumId_;
      private int bitField0_;
      private Object ownerId_ = "";
      private Data.AlbumIdentifier.Type type_ = Data.AlbumIdentifier.Type.FROM_YOUR_CIRCLES;

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 8:
            Data.AlbumIdentifier.Type localType = Data.AlbumIdentifier.Type.valueOf(paramCodedInputStream.readEnum());
            if (localType == null)
              continue;
            this.bitField0_ = (0x1 | this.bitField0_);
            this.type_ = localType;
            break;
          case 18:
            this.bitField0_ = (0x2 | this.bitField0_);
            this.ownerId_ = paramCodedInputStream.readBytes();
            break;
          case 24:
          }
          this.bitField0_ = (0x4 | this.bitField0_);
          this.albumId_ = paramCodedInputStream.readInt64();
        }
      }

      public final Data.AlbumIdentifier build()
      {
        Data.AlbumIdentifier localAlbumIdentifier = buildPartial();
        if (!localAlbumIdentifier.isInitialized())
          throw new UninitializedMessageException();
        return localAlbumIdentifier;
      }

      public final Data.AlbumIdentifier buildPartial()
      {
        Data.AlbumIdentifier localAlbumIdentifier = new Data.AlbumIdentifier(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Data.AlbumIdentifier.access$18502(localAlbumIdentifier, this.type_);
        if ((i & 0x2) == 2)
          k |= 2;
        Data.AlbumIdentifier.access$18602(localAlbumIdentifier, this.ownerId_);
        if ((i & 0x4) == 4)
          k |= 4;
        Data.AlbumIdentifier.access$18702(localAlbumIdentifier, this.albumId_);
        Data.AlbumIdentifier.access$18802(localAlbumIdentifier, k);
        return localAlbumIdentifier;
      }

      public final Builder clear()
      {
        super.clear();
        this.type_ = Data.AlbumIdentifier.Type.FROM_YOUR_CIRCLES;
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.ownerId_ = "";
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.albumId_ = 0L;
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        return this;
      }

      public final Builder clearAlbumId()
      {
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.albumId_ = 0L;
        return this;
      }

      public final Builder clearOwnerId()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.ownerId_ = Data.AlbumIdentifier.getDefaultInstance().getOwnerId();
        return this;
      }

      public final Builder clearType()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.type_ = Data.AlbumIdentifier.Type.FROM_YOUR_CIRCLES;
        return this;
      }

      public final long getAlbumId()
      {
        return this.albumId_;
      }

      public final Data.AlbumIdentifier getDefaultInstanceForType()
      {
        return Data.AlbumIdentifier.getDefaultInstance();
      }

      public final String getOwnerId()
      {
        Object localObject = this.ownerId_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.ownerId_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final Data.AlbumIdentifier.Type getType()
      {
        return this.type_;
      }

      public final boolean hasAlbumId()
      {
        if ((0x4 & this.bitField0_) == 4);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasOwnerId()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasType()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Data.AlbumIdentifier paramAlbumIdentifier)
      {
        if (paramAlbumIdentifier == Data.AlbumIdentifier.getDefaultInstance());
        while (true)
        {
          return this;
          if (paramAlbumIdentifier.hasType())
            setType(paramAlbumIdentifier.getType());
          if (paramAlbumIdentifier.hasOwnerId())
            setOwnerId(paramAlbumIdentifier.getOwnerId());
          if (paramAlbumIdentifier.hasAlbumId())
            setAlbumId(paramAlbumIdentifier.getAlbumId());
        }
      }

      public final Builder setAlbumId(long paramLong)
      {
        this.bitField0_ = (0x4 | this.bitField0_);
        this.albumId_ = paramLong;
        return this;
      }

      public final Builder setOwnerId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x2 | this.bitField0_);
        this.ownerId_ = paramString;
        return this;
      }

      public final Builder setType(Data.AlbumIdentifier.Type paramType)
      {
        if (paramType == null)
          throw new NullPointerException();
        this.bitField0_ = (0x1 | this.bitField0_);
        this.type_ = paramType;
        return this;
      }
    }

    public static enum Type
      implements Internal.EnumLite
    {
      private static Internal.EnumLiteMap<Type> internalValueMap = new Internal.EnumLiteMap()
      {
      };
      private final int value;

      static
      {
        FROM_PHONE = new Type("FROM_PHONE", 2, 3);
        FROM_POSTS = new Type("FROM_POSTS", 3, 4);
        FROM_MESSENGER = new Type("FROM_MESSENGER", 4, 5);
        PROFILE_PHOTOS = new Type("PROFILE_PHOTOS", 5, 6);
        BY_ALBUM_ID = new Type("BY_ALBUM_ID", 6, 7);
        Type[] arrayOfType = new Type[7];
        arrayOfType[0] = FROM_YOUR_CIRCLES;
        arrayOfType[1] = PHOTOS_OF_YOU;
        arrayOfType[2] = FROM_PHONE;
        arrayOfType[3] = FROM_POSTS;
        arrayOfType[4] = FROM_MESSENGER;
        arrayOfType[5] = PROFILE_PHOTOS;
        arrayOfType[6] = BY_ALBUM_ID;
      }

      private Type(int paramInt1, int paramInt2)
      {
        this.value = paramInt1;
      }

      public static Type valueOf(int paramInt)
      {
        Type localType;
        switch (paramInt)
        {
        default:
          localType = null;
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
        case 6:
        case 7:
        }
        while (true)
        {
          return localType;
          localType = FROM_YOUR_CIRCLES;
          continue;
          localType = PHOTOS_OF_YOU;
          continue;
          localType = FROM_PHONE;
          continue;
          localType = FROM_POSTS;
          continue;
          localType = FROM_MESSENGER;
          continue;
          localType = PROFILE_PHOTOS;
          continue;
          localType = BY_ALBUM_ID;
        }
      }

      public final int getNumber()
      {
        return this.value;
      }
    }
  }

  public static abstract interface AlbumIdentifierOrBuilder extends MessageLiteOrBuilder
  {
    public abstract long getAlbumId();

    public abstract String getOwnerId();

    public abstract Data.AlbumIdentifier.Type getType();

    public abstract boolean hasAlbumId();

    public abstract boolean hasOwnerId();

    public abstract boolean hasType();
  }

  public static final class Audience extends GeneratedMessageLite
    implements Data.AudienceOrBuilder
  {
    private static final Audience defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private List<Data.Circle> circle_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private boolean public_;
    private List<Data.Person> user_;

    static
    {
      Audience localAudience = new Audience();
      defaultInstance = localAudience;
      localAudience.user_ = Collections.emptyList();
      localAudience.circle_ = Collections.emptyList();
      localAudience.public_ = false;
    }

    private Audience()
    {
    }

    private Audience(Builder paramBuilder)
    {
      super();
    }

    public static Audience getDefaultInstance()
    {
      return defaultInstance;
    }

    public static Builder newBuilder()
    {
      return Builder.access$14000();
    }

    public static Builder newBuilder(Audience paramAudience)
    {
      return Builder.access$14000().mergeFrom(paramAudience);
    }

    public final Data.Circle getCircle(int paramInt)
    {
      return (Data.Circle)this.circle_.get(paramInt);
    }

    public final int getCircleCount()
    {
      return this.circle_.size();
    }

    public final List<Data.Circle> getCircleList()
    {
      return this.circle_;
    }

    public final Data.CircleOrBuilder getCircleOrBuilder(int paramInt)
    {
      return (Data.CircleOrBuilder)this.circle_.get(paramInt);
    }

    public final List<? extends Data.CircleOrBuilder> getCircleOrBuilderList()
    {
      return this.circle_;
    }

    public final Audience getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    @Deprecated
    public final boolean getPublic()
    {
      return this.public_;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int j;
      for (int n = i; ; n = j)
      {
        return n;
        j = 0;
        for (int k = 0; k < this.user_.size(); k++)
          j += CodedOutputStream.computeMessageSize(1, (MessageLite)this.user_.get(k));
        for (int m = 0; m < this.circle_.size(); m++)
          j += CodedOutputStream.computeMessageSize(2, (MessageLite)this.circle_.get(m));
        if ((0x1 & this.bitField0_) == 1)
          j += CodedOutputStream.computeBoolSize(3, this.public_);
        this.memoizedSerializedSize = j;
      }
    }

    public final Data.Person getUser(int paramInt)
    {
      return (Data.Person)this.user_.get(paramInt);
    }

    public final int getUserCount()
    {
      return this.user_.size();
    }

    public final List<Data.Person> getUserList()
    {
      return this.user_;
    }

    public final Data.PersonOrBuilder getUserOrBuilder(int paramInt)
    {
      return (Data.PersonOrBuilder)this.user_.get(paramInt);
    }

    public final List<? extends Data.PersonOrBuilder> getUserOrBuilderList()
    {
      return this.user_;
    }

    @Deprecated
    public final boolean hasPublic()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      for (int i = 0; i < this.user_.size(); i++)
        paramCodedOutputStream.writeMessage(1, (MessageLite)this.user_.get(i));
      for (int j = 0; j < this.circle_.size(); j++)
        paramCodedOutputStream.writeMessage(2, (MessageLite)this.circle_.get(j));
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeBool(3, this.public_);
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Data.Audience, Builder>
      implements Data.AudienceOrBuilder
    {
      private int bitField0_;
      private List<Data.Circle> circle_ = Collections.emptyList();
      private boolean public_;
      private List<Data.Person> user_ = Collections.emptyList();

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private void ensureCircleIsMutable()
      {
        if ((0x2 & this.bitField0_) != 2)
        {
          this.circle_ = new ArrayList(this.circle_);
          this.bitField0_ = (0x2 | this.bitField0_);
        }
      }

      private void ensureUserIsMutable()
      {
        if ((0x1 & this.bitField0_) != 1)
        {
          this.user_ = new ArrayList(this.user_);
          this.bitField0_ = (0x1 | this.bitField0_);
        }
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 10:
            Data.Person.Builder localBuilder1 = Data.Person.newBuilder();
            paramCodedInputStream.readMessage(localBuilder1, paramExtensionRegistryLite);
            addUser(localBuilder1.buildPartial());
            break;
          case 18:
            Data.Circle.Builder localBuilder = Data.Circle.newBuilder();
            paramCodedInputStream.readMessage(localBuilder, paramExtensionRegistryLite);
            addCircle(localBuilder.buildPartial());
            break;
          case 24:
          }
          this.bitField0_ = (0x4 | this.bitField0_);
          this.public_ = paramCodedInputStream.readBool();
        }
      }

      public final Builder addAllCircle(Iterable<? extends Data.Circle> paramIterable)
      {
        ensureCircleIsMutable();
        GeneratedMessageLite.Builder.addAll(paramIterable, this.circle_);
        return this;
      }

      public final Builder addAllUser(Iterable<? extends Data.Person> paramIterable)
      {
        ensureUserIsMutable();
        GeneratedMessageLite.Builder.addAll(paramIterable, this.user_);
        return this;
      }

      public final Builder addCircle(int paramInt, Data.Circle.Builder paramBuilder)
      {
        ensureCircleIsMutable();
        this.circle_.add(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder addCircle(int paramInt, Data.Circle paramCircle)
      {
        if (paramCircle == null)
          throw new NullPointerException();
        ensureCircleIsMutable();
        this.circle_.add(paramInt, paramCircle);
        return this;
      }

      public final Builder addCircle(Data.Circle.Builder paramBuilder)
      {
        ensureCircleIsMutable();
        this.circle_.add(paramBuilder.build());
        return this;
      }

      public final Builder addCircle(Data.Circle paramCircle)
      {
        if (paramCircle == null)
          throw new NullPointerException();
        ensureCircleIsMutable();
        this.circle_.add(paramCircle);
        return this;
      }

      public final Builder addUser(int paramInt, Data.Person.Builder paramBuilder)
      {
        ensureUserIsMutable();
        this.user_.add(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder addUser(int paramInt, Data.Person paramPerson)
      {
        if (paramPerson == null)
          throw new NullPointerException();
        ensureUserIsMutable();
        this.user_.add(paramInt, paramPerson);
        return this;
      }

      public final Builder addUser(Data.Person.Builder paramBuilder)
      {
        ensureUserIsMutable();
        this.user_.add(paramBuilder.build());
        return this;
      }

      public final Builder addUser(Data.Person paramPerson)
      {
        if (paramPerson == null)
          throw new NullPointerException();
        ensureUserIsMutable();
        this.user_.add(paramPerson);
        return this;
      }

      public final Data.Audience build()
      {
        Data.Audience localAudience = buildPartial();
        if (!localAudience.isInitialized())
          throw new UninitializedMessageException();
        return localAudience;
      }

      public final Data.Audience buildPartial()
      {
        Data.Audience localAudience = new Data.Audience(this, (byte)0);
        int i = this.bitField0_;
        if ((0x1 & this.bitField0_) == 1)
        {
          this.user_ = Collections.unmodifiableList(this.user_);
          this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        }
        Data.Audience.access$14202(localAudience, this.user_);
        if ((0x2 & this.bitField0_) == 2)
        {
          this.circle_ = Collections.unmodifiableList(this.circle_);
          this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        }
        Data.Audience.access$14302(localAudience, this.circle_);
        int j = i & 0x4;
        int k = 0;
        if (j == 4)
          k = 1;
        Data.Audience.access$14402(localAudience, this.public_);
        Data.Audience.access$14502(localAudience, k);
        return localAudience;
      }

      public final Builder clear()
      {
        super.clear();
        this.user_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.circle_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.public_ = false;
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        return this;
      }

      public final Builder clearCircle()
      {
        this.circle_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        return this;
      }

      @Deprecated
      public final Builder clearPublic()
      {
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.public_ = false;
        return this;
      }

      public final Builder clearUser()
      {
        this.user_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        return this;
      }

      public final Data.Circle getCircle(int paramInt)
      {
        return (Data.Circle)this.circle_.get(paramInt);
      }

      public final int getCircleCount()
      {
        return this.circle_.size();
      }

      public final List<Data.Circle> getCircleList()
      {
        return Collections.unmodifiableList(this.circle_);
      }

      public final Data.Audience getDefaultInstanceForType()
      {
        return Data.Audience.getDefaultInstance();
      }

      @Deprecated
      public final boolean getPublic()
      {
        return this.public_;
      }

      public final Data.Person getUser(int paramInt)
      {
        return (Data.Person)this.user_.get(paramInt);
      }

      public final int getUserCount()
      {
        return this.user_.size();
      }

      public final List<Data.Person> getUserList()
      {
        return Collections.unmodifiableList(this.user_);
      }

      @Deprecated
      public final boolean hasPublic()
      {
        if ((0x4 & this.bitField0_) == 4);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Data.Audience paramAudience)
      {
        if (paramAudience == Data.Audience.getDefaultInstance());
        label135: label154: 
        while (true)
        {
          return this;
          if (!paramAudience.user_.isEmpty())
          {
            if (this.user_.isEmpty())
            {
              this.user_ = paramAudience.user_;
              this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
            }
          }
          else
            label52: if (!paramAudience.circle_.isEmpty())
            {
              if (!this.circle_.isEmpty())
                break label135;
              this.circle_ = paramAudience.circle_;
              this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
            }
          while (true)
          {
            if (!paramAudience.hasPublic())
              break label154;
            setPublic(paramAudience.getPublic());
            break;
            ensureUserIsMutable();
            this.user_.addAll(paramAudience.user_);
            break label52;
            ensureCircleIsMutable();
            this.circle_.addAll(paramAudience.circle_);
          }
        }
      }

      public final Builder setCircle(int paramInt, Data.Circle.Builder paramBuilder)
      {
        ensureCircleIsMutable();
        this.circle_.set(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder setCircle(int paramInt, Data.Circle paramCircle)
      {
        if (paramCircle == null)
          throw new NullPointerException();
        ensureCircleIsMutable();
        this.circle_.set(paramInt, paramCircle);
        return this;
      }

      @Deprecated
      public final Builder setPublic(boolean paramBoolean)
      {
        this.bitField0_ = (0x4 | this.bitField0_);
        this.public_ = paramBoolean;
        return this;
      }

      public final Builder setUser(int paramInt, Data.Person.Builder paramBuilder)
      {
        ensureUserIsMutable();
        this.user_.set(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder setUser(int paramInt, Data.Person paramPerson)
      {
        if (paramPerson == null)
          throw new NullPointerException();
        ensureUserIsMutable();
        this.user_.set(paramInt, paramPerson);
        return this;
      }
    }
  }

  public static abstract interface AudienceOrBuilder extends MessageLiteOrBuilder
  {
    public abstract Data.Circle getCircle(int paramInt);

    public abstract int getCircleCount();

    public abstract List<Data.Circle> getCircleList();

    @Deprecated
    public abstract boolean getPublic();

    public abstract Data.Person getUser(int paramInt);

    public abstract int getUserCount();

    public abstract List<Data.Person> getUserList();

    @Deprecated
    public abstract boolean hasPublic();
  }

  public static final class Circle extends GeneratedMessageLite
    implements Data.CircleOrBuilder
  {
    private static final Circle defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private Circles.MobileCircle.Type circleType_;
    private Object id_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private Object name_;
    private int size_;
    private Type type_;

    static
    {
      Circle localCircle = new Circle();
      defaultInstance = localCircle;
      localCircle.type_ = Type.PERSONAL;
      localCircle.id_ = "";
      localCircle.name_ = "";
      localCircle.size_ = 0;
      localCircle.circleType_ = Circles.MobileCircle.Type.PERSONAL;
    }

    private Circle()
    {
    }

    private Circle(Builder paramBuilder)
    {
      super();
    }

    public static Circle getDefaultInstance()
    {
      return defaultInstance;
    }

    private ByteString getIdBytes()
    {
      Object localObject = this.id_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.id_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    private ByteString getNameBytes()
    {
      Object localObject = this.name_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.name_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static Builder newBuilder()
    {
      return Builder.access$15600();
    }

    public final Circles.MobileCircle.Type getCircleType()
    {
      return this.circleType_;
    }

    public final Circle getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final String getId()
    {
      Object localObject1 = this.id_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.id_ = str;
      }
    }

    public final String getName()
    {
      Object localObject1 = this.name_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.name_ = str;
      }
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeEnumSize(1, this.type_.getNumber());
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeBytesSize(2, getIdBytes());
        if ((0x4 & this.bitField0_) == 4)
          k += CodedOutputStream.computeBytesSize(3, getNameBytes());
        if ((0x8 & this.bitField0_) == 8)
          k += CodedOutputStream.computeInt32Size(4, this.size_);
        if ((0x10 & this.bitField0_) == 16)
          k += CodedOutputStream.computeEnumSize(5, this.circleType_.getNumber());
        this.memoizedSerializedSize = k;
      }
    }

    public final int getSize()
    {
      return this.size_;
    }

    @Deprecated
    public final Type getType()
    {
      return this.type_;
    }

    public final boolean hasCircleType()
    {
      if ((0x10 & this.bitField0_) == 16);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasId()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasName()
    {
      if ((0x4 & this.bitField0_) == 4);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasSize()
    {
      if ((0x8 & this.bitField0_) == 8);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    @Deprecated
    public final boolean hasType()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeEnum(1, this.type_.getNumber());
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeBytes(2, getIdBytes());
      if ((0x4 & this.bitField0_) == 4)
        paramCodedOutputStream.writeBytes(3, getNameBytes());
      if ((0x8 & this.bitField0_) == 8)
        paramCodedOutputStream.writeInt32(4, this.size_);
      if ((0x10 & this.bitField0_) == 16)
        paramCodedOutputStream.writeEnum(5, this.circleType_.getNumber());
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Data.Circle, Builder>
      implements Data.CircleOrBuilder
    {
      private int bitField0_;
      private Circles.MobileCircle.Type circleType_ = Circles.MobileCircle.Type.PERSONAL;
      private Object id_ = "";
      private Object name_ = "";
      private int size_;
      private Data.Circle.Type type_ = Data.Circle.Type.PERSONAL;

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 8:
            Data.Circle.Type localType1 = Data.Circle.Type.valueOf(paramCodedInputStream.readEnum());
            if (localType1 == null)
              continue;
            this.bitField0_ = (0x1 | this.bitField0_);
            this.type_ = localType1;
            break;
          case 18:
            this.bitField0_ = (0x2 | this.bitField0_);
            this.id_ = paramCodedInputStream.readBytes();
            break;
          case 26:
            this.bitField0_ = (0x4 | this.bitField0_);
            this.name_ = paramCodedInputStream.readBytes();
            break;
          case 32:
            this.bitField0_ = (0x8 | this.bitField0_);
            this.size_ = paramCodedInputStream.readInt32();
            break;
          case 40:
          }
          Circles.MobileCircle.Type localType = Circles.MobileCircle.Type.valueOf(paramCodedInputStream.readEnum());
          if (localType != null)
          {
            this.bitField0_ = (0x10 | this.bitField0_);
            this.circleType_ = localType;
          }
        }
      }

      public final Data.Circle build()
      {
        Data.Circle localCircle = buildPartial();
        if (!localCircle.isInitialized())
          throw new UninitializedMessageException();
        return localCircle;
      }

      public final Data.Circle buildPartial()
      {
        Data.Circle localCircle = new Data.Circle(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Data.Circle.access$15802(localCircle, this.type_);
        if ((i & 0x2) == 2)
          k |= 2;
        Data.Circle.access$15902(localCircle, this.id_);
        if ((i & 0x4) == 4)
          k |= 4;
        Data.Circle.access$16002(localCircle, this.name_);
        if ((i & 0x8) == 8)
          k |= 8;
        Data.Circle.access$16102(localCircle, this.size_);
        if ((i & 0x10) == 16)
          k |= 16;
        Data.Circle.access$16202(localCircle, this.circleType_);
        Data.Circle.access$16302(localCircle, k);
        return localCircle;
      }

      public final Builder clear()
      {
        super.clear();
        this.type_ = Data.Circle.Type.PERSONAL;
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.id_ = "";
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.name_ = "";
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.size_ = 0;
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        this.circleType_ = Circles.MobileCircle.Type.PERSONAL;
        this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        return this;
      }

      public final Builder clearCircleType()
      {
        this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        this.circleType_ = Circles.MobileCircle.Type.PERSONAL;
        return this;
      }

      public final Builder clearId()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.id_ = Data.Circle.getDefaultInstance().getId();
        return this;
      }

      public final Builder clearName()
      {
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.name_ = Data.Circle.getDefaultInstance().getName();
        return this;
      }

      public final Builder clearSize()
      {
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        this.size_ = 0;
        return this;
      }

      @Deprecated
      public final Builder clearType()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.type_ = Data.Circle.Type.PERSONAL;
        return this;
      }

      public final Circles.MobileCircle.Type getCircleType()
      {
        return this.circleType_;
      }

      public final Data.Circle getDefaultInstanceForType()
      {
        return Data.Circle.getDefaultInstance();
      }

      public final String getId()
      {
        Object localObject = this.id_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.id_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final String getName()
      {
        Object localObject = this.name_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.name_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final int getSize()
      {
        return this.size_;
      }

      @Deprecated
      public final Data.Circle.Type getType()
      {
        return this.type_;
      }

      public final boolean hasCircleType()
      {
        if ((0x10 & this.bitField0_) == 16);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasId()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasName()
      {
        if ((0x4 & this.bitField0_) == 4);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasSize()
      {
        if ((0x8 & this.bitField0_) == 8);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      @Deprecated
      public final boolean hasType()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Data.Circle paramCircle)
      {
        if (paramCircle == Data.Circle.getDefaultInstance());
        while (true)
        {
          return this;
          if (paramCircle.hasType())
            setType(paramCircle.getType());
          if (paramCircle.hasId())
            setId(paramCircle.getId());
          if (paramCircle.hasName())
            setName(paramCircle.getName());
          if (paramCircle.hasSize())
            setSize(paramCircle.getSize());
          if (paramCircle.hasCircleType())
            setCircleType(paramCircle.getCircleType());
        }
      }

      public final Builder setCircleType(Circles.MobileCircle.Type paramType)
      {
        if (paramType == null)
          throw new NullPointerException();
        this.bitField0_ = (0x10 | this.bitField0_);
        this.circleType_ = paramType;
        return this;
      }

      public final Builder setId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x2 | this.bitField0_);
        this.id_ = paramString;
        return this;
      }

      public final Builder setName(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x4 | this.bitField0_);
        this.name_ = paramString;
        return this;
      }

      public final Builder setSize(int paramInt)
      {
        this.bitField0_ = (0x8 | this.bitField0_);
        this.size_ = paramInt;
        return this;
      }

      @Deprecated
      public final Builder setType(Data.Circle.Type paramType)
      {
        if (paramType == null)
          throw new NullPointerException();
        this.bitField0_ = (0x1 | this.bitField0_);
        this.type_ = paramType;
        return this;
      }
    }

    public static enum Type
      implements Internal.EnumLite
    {
      private static Internal.EnumLiteMap<Type> internalValueMap = new Internal.EnumLiteMap()
      {
      };
      private final int value;

      static
      {
        Type[] arrayOfType = new Type[2];
        arrayOfType[0] = PERSONAL;
        arrayOfType[1] = SHARED_PRIVATE;
      }

      private Type(int paramInt1, int paramInt2)
      {
        this.value = paramInt1;
      }

      public static Type valueOf(int paramInt)
      {
        Type localType;
        switch (paramInt)
        {
        default:
          localType = null;
        case 1:
        case 2:
        }
        while (true)
        {
          return localType;
          localType = PERSONAL;
          continue;
          localType = SHARED_PRIVATE;
        }
      }

      public final int getNumber()
      {
        return this.value;
      }
    }
  }

  public static final class CircleActionData extends GeneratedMessageLite
    implements Data.CircleActionDataOrBuilder
  {
    private static final CircleActionData defaultInstance;
    private static final long serialVersionUID;
    private LazyStringList gaiaId_;
    private LazyStringList lowQualityObfuscatedGaiaId_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private LazyStringList name_;
    private List<Contact.MobileContact.ProfileType> profileType_;

    static
    {
      CircleActionData localCircleActionData = new CircleActionData();
      defaultInstance = localCircleActionData;
      localCircleActionData.gaiaId_ = LazyStringArrayList.EMPTY;
      localCircleActionData.name_ = LazyStringArrayList.EMPTY;
      localCircleActionData.profileType_ = Collections.emptyList();
      localCircleActionData.lowQualityObfuscatedGaiaId_ = LazyStringArrayList.EMPTY;
    }

    private CircleActionData()
    {
    }

    private CircleActionData(Builder paramBuilder)
    {
      super();
    }

    public static CircleActionData getDefaultInstance()
    {
      return defaultInstance;
    }

    public static Builder newBuilder()
    {
      return Builder.access$37100();
    }

    public static Builder newBuilder(CircleActionData paramCircleActionData)
    {
      return Builder.access$37100().mergeFrom(paramCircleActionData);
    }

    public final CircleActionData getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final String getGaiaId(int paramInt)
    {
      return (String)this.gaiaId_.get(paramInt);
    }

    public final int getGaiaIdCount()
    {
      return this.gaiaId_.size();
    }

    public final List<String> getGaiaIdList()
    {
      return this.gaiaId_;
    }

    public final String getLowQualityObfuscatedGaiaId(int paramInt)
    {
      return (String)this.lowQualityObfuscatedGaiaId_.get(paramInt);
    }

    public final int getLowQualityObfuscatedGaiaIdCount()
    {
      return this.lowQualityObfuscatedGaiaId_.size();
    }

    public final List<String> getLowQualityObfuscatedGaiaIdList()
    {
      return this.lowQualityObfuscatedGaiaId_;
    }

    public final String getName(int paramInt)
    {
      return (String)this.name_.get(paramInt);
    }

    public final int getNameCount()
    {
      return this.name_.size();
    }

    public final List<String> getNameList()
    {
      return this.name_;
    }

    public final Contact.MobileContact.ProfileType getProfileType(int paramInt)
    {
      return (Contact.MobileContact.ProfileType)this.profileType_.get(paramInt);
    }

    public final int getProfileTypeCount()
    {
      return this.profileType_.size();
    }

    public final List<Contact.MobileContact.ProfileType> getProfileTypeList()
    {
      return this.profileType_;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int i8;
      for (int i9 = i; ; i9 = i8)
      {
        return i9;
        int j = 0;
        for (int k = 0; k < this.gaiaId_.size(); k++)
          j += CodedOutputStream.computeBytesSizeNoTag(this.gaiaId_.getByteString(k));
        int m = j + 0 + 1 * getGaiaIdList().size();
        int n = 0;
        for (int i1 = 0; i1 < this.name_.size(); i1++)
          n += CodedOutputStream.computeBytesSizeNoTag(this.name_.getByteString(i1));
        int i2 = m + n + 1 * getNameList().size();
        int i3 = 0;
        for (int i4 = 0; i4 < this.profileType_.size(); i4++)
          i3 += CodedOutputStream.computeInt32SizeNoTag(((Contact.MobileContact.ProfileType)this.profileType_.get(i4)).getNumber());
        int i5 = i2 + i3 + 1 * this.profileType_.size();
        int i6 = 0;
        for (int i7 = 0; i7 < this.lowQualityObfuscatedGaiaId_.size(); i7++)
          i6 += CodedOutputStream.computeBytesSizeNoTag(this.lowQualityObfuscatedGaiaId_.getByteString(i7));
        i8 = i5 + i6 + 1 * getLowQualityObfuscatedGaiaIdList().size();
        this.memoizedSerializedSize = i8;
      }
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      for (int i = 0; i < this.gaiaId_.size(); i++)
        paramCodedOutputStream.writeBytes(1, this.gaiaId_.getByteString(i));
      for (int j = 0; j < this.name_.size(); j++)
        paramCodedOutputStream.writeBytes(2, this.name_.getByteString(j));
      for (int k = 0; k < this.profileType_.size(); k++)
        paramCodedOutputStream.writeEnum(3, ((Contact.MobileContact.ProfileType)this.profileType_.get(k)).getNumber());
      for (int m = 0; m < this.lowQualityObfuscatedGaiaId_.size(); m++)
        paramCodedOutputStream.writeBytes(4, this.lowQualityObfuscatedGaiaId_.getByteString(m));
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Data.CircleActionData, Builder>
      implements Data.CircleActionDataOrBuilder
    {
      private int bitField0_;
      private LazyStringList gaiaId_ = LazyStringArrayList.EMPTY;
      private LazyStringList lowQualityObfuscatedGaiaId_ = LazyStringArrayList.EMPTY;
      private LazyStringList name_ = LazyStringArrayList.EMPTY;
      private List<Contact.MobileContact.ProfileType> profileType_ = Collections.emptyList();

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private void ensureGaiaIdIsMutable()
      {
        if ((0x1 & this.bitField0_) != 1)
        {
          this.gaiaId_ = new LazyStringArrayList(this.gaiaId_);
          this.bitField0_ = (0x1 | this.bitField0_);
        }
      }

      private void ensureLowQualityObfuscatedGaiaIdIsMutable()
      {
        if ((0x8 & this.bitField0_) != 8)
        {
          this.lowQualityObfuscatedGaiaId_ = new LazyStringArrayList(this.lowQualityObfuscatedGaiaId_);
          this.bitField0_ = (0x8 | this.bitField0_);
        }
      }

      private void ensureNameIsMutable()
      {
        if ((0x2 & this.bitField0_) != 2)
        {
          this.name_ = new LazyStringArrayList(this.name_);
          this.bitField0_ = (0x2 | this.bitField0_);
        }
      }

      private void ensureProfileTypeIsMutable()
      {
        if ((0x4 & this.bitField0_) != 4)
        {
          this.profileType_ = new ArrayList(this.profileType_);
          this.bitField0_ = (0x4 | this.bitField0_);
        }
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 10:
            ensureGaiaIdIsMutable();
            this.gaiaId_.add(paramCodedInputStream.readBytes());
            break;
          case 18:
            ensureNameIsMutable();
            this.name_.add(paramCodedInputStream.readBytes());
            break;
          case 24:
            Contact.MobileContact.ProfileType localProfileType2 = Contact.MobileContact.ProfileType.valueOf(paramCodedInputStream.readEnum());
            if (localProfileType2 == null)
              continue;
            addProfileType(localProfileType2);
            break;
          case 26:
            int j = paramCodedInputStream.pushLimit(paramCodedInputStream.readRawVarint32());
            while (paramCodedInputStream.getBytesUntilLimit() > 0)
            {
              Contact.MobileContact.ProfileType localProfileType1 = Contact.MobileContact.ProfileType.valueOf(paramCodedInputStream.readEnum());
              if (localProfileType1 != null)
                addProfileType(localProfileType1);
            }
            paramCodedInputStream.popLimit(j);
            break;
          case 34:
          }
          ensureLowQualityObfuscatedGaiaIdIsMutable();
          this.lowQualityObfuscatedGaiaId_.add(paramCodedInputStream.readBytes());
        }
      }

      public final Builder addAllGaiaId(Iterable<String> paramIterable)
      {
        ensureGaiaIdIsMutable();
        GeneratedMessageLite.Builder.addAll(paramIterable, this.gaiaId_);
        return this;
      }

      public final Builder addAllLowQualityObfuscatedGaiaId(Iterable<String> paramIterable)
      {
        ensureLowQualityObfuscatedGaiaIdIsMutable();
        GeneratedMessageLite.Builder.addAll(paramIterable, this.lowQualityObfuscatedGaiaId_);
        return this;
      }

      public final Builder addAllName(Iterable<String> paramIterable)
      {
        ensureNameIsMutable();
        GeneratedMessageLite.Builder.addAll(paramIterable, this.name_);
        return this;
      }

      public final Builder addAllProfileType(Iterable<? extends Contact.MobileContact.ProfileType> paramIterable)
      {
        ensureProfileTypeIsMutable();
        GeneratedMessageLite.Builder.addAll(paramIterable, this.profileType_);
        return this;
      }

      public final Builder addGaiaId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        ensureGaiaIdIsMutable();
        this.gaiaId_.add(paramString);
        return this;
      }

      public final Builder addLowQualityObfuscatedGaiaId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        ensureLowQualityObfuscatedGaiaIdIsMutable();
        this.lowQualityObfuscatedGaiaId_.add(paramString);
        return this;
      }

      public final Builder addName(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        ensureNameIsMutable();
        this.name_.add(paramString);
        return this;
      }

      public final Builder addProfileType(Contact.MobileContact.ProfileType paramProfileType)
      {
        if (paramProfileType == null)
          throw new NullPointerException();
        ensureProfileTypeIsMutable();
        this.profileType_.add(paramProfileType);
        return this;
      }

      public final Data.CircleActionData build()
      {
        Data.CircleActionData localCircleActionData = buildPartial();
        if (!localCircleActionData.isInitialized())
          throw new UninitializedMessageException();
        return localCircleActionData;
      }

      public final Data.CircleActionData buildPartial()
      {
        Data.CircleActionData localCircleActionData = new Data.CircleActionData(this, (byte)0);
        if ((0x1 & this.bitField0_) == 1)
        {
          this.gaiaId_ = new UnmodifiableLazyStringList(this.gaiaId_);
          this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        }
        Data.CircleActionData.access$37302(localCircleActionData, this.gaiaId_);
        if ((0x2 & this.bitField0_) == 2)
        {
          this.name_ = new UnmodifiableLazyStringList(this.name_);
          this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        }
        Data.CircleActionData.access$37402(localCircleActionData, this.name_);
        if ((0x4 & this.bitField0_) == 4)
        {
          this.profileType_ = Collections.unmodifiableList(this.profileType_);
          this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        }
        Data.CircleActionData.access$37502(localCircleActionData, this.profileType_);
        if ((0x8 & this.bitField0_) == 8)
        {
          this.lowQualityObfuscatedGaiaId_ = new UnmodifiableLazyStringList(this.lowQualityObfuscatedGaiaId_);
          this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        }
        Data.CircleActionData.access$37602(localCircleActionData, this.lowQualityObfuscatedGaiaId_);
        return localCircleActionData;
      }

      public final Builder clear()
      {
        super.clear();
        this.gaiaId_ = LazyStringArrayList.EMPTY;
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.name_ = LazyStringArrayList.EMPTY;
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.profileType_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.lowQualityObfuscatedGaiaId_ = LazyStringArrayList.EMPTY;
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        return this;
      }

      public final Builder clearGaiaId()
      {
        this.gaiaId_ = LazyStringArrayList.EMPTY;
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        return this;
      }

      public final Builder clearLowQualityObfuscatedGaiaId()
      {
        this.lowQualityObfuscatedGaiaId_ = LazyStringArrayList.EMPTY;
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        return this;
      }

      public final Builder clearName()
      {
        this.name_ = LazyStringArrayList.EMPTY;
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        return this;
      }

      public final Builder clearProfileType()
      {
        this.profileType_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        return this;
      }

      public final Data.CircleActionData getDefaultInstanceForType()
      {
        return Data.CircleActionData.getDefaultInstance();
      }

      public final String getGaiaId(int paramInt)
      {
        return (String)this.gaiaId_.get(paramInt);
      }

      public final int getGaiaIdCount()
      {
        return this.gaiaId_.size();
      }

      public final List<String> getGaiaIdList()
      {
        return Collections.unmodifiableList(this.gaiaId_);
      }

      public final String getLowQualityObfuscatedGaiaId(int paramInt)
      {
        return (String)this.lowQualityObfuscatedGaiaId_.get(paramInt);
      }

      public final int getLowQualityObfuscatedGaiaIdCount()
      {
        return this.lowQualityObfuscatedGaiaId_.size();
      }

      public final List<String> getLowQualityObfuscatedGaiaIdList()
      {
        return Collections.unmodifiableList(this.lowQualityObfuscatedGaiaId_);
      }

      public final String getName(int paramInt)
      {
        return (String)this.name_.get(paramInt);
      }

      public final int getNameCount()
      {
        return this.name_.size();
      }

      public final List<String> getNameList()
      {
        return Collections.unmodifiableList(this.name_);
      }

      public final Contact.MobileContact.ProfileType getProfileType(int paramInt)
      {
        return (Contact.MobileContact.ProfileType)this.profileType_.get(paramInt);
      }

      public final int getProfileTypeCount()
      {
        return this.profileType_.size();
      }

      public final List<Contact.MobileContact.ProfileType> getProfileTypeList()
      {
        return Collections.unmodifiableList(this.profileType_);
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Data.CircleActionData paramCircleActionData)
      {
        if (paramCircleActionData == Data.CircleActionData.getDefaultInstance());
        while (true)
        {
          return this;
          if (!paramCircleActionData.gaiaId_.isEmpty())
          {
            if (this.gaiaId_.isEmpty())
            {
              this.gaiaId_ = paramCircleActionData.gaiaId_;
              this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
            }
          }
          else
          {
            label52: if (!paramCircleActionData.name_.isEmpty())
            {
              if (!this.name_.isEmpty())
                break label205;
              this.name_ = paramCircleActionData.name_;
              this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
            }
            label95: if (!paramCircleActionData.profileType_.isEmpty())
            {
              if (!this.profileType_.isEmpty())
                break label226;
              this.profileType_ = paramCircleActionData.profileType_;
              this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
            }
          }
          while (true)
          {
            if (paramCircleActionData.lowQualityObfuscatedGaiaId_.isEmpty())
              break label245;
            if (!this.lowQualityObfuscatedGaiaId_.isEmpty())
              break label247;
            this.lowQualityObfuscatedGaiaId_ = paramCircleActionData.lowQualityObfuscatedGaiaId_;
            this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
            break;
            ensureGaiaIdIsMutable();
            this.gaiaId_.addAll(paramCircleActionData.gaiaId_);
            break label52;
            label205: ensureNameIsMutable();
            this.name_.addAll(paramCircleActionData.name_);
            break label95;
            label226: ensureProfileTypeIsMutable();
            this.profileType_.addAll(paramCircleActionData.profileType_);
          }
          label245: continue;
          label247: ensureLowQualityObfuscatedGaiaIdIsMutable();
          this.lowQualityObfuscatedGaiaId_.addAll(paramCircleActionData.lowQualityObfuscatedGaiaId_);
        }
      }

      public final Builder setGaiaId(int paramInt, String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        ensureGaiaIdIsMutable();
        this.gaiaId_.set(paramInt, paramString);
        return this;
      }

      public final Builder setLowQualityObfuscatedGaiaId(int paramInt, String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        ensureLowQualityObfuscatedGaiaIdIsMutable();
        this.lowQualityObfuscatedGaiaId_.set(paramInt, paramString);
        return this;
      }

      public final Builder setName(int paramInt, String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        ensureNameIsMutable();
        this.name_.set(paramInt, paramString);
        return this;
      }

      public final Builder setProfileType(int paramInt, Contact.MobileContact.ProfileType paramProfileType)
      {
        if (paramProfileType == null)
          throw new NullPointerException();
        ensureProfileTypeIsMutable();
        this.profileType_.set(paramInt, paramProfileType);
        return this;
      }
    }
  }

  public static abstract interface CircleActionDataOrBuilder extends MessageLiteOrBuilder
  {
    public abstract String getGaiaId(int paramInt);

    public abstract int getGaiaIdCount();

    public abstract List<String> getGaiaIdList();

    public abstract String getLowQualityObfuscatedGaiaId(int paramInt);

    public abstract int getLowQualityObfuscatedGaiaIdCount();

    public abstract List<String> getLowQualityObfuscatedGaiaIdList();

    public abstract String getName(int paramInt);

    public abstract int getNameCount();

    public abstract List<String> getNameList();

    public abstract Contact.MobileContact.ProfileType getProfileType(int paramInt);

    public abstract int getProfileTypeCount();

    public abstract List<Contact.MobileContact.ProfileType> getProfileTypeList();
  }

  public static abstract interface CircleOrBuilder extends MessageLiteOrBuilder
  {
    public abstract Circles.MobileCircle.Type getCircleType();

    public abstract String getId();

    public abstract String getName();

    public abstract int getSize();

    @Deprecated
    public abstract Data.Circle.Type getType();

    public abstract boolean hasCircleType();

    public abstract boolean hasId();

    public abstract boolean hasName();

    public abstract boolean hasSize();

    @Deprecated
    public abstract boolean hasType();
  }

  public static final class CoalescedNotification extends GeneratedMessageLite
    implements Data.CoalescedNotificationOrBuilder
  {
    private static final CoalescedNotification defaultInstance;
    private static final long serialVersionUID;
    private Object activitySnippet_;
    private int bitField0_;
    private Data.CircleActionData circleData_;
    private Object displayMessageHtml_;
    private Object displayMessage_;
    private Data.EventActionData eventsData_;
    private Object id_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private NotificationEnums.NotificationType notificationType_;
    private Data.PhotoActionData photoData_;
    private boolean pushEnabled_;
    private boolean read_;
    private Data.StreamActionData streamData_;
    private double timestamp_;
    private Type type_;

    static
    {
      CoalescedNotification localCoalescedNotification = new CoalescedNotification();
      defaultInstance = localCoalescedNotification;
      localCoalescedNotification.displayMessage_ = "";
      localCoalescedNotification.type_ = Type.POST;
      localCoalescedNotification.read_ = false;
      localCoalescedNotification.timestamp_ = 0.0D;
      localCoalescedNotification.streamData_ = Data.StreamActionData.getDefaultInstance();
      localCoalescedNotification.photoData_ = Data.PhotoActionData.getDefaultInstance();
      localCoalescedNotification.id_ = "";
      localCoalescedNotification.activitySnippet_ = "";
      localCoalescedNotification.circleData_ = Data.CircleActionData.getDefaultInstance();
      localCoalescedNotification.pushEnabled_ = false;
      localCoalescedNotification.displayMessageHtml_ = "";
      localCoalescedNotification.eventsData_ = Data.EventActionData.getDefaultInstance();
      localCoalescedNotification.notificationType_ = NotificationEnums.NotificationType.UNKNOWN_NOTIFICATION_TYPE;
    }

    private CoalescedNotification()
    {
    }

    private CoalescedNotification(Builder paramBuilder)
    {
      super();
    }

    private ByteString getActivitySnippetBytes()
    {
      Object localObject = this.activitySnippet_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.activitySnippet_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static CoalescedNotification getDefaultInstance()
    {
      return defaultInstance;
    }

    private ByteString getDisplayMessageBytes()
    {
      Object localObject = this.displayMessage_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.displayMessage_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    private ByteString getDisplayMessageHtmlBytes()
    {
      Object localObject = this.displayMessageHtml_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.displayMessageHtml_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    private ByteString getIdBytes()
    {
      Object localObject = this.id_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.id_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static Builder newBuilder()
    {
      return Builder.access$34100();
    }

    public final String getActivitySnippet()
    {
      Object localObject1 = this.activitySnippet_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.activitySnippet_ = str;
      }
    }

    public final Data.CircleActionData getCircleData()
    {
      return this.circleData_;
    }

    public final CoalescedNotification getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final String getDisplayMessage()
    {
      Object localObject1 = this.displayMessage_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.displayMessage_ = str;
      }
    }

    public final String getDisplayMessageHtml()
    {
      Object localObject1 = this.displayMessageHtml_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.displayMessageHtml_ = str;
      }
    }

    public final Data.EventActionData getEventsData()
    {
      return this.eventsData_;
    }

    public final String getId()
    {
      Object localObject1 = this.id_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.id_ = str;
      }
    }

    public final NotificationEnums.NotificationType getNotificationType()
    {
      return this.notificationType_;
    }

    public final Data.PhotoActionData getPhotoData()
    {
      return this.photoData_;
    }

    public final boolean getPushEnabled()
    {
      return this.pushEnabled_;
    }

    public final boolean getRead()
    {
      return this.read_;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeBytesSize(1, getDisplayMessageBytes());
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeEnumSize(2, this.type_.getNumber());
        if ((0x4 & this.bitField0_) == 4)
          k += CodedOutputStream.computeBoolSize(3, this.read_);
        if ((0x8 & this.bitField0_) == 8)
          k += CodedOutputStream.computeDoubleSize(4, this.timestamp_);
        if ((0x10 & this.bitField0_) == 16)
          k += CodedOutputStream.computeMessageSize(5, this.streamData_);
        if ((0x20 & this.bitField0_) == 32)
          k += CodedOutputStream.computeMessageSize(6, this.photoData_);
        if ((0x40 & this.bitField0_) == 64)
          k += CodedOutputStream.computeBytesSize(7, getIdBytes());
        if ((0x80 & this.bitField0_) == 128)
          k += CodedOutputStream.computeBytesSize(8, getActivitySnippetBytes());
        if ((0x100 & this.bitField0_) == 256)
          k += CodedOutputStream.computeMessageSize(9, this.circleData_);
        if ((0x200 & this.bitField0_) == 512)
          k += CodedOutputStream.computeBoolSize(10, this.pushEnabled_);
        if ((0x400 & this.bitField0_) == 1024)
          k += CodedOutputStream.computeBytesSize(11, getDisplayMessageHtmlBytes());
        if ((0x800 & this.bitField0_) == 2048)
          k += CodedOutputStream.computeMessageSize(12, this.eventsData_);
        if ((0x1000 & this.bitField0_) == 4096)
          k += CodedOutputStream.computeEnumSize(13, this.notificationType_.getNumber());
        this.memoizedSerializedSize = k;
      }
    }

    public final Data.StreamActionData getStreamData()
    {
      return this.streamData_;
    }

    public final double getTimestamp()
    {
      return this.timestamp_;
    }

    public final Type getType()
    {
      return this.type_;
    }

    public final boolean hasActivitySnippet()
    {
      if ((0x80 & this.bitField0_) == 128);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasCircleData()
    {
      if ((0x100 & this.bitField0_) == 256);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasDisplayMessage()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean hasDisplayMessageHtml()
    {
      if ((0x400 & this.bitField0_) == 1024);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasEventsData()
    {
      if ((0x800 & this.bitField0_) == 2048);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasId()
    {
      if ((0x40 & this.bitField0_) == 64);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasNotificationType()
    {
      if ((0x1000 & this.bitField0_) == 4096);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasPhotoData()
    {
      if ((0x20 & this.bitField0_) == 32);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasPushEnabled()
    {
      if ((0x200 & this.bitField0_) == 512);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasRead()
    {
      if ((0x4 & this.bitField0_) == 4);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasStreamData()
    {
      if ((0x10 & this.bitField0_) == 16);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasTimestamp()
    {
      if ((0x8 & this.bitField0_) == 8);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasType()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeBytes(1, getDisplayMessageBytes());
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeEnum(2, this.type_.getNumber());
      if ((0x4 & this.bitField0_) == 4)
        paramCodedOutputStream.writeBool(3, this.read_);
      if ((0x8 & this.bitField0_) == 8)
        paramCodedOutputStream.writeDouble(4, this.timestamp_);
      if ((0x10 & this.bitField0_) == 16)
        paramCodedOutputStream.writeMessage(5, this.streamData_);
      if ((0x20 & this.bitField0_) == 32)
        paramCodedOutputStream.writeMessage(6, this.photoData_);
      if ((0x40 & this.bitField0_) == 64)
        paramCodedOutputStream.writeBytes(7, getIdBytes());
      if ((0x80 & this.bitField0_) == 128)
        paramCodedOutputStream.writeBytes(8, getActivitySnippetBytes());
      if ((0x100 & this.bitField0_) == 256)
        paramCodedOutputStream.writeMessage(9, this.circleData_);
      if ((0x200 & this.bitField0_) == 512)
        paramCodedOutputStream.writeBool(10, this.pushEnabled_);
      if ((0x400 & this.bitField0_) == 1024)
        paramCodedOutputStream.writeBytes(11, getDisplayMessageHtmlBytes());
      if ((0x800 & this.bitField0_) == 2048)
        paramCodedOutputStream.writeMessage(12, this.eventsData_);
      if ((0x1000 & this.bitField0_) == 4096)
        paramCodedOutputStream.writeEnum(13, this.notificationType_.getNumber());
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Data.CoalescedNotification, Builder>
      implements Data.CoalescedNotificationOrBuilder
    {
      private Object activitySnippet_ = "";
      private int bitField0_;
      private Data.CircleActionData circleData_ = Data.CircleActionData.getDefaultInstance();
      private Object displayMessageHtml_ = "";
      private Object displayMessage_ = "";
      private Data.EventActionData eventsData_ = Data.EventActionData.getDefaultInstance();
      private Object id_ = "";
      private NotificationEnums.NotificationType notificationType_ = NotificationEnums.NotificationType.UNKNOWN_NOTIFICATION_TYPE;
      private Data.PhotoActionData photoData_ = Data.PhotoActionData.getDefaultInstance();
      private boolean pushEnabled_;
      private boolean read_;
      private Data.StreamActionData streamData_ = Data.StreamActionData.getDefaultInstance();
      private double timestamp_;
      private Data.CoalescedNotification.Type type_ = Data.CoalescedNotification.Type.POST;

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 10:
            this.bitField0_ = (0x1 | this.bitField0_);
            this.displayMessage_ = paramCodedInputStream.readBytes();
            break;
          case 16:
            Data.CoalescedNotification.Type localType = Data.CoalescedNotification.Type.valueOf(paramCodedInputStream.readEnum());
            if (localType == null)
              continue;
            this.bitField0_ = (0x2 | this.bitField0_);
            this.type_ = localType;
            break;
          case 24:
            this.bitField0_ = (0x4 | this.bitField0_);
            this.read_ = paramCodedInputStream.readBool();
            break;
          case 33:
            this.bitField0_ = (0x8 | this.bitField0_);
            this.timestamp_ = paramCodedInputStream.readDouble();
            break;
          case 42:
            Data.StreamActionData.Builder localBuilder3 = Data.StreamActionData.newBuilder();
            if (hasStreamData())
              localBuilder3.mergeFrom(getStreamData());
            paramCodedInputStream.readMessage(localBuilder3, paramExtensionRegistryLite);
            setStreamData(localBuilder3.buildPartial());
            break;
          case 50:
            Data.PhotoActionData.Builder localBuilder2 = Data.PhotoActionData.newBuilder();
            if (hasPhotoData())
              localBuilder2.mergeFrom(getPhotoData());
            paramCodedInputStream.readMessage(localBuilder2, paramExtensionRegistryLite);
            setPhotoData(localBuilder2.buildPartial());
            break;
          case 58:
            this.bitField0_ = (0x40 | this.bitField0_);
            this.id_ = paramCodedInputStream.readBytes();
            break;
          case 66:
            this.bitField0_ = (0x80 | this.bitField0_);
            this.activitySnippet_ = paramCodedInputStream.readBytes();
            break;
          case 74:
            Data.CircleActionData.Builder localBuilder1 = Data.CircleActionData.newBuilder();
            if (hasCircleData())
              localBuilder1.mergeFrom(getCircleData());
            paramCodedInputStream.readMessage(localBuilder1, paramExtensionRegistryLite);
            setCircleData(localBuilder1.buildPartial());
            break;
          case 80:
            this.bitField0_ = (0x200 | this.bitField0_);
            this.pushEnabled_ = paramCodedInputStream.readBool();
            break;
          case 90:
            this.bitField0_ = (0x400 | this.bitField0_);
            this.displayMessageHtml_ = paramCodedInputStream.readBytes();
            break;
          case 98:
            Data.EventActionData.Builder localBuilder = Data.EventActionData.newBuilder();
            if (hasEventsData())
              localBuilder.mergeFrom(getEventsData());
            paramCodedInputStream.readMessage(localBuilder, paramExtensionRegistryLite);
            setEventsData(localBuilder.buildPartial());
            break;
          case 104:
          }
          NotificationEnums.NotificationType localNotificationType = NotificationEnums.NotificationType.valueOf(paramCodedInputStream.readEnum());
          if (localNotificationType != null)
          {
            this.bitField0_ = (0x1000 | this.bitField0_);
            this.notificationType_ = localNotificationType;
          }
        }
      }

      public final Data.CoalescedNotification build()
      {
        Data.CoalescedNotification localCoalescedNotification = buildPartial();
        if (!localCoalescedNotification.isInitialized())
          throw new UninitializedMessageException();
        return localCoalescedNotification;
      }

      public final Data.CoalescedNotification buildPartial()
      {
        Data.CoalescedNotification localCoalescedNotification = new Data.CoalescedNotification(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Data.CoalescedNotification.access$34302(localCoalescedNotification, this.displayMessage_);
        if ((i & 0x2) == 2)
          k |= 2;
        Data.CoalescedNotification.access$34402(localCoalescedNotification, this.type_);
        if ((i & 0x4) == 4)
          k |= 4;
        Data.CoalescedNotification.access$34502(localCoalescedNotification, this.read_);
        if ((i & 0x8) == 8)
          k |= 8;
        Data.CoalescedNotification.access$34602(localCoalescedNotification, this.timestamp_);
        if ((i & 0x10) == 16)
          k |= 16;
        Data.CoalescedNotification.access$34702(localCoalescedNotification, this.streamData_);
        if ((i & 0x20) == 32)
          k |= 32;
        Data.CoalescedNotification.access$34802(localCoalescedNotification, this.photoData_);
        if ((i & 0x40) == 64)
          k |= 64;
        Data.CoalescedNotification.access$34902(localCoalescedNotification, this.id_);
        if ((i & 0x80) == 128)
          k |= 128;
        Data.CoalescedNotification.access$35002(localCoalescedNotification, this.activitySnippet_);
        if ((i & 0x100) == 256)
          k |= 256;
        Data.CoalescedNotification.access$35102(localCoalescedNotification, this.circleData_);
        if ((i & 0x200) == 512)
          k |= 512;
        Data.CoalescedNotification.access$35202(localCoalescedNotification, this.pushEnabled_);
        if ((i & 0x400) == 1024)
          k |= 1024;
        Data.CoalescedNotification.access$35302(localCoalescedNotification, this.displayMessageHtml_);
        if ((i & 0x800) == 2048)
          k |= 2048;
        Data.CoalescedNotification.access$35402(localCoalescedNotification, this.eventsData_);
        if ((i & 0x1000) == 4096)
          k |= 4096;
        Data.CoalescedNotification.access$35502(localCoalescedNotification, this.notificationType_);
        Data.CoalescedNotification.access$35602(localCoalescedNotification, k);
        return localCoalescedNotification;
      }

      public final Builder clear()
      {
        super.clear();
        this.displayMessage_ = "";
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.type_ = Data.CoalescedNotification.Type.POST;
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.read_ = false;
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.timestamp_ = 0.0D;
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        this.streamData_ = Data.StreamActionData.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        this.photoData_ = Data.PhotoActionData.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFDF & this.bitField0_);
        this.id_ = "";
        this.bitField0_ = (0xFFFFFFBF & this.bitField0_);
        this.activitySnippet_ = "";
        this.bitField0_ = (0xFFFFFF7F & this.bitField0_);
        this.circleData_ = Data.CircleActionData.getDefaultInstance();
        this.bitField0_ = (0xFFFFFEFF & this.bitField0_);
        this.pushEnabled_ = false;
        this.bitField0_ = (0xFFFFFDFF & this.bitField0_);
        this.displayMessageHtml_ = "";
        this.bitField0_ = (0xFFFFFBFF & this.bitField0_);
        this.eventsData_ = Data.EventActionData.getDefaultInstance();
        this.bitField0_ = (0xFFFFF7FF & this.bitField0_);
        this.notificationType_ = NotificationEnums.NotificationType.UNKNOWN_NOTIFICATION_TYPE;
        this.bitField0_ = (0xFFFFEFFF & this.bitField0_);
        return this;
      }

      public final Builder clearActivitySnippet()
      {
        this.bitField0_ = (0xFFFFFF7F & this.bitField0_);
        this.activitySnippet_ = Data.CoalescedNotification.getDefaultInstance().getActivitySnippet();
        return this;
      }

      public final Builder clearCircleData()
      {
        this.circleData_ = Data.CircleActionData.getDefaultInstance();
        this.bitField0_ = (0xFFFFFEFF & this.bitField0_);
        return this;
      }

      public final Builder clearDisplayMessage()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.displayMessage_ = Data.CoalescedNotification.getDefaultInstance().getDisplayMessage();
        return this;
      }

      public final Builder clearDisplayMessageHtml()
      {
        this.bitField0_ = (0xFFFFFBFF & this.bitField0_);
        this.displayMessageHtml_ = Data.CoalescedNotification.getDefaultInstance().getDisplayMessageHtml();
        return this;
      }

      public final Builder clearEventsData()
      {
        this.eventsData_ = Data.EventActionData.getDefaultInstance();
        this.bitField0_ = (0xFFFFF7FF & this.bitField0_);
        return this;
      }

      public final Builder clearId()
      {
        this.bitField0_ = (0xFFFFFFBF & this.bitField0_);
        this.id_ = Data.CoalescedNotification.getDefaultInstance().getId();
        return this;
      }

      public final Builder clearNotificationType()
      {
        this.bitField0_ = (0xFFFFEFFF & this.bitField0_);
        this.notificationType_ = NotificationEnums.NotificationType.UNKNOWN_NOTIFICATION_TYPE;
        return this;
      }

      public final Builder clearPhotoData()
      {
        this.photoData_ = Data.PhotoActionData.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFDF & this.bitField0_);
        return this;
      }

      public final Builder clearPushEnabled()
      {
        this.bitField0_ = (0xFFFFFDFF & this.bitField0_);
        this.pushEnabled_ = false;
        return this;
      }

      public final Builder clearRead()
      {
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.read_ = false;
        return this;
      }

      public final Builder clearStreamData()
      {
        this.streamData_ = Data.StreamActionData.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        return this;
      }

      public final Builder clearTimestamp()
      {
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        this.timestamp_ = 0.0D;
        return this;
      }

      public final Builder clearType()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.type_ = Data.CoalescedNotification.Type.POST;
        return this;
      }

      public final String getActivitySnippet()
      {
        Object localObject = this.activitySnippet_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.activitySnippet_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final Data.CircleActionData getCircleData()
      {
        return this.circleData_;
      }

      public final Data.CoalescedNotification getDefaultInstanceForType()
      {
        return Data.CoalescedNotification.getDefaultInstance();
      }

      public final String getDisplayMessage()
      {
        Object localObject = this.displayMessage_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.displayMessage_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final String getDisplayMessageHtml()
      {
        Object localObject = this.displayMessageHtml_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.displayMessageHtml_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final Data.EventActionData getEventsData()
      {
        return this.eventsData_;
      }

      public final String getId()
      {
        Object localObject = this.id_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.id_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final NotificationEnums.NotificationType getNotificationType()
      {
        return this.notificationType_;
      }

      public final Data.PhotoActionData getPhotoData()
      {
        return this.photoData_;
      }

      public final boolean getPushEnabled()
      {
        return this.pushEnabled_;
      }

      public final boolean getRead()
      {
        return this.read_;
      }

      public final Data.StreamActionData getStreamData()
      {
        return this.streamData_;
      }

      public final double getTimestamp()
      {
        return this.timestamp_;
      }

      public final Data.CoalescedNotification.Type getType()
      {
        return this.type_;
      }

      public final boolean hasActivitySnippet()
      {
        if ((0x80 & this.bitField0_) == 128);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasCircleData()
      {
        if ((0x100 & this.bitField0_) == 256);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasDisplayMessage()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean hasDisplayMessageHtml()
      {
        if ((0x400 & this.bitField0_) == 1024);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasEventsData()
      {
        if ((0x800 & this.bitField0_) == 2048);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasId()
      {
        if ((0x40 & this.bitField0_) == 64);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasNotificationType()
      {
        if ((0x1000 & this.bitField0_) == 4096);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasPhotoData()
      {
        if ((0x20 & this.bitField0_) == 32);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasPushEnabled()
      {
        if ((0x200 & this.bitField0_) == 512);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasRead()
      {
        if ((0x4 & this.bitField0_) == 4);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasStreamData()
      {
        if ((0x10 & this.bitField0_) == 16);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasTimestamp()
      {
        if ((0x8 & this.bitField0_) == 8);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasType()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Data.CoalescedNotification paramCoalescedNotification)
      {
        if (paramCoalescedNotification == Data.CoalescedNotification.getDefaultInstance())
          return this;
        if (paramCoalescedNotification.hasDisplayMessage())
          setDisplayMessage(paramCoalescedNotification.getDisplayMessage());
        if (paramCoalescedNotification.hasType())
          setType(paramCoalescedNotification.getType());
        if (paramCoalescedNotification.hasRead())
          setRead(paramCoalescedNotification.getRead());
        if (paramCoalescedNotification.hasTimestamp())
          setTimestamp(paramCoalescedNotification.getTimestamp());
        Data.StreamActionData localStreamActionData;
        label127: Data.PhotoActionData localPhotoActionData;
        label192: Data.CircleActionData localCircleActionData;
        label291: Data.EventActionData localEventActionData;
        if (paramCoalescedNotification.hasStreamData())
        {
          localStreamActionData = paramCoalescedNotification.getStreamData();
          if (((0x10 & this.bitField0_) == 16) && (this.streamData_ != Data.StreamActionData.getDefaultInstance()))
          {
            this.streamData_ = Data.StreamActionData.newBuilder(this.streamData_).mergeFrom(localStreamActionData).buildPartial();
            this.bitField0_ = (0x10 | this.bitField0_);
          }
        }
        else
        {
          if (paramCoalescedNotification.hasPhotoData())
          {
            localPhotoActionData = paramCoalescedNotification.getPhotoData();
            if (((0x20 & this.bitField0_) != 32) || (this.photoData_ == Data.PhotoActionData.getDefaultInstance()))
              break label429;
            this.photoData_ = Data.PhotoActionData.newBuilder(this.photoData_).mergeFrom(localPhotoActionData).buildPartial();
            this.bitField0_ = (0x20 | this.bitField0_);
          }
          if (paramCoalescedNotification.hasId())
            setId(paramCoalescedNotification.getId());
          if (paramCoalescedNotification.hasActivitySnippet())
            setActivitySnippet(paramCoalescedNotification.getActivitySnippet());
          if (paramCoalescedNotification.hasCircleData())
          {
            localCircleActionData = paramCoalescedNotification.getCircleData();
            if (((0x100 & this.bitField0_) != 256) || (this.circleData_ == Data.CircleActionData.getDefaultInstance()))
              break label438;
            this.circleData_ = Data.CircleActionData.newBuilder(this.circleData_).mergeFrom(localCircleActionData).buildPartial();
            this.bitField0_ = (0x100 | this.bitField0_);
          }
          if (paramCoalescedNotification.hasPushEnabled())
            setPushEnabled(paramCoalescedNotification.getPushEnabled());
          if (paramCoalescedNotification.hasDisplayMessageHtml())
            setDisplayMessageHtml(paramCoalescedNotification.getDisplayMessageHtml());
          if (paramCoalescedNotification.hasEventsData())
          {
            localEventActionData = paramCoalescedNotification.getEventsData();
            if (((0x800 & this.bitField0_) != 2048) || (this.eventsData_ == Data.EventActionData.getDefaultInstance()))
              break label447;
          }
        }
        label429: label438: label447: for (this.eventsData_ = Data.EventActionData.newBuilder(this.eventsData_).mergeFrom(localEventActionData).buildPartial(); ; this.eventsData_ = localEventActionData)
        {
          this.bitField0_ = (0x800 | this.bitField0_);
          if (!paramCoalescedNotification.hasNotificationType())
            break;
          setNotificationType(paramCoalescedNotification.getNotificationType());
          break;
          this.streamData_ = localStreamActionData;
          break label127;
          this.photoData_ = localPhotoActionData;
          break label192;
          this.circleData_ = localCircleActionData;
          break label291;
        }
      }

      public final Builder setActivitySnippet(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x80 | this.bitField0_);
        this.activitySnippet_ = paramString;
        return this;
      }

      public final Builder setCircleData(Data.CircleActionData.Builder paramBuilder)
      {
        this.circleData_ = paramBuilder.build();
        this.bitField0_ = (0x100 | this.bitField0_);
        return this;
      }

      public final Builder setCircleData(Data.CircleActionData paramCircleActionData)
      {
        if (paramCircleActionData == null)
          throw new NullPointerException();
        this.circleData_ = paramCircleActionData;
        this.bitField0_ = (0x100 | this.bitField0_);
        return this;
      }

      public final Builder setDisplayMessage(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x1 | this.bitField0_);
        this.displayMessage_ = paramString;
        return this;
      }

      public final Builder setDisplayMessageHtml(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x400 | this.bitField0_);
        this.displayMessageHtml_ = paramString;
        return this;
      }

      public final Builder setEventsData(Data.EventActionData.Builder paramBuilder)
      {
        this.eventsData_ = paramBuilder.build();
        this.bitField0_ = (0x800 | this.bitField0_);
        return this;
      }

      public final Builder setEventsData(Data.EventActionData paramEventActionData)
      {
        if (paramEventActionData == null)
          throw new NullPointerException();
        this.eventsData_ = paramEventActionData;
        this.bitField0_ = (0x800 | this.bitField0_);
        return this;
      }

      public final Builder setId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x40 | this.bitField0_);
        this.id_ = paramString;
        return this;
      }

      public final Builder setNotificationType(NotificationEnums.NotificationType paramNotificationType)
      {
        if (paramNotificationType == null)
          throw new NullPointerException();
        this.bitField0_ = (0x1000 | this.bitField0_);
        this.notificationType_ = paramNotificationType;
        return this;
      }

      public final Builder setPhotoData(Data.PhotoActionData.Builder paramBuilder)
      {
        this.photoData_ = paramBuilder.build();
        this.bitField0_ = (0x20 | this.bitField0_);
        return this;
      }

      public final Builder setPhotoData(Data.PhotoActionData paramPhotoActionData)
      {
        if (paramPhotoActionData == null)
          throw new NullPointerException();
        this.photoData_ = paramPhotoActionData;
        this.bitField0_ = (0x20 | this.bitField0_);
        return this;
      }

      public final Builder setPushEnabled(boolean paramBoolean)
      {
        this.bitField0_ = (0x200 | this.bitField0_);
        this.pushEnabled_ = paramBoolean;
        return this;
      }

      public final Builder setRead(boolean paramBoolean)
      {
        this.bitField0_ = (0x4 | this.bitField0_);
        this.read_ = paramBoolean;
        return this;
      }

      public final Builder setStreamData(Data.StreamActionData.Builder paramBuilder)
      {
        this.streamData_ = paramBuilder.build();
        this.bitField0_ = (0x10 | this.bitField0_);
        return this;
      }

      public final Builder setStreamData(Data.StreamActionData paramStreamActionData)
      {
        if (paramStreamActionData == null)
          throw new NullPointerException();
        this.streamData_ = paramStreamActionData;
        this.bitField0_ = (0x10 | this.bitField0_);
        return this;
      }

      public final Builder setTimestamp(double paramDouble)
      {
        this.bitField0_ = (0x8 | this.bitField0_);
        this.timestamp_ = paramDouble;
        return this;
      }

      public final Builder setType(Data.CoalescedNotification.Type paramType)
      {
        if (paramType == null)
          throw new NullPointerException();
        this.bitField0_ = (0x2 | this.bitField0_);
        this.type_ = paramType;
        return this;
      }
    }

    public static enum Type
      implements Internal.EnumLite
    {
      private static Internal.EnumLiteMap<Type> internalValueMap = new Internal.EnumLiteMap()
      {
      };
      private final int value;

      static
      {
        GAMES = new Type("GAMES", 2, 3);
        MAIL = new Type("MAIL", 3, 4);
        MY_CIRCLE = new Type("MY_CIRCLE", 4, 5);
        SHARED_CIRCLE = new Type("SHARED_CIRCLE", 5, 6);
        MY_COMMENT = new Type("MY_COMMENT", 6, 7);
        OTHER_COMMENT = new Type("OTHER_COMMENT", 7, 8);
        PHOTO = new Type("PHOTO", 8, 9);
        CAMERA_SYNC = new Type("CAMERA_SYNC", 9, 10);
        HANGOUT = new Type("HANGOUT", 10, 11);
        CIRCLE_RECIPROCATING_ADD = new Type("CIRCLE_RECIPROCATING_ADD", 11, 12);
        CIRCLE_MEMBER_JOINED_ES = new Type("CIRCLE_MEMBER_JOINED_ES", 12, 13);
        CIRCLE_INVITEE_JOINED_ES = new Type("CIRCLE_INVITEE_JOINED_ES", 13, 14);
        EVENTS_CHECKIN = new Type("EVENTS_CHECKIN", 14, 15);
        EVENTS_INVITE = new Type("EVENTS_INVITE", 15, 16);
        EVENTS_CHANGE = new Type("EVENTS_CHANGE", 16, 17);
        EVENTS_STARTING = new Type("EVENTS_STARTING", 17, 18);
        EVENTS_INVITEE_CHANGE = new Type("EVENTS_INVITEE_CHANGE", 18, 19);
        Type[] arrayOfType = new Type[19];
        arrayOfType[0] = POST;
        arrayOfType[1] = SYSTEM;
        arrayOfType[2] = GAMES;
        arrayOfType[3] = MAIL;
        arrayOfType[4] = MY_CIRCLE;
        arrayOfType[5] = SHARED_CIRCLE;
        arrayOfType[6] = MY_COMMENT;
        arrayOfType[7] = OTHER_COMMENT;
        arrayOfType[8] = PHOTO;
        arrayOfType[9] = CAMERA_SYNC;
        arrayOfType[10] = HANGOUT;
        arrayOfType[11] = CIRCLE_RECIPROCATING_ADD;
        arrayOfType[12] = CIRCLE_MEMBER_JOINED_ES;
        arrayOfType[13] = CIRCLE_INVITEE_JOINED_ES;
        arrayOfType[14] = EVENTS_CHECKIN;
        arrayOfType[15] = EVENTS_INVITE;
        arrayOfType[16] = EVENTS_CHANGE;
        arrayOfType[17] = EVENTS_STARTING;
        arrayOfType[18] = EVENTS_INVITEE_CHANGE;
      }

      private Type(int paramInt1, int paramInt2)
      {
        this.value = paramInt1;
      }

      public static Type valueOf(int paramInt)
      {
        Type localType;
        switch (paramInt)
        {
        default:
          localType = null;
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
        case 6:
        case 7:
        case 8:
        case 9:
        case 10:
        case 11:
        case 12:
        case 13:
        case 14:
        case 15:
        case 16:
        case 17:
        case 18:
        case 19:
        }
        while (true)
        {
          return localType;
          localType = POST;
          continue;
          localType = SYSTEM;
          continue;
          localType = GAMES;
          continue;
          localType = MAIL;
          continue;
          localType = MY_CIRCLE;
          continue;
          localType = SHARED_CIRCLE;
          continue;
          localType = MY_COMMENT;
          continue;
          localType = OTHER_COMMENT;
          continue;
          localType = PHOTO;
          continue;
          localType = CAMERA_SYNC;
          continue;
          localType = HANGOUT;
          continue;
          localType = CIRCLE_RECIPROCATING_ADD;
          continue;
          localType = CIRCLE_MEMBER_JOINED_ES;
          continue;
          localType = CIRCLE_INVITEE_JOINED_ES;
          continue;
          localType = EVENTS_CHECKIN;
          continue;
          localType = EVENTS_INVITE;
          continue;
          localType = EVENTS_CHANGE;
          continue;
          localType = EVENTS_STARTING;
          continue;
          localType = EVENTS_INVITEE_CHANGE;
        }
      }

      public final int getNumber()
      {
        return this.value;
      }
    }
  }

  public static abstract interface CoalescedNotificationOrBuilder extends MessageLiteOrBuilder
  {
    public abstract String getActivitySnippet();

    public abstract Data.CircleActionData getCircleData();

    public abstract String getDisplayMessage();

    public abstract String getDisplayMessageHtml();

    public abstract Data.EventActionData getEventsData();

    public abstract String getId();

    public abstract NotificationEnums.NotificationType getNotificationType();

    public abstract Data.PhotoActionData getPhotoData();

    public abstract boolean getPushEnabled();

    public abstract boolean getRead();

    public abstract Data.StreamActionData getStreamData();

    public abstract double getTimestamp();

    public abstract Data.CoalescedNotification.Type getType();

    public abstract boolean hasActivitySnippet();

    public abstract boolean hasCircleData();

    public abstract boolean hasDisplayMessage();

    public abstract boolean hasDisplayMessageHtml();

    public abstract boolean hasEventsData();

    public abstract boolean hasId();

    public abstract boolean hasNotificationType();

    public abstract boolean hasPhotoData();

    public abstract boolean hasPushEnabled();

    public abstract boolean hasRead();

    public abstract boolean hasStreamData();

    public abstract boolean hasTimestamp();

    public abstract boolean hasType();
  }

  public static final class CoarseDate extends GeneratedMessageLite
    implements Data.CoarseDateOrBuilder
  {
    private static final CoarseDate defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private int day_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private int month_;
    private int year_;

    static
    {
      CoarseDate localCoarseDate = new CoarseDate();
      defaultInstance = localCoarseDate;
      localCoarseDate.day_ = 0;
      localCoarseDate.month_ = 0;
      localCoarseDate.year_ = 0;
    }

    private CoarseDate()
    {
    }

    private CoarseDate(Builder paramBuilder)
    {
      super();
    }

    public static CoarseDate getDefaultInstance()
    {
      return defaultInstance;
    }

    public static Builder newBuilder()
    {
      return Builder.access$40500();
    }

    public static Builder newBuilder(CoarseDate paramCoarseDate)
    {
      return Builder.access$40500().mergeFrom(paramCoarseDate);
    }

    public final int getDay()
    {
      return this.day_;
    }

    public final CoarseDate getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final int getMonth()
    {
      return this.month_;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeInt32Size(1, this.day_);
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeInt32Size(2, this.month_);
        if ((0x4 & this.bitField0_) == 4)
          k += CodedOutputStream.computeInt32Size(3, this.year_);
        this.memoizedSerializedSize = k;
      }
    }

    public final int getYear()
    {
      return this.year_;
    }

    public final boolean hasDay()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean hasMonth()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasYear()
    {
      if ((0x4 & this.bitField0_) == 4);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeInt32(1, this.day_);
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeInt32(2, this.month_);
      if ((0x4 & this.bitField0_) == 4)
        paramCodedOutputStream.writeInt32(3, this.year_);
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Data.CoarseDate, Builder>
      implements Data.CoarseDateOrBuilder
    {
      private int bitField0_;
      private int day_;
      private int month_;
      private int year_;

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 8:
            this.bitField0_ = (0x1 | this.bitField0_);
            this.day_ = paramCodedInputStream.readInt32();
            break;
          case 16:
            this.bitField0_ = (0x2 | this.bitField0_);
            this.month_ = paramCodedInputStream.readInt32();
            break;
          case 24:
          }
          this.bitField0_ = (0x4 | this.bitField0_);
          this.year_ = paramCodedInputStream.readInt32();
        }
      }

      public final Data.CoarseDate build()
      {
        Data.CoarseDate localCoarseDate = buildPartial();
        if (!localCoarseDate.isInitialized())
          throw new UninitializedMessageException();
        return localCoarseDate;
      }

      public final Data.CoarseDate buildPartial()
      {
        Data.CoarseDate localCoarseDate = new Data.CoarseDate(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Data.CoarseDate.access$40702(localCoarseDate, this.day_);
        if ((i & 0x2) == 2)
          k |= 2;
        Data.CoarseDate.access$40802(localCoarseDate, this.month_);
        if ((i & 0x4) == 4)
          k |= 4;
        Data.CoarseDate.access$40902(localCoarseDate, this.year_);
        Data.CoarseDate.access$41002(localCoarseDate, k);
        return localCoarseDate;
      }

      public final Builder clear()
      {
        super.clear();
        this.day_ = 0;
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.month_ = 0;
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.year_ = 0;
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        return this;
      }

      public final Builder clearDay()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.day_ = 0;
        return this;
      }

      public final Builder clearMonth()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.month_ = 0;
        return this;
      }

      public final Builder clearYear()
      {
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.year_ = 0;
        return this;
      }

      public final int getDay()
      {
        return this.day_;
      }

      public final Data.CoarseDate getDefaultInstanceForType()
      {
        return Data.CoarseDate.getDefaultInstance();
      }

      public final int getMonth()
      {
        return this.month_;
      }

      public final int getYear()
      {
        return this.year_;
      }

      public final boolean hasDay()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean hasMonth()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasYear()
      {
        if ((0x4 & this.bitField0_) == 4);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Data.CoarseDate paramCoarseDate)
      {
        if (paramCoarseDate == Data.CoarseDate.getDefaultInstance());
        while (true)
        {
          return this;
          if (paramCoarseDate.hasDay())
            setDay(paramCoarseDate.getDay());
          if (paramCoarseDate.hasMonth())
            setMonth(paramCoarseDate.getMonth());
          if (paramCoarseDate.hasYear())
            setYear(paramCoarseDate.getYear());
        }
      }

      public final Builder setDay(int paramInt)
      {
        this.bitField0_ = (0x1 | this.bitField0_);
        this.day_ = paramInt;
        return this;
      }

      public final Builder setMonth(int paramInt)
      {
        this.bitField0_ = (0x2 | this.bitField0_);
        this.month_ = paramInt;
        return this;
      }

      public final Builder setYear(int paramInt)
      {
        this.bitField0_ = (0x4 | this.bitField0_);
        this.year_ = paramInt;
        return this;
      }
    }
  }

  public static abstract interface CoarseDateOrBuilder extends MessageLiteOrBuilder
  {
    public abstract int getDay();

    public abstract int getMonth();

    public abstract int getYear();

    public abstract boolean hasDay();

    public abstract boolean hasMonth();

    public abstract boolean hasYear();
  }

  public static final class CollapsedData extends GeneratedMessageLite
    implements Data.CollapsedDataOrBuilder
  {
    private static final CollapsedData defaultInstance;
    private static final long serialVersionUID;
    private Object aclDisplay_;
    private int bitField0_;
    private List<Data.Comment> comment_;
    private long creationMsec_;
    private boolean isPublic_;
    private long lastModifiedMsec_;
    private int likeCount_;
    private Object locationClusterId_;
    private Object locationName_;
    private List<Data.Media> media_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private Data.PhotoMediaDisplay photoMediaDisplay_;
    private int reshareCount_;
    private int totalCommentCount_;

    static
    {
      CollapsedData localCollapsedData = new CollapsedData();
      defaultInstance = localCollapsedData;
      localCollapsedData.media_ = Collections.emptyList();
      localCollapsedData.lastModifiedMsec_ = 0L;
      localCollapsedData.locationName_ = "";
      localCollapsedData.totalCommentCount_ = 0;
      localCollapsedData.likeCount_ = 0;
      localCollapsedData.reshareCount_ = 0;
      localCollapsedData.isPublic_ = false;
      localCollapsedData.comment_ = Collections.emptyList();
      localCollapsedData.photoMediaDisplay_ = Data.PhotoMediaDisplay.getDefaultInstance();
      localCollapsedData.locationClusterId_ = "";
      localCollapsedData.aclDisplay_ = "";
      localCollapsedData.creationMsec_ = 0L;
    }

    private CollapsedData()
    {
    }

    private CollapsedData(Builder paramBuilder)
    {
      super();
    }

    private ByteString getAclDisplayBytes()
    {
      Object localObject = this.aclDisplay_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.aclDisplay_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static CollapsedData getDefaultInstance()
    {
      return defaultInstance;
    }

    private ByteString getLocationClusterIdBytes()
    {
      Object localObject = this.locationClusterId_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.locationClusterId_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    private ByteString getLocationNameBytes()
    {
      Object localObject = this.locationName_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.locationName_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static Builder newBuilder()
    {
      return Builder.access$3400();
    }

    public static Builder newBuilder(CollapsedData paramCollapsedData)
    {
      return Builder.access$3400().mergeFrom(paramCollapsedData);
    }

    public final String getAclDisplay()
    {
      Object localObject1 = this.aclDisplay_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.aclDisplay_ = str;
      }
    }

    public final Data.Comment getComment(int paramInt)
    {
      return (Data.Comment)this.comment_.get(paramInt);
    }

    public final int getCommentCount()
    {
      return this.comment_.size();
    }

    public final List<Data.Comment> getCommentList()
    {
      return this.comment_;
    }

    public final Data.CommentOrBuilder getCommentOrBuilder(int paramInt)
    {
      return (Data.CommentOrBuilder)this.comment_.get(paramInt);
    }

    public final List<? extends Data.CommentOrBuilder> getCommentOrBuilderList()
    {
      return this.comment_;
    }

    public final long getCreationMsec()
    {
      return this.creationMsec_;
    }

    public final CollapsedData getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final boolean getIsPublic()
    {
      return this.isPublic_;
    }

    public final long getLastModifiedMsec()
    {
      return this.lastModifiedMsec_;
    }

    public final int getLikeCount()
    {
      return this.likeCount_;
    }

    public final String getLocationClusterId()
    {
      Object localObject1 = this.locationClusterId_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.locationClusterId_ = str;
      }
    }

    public final String getLocationName()
    {
      Object localObject1 = this.locationName_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.locationName_ = str;
      }
    }

    public final Data.Media getMedia(int paramInt)
    {
      return (Data.Media)this.media_.get(paramInt);
    }

    public final int getMediaCount()
    {
      return this.media_.size();
    }

    public final List<Data.Media> getMediaList()
    {
      return this.media_;
    }

    public final Data.MediaOrBuilder getMediaOrBuilder(int paramInt)
    {
      return (Data.MediaOrBuilder)this.media_.get(paramInt);
    }

    public final List<? extends Data.MediaOrBuilder> getMediaOrBuilderList()
    {
      return this.media_;
    }

    public final Data.PhotoMediaDisplay getPhotoMediaDisplay()
    {
      return this.photoMediaDisplay_;
    }

    public final int getReshareCount()
    {
      return this.reshareCount_;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int j;
      for (int n = i; ; n = j)
      {
        return n;
        j = 0;
        for (int k = 0; k < this.media_.size(); k++)
          j += CodedOutputStream.computeMessageSize(1, (MessageLite)this.media_.get(k));
        if ((0x1 & this.bitField0_) == 1)
          j += CodedOutputStream.computeInt64Size(2, this.lastModifiedMsec_);
        if ((0x2 & this.bitField0_) == 2)
          j += CodedOutputStream.computeBytesSize(3, getLocationNameBytes());
        if ((0x4 & this.bitField0_) == 4)
          j += CodedOutputStream.computeInt32Size(4, this.totalCommentCount_);
        if ((0x8 & this.bitField0_) == 8)
          j += CodedOutputStream.computeInt32Size(5, this.likeCount_);
        if ((0x10 & this.bitField0_) == 16)
          j += CodedOutputStream.computeInt32Size(6, this.reshareCount_);
        if ((0x20 & this.bitField0_) == 32)
          j += CodedOutputStream.computeBoolSize(7, this.isPublic_);
        for (int m = 0; m < this.comment_.size(); m++)
          j += CodedOutputStream.computeMessageSize(8, (MessageLite)this.comment_.get(m));
        if ((0x40 & this.bitField0_) == 64)
          j += CodedOutputStream.computeMessageSize(9, this.photoMediaDisplay_);
        if ((0x80 & this.bitField0_) == 128)
          j += CodedOutputStream.computeBytesSize(10, getLocationClusterIdBytes());
        if ((0x100 & this.bitField0_) == 256)
          j += CodedOutputStream.computeBytesSize(11, getAclDisplayBytes());
        if ((0x200 & this.bitField0_) == 512)
          j += CodedOutputStream.computeInt64Size(12, this.creationMsec_);
        this.memoizedSerializedSize = j;
      }
    }

    public final int getTotalCommentCount()
    {
      return this.totalCommentCount_;
    }

    public final boolean hasAclDisplay()
    {
      if ((0x100 & this.bitField0_) == 256);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasCreationMsec()
    {
      if ((0x200 & this.bitField0_) == 512);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasIsPublic()
    {
      if ((0x20 & this.bitField0_) == 32);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasLastModifiedMsec()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean hasLikeCount()
    {
      if ((0x8 & this.bitField0_) == 8);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasLocationClusterId()
    {
      if ((0x80 & this.bitField0_) == 128);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasLocationName()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasPhotoMediaDisplay()
    {
      if ((0x40 & this.bitField0_) == 64);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasReshareCount()
    {
      if ((0x10 & this.bitField0_) == 16);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasTotalCommentCount()
    {
      if ((0x4 & this.bitField0_) == 4);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      for (int i = 0; i < this.media_.size(); i++)
        paramCodedOutputStream.writeMessage(1, (MessageLite)this.media_.get(i));
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeInt64(2, this.lastModifiedMsec_);
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeBytes(3, getLocationNameBytes());
      if ((0x4 & this.bitField0_) == 4)
        paramCodedOutputStream.writeInt32(4, this.totalCommentCount_);
      if ((0x8 & this.bitField0_) == 8)
        paramCodedOutputStream.writeInt32(5, this.likeCount_);
      if ((0x10 & this.bitField0_) == 16)
        paramCodedOutputStream.writeInt32(6, this.reshareCount_);
      if ((0x20 & this.bitField0_) == 32)
        paramCodedOutputStream.writeBool(7, this.isPublic_);
      for (int j = 0; j < this.comment_.size(); j++)
        paramCodedOutputStream.writeMessage(8, (MessageLite)this.comment_.get(j));
      if ((0x40 & this.bitField0_) == 64)
        paramCodedOutputStream.writeMessage(9, this.photoMediaDisplay_);
      if ((0x80 & this.bitField0_) == 128)
        paramCodedOutputStream.writeBytes(10, getLocationClusterIdBytes());
      if ((0x100 & this.bitField0_) == 256)
        paramCodedOutputStream.writeBytes(11, getAclDisplayBytes());
      if ((0x200 & this.bitField0_) == 512)
        paramCodedOutputStream.writeInt64(12, this.creationMsec_);
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Data.CollapsedData, Builder>
      implements Data.CollapsedDataOrBuilder
    {
      private Object aclDisplay_ = "";
      private int bitField0_;
      private List<Data.Comment> comment_ = Collections.emptyList();
      private long creationMsec_;
      private boolean isPublic_;
      private long lastModifiedMsec_;
      private int likeCount_;
      private Object locationClusterId_ = "";
      private Object locationName_ = "";
      private List<Data.Media> media_ = Collections.emptyList();
      private Data.PhotoMediaDisplay photoMediaDisplay_ = Data.PhotoMediaDisplay.getDefaultInstance();
      private int reshareCount_;
      private int totalCommentCount_;

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private void ensureCommentIsMutable()
      {
        if ((0x80 & this.bitField0_) != 128)
        {
          this.comment_ = new ArrayList(this.comment_);
          this.bitField0_ = (0x80 | this.bitField0_);
        }
      }

      private void ensureMediaIsMutable()
      {
        if ((0x1 & this.bitField0_) != 1)
        {
          this.media_ = new ArrayList(this.media_);
          this.bitField0_ = (0x1 | this.bitField0_);
        }
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 10:
            Data.Media.Builder localBuilder2 = Data.Media.newBuilder();
            paramCodedInputStream.readMessage(localBuilder2, paramExtensionRegistryLite);
            addMedia(localBuilder2.buildPartial());
            break;
          case 16:
            this.bitField0_ = (0x2 | this.bitField0_);
            this.lastModifiedMsec_ = paramCodedInputStream.readInt64();
            break;
          case 26:
            this.bitField0_ = (0x4 | this.bitField0_);
            this.locationName_ = paramCodedInputStream.readBytes();
            break;
          case 32:
            this.bitField0_ = (0x8 | this.bitField0_);
            this.totalCommentCount_ = paramCodedInputStream.readInt32();
            break;
          case 40:
            this.bitField0_ = (0x10 | this.bitField0_);
            this.likeCount_ = paramCodedInputStream.readInt32();
            break;
          case 48:
            this.bitField0_ = (0x20 | this.bitField0_);
            this.reshareCount_ = paramCodedInputStream.readInt32();
            break;
          case 56:
            this.bitField0_ = (0x40 | this.bitField0_);
            this.isPublic_ = paramCodedInputStream.readBool();
            break;
          case 66:
            Data.Comment.Builder localBuilder1 = Data.Comment.newBuilder();
            paramCodedInputStream.readMessage(localBuilder1, paramExtensionRegistryLite);
            addComment(localBuilder1.buildPartial());
            break;
          case 74:
            Data.PhotoMediaDisplay.Builder localBuilder = Data.PhotoMediaDisplay.newBuilder();
            if (hasPhotoMediaDisplay())
              localBuilder.mergeFrom(getPhotoMediaDisplay());
            paramCodedInputStream.readMessage(localBuilder, paramExtensionRegistryLite);
            setPhotoMediaDisplay(localBuilder.buildPartial());
            break;
          case 82:
            this.bitField0_ = (0x200 | this.bitField0_);
            this.locationClusterId_ = paramCodedInputStream.readBytes();
            break;
          case 90:
            this.bitField0_ = (0x400 | this.bitField0_);
            this.aclDisplay_ = paramCodedInputStream.readBytes();
            break;
          case 96:
          }
          this.bitField0_ = (0x800 | this.bitField0_);
          this.creationMsec_ = paramCodedInputStream.readInt64();
        }
      }

      public final Builder addAllComment(Iterable<? extends Data.Comment> paramIterable)
      {
        ensureCommentIsMutable();
        GeneratedMessageLite.Builder.addAll(paramIterable, this.comment_);
        return this;
      }

      public final Builder addAllMedia(Iterable<? extends Data.Media> paramIterable)
      {
        ensureMediaIsMutable();
        GeneratedMessageLite.Builder.addAll(paramIterable, this.media_);
        return this;
      }

      public final Builder addComment(int paramInt, Data.Comment.Builder paramBuilder)
      {
        ensureCommentIsMutable();
        this.comment_.add(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder addComment(int paramInt, Data.Comment paramComment)
      {
        if (paramComment == null)
          throw new NullPointerException();
        ensureCommentIsMutable();
        this.comment_.add(paramInt, paramComment);
        return this;
      }

      public final Builder addComment(Data.Comment.Builder paramBuilder)
      {
        ensureCommentIsMutable();
        this.comment_.add(paramBuilder.build());
        return this;
      }

      public final Builder addComment(Data.Comment paramComment)
      {
        if (paramComment == null)
          throw new NullPointerException();
        ensureCommentIsMutable();
        this.comment_.add(paramComment);
        return this;
      }

      public final Builder addMedia(int paramInt, Data.Media.Builder paramBuilder)
      {
        ensureMediaIsMutable();
        this.media_.add(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder addMedia(int paramInt, Data.Media paramMedia)
      {
        if (paramMedia == null)
          throw new NullPointerException();
        ensureMediaIsMutable();
        this.media_.add(paramInt, paramMedia);
        return this;
      }

      public final Builder addMedia(Data.Media.Builder paramBuilder)
      {
        ensureMediaIsMutable();
        this.media_.add(paramBuilder.build());
        return this;
      }

      public final Builder addMedia(Data.Media paramMedia)
      {
        if (paramMedia == null)
          throw new NullPointerException();
        ensureMediaIsMutable();
        this.media_.add(paramMedia);
        return this;
      }

      public final Data.CollapsedData build()
      {
        Data.CollapsedData localCollapsedData = buildPartial();
        if (!localCollapsedData.isInitialized())
          throw new UninitializedMessageException();
        return localCollapsedData;
      }

      public final Data.CollapsedData buildPartial()
      {
        Data.CollapsedData localCollapsedData = new Data.CollapsedData(this, (byte)0);
        int i = this.bitField0_;
        if ((0x1 & this.bitField0_) == 1)
        {
          this.media_ = Collections.unmodifiableList(this.media_);
          this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        }
        Data.CollapsedData.access$3602(localCollapsedData, this.media_);
        int j = i & 0x2;
        int k = 0;
        if (j == 2)
          k = 1;
        Data.CollapsedData.access$3702(localCollapsedData, this.lastModifiedMsec_);
        if ((i & 0x4) == 4)
          k |= 2;
        Data.CollapsedData.access$3802(localCollapsedData, this.locationName_);
        if ((i & 0x8) == 8)
          k |= 4;
        Data.CollapsedData.access$3902(localCollapsedData, this.totalCommentCount_);
        if ((i & 0x10) == 16)
          k |= 8;
        Data.CollapsedData.access$4002(localCollapsedData, this.likeCount_);
        if ((i & 0x20) == 32)
          k |= 16;
        Data.CollapsedData.access$4102(localCollapsedData, this.reshareCount_);
        if ((i & 0x40) == 64)
          k |= 32;
        Data.CollapsedData.access$4202(localCollapsedData, this.isPublic_);
        if ((0x80 & this.bitField0_) == 128)
        {
          this.comment_ = Collections.unmodifiableList(this.comment_);
          this.bitField0_ = (0xFFFFFF7F & this.bitField0_);
        }
        Data.CollapsedData.access$4302(localCollapsedData, this.comment_);
        if ((i & 0x100) == 256)
          k |= 64;
        Data.CollapsedData.access$4402(localCollapsedData, this.photoMediaDisplay_);
        if ((i & 0x200) == 512)
          k |= 128;
        Data.CollapsedData.access$4502(localCollapsedData, this.locationClusterId_);
        if ((i & 0x400) == 1024)
          k |= 256;
        Data.CollapsedData.access$4602(localCollapsedData, this.aclDisplay_);
        if ((i & 0x800) == 2048)
          k |= 512;
        Data.CollapsedData.access$4702(localCollapsedData, this.creationMsec_);
        Data.CollapsedData.access$4802(localCollapsedData, k);
        return localCollapsedData;
      }

      public final Builder clear()
      {
        super.clear();
        this.media_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.lastModifiedMsec_ = 0L;
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.locationName_ = "";
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.totalCommentCount_ = 0;
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        this.likeCount_ = 0;
        this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        this.reshareCount_ = 0;
        this.bitField0_ = (0xFFFFFFDF & this.bitField0_);
        this.isPublic_ = false;
        this.bitField0_ = (0xFFFFFFBF & this.bitField0_);
        this.comment_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFF7F & this.bitField0_);
        this.photoMediaDisplay_ = Data.PhotoMediaDisplay.getDefaultInstance();
        this.bitField0_ = (0xFFFFFEFF & this.bitField0_);
        this.locationClusterId_ = "";
        this.bitField0_ = (0xFFFFFDFF & this.bitField0_);
        this.aclDisplay_ = "";
        this.bitField0_ = (0xFFFFFBFF & this.bitField0_);
        this.creationMsec_ = 0L;
        this.bitField0_ = (0xFFFFF7FF & this.bitField0_);
        return this;
      }

      public final Builder clearAclDisplay()
      {
        this.bitField0_ = (0xFFFFFBFF & this.bitField0_);
        this.aclDisplay_ = Data.CollapsedData.getDefaultInstance().getAclDisplay();
        return this;
      }

      public final Builder clearComment()
      {
        this.comment_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFF7F & this.bitField0_);
        return this;
      }

      public final Builder clearCreationMsec()
      {
        this.bitField0_ = (0xFFFFF7FF & this.bitField0_);
        this.creationMsec_ = 0L;
        return this;
      }

      public final Builder clearIsPublic()
      {
        this.bitField0_ = (0xFFFFFFBF & this.bitField0_);
        this.isPublic_ = false;
        return this;
      }

      public final Builder clearLastModifiedMsec()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.lastModifiedMsec_ = 0L;
        return this;
      }

      public final Builder clearLikeCount()
      {
        this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        this.likeCount_ = 0;
        return this;
      }

      public final Builder clearLocationClusterId()
      {
        this.bitField0_ = (0xFFFFFDFF & this.bitField0_);
        this.locationClusterId_ = Data.CollapsedData.getDefaultInstance().getLocationClusterId();
        return this;
      }

      public final Builder clearLocationName()
      {
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.locationName_ = Data.CollapsedData.getDefaultInstance().getLocationName();
        return this;
      }

      public final Builder clearMedia()
      {
        this.media_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        return this;
      }

      public final Builder clearPhotoMediaDisplay()
      {
        this.photoMediaDisplay_ = Data.PhotoMediaDisplay.getDefaultInstance();
        this.bitField0_ = (0xFFFFFEFF & this.bitField0_);
        return this;
      }

      public final Builder clearReshareCount()
      {
        this.bitField0_ = (0xFFFFFFDF & this.bitField0_);
        this.reshareCount_ = 0;
        return this;
      }

      public final Builder clearTotalCommentCount()
      {
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        this.totalCommentCount_ = 0;
        return this;
      }

      public final String getAclDisplay()
      {
        Object localObject = this.aclDisplay_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.aclDisplay_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final Data.Comment getComment(int paramInt)
      {
        return (Data.Comment)this.comment_.get(paramInt);
      }

      public final int getCommentCount()
      {
        return this.comment_.size();
      }

      public final List<Data.Comment> getCommentList()
      {
        return Collections.unmodifiableList(this.comment_);
      }

      public final long getCreationMsec()
      {
        return this.creationMsec_;
      }

      public final Data.CollapsedData getDefaultInstanceForType()
      {
        return Data.CollapsedData.getDefaultInstance();
      }

      public final boolean getIsPublic()
      {
        return this.isPublic_;
      }

      public final long getLastModifiedMsec()
      {
        return this.lastModifiedMsec_;
      }

      public final int getLikeCount()
      {
        return this.likeCount_;
      }

      public final String getLocationClusterId()
      {
        Object localObject = this.locationClusterId_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.locationClusterId_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final String getLocationName()
      {
        Object localObject = this.locationName_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.locationName_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final Data.Media getMedia(int paramInt)
      {
        return (Data.Media)this.media_.get(paramInt);
      }

      public final int getMediaCount()
      {
        return this.media_.size();
      }

      public final List<Data.Media> getMediaList()
      {
        return Collections.unmodifiableList(this.media_);
      }

      public final Data.PhotoMediaDisplay getPhotoMediaDisplay()
      {
        return this.photoMediaDisplay_;
      }

      public final int getReshareCount()
      {
        return this.reshareCount_;
      }

      public final int getTotalCommentCount()
      {
        return this.totalCommentCount_;
      }

      public final boolean hasAclDisplay()
      {
        if ((0x400 & this.bitField0_) == 1024);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasCreationMsec()
      {
        if ((0x800 & this.bitField0_) == 2048);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasIsPublic()
      {
        if ((0x40 & this.bitField0_) == 64);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasLastModifiedMsec()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasLikeCount()
      {
        if ((0x10 & this.bitField0_) == 16);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasLocationClusterId()
      {
        if ((0x200 & this.bitField0_) == 512);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasLocationName()
      {
        if ((0x4 & this.bitField0_) == 4);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasPhotoMediaDisplay()
      {
        if ((0x100 & this.bitField0_) == 256);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasReshareCount()
      {
        if ((0x20 & this.bitField0_) == 32);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasTotalCommentCount()
      {
        if ((0x8 & this.bitField0_) == 8);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Data.CollapsedData paramCollapsedData)
      {
        if (paramCollapsedData == Data.CollapsedData.getDefaultInstance())
          return this;
        label52: label192: Data.PhotoMediaDisplay localPhotoMediaDisplay;
        if (!paramCollapsedData.media_.isEmpty())
        {
          if (this.media_.isEmpty())
          {
            this.media_ = paramCollapsedData.media_;
            this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
          }
        }
        else
        {
          if (paramCollapsedData.hasLastModifiedMsec())
            setLastModifiedMsec(paramCollapsedData.getLastModifiedMsec());
          if (paramCollapsedData.hasLocationName())
            setLocationName(paramCollapsedData.getLocationName());
          if (paramCollapsedData.hasTotalCommentCount())
            setTotalCommentCount(paramCollapsedData.getTotalCommentCount());
          if (paramCollapsedData.hasLikeCount())
            setLikeCount(paramCollapsedData.getLikeCount());
          if (paramCollapsedData.hasReshareCount())
            setReshareCount(paramCollapsedData.getReshareCount());
          if (paramCollapsedData.hasIsPublic())
            setIsPublic(paramCollapsedData.getIsPublic());
          if (!paramCollapsedData.comment_.isEmpty())
          {
            if (!this.comment_.isEmpty())
              break label332;
            this.comment_ = paramCollapsedData.comment_;
            this.bitField0_ = (0xFFFFFF7F & this.bitField0_);
          }
          if (paramCollapsedData.hasPhotoMediaDisplay())
          {
            localPhotoMediaDisplay = paramCollapsedData.getPhotoMediaDisplay();
            if (((0x100 & this.bitField0_) != 256) || (this.photoMediaDisplay_ == Data.PhotoMediaDisplay.getDefaultInstance()))
              break label353;
          }
        }
        label332: label353: for (this.photoMediaDisplay_ = Data.PhotoMediaDisplay.newBuilder(this.photoMediaDisplay_).mergeFrom(localPhotoMediaDisplay).buildPartial(); ; this.photoMediaDisplay_ = localPhotoMediaDisplay)
        {
          this.bitField0_ = (0x100 | this.bitField0_);
          if (paramCollapsedData.hasLocationClusterId())
            setLocationClusterId(paramCollapsedData.getLocationClusterId());
          if (paramCollapsedData.hasAclDisplay())
            setAclDisplay(paramCollapsedData.getAclDisplay());
          if (!paramCollapsedData.hasCreationMsec())
            break;
          setCreationMsec(paramCollapsedData.getCreationMsec());
          break;
          ensureMediaIsMutable();
          this.media_.addAll(paramCollapsedData.media_);
          break label52;
          ensureCommentIsMutable();
          this.comment_.addAll(paramCollapsedData.comment_);
          break label192;
        }
      }

      public final Builder setAclDisplay(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x400 | this.bitField0_);
        this.aclDisplay_ = paramString;
        return this;
      }

      public final Builder setComment(int paramInt, Data.Comment.Builder paramBuilder)
      {
        ensureCommentIsMutable();
        this.comment_.set(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder setComment(int paramInt, Data.Comment paramComment)
      {
        if (paramComment == null)
          throw new NullPointerException();
        ensureCommentIsMutable();
        this.comment_.set(paramInt, paramComment);
        return this;
      }

      public final Builder setCreationMsec(long paramLong)
      {
        this.bitField0_ = (0x800 | this.bitField0_);
        this.creationMsec_ = paramLong;
        return this;
      }

      public final Builder setIsPublic(boolean paramBoolean)
      {
        this.bitField0_ = (0x40 | this.bitField0_);
        this.isPublic_ = paramBoolean;
        return this;
      }

      public final Builder setLastModifiedMsec(long paramLong)
      {
        this.bitField0_ = (0x2 | this.bitField0_);
        this.lastModifiedMsec_ = paramLong;
        return this;
      }

      public final Builder setLikeCount(int paramInt)
      {
        this.bitField0_ = (0x10 | this.bitField0_);
        this.likeCount_ = paramInt;
        return this;
      }

      public final Builder setLocationClusterId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x200 | this.bitField0_);
        this.locationClusterId_ = paramString;
        return this;
      }

      public final Builder setLocationName(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x4 | this.bitField0_);
        this.locationName_ = paramString;
        return this;
      }

      public final Builder setMedia(int paramInt, Data.Media.Builder paramBuilder)
      {
        ensureMediaIsMutable();
        this.media_.set(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder setMedia(int paramInt, Data.Media paramMedia)
      {
        if (paramMedia == null)
          throw new NullPointerException();
        ensureMediaIsMutable();
        this.media_.set(paramInt, paramMedia);
        return this;
      }

      public final Builder setPhotoMediaDisplay(Data.PhotoMediaDisplay.Builder paramBuilder)
      {
        this.photoMediaDisplay_ = paramBuilder.build();
        this.bitField0_ = (0x100 | this.bitField0_);
        return this;
      }

      public final Builder setPhotoMediaDisplay(Data.PhotoMediaDisplay paramPhotoMediaDisplay)
      {
        if (paramPhotoMediaDisplay == null)
          throw new NullPointerException();
        this.photoMediaDisplay_ = paramPhotoMediaDisplay;
        this.bitField0_ = (0x100 | this.bitField0_);
        return this;
      }

      public final Builder setReshareCount(int paramInt)
      {
        this.bitField0_ = (0x20 | this.bitField0_);
        this.reshareCount_ = paramInt;
        return this;
      }

      public final Builder setTotalCommentCount(int paramInt)
      {
        this.bitField0_ = (0x8 | this.bitField0_);
        this.totalCommentCount_ = paramInt;
        return this;
      }
    }
  }

  public static abstract interface CollapsedDataOrBuilder extends MessageLiteOrBuilder
  {
    public abstract String getAclDisplay();

    public abstract Data.Comment getComment(int paramInt);

    public abstract int getCommentCount();

    public abstract List<Data.Comment> getCommentList();

    public abstract long getCreationMsec();

    public abstract boolean getIsPublic();

    public abstract long getLastModifiedMsec();

    public abstract int getLikeCount();

    public abstract String getLocationClusterId();

    public abstract String getLocationName();

    public abstract Data.Media getMedia(int paramInt);

    public abstract int getMediaCount();

    public abstract List<Data.Media> getMediaList();

    public abstract Data.PhotoMediaDisplay getPhotoMediaDisplay();

    public abstract int getReshareCount();

    public abstract int getTotalCommentCount();

    public abstract boolean hasAclDisplay();

    public abstract boolean hasCreationMsec();

    public abstract boolean hasIsPublic();

    public abstract boolean hasLastModifiedMsec();

    public abstract boolean hasLikeCount();

    public abstract boolean hasLocationClusterId();

    public abstract boolean hasLocationName();

    public abstract boolean hasPhotoMediaDisplay();

    public abstract boolean hasReshareCount();

    public abstract boolean hasTotalCommentCount();
  }

  public static final class Comment extends GeneratedMessageLite
    implements Data.CommentOrBuilder
  {
    private static final Comment defaultInstance;
    private static final long serialVersionUID;
    private long authorGaiaId_;
    private int bitField0_;
    private boolean commentInModeration_;
    private Object contentHtml_;
    private long creationTimestampMsec_;
    private Object focusObfuscatedAuthorId_;
    private Object id_;
    private long lastUpdateTimestampMsec_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private Data.PlusOneData plusoneData_;
    private boolean truncated_;

    static
    {
      Comment localComment = new Comment();
      defaultInstance = localComment;
      localComment.id_ = "";
      localComment.authorGaiaId_ = 0L;
      localComment.focusObfuscatedAuthorId_ = "";
      localComment.contentHtml_ = "";
      localComment.creationTimestampMsec_ = 0L;
      localComment.truncated_ = false;
      localComment.lastUpdateTimestampMsec_ = 0L;
      localComment.plusoneData_ = Data.PlusOneData.getDefaultInstance();
      localComment.commentInModeration_ = false;
    }

    private Comment()
    {
    }

    private Comment(Builder paramBuilder)
    {
      super();
    }

    private ByteString getContentHtmlBytes()
    {
      Object localObject = this.contentHtml_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.contentHtml_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static Comment getDefaultInstance()
    {
      return defaultInstance;
    }

    private ByteString getFocusObfuscatedAuthorIdBytes()
    {
      Object localObject = this.focusObfuscatedAuthorId_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.focusObfuscatedAuthorId_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    private ByteString getIdBytes()
    {
      Object localObject = this.id_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.id_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static Builder newBuilder()
    {
      return Builder.access$6000();
    }

    public static Builder newBuilder(Comment paramComment)
    {
      return Builder.access$6000().mergeFrom(paramComment);
    }

    public final long getAuthorGaiaId()
    {
      return this.authorGaiaId_;
    }

    public final boolean getCommentInModeration()
    {
      return this.commentInModeration_;
    }

    public final String getContentHtml()
    {
      Object localObject1 = this.contentHtml_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.contentHtml_ = str;
      }
    }

    public final long getCreationTimestampMsec()
    {
      return this.creationTimestampMsec_;
    }

    public final Comment getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final String getFocusObfuscatedAuthorId()
    {
      Object localObject1 = this.focusObfuscatedAuthorId_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.focusObfuscatedAuthorId_ = str;
      }
    }

    public final String getId()
    {
      Object localObject1 = this.id_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.id_ = str;
      }
    }

    public final long getLastUpdateTimestampMsec()
    {
      return this.lastUpdateTimestampMsec_;
    }

    public final Data.PlusOneData getPlusoneData()
    {
      return this.plusoneData_;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeBytesSize(1, getIdBytes());
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeInt64Size(2, this.authorGaiaId_);
        if ((0x8 & this.bitField0_) == 8)
          k += CodedOutputStream.computeBytesSize(3, getContentHtmlBytes());
        if ((0x10 & this.bitField0_) == 16)
          k += CodedOutputStream.computeInt64Size(4, this.creationTimestampMsec_);
        if ((0x20 & this.bitField0_) == 32)
          k += CodedOutputStream.computeBoolSize(5, this.truncated_);
        if ((0x40 & this.bitField0_) == 64)
          k += CodedOutputStream.computeInt64Size(6, this.lastUpdateTimestampMsec_);
        if ((0x80 & this.bitField0_) == 128)
          k += CodedOutputStream.computeMessageSize(7, this.plusoneData_);
        if ((0x4 & this.bitField0_) == 4)
          k += CodedOutputStream.computeBytesSize(8, getFocusObfuscatedAuthorIdBytes());
        if ((0x100 & this.bitField0_) == 256)
          k += CodedOutputStream.computeBoolSize(9, this.commentInModeration_);
        this.memoizedSerializedSize = k;
      }
    }

    public final boolean getTruncated()
    {
      return this.truncated_;
    }

    public final boolean hasAuthorGaiaId()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasCommentInModeration()
    {
      if ((0x100 & this.bitField0_) == 256);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasContentHtml()
    {
      if ((0x8 & this.bitField0_) == 8);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasCreationTimestampMsec()
    {
      if ((0x10 & this.bitField0_) == 16);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasFocusObfuscatedAuthorId()
    {
      if ((0x4 & this.bitField0_) == 4);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasId()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean hasLastUpdateTimestampMsec()
    {
      if ((0x40 & this.bitField0_) == 64);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasPlusoneData()
    {
      if ((0x80 & this.bitField0_) == 128);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasTruncated()
    {
      if ((0x20 & this.bitField0_) == 32);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeBytes(1, getIdBytes());
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeInt64(2, this.authorGaiaId_);
      if ((0x8 & this.bitField0_) == 8)
        paramCodedOutputStream.writeBytes(3, getContentHtmlBytes());
      if ((0x10 & this.bitField0_) == 16)
        paramCodedOutputStream.writeInt64(4, this.creationTimestampMsec_);
      if ((0x20 & this.bitField0_) == 32)
        paramCodedOutputStream.writeBool(5, this.truncated_);
      if ((0x40 & this.bitField0_) == 64)
        paramCodedOutputStream.writeInt64(6, this.lastUpdateTimestampMsec_);
      if ((0x80 & this.bitField0_) == 128)
        paramCodedOutputStream.writeMessage(7, this.plusoneData_);
      if ((0x4 & this.bitField0_) == 4)
        paramCodedOutputStream.writeBytes(8, getFocusObfuscatedAuthorIdBytes());
      if ((0x100 & this.bitField0_) == 256)
        paramCodedOutputStream.writeBool(9, this.commentInModeration_);
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Data.Comment, Builder>
      implements Data.CommentOrBuilder
    {
      private long authorGaiaId_;
      private int bitField0_;
      private boolean commentInModeration_;
      private Object contentHtml_ = "";
      private long creationTimestampMsec_;
      private Object focusObfuscatedAuthorId_ = "";
      private Object id_ = "";
      private long lastUpdateTimestampMsec_;
      private Data.PlusOneData plusoneData_ = Data.PlusOneData.getDefaultInstance();
      private boolean truncated_;

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 10:
            this.bitField0_ = (0x1 | this.bitField0_);
            this.id_ = paramCodedInputStream.readBytes();
            break;
          case 16:
            this.bitField0_ = (0x2 | this.bitField0_);
            this.authorGaiaId_ = paramCodedInputStream.readInt64();
            break;
          case 26:
            this.bitField0_ = (0x8 | this.bitField0_);
            this.contentHtml_ = paramCodedInputStream.readBytes();
            break;
          case 32:
            this.bitField0_ = (0x10 | this.bitField0_);
            this.creationTimestampMsec_ = paramCodedInputStream.readInt64();
            break;
          case 40:
            this.bitField0_ = (0x20 | this.bitField0_);
            this.truncated_ = paramCodedInputStream.readBool();
            break;
          case 48:
            this.bitField0_ = (0x40 | this.bitField0_);
            this.lastUpdateTimestampMsec_ = paramCodedInputStream.readInt64();
            break;
          case 58:
            Data.PlusOneData.Builder localBuilder = Data.PlusOneData.newBuilder();
            if (hasPlusoneData())
              localBuilder.mergeFrom(getPlusoneData());
            paramCodedInputStream.readMessage(localBuilder, paramExtensionRegistryLite);
            setPlusoneData(localBuilder.buildPartial());
            break;
          case 66:
            this.bitField0_ = (0x4 | this.bitField0_);
            this.focusObfuscatedAuthorId_ = paramCodedInputStream.readBytes();
            break;
          case 72:
          }
          this.bitField0_ = (0x100 | this.bitField0_);
          this.commentInModeration_ = paramCodedInputStream.readBool();
        }
      }

      public final Data.Comment build()
      {
        Data.Comment localComment = buildPartial();
        if (!localComment.isInitialized())
          throw new UninitializedMessageException();
        return localComment;
      }

      public final Data.Comment buildPartial()
      {
        Data.Comment localComment = new Data.Comment(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Data.Comment.access$6202(localComment, this.id_);
        if ((i & 0x2) == 2)
          k |= 2;
        Data.Comment.access$6302(localComment, this.authorGaiaId_);
        if ((i & 0x4) == 4)
          k |= 4;
        Data.Comment.access$6402(localComment, this.focusObfuscatedAuthorId_);
        if ((i & 0x8) == 8)
          k |= 8;
        Data.Comment.access$6502(localComment, this.contentHtml_);
        if ((i & 0x10) == 16)
          k |= 16;
        Data.Comment.access$6602(localComment, this.creationTimestampMsec_);
        if ((i & 0x20) == 32)
          k |= 32;
        Data.Comment.access$6702(localComment, this.truncated_);
        if ((i & 0x40) == 64)
          k |= 64;
        Data.Comment.access$6802(localComment, this.lastUpdateTimestampMsec_);
        if ((i & 0x80) == 128)
          k |= 128;
        Data.Comment.access$6902(localComment, this.plusoneData_);
        if ((i & 0x100) == 256)
          k |= 256;
        Data.Comment.access$7002(localComment, this.commentInModeration_);
        Data.Comment.access$7102(localComment, k);
        return localComment;
      }

      public final Builder clear()
      {
        super.clear();
        this.id_ = "";
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.authorGaiaId_ = 0L;
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.focusObfuscatedAuthorId_ = "";
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.contentHtml_ = "";
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        this.creationTimestampMsec_ = 0L;
        this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        this.truncated_ = false;
        this.bitField0_ = (0xFFFFFFDF & this.bitField0_);
        this.lastUpdateTimestampMsec_ = 0L;
        this.bitField0_ = (0xFFFFFFBF & this.bitField0_);
        this.plusoneData_ = Data.PlusOneData.getDefaultInstance();
        this.bitField0_ = (0xFFFFFF7F & this.bitField0_);
        this.commentInModeration_ = false;
        this.bitField0_ = (0xFFFFFEFF & this.bitField0_);
        return this;
      }

      public final Builder clearAuthorGaiaId()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.authorGaiaId_ = 0L;
        return this;
      }

      public final Builder clearCommentInModeration()
      {
        this.bitField0_ = (0xFFFFFEFF & this.bitField0_);
        this.commentInModeration_ = false;
        return this;
      }

      public final Builder clearContentHtml()
      {
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        this.contentHtml_ = Data.Comment.getDefaultInstance().getContentHtml();
        return this;
      }

      public final Builder clearCreationTimestampMsec()
      {
        this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        this.creationTimestampMsec_ = 0L;
        return this;
      }

      public final Builder clearFocusObfuscatedAuthorId()
      {
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.focusObfuscatedAuthorId_ = Data.Comment.getDefaultInstance().getFocusObfuscatedAuthorId();
        return this;
      }

      public final Builder clearId()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.id_ = Data.Comment.getDefaultInstance().getId();
        return this;
      }

      public final Builder clearLastUpdateTimestampMsec()
      {
        this.bitField0_ = (0xFFFFFFBF & this.bitField0_);
        this.lastUpdateTimestampMsec_ = 0L;
        return this;
      }

      public final Builder clearPlusoneData()
      {
        this.plusoneData_ = Data.PlusOneData.getDefaultInstance();
        this.bitField0_ = (0xFFFFFF7F & this.bitField0_);
        return this;
      }

      public final Builder clearTruncated()
      {
        this.bitField0_ = (0xFFFFFFDF & this.bitField0_);
        this.truncated_ = false;
        return this;
      }

      public final long getAuthorGaiaId()
      {
        return this.authorGaiaId_;
      }

      public final boolean getCommentInModeration()
      {
        return this.commentInModeration_;
      }

      public final String getContentHtml()
      {
        Object localObject = this.contentHtml_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.contentHtml_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final long getCreationTimestampMsec()
      {
        return this.creationTimestampMsec_;
      }

      public final Data.Comment getDefaultInstanceForType()
      {
        return Data.Comment.getDefaultInstance();
      }

      public final String getFocusObfuscatedAuthorId()
      {
        Object localObject = this.focusObfuscatedAuthorId_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.focusObfuscatedAuthorId_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final String getId()
      {
        Object localObject = this.id_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.id_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final long getLastUpdateTimestampMsec()
      {
        return this.lastUpdateTimestampMsec_;
      }

      public final Data.PlusOneData getPlusoneData()
      {
        return this.plusoneData_;
      }

      public final boolean getTruncated()
      {
        return this.truncated_;
      }

      public final boolean hasAuthorGaiaId()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasCommentInModeration()
      {
        if ((0x100 & this.bitField0_) == 256);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasContentHtml()
      {
        if ((0x8 & this.bitField0_) == 8);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasCreationTimestampMsec()
      {
        if ((0x10 & this.bitField0_) == 16);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasFocusObfuscatedAuthorId()
      {
        if ((0x4 & this.bitField0_) == 4);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasId()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean hasLastUpdateTimestampMsec()
      {
        if ((0x40 & this.bitField0_) == 64);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasPlusoneData()
      {
        if ((0x80 & this.bitField0_) == 128);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasTruncated()
      {
        if ((0x20 & this.bitField0_) == 32);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Data.Comment paramComment)
      {
        if (paramComment == Data.Comment.getDefaultInstance())
          return this;
        if (paramComment.hasId())
          setId(paramComment.getId());
        if (paramComment.hasAuthorGaiaId())
          setAuthorGaiaId(paramComment.getAuthorGaiaId());
        if (paramComment.hasFocusObfuscatedAuthorId())
          setFocusObfuscatedAuthorId(paramComment.getFocusObfuscatedAuthorId());
        if (paramComment.hasContentHtml())
          setContentHtml(paramComment.getContentHtml());
        if (paramComment.hasCreationTimestampMsec())
          setCreationTimestampMsec(paramComment.getCreationTimestampMsec());
        if (paramComment.hasTruncated())
          setTruncated(paramComment.getTruncated());
        if (paramComment.hasLastUpdateTimestampMsec())
          setLastUpdateTimestampMsec(paramComment.getLastUpdateTimestampMsec());
        Data.PlusOneData localPlusOneData;
        if (paramComment.hasPlusoneData())
        {
          localPlusOneData = paramComment.getPlusoneData();
          if (((0x80 & this.bitField0_) != 128) || (this.plusoneData_ == Data.PlusOneData.getDefaultInstance()))
            break label206;
        }
        label206: for (this.plusoneData_ = Data.PlusOneData.newBuilder(this.plusoneData_).mergeFrom(localPlusOneData).buildPartial(); ; this.plusoneData_ = localPlusOneData)
        {
          this.bitField0_ = (0x80 | this.bitField0_);
          if (!paramComment.hasCommentInModeration())
            break;
          setCommentInModeration(paramComment.getCommentInModeration());
          break;
        }
      }

      public final Builder setAuthorGaiaId(long paramLong)
      {
        this.bitField0_ = (0x2 | this.bitField0_);
        this.authorGaiaId_ = paramLong;
        return this;
      }

      public final Builder setCommentInModeration(boolean paramBoolean)
      {
        this.bitField0_ = (0x100 | this.bitField0_);
        this.commentInModeration_ = paramBoolean;
        return this;
      }

      public final Builder setContentHtml(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x8 | this.bitField0_);
        this.contentHtml_ = paramString;
        return this;
      }

      public final Builder setCreationTimestampMsec(long paramLong)
      {
        this.bitField0_ = (0x10 | this.bitField0_);
        this.creationTimestampMsec_ = paramLong;
        return this;
      }

      public final Builder setFocusObfuscatedAuthorId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x4 | this.bitField0_);
        this.focusObfuscatedAuthorId_ = paramString;
        return this;
      }

      public final Builder setId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x1 | this.bitField0_);
        this.id_ = paramString;
        return this;
      }

      public final Builder setLastUpdateTimestampMsec(long paramLong)
      {
        this.bitField0_ = (0x40 | this.bitField0_);
        this.lastUpdateTimestampMsec_ = paramLong;
        return this;
      }

      public final Builder setPlusoneData(Data.PlusOneData.Builder paramBuilder)
      {
        this.plusoneData_ = paramBuilder.build();
        this.bitField0_ = (0x80 | this.bitField0_);
        return this;
      }

      public final Builder setPlusoneData(Data.PlusOneData paramPlusOneData)
      {
        if (paramPlusOneData == null)
          throw new NullPointerException();
        this.plusoneData_ = paramPlusOneData;
        this.bitField0_ = (0x80 | this.bitField0_);
        return this;
      }

      public final Builder setTruncated(boolean paramBoolean)
      {
        this.bitField0_ = (0x20 | this.bitField0_);
        this.truncated_ = paramBoolean;
        return this;
      }
    }
  }

  public static abstract interface CommentOrBuilder extends MessageLiteOrBuilder
  {
    public abstract long getAuthorGaiaId();

    public abstract boolean getCommentInModeration();

    public abstract String getContentHtml();

    public abstract long getCreationTimestampMsec();

    public abstract String getFocusObfuscatedAuthorId();

    public abstract String getId();

    public abstract long getLastUpdateTimestampMsec();

    public abstract Data.PlusOneData getPlusoneData();

    public abstract boolean getTruncated();

    public abstract boolean hasAuthorGaiaId();

    public abstract boolean hasCommentInModeration();

    public abstract boolean hasContentHtml();

    public abstract boolean hasCreationTimestampMsec();

    public abstract boolean hasFocusObfuscatedAuthorId();

    public abstract boolean hasId();

    public abstract boolean hasLastUpdateTimestampMsec();

    public abstract boolean hasPlusoneData();

    public abstract boolean hasTruncated();
  }

  public static final class Country extends GeneratedMessageLite
    implements Data.CountryOrBuilder
  {
    private static final Country defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private Object code_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private Object name_;

    static
    {
      Country localCountry = new Country();
      defaultInstance = localCountry;
      localCountry.code_ = "";
      localCountry.name_ = "";
    }

    private Country()
    {
    }

    private Country(Builder paramBuilder)
    {
      super();
    }

    private ByteString getCodeBytes()
    {
      Object localObject = this.code_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.code_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static Country getDefaultInstance()
    {
      return defaultInstance;
    }

    private ByteString getNameBytes()
    {
      Object localObject = this.name_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.name_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static Builder newBuilder()
    {
      return Builder.access$58000();
    }

    public static Builder newBuilder(Country paramCountry)
    {
      return Builder.access$58000().mergeFrom(paramCountry);
    }

    public final String getCode()
    {
      Object localObject1 = this.code_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.code_ = str;
      }
    }

    public final Country getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final String getName()
    {
      Object localObject1 = this.name_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.name_ = str;
      }
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeBytesSize(1, getCodeBytes());
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeBytesSize(2, getNameBytes());
        this.memoizedSerializedSize = k;
      }
    }

    public final boolean hasCode()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean hasName()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeBytes(1, getCodeBytes());
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeBytes(2, getNameBytes());
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Data.Country, Builder>
      implements Data.CountryOrBuilder
    {
      private int bitField0_;
      private Object code_ = "";
      private Object name_ = "";

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 10:
            this.bitField0_ = (0x1 | this.bitField0_);
            this.code_ = paramCodedInputStream.readBytes();
            break;
          case 18:
          }
          this.bitField0_ = (0x2 | this.bitField0_);
          this.name_ = paramCodedInputStream.readBytes();
        }
      }

      public final Data.Country build()
      {
        Data.Country localCountry = buildPartial();
        if (!localCountry.isInitialized())
          throw new UninitializedMessageException();
        return localCountry;
      }

      public final Data.Country buildPartial()
      {
        Data.Country localCountry = new Data.Country(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Data.Country.access$58202(localCountry, this.code_);
        if ((i & 0x2) == 2)
          k |= 2;
        Data.Country.access$58302(localCountry, this.name_);
        Data.Country.access$58402(localCountry, k);
        return localCountry;
      }

      public final Builder clear()
      {
        super.clear();
        this.code_ = "";
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.name_ = "";
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        return this;
      }

      public final Builder clearCode()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.code_ = Data.Country.getDefaultInstance().getCode();
        return this;
      }

      public final Builder clearName()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.name_ = Data.Country.getDefaultInstance().getName();
        return this;
      }

      public final String getCode()
      {
        Object localObject = this.code_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.code_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final Data.Country getDefaultInstanceForType()
      {
        return Data.Country.getDefaultInstance();
      }

      public final String getName()
      {
        Object localObject = this.name_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.name_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final boolean hasCode()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean hasName()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Data.Country paramCountry)
      {
        if (paramCountry == Data.Country.getDefaultInstance());
        while (true)
        {
          return this;
          if (paramCountry.hasCode())
            setCode(paramCountry.getCode());
          if (paramCountry.hasName())
            setName(paramCountry.getName());
        }
      }

      public final Builder setCode(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x1 | this.bitField0_);
        this.code_ = paramString;
        return this;
      }

      public final Builder setName(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x2 | this.bitField0_);
        this.name_ = paramString;
        return this;
      }
    }
  }

  public static abstract interface CountryOrBuilder extends MessageLiteOrBuilder
  {
    public abstract String getCode();

    public abstract String getName();

    public abstract boolean hasCode();

    public abstract boolean hasName();
  }

  public static final class EventActionData extends GeneratedMessageLite
    implements Data.EventActionDataOrBuilder
  {
    private static final EventActionData defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private Object creatorObfuscatedId_;
    private Object eventId_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;

    static
    {
      EventActionData localEventActionData = new EventActionData();
      defaultInstance = localEventActionData;
      localEventActionData.eventId_ = "";
      localEventActionData.creatorObfuscatedId_ = "";
    }

    private EventActionData()
    {
    }

    private EventActionData(Builder paramBuilder)
    {
      super();
    }

    private ByteString getCreatorObfuscatedIdBytes()
    {
      Object localObject = this.creatorObfuscatedId_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.creatorObfuscatedId_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static EventActionData getDefaultInstance()
    {
      return defaultInstance;
    }

    private ByteString getEventIdBytes()
    {
      Object localObject = this.eventId_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.eventId_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static Builder newBuilder()
    {
      return Builder.access$37800();
    }

    public static Builder newBuilder(EventActionData paramEventActionData)
    {
      return Builder.access$37800().mergeFrom(paramEventActionData);
    }

    public final String getCreatorObfuscatedId()
    {
      Object localObject1 = this.creatorObfuscatedId_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.creatorObfuscatedId_ = str;
      }
    }

    public final EventActionData getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final String getEventId()
    {
      Object localObject1 = this.eventId_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.eventId_ = str;
      }
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeBytesSize(1, getEventIdBytes());
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeBytesSize(2, getCreatorObfuscatedIdBytes());
        this.memoizedSerializedSize = k;
      }
    }

    public final boolean hasCreatorObfuscatedId()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasEventId()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeBytes(1, getEventIdBytes());
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeBytes(2, getCreatorObfuscatedIdBytes());
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Data.EventActionData, Builder>
      implements Data.EventActionDataOrBuilder
    {
      private int bitField0_;
      private Object creatorObfuscatedId_ = "";
      private Object eventId_ = "";

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 10:
            this.bitField0_ = (0x1 | this.bitField0_);
            this.eventId_ = paramCodedInputStream.readBytes();
            break;
          case 18:
          }
          this.bitField0_ = (0x2 | this.bitField0_);
          this.creatorObfuscatedId_ = paramCodedInputStream.readBytes();
        }
      }

      public final Data.EventActionData build()
      {
        Data.EventActionData localEventActionData = buildPartial();
        if (!localEventActionData.isInitialized())
          throw new UninitializedMessageException();
        return localEventActionData;
      }

      public final Data.EventActionData buildPartial()
      {
        Data.EventActionData localEventActionData = new Data.EventActionData(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Data.EventActionData.access$38002(localEventActionData, this.eventId_);
        if ((i & 0x2) == 2)
          k |= 2;
        Data.EventActionData.access$38102(localEventActionData, this.creatorObfuscatedId_);
        Data.EventActionData.access$38202(localEventActionData, k);
        return localEventActionData;
      }

      public final Builder clear()
      {
        super.clear();
        this.eventId_ = "";
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.creatorObfuscatedId_ = "";
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        return this;
      }

      public final Builder clearCreatorObfuscatedId()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.creatorObfuscatedId_ = Data.EventActionData.getDefaultInstance().getCreatorObfuscatedId();
        return this;
      }

      public final Builder clearEventId()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.eventId_ = Data.EventActionData.getDefaultInstance().getEventId();
        return this;
      }

      public final String getCreatorObfuscatedId()
      {
        Object localObject = this.creatorObfuscatedId_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.creatorObfuscatedId_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final Data.EventActionData getDefaultInstanceForType()
      {
        return Data.EventActionData.getDefaultInstance();
      }

      public final String getEventId()
      {
        Object localObject = this.eventId_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.eventId_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final boolean hasCreatorObfuscatedId()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasEventId()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Data.EventActionData paramEventActionData)
      {
        if (paramEventActionData == Data.EventActionData.getDefaultInstance());
        while (true)
        {
          return this;
          if (paramEventActionData.hasEventId())
            setEventId(paramEventActionData.getEventId());
          if (paramEventActionData.hasCreatorObfuscatedId())
            setCreatorObfuscatedId(paramEventActionData.getCreatorObfuscatedId());
        }
      }

      public final Builder setCreatorObfuscatedId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x2 | this.bitField0_);
        this.creatorObfuscatedId_ = paramString;
        return this;
      }

      public final Builder setEventId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x1 | this.bitField0_);
        this.eventId_ = paramString;
        return this;
      }
    }
  }

  public static abstract interface EventActionDataOrBuilder extends MessageLiteOrBuilder
  {
    public abstract String getCreatorObfuscatedId();

    public abstract String getEventId();

    public abstract boolean hasCreatorObfuscatedId();

    public abstract boolean hasEventId();
  }

  public static final class ExpandedData extends GeneratedMessageLite
    implements Data.ExpandedDataOrBuilder
  {
    private static final ExpandedData defaultInstance;
    private static final long serialVersionUID;
    private Data.ActionState actionState_;
    private int bitField0_;
    private List<Data.Comment> comment_;
    private List<Long> likingUserId_;
    private Data.Location location_;
    private List<Data.Media> media_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private Data.ReshareData reshareData_;

    static
    {
      ExpandedData localExpandedData = new ExpandedData();
      defaultInstance = localExpandedData;
      localExpandedData.media_ = Collections.emptyList();
      localExpandedData.comment_ = Collections.emptyList();
      localExpandedData.location_ = Data.Location.getDefaultInstance();
      localExpandedData.likingUserId_ = Collections.emptyList();
      localExpandedData.reshareData_ = Data.ReshareData.getDefaultInstance();
      localExpandedData.actionState_ = Data.ActionState.getDefaultInstance();
    }

    private ExpandedData()
    {
    }

    private ExpandedData(Builder paramBuilder)
    {
      super();
    }

    public static ExpandedData getDefaultInstance()
    {
      return defaultInstance;
    }

    public static Builder newBuilder()
    {
      return Builder.access$5000();
    }

    public static Builder newBuilder(ExpandedData paramExpandedData)
    {
      return Builder.access$5000().mergeFrom(paramExpandedData);
    }

    public final Data.ActionState getActionState()
    {
      return this.actionState_;
    }

    public final Data.Comment getComment(int paramInt)
    {
      return (Data.Comment)this.comment_.get(paramInt);
    }

    public final int getCommentCount()
    {
      return this.comment_.size();
    }

    public final List<Data.Comment> getCommentList()
    {
      return this.comment_;
    }

    public final Data.CommentOrBuilder getCommentOrBuilder(int paramInt)
    {
      return (Data.CommentOrBuilder)this.comment_.get(paramInt);
    }

    public final List<? extends Data.CommentOrBuilder> getCommentOrBuilderList()
    {
      return this.comment_;
    }

    public final ExpandedData getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final long getLikingUserId(int paramInt)
    {
      return ((Long)this.likingUserId_.get(paramInt)).longValue();
    }

    public final int getLikingUserIdCount()
    {
      return this.likingUserId_.size();
    }

    public final List<Long> getLikingUserIdList()
    {
      return this.likingUserId_;
    }

    public final Data.Location getLocation()
    {
      return this.location_;
    }

    public final Data.Media getMedia(int paramInt)
    {
      return (Data.Media)this.media_.get(paramInt);
    }

    public final int getMediaCount()
    {
      return this.media_.size();
    }

    public final List<Data.Media> getMediaList()
    {
      return this.media_;
    }

    public final Data.MediaOrBuilder getMediaOrBuilder(int paramInt)
    {
      return (Data.MediaOrBuilder)this.media_.get(paramInt);
    }

    public final List<? extends Data.MediaOrBuilder> getMediaOrBuilderList()
    {
      return this.media_;
    }

    public final Data.ReshareData getReshareData()
    {
      return this.reshareData_;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int i2;
      for (int i3 = i; ; i3 = i2)
      {
        return i3;
        int j = 0;
        for (int k = 0; k < this.media_.size(); k++)
          j += CodedOutputStream.computeMessageSize(1, (MessageLite)this.media_.get(k));
        for (int m = 0; m < this.comment_.size(); m++)
          j += CodedOutputStream.computeMessageSize(2, (MessageLite)this.comment_.get(m));
        if ((0x1 & this.bitField0_) == 1)
          j += CodedOutputStream.computeMessageSize(3, this.location_);
        int n = 0;
        for (int i1 = 0; i1 < this.likingUserId_.size(); i1++)
          n += CodedOutputStream.computeRawVarint64Size(((Long)this.likingUserId_.get(i1)).longValue());
        i2 = j + n + 1 * getLikingUserIdList().size();
        if ((0x2 & this.bitField0_) == 2)
          i2 += CodedOutputStream.computeMessageSize(5, this.reshareData_);
        if ((0x4 & this.bitField0_) == 4)
          i2 += CodedOutputStream.computeMessageSize(6, this.actionState_);
        this.memoizedSerializedSize = i2;
      }
    }

    public final boolean hasActionState()
    {
      if ((0x4 & this.bitField0_) == 4);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasLocation()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean hasReshareData()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        if ((hasLocation()) && (!getLocation().isInitialized()))
        {
          this.memoizedIsInitialized = 0;
          i = 0;
        }
        else
        {
          this.memoizedIsInitialized = i;
        }
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      for (int i = 0; i < this.media_.size(); i++)
        paramCodedOutputStream.writeMessage(1, (MessageLite)this.media_.get(i));
      for (int j = 0; j < this.comment_.size(); j++)
        paramCodedOutputStream.writeMessage(2, (MessageLite)this.comment_.get(j));
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeMessage(3, this.location_);
      for (int k = 0; k < this.likingUserId_.size(); k++)
        paramCodedOutputStream.writeInt64(4, ((Long)this.likingUserId_.get(k)).longValue());
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeMessage(5, this.reshareData_);
      if ((0x4 & this.bitField0_) == 4)
        paramCodedOutputStream.writeMessage(6, this.actionState_);
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Data.ExpandedData, Builder>
      implements Data.ExpandedDataOrBuilder
    {
      private Data.ActionState actionState_ = Data.ActionState.getDefaultInstance();
      private int bitField0_;
      private List<Data.Comment> comment_ = Collections.emptyList();
      private List<Long> likingUserId_ = Collections.emptyList();
      private Data.Location location_ = Data.Location.getDefaultInstance();
      private List<Data.Media> media_ = Collections.emptyList();
      private Data.ReshareData reshareData_ = Data.ReshareData.getDefaultInstance();

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private void ensureCommentIsMutable()
      {
        if ((0x2 & this.bitField0_) != 2)
        {
          this.comment_ = new ArrayList(this.comment_);
          this.bitField0_ = (0x2 | this.bitField0_);
        }
      }

      private void ensureLikingUserIdIsMutable()
      {
        if ((0x8 & this.bitField0_) != 8)
        {
          this.likingUserId_ = new ArrayList(this.likingUserId_);
          this.bitField0_ = (0x8 | this.bitField0_);
        }
      }

      private void ensureMediaIsMutable()
      {
        if ((0x1 & this.bitField0_) != 1)
        {
          this.media_ = new ArrayList(this.media_);
          this.bitField0_ = (0x1 | this.bitField0_);
        }
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 10:
            Data.Media.Builder localBuilder4 = Data.Media.newBuilder();
            paramCodedInputStream.readMessage(localBuilder4, paramExtensionRegistryLite);
            addMedia(localBuilder4.buildPartial());
            break;
          case 18:
            Data.Comment.Builder localBuilder3 = Data.Comment.newBuilder();
            paramCodedInputStream.readMessage(localBuilder3, paramExtensionRegistryLite);
            addComment(localBuilder3.buildPartial());
            break;
          case 26:
            Data.Location.Builder localBuilder2 = Data.Location.newBuilder();
            if (hasLocation())
              localBuilder2.mergeFrom(getLocation());
            paramCodedInputStream.readMessage(localBuilder2, paramExtensionRegistryLite);
            setLocation(localBuilder2.buildPartial());
            break;
          case 32:
            ensureLikingUserIdIsMutable();
            this.likingUserId_.add(Long.valueOf(paramCodedInputStream.readInt64()));
            break;
          case 34:
            int j = paramCodedInputStream.pushLimit(paramCodedInputStream.readRawVarint32());
            while (paramCodedInputStream.getBytesUntilLimit() > 0)
              addLikingUserId(paramCodedInputStream.readInt64());
            paramCodedInputStream.popLimit(j);
            break;
          case 42:
            Data.ReshareData.Builder localBuilder1 = Data.ReshareData.newBuilder();
            if (hasReshareData())
              localBuilder1.mergeFrom(getReshareData());
            paramCodedInputStream.readMessage(localBuilder1, paramExtensionRegistryLite);
            setReshareData(localBuilder1.buildPartial());
            break;
          case 50:
          }
          Data.ActionState.Builder localBuilder = Data.ActionState.newBuilder();
          if (hasActionState())
            localBuilder.mergeFrom(getActionState());
          paramCodedInputStream.readMessage(localBuilder, paramExtensionRegistryLite);
          setActionState(localBuilder.buildPartial());
        }
      }

      public final Builder addAllComment(Iterable<? extends Data.Comment> paramIterable)
      {
        ensureCommentIsMutable();
        GeneratedMessageLite.Builder.addAll(paramIterable, this.comment_);
        return this;
      }

      public final Builder addAllLikingUserId(Iterable<? extends Long> paramIterable)
      {
        ensureLikingUserIdIsMutable();
        GeneratedMessageLite.Builder.addAll(paramIterable, this.likingUserId_);
        return this;
      }

      public final Builder addAllMedia(Iterable<? extends Data.Media> paramIterable)
      {
        ensureMediaIsMutable();
        GeneratedMessageLite.Builder.addAll(paramIterable, this.media_);
        return this;
      }

      public final Builder addComment(int paramInt, Data.Comment.Builder paramBuilder)
      {
        ensureCommentIsMutable();
        this.comment_.add(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder addComment(int paramInt, Data.Comment paramComment)
      {
        if (paramComment == null)
          throw new NullPointerException();
        ensureCommentIsMutable();
        this.comment_.add(paramInt, paramComment);
        return this;
      }

      public final Builder addComment(Data.Comment.Builder paramBuilder)
      {
        ensureCommentIsMutable();
        this.comment_.add(paramBuilder.build());
        return this;
      }

      public final Builder addComment(Data.Comment paramComment)
      {
        if (paramComment == null)
          throw new NullPointerException();
        ensureCommentIsMutable();
        this.comment_.add(paramComment);
        return this;
      }

      public final Builder addLikingUserId(long paramLong)
      {
        ensureLikingUserIdIsMutable();
        this.likingUserId_.add(Long.valueOf(paramLong));
        return this;
      }

      public final Builder addMedia(int paramInt, Data.Media.Builder paramBuilder)
      {
        ensureMediaIsMutable();
        this.media_.add(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder addMedia(int paramInt, Data.Media paramMedia)
      {
        if (paramMedia == null)
          throw new NullPointerException();
        ensureMediaIsMutable();
        this.media_.add(paramInt, paramMedia);
        return this;
      }

      public final Builder addMedia(Data.Media.Builder paramBuilder)
      {
        ensureMediaIsMutable();
        this.media_.add(paramBuilder.build());
        return this;
      }

      public final Builder addMedia(Data.Media paramMedia)
      {
        if (paramMedia == null)
          throw new NullPointerException();
        ensureMediaIsMutable();
        this.media_.add(paramMedia);
        return this;
      }

      public final Data.ExpandedData build()
      {
        Data.ExpandedData localExpandedData = buildPartial();
        if (!localExpandedData.isInitialized())
          throw new UninitializedMessageException();
        return localExpandedData;
      }

      public final Data.ExpandedData buildPartial()
      {
        Data.ExpandedData localExpandedData = new Data.ExpandedData(this, (byte)0);
        int i = this.bitField0_;
        if ((0x1 & this.bitField0_) == 1)
        {
          this.media_ = Collections.unmodifiableList(this.media_);
          this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        }
        Data.ExpandedData.access$5202(localExpandedData, this.media_);
        if ((0x2 & this.bitField0_) == 2)
        {
          this.comment_ = Collections.unmodifiableList(this.comment_);
          this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        }
        Data.ExpandedData.access$5302(localExpandedData, this.comment_);
        int j = i & 0x4;
        int k = 0;
        if (j == 4)
          k = 1;
        Data.ExpandedData.access$5402(localExpandedData, this.location_);
        if ((0x8 & this.bitField0_) == 8)
        {
          this.likingUserId_ = Collections.unmodifiableList(this.likingUserId_);
          this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        }
        Data.ExpandedData.access$5502(localExpandedData, this.likingUserId_);
        if ((i & 0x10) == 16)
          k |= 2;
        Data.ExpandedData.access$5602(localExpandedData, this.reshareData_);
        if ((i & 0x20) == 32)
          k |= 4;
        Data.ExpandedData.access$5702(localExpandedData, this.actionState_);
        Data.ExpandedData.access$5802(localExpandedData, k);
        return localExpandedData;
      }

      public final Builder clear()
      {
        super.clear();
        this.media_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.comment_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.location_ = Data.Location.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.likingUserId_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        this.reshareData_ = Data.ReshareData.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        this.actionState_ = Data.ActionState.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFDF & this.bitField0_);
        return this;
      }

      public final Builder clearActionState()
      {
        this.actionState_ = Data.ActionState.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFDF & this.bitField0_);
        return this;
      }

      public final Builder clearComment()
      {
        this.comment_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        return this;
      }

      public final Builder clearLikingUserId()
      {
        this.likingUserId_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        return this;
      }

      public final Builder clearLocation()
      {
        this.location_ = Data.Location.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        return this;
      }

      public final Builder clearMedia()
      {
        this.media_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        return this;
      }

      public final Builder clearReshareData()
      {
        this.reshareData_ = Data.ReshareData.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        return this;
      }

      public final Data.ActionState getActionState()
      {
        return this.actionState_;
      }

      public final Data.Comment getComment(int paramInt)
      {
        return (Data.Comment)this.comment_.get(paramInt);
      }

      public final int getCommentCount()
      {
        return this.comment_.size();
      }

      public final List<Data.Comment> getCommentList()
      {
        return Collections.unmodifiableList(this.comment_);
      }

      public final Data.ExpandedData getDefaultInstanceForType()
      {
        return Data.ExpandedData.getDefaultInstance();
      }

      public final long getLikingUserId(int paramInt)
      {
        return ((Long)this.likingUserId_.get(paramInt)).longValue();
      }

      public final int getLikingUserIdCount()
      {
        return this.likingUserId_.size();
      }

      public final List<Long> getLikingUserIdList()
      {
        return Collections.unmodifiableList(this.likingUserId_);
      }

      public final Data.Location getLocation()
      {
        return this.location_;
      }

      public final Data.Media getMedia(int paramInt)
      {
        return (Data.Media)this.media_.get(paramInt);
      }

      public final int getMediaCount()
      {
        return this.media_.size();
      }

      public final List<Data.Media> getMediaList()
      {
        return Collections.unmodifiableList(this.media_);
      }

      public final Data.ReshareData getReshareData()
      {
        return this.reshareData_;
      }

      public final boolean hasActionState()
      {
        if ((0x20 & this.bitField0_) == 32);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasLocation()
      {
        if ((0x4 & this.bitField0_) == 4);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasReshareData()
      {
        if ((0x10 & this.bitField0_) == 16);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean isInitialized()
      {
        if ((hasLocation()) && (!getLocation().isInitialized()));
        for (boolean bool = false; ; bool = true)
          return bool;
      }

      public final Builder mergeFrom(Data.ExpandedData paramExpandedData)
      {
        if (paramExpandedData == Data.ExpandedData.getDefaultInstance());
        label52: label95: Data.Location localLocation;
        label147: label200: Data.ReshareData localReshareData;
        label252: 
        do
        {
          return this;
          if (!paramExpandedData.media_.isEmpty())
          {
            if (!this.media_.isEmpty())
              break;
            this.media_ = paramExpandedData.media_;
            this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
          }
          if (!paramExpandedData.comment_.isEmpty())
          {
            if (!this.comment_.isEmpty())
              break label350;
            this.comment_ = paramExpandedData.comment_;
            this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
          }
          if (paramExpandedData.hasLocation())
          {
            localLocation = paramExpandedData.getLocation();
            if (((0x4 & this.bitField0_) != 4) || (this.location_ == Data.Location.getDefaultInstance()))
              break label371;
            this.location_ = Data.Location.newBuilder(this.location_).mergeFrom(localLocation).buildPartial();
            this.bitField0_ = (0x4 | this.bitField0_);
          }
          if (!paramExpandedData.likingUserId_.isEmpty())
          {
            if (!this.likingUserId_.isEmpty())
              break label380;
            this.likingUserId_ = paramExpandedData.likingUserId_;
            this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
          }
          if (paramExpandedData.hasReshareData())
          {
            localReshareData = paramExpandedData.getReshareData();
            if (((0x10 & this.bitField0_) != 16) || (this.reshareData_ == Data.ReshareData.getDefaultInstance()))
              break label401;
            this.reshareData_ = Data.ReshareData.newBuilder(this.reshareData_).mergeFrom(localReshareData).buildPartial();
            this.bitField0_ = (0x10 | this.bitField0_);
          }
        }
        while (!paramExpandedData.hasActionState());
        Data.ActionState localActionState = paramExpandedData.getActionState();
        if (((0x20 & this.bitField0_) == 32) && (this.actionState_ != Data.ActionState.getDefaultInstance()));
        for (this.actionState_ = Data.ActionState.newBuilder(this.actionState_).mergeFrom(localActionState).buildPartial(); ; this.actionState_ = localActionState)
        {
          this.bitField0_ = (0x20 | this.bitField0_);
          break;
          ensureMediaIsMutable();
          this.media_.addAll(paramExpandedData.media_);
          break label52;
          label350: ensureCommentIsMutable();
          this.comment_.addAll(paramExpandedData.comment_);
          break label95;
          label371: this.location_ = localLocation;
          break label147;
          label380: ensureLikingUserIdIsMutable();
          this.likingUserId_.addAll(paramExpandedData.likingUserId_);
          break label200;
          label401: this.reshareData_ = localReshareData;
          break label252;
        }
      }

      public final Builder setActionState(Data.ActionState.Builder paramBuilder)
      {
        this.actionState_ = paramBuilder.build();
        this.bitField0_ = (0x20 | this.bitField0_);
        return this;
      }

      public final Builder setActionState(Data.ActionState paramActionState)
      {
        if (paramActionState == null)
          throw new NullPointerException();
        this.actionState_ = paramActionState;
        this.bitField0_ = (0x20 | this.bitField0_);
        return this;
      }

      public final Builder setComment(int paramInt, Data.Comment.Builder paramBuilder)
      {
        ensureCommentIsMutable();
        this.comment_.set(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder setComment(int paramInt, Data.Comment paramComment)
      {
        if (paramComment == null)
          throw new NullPointerException();
        ensureCommentIsMutable();
        this.comment_.set(paramInt, paramComment);
        return this;
      }

      public final Builder setLikingUserId(int paramInt, long paramLong)
      {
        ensureLikingUserIdIsMutable();
        this.likingUserId_.set(paramInt, Long.valueOf(paramLong));
        return this;
      }

      public final Builder setLocation(Data.Location.Builder paramBuilder)
      {
        this.location_ = paramBuilder.build();
        this.bitField0_ = (0x4 | this.bitField0_);
        return this;
      }

      public final Builder setLocation(Data.Location paramLocation)
      {
        if (paramLocation == null)
          throw new NullPointerException();
        this.location_ = paramLocation;
        this.bitField0_ = (0x4 | this.bitField0_);
        return this;
      }

      public final Builder setMedia(int paramInt, Data.Media.Builder paramBuilder)
      {
        ensureMediaIsMutable();
        this.media_.set(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder setMedia(int paramInt, Data.Media paramMedia)
      {
        if (paramMedia == null)
          throw new NullPointerException();
        ensureMediaIsMutable();
        this.media_.set(paramInt, paramMedia);
        return this;
      }

      public final Builder setReshareData(Data.ReshareData.Builder paramBuilder)
      {
        this.reshareData_ = paramBuilder.build();
        this.bitField0_ = (0x10 | this.bitField0_);
        return this;
      }

      public final Builder setReshareData(Data.ReshareData paramReshareData)
      {
        if (paramReshareData == null)
          throw new NullPointerException();
        this.reshareData_ = paramReshareData;
        this.bitField0_ = (0x10 | this.bitField0_);
        return this;
      }
    }
  }

  public static abstract interface ExpandedDataOrBuilder extends MessageLiteOrBuilder
  {
    public abstract Data.ActionState getActionState();

    public abstract Data.Comment getComment(int paramInt);

    public abstract int getCommentCount();

    public abstract List<Data.Comment> getCommentList();

    public abstract long getLikingUserId(int paramInt);

    public abstract int getLikingUserIdCount();

    public abstract List<Long> getLikingUserIdList();

    public abstract Data.Location getLocation();

    public abstract Data.Media getMedia(int paramInt);

    public abstract int getMediaCount();

    public abstract List<Data.Media> getMediaList();

    public abstract Data.ReshareData getReshareData();

    public abstract boolean hasActionState();

    public abstract boolean hasLocation();

    public abstract boolean hasReshareData();
  }

  public static final class Explanation extends GeneratedMessageLite
    implements Data.ExplanationOrBuilder
  {
    private static final Explanation defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private Object displayName_;
    private Object id_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private Type type_;

    static
    {
      Explanation localExplanation = new Explanation();
      defaultInstance = localExplanation;
      localExplanation.type_ = Type.POSTED_BY;
      localExplanation.id_ = "";
      localExplanation.displayName_ = "";
    }

    private Explanation()
    {
    }

    private Explanation(Builder paramBuilder)
    {
      super();
    }

    public static Explanation getDefaultInstance()
    {
      return defaultInstance;
    }

    private ByteString getDisplayNameBytes()
    {
      Object localObject = this.displayName_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.displayName_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    private ByteString getIdBytes()
    {
      Object localObject = this.id_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.id_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static Builder newBuilder()
    {
      return Builder.access$2700();
    }

    public final Explanation getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final String getDisplayName()
    {
      Object localObject1 = this.displayName_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.displayName_ = str;
      }
    }

    public final String getId()
    {
      Object localObject1 = this.id_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.id_ = str;
      }
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeEnumSize(1, this.type_.getNumber());
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeBytesSize(2, getIdBytes());
        if ((0x4 & this.bitField0_) == 4)
          k += CodedOutputStream.computeBytesSize(3, getDisplayNameBytes());
        this.memoizedSerializedSize = k;
      }
    }

    public final Type getType()
    {
      return this.type_;
    }

    public final boolean hasDisplayName()
    {
      if ((0x4 & this.bitField0_) == 4);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasId()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasType()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeEnum(1, this.type_.getNumber());
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeBytes(2, getIdBytes());
      if ((0x4 & this.bitField0_) == 4)
        paramCodedOutputStream.writeBytes(3, getDisplayNameBytes());
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Data.Explanation, Builder>
      implements Data.ExplanationOrBuilder
    {
      private int bitField0_;
      private Object displayName_ = "";
      private Object id_ = "";
      private Data.Explanation.Type type_ = Data.Explanation.Type.POSTED_BY;

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 8:
            Data.Explanation.Type localType = Data.Explanation.Type.valueOf(paramCodedInputStream.readEnum());
            if (localType == null)
              continue;
            this.bitField0_ = (0x1 | this.bitField0_);
            this.type_ = localType;
            break;
          case 18:
            this.bitField0_ = (0x2 | this.bitField0_);
            this.id_ = paramCodedInputStream.readBytes();
            break;
          case 26:
          }
          this.bitField0_ = (0x4 | this.bitField0_);
          this.displayName_ = paramCodedInputStream.readBytes();
        }
      }

      public final Data.Explanation build()
      {
        Data.Explanation localExplanation = buildPartial();
        if (!localExplanation.isInitialized())
          throw new UninitializedMessageException();
        return localExplanation;
      }

      public final Data.Explanation buildPartial()
      {
        Data.Explanation localExplanation = new Data.Explanation(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Data.Explanation.access$2902(localExplanation, this.type_);
        if ((i & 0x2) == 2)
          k |= 2;
        Data.Explanation.access$3002(localExplanation, this.id_);
        if ((i & 0x4) == 4)
          k |= 4;
        Data.Explanation.access$3102(localExplanation, this.displayName_);
        Data.Explanation.access$3202(localExplanation, k);
        return localExplanation;
      }

      public final Builder clear()
      {
        super.clear();
        this.type_ = Data.Explanation.Type.POSTED_BY;
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.id_ = "";
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.displayName_ = "";
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        return this;
      }

      public final Builder clearDisplayName()
      {
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.displayName_ = Data.Explanation.getDefaultInstance().getDisplayName();
        return this;
      }

      public final Builder clearId()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.id_ = Data.Explanation.getDefaultInstance().getId();
        return this;
      }

      public final Builder clearType()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.type_ = Data.Explanation.Type.POSTED_BY;
        return this;
      }

      public final Data.Explanation getDefaultInstanceForType()
      {
        return Data.Explanation.getDefaultInstance();
      }

      public final String getDisplayName()
      {
        Object localObject = this.displayName_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.displayName_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final String getId()
      {
        Object localObject = this.id_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.id_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final Data.Explanation.Type getType()
      {
        return this.type_;
      }

      public final boolean hasDisplayName()
      {
        if ((0x4 & this.bitField0_) == 4);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasId()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasType()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Data.Explanation paramExplanation)
      {
        if (paramExplanation == Data.Explanation.getDefaultInstance());
        while (true)
        {
          return this;
          if (paramExplanation.hasType())
            setType(paramExplanation.getType());
          if (paramExplanation.hasId())
            setId(paramExplanation.getId());
          if (paramExplanation.hasDisplayName())
            setDisplayName(paramExplanation.getDisplayName());
        }
      }

      public final Builder setDisplayName(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x4 | this.bitField0_);
        this.displayName_ = paramString;
        return this;
      }

      public final Builder setId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x2 | this.bitField0_);
        this.id_ = paramString;
        return this;
      }

      public final Builder setType(Data.Explanation.Type paramType)
      {
        if (paramType == null)
          throw new NullPointerException();
        this.bitField0_ = (0x1 | this.bitField0_);
        this.type_ = paramType;
        return this;
      }
    }

    public static enum Type
      implements Internal.EnumLite
    {
      private static Internal.EnumLiteMap<Type> internalValueMap = new Internal.EnumLiteMap()
      {
      };
      private final int value;

      static
      {
        POPULAR_TOPIC = new Type("POPULAR_TOPIC", 2, 3);
        POPULAR_IN_CIRCLE = new Type("POPULAR_IN_CIRCLE", 3, 4);
        YOU_ARE_AT = new Type("YOU_ARE_AT", 4, 5);
        OFFER = new Type("OFFER", 5, 6);
        RECOMMENDED_BY = new Type("RECOMMENDED_BY", 6, 7);
        UNKNOWN = new Type("UNKNOWN", 7, 8);
        SHARED_AD_BY = new Type("SHARED_AD_BY", 8, 9);
        CHECKIN = new Type("CHECKIN", 9, 10);
        SHARED_PLUS_PAGE_BY = new Type("SHARED_PLUS_PAGE_BY", 10, 11);
        Type[] arrayOfType = new Type[11];
        arrayOfType[0] = POSTED_BY;
        arrayOfType[1] = SHARED_BY;
        arrayOfType[2] = POPULAR_TOPIC;
        arrayOfType[3] = POPULAR_IN_CIRCLE;
        arrayOfType[4] = YOU_ARE_AT;
        arrayOfType[5] = OFFER;
        arrayOfType[6] = RECOMMENDED_BY;
        arrayOfType[7] = UNKNOWN;
        arrayOfType[8] = SHARED_AD_BY;
        arrayOfType[9] = CHECKIN;
        arrayOfType[10] = SHARED_PLUS_PAGE_BY;
      }

      private Type(int paramInt1, int paramInt2)
      {
        this.value = paramInt1;
      }

      public static Type valueOf(int paramInt)
      {
        Type localType;
        switch (paramInt)
        {
        default:
          localType = null;
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
        case 6:
        case 7:
        case 8:
        case 9:
        case 10:
        case 11:
        }
        while (true)
        {
          return localType;
          localType = POSTED_BY;
          continue;
          localType = SHARED_BY;
          continue;
          localType = POPULAR_TOPIC;
          continue;
          localType = POPULAR_IN_CIRCLE;
          continue;
          localType = YOU_ARE_AT;
          continue;
          localType = OFFER;
          continue;
          localType = RECOMMENDED_BY;
          continue;
          localType = UNKNOWN;
          continue;
          localType = SHARED_AD_BY;
          continue;
          localType = CHECKIN;
          continue;
          localType = SHARED_PLUS_PAGE_BY;
        }
      }

      public final int getNumber()
      {
        return this.value;
      }
    }
  }

  public static abstract interface ExplanationOrBuilder extends MessageLiteOrBuilder
  {
    public abstract String getDisplayName();

    public abstract String getId();

    public abstract Data.Explanation.Type getType();

    public abstract boolean hasDisplayName();

    public abstract boolean hasId();

    public abstract boolean hasType();
  }

  public static final class Gender extends GeneratedMessageLite
    implements Data.GenderOrBuilder
  {
    private static final Gender defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private Type type_;

    static
    {
      Gender localGender = new Gender();
      defaultInstance = localGender;
      localGender.type_ = Type.MALE;
    }

    private Gender()
    {
    }

    private Gender(Builder paramBuilder)
    {
      super();
    }

    public static Gender getDefaultInstance()
    {
      return defaultInstance;
    }

    public static Builder newBuilder()
    {
      return Builder.access$41200();
    }

    public static Builder newBuilder(Gender paramGender)
    {
      return Builder.access$41200().mergeFrom(paramGender);
    }

    public final Gender getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeEnumSize(1, this.type_.getNumber());
        this.memoizedSerializedSize = k;
      }
    }

    public final Type getType()
    {
      return this.type_;
    }

    public final boolean hasType()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeEnum(1, this.type_.getNumber());
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Data.Gender, Builder>
      implements Data.GenderOrBuilder
    {
      private int bitField0_;
      private Data.Gender.Type type_ = Data.Gender.Type.MALE;

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 8:
          }
          Data.Gender.Type localType = Data.Gender.Type.valueOf(paramCodedInputStream.readEnum());
          if (localType != null)
          {
            this.bitField0_ = (0x1 | this.bitField0_);
            this.type_ = localType;
          }
        }
      }

      public final Data.Gender build()
      {
        Data.Gender localGender = buildPartial();
        if (!localGender.isInitialized())
          throw new UninitializedMessageException();
        return localGender;
      }

      public final Data.Gender buildPartial()
      {
        Data.Gender localGender = new Data.Gender(this, (byte)0);
        int i = 0x1 & this.bitField0_;
        int j = 0;
        if (i == 1)
          j = 1;
        Data.Gender.access$41402(localGender, this.type_);
        Data.Gender.access$41502(localGender, j);
        return localGender;
      }

      public final Builder clear()
      {
        super.clear();
        this.type_ = Data.Gender.Type.MALE;
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        return this;
      }

      public final Builder clearType()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.type_ = Data.Gender.Type.MALE;
        return this;
      }

      public final Data.Gender getDefaultInstanceForType()
      {
        return Data.Gender.getDefaultInstance();
      }

      public final Data.Gender.Type getType()
      {
        return this.type_;
      }

      public final boolean hasType()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Data.Gender paramGender)
      {
        if (paramGender == Data.Gender.getDefaultInstance());
        while (true)
        {
          return this;
          if (paramGender.hasType())
            setType(paramGender.getType());
        }
      }

      public final Builder setType(Data.Gender.Type paramType)
      {
        if (paramType == null)
          throw new NullPointerException();
        this.bitField0_ = (0x1 | this.bitField0_);
        this.type_ = paramType;
        return this;
      }
    }

    public static enum Type
      implements Internal.EnumLite
    {
      private static Internal.EnumLiteMap<Type> internalValueMap = new Internal.EnumLiteMap()
      {
      };
      private final int value;

      static
      {
        FEMALE = new Type("FEMALE", 1, 2);
        UNKNOWN = new Type("UNKNOWN", 2, 3);
        Type[] arrayOfType = new Type[3];
        arrayOfType[0] = MALE;
        arrayOfType[1] = FEMALE;
        arrayOfType[2] = UNKNOWN;
      }

      private Type(int paramInt1, int paramInt2)
      {
        this.value = paramInt1;
      }

      public static Type valueOf(int paramInt)
      {
        Type localType;
        switch (paramInt)
        {
        default:
          localType = null;
        case 1:
        case 2:
        case 3:
        }
        while (true)
        {
          return localType;
          localType = MALE;
          continue;
          localType = FEMALE;
          continue;
          localType = UNKNOWN;
        }
      }

      public final int getNumber()
      {
        return this.value;
      }
    }
  }

  public static abstract interface GenderOrBuilder extends MessageLiteOrBuilder
  {
    public abstract Data.Gender.Type getType();

    public abstract boolean hasType();
  }

  public static final class HangoutData extends GeneratedMessageLite
    implements Data.HangoutDataOrBuilder
  {
    private static final HangoutData defaultInstance;
    private static final long serialVersionUID;
    private List<Data.HangoutOccupant> activeOccupant_;
    private int bitField0_;
    private Object broadcastId_;
    private boolean idIsAutogenerated_;
    private List<Data.HangoutOccupant> inactiveOccupant_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private LazyStringList notificationId_;
    private Object roomDomain_;
    private Object roomId_;
    private Object subject_;
    private HangoutType type_;
    private Object url_;

    static
    {
      HangoutData localHangoutData = new HangoutData();
      defaultInstance = localHangoutData;
      localHangoutData.roomId_ = "";
      localHangoutData.url_ = "";
      localHangoutData.subject_ = "";
      localHangoutData.activeOccupant_ = Collections.emptyList();
      localHangoutData.inactiveOccupant_ = Collections.emptyList();
      localHangoutData.roomDomain_ = "";
      localHangoutData.notificationId_ = LazyStringArrayList.EMPTY;
      localHangoutData.type_ = HangoutType.CONSUMER;
      localHangoutData.idIsAutogenerated_ = true;
      localHangoutData.broadcastId_ = "";
    }

    private HangoutData()
    {
    }

    private HangoutData(Builder paramBuilder)
    {
      super();
    }

    private ByteString getBroadcastIdBytes()
    {
      Object localObject = this.broadcastId_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.broadcastId_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static HangoutData getDefaultInstance()
    {
      return defaultInstance;
    }

    private ByteString getRoomDomainBytes()
    {
      Object localObject = this.roomDomain_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.roomDomain_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    private ByteString getRoomIdBytes()
    {
      Object localObject = this.roomId_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.roomId_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    private ByteString getSubjectBytes()
    {
      Object localObject = this.subject_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.subject_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    private ByteString getUrlBytes()
    {
      Object localObject = this.url_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.url_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static Builder newBuilder()
    {
      return Builder.access$51700();
    }

    public static Builder newBuilder(HangoutData paramHangoutData)
    {
      return Builder.access$51700().mergeFrom(paramHangoutData);
    }

    public final Data.HangoutOccupant getActiveOccupant(int paramInt)
    {
      return (Data.HangoutOccupant)this.activeOccupant_.get(paramInt);
    }

    public final int getActiveOccupantCount()
    {
      return this.activeOccupant_.size();
    }

    public final List<Data.HangoutOccupant> getActiveOccupantList()
    {
      return this.activeOccupant_;
    }

    public final Data.HangoutOccupantOrBuilder getActiveOccupantOrBuilder(int paramInt)
    {
      return (Data.HangoutOccupantOrBuilder)this.activeOccupant_.get(paramInt);
    }

    public final List<? extends Data.HangoutOccupantOrBuilder> getActiveOccupantOrBuilderList()
    {
      return this.activeOccupant_;
    }

    public final String getBroadcastId()
    {
      Object localObject1 = this.broadcastId_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.broadcastId_ = str;
      }
    }

    public final HangoutData getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final boolean getIdIsAutogenerated()
    {
      return this.idIsAutogenerated_;
    }

    public final Data.HangoutOccupant getInactiveOccupant(int paramInt)
    {
      return (Data.HangoutOccupant)this.inactiveOccupant_.get(paramInt);
    }

    public final int getInactiveOccupantCount()
    {
      return this.inactiveOccupant_.size();
    }

    public final List<Data.HangoutOccupant> getInactiveOccupantList()
    {
      return this.inactiveOccupant_;
    }

    public final Data.HangoutOccupantOrBuilder getInactiveOccupantOrBuilder(int paramInt)
    {
      return (Data.HangoutOccupantOrBuilder)this.inactiveOccupant_.get(paramInt);
    }

    public final List<? extends Data.HangoutOccupantOrBuilder> getInactiveOccupantOrBuilderList()
    {
      return this.inactiveOccupant_;
    }

    public final String getNotificationId(int paramInt)
    {
      return (String)this.notificationId_.get(paramInt);
    }

    public final int getNotificationIdCount()
    {
      return this.notificationId_.size();
    }

    public final List<String> getNotificationIdList()
    {
      return this.notificationId_;
    }

    public final String getRoomDomain()
    {
      Object localObject1 = this.roomDomain_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.roomDomain_ = str;
      }
    }

    public final String getRoomId()
    {
      Object localObject1 = this.roomId_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.roomId_ = str;
      }
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int i3;
      for (int i4 = i; ; i4 = i3)
      {
        return i4;
        int j = 0x1 & this.bitField0_;
        int k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeBytesSize(1, getRoomIdBytes());
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeBytesSize(2, getUrlBytes());
        if ((0x4 & this.bitField0_) == 4)
          k += CodedOutputStream.computeBytesSize(3, getSubjectBytes());
        for (int m = 0; m < this.activeOccupant_.size(); m++)
          k += CodedOutputStream.computeMessageSize(4, (MessageLite)this.activeOccupant_.get(m));
        for (int n = 0; n < this.inactiveOccupant_.size(); n++)
          k += CodedOutputStream.computeMessageSize(5, (MessageLite)this.inactiveOccupant_.get(n));
        if ((0x8 & this.bitField0_) == 8)
          k += CodedOutputStream.computeBytesSize(6, getRoomDomainBytes());
        int i1 = 0;
        for (int i2 = 0; i2 < this.notificationId_.size(); i2++)
          i1 += CodedOutputStream.computeBytesSizeNoTag(this.notificationId_.getByteString(i2));
        i3 = k + i1 + 1 * getNotificationIdList().size();
        if ((0x10 & this.bitField0_) == 16)
          i3 += CodedOutputStream.computeEnumSize(8, this.type_.getNumber());
        if ((0x20 & this.bitField0_) == 32)
          i3 += CodedOutputStream.computeBoolSize(9, this.idIsAutogenerated_);
        if ((0x40 & this.bitField0_) == 64)
          i3 += CodedOutputStream.computeBytesSize(10, getBroadcastIdBytes());
        this.memoizedSerializedSize = i3;
      }
    }

    public final String getSubject()
    {
      Object localObject1 = this.subject_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.subject_ = str;
      }
    }

    public final HangoutType getType()
    {
      return this.type_;
    }

    public final String getUrl()
    {
      Object localObject1 = this.url_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.url_ = str;
      }
    }

    public final boolean hasBroadcastId()
    {
      if ((0x40 & this.bitField0_) == 64);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasIdIsAutogenerated()
    {
      if ((0x20 & this.bitField0_) == 32);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasRoomDomain()
    {
      if ((0x8 & this.bitField0_) == 8);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasRoomId()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean hasSubject()
    {
      if ((0x4 & this.bitField0_) == 4);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasType()
    {
      if ((0x10 & this.bitField0_) == 16);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasUrl()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeBytes(1, getRoomIdBytes());
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeBytes(2, getUrlBytes());
      if ((0x4 & this.bitField0_) == 4)
        paramCodedOutputStream.writeBytes(3, getSubjectBytes());
      for (int i = 0; i < this.activeOccupant_.size(); i++)
        paramCodedOutputStream.writeMessage(4, (MessageLite)this.activeOccupant_.get(i));
      for (int j = 0; j < this.inactiveOccupant_.size(); j++)
        paramCodedOutputStream.writeMessage(5, (MessageLite)this.inactiveOccupant_.get(j));
      if ((0x8 & this.bitField0_) == 8)
        paramCodedOutputStream.writeBytes(6, getRoomDomainBytes());
      for (int k = 0; k < this.notificationId_.size(); k++)
        paramCodedOutputStream.writeBytes(7, this.notificationId_.getByteString(k));
      if ((0x10 & this.bitField0_) == 16)
        paramCodedOutputStream.writeEnum(8, this.type_.getNumber());
      if ((0x20 & this.bitField0_) == 32)
        paramCodedOutputStream.writeBool(9, this.idIsAutogenerated_);
      if ((0x40 & this.bitField0_) == 64)
        paramCodedOutputStream.writeBytes(10, getBroadcastIdBytes());
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Data.HangoutData, Builder>
      implements Data.HangoutDataOrBuilder
    {
      private List<Data.HangoutOccupant> activeOccupant_ = Collections.emptyList();
      private int bitField0_;
      private Object broadcastId_ = "";
      private boolean idIsAutogenerated_ = true;
      private List<Data.HangoutOccupant> inactiveOccupant_ = Collections.emptyList();
      private LazyStringList notificationId_ = LazyStringArrayList.EMPTY;
      private Object roomDomain_ = "";
      private Object roomId_ = "";
      private Object subject_ = "";
      private Data.HangoutData.HangoutType type_ = Data.HangoutData.HangoutType.CONSUMER;
      private Object url_ = "";

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private void ensureActiveOccupantIsMutable()
      {
        if ((0x8 & this.bitField0_) != 8)
        {
          this.activeOccupant_ = new ArrayList(this.activeOccupant_);
          this.bitField0_ = (0x8 | this.bitField0_);
        }
      }

      private void ensureInactiveOccupantIsMutable()
      {
        if ((0x10 & this.bitField0_) != 16)
        {
          this.inactiveOccupant_ = new ArrayList(this.inactiveOccupant_);
          this.bitField0_ = (0x10 | this.bitField0_);
        }
      }

      private void ensureNotificationIdIsMutable()
      {
        if ((0x40 & this.bitField0_) != 64)
        {
          this.notificationId_ = new LazyStringArrayList(this.notificationId_);
          this.bitField0_ = (0x40 | this.bitField0_);
        }
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 10:
            this.bitField0_ = (0x1 | this.bitField0_);
            this.roomId_ = paramCodedInputStream.readBytes();
            break;
          case 18:
            this.bitField0_ = (0x2 | this.bitField0_);
            this.url_ = paramCodedInputStream.readBytes();
            break;
          case 26:
            this.bitField0_ = (0x4 | this.bitField0_);
            this.subject_ = paramCodedInputStream.readBytes();
            break;
          case 34:
            Data.HangoutOccupant.Builder localBuilder2 = Data.HangoutOccupant.newBuilder();
            paramCodedInputStream.readMessage(localBuilder2, paramExtensionRegistryLite);
            addActiveOccupant(localBuilder2.buildPartial());
            break;
          case 42:
            Data.HangoutOccupant.Builder localBuilder1 = Data.HangoutOccupant.newBuilder();
            paramCodedInputStream.readMessage(localBuilder1, paramExtensionRegistryLite);
            addInactiveOccupant(localBuilder1.buildPartial());
            break;
          case 50:
            this.bitField0_ = (0x20 | this.bitField0_);
            this.roomDomain_ = paramCodedInputStream.readBytes();
            break;
          case 58:
            ensureNotificationIdIsMutable();
            this.notificationId_.add(paramCodedInputStream.readBytes());
            break;
          case 64:
            Data.HangoutData.HangoutType localHangoutType = Data.HangoutData.HangoutType.valueOf(paramCodedInputStream.readEnum());
            if (localHangoutType == null)
              continue;
            this.bitField0_ = (0x80 | this.bitField0_);
            this.type_ = localHangoutType;
            break;
          case 72:
            this.bitField0_ = (0x100 | this.bitField0_);
            this.idIsAutogenerated_ = paramCodedInputStream.readBool();
            break;
          case 82:
          }
          this.bitField0_ = (0x200 | this.bitField0_);
          this.broadcastId_ = paramCodedInputStream.readBytes();
        }
      }

      public final Builder addActiveOccupant(int paramInt, Data.HangoutOccupant.Builder paramBuilder)
      {
        ensureActiveOccupantIsMutable();
        this.activeOccupant_.add(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder addActiveOccupant(int paramInt, Data.HangoutOccupant paramHangoutOccupant)
      {
        if (paramHangoutOccupant == null)
          throw new NullPointerException();
        ensureActiveOccupantIsMutable();
        this.activeOccupant_.add(paramInt, paramHangoutOccupant);
        return this;
      }

      public final Builder addActiveOccupant(Data.HangoutOccupant.Builder paramBuilder)
      {
        ensureActiveOccupantIsMutable();
        this.activeOccupant_.add(paramBuilder.build());
        return this;
      }

      public final Builder addActiveOccupant(Data.HangoutOccupant paramHangoutOccupant)
      {
        if (paramHangoutOccupant == null)
          throw new NullPointerException();
        ensureActiveOccupantIsMutable();
        this.activeOccupant_.add(paramHangoutOccupant);
        return this;
      }

      public final Builder addAllActiveOccupant(Iterable<? extends Data.HangoutOccupant> paramIterable)
      {
        ensureActiveOccupantIsMutable();
        GeneratedMessageLite.Builder.addAll(paramIterable, this.activeOccupant_);
        return this;
      }

      public final Builder addAllInactiveOccupant(Iterable<? extends Data.HangoutOccupant> paramIterable)
      {
        ensureInactiveOccupantIsMutable();
        GeneratedMessageLite.Builder.addAll(paramIterable, this.inactiveOccupant_);
        return this;
      }

      public final Builder addAllNotificationId(Iterable<String> paramIterable)
      {
        ensureNotificationIdIsMutable();
        GeneratedMessageLite.Builder.addAll(paramIterable, this.notificationId_);
        return this;
      }

      public final Builder addInactiveOccupant(int paramInt, Data.HangoutOccupant.Builder paramBuilder)
      {
        ensureInactiveOccupantIsMutable();
        this.inactiveOccupant_.add(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder addInactiveOccupant(int paramInt, Data.HangoutOccupant paramHangoutOccupant)
      {
        if (paramHangoutOccupant == null)
          throw new NullPointerException();
        ensureInactiveOccupantIsMutable();
        this.inactiveOccupant_.add(paramInt, paramHangoutOccupant);
        return this;
      }

      public final Builder addInactiveOccupant(Data.HangoutOccupant.Builder paramBuilder)
      {
        ensureInactiveOccupantIsMutable();
        this.inactiveOccupant_.add(paramBuilder.build());
        return this;
      }

      public final Builder addInactiveOccupant(Data.HangoutOccupant paramHangoutOccupant)
      {
        if (paramHangoutOccupant == null)
          throw new NullPointerException();
        ensureInactiveOccupantIsMutable();
        this.inactiveOccupant_.add(paramHangoutOccupant);
        return this;
      }

      public final Builder addNotificationId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        ensureNotificationIdIsMutable();
        this.notificationId_.add(paramString);
        return this;
      }

      public final Data.HangoutData build()
      {
        Data.HangoutData localHangoutData = buildPartial();
        if (!localHangoutData.isInitialized())
          throw new UninitializedMessageException();
        return localHangoutData;
      }

      public final Data.HangoutData buildPartial()
      {
        Data.HangoutData localHangoutData = new Data.HangoutData(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Data.HangoutData.access$51902(localHangoutData, this.roomId_);
        if ((i & 0x2) == 2)
          k |= 2;
        Data.HangoutData.access$52002(localHangoutData, this.url_);
        if ((i & 0x4) == 4)
          k |= 4;
        Data.HangoutData.access$52102(localHangoutData, this.subject_);
        if ((0x8 & this.bitField0_) == 8)
        {
          this.activeOccupant_ = Collections.unmodifiableList(this.activeOccupant_);
          this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        }
        Data.HangoutData.access$52202(localHangoutData, this.activeOccupant_);
        if ((0x10 & this.bitField0_) == 16)
        {
          this.inactiveOccupant_ = Collections.unmodifiableList(this.inactiveOccupant_);
          this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        }
        Data.HangoutData.access$52302(localHangoutData, this.inactiveOccupant_);
        if ((i & 0x20) == 32)
          k |= 8;
        Data.HangoutData.access$52402(localHangoutData, this.roomDomain_);
        if ((0x40 & this.bitField0_) == 64)
        {
          this.notificationId_ = new UnmodifiableLazyStringList(this.notificationId_);
          this.bitField0_ = (0xFFFFFFBF & this.bitField0_);
        }
        Data.HangoutData.access$52502(localHangoutData, this.notificationId_);
        if ((i & 0x80) == 128)
          k |= 16;
        Data.HangoutData.access$52602(localHangoutData, this.type_);
        if ((i & 0x100) == 256)
          k |= 32;
        Data.HangoutData.access$52702(localHangoutData, this.idIsAutogenerated_);
        if ((i & 0x200) == 512)
          k |= 64;
        Data.HangoutData.access$52802(localHangoutData, this.broadcastId_);
        Data.HangoutData.access$52902(localHangoutData, k);
        return localHangoutData;
      }

      public final Builder clear()
      {
        super.clear();
        this.roomId_ = "";
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.url_ = "";
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.subject_ = "";
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.activeOccupant_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        this.inactiveOccupant_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        this.roomDomain_ = "";
        this.bitField0_ = (0xFFFFFFDF & this.bitField0_);
        this.notificationId_ = LazyStringArrayList.EMPTY;
        this.bitField0_ = (0xFFFFFFBF & this.bitField0_);
        this.type_ = Data.HangoutData.HangoutType.CONSUMER;
        this.bitField0_ = (0xFFFFFF7F & this.bitField0_);
        this.idIsAutogenerated_ = true;
        this.bitField0_ = (0xFFFFFEFF & this.bitField0_);
        this.broadcastId_ = "";
        this.bitField0_ = (0xFFFFFDFF & this.bitField0_);
        return this;
      }

      public final Builder clearActiveOccupant()
      {
        this.activeOccupant_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        return this;
      }

      public final Builder clearBroadcastId()
      {
        this.bitField0_ = (0xFFFFFDFF & this.bitField0_);
        this.broadcastId_ = Data.HangoutData.getDefaultInstance().getBroadcastId();
        return this;
      }

      public final Builder clearIdIsAutogenerated()
      {
        this.bitField0_ = (0xFFFFFEFF & this.bitField0_);
        this.idIsAutogenerated_ = true;
        return this;
      }

      public final Builder clearInactiveOccupant()
      {
        this.inactiveOccupant_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        return this;
      }

      public final Builder clearNotificationId()
      {
        this.notificationId_ = LazyStringArrayList.EMPTY;
        this.bitField0_ = (0xFFFFFFBF & this.bitField0_);
        return this;
      }

      public final Builder clearRoomDomain()
      {
        this.bitField0_ = (0xFFFFFFDF & this.bitField0_);
        this.roomDomain_ = Data.HangoutData.getDefaultInstance().getRoomDomain();
        return this;
      }

      public final Builder clearRoomId()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.roomId_ = Data.HangoutData.getDefaultInstance().getRoomId();
        return this;
      }

      public final Builder clearSubject()
      {
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.subject_ = Data.HangoutData.getDefaultInstance().getSubject();
        return this;
      }

      public final Builder clearType()
      {
        this.bitField0_ = (0xFFFFFF7F & this.bitField0_);
        this.type_ = Data.HangoutData.HangoutType.CONSUMER;
        return this;
      }

      public final Builder clearUrl()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.url_ = Data.HangoutData.getDefaultInstance().getUrl();
        return this;
      }

      public final Data.HangoutOccupant getActiveOccupant(int paramInt)
      {
        return (Data.HangoutOccupant)this.activeOccupant_.get(paramInt);
      }

      public final int getActiveOccupantCount()
      {
        return this.activeOccupant_.size();
      }

      public final List<Data.HangoutOccupant> getActiveOccupantList()
      {
        return Collections.unmodifiableList(this.activeOccupant_);
      }

      public final String getBroadcastId()
      {
        Object localObject = this.broadcastId_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.broadcastId_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final Data.HangoutData getDefaultInstanceForType()
      {
        return Data.HangoutData.getDefaultInstance();
      }

      public final boolean getIdIsAutogenerated()
      {
        return this.idIsAutogenerated_;
      }

      public final Data.HangoutOccupant getInactiveOccupant(int paramInt)
      {
        return (Data.HangoutOccupant)this.inactiveOccupant_.get(paramInt);
      }

      public final int getInactiveOccupantCount()
      {
        return this.inactiveOccupant_.size();
      }

      public final List<Data.HangoutOccupant> getInactiveOccupantList()
      {
        return Collections.unmodifiableList(this.inactiveOccupant_);
      }

      public final String getNotificationId(int paramInt)
      {
        return (String)this.notificationId_.get(paramInt);
      }

      public final int getNotificationIdCount()
      {
        return this.notificationId_.size();
      }

      public final List<String> getNotificationIdList()
      {
        return Collections.unmodifiableList(this.notificationId_);
      }

      public final String getRoomDomain()
      {
        Object localObject = this.roomDomain_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.roomDomain_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final String getRoomId()
      {
        Object localObject = this.roomId_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.roomId_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final String getSubject()
      {
        Object localObject = this.subject_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.subject_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final Data.HangoutData.HangoutType getType()
      {
        return this.type_;
      }

      public final String getUrl()
      {
        Object localObject = this.url_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.url_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final boolean hasBroadcastId()
      {
        if ((0x200 & this.bitField0_) == 512);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasIdIsAutogenerated()
      {
        if ((0x100 & this.bitField0_) == 256);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasRoomDomain()
      {
        if ((0x20 & this.bitField0_) == 32);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasRoomId()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean hasSubject()
      {
        if ((0x4 & this.bitField0_) == 4);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasType()
      {
        if ((0x80 & this.bitField0_) == 128);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasUrl()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Data.HangoutData paramHangoutData)
      {
        if (paramHangoutData == Data.HangoutData.getDefaultInstance())
          return this;
        if (paramHangoutData.hasRoomId())
          setRoomId(paramHangoutData.getRoomId());
        if (paramHangoutData.hasUrl())
          setUrl(paramHangoutData.getUrl());
        if (paramHangoutData.hasSubject())
          setSubject(paramHangoutData.getSubject());
        if (!paramHangoutData.activeOccupant_.isEmpty())
        {
          if (this.activeOccupant_.isEmpty())
          {
            this.activeOccupant_ = paramHangoutData.activeOccupant_;
            this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
          }
        }
        else
        {
          label100: if (!paramHangoutData.inactiveOccupant_.isEmpty())
          {
            if (!this.inactiveOccupant_.isEmpty())
              break label274;
            this.inactiveOccupant_ = paramHangoutData.inactiveOccupant_;
            this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
          }
          label143: if (paramHangoutData.hasRoomDomain())
            setRoomDomain(paramHangoutData.getRoomDomain());
          if (!paramHangoutData.notificationId_.isEmpty())
          {
            if (!this.notificationId_.isEmpty())
              break label295;
            this.notificationId_ = paramHangoutData.notificationId_;
            this.bitField0_ = (0xFFFFFFBF & this.bitField0_);
          }
        }
        while (true)
        {
          if (paramHangoutData.hasType())
            setType(paramHangoutData.getType());
          if (paramHangoutData.hasIdIsAutogenerated())
            setIdIsAutogenerated(paramHangoutData.getIdIsAutogenerated());
          if (!paramHangoutData.hasBroadcastId())
            break;
          setBroadcastId(paramHangoutData.getBroadcastId());
          break;
          ensureActiveOccupantIsMutable();
          this.activeOccupant_.addAll(paramHangoutData.activeOccupant_);
          break label100;
          label274: ensureInactiveOccupantIsMutable();
          this.inactiveOccupant_.addAll(paramHangoutData.inactiveOccupant_);
          break label143;
          label295: ensureNotificationIdIsMutable();
          this.notificationId_.addAll(paramHangoutData.notificationId_);
        }
      }

      public final Builder setActiveOccupant(int paramInt, Data.HangoutOccupant.Builder paramBuilder)
      {
        ensureActiveOccupantIsMutable();
        this.activeOccupant_.set(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder setActiveOccupant(int paramInt, Data.HangoutOccupant paramHangoutOccupant)
      {
        if (paramHangoutOccupant == null)
          throw new NullPointerException();
        ensureActiveOccupantIsMutable();
        this.activeOccupant_.set(paramInt, paramHangoutOccupant);
        return this;
      }

      public final Builder setBroadcastId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x200 | this.bitField0_);
        this.broadcastId_ = paramString;
        return this;
      }

      public final Builder setIdIsAutogenerated(boolean paramBoolean)
      {
        this.bitField0_ = (0x100 | this.bitField0_);
        this.idIsAutogenerated_ = paramBoolean;
        return this;
      }

      public final Builder setInactiveOccupant(int paramInt, Data.HangoutOccupant.Builder paramBuilder)
      {
        ensureInactiveOccupantIsMutable();
        this.inactiveOccupant_.set(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder setInactiveOccupant(int paramInt, Data.HangoutOccupant paramHangoutOccupant)
      {
        if (paramHangoutOccupant == null)
          throw new NullPointerException();
        ensureInactiveOccupantIsMutable();
        this.inactiveOccupant_.set(paramInt, paramHangoutOccupant);
        return this;
      }

      public final Builder setNotificationId(int paramInt, String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        ensureNotificationIdIsMutable();
        this.notificationId_.set(paramInt, paramString);
        return this;
      }

      public final Builder setRoomDomain(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x20 | this.bitField0_);
        this.roomDomain_ = paramString;
        return this;
      }

      public final Builder setRoomId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x1 | this.bitField0_);
        this.roomId_ = paramString;
        return this;
      }

      public final Builder setSubject(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x4 | this.bitField0_);
        this.subject_ = paramString;
        return this;
      }

      public final Builder setType(Data.HangoutData.HangoutType paramHangoutType)
      {
        if (paramHangoutType == null)
          throw new NullPointerException();
        this.bitField0_ = (0x80 | this.bitField0_);
        this.type_ = paramHangoutType;
        return this;
      }

      public final Builder setUrl(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x2 | this.bitField0_);
        this.url_ = paramString;
        return this;
      }
    }

    public static enum HangoutType
      implements Internal.EnumLite
    {
      private static Internal.EnumLiteMap<HangoutType> internalValueMap = new Internal.EnumLiteMap()
      {
      };
      private final int value;

      static
      {
        BUSINESS = new HangoutType("BUSINESS", 1, 1);
        HangoutType[] arrayOfHangoutType = new HangoutType[2];
        arrayOfHangoutType[0] = CONSUMER;
        arrayOfHangoutType[1] = BUSINESS;
      }

      private HangoutType(int paramInt1, int paramInt2)
      {
        this.value = paramInt1;
      }

      public static HangoutType valueOf(int paramInt)
      {
        HangoutType localHangoutType;
        switch (paramInt)
        {
        default:
          localHangoutType = null;
        case 0:
        case 1:
        }
        while (true)
        {
          return localHangoutType;
          localHangoutType = CONSUMER;
          continue;
          localHangoutType = BUSINESS;
        }
      }

      public final int getNumber()
      {
        return this.value;
      }
    }
  }

  public static abstract interface HangoutDataOrBuilder extends MessageLiteOrBuilder
  {
    public abstract Data.HangoutOccupant getActiveOccupant(int paramInt);

    public abstract int getActiveOccupantCount();

    public abstract List<Data.HangoutOccupant> getActiveOccupantList();

    public abstract String getBroadcastId();

    public abstract boolean getIdIsAutogenerated();

    public abstract Data.HangoutOccupant getInactiveOccupant(int paramInt);

    public abstract int getInactiveOccupantCount();

    public abstract List<Data.HangoutOccupant> getInactiveOccupantList();

    public abstract String getNotificationId(int paramInt);

    public abstract int getNotificationIdCount();

    public abstract List<String> getNotificationIdList();

    public abstract String getRoomDomain();

    public abstract String getRoomId();

    public abstract String getSubject();

    public abstract Data.HangoutData.HangoutType getType();

    public abstract String getUrl();

    public abstract boolean hasBroadcastId();

    public abstract boolean hasIdIsAutogenerated();

    public abstract boolean hasRoomDomain();

    public abstract boolean hasRoomId();

    public abstract boolean hasSubject();

    public abstract boolean hasType();

    public abstract boolean hasUrl();
  }

  public static final class HangoutOccupant extends GeneratedMessageLite
    implements Data.HangoutOccupantOrBuilder
  {
    private static final HangoutOccupant defaultInstance;
    private static final long serialVersionUID;
    private Object avatarUrl_;
    private int bitField0_;
    private Object focusObfuscatedId_;
    private long gaiaId_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private Object name_;

    static
    {
      HangoutOccupant localHangoutOccupant = new HangoutOccupant();
      defaultInstance = localHangoutOccupant;
      localHangoutOccupant.name_ = "";
      localHangoutOccupant.avatarUrl_ = "";
      localHangoutOccupant.gaiaId_ = 0L;
      localHangoutOccupant.focusObfuscatedId_ = "";
    }

    private HangoutOccupant()
    {
    }

    private HangoutOccupant(Builder paramBuilder)
    {
      super();
    }

    private ByteString getAvatarUrlBytes()
    {
      Object localObject = this.avatarUrl_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.avatarUrl_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static HangoutOccupant getDefaultInstance()
    {
      return defaultInstance;
    }

    private ByteString getFocusObfuscatedIdBytes()
    {
      Object localObject = this.focusObfuscatedId_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.focusObfuscatedId_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    private ByteString getNameBytes()
    {
      Object localObject = this.name_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.name_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static Builder newBuilder()
    {
      return Builder.access$53100();
    }

    public final String getAvatarUrl()
    {
      Object localObject1 = this.avatarUrl_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.avatarUrl_ = str;
      }
    }

    public final HangoutOccupant getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final String getFocusObfuscatedId()
    {
      Object localObject1 = this.focusObfuscatedId_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.focusObfuscatedId_ = str;
      }
    }

    public final long getGaiaId()
    {
      return this.gaiaId_;
    }

    public final String getName()
    {
      Object localObject1 = this.name_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.name_ = str;
      }
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeBytesSize(1, getNameBytes());
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeBytesSize(2, getAvatarUrlBytes());
        if ((0x4 & this.bitField0_) == 4)
          k += CodedOutputStream.computeInt64Size(3, this.gaiaId_);
        if ((0x8 & this.bitField0_) == 8)
          k += CodedOutputStream.computeBytesSize(4, getFocusObfuscatedIdBytes());
        this.memoizedSerializedSize = k;
      }
    }

    public final boolean hasAvatarUrl()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasFocusObfuscatedId()
    {
      if ((0x8 & this.bitField0_) == 8);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasGaiaId()
    {
      if ((0x4 & this.bitField0_) == 4);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasName()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeBytes(1, getNameBytes());
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeBytes(2, getAvatarUrlBytes());
      if ((0x4 & this.bitField0_) == 4)
        paramCodedOutputStream.writeInt64(3, this.gaiaId_);
      if ((0x8 & this.bitField0_) == 8)
        paramCodedOutputStream.writeBytes(4, getFocusObfuscatedIdBytes());
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Data.HangoutOccupant, Builder>
      implements Data.HangoutOccupantOrBuilder
    {
      private Object avatarUrl_ = "";
      private int bitField0_;
      private Object focusObfuscatedId_ = "";
      private long gaiaId_;
      private Object name_ = "";

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 10:
            this.bitField0_ = (0x1 | this.bitField0_);
            this.name_ = paramCodedInputStream.readBytes();
            break;
          case 18:
            this.bitField0_ = (0x2 | this.bitField0_);
            this.avatarUrl_ = paramCodedInputStream.readBytes();
            break;
          case 24:
            this.bitField0_ = (0x4 | this.bitField0_);
            this.gaiaId_ = paramCodedInputStream.readInt64();
            break;
          case 34:
          }
          this.bitField0_ = (0x8 | this.bitField0_);
          this.focusObfuscatedId_ = paramCodedInputStream.readBytes();
        }
      }

      public final Data.HangoutOccupant build()
      {
        Data.HangoutOccupant localHangoutOccupant = buildPartial();
        if (!localHangoutOccupant.isInitialized())
          throw new UninitializedMessageException();
        return localHangoutOccupant;
      }

      public final Data.HangoutOccupant buildPartial()
      {
        Data.HangoutOccupant localHangoutOccupant = new Data.HangoutOccupant(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Data.HangoutOccupant.access$53302(localHangoutOccupant, this.name_);
        if ((i & 0x2) == 2)
          k |= 2;
        Data.HangoutOccupant.access$53402(localHangoutOccupant, this.avatarUrl_);
        if ((i & 0x4) == 4)
          k |= 4;
        Data.HangoutOccupant.access$53502(localHangoutOccupant, this.gaiaId_);
        if ((i & 0x8) == 8)
          k |= 8;
        Data.HangoutOccupant.access$53602(localHangoutOccupant, this.focusObfuscatedId_);
        Data.HangoutOccupant.access$53702(localHangoutOccupant, k);
        return localHangoutOccupant;
      }

      public final Builder clear()
      {
        super.clear();
        this.name_ = "";
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.avatarUrl_ = "";
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.gaiaId_ = 0L;
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.focusObfuscatedId_ = "";
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        return this;
      }

      public final Builder clearAvatarUrl()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.avatarUrl_ = Data.HangoutOccupant.getDefaultInstance().getAvatarUrl();
        return this;
      }

      public final Builder clearFocusObfuscatedId()
      {
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        this.focusObfuscatedId_ = Data.HangoutOccupant.getDefaultInstance().getFocusObfuscatedId();
        return this;
      }

      public final Builder clearGaiaId()
      {
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.gaiaId_ = 0L;
        return this;
      }

      public final Builder clearName()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.name_ = Data.HangoutOccupant.getDefaultInstance().getName();
        return this;
      }

      public final String getAvatarUrl()
      {
        Object localObject = this.avatarUrl_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.avatarUrl_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final Data.HangoutOccupant getDefaultInstanceForType()
      {
        return Data.HangoutOccupant.getDefaultInstance();
      }

      public final String getFocusObfuscatedId()
      {
        Object localObject = this.focusObfuscatedId_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.focusObfuscatedId_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final long getGaiaId()
      {
        return this.gaiaId_;
      }

      public final String getName()
      {
        Object localObject = this.name_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.name_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final boolean hasAvatarUrl()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasFocusObfuscatedId()
      {
        if ((0x8 & this.bitField0_) == 8);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasGaiaId()
      {
        if ((0x4 & this.bitField0_) == 4);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasName()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Data.HangoutOccupant paramHangoutOccupant)
      {
        if (paramHangoutOccupant == Data.HangoutOccupant.getDefaultInstance());
        while (true)
        {
          return this;
          if (paramHangoutOccupant.hasName())
            setName(paramHangoutOccupant.getName());
          if (paramHangoutOccupant.hasAvatarUrl())
            setAvatarUrl(paramHangoutOccupant.getAvatarUrl());
          if (paramHangoutOccupant.hasGaiaId())
            setGaiaId(paramHangoutOccupant.getGaiaId());
          if (paramHangoutOccupant.hasFocusObfuscatedId())
            setFocusObfuscatedId(paramHangoutOccupant.getFocusObfuscatedId());
        }
      }

      public final Builder setAvatarUrl(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x2 | this.bitField0_);
        this.avatarUrl_ = paramString;
        return this;
      }

      public final Builder setFocusObfuscatedId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x8 | this.bitField0_);
        this.focusObfuscatedId_ = paramString;
        return this;
      }

      public final Builder setGaiaId(long paramLong)
      {
        this.bitField0_ = (0x4 | this.bitField0_);
        this.gaiaId_ = paramLong;
        return this;
      }

      public final Builder setName(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x1 | this.bitField0_);
        this.name_ = paramString;
        return this;
      }
    }
  }

  public static abstract interface HangoutOccupantOrBuilder extends MessageLiteOrBuilder
  {
    public abstract String getAvatarUrl();

    public abstract String getFocusObfuscatedId();

    public abstract long getGaiaId();

    public abstract String getName();

    public abstract boolean hasAvatarUrl();

    public abstract boolean hasFocusObfuscatedId();

    public abstract boolean hasGaiaId();

    public abstract boolean hasName();
  }

  public static enum ImageUrlFormat
    implements Internal.EnumLite
  {
    private static Internal.EnumLiteMap<ImageUrlFormat> internalValueMap = new Internal.EnumLiteMap()
    {
    };
    private final int value;

    static
    {
      FIFE_CONTENT = new ImageUrlFormat("FIFE_CONTENT", 1, 1);
      IMAGE_PROXY = new ImageUrlFormat("IMAGE_PROXY", 2, 2);
      UNKNOWN = new ImageUrlFormat("UNKNOWN", 3, 3);
      ImageUrlFormat[] arrayOfImageUrlFormat = new ImageUrlFormat[4];
      arrayOfImageUrlFormat[0] = FIFE_LEGACY;
      arrayOfImageUrlFormat[1] = FIFE_CONTENT;
      arrayOfImageUrlFormat[2] = IMAGE_PROXY;
      arrayOfImageUrlFormat[3] = UNKNOWN;
    }

    private ImageUrlFormat(int paramInt1, int paramInt2)
    {
      this.value = paramInt1;
    }

    public static ImageUrlFormat valueOf(int paramInt)
    {
      ImageUrlFormat localImageUrlFormat;
      switch (paramInt)
      {
      default:
        localImageUrlFormat = null;
      case 0:
      case 1:
      case 2:
      case 3:
      }
      while (true)
      {
        return localImageUrlFormat;
        localImageUrlFormat = FIFE_LEGACY;
        continue;
        localImageUrlFormat = FIFE_CONTENT;
        continue;
        localImageUrlFormat = IMAGE_PROXY;
        continue;
        localImageUrlFormat = UNKNOWN;
      }
    }

    public final int getNumber()
    {
      return this.value;
    }
  }

  public static final class Interaction extends GeneratedMessageLite
    implements Data.InteractionOrBuilder
  {
    private static final Interaction defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private long date_;
    private long duration_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private LazyStringList name_;
    private Object number_;
    private Type type_;

    static
    {
      Interaction localInteraction = new Interaction();
      defaultInstance = localInteraction;
      localInteraction.type_ = Type.INCOMING_CALL;
      localInteraction.number_ = "";
      localInteraction.date_ = 0L;
      localInteraction.duration_ = 0L;
      localInteraction.name_ = LazyStringArrayList.EMPTY;
    }

    private Interaction()
    {
    }

    private Interaction(Builder paramBuilder)
    {
      super();
    }

    public static Interaction getDefaultInstance()
    {
      return defaultInstance;
    }

    private ByteString getNumberBytes()
    {
      Object localObject = this.number_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.number_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static Builder newBuilder()
    {
      return Builder.access$33200();
    }

    public final long getDate()
    {
      return this.date_;
    }

    public final Interaction getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final long getDuration()
    {
      return this.duration_;
    }

    public final String getName(int paramInt)
    {
      return (String)this.name_.get(paramInt);
    }

    public final int getNameCount()
    {
      return this.name_.size();
    }

    public final List<String> getNameList()
    {
      return this.name_;
    }

    public final String getNumber()
    {
      Object localObject1 = this.number_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.number_ = str;
      }
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int i1;
      for (int i2 = i; ; i2 = i1)
      {
        return i2;
        int j = 0x1 & this.bitField0_;
        int k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeEnumSize(1, this.type_.getNumber());
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeBytesSize(2, getNumberBytes());
        if ((0x4 & this.bitField0_) == 4)
          k += CodedOutputStream.computeInt64Size(3, this.date_);
        if ((0x8 & this.bitField0_) == 8)
          k += CodedOutputStream.computeInt64Size(4, this.duration_);
        int m = 0;
        for (int n = 0; n < this.name_.size(); n++)
          m += CodedOutputStream.computeBytesSizeNoTag(this.name_.getByteString(n));
        i1 = k + m + 1 * getNameList().size();
        this.memoizedSerializedSize = i1;
      }
    }

    public final Type getType()
    {
      return this.type_;
    }

    public final boolean hasDate()
    {
      if ((0x4 & this.bitField0_) == 4);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasDuration()
    {
      if ((0x8 & this.bitField0_) == 8);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasNumber()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasType()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeEnum(1, this.type_.getNumber());
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeBytes(2, getNumberBytes());
      if ((0x4 & this.bitField0_) == 4)
        paramCodedOutputStream.writeInt64(3, this.date_);
      if ((0x8 & this.bitField0_) == 8)
        paramCodedOutputStream.writeInt64(4, this.duration_);
      for (int i = 0; i < this.name_.size(); i++)
        paramCodedOutputStream.writeBytes(5, this.name_.getByteString(i));
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Data.Interaction, Builder>
      implements Data.InteractionOrBuilder
    {
      private int bitField0_;
      private long date_;
      private long duration_;
      private LazyStringList name_ = LazyStringArrayList.EMPTY;
      private Object number_ = "";
      private Data.Interaction.Type type_ = Data.Interaction.Type.INCOMING_CALL;

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private void ensureNameIsMutable()
      {
        if ((0x10 & this.bitField0_) != 16)
        {
          this.name_ = new LazyStringArrayList(this.name_);
          this.bitField0_ = (0x10 | this.bitField0_);
        }
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 8:
            Data.Interaction.Type localType = Data.Interaction.Type.valueOf(paramCodedInputStream.readEnum());
            if (localType == null)
              continue;
            this.bitField0_ = (0x1 | this.bitField0_);
            this.type_ = localType;
            break;
          case 18:
            this.bitField0_ = (0x2 | this.bitField0_);
            this.number_ = paramCodedInputStream.readBytes();
            break;
          case 24:
            this.bitField0_ = (0x4 | this.bitField0_);
            this.date_ = paramCodedInputStream.readInt64();
            break;
          case 32:
            this.bitField0_ = (0x8 | this.bitField0_);
            this.duration_ = paramCodedInputStream.readInt64();
            break;
          case 42:
          }
          ensureNameIsMutable();
          this.name_.add(paramCodedInputStream.readBytes());
        }
      }

      public final Builder addAllName(Iterable<String> paramIterable)
      {
        ensureNameIsMutable();
        GeneratedMessageLite.Builder.addAll(paramIterable, this.name_);
        return this;
      }

      public final Builder addName(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        ensureNameIsMutable();
        this.name_.add(paramString);
        return this;
      }

      public final Data.Interaction build()
      {
        Data.Interaction localInteraction = buildPartial();
        if (!localInteraction.isInitialized())
          throw new UninitializedMessageException();
        return localInteraction;
      }

      public final Data.Interaction buildPartial()
      {
        Data.Interaction localInteraction = new Data.Interaction(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Data.Interaction.access$33402(localInteraction, this.type_);
        if ((i & 0x2) == 2)
          k |= 2;
        Data.Interaction.access$33502(localInteraction, this.number_);
        if ((i & 0x4) == 4)
          k |= 4;
        Data.Interaction.access$33602(localInteraction, this.date_);
        if ((i & 0x8) == 8)
          k |= 8;
        Data.Interaction.access$33702(localInteraction, this.duration_);
        if ((0x10 & this.bitField0_) == 16)
        {
          this.name_ = new UnmodifiableLazyStringList(this.name_);
          this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        }
        Data.Interaction.access$33802(localInteraction, this.name_);
        Data.Interaction.access$33902(localInteraction, k);
        return localInteraction;
      }

      public final Builder clear()
      {
        super.clear();
        this.type_ = Data.Interaction.Type.INCOMING_CALL;
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.number_ = "";
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.date_ = 0L;
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.duration_ = 0L;
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        this.name_ = LazyStringArrayList.EMPTY;
        this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        return this;
      }

      public final Builder clearDate()
      {
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.date_ = 0L;
        return this;
      }

      public final Builder clearDuration()
      {
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        this.duration_ = 0L;
        return this;
      }

      public final Builder clearName()
      {
        this.name_ = LazyStringArrayList.EMPTY;
        this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        return this;
      }

      public final Builder clearNumber()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.number_ = Data.Interaction.getDefaultInstance().getNumber();
        return this;
      }

      public final Builder clearType()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.type_ = Data.Interaction.Type.INCOMING_CALL;
        return this;
      }

      public final long getDate()
      {
        return this.date_;
      }

      public final Data.Interaction getDefaultInstanceForType()
      {
        return Data.Interaction.getDefaultInstance();
      }

      public final long getDuration()
      {
        return this.duration_;
      }

      public final String getName(int paramInt)
      {
        return (String)this.name_.get(paramInt);
      }

      public final int getNameCount()
      {
        return this.name_.size();
      }

      public final List<String> getNameList()
      {
        return Collections.unmodifiableList(this.name_);
      }

      public final String getNumber()
      {
        Object localObject = this.number_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.number_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final Data.Interaction.Type getType()
      {
        return this.type_;
      }

      public final boolean hasDate()
      {
        if ((0x4 & this.bitField0_) == 4);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasDuration()
      {
        if ((0x8 & this.bitField0_) == 8);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasNumber()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasType()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Data.Interaction paramInteraction)
      {
        if (paramInteraction == Data.Interaction.getDefaultInstance());
        while (true)
        {
          return this;
          if (paramInteraction.hasType())
            setType(paramInteraction.getType());
          if (paramInteraction.hasNumber())
            setNumber(paramInteraction.getNumber());
          if (paramInteraction.hasDate())
            setDate(paramInteraction.getDate());
          if (paramInteraction.hasDuration())
            setDuration(paramInteraction.getDuration());
          if (!paramInteraction.name_.isEmpty())
            if (this.name_.isEmpty())
            {
              this.name_ = paramInteraction.name_;
              this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
            }
            else
            {
              ensureNameIsMutable();
              this.name_.addAll(paramInteraction.name_);
            }
        }
      }

      public final Builder setDate(long paramLong)
      {
        this.bitField0_ = (0x4 | this.bitField0_);
        this.date_ = paramLong;
        return this;
      }

      public final Builder setDuration(long paramLong)
      {
        this.bitField0_ = (0x8 | this.bitField0_);
        this.duration_ = paramLong;
        return this;
      }

      public final Builder setName(int paramInt, String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        ensureNameIsMutable();
        this.name_.set(paramInt, paramString);
        return this;
      }

      public final Builder setNumber(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x2 | this.bitField0_);
        this.number_ = paramString;
        return this;
      }

      public final Builder setType(Data.Interaction.Type paramType)
      {
        if (paramType == null)
          throw new NullPointerException();
        this.bitField0_ = (0x1 | this.bitField0_);
        this.type_ = paramType;
        return this;
      }
    }

    public static enum Type
      implements Internal.EnumLite
    {
      private static Internal.EnumLiteMap<Type> internalValueMap = new Internal.EnumLiteMap()
      {
      };
      private final int value;

      static
      {
        INCOMING_SMS = new Type("INCOMING_SMS", 2, 3);
        OUTGOING_SMS = new Type("OUTGOING_SMS", 3, 4);
        Type[] arrayOfType = new Type[4];
        arrayOfType[0] = INCOMING_CALL;
        arrayOfType[1] = OUTGOING_CALL;
        arrayOfType[2] = INCOMING_SMS;
        arrayOfType[3] = OUTGOING_SMS;
      }

      private Type(int paramInt1, int paramInt2)
      {
        this.value = paramInt1;
      }

      public static Type valueOf(int paramInt)
      {
        Type localType;
        switch (paramInt)
        {
        default:
          localType = null;
        case 1:
        case 2:
        case 3:
        case 4:
        }
        while (true)
        {
          return localType;
          localType = INCOMING_CALL;
          continue;
          localType = OUTGOING_CALL;
          continue;
          localType = INCOMING_SMS;
          continue;
          localType = OUTGOING_SMS;
        }
      }

      public final int getNumber()
      {
        return this.value;
      }
    }
  }

  public static abstract interface InteractionOrBuilder extends MessageLiteOrBuilder
  {
    public abstract long getDate();

    public abstract long getDuration();

    public abstract String getName(int paramInt);

    public abstract int getNameCount();

    public abstract List<String> getNameList();

    public abstract String getNumber();

    public abstract Data.Interaction.Type getType();

    public abstract boolean hasDate();

    public abstract boolean hasDuration();

    public abstract boolean hasNumber();

    public abstract boolean hasType();
  }

  public static final class Location extends GeneratedMessageLite
    implements Data.LocationOrBuilder
  {
    private static final Location defaultInstance;
    private static final long serialVersionUID;
    private int accuracy_;
    private int bitField0_;
    private Object clickTrackingUrl_;
    private double distanceInMetres_;
    private boolean hasOffer_;
    private boolean isRecommended_;
    private int latSpanE7_;
    private int lngSpanE7_;
    private Object localClusterId_;
    private Object mapsUrlSignature_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private Object name_;
    private Data.Point position_;
    private Data.ReverseGeocode reverseGeocode_;

    static
    {
      Location localLocation = new Location();
      defaultInstance = localLocation;
      localLocation.position_ = Data.Point.getDefaultInstance();
      localLocation.localClusterId_ = "";
      localLocation.name_ = "";
      localLocation.reverseGeocode_ = Data.ReverseGeocode.getDefaultInstance();
      localLocation.accuracy_ = 0;
      localLocation.latSpanE7_ = 0;
      localLocation.lngSpanE7_ = 0;
      localLocation.distanceInMetres_ = 0.0D;
      localLocation.mapsUrlSignature_ = "";
      localLocation.hasOffer_ = false;
      localLocation.isRecommended_ = false;
      localLocation.clickTrackingUrl_ = "";
    }

    private Location()
    {
    }

    private Location(Builder paramBuilder)
    {
      super();
    }

    private ByteString getClickTrackingUrlBytes()
    {
      Object localObject = this.clickTrackingUrl_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.clickTrackingUrl_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static Location getDefaultInstance()
    {
      return defaultInstance;
    }

    private ByteString getLocalClusterIdBytes()
    {
      Object localObject = this.localClusterId_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.localClusterId_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    private ByteString getMapsUrlSignatureBytes()
    {
      Object localObject = this.mapsUrlSignature_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.mapsUrlSignature_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    private ByteString getNameBytes()
    {
      Object localObject = this.name_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.name_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static Builder newBuilder()
    {
      return Builder.access$30400();
    }

    public static Builder newBuilder(Location paramLocation)
    {
      return Builder.access$30400().mergeFrom(paramLocation);
    }

    public final int getAccuracy()
    {
      return this.accuracy_;
    }

    public final String getClickTrackingUrl()
    {
      Object localObject1 = this.clickTrackingUrl_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.clickTrackingUrl_ = str;
      }
    }

    public final Location getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final double getDistanceInMetres()
    {
      return this.distanceInMetres_;
    }

    public final boolean getHasOffer()
    {
      return this.hasOffer_;
    }

    public final boolean getIsRecommended()
    {
      return this.isRecommended_;
    }

    public final int getLatSpanE7()
    {
      return this.latSpanE7_;
    }

    public final int getLngSpanE7()
    {
      return this.lngSpanE7_;
    }

    public final String getLocalClusterId()
    {
      Object localObject1 = this.localClusterId_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.localClusterId_ = str;
      }
    }

    public final String getMapsUrlSignature()
    {
      Object localObject1 = this.mapsUrlSignature_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.mapsUrlSignature_ = str;
      }
    }

    public final String getName()
    {
      Object localObject1 = this.name_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.name_ = str;
      }
    }

    public final Data.Point getPosition()
    {
      return this.position_;
    }

    public final Data.ReverseGeocode getReverseGeocode()
    {
      return this.reverseGeocode_;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeMessageSize(1, this.position_);
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeBytesSize(2, getLocalClusterIdBytes());
        if ((0x4 & this.bitField0_) == 4)
          k += CodedOutputStream.computeBytesSize(3, getNameBytes());
        if ((0x8 & this.bitField0_) == 8)
          k += CodedOutputStream.computeMessageSize(4, this.reverseGeocode_);
        if ((0x10 & this.bitField0_) == 16)
          k += CodedOutputStream.computeInt32Size(7, this.accuracy_);
        if ((0x20 & this.bitField0_) == 32)
          k += CodedOutputStream.computeInt32Size(8, this.latSpanE7_);
        if ((0x40 & this.bitField0_) == 64)
          k += CodedOutputStream.computeInt32Size(9, this.lngSpanE7_);
        if ((0x80 & this.bitField0_) == 128)
          k += CodedOutputStream.computeDoubleSize(10, this.distanceInMetres_);
        if ((0x100 & this.bitField0_) == 256)
          k += CodedOutputStream.computeBytesSize(11, getMapsUrlSignatureBytes());
        if ((0x200 & this.bitField0_) == 512)
          k += CodedOutputStream.computeBoolSize(12, this.hasOffer_);
        if ((0x400 & this.bitField0_) == 1024)
          k += CodedOutputStream.computeBoolSize(13, this.isRecommended_);
        if ((0x800 & this.bitField0_) == 2048)
          k += CodedOutputStream.computeBytesSize(14, getClickTrackingUrlBytes());
        this.memoizedSerializedSize = k;
      }
    }

    public final boolean hasAccuracy()
    {
      if ((0x10 & this.bitField0_) == 16);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasClickTrackingUrl()
    {
      if ((0x800 & this.bitField0_) == 2048);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasDistanceInMetres()
    {
      if ((0x80 & this.bitField0_) == 128);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasHasOffer()
    {
      if ((0x200 & this.bitField0_) == 512);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasIsRecommended()
    {
      if ((0x400 & this.bitField0_) == 1024);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasLatSpanE7()
    {
      if ((0x20 & this.bitField0_) == 32);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasLngSpanE7()
    {
      if ((0x40 & this.bitField0_) == 64);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasLocalClusterId()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasMapsUrlSignature()
    {
      if ((0x100 & this.bitField0_) == 256);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasName()
    {
      if ((0x4 & this.bitField0_) == 4);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasPosition()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean hasReverseGeocode()
    {
      if ((0x8 & this.bitField0_) == 8);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        if ((hasPosition()) && (!getPosition().isInitialized()))
        {
          this.memoizedIsInitialized = 0;
          i = 0;
        }
        else
        {
          this.memoizedIsInitialized = i;
        }
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeMessage(1, this.position_);
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeBytes(2, getLocalClusterIdBytes());
      if ((0x4 & this.bitField0_) == 4)
        paramCodedOutputStream.writeBytes(3, getNameBytes());
      if ((0x8 & this.bitField0_) == 8)
        paramCodedOutputStream.writeMessage(4, this.reverseGeocode_);
      if ((0x10 & this.bitField0_) == 16)
        paramCodedOutputStream.writeInt32(7, this.accuracy_);
      if ((0x20 & this.bitField0_) == 32)
        paramCodedOutputStream.writeInt32(8, this.latSpanE7_);
      if ((0x40 & this.bitField0_) == 64)
        paramCodedOutputStream.writeInt32(9, this.lngSpanE7_);
      if ((0x80 & this.bitField0_) == 128)
        paramCodedOutputStream.writeDouble(10, this.distanceInMetres_);
      if ((0x100 & this.bitField0_) == 256)
        paramCodedOutputStream.writeBytes(11, getMapsUrlSignatureBytes());
      if ((0x200 & this.bitField0_) == 512)
        paramCodedOutputStream.writeBool(12, this.hasOffer_);
      if ((0x400 & this.bitField0_) == 1024)
        paramCodedOutputStream.writeBool(13, this.isRecommended_);
      if ((0x800 & this.bitField0_) == 2048)
        paramCodedOutputStream.writeBytes(14, getClickTrackingUrlBytes());
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Data.Location, Builder>
      implements Data.LocationOrBuilder
    {
      private int accuracy_;
      private int bitField0_;
      private Object clickTrackingUrl_ = "";
      private double distanceInMetres_;
      private boolean hasOffer_;
      private boolean isRecommended_;
      private int latSpanE7_;
      private int lngSpanE7_;
      private Object localClusterId_ = "";
      private Object mapsUrlSignature_ = "";
      private Object name_ = "";
      private Data.Point position_ = Data.Point.getDefaultInstance();
      private Data.ReverseGeocode reverseGeocode_ = Data.ReverseGeocode.getDefaultInstance();

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 10:
            Data.Point.Builder localBuilder1 = Data.Point.newBuilder();
            if (hasPosition())
              localBuilder1.mergeFrom(getPosition());
            paramCodedInputStream.readMessage(localBuilder1, paramExtensionRegistryLite);
            setPosition(localBuilder1.buildPartial());
            break;
          case 18:
            this.bitField0_ = (0x2 | this.bitField0_);
            this.localClusterId_ = paramCodedInputStream.readBytes();
            break;
          case 26:
            this.bitField0_ = (0x4 | this.bitField0_);
            this.name_ = paramCodedInputStream.readBytes();
            break;
          case 34:
            Data.ReverseGeocode.Builder localBuilder = Data.ReverseGeocode.newBuilder();
            if (hasReverseGeocode())
              localBuilder.mergeFrom(getReverseGeocode());
            paramCodedInputStream.readMessage(localBuilder, paramExtensionRegistryLite);
            setReverseGeocode(localBuilder.buildPartial());
            break;
          case 56:
            this.bitField0_ = (0x10 | this.bitField0_);
            this.accuracy_ = paramCodedInputStream.readInt32();
            break;
          case 64:
            this.bitField0_ = (0x20 | this.bitField0_);
            this.latSpanE7_ = paramCodedInputStream.readInt32();
            break;
          case 72:
            this.bitField0_ = (0x40 | this.bitField0_);
            this.lngSpanE7_ = paramCodedInputStream.readInt32();
            break;
          case 81:
            this.bitField0_ = (0x80 | this.bitField0_);
            this.distanceInMetres_ = paramCodedInputStream.readDouble();
            break;
          case 90:
            this.bitField0_ = (0x100 | this.bitField0_);
            this.mapsUrlSignature_ = paramCodedInputStream.readBytes();
            break;
          case 96:
            this.bitField0_ = (0x200 | this.bitField0_);
            this.hasOffer_ = paramCodedInputStream.readBool();
            break;
          case 104:
            this.bitField0_ = (0x400 | this.bitField0_);
            this.isRecommended_ = paramCodedInputStream.readBool();
            break;
          case 114:
          }
          this.bitField0_ = (0x800 | this.bitField0_);
          this.clickTrackingUrl_ = paramCodedInputStream.readBytes();
        }
      }

      public final Data.Location build()
      {
        Data.Location localLocation = buildPartial();
        if (!localLocation.isInitialized())
          throw new UninitializedMessageException();
        return localLocation;
      }

      public final Data.Location buildPartial()
      {
        Data.Location localLocation = new Data.Location(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Data.Location.access$30602(localLocation, this.position_);
        if ((i & 0x2) == 2)
          k |= 2;
        Data.Location.access$30702(localLocation, this.localClusterId_);
        if ((i & 0x4) == 4)
          k |= 4;
        Data.Location.access$30802(localLocation, this.name_);
        if ((i & 0x8) == 8)
          k |= 8;
        Data.Location.access$30902(localLocation, this.reverseGeocode_);
        if ((i & 0x10) == 16)
          k |= 16;
        Data.Location.access$31002(localLocation, this.accuracy_);
        if ((i & 0x20) == 32)
          k |= 32;
        Data.Location.access$31102(localLocation, this.latSpanE7_);
        if ((i & 0x40) == 64)
          k |= 64;
        Data.Location.access$31202(localLocation, this.lngSpanE7_);
        if ((i & 0x80) == 128)
          k |= 128;
        Data.Location.access$31302(localLocation, this.distanceInMetres_);
        if ((i & 0x100) == 256)
          k |= 256;
        Data.Location.access$31402(localLocation, this.mapsUrlSignature_);
        if ((i & 0x200) == 512)
          k |= 512;
        Data.Location.access$31502(localLocation, this.hasOffer_);
        if ((i & 0x400) == 1024)
          k |= 1024;
        Data.Location.access$31602(localLocation, this.isRecommended_);
        if ((i & 0x800) == 2048)
          k |= 2048;
        Data.Location.access$31702(localLocation, this.clickTrackingUrl_);
        Data.Location.access$31802(localLocation, k);
        return localLocation;
      }

      public final Builder clear()
      {
        super.clear();
        this.position_ = Data.Point.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.localClusterId_ = "";
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.name_ = "";
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.reverseGeocode_ = Data.ReverseGeocode.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        this.accuracy_ = 0;
        this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        this.latSpanE7_ = 0;
        this.bitField0_ = (0xFFFFFFDF & this.bitField0_);
        this.lngSpanE7_ = 0;
        this.bitField0_ = (0xFFFFFFBF & this.bitField0_);
        this.distanceInMetres_ = 0.0D;
        this.bitField0_ = (0xFFFFFF7F & this.bitField0_);
        this.mapsUrlSignature_ = "";
        this.bitField0_ = (0xFFFFFEFF & this.bitField0_);
        this.hasOffer_ = false;
        this.bitField0_ = (0xFFFFFDFF & this.bitField0_);
        this.isRecommended_ = false;
        this.bitField0_ = (0xFFFFFBFF & this.bitField0_);
        this.clickTrackingUrl_ = "";
        this.bitField0_ = (0xFFFFF7FF & this.bitField0_);
        return this;
      }

      public final Builder clearAccuracy()
      {
        this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        this.accuracy_ = 0;
        return this;
      }

      public final Builder clearClickTrackingUrl()
      {
        this.bitField0_ = (0xFFFFF7FF & this.bitField0_);
        this.clickTrackingUrl_ = Data.Location.getDefaultInstance().getClickTrackingUrl();
        return this;
      }

      public final Builder clearDistanceInMetres()
      {
        this.bitField0_ = (0xFFFFFF7F & this.bitField0_);
        this.distanceInMetres_ = 0.0D;
        return this;
      }

      public final Builder clearHasOffer()
      {
        this.bitField0_ = (0xFFFFFDFF & this.bitField0_);
        this.hasOffer_ = false;
        return this;
      }

      public final Builder clearIsRecommended()
      {
        this.bitField0_ = (0xFFFFFBFF & this.bitField0_);
        this.isRecommended_ = false;
        return this;
      }

      public final Builder clearLatSpanE7()
      {
        this.bitField0_ = (0xFFFFFFDF & this.bitField0_);
        this.latSpanE7_ = 0;
        return this;
      }

      public final Builder clearLngSpanE7()
      {
        this.bitField0_ = (0xFFFFFFBF & this.bitField0_);
        this.lngSpanE7_ = 0;
        return this;
      }

      public final Builder clearLocalClusterId()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.localClusterId_ = Data.Location.getDefaultInstance().getLocalClusterId();
        return this;
      }

      public final Builder clearMapsUrlSignature()
      {
        this.bitField0_ = (0xFFFFFEFF & this.bitField0_);
        this.mapsUrlSignature_ = Data.Location.getDefaultInstance().getMapsUrlSignature();
        return this;
      }

      public final Builder clearName()
      {
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.name_ = Data.Location.getDefaultInstance().getName();
        return this;
      }

      public final Builder clearPosition()
      {
        this.position_ = Data.Point.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        return this;
      }

      public final Builder clearReverseGeocode()
      {
        this.reverseGeocode_ = Data.ReverseGeocode.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        return this;
      }

      public final int getAccuracy()
      {
        return this.accuracy_;
      }

      public final String getClickTrackingUrl()
      {
        Object localObject = this.clickTrackingUrl_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.clickTrackingUrl_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final Data.Location getDefaultInstanceForType()
      {
        return Data.Location.getDefaultInstance();
      }

      public final double getDistanceInMetres()
      {
        return this.distanceInMetres_;
      }

      public final boolean getHasOffer()
      {
        return this.hasOffer_;
      }

      public final boolean getIsRecommended()
      {
        return this.isRecommended_;
      }

      public final int getLatSpanE7()
      {
        return this.latSpanE7_;
      }

      public final int getLngSpanE7()
      {
        return this.lngSpanE7_;
      }

      public final String getLocalClusterId()
      {
        Object localObject = this.localClusterId_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.localClusterId_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final String getMapsUrlSignature()
      {
        Object localObject = this.mapsUrlSignature_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.mapsUrlSignature_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final String getName()
      {
        Object localObject = this.name_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.name_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final Data.Point getPosition()
      {
        return this.position_;
      }

      public final Data.ReverseGeocode getReverseGeocode()
      {
        return this.reverseGeocode_;
      }

      public final boolean hasAccuracy()
      {
        if ((0x10 & this.bitField0_) == 16);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasClickTrackingUrl()
      {
        if ((0x800 & this.bitField0_) == 2048);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasDistanceInMetres()
      {
        if ((0x80 & this.bitField0_) == 128);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasHasOffer()
      {
        if ((0x200 & this.bitField0_) == 512);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasIsRecommended()
      {
        if ((0x400 & this.bitField0_) == 1024);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasLatSpanE7()
      {
        if ((0x20 & this.bitField0_) == 32);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasLngSpanE7()
      {
        if ((0x40 & this.bitField0_) == 64);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasLocalClusterId()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasMapsUrlSignature()
      {
        if ((0x100 & this.bitField0_) == 256);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasName()
      {
        if ((0x4 & this.bitField0_) == 4);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasPosition()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean hasReverseGeocode()
      {
        if ((0x8 & this.bitField0_) == 8);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean isInitialized()
      {
        if ((hasPosition()) && (!getPosition().isInitialized()));
        for (boolean bool = false; ; bool = true)
          return bool;
      }

      public final Builder mergeFrom(Data.Location paramLocation)
      {
        if (paramLocation == Data.Location.getDefaultInstance())
          return this;
        Data.Point localPoint;
        label61: Data.ReverseGeocode localReverseGeocode;
        if (paramLocation.hasPosition())
        {
          localPoint = paramLocation.getPosition();
          if (((0x1 & this.bitField0_) == 1) && (this.position_ != Data.Point.getDefaultInstance()))
          {
            this.position_ = Data.Point.newBuilder(this.position_).mergeFrom(localPoint).buildPartial();
            this.bitField0_ = (0x1 | this.bitField0_);
          }
        }
        else
        {
          if (paramLocation.hasLocalClusterId())
            setLocalClusterId(paramLocation.getLocalClusterId());
          if (paramLocation.hasName())
            setName(paramLocation.getName());
          if (paramLocation.hasReverseGeocode())
          {
            localReverseGeocode = paramLocation.getReverseGeocode();
            if (((0x8 & this.bitField0_) != 8) || (this.reverseGeocode_ == Data.ReverseGeocode.getDefaultInstance()))
              break label308;
          }
        }
        label308: for (this.reverseGeocode_ = Data.ReverseGeocode.newBuilder(this.reverseGeocode_).mergeFrom(localReverseGeocode).buildPartial(); ; this.reverseGeocode_ = localReverseGeocode)
        {
          this.bitField0_ = (0x8 | this.bitField0_);
          if (paramLocation.hasAccuracy())
            setAccuracy(paramLocation.getAccuracy());
          if (paramLocation.hasLatSpanE7())
            setLatSpanE7(paramLocation.getLatSpanE7());
          if (paramLocation.hasLngSpanE7())
            setLngSpanE7(paramLocation.getLngSpanE7());
          if (paramLocation.hasDistanceInMetres())
            setDistanceInMetres(paramLocation.getDistanceInMetres());
          if (paramLocation.hasMapsUrlSignature())
            setMapsUrlSignature(paramLocation.getMapsUrlSignature());
          if (paramLocation.hasHasOffer())
            setHasOffer(paramLocation.getHasOffer());
          if (paramLocation.hasIsRecommended())
            setIsRecommended(paramLocation.getIsRecommended());
          if (!paramLocation.hasClickTrackingUrl())
            break;
          setClickTrackingUrl(paramLocation.getClickTrackingUrl());
          break;
          this.position_ = localPoint;
          break label61;
        }
      }

      public final Builder setAccuracy(int paramInt)
      {
        this.bitField0_ = (0x10 | this.bitField0_);
        this.accuracy_ = paramInt;
        return this;
      }

      public final Builder setClickTrackingUrl(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x800 | this.bitField0_);
        this.clickTrackingUrl_ = paramString;
        return this;
      }

      public final Builder setDistanceInMetres(double paramDouble)
      {
        this.bitField0_ = (0x80 | this.bitField0_);
        this.distanceInMetres_ = paramDouble;
        return this;
      }

      public final Builder setHasOffer(boolean paramBoolean)
      {
        this.bitField0_ = (0x200 | this.bitField0_);
        this.hasOffer_ = paramBoolean;
        return this;
      }

      public final Builder setIsRecommended(boolean paramBoolean)
      {
        this.bitField0_ = (0x400 | this.bitField0_);
        this.isRecommended_ = paramBoolean;
        return this;
      }

      public final Builder setLatSpanE7(int paramInt)
      {
        this.bitField0_ = (0x20 | this.bitField0_);
        this.latSpanE7_ = paramInt;
        return this;
      }

      public final Builder setLngSpanE7(int paramInt)
      {
        this.bitField0_ = (0x40 | this.bitField0_);
        this.lngSpanE7_ = paramInt;
        return this;
      }

      public final Builder setLocalClusterId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x2 | this.bitField0_);
        this.localClusterId_ = paramString;
        return this;
      }

      public final Builder setMapsUrlSignature(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x100 | this.bitField0_);
        this.mapsUrlSignature_ = paramString;
        return this;
      }

      public final Builder setName(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x4 | this.bitField0_);
        this.name_ = paramString;
        return this;
      }

      public final Builder setPosition(Data.Point.Builder paramBuilder)
      {
        this.position_ = paramBuilder.build();
        this.bitField0_ = (0x1 | this.bitField0_);
        return this;
      }

      public final Builder setPosition(Data.Point paramPoint)
      {
        if (paramPoint == null)
          throw new NullPointerException();
        this.position_ = paramPoint;
        this.bitField0_ = (0x1 | this.bitField0_);
        return this;
      }

      public final Builder setReverseGeocode(Data.ReverseGeocode.Builder paramBuilder)
      {
        this.reverseGeocode_ = paramBuilder.build();
        this.bitField0_ = (0x8 | this.bitField0_);
        return this;
      }

      public final Builder setReverseGeocode(Data.ReverseGeocode paramReverseGeocode)
      {
        if (paramReverseGeocode == null)
          throw new NullPointerException();
        this.reverseGeocode_ = paramReverseGeocode;
        this.bitField0_ = (0x8 | this.bitField0_);
        return this;
      }
    }
  }

  public static abstract interface LocationOrBuilder extends MessageLiteOrBuilder
  {
    public abstract int getAccuracy();

    public abstract String getClickTrackingUrl();

    public abstract double getDistanceInMetres();

    public abstract boolean getHasOffer();

    public abstract boolean getIsRecommended();

    public abstract int getLatSpanE7();

    public abstract int getLngSpanE7();

    public abstract String getLocalClusterId();

    public abstract String getMapsUrlSignature();

    public abstract String getName();

    public abstract Data.Point getPosition();

    public abstract Data.ReverseGeocode getReverseGeocode();

    public abstract boolean hasAccuracy();

    public abstract boolean hasClickTrackingUrl();

    public abstract boolean hasDistanceInMetres();

    public abstract boolean hasHasOffer();

    public abstract boolean hasIsRecommended();

    public abstract boolean hasLatSpanE7();

    public abstract boolean hasLngSpanE7();

    public abstract boolean hasLocalClusterId();

    public abstract boolean hasMapsUrlSignature();

    public abstract boolean hasName();

    public abstract boolean hasPosition();

    public abstract boolean hasReverseGeocode();
  }

  public static final class Media extends GeneratedMessageLite
    implements Data.MediaOrBuilder
  {
    private static final Media defaultInstance;
    private static final long serialVersionUID;
    private Object albumArtist_;
    private Object album_;
    private int bitField0_;
    private Object contentHtml_;
    private int count_;
    private Object descriptionHtml_;
    private Object gadgetName_;
    private Object gadgetTitle_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private GooglePhotoData photoData_;
    private int playerHeight_;
    private Object playerUrl_;
    private int playerWidth_;
    private Data.ImageUrlFormat thumbnailUrlFormat_;
    private Object thumbnailUrl_;
    private boolean truncated_;
    private Type type_;
    private Object url_;
    private VideoDisplayFormat videoMediaDisplay_;

    static
    {
      Media localMedia = new Media();
      defaultInstance = localMedia;
      localMedia.type_ = Type.POST;
      localMedia.url_ = "";
      localMedia.contentHtml_ = "";
      localMedia.thumbnailUrl_ = "";
      localMedia.descriptionHtml_ = "";
      localMedia.playerUrl_ = "";
      localMedia.videoMediaDisplay_ = VideoDisplayFormat.NO_EMBEDDED_VIDEO;
      localMedia.count_ = 0;
      localMedia.playerWidth_ = 0;
      localMedia.playerHeight_ = 0;
      localMedia.photoData_ = GooglePhotoData.getDefaultInstance();
      localMedia.thumbnailUrlFormat_ = Data.ImageUrlFormat.UNKNOWN;
      localMedia.album_ = "";
      localMedia.albumArtist_ = "";
      localMedia.gadgetName_ = "";
      localMedia.gadgetTitle_ = "";
      localMedia.truncated_ = false;
    }

    private Media()
    {
    }

    private Media(Builder paramBuilder)
    {
      super();
    }

    private ByteString getAlbumArtistBytes()
    {
      Object localObject = this.albumArtist_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.albumArtist_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    private ByteString getAlbumBytes()
    {
      Object localObject = this.album_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.album_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    private ByteString getContentHtmlBytes()
    {
      Object localObject = this.contentHtml_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.contentHtml_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static Media getDefaultInstance()
    {
      return defaultInstance;
    }

    private ByteString getDescriptionHtmlBytes()
    {
      Object localObject = this.descriptionHtml_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.descriptionHtml_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    private ByteString getGadgetNameBytes()
    {
      Object localObject = this.gadgetName_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.gadgetName_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    private ByteString getGadgetTitleBytes()
    {
      Object localObject = this.gadgetTitle_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.gadgetTitle_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    private ByteString getPlayerUrlBytes()
    {
      Object localObject = this.playerUrl_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.playerUrl_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    private ByteString getThumbnailUrlBytes()
    {
      Object localObject = this.thumbnailUrl_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.thumbnailUrl_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    private ByteString getUrlBytes()
    {
      Object localObject = this.url_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.url_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static Builder newBuilder()
    {
      return Builder.access$8800();
    }

    public final String getAlbum()
    {
      Object localObject1 = this.album_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.album_ = str;
      }
    }

    public final String getAlbumArtist()
    {
      Object localObject1 = this.albumArtist_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.albumArtist_ = str;
      }
    }

    public final String getContentHtml()
    {
      Object localObject1 = this.contentHtml_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.contentHtml_ = str;
      }
    }

    public final int getCount()
    {
      return this.count_;
    }

    public final Media getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final String getDescriptionHtml()
    {
      Object localObject1 = this.descriptionHtml_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.descriptionHtml_ = str;
      }
    }

    public final String getGadgetName()
    {
      Object localObject1 = this.gadgetName_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.gadgetName_ = str;
      }
    }

    public final String getGadgetTitle()
    {
      Object localObject1 = this.gadgetTitle_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.gadgetTitle_ = str;
      }
    }

    public final GooglePhotoData getPhotoData()
    {
      return this.photoData_;
    }

    public final int getPlayerHeight()
    {
      return this.playerHeight_;
    }

    public final String getPlayerUrl()
    {
      Object localObject1 = this.playerUrl_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.playerUrl_ = str;
      }
    }

    public final int getPlayerWidth()
    {
      return this.playerWidth_;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeEnumSize(1, this.type_.getNumber());
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeBytesSize(2, getUrlBytes());
        if ((0x4 & this.bitField0_) == 4)
          k += CodedOutputStream.computeBytesSize(3, getContentHtmlBytes());
        if ((0x8 & this.bitField0_) == 8)
          k += CodedOutputStream.computeBytesSize(4, getThumbnailUrlBytes());
        if ((0x10 & this.bitField0_) == 16)
          k += CodedOutputStream.computeBytesSize(5, getDescriptionHtmlBytes());
        if ((0x20 & this.bitField0_) == 32)
          k += CodedOutputStream.computeBytesSize(6, getPlayerUrlBytes());
        if ((0x40 & this.bitField0_) == 64)
          k += CodedOutputStream.computeEnumSize(7, this.videoMediaDisplay_.getNumber());
        if ((0x80 & this.bitField0_) == 128)
          k += CodedOutputStream.computeInt32Size(8, this.count_);
        if ((0x100 & this.bitField0_) == 256)
          k += CodedOutputStream.computeInt32Size(9, this.playerWidth_);
        if ((0x200 & this.bitField0_) == 512)
          k += CodedOutputStream.computeInt32Size(10, this.playerHeight_);
        if ((0x400 & this.bitField0_) == 1024)
          k += CodedOutputStream.computeMessageSize(11, this.photoData_);
        if ((0x800 & this.bitField0_) == 2048)
          k += CodedOutputStream.computeEnumSize(12, this.thumbnailUrlFormat_.getNumber());
        if ((0x1000 & this.bitField0_) == 4096)
          k += CodedOutputStream.computeBytesSize(13, getAlbumBytes());
        if ((0x2000 & this.bitField0_) == 8192)
          k += CodedOutputStream.computeBytesSize(14, getAlbumArtistBytes());
        if ((0x4000 & this.bitField0_) == 16384)
          k += CodedOutputStream.computeBytesSize(15, getGadgetNameBytes());
        if ((0x8000 & this.bitField0_) == 32768)
          k += CodedOutputStream.computeBytesSize(16, getGadgetTitleBytes());
        if ((0x10000 & this.bitField0_) == 65536)
          k += CodedOutputStream.computeBoolSize(17, this.truncated_);
        this.memoizedSerializedSize = k;
      }
    }

    public final String getThumbnailUrl()
    {
      Object localObject1 = this.thumbnailUrl_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.thumbnailUrl_ = str;
      }
    }

    public final Data.ImageUrlFormat getThumbnailUrlFormat()
    {
      return this.thumbnailUrlFormat_;
    }

    public final boolean getTruncated()
    {
      return this.truncated_;
    }

    public final Type getType()
    {
      return this.type_;
    }

    public final String getUrl()
    {
      Object localObject1 = this.url_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.url_ = str;
      }
    }

    public final VideoDisplayFormat getVideoMediaDisplay()
    {
      return this.videoMediaDisplay_;
    }

    public final boolean hasAlbum()
    {
      if ((0x1000 & this.bitField0_) == 4096);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasAlbumArtist()
    {
      if ((0x2000 & this.bitField0_) == 8192);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasContentHtml()
    {
      if ((0x4 & this.bitField0_) == 4);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasCount()
    {
      if ((0x80 & this.bitField0_) == 128);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasDescriptionHtml()
    {
      if ((0x10 & this.bitField0_) == 16);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasGadgetName()
    {
      if ((0x4000 & this.bitField0_) == 16384);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasGadgetTitle()
    {
      if ((0x8000 & this.bitField0_) == 32768);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasPhotoData()
    {
      if ((0x400 & this.bitField0_) == 1024);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasPlayerHeight()
    {
      if ((0x200 & this.bitField0_) == 512);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasPlayerUrl()
    {
      if ((0x20 & this.bitField0_) == 32);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasPlayerWidth()
    {
      if ((0x100 & this.bitField0_) == 256);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasThumbnailUrl()
    {
      if ((0x8 & this.bitField0_) == 8);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasThumbnailUrlFormat()
    {
      if ((0x800 & this.bitField0_) == 2048);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasTruncated()
    {
      if ((0x10000 & this.bitField0_) == 65536);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasType()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean hasUrl()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasVideoMediaDisplay()
    {
      if ((0x40 & this.bitField0_) == 64);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeEnum(1, this.type_.getNumber());
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeBytes(2, getUrlBytes());
      if ((0x4 & this.bitField0_) == 4)
        paramCodedOutputStream.writeBytes(3, getContentHtmlBytes());
      if ((0x8 & this.bitField0_) == 8)
        paramCodedOutputStream.writeBytes(4, getThumbnailUrlBytes());
      if ((0x10 & this.bitField0_) == 16)
        paramCodedOutputStream.writeBytes(5, getDescriptionHtmlBytes());
      if ((0x20 & this.bitField0_) == 32)
        paramCodedOutputStream.writeBytes(6, getPlayerUrlBytes());
      if ((0x40 & this.bitField0_) == 64)
        paramCodedOutputStream.writeEnum(7, this.videoMediaDisplay_.getNumber());
      if ((0x80 & this.bitField0_) == 128)
        paramCodedOutputStream.writeInt32(8, this.count_);
      if ((0x100 & this.bitField0_) == 256)
        paramCodedOutputStream.writeInt32(9, this.playerWidth_);
      if ((0x200 & this.bitField0_) == 512)
        paramCodedOutputStream.writeInt32(10, this.playerHeight_);
      if ((0x400 & this.bitField0_) == 1024)
        paramCodedOutputStream.writeMessage(11, this.photoData_);
      if ((0x800 & this.bitField0_) == 2048)
        paramCodedOutputStream.writeEnum(12, this.thumbnailUrlFormat_.getNumber());
      if ((0x1000 & this.bitField0_) == 4096)
        paramCodedOutputStream.writeBytes(13, getAlbumBytes());
      if ((0x2000 & this.bitField0_) == 8192)
        paramCodedOutputStream.writeBytes(14, getAlbumArtistBytes());
      if ((0x4000 & this.bitField0_) == 16384)
        paramCodedOutputStream.writeBytes(15, getGadgetNameBytes());
      if ((0x8000 & this.bitField0_) == 32768)
        paramCodedOutputStream.writeBytes(16, getGadgetTitleBytes());
      if ((0x10000 & this.bitField0_) == 65536)
        paramCodedOutputStream.writeBool(17, this.truncated_);
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Data.Media, Builder>
      implements Data.MediaOrBuilder
    {
      private Object albumArtist_ = "";
      private Object album_ = "";
      private int bitField0_;
      private Object contentHtml_ = "";
      private int count_;
      private Object descriptionHtml_ = "";
      private Object gadgetName_ = "";
      private Object gadgetTitle_ = "";
      private Data.Media.GooglePhotoData photoData_ = Data.Media.GooglePhotoData.getDefaultInstance();
      private int playerHeight_;
      private Object playerUrl_ = "";
      private int playerWidth_;
      private Data.ImageUrlFormat thumbnailUrlFormat_ = Data.ImageUrlFormat.UNKNOWN;
      private Object thumbnailUrl_ = "";
      private boolean truncated_;
      private Data.Media.Type type_ = Data.Media.Type.POST;
      private Object url_ = "";
      private Data.Media.VideoDisplayFormat videoMediaDisplay_ = Data.Media.VideoDisplayFormat.NO_EMBEDDED_VIDEO;

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 8:
            Data.Media.Type localType = Data.Media.Type.valueOf(paramCodedInputStream.readEnum());
            if (localType == null)
              continue;
            this.bitField0_ = (0x1 | this.bitField0_);
            this.type_ = localType;
            break;
          case 18:
            this.bitField0_ = (0x2 | this.bitField0_);
            this.url_ = paramCodedInputStream.readBytes();
            break;
          case 26:
            this.bitField0_ = (0x4 | this.bitField0_);
            this.contentHtml_ = paramCodedInputStream.readBytes();
            break;
          case 34:
            this.bitField0_ = (0x8 | this.bitField0_);
            this.thumbnailUrl_ = paramCodedInputStream.readBytes();
            break;
          case 42:
            this.bitField0_ = (0x10 | this.bitField0_);
            this.descriptionHtml_ = paramCodedInputStream.readBytes();
            break;
          case 50:
            this.bitField0_ = (0x20 | this.bitField0_);
            this.playerUrl_ = paramCodedInputStream.readBytes();
            break;
          case 56:
            Data.Media.VideoDisplayFormat localVideoDisplayFormat = Data.Media.VideoDisplayFormat.valueOf(paramCodedInputStream.readEnum());
            if (localVideoDisplayFormat == null)
              continue;
            this.bitField0_ = (0x40 | this.bitField0_);
            this.videoMediaDisplay_ = localVideoDisplayFormat;
            break;
          case 64:
            this.bitField0_ = (0x80 | this.bitField0_);
            this.count_ = paramCodedInputStream.readInt32();
            break;
          case 72:
            this.bitField0_ = (0x100 | this.bitField0_);
            this.playerWidth_ = paramCodedInputStream.readInt32();
            break;
          case 80:
            this.bitField0_ = (0x200 | this.bitField0_);
            this.playerHeight_ = paramCodedInputStream.readInt32();
            break;
          case 90:
            Data.Media.GooglePhotoData.Builder localBuilder = Data.Media.GooglePhotoData.newBuilder();
            if (hasPhotoData())
              localBuilder.mergeFrom(getPhotoData());
            paramCodedInputStream.readMessage(localBuilder, paramExtensionRegistryLite);
            setPhotoData(localBuilder.buildPartial());
            break;
          case 96:
            Data.ImageUrlFormat localImageUrlFormat = Data.ImageUrlFormat.valueOf(paramCodedInputStream.readEnum());
            if (localImageUrlFormat == null)
              continue;
            this.bitField0_ = (0x800 | this.bitField0_);
            this.thumbnailUrlFormat_ = localImageUrlFormat;
            break;
          case 106:
            this.bitField0_ = (0x1000 | this.bitField0_);
            this.album_ = paramCodedInputStream.readBytes();
            break;
          case 114:
            this.bitField0_ = (0x2000 | this.bitField0_);
            this.albumArtist_ = paramCodedInputStream.readBytes();
            break;
          case 122:
            this.bitField0_ = (0x4000 | this.bitField0_);
            this.gadgetName_ = paramCodedInputStream.readBytes();
            break;
          case 130:
            this.bitField0_ = (0x8000 | this.bitField0_);
            this.gadgetTitle_ = paramCodedInputStream.readBytes();
            break;
          case 136:
          }
          this.bitField0_ = (0x10000 | this.bitField0_);
          this.truncated_ = paramCodedInputStream.readBool();
        }
      }

      public final Data.Media build()
      {
        Data.Media localMedia = buildPartial();
        if (!localMedia.isInitialized())
          throw new UninitializedMessageException();
        return localMedia;
      }

      public final Data.Media buildPartial()
      {
        Data.Media localMedia = new Data.Media(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Data.Media.access$9002(localMedia, this.type_);
        if ((i & 0x2) == 2)
          k |= 2;
        Data.Media.access$9102(localMedia, this.url_);
        if ((i & 0x4) == 4)
          k |= 4;
        Data.Media.access$9202(localMedia, this.contentHtml_);
        if ((i & 0x8) == 8)
          k |= 8;
        Data.Media.access$9302(localMedia, this.thumbnailUrl_);
        if ((i & 0x10) == 16)
          k |= 16;
        Data.Media.access$9402(localMedia, this.descriptionHtml_);
        if ((i & 0x20) == 32)
          k |= 32;
        Data.Media.access$9502(localMedia, this.playerUrl_);
        if ((i & 0x40) == 64)
          k |= 64;
        Data.Media.access$9602(localMedia, this.videoMediaDisplay_);
        if ((i & 0x80) == 128)
          k |= 128;
        Data.Media.access$9702(localMedia, this.count_);
        if ((i & 0x100) == 256)
          k |= 256;
        Data.Media.access$9802(localMedia, this.playerWidth_);
        if ((i & 0x200) == 512)
          k |= 512;
        Data.Media.access$9902(localMedia, this.playerHeight_);
        if ((i & 0x400) == 1024)
          k |= 1024;
        Data.Media.access$10002(localMedia, this.photoData_);
        if ((i & 0x800) == 2048)
          k |= 2048;
        Data.Media.access$10102(localMedia, this.thumbnailUrlFormat_);
        if ((i & 0x1000) == 4096)
          k |= 4096;
        Data.Media.access$10202(localMedia, this.album_);
        if ((i & 0x2000) == 8192)
          k |= 8192;
        Data.Media.access$10302(localMedia, this.albumArtist_);
        if ((i & 0x4000) == 16384)
          k |= 16384;
        Data.Media.access$10402(localMedia, this.gadgetName_);
        if ((i & 0x8000) == 32768)
          k |= 32768;
        Data.Media.access$10502(localMedia, this.gadgetTitle_);
        if ((i & 0x10000) == 65536)
          k |= 65536;
        Data.Media.access$10602(localMedia, this.truncated_);
        Data.Media.access$10702(localMedia, k);
        return localMedia;
      }

      public final Builder clear()
      {
        super.clear();
        this.type_ = Data.Media.Type.POST;
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.url_ = "";
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.contentHtml_ = "";
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.thumbnailUrl_ = "";
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        this.descriptionHtml_ = "";
        this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        this.playerUrl_ = "";
        this.bitField0_ = (0xFFFFFFDF & this.bitField0_);
        this.videoMediaDisplay_ = Data.Media.VideoDisplayFormat.NO_EMBEDDED_VIDEO;
        this.bitField0_ = (0xFFFFFFBF & this.bitField0_);
        this.count_ = 0;
        this.bitField0_ = (0xFFFFFF7F & this.bitField0_);
        this.playerWidth_ = 0;
        this.bitField0_ = (0xFFFFFEFF & this.bitField0_);
        this.playerHeight_ = 0;
        this.bitField0_ = (0xFFFFFDFF & this.bitField0_);
        this.photoData_ = Data.Media.GooglePhotoData.getDefaultInstance();
        this.bitField0_ = (0xFFFFFBFF & this.bitField0_);
        this.thumbnailUrlFormat_ = Data.ImageUrlFormat.UNKNOWN;
        this.bitField0_ = (0xFFFFF7FF & this.bitField0_);
        this.album_ = "";
        this.bitField0_ = (0xFFFFEFFF & this.bitField0_);
        this.albumArtist_ = "";
        this.bitField0_ = (0xFFFFDFFF & this.bitField0_);
        this.gadgetName_ = "";
        this.bitField0_ = (0xFFFFBFFF & this.bitField0_);
        this.gadgetTitle_ = "";
        this.bitField0_ = (0xFFFF7FFF & this.bitField0_);
        this.truncated_ = false;
        this.bitField0_ = (0xFFFEFFFF & this.bitField0_);
        return this;
      }

      public final Builder clearAlbum()
      {
        this.bitField0_ = (0xFFFFEFFF & this.bitField0_);
        this.album_ = Data.Media.getDefaultInstance().getAlbum();
        return this;
      }

      public final Builder clearAlbumArtist()
      {
        this.bitField0_ = (0xFFFFDFFF & this.bitField0_);
        this.albumArtist_ = Data.Media.getDefaultInstance().getAlbumArtist();
        return this;
      }

      public final Builder clearContentHtml()
      {
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.contentHtml_ = Data.Media.getDefaultInstance().getContentHtml();
        return this;
      }

      public final Builder clearCount()
      {
        this.bitField0_ = (0xFFFFFF7F & this.bitField0_);
        this.count_ = 0;
        return this;
      }

      public final Builder clearDescriptionHtml()
      {
        this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        this.descriptionHtml_ = Data.Media.getDefaultInstance().getDescriptionHtml();
        return this;
      }

      public final Builder clearGadgetName()
      {
        this.bitField0_ = (0xFFFFBFFF & this.bitField0_);
        this.gadgetName_ = Data.Media.getDefaultInstance().getGadgetName();
        return this;
      }

      public final Builder clearGadgetTitle()
      {
        this.bitField0_ = (0xFFFF7FFF & this.bitField0_);
        this.gadgetTitle_ = Data.Media.getDefaultInstance().getGadgetTitle();
        return this;
      }

      public final Builder clearPhotoData()
      {
        this.photoData_ = Data.Media.GooglePhotoData.getDefaultInstance();
        this.bitField0_ = (0xFFFFFBFF & this.bitField0_);
        return this;
      }

      public final Builder clearPlayerHeight()
      {
        this.bitField0_ = (0xFFFFFDFF & this.bitField0_);
        this.playerHeight_ = 0;
        return this;
      }

      public final Builder clearPlayerUrl()
      {
        this.bitField0_ = (0xFFFFFFDF & this.bitField0_);
        this.playerUrl_ = Data.Media.getDefaultInstance().getPlayerUrl();
        return this;
      }

      public final Builder clearPlayerWidth()
      {
        this.bitField0_ = (0xFFFFFEFF & this.bitField0_);
        this.playerWidth_ = 0;
        return this;
      }

      public final Builder clearThumbnailUrl()
      {
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        this.thumbnailUrl_ = Data.Media.getDefaultInstance().getThumbnailUrl();
        return this;
      }

      public final Builder clearThumbnailUrlFormat()
      {
        this.bitField0_ = (0xFFFFF7FF & this.bitField0_);
        this.thumbnailUrlFormat_ = Data.ImageUrlFormat.UNKNOWN;
        return this;
      }

      public final Builder clearTruncated()
      {
        this.bitField0_ = (0xFFFEFFFF & this.bitField0_);
        this.truncated_ = false;
        return this;
      }

      public final Builder clearType()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.type_ = Data.Media.Type.POST;
        return this;
      }

      public final Builder clearUrl()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.url_ = Data.Media.getDefaultInstance().getUrl();
        return this;
      }

      public final Builder clearVideoMediaDisplay()
      {
        this.bitField0_ = (0xFFFFFFBF & this.bitField0_);
        this.videoMediaDisplay_ = Data.Media.VideoDisplayFormat.NO_EMBEDDED_VIDEO;
        return this;
      }

      public final String getAlbum()
      {
        Object localObject = this.album_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.album_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final String getAlbumArtist()
      {
        Object localObject = this.albumArtist_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.albumArtist_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final String getContentHtml()
      {
        Object localObject = this.contentHtml_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.contentHtml_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final int getCount()
      {
        return this.count_;
      }

      public final Data.Media getDefaultInstanceForType()
      {
        return Data.Media.getDefaultInstance();
      }

      public final String getDescriptionHtml()
      {
        Object localObject = this.descriptionHtml_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.descriptionHtml_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final String getGadgetName()
      {
        Object localObject = this.gadgetName_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.gadgetName_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final String getGadgetTitle()
      {
        Object localObject = this.gadgetTitle_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.gadgetTitle_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final Data.Media.GooglePhotoData getPhotoData()
      {
        return this.photoData_;
      }

      public final int getPlayerHeight()
      {
        return this.playerHeight_;
      }

      public final String getPlayerUrl()
      {
        Object localObject = this.playerUrl_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.playerUrl_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final int getPlayerWidth()
      {
        return this.playerWidth_;
      }

      public final String getThumbnailUrl()
      {
        Object localObject = this.thumbnailUrl_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.thumbnailUrl_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final Data.ImageUrlFormat getThumbnailUrlFormat()
      {
        return this.thumbnailUrlFormat_;
      }

      public final boolean getTruncated()
      {
        return this.truncated_;
      }

      public final Data.Media.Type getType()
      {
        return this.type_;
      }

      public final String getUrl()
      {
        Object localObject = this.url_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.url_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final Data.Media.VideoDisplayFormat getVideoMediaDisplay()
      {
        return this.videoMediaDisplay_;
      }

      public final boolean hasAlbum()
      {
        if ((0x1000 & this.bitField0_) == 4096);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasAlbumArtist()
      {
        if ((0x2000 & this.bitField0_) == 8192);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasContentHtml()
      {
        if ((0x4 & this.bitField0_) == 4);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasCount()
      {
        if ((0x80 & this.bitField0_) == 128);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasDescriptionHtml()
      {
        if ((0x10 & this.bitField0_) == 16);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasGadgetName()
      {
        if ((0x4000 & this.bitField0_) == 16384);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasGadgetTitle()
      {
        if ((0x8000 & this.bitField0_) == 32768);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasPhotoData()
      {
        if ((0x400 & this.bitField0_) == 1024);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasPlayerHeight()
      {
        if ((0x200 & this.bitField0_) == 512);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasPlayerUrl()
      {
        if ((0x20 & this.bitField0_) == 32);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasPlayerWidth()
      {
        if ((0x100 & this.bitField0_) == 256);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasThumbnailUrl()
      {
        if ((0x8 & this.bitField0_) == 8);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasThumbnailUrlFormat()
      {
        if ((0x800 & this.bitField0_) == 2048);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasTruncated()
      {
        if ((0x10000 & this.bitField0_) == 65536);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasType()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean hasUrl()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasVideoMediaDisplay()
      {
        if ((0x40 & this.bitField0_) == 64);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Data.Media paramMedia)
      {
        if (paramMedia == Data.Media.getDefaultInstance())
          return this;
        if (paramMedia.hasType())
          setType(paramMedia.getType());
        if (paramMedia.hasUrl())
          setUrl(paramMedia.getUrl());
        if (paramMedia.hasContentHtml())
          setContentHtml(paramMedia.getContentHtml());
        if (paramMedia.hasThumbnailUrl())
          setThumbnailUrl(paramMedia.getThumbnailUrl());
        if (paramMedia.hasDescriptionHtml())
          setDescriptionHtml(paramMedia.getDescriptionHtml());
        if (paramMedia.hasPlayerUrl())
          setPlayerUrl(paramMedia.getPlayerUrl());
        if (paramMedia.hasVideoMediaDisplay())
          setVideoMediaDisplay(paramMedia.getVideoMediaDisplay());
        if (paramMedia.hasCount())
          setCount(paramMedia.getCount());
        if (paramMedia.hasPlayerWidth())
          setPlayerWidth(paramMedia.getPlayerWidth());
        if (paramMedia.hasPlayerHeight())
          setPlayerHeight(paramMedia.getPlayerHeight());
        Data.Media.GooglePhotoData localGooglePhotoData;
        if (paramMedia.hasPhotoData())
        {
          localGooglePhotoData = paramMedia.getPhotoData();
          if (((0x400 & this.bitField0_) != 1024) || (this.photoData_ == Data.Media.GooglePhotoData.getDefaultInstance()))
            break label336;
        }
        label336: for (this.photoData_ = Data.Media.GooglePhotoData.newBuilder(this.photoData_).mergeFrom(localGooglePhotoData).buildPartial(); ; this.photoData_ = localGooglePhotoData)
        {
          this.bitField0_ = (0x400 | this.bitField0_);
          if (paramMedia.hasThumbnailUrlFormat())
            setThumbnailUrlFormat(paramMedia.getThumbnailUrlFormat());
          if (paramMedia.hasAlbum())
            setAlbum(paramMedia.getAlbum());
          if (paramMedia.hasAlbumArtist())
            setAlbumArtist(paramMedia.getAlbumArtist());
          if (paramMedia.hasGadgetName())
            setGadgetName(paramMedia.getGadgetName());
          if (paramMedia.hasGadgetTitle())
            setGadgetTitle(paramMedia.getGadgetTitle());
          if (!paramMedia.hasTruncated())
            break;
          setTruncated(paramMedia.getTruncated());
          break;
        }
      }

      public final Builder setAlbum(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x1000 | this.bitField0_);
        this.album_ = paramString;
        return this;
      }

      public final Builder setAlbumArtist(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x2000 | this.bitField0_);
        this.albumArtist_ = paramString;
        return this;
      }

      public final Builder setContentHtml(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x4 | this.bitField0_);
        this.contentHtml_ = paramString;
        return this;
      }

      public final Builder setCount(int paramInt)
      {
        this.bitField0_ = (0x80 | this.bitField0_);
        this.count_ = paramInt;
        return this;
      }

      public final Builder setDescriptionHtml(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x10 | this.bitField0_);
        this.descriptionHtml_ = paramString;
        return this;
      }

      public final Builder setGadgetName(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x4000 | this.bitField0_);
        this.gadgetName_ = paramString;
        return this;
      }

      public final Builder setGadgetTitle(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x8000 | this.bitField0_);
        this.gadgetTitle_ = paramString;
        return this;
      }

      public final Builder setPhotoData(Data.Media.GooglePhotoData.Builder paramBuilder)
      {
        this.photoData_ = paramBuilder.build();
        this.bitField0_ = (0x400 | this.bitField0_);
        return this;
      }

      public final Builder setPhotoData(Data.Media.GooglePhotoData paramGooglePhotoData)
      {
        if (paramGooglePhotoData == null)
          throw new NullPointerException();
        this.photoData_ = paramGooglePhotoData;
        this.bitField0_ = (0x400 | this.bitField0_);
        return this;
      }

      public final Builder setPlayerHeight(int paramInt)
      {
        this.bitField0_ = (0x200 | this.bitField0_);
        this.playerHeight_ = paramInt;
        return this;
      }

      public final Builder setPlayerUrl(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x20 | this.bitField0_);
        this.playerUrl_ = paramString;
        return this;
      }

      public final Builder setPlayerWidth(int paramInt)
      {
        this.bitField0_ = (0x100 | this.bitField0_);
        this.playerWidth_ = paramInt;
        return this;
      }

      public final Builder setThumbnailUrl(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x8 | this.bitField0_);
        this.thumbnailUrl_ = paramString;
        return this;
      }

      public final Builder setThumbnailUrlFormat(Data.ImageUrlFormat paramImageUrlFormat)
      {
        if (paramImageUrlFormat == null)
          throw new NullPointerException();
        this.bitField0_ = (0x800 | this.bitField0_);
        this.thumbnailUrlFormat_ = paramImageUrlFormat;
        return this;
      }

      public final Builder setTruncated(boolean paramBoolean)
      {
        this.bitField0_ = (0x10000 | this.bitField0_);
        this.truncated_ = paramBoolean;
        return this;
      }

      public final Builder setType(Data.Media.Type paramType)
      {
        if (paramType == null)
          throw new NullPointerException();
        this.bitField0_ = (0x1 | this.bitField0_);
        this.type_ = paramType;
        return this;
      }

      public final Builder setUrl(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x2 | this.bitField0_);
        this.url_ = paramString;
        return this;
      }

      public final Builder setVideoMediaDisplay(Data.Media.VideoDisplayFormat paramVideoDisplayFormat)
      {
        if (paramVideoDisplayFormat == null)
          throw new NullPointerException();
        this.bitField0_ = (0x40 | this.bitField0_);
        this.videoMediaDisplay_ = paramVideoDisplayFormat;
        return this;
      }
    }

    public static final class GooglePhotoData extends GeneratedMessageLite
      implements Data.Media.GooglePhotoDataOrBuilder
    {
      private static final GooglePhotoData defaultInstance;
      private static final long serialVersionUID;
      private long albumId_;
      private int bitField0_;
      private long mediaTag_;
      private byte memoizedIsInitialized = -1;
      private int memoizedSerializedSize = -1;
      private Object ownerFocusObfuscatedId_;

      static
      {
        GooglePhotoData localGooglePhotoData = new GooglePhotoData();
        defaultInstance = localGooglePhotoData;
        localGooglePhotoData.mediaTag_ = 0L;
        localGooglePhotoData.ownerFocusObfuscatedId_ = "";
        localGooglePhotoData.albumId_ = 0L;
      }

      private GooglePhotoData()
      {
      }

      private GooglePhotoData(Builder paramBuilder)
      {
        super();
      }

      public static GooglePhotoData getDefaultInstance()
      {
        return defaultInstance;
      }

      private ByteString getOwnerFocusObfuscatedIdBytes()
      {
        Object localObject = this.ownerFocusObfuscatedId_;
        ByteString localByteString;
        if ((localObject instanceof String))
        {
          localByteString = ByteString.copyFromUtf8((String)localObject);
          this.ownerFocusObfuscatedId_ = localByteString;
        }
        while (true)
        {
          return localByteString;
          localByteString = (ByteString)localObject;
        }
      }

      public static Builder newBuilder()
      {
        return Builder.access$8100();
      }

      public static Builder newBuilder(GooglePhotoData paramGooglePhotoData)
      {
        return Builder.access$8100().mergeFrom(paramGooglePhotoData);
      }

      public final long getAlbumId()
      {
        return this.albumId_;
      }

      public final GooglePhotoData getDefaultInstanceForType()
      {
        return defaultInstance;
      }

      public final long getMediaTag()
      {
        return this.mediaTag_;
      }

      public final String getOwnerFocusObfuscatedId()
      {
        Object localObject1 = this.ownerFocusObfuscatedId_;
        if ((localObject1 instanceof String));
        String str;
        for (Object localObject2 = (String)localObject1; ; localObject2 = str)
        {
          return localObject2;
          ByteString localByteString = (ByteString)localObject1;
          str = localByteString.toStringUtf8();
          if (Internal.isValidUtf8(localByteString))
            this.ownerFocusObfuscatedId_ = str;
        }
      }

      public final int getSerializedSize()
      {
        int i = this.memoizedSerializedSize;
        if (i != -1);
        int k;
        for (int m = i; ; m = k)
        {
          return m;
          int j = 0x1 & this.bitField0_;
          k = 0;
          if (j == 1)
            k = 0 + CodedOutputStream.computeInt64Size(1, this.mediaTag_);
          if ((0x2 & this.bitField0_) == 2)
            k += CodedOutputStream.computeBytesSize(2, getOwnerFocusObfuscatedIdBytes());
          if ((0x4 & this.bitField0_) == 4)
            k += CodedOutputStream.computeInt64Size(3, this.albumId_);
          this.memoizedSerializedSize = k;
        }
      }

      public final boolean hasAlbumId()
      {
        if ((0x4 & this.bitField0_) == 4);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasMediaTag()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean hasOwnerFocusObfuscatedId()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean isInitialized()
      {
        int i = 1;
        int j = this.memoizedIsInitialized;
        if (j != -1)
          if (j != i);
        while (true)
        {
          return i;
          i = 0;
          continue;
          this.memoizedIsInitialized = i;
        }
      }

      protected final Object writeReplace()
        throws ObjectStreamException
      {
        return super.writeReplace();
      }

      public final void writeTo(CodedOutputStream paramCodedOutputStream)
        throws IOException
      {
        getSerializedSize();
        if ((0x1 & this.bitField0_) == 1)
          paramCodedOutputStream.writeInt64(1, this.mediaTag_);
        if ((0x2 & this.bitField0_) == 2)
          paramCodedOutputStream.writeBytes(2, getOwnerFocusObfuscatedIdBytes());
        if ((0x4 & this.bitField0_) == 4)
          paramCodedOutputStream.writeInt64(3, this.albumId_);
      }

      public static final class Builder extends GeneratedMessageLite.Builder<Data.Media.GooglePhotoData, Builder>
        implements Data.Media.GooglePhotoDataOrBuilder
      {
        private long albumId_;
        private int bitField0_;
        private long mediaTag_;
        private Object ownerFocusObfuscatedId_ = "";

        private Builder clone()
        {
          return new Builder().mergeFrom(buildPartial());
        }

        private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
          throws IOException
        {
          while (true)
          {
            int i = paramCodedInputStream.readTag();
            switch (i)
            {
            default:
              if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
                continue;
            case 0:
              return this;
            case 8:
              this.bitField0_ = (0x1 | this.bitField0_);
              this.mediaTag_ = paramCodedInputStream.readInt64();
              break;
            case 18:
              this.bitField0_ = (0x2 | this.bitField0_);
              this.ownerFocusObfuscatedId_ = paramCodedInputStream.readBytes();
              break;
            case 24:
            }
            this.bitField0_ = (0x4 | this.bitField0_);
            this.albumId_ = paramCodedInputStream.readInt64();
          }
        }

        public final Data.Media.GooglePhotoData build()
        {
          Data.Media.GooglePhotoData localGooglePhotoData = buildPartial();
          if (!localGooglePhotoData.isInitialized())
            throw new UninitializedMessageException();
          return localGooglePhotoData;
        }

        public final Data.Media.GooglePhotoData buildPartial()
        {
          Data.Media.GooglePhotoData localGooglePhotoData = new Data.Media.GooglePhotoData(this, (byte)0);
          int i = this.bitField0_;
          int j = i & 0x1;
          int k = 0;
          if (j == 1)
            k = 1;
          Data.Media.GooglePhotoData.access$8302(localGooglePhotoData, this.mediaTag_);
          if ((i & 0x2) == 2)
            k |= 2;
          Data.Media.GooglePhotoData.access$8402(localGooglePhotoData, this.ownerFocusObfuscatedId_);
          if ((i & 0x4) == 4)
            k |= 4;
          Data.Media.GooglePhotoData.access$8502(localGooglePhotoData, this.albumId_);
          Data.Media.GooglePhotoData.access$8602(localGooglePhotoData, k);
          return localGooglePhotoData;
        }

        public final Builder clear()
        {
          super.clear();
          this.mediaTag_ = 0L;
          this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
          this.ownerFocusObfuscatedId_ = "";
          this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
          this.albumId_ = 0L;
          this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
          return this;
        }

        public final Builder clearAlbumId()
        {
          this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
          this.albumId_ = 0L;
          return this;
        }

        public final Builder clearMediaTag()
        {
          this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
          this.mediaTag_ = 0L;
          return this;
        }

        public final Builder clearOwnerFocusObfuscatedId()
        {
          this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
          this.ownerFocusObfuscatedId_ = Data.Media.GooglePhotoData.getDefaultInstance().getOwnerFocusObfuscatedId();
          return this;
        }

        public final long getAlbumId()
        {
          return this.albumId_;
        }

        public final Data.Media.GooglePhotoData getDefaultInstanceForType()
        {
          return Data.Media.GooglePhotoData.getDefaultInstance();
        }

        public final long getMediaTag()
        {
          return this.mediaTag_;
        }

        public final String getOwnerFocusObfuscatedId()
        {
          Object localObject = this.ownerFocusObfuscatedId_;
          String str;
          if (!(localObject instanceof String))
          {
            str = ((ByteString)localObject).toStringUtf8();
            this.ownerFocusObfuscatedId_ = str;
          }
          while (true)
          {
            return str;
            str = (String)localObject;
          }
        }

        public final boolean hasAlbumId()
        {
          if ((0x4 & this.bitField0_) == 4);
          for (boolean bool = true; ; bool = false)
            return bool;
        }

        public final boolean hasMediaTag()
        {
          int i = 1;
          if ((0x1 & this.bitField0_) == i);
          while (true)
          {
            return i;
            int j = 0;
          }
        }

        public final boolean hasOwnerFocusObfuscatedId()
        {
          if ((0x2 & this.bitField0_) == 2);
          for (boolean bool = true; ; bool = false)
            return bool;
        }

        public final boolean isInitialized()
        {
          return true;
        }

        public final Builder mergeFrom(Data.Media.GooglePhotoData paramGooglePhotoData)
        {
          if (paramGooglePhotoData == Data.Media.GooglePhotoData.getDefaultInstance());
          while (true)
          {
            return this;
            if (paramGooglePhotoData.hasMediaTag())
              setMediaTag(paramGooglePhotoData.getMediaTag());
            if (paramGooglePhotoData.hasOwnerFocusObfuscatedId())
              setOwnerFocusObfuscatedId(paramGooglePhotoData.getOwnerFocusObfuscatedId());
            if (paramGooglePhotoData.hasAlbumId())
              setAlbumId(paramGooglePhotoData.getAlbumId());
          }
        }

        public final Builder setAlbumId(long paramLong)
        {
          this.bitField0_ = (0x4 | this.bitField0_);
          this.albumId_ = paramLong;
          return this;
        }

        public final Builder setMediaTag(long paramLong)
        {
          this.bitField0_ = (0x1 | this.bitField0_);
          this.mediaTag_ = paramLong;
          return this;
        }

        public final Builder setOwnerFocusObfuscatedId(String paramString)
        {
          if (paramString == null)
            throw new NullPointerException();
          this.bitField0_ = (0x2 | this.bitField0_);
          this.ownerFocusObfuscatedId_ = paramString;
          return this;
        }
      }
    }

    public static abstract interface GooglePhotoDataOrBuilder extends MessageLiteOrBuilder
    {
      public abstract long getAlbumId();

      public abstract long getMediaTag();

      public abstract String getOwnerFocusObfuscatedId();

      public abstract boolean hasAlbumId();

      public abstract boolean hasMediaTag();

      public abstract boolean hasOwnerFocusObfuscatedId();
    }

    public static enum Type
      implements Internal.EnumLite
    {
      private static Internal.EnumLiteMap<Type> internalValueMap = new Internal.EnumLiteMap()
      {
      };
      private final int value;

      static
      {
        DOCUMENT = new Type("DOCUMENT", 2, 3);
        VIDEO = new Type("VIDEO", 3, 4);
        IMAGE = new Type("IMAGE", 4, 5);
        ADDRESS = new Type("ADDRESS", 5, 6);
        OFFER = new Type("OFFER", 6, 7);
        PHONE_NUMBER = new Type("PHONE_NUMBER", 7, 8);
        REVIEW_COUNT = new Type("REVIEW_COUNT", 8, 9);
        STAR_RATING = new Type("STAR_RATING", 9, 10);
        REVIEW = new Type("REVIEW", 10, 11);
        CLUSTER_ID = new Type("CLUSTER_ID", 11, 12);
        NEWS_SOURCE = new Type("NEWS_SOURCE", 12, 13);
        SKYJAM_SONG = new Type("SKYJAM_SONG", 13, 14);
        SKYJAM_ALBUM = new Type("SKYJAM_ALBUM", 14, 15);
        GADGET = new Type("GADGET", 15, 16);
        Type[] arrayOfType = new Type[16];
        arrayOfType[0] = POST;
        arrayOfType[1] = TITLE;
        arrayOfType[2] = DOCUMENT;
        arrayOfType[3] = VIDEO;
        arrayOfType[4] = IMAGE;
        arrayOfType[5] = ADDRESS;
        arrayOfType[6] = OFFER;
        arrayOfType[7] = PHONE_NUMBER;
        arrayOfType[8] = REVIEW_COUNT;
        arrayOfType[9] = STAR_RATING;
        arrayOfType[10] = REVIEW;
        arrayOfType[11] = CLUSTER_ID;
        arrayOfType[12] = NEWS_SOURCE;
        arrayOfType[13] = SKYJAM_SONG;
        arrayOfType[14] = SKYJAM_ALBUM;
        arrayOfType[15] = GADGET;
      }

      private Type(int paramInt1, int paramInt2)
      {
        this.value = paramInt1;
      }

      public static Type valueOf(int paramInt)
      {
        Type localType;
        switch (paramInt)
        {
        default:
          localType = null;
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
        case 6:
        case 7:
        case 8:
        case 9:
        case 10:
        case 11:
        case 12:
        case 13:
        case 14:
        case 15:
        case 16:
        }
        while (true)
        {
          return localType;
          localType = POST;
          continue;
          localType = TITLE;
          continue;
          localType = DOCUMENT;
          continue;
          localType = VIDEO;
          continue;
          localType = IMAGE;
          continue;
          localType = ADDRESS;
          continue;
          localType = OFFER;
          continue;
          localType = PHONE_NUMBER;
          continue;
          localType = REVIEW_COUNT;
          continue;
          localType = STAR_RATING;
          continue;
          localType = REVIEW;
          continue;
          localType = CLUSTER_ID;
          continue;
          localType = NEWS_SOURCE;
          continue;
          localType = SKYJAM_SONG;
          continue;
          localType = SKYJAM_ALBUM;
          continue;
          localType = GADGET;
        }
      }

      public final int getNumber()
      {
        return this.value;
      }
    }

    public static enum VideoDisplayFormat
      implements Internal.EnumLite
    {
      private static Internal.EnumLiteMap<VideoDisplayFormat> internalValueMap = new Internal.EnumLiteMap()
      {
      };
      private final int value;

      static
      {
        USE_EMBED_FLASH_TAG = new VideoDisplayFormat("USE_EMBED_FLASH_TAG", 2, 3);
        VideoDisplayFormat[] arrayOfVideoDisplayFormat = new VideoDisplayFormat[3];
        arrayOfVideoDisplayFormat[0] = NO_EMBEDDED_VIDEO;
        arrayOfVideoDisplayFormat[1] = USE_HTML5_EMBEDDED_PLAYER;
        arrayOfVideoDisplayFormat[2] = USE_EMBED_FLASH_TAG;
      }

      private VideoDisplayFormat(int paramInt1, int paramInt2)
      {
        this.value = paramInt1;
      }

      public static VideoDisplayFormat valueOf(int paramInt)
      {
        VideoDisplayFormat localVideoDisplayFormat;
        switch (paramInt)
        {
        default:
          localVideoDisplayFormat = null;
        case 1:
        case 2:
        case 3:
        }
        while (true)
        {
          return localVideoDisplayFormat;
          localVideoDisplayFormat = NO_EMBEDDED_VIDEO;
          continue;
          localVideoDisplayFormat = USE_HTML5_EMBEDDED_PLAYER;
          continue;
          localVideoDisplayFormat = USE_EMBED_FLASH_TAG;
        }
      }

      public final int getNumber()
      {
        return this.value;
      }
    }
  }

  public static abstract interface MediaOrBuilder extends MessageLiteOrBuilder
  {
    public abstract String getAlbum();

    public abstract String getAlbumArtist();

    public abstract String getContentHtml();

    public abstract int getCount();

    public abstract String getDescriptionHtml();

    public abstract String getGadgetName();

    public abstract String getGadgetTitle();

    public abstract Data.Media.GooglePhotoData getPhotoData();

    public abstract int getPlayerHeight();

    public abstract String getPlayerUrl();

    public abstract int getPlayerWidth();

    public abstract String getThumbnailUrl();

    public abstract Data.ImageUrlFormat getThumbnailUrlFormat();

    public abstract boolean getTruncated();

    public abstract Data.Media.Type getType();

    public abstract String getUrl();

    public abstract Data.Media.VideoDisplayFormat getVideoMediaDisplay();

    public abstract boolean hasAlbum();

    public abstract boolean hasAlbumArtist();

    public abstract boolean hasContentHtml();

    public abstract boolean hasCount();

    public abstract boolean hasDescriptionHtml();

    public abstract boolean hasGadgetName();

    public abstract boolean hasGadgetTitle();

    public abstract boolean hasPhotoData();

    public abstract boolean hasPlayerHeight();

    public abstract boolean hasPlayerUrl();

    public abstract boolean hasPlayerWidth();

    public abstract boolean hasThumbnailUrl();

    public abstract boolean hasThumbnailUrlFormat();

    public abstract boolean hasTruncated();

    public abstract boolean hasType();

    public abstract boolean hasUrl();

    public abstract boolean hasVideoMediaDisplay();
  }

  public static final class Mention extends GeneratedMessageLite
    implements Data.MentionOrBuilder
  {
    private static final Mention defaultInstance;
    private static final long serialVersionUID;
    private Object aggregateId_;
    private int bitField0_;
    private Object displayName_;
    private int index_;
    private int length_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;

    static
    {
      Mention localMention = new Mention();
      defaultInstance = localMention;
      localMention.index_ = 0;
      localMention.length_ = 0;
      localMention.aggregateId_ = "";
      localMention.displayName_ = "";
    }

    private Mention()
    {
    }

    private Mention(Builder paramBuilder)
    {
      super();
    }

    private ByteString getAggregateIdBytes()
    {
      Object localObject = this.aggregateId_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.aggregateId_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static Mention getDefaultInstance()
    {
      return defaultInstance;
    }

    private ByteString getDisplayNameBytes()
    {
      Object localObject = this.displayName_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.displayName_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static Builder newBuilder()
    {
      return Builder.access$7300();
    }

    public final String getAggregateId()
    {
      Object localObject1 = this.aggregateId_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.aggregateId_ = str;
      }
    }

    public final Mention getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final String getDisplayName()
    {
      Object localObject1 = this.displayName_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.displayName_ = str;
      }
    }

    public final int getIndex()
    {
      return this.index_;
    }

    public final int getLength()
    {
      return this.length_;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeInt32Size(1, this.index_);
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeInt32Size(2, this.length_);
        if ((0x4 & this.bitField0_) == 4)
          k += CodedOutputStream.computeBytesSize(3, getAggregateIdBytes());
        if ((0x8 & this.bitField0_) == 8)
          k += CodedOutputStream.computeBytesSize(4, getDisplayNameBytes());
        this.memoizedSerializedSize = k;
      }
    }

    public final boolean hasAggregateId()
    {
      if ((0x4 & this.bitField0_) == 4);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasDisplayName()
    {
      if ((0x8 & this.bitField0_) == 8);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasIndex()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean hasLength()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeInt32(1, this.index_);
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeInt32(2, this.length_);
      if ((0x4 & this.bitField0_) == 4)
        paramCodedOutputStream.writeBytes(3, getAggregateIdBytes());
      if ((0x8 & this.bitField0_) == 8)
        paramCodedOutputStream.writeBytes(4, getDisplayNameBytes());
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Data.Mention, Builder>
      implements Data.MentionOrBuilder
    {
      private Object aggregateId_ = "";
      private int bitField0_;
      private Object displayName_ = "";
      private int index_;
      private int length_;

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 8:
            this.bitField0_ = (0x1 | this.bitField0_);
            this.index_ = paramCodedInputStream.readInt32();
            break;
          case 16:
            this.bitField0_ = (0x2 | this.bitField0_);
            this.length_ = paramCodedInputStream.readInt32();
            break;
          case 26:
            this.bitField0_ = (0x4 | this.bitField0_);
            this.aggregateId_ = paramCodedInputStream.readBytes();
            break;
          case 34:
          }
          this.bitField0_ = (0x8 | this.bitField0_);
          this.displayName_ = paramCodedInputStream.readBytes();
        }
      }

      public final Data.Mention build()
      {
        Data.Mention localMention = buildPartial();
        if (!localMention.isInitialized())
          throw new UninitializedMessageException();
        return localMention;
      }

      public final Data.Mention buildPartial()
      {
        Data.Mention localMention = new Data.Mention(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Data.Mention.access$7502(localMention, this.index_);
        if ((i & 0x2) == 2)
          k |= 2;
        Data.Mention.access$7602(localMention, this.length_);
        if ((i & 0x4) == 4)
          k |= 4;
        Data.Mention.access$7702(localMention, this.aggregateId_);
        if ((i & 0x8) == 8)
          k |= 8;
        Data.Mention.access$7802(localMention, this.displayName_);
        Data.Mention.access$7902(localMention, k);
        return localMention;
      }

      public final Builder clear()
      {
        super.clear();
        this.index_ = 0;
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.length_ = 0;
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.aggregateId_ = "";
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.displayName_ = "";
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        return this;
      }

      public final Builder clearAggregateId()
      {
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.aggregateId_ = Data.Mention.getDefaultInstance().getAggregateId();
        return this;
      }

      public final Builder clearDisplayName()
      {
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        this.displayName_ = Data.Mention.getDefaultInstance().getDisplayName();
        return this;
      }

      public final Builder clearIndex()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.index_ = 0;
        return this;
      }

      public final Builder clearLength()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.length_ = 0;
        return this;
      }

      public final String getAggregateId()
      {
        Object localObject = this.aggregateId_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.aggregateId_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final Data.Mention getDefaultInstanceForType()
      {
        return Data.Mention.getDefaultInstance();
      }

      public final String getDisplayName()
      {
        Object localObject = this.displayName_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.displayName_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final int getIndex()
      {
        return this.index_;
      }

      public final int getLength()
      {
        return this.length_;
      }

      public final boolean hasAggregateId()
      {
        if ((0x4 & this.bitField0_) == 4);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasDisplayName()
      {
        if ((0x8 & this.bitField0_) == 8);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasIndex()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean hasLength()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Data.Mention paramMention)
      {
        if (paramMention == Data.Mention.getDefaultInstance());
        while (true)
        {
          return this;
          if (paramMention.hasIndex())
            setIndex(paramMention.getIndex());
          if (paramMention.hasLength())
            setLength(paramMention.getLength());
          if (paramMention.hasAggregateId())
            setAggregateId(paramMention.getAggregateId());
          if (paramMention.hasDisplayName())
            setDisplayName(paramMention.getDisplayName());
        }
      }

      public final Builder setAggregateId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x4 | this.bitField0_);
        this.aggregateId_ = paramString;
        return this;
      }

      public final Builder setDisplayName(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x8 | this.bitField0_);
        this.displayName_ = paramString;
        return this;
      }

      public final Builder setIndex(int paramInt)
      {
        this.bitField0_ = (0x1 | this.bitField0_);
        this.index_ = paramInt;
        return this;
      }

      public final Builder setLength(int paramInt)
      {
        this.bitField0_ = (0x2 | this.bitField0_);
        this.length_ = paramInt;
        return this;
      }
    }
  }

  public static abstract interface MentionOrBuilder extends MessageLiteOrBuilder
  {
    public abstract String getAggregateId();

    public abstract String getDisplayName();

    public abstract int getIndex();

    public abstract int getLength();

    public abstract boolean hasAggregateId();

    public abstract boolean hasDisplayName();

    public abstract boolean hasIndex();

    public abstract boolean hasLength();
  }

  public static final class MobilePhoto extends GeneratedMessageLite
    implements Data.MobilePhotoOrBuilder
  {
    private static final MobilePhoto defaultInstance;
    private static final long serialVersionUID;
    private LazyStringList activityId_;
    private Data.PhotoAlbum album_;
    private int bitField0_;
    private List<Data.Comment> comment_;
    private Object description_;
    private long entityVersion_;
    private Object focusObfuscatedOwnerId_;
    private int height_;
    private long id_;
    private boolean isDeleted_;
    private boolean isDownloadable_;
    private int likeCount_;
    private List<Long> likingUserId_;
    private long mediaTag_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private long ownerGaiaId_;
    private Data.PhotoActionState photoActionState_;
    private Data.PlusOneData plusoneData_;
    private List<Data.MobileShape> shape_;
    private long size_;
    private LazyStringList streamId_;
    private long timestampMsec_;
    private Object title_;
    private int totalCommentCount_;
    private UploadStatus uploadStatus_;
    private Data.ImageUrlFormat urlFormat_;
    private Object url_;
    private Data.VideoData videoData_;
    private int width_;

    static
    {
      MobilePhoto localMobilePhoto = new MobilePhoto();
      defaultInstance = localMobilePhoto;
      localMobilePhoto.url_ = "";
      localMobilePhoto.id_ = 0L;
      localMobilePhoto.title_ = "";
      localMobilePhoto.description_ = "";
      localMobilePhoto.photoActionState_ = Data.PhotoActionState.getDefaultInstance();
      localMobilePhoto.comment_ = Collections.emptyList();
      localMobilePhoto.totalCommentCount_ = 0;
      localMobilePhoto.shape_ = Collections.emptyList();
      localMobilePhoto.ownerGaiaId_ = 0L;
      localMobilePhoto.focusObfuscatedOwnerId_ = "";
      localMobilePhoto.likeCount_ = 0;
      localMobilePhoto.likingUserId_ = Collections.emptyList();
      localMobilePhoto.plusoneData_ = Data.PlusOneData.getDefaultInstance();
      localMobilePhoto.width_ = 0;
      localMobilePhoto.height_ = 0;
      localMobilePhoto.album_ = Data.PhotoAlbum.getDefaultInstance();
      localMobilePhoto.activityId_ = LazyStringArrayList.EMPTY;
      localMobilePhoto.timestampMsec_ = 0L;
      localMobilePhoto.size_ = 0L;
      localMobilePhoto.entityVersion_ = 0L;
      localMobilePhoto.streamId_ = LazyStringArrayList.EMPTY;
      localMobilePhoto.videoData_ = Data.VideoData.getDefaultInstance();
      localMobilePhoto.mediaTag_ = 0L;
      localMobilePhoto.urlFormat_ = Data.ImageUrlFormat.UNKNOWN;
      localMobilePhoto.isDeleted_ = false;
      localMobilePhoto.uploadStatus_ = UploadStatus.ORIGINAL;
      localMobilePhoto.isDownloadable_ = false;
    }

    private MobilePhoto()
    {
    }

    private MobilePhoto(Builder paramBuilder)
    {
      super();
    }

    public static MobilePhoto getDefaultInstance()
    {
      return defaultInstance;
    }

    private ByteString getDescriptionBytes()
    {
      Object localObject = this.description_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.description_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    private ByteString getFocusObfuscatedOwnerIdBytes()
    {
      Object localObject = this.focusObfuscatedOwnerId_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.focusObfuscatedOwnerId_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    private ByteString getTitleBytes()
    {
      Object localObject = this.title_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.title_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    private ByteString getUrlBytes()
    {
      Object localObject = this.url_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.url_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static Builder newBuilder()
    {
      return Builder.access$22900();
    }

    public static Builder newBuilder(MobilePhoto paramMobilePhoto)
    {
      return Builder.access$22900().mergeFrom(paramMobilePhoto);
    }

    public final String getActivityId(int paramInt)
    {
      return (String)this.activityId_.get(paramInt);
    }

    public final int getActivityIdCount()
    {
      return this.activityId_.size();
    }

    public final List<String> getActivityIdList()
    {
      return this.activityId_;
    }

    public final Data.PhotoAlbum getAlbum()
    {
      return this.album_;
    }

    public final Data.Comment getComment(int paramInt)
    {
      return (Data.Comment)this.comment_.get(paramInt);
    }

    public final int getCommentCount()
    {
      return this.comment_.size();
    }

    public final List<Data.Comment> getCommentList()
    {
      return this.comment_;
    }

    public final Data.CommentOrBuilder getCommentOrBuilder(int paramInt)
    {
      return (Data.CommentOrBuilder)this.comment_.get(paramInt);
    }

    public final List<? extends Data.CommentOrBuilder> getCommentOrBuilderList()
    {
      return this.comment_;
    }

    public final MobilePhoto getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final String getDescription()
    {
      Object localObject1 = this.description_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.description_ = str;
      }
    }

    public final long getEntityVersion()
    {
      return this.entityVersion_;
    }

    public final String getFocusObfuscatedOwnerId()
    {
      Object localObject1 = this.focusObfuscatedOwnerId_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.focusObfuscatedOwnerId_ = str;
      }
    }

    public final int getHeight()
    {
      return this.height_;
    }

    public final long getId()
    {
      return this.id_;
    }

    public final boolean getIsDeleted()
    {
      return this.isDeleted_;
    }

    public final boolean getIsDownloadable()
    {
      return this.isDownloadable_;
    }

    @Deprecated
    public final int getLikeCount()
    {
      return this.likeCount_;
    }

    @Deprecated
    public final long getLikingUserId(int paramInt)
    {
      return ((Long)this.likingUserId_.get(paramInt)).longValue();
    }

    @Deprecated
    public final int getLikingUserIdCount()
    {
      return this.likingUserId_.size();
    }

    @Deprecated
    public final List<Long> getLikingUserIdList()
    {
      return this.likingUserId_;
    }

    public final long getMediaTag()
    {
      return this.mediaTag_;
    }

    public final long getOwnerGaiaId()
    {
      return this.ownerGaiaId_;
    }

    public final Data.PhotoActionState getPhotoActionState()
    {
      return this.photoActionState_;
    }

    public final Data.PlusOneData getPlusoneData()
    {
      return this.plusoneData_;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int i9;
      for (int i10 = i; ; i10 = i9)
      {
        return i10;
        int j = 0x1 & this.bitField0_;
        int k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeBytesSize(1, getUrlBytes());
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeInt64Size(2, this.id_);
        if ((0x4 & this.bitField0_) == 4)
          k += CodedOutputStream.computeBytesSize(3, getTitleBytes());
        if ((0x8 & this.bitField0_) == 8)
          k += CodedOutputStream.computeBytesSize(4, getDescriptionBytes());
        if ((0x10 & this.bitField0_) == 16)
          k += CodedOutputStream.computeMessageSize(5, this.photoActionState_);
        for (int m = 0; m < this.comment_.size(); m++)
          k += CodedOutputStream.computeMessageSize(6, (MessageLite)this.comment_.get(m));
        if ((0x20 & this.bitField0_) == 32)
          k += CodedOutputStream.computeInt32Size(7, this.totalCommentCount_);
        for (int n = 0; n < this.shape_.size(); n++)
          k += CodedOutputStream.computeMessageSize(8, (MessageLite)this.shape_.get(n));
        if ((0x40 & this.bitField0_) == 64)
          k += CodedOutputStream.computeInt64Size(9, this.ownerGaiaId_);
        if ((0x100 & this.bitField0_) == 256)
          k += CodedOutputStream.computeInt32Size(10, this.likeCount_);
        int i1 = 0;
        for (int i2 = 0; i2 < this.likingUserId_.size(); i2++)
          i1 += CodedOutputStream.computeRawVarint64Size(((Long)this.likingUserId_.get(i2)).longValue());
        int i3 = k + i1 + 1 * getLikingUserIdList().size();
        if ((0x200 & this.bitField0_) == 512)
          i3 += CodedOutputStream.computeMessageSize(12, this.plusoneData_);
        if ((0x400 & this.bitField0_) == 1024)
          i3 += CodedOutputStream.computeInt32Size(13, this.width_);
        if ((0x800 & this.bitField0_) == 2048)
          i3 += CodedOutputStream.computeInt32Size(14, this.height_);
        if ((0x1000 & this.bitField0_) == 4096)
          i3 += CodedOutputStream.computeMessageSize(15, this.album_);
        int i4 = 0;
        for (int i5 = 0; i5 < this.activityId_.size(); i5++)
          i4 += CodedOutputStream.computeBytesSizeNoTag(this.activityId_.getByteString(i5));
        int i6 = i3 + i4 + 2 * getActivityIdList().size();
        if ((0x2000 & this.bitField0_) == 8192)
          i6 += CodedOutputStream.computeInt64Size(17, this.timestampMsec_);
        if ((0x4000 & this.bitField0_) == 16384)
          i6 += CodedOutputStream.computeInt64Size(18, this.size_);
        if ((0x8000 & this.bitField0_) == 32768)
          i6 += CodedOutputStream.computeInt64Size(19, this.entityVersion_);
        int i7 = 0;
        for (int i8 = 0; i8 < this.streamId_.size(); i8++)
          i7 += CodedOutputStream.computeBytesSizeNoTag(this.streamId_.getByteString(i8));
        i9 = i6 + i7 + 2 * getStreamIdList().size();
        if ((0x10000 & this.bitField0_) == 65536)
          i9 += CodedOutputStream.computeMessageSize(21, this.videoData_);
        if ((0x20000 & this.bitField0_) == 131072)
          i9 += CodedOutputStream.computeInt64Size(22, this.mediaTag_);
        if ((0x40000 & this.bitField0_) == 262144)
          i9 += CodedOutputStream.computeEnumSize(23, this.urlFormat_.getNumber());
        if ((0x80000 & this.bitField0_) == 524288)
          i9 += CodedOutputStream.computeBoolSize(24, this.isDeleted_);
        if ((0x80 & this.bitField0_) == 128)
          i9 += CodedOutputStream.computeBytesSize(25, getFocusObfuscatedOwnerIdBytes());
        if ((0x100000 & this.bitField0_) == 1048576)
          i9 += CodedOutputStream.computeEnumSize(26, this.uploadStatus_.getNumber());
        if ((0x200000 & this.bitField0_) == 2097152)
          i9 += CodedOutputStream.computeBoolSize(27, this.isDownloadable_);
        this.memoizedSerializedSize = i9;
      }
    }

    public final Data.MobileShape getShape(int paramInt)
    {
      return (Data.MobileShape)this.shape_.get(paramInt);
    }

    public final int getShapeCount()
    {
      return this.shape_.size();
    }

    public final List<Data.MobileShape> getShapeList()
    {
      return this.shape_;
    }

    public final Data.MobileShapeOrBuilder getShapeOrBuilder(int paramInt)
    {
      return (Data.MobileShapeOrBuilder)this.shape_.get(paramInt);
    }

    public final List<? extends Data.MobileShapeOrBuilder> getShapeOrBuilderList()
    {
      return this.shape_;
    }

    public final long getSize()
    {
      return this.size_;
    }

    public final String getStreamId(int paramInt)
    {
      return (String)this.streamId_.get(paramInt);
    }

    public final int getStreamIdCount()
    {
      return this.streamId_.size();
    }

    public final List<String> getStreamIdList()
    {
      return this.streamId_;
    }

    public final long getTimestampMsec()
    {
      return this.timestampMsec_;
    }

    public final String getTitle()
    {
      Object localObject1 = this.title_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.title_ = str;
      }
    }

    public final int getTotalCommentCount()
    {
      return this.totalCommentCount_;
    }

    public final UploadStatus getUploadStatus()
    {
      return this.uploadStatus_;
    }

    public final String getUrl()
    {
      Object localObject1 = this.url_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.url_ = str;
      }
    }

    public final Data.ImageUrlFormat getUrlFormat()
    {
      return this.urlFormat_;
    }

    public final Data.VideoData getVideoData()
    {
      return this.videoData_;
    }

    public final int getWidth()
    {
      return this.width_;
    }

    public final boolean hasAlbum()
    {
      if ((0x1000 & this.bitField0_) == 4096);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasDescription()
    {
      if ((0x8 & this.bitField0_) == 8);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasEntityVersion()
    {
      if ((0x8000 & this.bitField0_) == 32768);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasFocusObfuscatedOwnerId()
    {
      if ((0x80 & this.bitField0_) == 128);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasHeight()
    {
      if ((0x800 & this.bitField0_) == 2048);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasId()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasIsDeleted()
    {
      if ((0x80000 & this.bitField0_) == 524288);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasIsDownloadable()
    {
      if ((0x200000 & this.bitField0_) == 2097152);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    @Deprecated
    public final boolean hasLikeCount()
    {
      if ((0x100 & this.bitField0_) == 256);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasMediaTag()
    {
      if ((0x20000 & this.bitField0_) == 131072);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasOwnerGaiaId()
    {
      if ((0x40 & this.bitField0_) == 64);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasPhotoActionState()
    {
      if ((0x10 & this.bitField0_) == 16);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasPlusoneData()
    {
      if ((0x200 & this.bitField0_) == 512);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasSize()
    {
      if ((0x4000 & this.bitField0_) == 16384);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasTimestampMsec()
    {
      if ((0x2000 & this.bitField0_) == 8192);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasTitle()
    {
      if ((0x4 & this.bitField0_) == 4);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasTotalCommentCount()
    {
      if ((0x20 & this.bitField0_) == 32);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasUploadStatus()
    {
      if ((0x100000 & this.bitField0_) == 1048576);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasUrl()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean hasUrlFormat()
    {
      if ((0x40000 & this.bitField0_) == 262144);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasVideoData()
    {
      if ((0x10000 & this.bitField0_) == 65536);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasWidth()
    {
      if ((0x400 & this.bitField0_) == 1024);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        for (int k = 0; ; k++)
        {
          if (k >= getShapeCount())
            break label61;
          if (!getShape(k).isInitialized())
          {
            this.memoizedIsInitialized = 0;
            i = 0;
            break;
          }
        }
        label61: if ((hasAlbum()) && (!getAlbum().isInitialized()))
        {
          this.memoizedIsInitialized = 0;
          i = 0;
        }
        else
        {
          this.memoizedIsInitialized = i;
        }
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeBytes(1, getUrlBytes());
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeInt64(2, this.id_);
      if ((0x4 & this.bitField0_) == 4)
        paramCodedOutputStream.writeBytes(3, getTitleBytes());
      if ((0x8 & this.bitField0_) == 8)
        paramCodedOutputStream.writeBytes(4, getDescriptionBytes());
      if ((0x10 & this.bitField0_) == 16)
        paramCodedOutputStream.writeMessage(5, this.photoActionState_);
      for (int i = 0; i < this.comment_.size(); i++)
        paramCodedOutputStream.writeMessage(6, (MessageLite)this.comment_.get(i));
      if ((0x20 & this.bitField0_) == 32)
        paramCodedOutputStream.writeInt32(7, this.totalCommentCount_);
      for (int j = 0; j < this.shape_.size(); j++)
        paramCodedOutputStream.writeMessage(8, (MessageLite)this.shape_.get(j));
      if ((0x40 & this.bitField0_) == 64)
        paramCodedOutputStream.writeInt64(9, this.ownerGaiaId_);
      if ((0x100 & this.bitField0_) == 256)
        paramCodedOutputStream.writeInt32(10, this.likeCount_);
      for (int k = 0; k < this.likingUserId_.size(); k++)
        paramCodedOutputStream.writeInt64(11, ((Long)this.likingUserId_.get(k)).longValue());
      if ((0x200 & this.bitField0_) == 512)
        paramCodedOutputStream.writeMessage(12, this.plusoneData_);
      if ((0x400 & this.bitField0_) == 1024)
        paramCodedOutputStream.writeInt32(13, this.width_);
      if ((0x800 & this.bitField0_) == 2048)
        paramCodedOutputStream.writeInt32(14, this.height_);
      if ((0x1000 & this.bitField0_) == 4096)
        paramCodedOutputStream.writeMessage(15, this.album_);
      for (int m = 0; m < this.activityId_.size(); m++)
        paramCodedOutputStream.writeBytes(16, this.activityId_.getByteString(m));
      if ((0x2000 & this.bitField0_) == 8192)
        paramCodedOutputStream.writeInt64(17, this.timestampMsec_);
      if ((0x4000 & this.bitField0_) == 16384)
        paramCodedOutputStream.writeInt64(18, this.size_);
      if ((0x8000 & this.bitField0_) == 32768)
        paramCodedOutputStream.writeInt64(19, this.entityVersion_);
      for (int n = 0; n < this.streamId_.size(); n++)
        paramCodedOutputStream.writeBytes(20, this.streamId_.getByteString(n));
      if ((0x10000 & this.bitField0_) == 65536)
        paramCodedOutputStream.writeMessage(21, this.videoData_);
      if ((0x20000 & this.bitField0_) == 131072)
        paramCodedOutputStream.writeInt64(22, this.mediaTag_);
      if ((0x40000 & this.bitField0_) == 262144)
        paramCodedOutputStream.writeEnum(23, this.urlFormat_.getNumber());
      if ((0x80000 & this.bitField0_) == 524288)
        paramCodedOutputStream.writeBool(24, this.isDeleted_);
      if ((0x80 & this.bitField0_) == 128)
        paramCodedOutputStream.writeBytes(25, getFocusObfuscatedOwnerIdBytes());
      if ((0x100000 & this.bitField0_) == 1048576)
        paramCodedOutputStream.writeEnum(26, this.uploadStatus_.getNumber());
      if ((0x200000 & this.bitField0_) == 2097152)
        paramCodedOutputStream.writeBool(27, this.isDownloadable_);
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Data.MobilePhoto, Builder>
      implements Data.MobilePhotoOrBuilder
    {
      private LazyStringList activityId_ = LazyStringArrayList.EMPTY;
      private Data.PhotoAlbum album_ = Data.PhotoAlbum.getDefaultInstance();
      private int bitField0_;
      private List<Data.Comment> comment_ = Collections.emptyList();
      private Object description_ = "";
      private long entityVersion_;
      private Object focusObfuscatedOwnerId_ = "";
      private int height_;
      private long id_;
      private boolean isDeleted_;
      private boolean isDownloadable_;
      private int likeCount_;
      private List<Long> likingUserId_ = Collections.emptyList();
      private long mediaTag_;
      private long ownerGaiaId_;
      private Data.PhotoActionState photoActionState_ = Data.PhotoActionState.getDefaultInstance();
      private Data.PlusOneData plusoneData_ = Data.PlusOneData.getDefaultInstance();
      private List<Data.MobileShape> shape_ = Collections.emptyList();
      private long size_;
      private LazyStringList streamId_ = LazyStringArrayList.EMPTY;
      private long timestampMsec_;
      private Object title_ = "";
      private int totalCommentCount_;
      private Data.MobilePhoto.UploadStatus uploadStatus_ = Data.MobilePhoto.UploadStatus.ORIGINAL;
      private Data.ImageUrlFormat urlFormat_ = Data.ImageUrlFormat.UNKNOWN;
      private Object url_ = "";
      private Data.VideoData videoData_ = Data.VideoData.getDefaultInstance();
      private int width_;

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private void ensureActivityIdIsMutable()
      {
        if ((0x10000 & this.bitField0_) != 65536)
        {
          this.activityId_ = new LazyStringArrayList(this.activityId_);
          this.bitField0_ = (0x10000 | this.bitField0_);
        }
      }

      private void ensureCommentIsMutable()
      {
        if ((0x20 & this.bitField0_) != 32)
        {
          this.comment_ = new ArrayList(this.comment_);
          this.bitField0_ = (0x20 | this.bitField0_);
        }
      }

      private void ensureLikingUserIdIsMutable()
      {
        if ((0x800 & this.bitField0_) != 2048)
        {
          this.likingUserId_ = new ArrayList(this.likingUserId_);
          this.bitField0_ = (0x800 | this.bitField0_);
        }
      }

      private void ensureShapeIsMutable()
      {
        if ((0x80 & this.bitField0_) != 128)
        {
          this.shape_ = new ArrayList(this.shape_);
          this.bitField0_ = (0x80 | this.bitField0_);
        }
      }

      private void ensureStreamIdIsMutable()
      {
        if ((0x100000 & this.bitField0_) != 1048576)
        {
          this.streamId_ = new LazyStringArrayList(this.streamId_);
          this.bitField0_ = (0x100000 | this.bitField0_);
        }
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 10:
            this.bitField0_ = (0x1 | this.bitField0_);
            this.url_ = paramCodedInputStream.readBytes();
            break;
          case 16:
            this.bitField0_ = (0x2 | this.bitField0_);
            this.id_ = paramCodedInputStream.readInt64();
            break;
          case 26:
            this.bitField0_ = (0x4 | this.bitField0_);
            this.title_ = paramCodedInputStream.readBytes();
            break;
          case 34:
            this.bitField0_ = (0x8 | this.bitField0_);
            this.description_ = paramCodedInputStream.readBytes();
            break;
          case 42:
            Data.PhotoActionState.Builder localBuilder5 = Data.PhotoActionState.newBuilder();
            if (hasPhotoActionState())
              localBuilder5.mergeFrom(getPhotoActionState());
            paramCodedInputStream.readMessage(localBuilder5, paramExtensionRegistryLite);
            setPhotoActionState(localBuilder5.buildPartial());
            break;
          case 50:
            Data.Comment.Builder localBuilder4 = Data.Comment.newBuilder();
            paramCodedInputStream.readMessage(localBuilder4, paramExtensionRegistryLite);
            addComment(localBuilder4.buildPartial());
            break;
          case 56:
            this.bitField0_ = (0x40 | this.bitField0_);
            this.totalCommentCount_ = paramCodedInputStream.readInt32();
            break;
          case 66:
            Data.MobileShape.Builder localBuilder3 = Data.MobileShape.newBuilder();
            paramCodedInputStream.readMessage(localBuilder3, paramExtensionRegistryLite);
            addShape(localBuilder3.buildPartial());
            break;
          case 72:
            this.bitField0_ = (0x100 | this.bitField0_);
            this.ownerGaiaId_ = paramCodedInputStream.readInt64();
            break;
          case 80:
            this.bitField0_ = (0x400 | this.bitField0_);
            this.likeCount_ = paramCodedInputStream.readInt32();
            break;
          case 88:
            ensureLikingUserIdIsMutable();
            this.likingUserId_.add(Long.valueOf(paramCodedInputStream.readInt64()));
            break;
          case 90:
            int j = paramCodedInputStream.pushLimit(paramCodedInputStream.readRawVarint32());
            while (paramCodedInputStream.getBytesUntilLimit() > 0)
              addLikingUserId(paramCodedInputStream.readInt64());
            paramCodedInputStream.popLimit(j);
            break;
          case 98:
            Data.PlusOneData.Builder localBuilder2 = Data.PlusOneData.newBuilder();
            if (hasPlusoneData())
              localBuilder2.mergeFrom(getPlusoneData());
            paramCodedInputStream.readMessage(localBuilder2, paramExtensionRegistryLite);
            setPlusoneData(localBuilder2.buildPartial());
            break;
          case 104:
            this.bitField0_ = (0x2000 | this.bitField0_);
            this.width_ = paramCodedInputStream.readInt32();
            break;
          case 112:
            this.bitField0_ = (0x4000 | this.bitField0_);
            this.height_ = paramCodedInputStream.readInt32();
            break;
          case 122:
            Data.PhotoAlbum.Builder localBuilder1 = Data.PhotoAlbum.newBuilder();
            if (hasAlbum())
              localBuilder1.mergeFrom(getAlbum());
            paramCodedInputStream.readMessage(localBuilder1, paramExtensionRegistryLite);
            setAlbum(localBuilder1.buildPartial());
            break;
          case 130:
            ensureActivityIdIsMutable();
            this.activityId_.add(paramCodedInputStream.readBytes());
            break;
          case 136:
            this.bitField0_ = (0x20000 | this.bitField0_);
            this.timestampMsec_ = paramCodedInputStream.readInt64();
            break;
          case 144:
            this.bitField0_ = (0x40000 | this.bitField0_);
            this.size_ = paramCodedInputStream.readInt64();
            break;
          case 152:
            this.bitField0_ = (0x80000 | this.bitField0_);
            this.entityVersion_ = paramCodedInputStream.readInt64();
            break;
          case 162:
            ensureStreamIdIsMutable();
            this.streamId_.add(paramCodedInputStream.readBytes());
            break;
          case 170:
            Data.VideoData.Builder localBuilder = Data.VideoData.newBuilder();
            if (hasVideoData())
              localBuilder.mergeFrom(getVideoData());
            paramCodedInputStream.readMessage(localBuilder, paramExtensionRegistryLite);
            setVideoData(localBuilder.buildPartial());
            break;
          case 176:
            this.bitField0_ = (0x400000 | this.bitField0_);
            this.mediaTag_ = paramCodedInputStream.readInt64();
            break;
          case 184:
            Data.ImageUrlFormat localImageUrlFormat = Data.ImageUrlFormat.valueOf(paramCodedInputStream.readEnum());
            if (localImageUrlFormat == null)
              continue;
            this.bitField0_ = (0x800000 | this.bitField0_);
            this.urlFormat_ = localImageUrlFormat;
            break;
          case 192:
            this.bitField0_ = (0x1000000 | this.bitField0_);
            this.isDeleted_ = paramCodedInputStream.readBool();
            break;
          case 202:
            this.bitField0_ = (0x200 | this.bitField0_);
            this.focusObfuscatedOwnerId_ = paramCodedInputStream.readBytes();
            break;
          case 208:
            Data.MobilePhoto.UploadStatus localUploadStatus = Data.MobilePhoto.UploadStatus.valueOf(paramCodedInputStream.readEnum());
            if (localUploadStatus == null)
              continue;
            this.bitField0_ = (0x2000000 | this.bitField0_);
            this.uploadStatus_ = localUploadStatus;
            break;
          case 216:
          }
          this.bitField0_ = (0x4000000 | this.bitField0_);
          this.isDownloadable_ = paramCodedInputStream.readBool();
        }
      }

      public final Builder addActivityId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        ensureActivityIdIsMutable();
        this.activityId_.add(paramString);
        return this;
      }

      public final Builder addAllActivityId(Iterable<String> paramIterable)
      {
        ensureActivityIdIsMutable();
        GeneratedMessageLite.Builder.addAll(paramIterable, this.activityId_);
        return this;
      }

      public final Builder addAllComment(Iterable<? extends Data.Comment> paramIterable)
      {
        ensureCommentIsMutable();
        GeneratedMessageLite.Builder.addAll(paramIterable, this.comment_);
        return this;
      }

      @Deprecated
      public final Builder addAllLikingUserId(Iterable<? extends Long> paramIterable)
      {
        ensureLikingUserIdIsMutable();
        GeneratedMessageLite.Builder.addAll(paramIterable, this.likingUserId_);
        return this;
      }

      public final Builder addAllShape(Iterable<? extends Data.MobileShape> paramIterable)
      {
        ensureShapeIsMutable();
        GeneratedMessageLite.Builder.addAll(paramIterable, this.shape_);
        return this;
      }

      public final Builder addAllStreamId(Iterable<String> paramIterable)
      {
        ensureStreamIdIsMutable();
        GeneratedMessageLite.Builder.addAll(paramIterable, this.streamId_);
        return this;
      }

      public final Builder addComment(int paramInt, Data.Comment.Builder paramBuilder)
      {
        ensureCommentIsMutable();
        this.comment_.add(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder addComment(int paramInt, Data.Comment paramComment)
      {
        if (paramComment == null)
          throw new NullPointerException();
        ensureCommentIsMutable();
        this.comment_.add(paramInt, paramComment);
        return this;
      }

      public final Builder addComment(Data.Comment.Builder paramBuilder)
      {
        ensureCommentIsMutable();
        this.comment_.add(paramBuilder.build());
        return this;
      }

      public final Builder addComment(Data.Comment paramComment)
      {
        if (paramComment == null)
          throw new NullPointerException();
        ensureCommentIsMutable();
        this.comment_.add(paramComment);
        return this;
      }

      @Deprecated
      public final Builder addLikingUserId(long paramLong)
      {
        ensureLikingUserIdIsMutable();
        this.likingUserId_.add(Long.valueOf(paramLong));
        return this;
      }

      public final Builder addShape(int paramInt, Data.MobileShape.Builder paramBuilder)
      {
        ensureShapeIsMutable();
        this.shape_.add(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder addShape(int paramInt, Data.MobileShape paramMobileShape)
      {
        if (paramMobileShape == null)
          throw new NullPointerException();
        ensureShapeIsMutable();
        this.shape_.add(paramInt, paramMobileShape);
        return this;
      }

      public final Builder addShape(Data.MobileShape.Builder paramBuilder)
      {
        ensureShapeIsMutable();
        this.shape_.add(paramBuilder.build());
        return this;
      }

      public final Builder addShape(Data.MobileShape paramMobileShape)
      {
        if (paramMobileShape == null)
          throw new NullPointerException();
        ensureShapeIsMutable();
        this.shape_.add(paramMobileShape);
        return this;
      }

      public final Builder addStreamId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        ensureStreamIdIsMutable();
        this.streamId_.add(paramString);
        return this;
      }

      public final Data.MobilePhoto build()
      {
        Data.MobilePhoto localMobilePhoto = buildPartial();
        if (!localMobilePhoto.isInitialized())
          throw new UninitializedMessageException();
        return localMobilePhoto;
      }

      public final Data.MobilePhoto buildPartial()
      {
        Data.MobilePhoto localMobilePhoto = new Data.MobilePhoto(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Data.MobilePhoto.access$23102(localMobilePhoto, this.url_);
        if ((i & 0x2) == 2)
          k |= 2;
        Data.MobilePhoto.access$23202(localMobilePhoto, this.id_);
        if ((i & 0x4) == 4)
          k |= 4;
        Data.MobilePhoto.access$23302(localMobilePhoto, this.title_);
        if ((i & 0x8) == 8)
          k |= 8;
        Data.MobilePhoto.access$23402(localMobilePhoto, this.description_);
        if ((i & 0x10) == 16)
          k |= 16;
        Data.MobilePhoto.access$23502(localMobilePhoto, this.photoActionState_);
        if ((0x20 & this.bitField0_) == 32)
        {
          this.comment_ = Collections.unmodifiableList(this.comment_);
          this.bitField0_ = (0xFFFFFFDF & this.bitField0_);
        }
        Data.MobilePhoto.access$23602(localMobilePhoto, this.comment_);
        if ((i & 0x40) == 64)
          k |= 32;
        Data.MobilePhoto.access$23702(localMobilePhoto, this.totalCommentCount_);
        if ((0x80 & this.bitField0_) == 128)
        {
          this.shape_ = Collections.unmodifiableList(this.shape_);
          this.bitField0_ = (0xFFFFFF7F & this.bitField0_);
        }
        Data.MobilePhoto.access$23802(localMobilePhoto, this.shape_);
        if ((i & 0x100) == 256)
          k |= 64;
        Data.MobilePhoto.access$23902(localMobilePhoto, this.ownerGaiaId_);
        if ((i & 0x200) == 512)
          k |= 128;
        Data.MobilePhoto.access$24002(localMobilePhoto, this.focusObfuscatedOwnerId_);
        if ((i & 0x400) == 1024)
          k |= 256;
        Data.MobilePhoto.access$24102(localMobilePhoto, this.likeCount_);
        if ((0x800 & this.bitField0_) == 2048)
        {
          this.likingUserId_ = Collections.unmodifiableList(this.likingUserId_);
          this.bitField0_ = (0xFFFFF7FF & this.bitField0_);
        }
        Data.MobilePhoto.access$24202(localMobilePhoto, this.likingUserId_);
        if ((i & 0x1000) == 4096)
          k |= 512;
        Data.MobilePhoto.access$24302(localMobilePhoto, this.plusoneData_);
        if ((i & 0x2000) == 8192)
          k |= 1024;
        Data.MobilePhoto.access$24402(localMobilePhoto, this.width_);
        if ((i & 0x4000) == 16384)
          k |= 2048;
        Data.MobilePhoto.access$24502(localMobilePhoto, this.height_);
        if ((i & 0x8000) == 32768)
          k |= 4096;
        Data.MobilePhoto.access$24602(localMobilePhoto, this.album_);
        if ((0x10000 & this.bitField0_) == 65536)
        {
          this.activityId_ = new UnmodifiableLazyStringList(this.activityId_);
          this.bitField0_ = (0xFFFEFFFF & this.bitField0_);
        }
        Data.MobilePhoto.access$24702(localMobilePhoto, this.activityId_);
        if ((i & 0x20000) == 131072)
          k |= 8192;
        Data.MobilePhoto.access$24802(localMobilePhoto, this.timestampMsec_);
        if ((i & 0x40000) == 262144)
          k |= 16384;
        Data.MobilePhoto.access$24902(localMobilePhoto, this.size_);
        if ((i & 0x80000) == 524288)
          k |= 32768;
        Data.MobilePhoto.access$25002(localMobilePhoto, this.entityVersion_);
        if ((0x100000 & this.bitField0_) == 1048576)
        {
          this.streamId_ = new UnmodifiableLazyStringList(this.streamId_);
          this.bitField0_ = (0xFFEFFFFF & this.bitField0_);
        }
        Data.MobilePhoto.access$25102(localMobilePhoto, this.streamId_);
        if ((0x200000 & i) == 2097152)
          k |= 65536;
        Data.MobilePhoto.access$25202(localMobilePhoto, this.videoData_);
        if ((0x400000 & i) == 4194304)
          k |= 131072;
        Data.MobilePhoto.access$25302(localMobilePhoto, this.mediaTag_);
        if ((0x800000 & i) == 8388608)
          k |= 262144;
        Data.MobilePhoto.access$25402(localMobilePhoto, this.urlFormat_);
        if ((0x1000000 & i) == 16777216)
          k |= 524288;
        Data.MobilePhoto.access$25502(localMobilePhoto, this.isDeleted_);
        if ((0x2000000 & i) == 33554432)
          k |= 1048576;
        Data.MobilePhoto.access$25602(localMobilePhoto, this.uploadStatus_);
        if ((0x4000000 & i) == 67108864)
          k |= 2097152;
        Data.MobilePhoto.access$25702(localMobilePhoto, this.isDownloadable_);
        Data.MobilePhoto.access$25802(localMobilePhoto, k);
        return localMobilePhoto;
      }

      public final Builder clear()
      {
        super.clear();
        this.url_ = "";
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.id_ = 0L;
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.title_ = "";
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.description_ = "";
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        this.photoActionState_ = Data.PhotoActionState.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        this.comment_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFDF & this.bitField0_);
        this.totalCommentCount_ = 0;
        this.bitField0_ = (0xFFFFFFBF & this.bitField0_);
        this.shape_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFF7F & this.bitField0_);
        this.ownerGaiaId_ = 0L;
        this.bitField0_ = (0xFFFFFEFF & this.bitField0_);
        this.focusObfuscatedOwnerId_ = "";
        this.bitField0_ = (0xFFFFFDFF & this.bitField0_);
        this.likeCount_ = 0;
        this.bitField0_ = (0xFFFFFBFF & this.bitField0_);
        this.likingUserId_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFF7FF & this.bitField0_);
        this.plusoneData_ = Data.PlusOneData.getDefaultInstance();
        this.bitField0_ = (0xFFFFEFFF & this.bitField0_);
        this.width_ = 0;
        this.bitField0_ = (0xFFFFDFFF & this.bitField0_);
        this.height_ = 0;
        this.bitField0_ = (0xFFFFBFFF & this.bitField0_);
        this.album_ = Data.PhotoAlbum.getDefaultInstance();
        this.bitField0_ = (0xFFFF7FFF & this.bitField0_);
        this.activityId_ = LazyStringArrayList.EMPTY;
        this.bitField0_ = (0xFFFEFFFF & this.bitField0_);
        this.timestampMsec_ = 0L;
        this.bitField0_ = (0xFFFDFFFF & this.bitField0_);
        this.size_ = 0L;
        this.bitField0_ = (0xFFFBFFFF & this.bitField0_);
        this.entityVersion_ = 0L;
        this.bitField0_ = (0xFFF7FFFF & this.bitField0_);
        this.streamId_ = LazyStringArrayList.EMPTY;
        this.bitField0_ = (0xFFEFFFFF & this.bitField0_);
        this.videoData_ = Data.VideoData.getDefaultInstance();
        this.bitField0_ = (0xFFDFFFFF & this.bitField0_);
        this.mediaTag_ = 0L;
        this.bitField0_ = (0xFFBFFFFF & this.bitField0_);
        this.urlFormat_ = Data.ImageUrlFormat.UNKNOWN;
        this.bitField0_ = (0xFF7FFFFF & this.bitField0_);
        this.isDeleted_ = false;
        this.bitField0_ = (0xFEFFFFFF & this.bitField0_);
        this.uploadStatus_ = Data.MobilePhoto.UploadStatus.ORIGINAL;
        this.bitField0_ = (0xFDFFFFFF & this.bitField0_);
        this.isDownloadable_ = false;
        this.bitField0_ = (0xFBFFFFFF & this.bitField0_);
        return this;
      }

      public final Builder clearActivityId()
      {
        this.activityId_ = LazyStringArrayList.EMPTY;
        this.bitField0_ = (0xFFFEFFFF & this.bitField0_);
        return this;
      }

      public final Builder clearAlbum()
      {
        this.album_ = Data.PhotoAlbum.getDefaultInstance();
        this.bitField0_ = (0xFFFF7FFF & this.bitField0_);
        return this;
      }

      public final Builder clearComment()
      {
        this.comment_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFDF & this.bitField0_);
        return this;
      }

      public final Builder clearDescription()
      {
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        this.description_ = Data.MobilePhoto.getDefaultInstance().getDescription();
        return this;
      }

      public final Builder clearEntityVersion()
      {
        this.bitField0_ = (0xFFF7FFFF & this.bitField0_);
        this.entityVersion_ = 0L;
        return this;
      }

      public final Builder clearFocusObfuscatedOwnerId()
      {
        this.bitField0_ = (0xFFFFFDFF & this.bitField0_);
        this.focusObfuscatedOwnerId_ = Data.MobilePhoto.getDefaultInstance().getFocusObfuscatedOwnerId();
        return this;
      }

      public final Builder clearHeight()
      {
        this.bitField0_ = (0xFFFFBFFF & this.bitField0_);
        this.height_ = 0;
        return this;
      }

      public final Builder clearId()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.id_ = 0L;
        return this;
      }

      public final Builder clearIsDeleted()
      {
        this.bitField0_ = (0xFEFFFFFF & this.bitField0_);
        this.isDeleted_ = false;
        return this;
      }

      public final Builder clearIsDownloadable()
      {
        this.bitField0_ = (0xFBFFFFFF & this.bitField0_);
        this.isDownloadable_ = false;
        return this;
      }

      @Deprecated
      public final Builder clearLikeCount()
      {
        this.bitField0_ = (0xFFFFFBFF & this.bitField0_);
        this.likeCount_ = 0;
        return this;
      }

      @Deprecated
      public final Builder clearLikingUserId()
      {
        this.likingUserId_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFF7FF & this.bitField0_);
        return this;
      }

      public final Builder clearMediaTag()
      {
        this.bitField0_ = (0xFFBFFFFF & this.bitField0_);
        this.mediaTag_ = 0L;
        return this;
      }

      public final Builder clearOwnerGaiaId()
      {
        this.bitField0_ = (0xFFFFFEFF & this.bitField0_);
        this.ownerGaiaId_ = 0L;
        return this;
      }

      public final Builder clearPhotoActionState()
      {
        this.photoActionState_ = Data.PhotoActionState.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        return this;
      }

      public final Builder clearPlusoneData()
      {
        this.plusoneData_ = Data.PlusOneData.getDefaultInstance();
        this.bitField0_ = (0xFFFFEFFF & this.bitField0_);
        return this;
      }

      public final Builder clearShape()
      {
        this.shape_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFF7F & this.bitField0_);
        return this;
      }

      public final Builder clearSize()
      {
        this.bitField0_ = (0xFFFBFFFF & this.bitField0_);
        this.size_ = 0L;
        return this;
      }

      public final Builder clearStreamId()
      {
        this.streamId_ = LazyStringArrayList.EMPTY;
        this.bitField0_ = (0xFFEFFFFF & this.bitField0_);
        return this;
      }

      public final Builder clearTimestampMsec()
      {
        this.bitField0_ = (0xFFFDFFFF & this.bitField0_);
        this.timestampMsec_ = 0L;
        return this;
      }

      public final Builder clearTitle()
      {
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.title_ = Data.MobilePhoto.getDefaultInstance().getTitle();
        return this;
      }

      public final Builder clearTotalCommentCount()
      {
        this.bitField0_ = (0xFFFFFFBF & this.bitField0_);
        this.totalCommentCount_ = 0;
        return this;
      }

      public final Builder clearUploadStatus()
      {
        this.bitField0_ = (0xFDFFFFFF & this.bitField0_);
        this.uploadStatus_ = Data.MobilePhoto.UploadStatus.ORIGINAL;
        return this;
      }

      public final Builder clearUrl()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.url_ = Data.MobilePhoto.getDefaultInstance().getUrl();
        return this;
      }

      public final Builder clearUrlFormat()
      {
        this.bitField0_ = (0xFF7FFFFF & this.bitField0_);
        this.urlFormat_ = Data.ImageUrlFormat.UNKNOWN;
        return this;
      }

      public final Builder clearVideoData()
      {
        this.videoData_ = Data.VideoData.getDefaultInstance();
        this.bitField0_ = (0xFFDFFFFF & this.bitField0_);
        return this;
      }

      public final Builder clearWidth()
      {
        this.bitField0_ = (0xFFFFDFFF & this.bitField0_);
        this.width_ = 0;
        return this;
      }

      public final String getActivityId(int paramInt)
      {
        return (String)this.activityId_.get(paramInt);
      }

      public final int getActivityIdCount()
      {
        return this.activityId_.size();
      }

      public final List<String> getActivityIdList()
      {
        return Collections.unmodifiableList(this.activityId_);
      }

      public final Data.PhotoAlbum getAlbum()
      {
        return this.album_;
      }

      public final Data.Comment getComment(int paramInt)
      {
        return (Data.Comment)this.comment_.get(paramInt);
      }

      public final int getCommentCount()
      {
        return this.comment_.size();
      }

      public final List<Data.Comment> getCommentList()
      {
        return Collections.unmodifiableList(this.comment_);
      }

      public final Data.MobilePhoto getDefaultInstanceForType()
      {
        return Data.MobilePhoto.getDefaultInstance();
      }

      public final String getDescription()
      {
        Object localObject = this.description_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.description_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final long getEntityVersion()
      {
        return this.entityVersion_;
      }

      public final String getFocusObfuscatedOwnerId()
      {
        Object localObject = this.focusObfuscatedOwnerId_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.focusObfuscatedOwnerId_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final int getHeight()
      {
        return this.height_;
      }

      public final long getId()
      {
        return this.id_;
      }

      public final boolean getIsDeleted()
      {
        return this.isDeleted_;
      }

      public final boolean getIsDownloadable()
      {
        return this.isDownloadable_;
      }

      @Deprecated
      public final int getLikeCount()
      {
        return this.likeCount_;
      }

      @Deprecated
      public final long getLikingUserId(int paramInt)
      {
        return ((Long)this.likingUserId_.get(paramInt)).longValue();
      }

      @Deprecated
      public final int getLikingUserIdCount()
      {
        return this.likingUserId_.size();
      }

      @Deprecated
      public final List<Long> getLikingUserIdList()
      {
        return Collections.unmodifiableList(this.likingUserId_);
      }

      public final long getMediaTag()
      {
        return this.mediaTag_;
      }

      public final long getOwnerGaiaId()
      {
        return this.ownerGaiaId_;
      }

      public final Data.PhotoActionState getPhotoActionState()
      {
        return this.photoActionState_;
      }

      public final Data.PlusOneData getPlusoneData()
      {
        return this.plusoneData_;
      }

      public final Data.MobileShape getShape(int paramInt)
      {
        return (Data.MobileShape)this.shape_.get(paramInt);
      }

      public final int getShapeCount()
      {
        return this.shape_.size();
      }

      public final List<Data.MobileShape> getShapeList()
      {
        return Collections.unmodifiableList(this.shape_);
      }

      public final long getSize()
      {
        return this.size_;
      }

      public final String getStreamId(int paramInt)
      {
        return (String)this.streamId_.get(paramInt);
      }

      public final int getStreamIdCount()
      {
        return this.streamId_.size();
      }

      public final List<String> getStreamIdList()
      {
        return Collections.unmodifiableList(this.streamId_);
      }

      public final long getTimestampMsec()
      {
        return this.timestampMsec_;
      }

      public final String getTitle()
      {
        Object localObject = this.title_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.title_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final int getTotalCommentCount()
      {
        return this.totalCommentCount_;
      }

      public final Data.MobilePhoto.UploadStatus getUploadStatus()
      {
        return this.uploadStatus_;
      }

      public final String getUrl()
      {
        Object localObject = this.url_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.url_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final Data.ImageUrlFormat getUrlFormat()
      {
        return this.urlFormat_;
      }

      public final Data.VideoData getVideoData()
      {
        return this.videoData_;
      }

      public final int getWidth()
      {
        return this.width_;
      }

      public final boolean hasAlbum()
      {
        if ((0x8000 & this.bitField0_) == 32768);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasDescription()
      {
        if ((0x8 & this.bitField0_) == 8);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasEntityVersion()
      {
        if ((0x80000 & this.bitField0_) == 524288);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasFocusObfuscatedOwnerId()
      {
        if ((0x200 & this.bitField0_) == 512);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasHeight()
      {
        if ((0x4000 & this.bitField0_) == 16384);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasId()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasIsDeleted()
      {
        if ((0x1000000 & this.bitField0_) == 16777216);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasIsDownloadable()
      {
        if ((0x4000000 & this.bitField0_) == 67108864);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      @Deprecated
      public final boolean hasLikeCount()
      {
        if ((0x400 & this.bitField0_) == 1024);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasMediaTag()
      {
        if ((0x400000 & this.bitField0_) == 4194304);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasOwnerGaiaId()
      {
        if ((0x100 & this.bitField0_) == 256);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasPhotoActionState()
      {
        if ((0x10 & this.bitField0_) == 16);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasPlusoneData()
      {
        if ((0x1000 & this.bitField0_) == 4096);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasSize()
      {
        if ((0x40000 & this.bitField0_) == 262144);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasTimestampMsec()
      {
        if ((0x20000 & this.bitField0_) == 131072);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasTitle()
      {
        if ((0x4 & this.bitField0_) == 4);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasTotalCommentCount()
      {
        if ((0x40 & this.bitField0_) == 64);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasUploadStatus()
      {
        if ((0x2000000 & this.bitField0_) == 33554432);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasUrl()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean hasUrlFormat()
      {
        if ((0x800000 & this.bitField0_) == 8388608);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasVideoData()
      {
        if ((0x200000 & this.bitField0_) == 2097152);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasWidth()
      {
        if ((0x2000 & this.bitField0_) == 8192);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean isInitialized()
      {
        int i = 0;
        boolean bool1;
        if (i < getShapeCount())
        {
          boolean bool3 = getShape(i).isInitialized();
          bool1 = false;
          if (bool3);
        }
        while (true)
        {
          return bool1;
          i++;
          break;
          if (hasAlbum())
          {
            boolean bool2 = getAlbum().isInitialized();
            bool1 = false;
            if (!bool2);
          }
          else
          {
            bool1 = true;
          }
        }
      }

      public final Builder mergeFrom(Data.MobilePhoto paramMobilePhoto)
      {
        if (paramMobilePhoto == Data.MobilePhoto.getDefaultInstance())
          return this;
        if (paramMobilePhoto.hasUrl())
          setUrl(paramMobilePhoto.getUrl());
        if (paramMobilePhoto.hasId())
          setId(paramMobilePhoto.getId());
        if (paramMobilePhoto.hasTitle())
          setTitle(paramMobilePhoto.getTitle());
        if (paramMobilePhoto.hasDescription())
          setDescription(paramMobilePhoto.getDescription());
        Data.PhotoActionState localPhotoActionState;
        label127: Data.PlusOneData localPlusOneData;
        label181: label241: Data.PhotoAlbum localPhotoAlbum;
        label333: label489: label637: Data.VideoData localVideoData;
        if (paramMobilePhoto.hasPhotoActionState())
        {
          localPhotoActionState = paramMobilePhoto.getPhotoActionState();
          if (((0x10 & this.bitField0_) == 16) && (this.photoActionState_ != Data.PhotoActionState.getDefaultInstance()))
          {
            this.photoActionState_ = Data.PhotoActionState.newBuilder(this.photoActionState_).mergeFrom(localPhotoActionState).buildPartial();
            this.bitField0_ = (0x10 | this.bitField0_);
          }
        }
        else
        {
          if (!paramMobilePhoto.comment_.isEmpty())
          {
            if (!this.comment_.isEmpty())
              break label797;
            this.comment_ = paramMobilePhoto.comment_;
            this.bitField0_ = (0xFFFFFFDF & this.bitField0_);
          }
          if (paramMobilePhoto.hasTotalCommentCount())
            setTotalCommentCount(paramMobilePhoto.getTotalCommentCount());
          if (!paramMobilePhoto.shape_.isEmpty())
          {
            if (!this.shape_.isEmpty())
              break label818;
            this.shape_ = paramMobilePhoto.shape_;
            this.bitField0_ = (0xFFFFFF7F & this.bitField0_);
          }
          if (paramMobilePhoto.hasOwnerGaiaId())
            setOwnerGaiaId(paramMobilePhoto.getOwnerGaiaId());
          if (paramMobilePhoto.hasFocusObfuscatedOwnerId())
            setFocusObfuscatedOwnerId(paramMobilePhoto.getFocusObfuscatedOwnerId());
          if (paramMobilePhoto.hasLikeCount())
            setLikeCount(paramMobilePhoto.getLikeCount());
          if (!paramMobilePhoto.likingUserId_.isEmpty())
          {
            if (!this.likingUserId_.isEmpty())
              break label839;
            this.likingUserId_ = paramMobilePhoto.likingUserId_;
            this.bitField0_ = (0xFFFFF7FF & this.bitField0_);
          }
          if (paramMobilePhoto.hasPlusoneData())
          {
            localPlusOneData = paramMobilePhoto.getPlusoneData();
            if (((0x1000 & this.bitField0_) != 4096) || (this.plusoneData_ == Data.PlusOneData.getDefaultInstance()))
              break label860;
            this.plusoneData_ = Data.PlusOneData.newBuilder(this.plusoneData_).mergeFrom(localPlusOneData).buildPartial();
            label389: this.bitField0_ = (0x1000 | this.bitField0_);
          }
          if (paramMobilePhoto.hasWidth())
            setWidth(paramMobilePhoto.getWidth());
          if (paramMobilePhoto.hasHeight())
            setHeight(paramMobilePhoto.getHeight());
          if (paramMobilePhoto.hasAlbum())
          {
            localPhotoAlbum = paramMobilePhoto.getAlbum();
            if (((0x8000 & this.bitField0_) != 32768) || (this.album_ == Data.PhotoAlbum.getDefaultInstance()))
              break label869;
            this.album_ = Data.PhotoAlbum.newBuilder(this.album_).mergeFrom(localPhotoAlbum).buildPartial();
            this.bitField0_ = (0x8000 | this.bitField0_);
          }
          if (!paramMobilePhoto.activityId_.isEmpty())
          {
            if (!this.activityId_.isEmpty())
              break label878;
            this.activityId_ = paramMobilePhoto.activityId_;
            this.bitField0_ = (0xFFFEFFFF & this.bitField0_);
          }
          label545: if (paramMobilePhoto.hasTimestampMsec())
            setTimestampMsec(paramMobilePhoto.getTimestampMsec());
          if (paramMobilePhoto.hasSize())
            setSize(paramMobilePhoto.getSize());
          if (paramMobilePhoto.hasEntityVersion())
            setEntityVersion(paramMobilePhoto.getEntityVersion());
          if (!paramMobilePhoto.streamId_.isEmpty())
          {
            if (!this.streamId_.isEmpty())
              break label899;
            this.streamId_ = paramMobilePhoto.streamId_;
            this.bitField0_ = (0xFFEFFFFF & this.bitField0_);
          }
          if (paramMobilePhoto.hasVideoData())
          {
            localVideoData = paramMobilePhoto.getVideoData();
            if (((0x200000 & this.bitField0_) != 2097152) || (this.videoData_ == Data.VideoData.getDefaultInstance()))
              break label920;
          }
        }
        label899: label920: for (this.videoData_ = Data.VideoData.newBuilder(this.videoData_).mergeFrom(localVideoData).buildPartial(); ; this.videoData_ = localVideoData)
        {
          this.bitField0_ = (0x200000 | this.bitField0_);
          if (paramMobilePhoto.hasMediaTag())
            setMediaTag(paramMobilePhoto.getMediaTag());
          if (paramMobilePhoto.hasUrlFormat())
            setUrlFormat(paramMobilePhoto.getUrlFormat());
          if (paramMobilePhoto.hasIsDeleted())
            setIsDeleted(paramMobilePhoto.getIsDeleted());
          if (paramMobilePhoto.hasUploadStatus())
            setUploadStatus(paramMobilePhoto.getUploadStatus());
          if (!paramMobilePhoto.hasIsDownloadable())
            break;
          setIsDownloadable(paramMobilePhoto.getIsDownloadable());
          break;
          this.photoActionState_ = localPhotoActionState;
          break label127;
          label797: ensureCommentIsMutable();
          this.comment_.addAll(paramMobilePhoto.comment_);
          break label181;
          label818: ensureShapeIsMutable();
          this.shape_.addAll(paramMobilePhoto.shape_);
          break label241;
          label839: ensureLikingUserIdIsMutable();
          this.likingUserId_.addAll(paramMobilePhoto.likingUserId_);
          break label333;
          label860: this.plusoneData_ = localPlusOneData;
          break label389;
          label869: this.album_ = localPhotoAlbum;
          break label489;
          label878: ensureActivityIdIsMutable();
          this.activityId_.addAll(paramMobilePhoto.activityId_);
          break label545;
          ensureStreamIdIsMutable();
          this.streamId_.addAll(paramMobilePhoto.streamId_);
          break label637;
        }
      }

      public final Builder setActivityId(int paramInt, String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        ensureActivityIdIsMutable();
        this.activityId_.set(paramInt, paramString);
        return this;
      }

      public final Builder setAlbum(Data.PhotoAlbum.Builder paramBuilder)
      {
        this.album_ = paramBuilder.build();
        this.bitField0_ = (0x8000 | this.bitField0_);
        return this;
      }

      public final Builder setAlbum(Data.PhotoAlbum paramPhotoAlbum)
      {
        if (paramPhotoAlbum == null)
          throw new NullPointerException();
        this.album_ = paramPhotoAlbum;
        this.bitField0_ = (0x8000 | this.bitField0_);
        return this;
      }

      public final Builder setComment(int paramInt, Data.Comment.Builder paramBuilder)
      {
        ensureCommentIsMutable();
        this.comment_.set(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder setComment(int paramInt, Data.Comment paramComment)
      {
        if (paramComment == null)
          throw new NullPointerException();
        ensureCommentIsMutable();
        this.comment_.set(paramInt, paramComment);
        return this;
      }

      public final Builder setDescription(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x8 | this.bitField0_);
        this.description_ = paramString;
        return this;
      }

      public final Builder setEntityVersion(long paramLong)
      {
        this.bitField0_ = (0x80000 | this.bitField0_);
        this.entityVersion_ = paramLong;
        return this;
      }

      public final Builder setFocusObfuscatedOwnerId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x200 | this.bitField0_);
        this.focusObfuscatedOwnerId_ = paramString;
        return this;
      }

      public final Builder setHeight(int paramInt)
      {
        this.bitField0_ = (0x4000 | this.bitField0_);
        this.height_ = paramInt;
        return this;
      }

      public final Builder setId(long paramLong)
      {
        this.bitField0_ = (0x2 | this.bitField0_);
        this.id_ = paramLong;
        return this;
      }

      public final Builder setIsDeleted(boolean paramBoolean)
      {
        this.bitField0_ = (0x1000000 | this.bitField0_);
        this.isDeleted_ = paramBoolean;
        return this;
      }

      public final Builder setIsDownloadable(boolean paramBoolean)
      {
        this.bitField0_ = (0x4000000 | this.bitField0_);
        this.isDownloadable_ = paramBoolean;
        return this;
      }

      @Deprecated
      public final Builder setLikeCount(int paramInt)
      {
        this.bitField0_ = (0x400 | this.bitField0_);
        this.likeCount_ = paramInt;
        return this;
      }

      @Deprecated
      public final Builder setLikingUserId(int paramInt, long paramLong)
      {
        ensureLikingUserIdIsMutable();
        this.likingUserId_.set(paramInt, Long.valueOf(paramLong));
        return this;
      }

      public final Builder setMediaTag(long paramLong)
      {
        this.bitField0_ = (0x400000 | this.bitField0_);
        this.mediaTag_ = paramLong;
        return this;
      }

      public final Builder setOwnerGaiaId(long paramLong)
      {
        this.bitField0_ = (0x100 | this.bitField0_);
        this.ownerGaiaId_ = paramLong;
        return this;
      }

      public final Builder setPhotoActionState(Data.PhotoActionState.Builder paramBuilder)
      {
        this.photoActionState_ = paramBuilder.build();
        this.bitField0_ = (0x10 | this.bitField0_);
        return this;
      }

      public final Builder setPhotoActionState(Data.PhotoActionState paramPhotoActionState)
      {
        if (paramPhotoActionState == null)
          throw new NullPointerException();
        this.photoActionState_ = paramPhotoActionState;
        this.bitField0_ = (0x10 | this.bitField0_);
        return this;
      }

      public final Builder setPlusoneData(Data.PlusOneData.Builder paramBuilder)
      {
        this.plusoneData_ = paramBuilder.build();
        this.bitField0_ = (0x1000 | this.bitField0_);
        return this;
      }

      public final Builder setPlusoneData(Data.PlusOneData paramPlusOneData)
      {
        if (paramPlusOneData == null)
          throw new NullPointerException();
        this.plusoneData_ = paramPlusOneData;
        this.bitField0_ = (0x1000 | this.bitField0_);
        return this;
      }

      public final Builder setShape(int paramInt, Data.MobileShape.Builder paramBuilder)
      {
        ensureShapeIsMutable();
        this.shape_.set(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder setShape(int paramInt, Data.MobileShape paramMobileShape)
      {
        if (paramMobileShape == null)
          throw new NullPointerException();
        ensureShapeIsMutable();
        this.shape_.set(paramInt, paramMobileShape);
        return this;
      }

      public final Builder setSize(long paramLong)
      {
        this.bitField0_ = (0x40000 | this.bitField0_);
        this.size_ = paramLong;
        return this;
      }

      public final Builder setStreamId(int paramInt, String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        ensureStreamIdIsMutable();
        this.streamId_.set(paramInt, paramString);
        return this;
      }

      public final Builder setTimestampMsec(long paramLong)
      {
        this.bitField0_ = (0x20000 | this.bitField0_);
        this.timestampMsec_ = paramLong;
        return this;
      }

      public final Builder setTitle(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x4 | this.bitField0_);
        this.title_ = paramString;
        return this;
      }

      public final Builder setTotalCommentCount(int paramInt)
      {
        this.bitField0_ = (0x40 | this.bitField0_);
        this.totalCommentCount_ = paramInt;
        return this;
      }

      public final Builder setUploadStatus(Data.MobilePhoto.UploadStatus paramUploadStatus)
      {
        if (paramUploadStatus == null)
          throw new NullPointerException();
        this.bitField0_ = (0x2000000 | this.bitField0_);
        this.uploadStatus_ = paramUploadStatus;
        return this;
      }

      public final Builder setUrl(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x1 | this.bitField0_);
        this.url_ = paramString;
        return this;
      }

      public final Builder setUrlFormat(Data.ImageUrlFormat paramImageUrlFormat)
      {
        if (paramImageUrlFormat == null)
          throw new NullPointerException();
        this.bitField0_ = (0x800000 | this.bitField0_);
        this.urlFormat_ = paramImageUrlFormat;
        return this;
      }

      public final Builder setVideoData(Data.VideoData.Builder paramBuilder)
      {
        this.videoData_ = paramBuilder.build();
        this.bitField0_ = (0x200000 | this.bitField0_);
        return this;
      }

      public final Builder setVideoData(Data.VideoData paramVideoData)
      {
        if (paramVideoData == null)
          throw new NullPointerException();
        this.videoData_ = paramVideoData;
        this.bitField0_ = (0x200000 | this.bitField0_);
        return this;
      }

      public final Builder setWidth(int paramInt)
      {
        this.bitField0_ = (0x2000 | this.bitField0_);
        this.width_ = paramInt;
        return this;
      }
    }

    public static enum UploadStatus
      implements Internal.EnumLite
    {
      private static Internal.EnumLiteMap<UploadStatus> internalValueMap = new Internal.EnumLiteMap()
      {
      };
      private final int value;

      static
      {
        PLACEHOLDER = new UploadStatus("PLACEHOLDER", 2, 2);
        UploadStatus[] arrayOfUploadStatus = new UploadStatus[3];
        arrayOfUploadStatus[0] = ORIGINAL;
        arrayOfUploadStatus[1] = THUMBNAIL;
        arrayOfUploadStatus[2] = PLACEHOLDER;
      }

      private UploadStatus(int paramInt1, int paramInt2)
      {
        this.value = paramInt1;
      }

      public static UploadStatus valueOf(int paramInt)
      {
        UploadStatus localUploadStatus;
        switch (paramInt)
        {
        default:
          localUploadStatus = null;
        case 0:
        case 1:
        case 2:
        }
        while (true)
        {
          return localUploadStatus;
          localUploadStatus = ORIGINAL;
          continue;
          localUploadStatus = THUMBNAIL;
          continue;
          localUploadStatus = PLACEHOLDER;
        }
      }

      public final int getNumber()
      {
        return this.value;
      }
    }
  }

  public static final class MobilePhotoGroup extends GeneratedMessageLite
    implements Data.MobilePhotoGroupOrBuilder
  {
    private static final MobilePhotoGroup defaultInstance;
    private static final long serialVersionUID;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private List<Data.MobilePhoto> photo_;

    static
    {
      MobilePhotoGroup localMobilePhotoGroup = new MobilePhotoGroup();
      defaultInstance = localMobilePhotoGroup;
      localMobilePhotoGroup.photo_ = Collections.emptyList();
    }

    private MobilePhotoGroup()
    {
    }

    private MobilePhotoGroup(Builder paramBuilder)
    {
      super();
    }

    public static MobilePhotoGroup getDefaultInstance()
    {
      return defaultInstance;
    }

    public static Builder newBuilder()
    {
      return Builder.access$26000();
    }

    public final MobilePhotoGroup getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final Data.MobilePhoto getPhoto(int paramInt)
    {
      return (Data.MobilePhoto)this.photo_.get(paramInt);
    }

    public final int getPhotoCount()
    {
      return this.photo_.size();
    }

    public final List<Data.MobilePhoto> getPhotoList()
    {
      return this.photo_;
    }

    public final Data.MobilePhotoOrBuilder getPhotoOrBuilder(int paramInt)
    {
      return (Data.MobilePhotoOrBuilder)this.photo_.get(paramInt);
    }

    public final List<? extends Data.MobilePhotoOrBuilder> getPhotoOrBuilderList()
    {
      return this.photo_;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int j;
      for (int m = i; ; m = j)
      {
        return m;
        j = 0;
        for (int k = 0; k < this.photo_.size(); k++)
          j += CodedOutputStream.computeMessageSize(1, (MessageLite)this.photo_.get(k));
        this.memoizedSerializedSize = j;
      }
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        for (int k = 0; ; k++)
        {
          if (k >= getPhotoCount())
            break label61;
          if (!getPhoto(k).isInitialized())
          {
            this.memoizedIsInitialized = 0;
            i = 0;
            break;
          }
        }
        label61: this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      for (int i = 0; i < this.photo_.size(); i++)
        paramCodedOutputStream.writeMessage(1, (MessageLite)this.photo_.get(i));
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Data.MobilePhotoGroup, Builder>
      implements Data.MobilePhotoGroupOrBuilder
    {
      private int bitField0_;
      private List<Data.MobilePhoto> photo_ = Collections.emptyList();

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private void ensurePhotoIsMutable()
      {
        if ((0x1 & this.bitField0_) != 1)
        {
          this.photo_ = new ArrayList(this.photo_);
          this.bitField0_ = (0x1 | this.bitField0_);
        }
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 10:
          }
          Data.MobilePhoto.Builder localBuilder = Data.MobilePhoto.newBuilder();
          paramCodedInputStream.readMessage(localBuilder, paramExtensionRegistryLite);
          addPhoto(localBuilder.buildPartial());
        }
      }

      public final Builder addAllPhoto(Iterable<? extends Data.MobilePhoto> paramIterable)
      {
        ensurePhotoIsMutable();
        GeneratedMessageLite.Builder.addAll(paramIterable, this.photo_);
        return this;
      }

      public final Builder addPhoto(int paramInt, Data.MobilePhoto.Builder paramBuilder)
      {
        ensurePhotoIsMutable();
        this.photo_.add(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder addPhoto(int paramInt, Data.MobilePhoto paramMobilePhoto)
      {
        if (paramMobilePhoto == null)
          throw new NullPointerException();
        ensurePhotoIsMutable();
        this.photo_.add(paramInt, paramMobilePhoto);
        return this;
      }

      public final Builder addPhoto(Data.MobilePhoto.Builder paramBuilder)
      {
        ensurePhotoIsMutable();
        this.photo_.add(paramBuilder.build());
        return this;
      }

      public final Builder addPhoto(Data.MobilePhoto paramMobilePhoto)
      {
        if (paramMobilePhoto == null)
          throw new NullPointerException();
        ensurePhotoIsMutable();
        this.photo_.add(paramMobilePhoto);
        return this;
      }

      public final Data.MobilePhotoGroup build()
      {
        Data.MobilePhotoGroup localMobilePhotoGroup = buildPartial();
        if (!localMobilePhotoGroup.isInitialized())
          throw new UninitializedMessageException();
        return localMobilePhotoGroup;
      }

      public final Data.MobilePhotoGroup buildPartial()
      {
        Data.MobilePhotoGroup localMobilePhotoGroup = new Data.MobilePhotoGroup(this, (byte)0);
        if ((0x1 & this.bitField0_) == 1)
        {
          this.photo_ = Collections.unmodifiableList(this.photo_);
          this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        }
        Data.MobilePhotoGroup.access$26202(localMobilePhotoGroup, this.photo_);
        return localMobilePhotoGroup;
      }

      public final Builder clear()
      {
        super.clear();
        this.photo_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        return this;
      }

      public final Builder clearPhoto()
      {
        this.photo_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        return this;
      }

      public final Data.MobilePhotoGroup getDefaultInstanceForType()
      {
        return Data.MobilePhotoGroup.getDefaultInstance();
      }

      public final Data.MobilePhoto getPhoto(int paramInt)
      {
        return (Data.MobilePhoto)this.photo_.get(paramInt);
      }

      public final int getPhotoCount()
      {
        return this.photo_.size();
      }

      public final List<Data.MobilePhoto> getPhotoList()
      {
        return Collections.unmodifiableList(this.photo_);
      }

      public final boolean isInitialized()
      {
        int i = 0;
        if (i < getPhotoCount())
          if (getPhoto(i).isInitialized());
        for (boolean bool = false; ; bool = true)
        {
          return bool;
          i++;
          break;
        }
      }

      public final Builder mergeFrom(Data.MobilePhotoGroup paramMobilePhotoGroup)
      {
        if (paramMobilePhotoGroup == Data.MobilePhotoGroup.getDefaultInstance());
        while (true)
        {
          return this;
          if (!paramMobilePhotoGroup.photo_.isEmpty())
            if (this.photo_.isEmpty())
            {
              this.photo_ = paramMobilePhotoGroup.photo_;
              this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
            }
            else
            {
              ensurePhotoIsMutable();
              this.photo_.addAll(paramMobilePhotoGroup.photo_);
            }
        }
      }

      public final Builder setPhoto(int paramInt, Data.MobilePhoto.Builder paramBuilder)
      {
        ensurePhotoIsMutable();
        this.photo_.set(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder setPhoto(int paramInt, Data.MobilePhoto paramMobilePhoto)
      {
        if (paramMobilePhoto == null)
          throw new NullPointerException();
        ensurePhotoIsMutable();
        this.photo_.set(paramInt, paramMobilePhoto);
        return this;
      }
    }
  }

  public static abstract interface MobilePhotoGroupOrBuilder extends MessageLiteOrBuilder
  {
    public abstract Data.MobilePhoto getPhoto(int paramInt);

    public abstract int getPhotoCount();

    public abstract List<Data.MobilePhoto> getPhotoList();
  }

  public static abstract interface MobilePhotoOrBuilder extends MessageLiteOrBuilder
  {
    public abstract String getActivityId(int paramInt);

    public abstract int getActivityIdCount();

    public abstract List<String> getActivityIdList();

    public abstract Data.PhotoAlbum getAlbum();

    public abstract Data.Comment getComment(int paramInt);

    public abstract int getCommentCount();

    public abstract List<Data.Comment> getCommentList();

    public abstract String getDescription();

    public abstract long getEntityVersion();

    public abstract String getFocusObfuscatedOwnerId();

    public abstract int getHeight();

    public abstract long getId();

    public abstract boolean getIsDeleted();

    public abstract boolean getIsDownloadable();

    @Deprecated
    public abstract int getLikeCount();

    @Deprecated
    public abstract long getLikingUserId(int paramInt);

    @Deprecated
    public abstract int getLikingUserIdCount();

    @Deprecated
    public abstract List<Long> getLikingUserIdList();

    public abstract long getMediaTag();

    public abstract long getOwnerGaiaId();

    public abstract Data.PhotoActionState getPhotoActionState();

    public abstract Data.PlusOneData getPlusoneData();

    public abstract Data.MobileShape getShape(int paramInt);

    public abstract int getShapeCount();

    public abstract List<Data.MobileShape> getShapeList();

    public abstract long getSize();

    public abstract String getStreamId(int paramInt);

    public abstract int getStreamIdCount();

    public abstract List<String> getStreamIdList();

    public abstract long getTimestampMsec();

    public abstract String getTitle();

    public abstract int getTotalCommentCount();

    public abstract Data.MobilePhoto.UploadStatus getUploadStatus();

    public abstract String getUrl();

    public abstract Data.ImageUrlFormat getUrlFormat();

    public abstract Data.VideoData getVideoData();

    public abstract int getWidth();

    public abstract boolean hasAlbum();

    public abstract boolean hasDescription();

    public abstract boolean hasEntityVersion();

    public abstract boolean hasFocusObfuscatedOwnerId();

    public abstract boolean hasHeight();

    public abstract boolean hasId();

    public abstract boolean hasIsDeleted();

    public abstract boolean hasIsDownloadable();

    @Deprecated
    public abstract boolean hasLikeCount();

    public abstract boolean hasMediaTag();

    public abstract boolean hasOwnerGaiaId();

    public abstract boolean hasPhotoActionState();

    public abstract boolean hasPlusoneData();

    public abstract boolean hasSize();

    public abstract boolean hasTimestampMsec();

    public abstract boolean hasTitle();

    public abstract boolean hasTotalCommentCount();

    public abstract boolean hasUploadStatus();

    public abstract boolean hasUrl();

    public abstract boolean hasUrlFormat();

    public abstract boolean hasVideoData();

    public abstract boolean hasWidth();
  }

  public static final class MobileShape extends GeneratedMessageLite
    implements Data.MobileShapeOrBuilder
  {
    private static final MobileShape defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private Object focusObfuscatedNameTagCreatorId_;
    private Object focusObfuscatedSubjectId_;
    private long id_;
    private int lowerRightX_;
    private int lowerRightY_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private long nameTagCreatorGaiaId_;
    private Rect normalizedBounds_;
    private Data.PhotoActionState photoActionState_;
    private Status status_;
    private long subjectGaiaId_;
    private List<Data.PersonSuggestion> suggestion_;
    private int upperLeftX_;
    private int upperLeftY_;

    static
    {
      MobileShape localMobileShape = new MobileShape();
      defaultInstance = localMobileShape;
      localMobileShape.id_ = 0L;
      localMobileShape.upperLeftX_ = 0;
      localMobileShape.upperLeftY_ = 0;
      localMobileShape.lowerRightX_ = 0;
      localMobileShape.lowerRightY_ = 0;
      localMobileShape.photoActionState_ = Data.PhotoActionState.getDefaultInstance();
      localMobileShape.subjectGaiaId_ = 0L;
      localMobileShape.focusObfuscatedSubjectId_ = "";
      localMobileShape.suggestion_ = Collections.emptyList();
      localMobileShape.status_ = Status.UNNAMED;
      localMobileShape.nameTagCreatorGaiaId_ = 0L;
      localMobileShape.focusObfuscatedNameTagCreatorId_ = "";
      localMobileShape.normalizedBounds_ = Rect.getDefaultInstance();
    }

    private MobileShape()
    {
    }

    private MobileShape(Builder paramBuilder)
    {
      super();
    }

    public static MobileShape getDefaultInstance()
    {
      return defaultInstance;
    }

    private ByteString getFocusObfuscatedNameTagCreatorIdBytes()
    {
      Object localObject = this.focusObfuscatedNameTagCreatorId_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.focusObfuscatedNameTagCreatorId_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    private ByteString getFocusObfuscatedSubjectIdBytes()
    {
      Object localObject = this.focusObfuscatedSubjectId_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.focusObfuscatedSubjectId_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static Builder newBuilder()
    {
      return Builder.access$27200();
    }

    public final MobileShape getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final String getFocusObfuscatedNameTagCreatorId()
    {
      Object localObject1 = this.focusObfuscatedNameTagCreatorId_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.focusObfuscatedNameTagCreatorId_ = str;
      }
    }

    public final String getFocusObfuscatedSubjectId()
    {
      Object localObject1 = this.focusObfuscatedSubjectId_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.focusObfuscatedSubjectId_ = str;
      }
    }

    public final long getId()
    {
      return this.id_;
    }

    @Deprecated
    public final int getLowerRightX()
    {
      return this.lowerRightX_;
    }

    @Deprecated
    public final int getLowerRightY()
    {
      return this.lowerRightY_;
    }

    public final long getNameTagCreatorGaiaId()
    {
      return this.nameTagCreatorGaiaId_;
    }

    public final Rect getNormalizedBounds()
    {
      return this.normalizedBounds_;
    }

    public final Data.PhotoActionState getPhotoActionState()
    {
      return this.photoActionState_;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int n = i; ; n = k)
      {
        return n;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeInt64Size(1, this.id_);
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeFixed32Size(2, this.upperLeftX_);
        if ((0x4 & this.bitField0_) == 4)
          k += CodedOutputStream.computeFixed32Size(3, this.upperLeftY_);
        if ((0x8 & this.bitField0_) == 8)
          k += CodedOutputStream.computeFixed32Size(4, this.lowerRightX_);
        if ((0x10 & this.bitField0_) == 16)
          k += CodedOutputStream.computeFixed32Size(5, this.lowerRightY_);
        if ((0x20 & this.bitField0_) == 32)
          k += CodedOutputStream.computeMessageSize(6, this.photoActionState_);
        if ((0x40 & this.bitField0_) == 64)
          k += CodedOutputStream.computeInt64Size(7, this.subjectGaiaId_);
        for (int m = 0; m < this.suggestion_.size(); m++)
          k += CodedOutputStream.computeMessageSize(8, (MessageLite)this.suggestion_.get(m));
        if ((0x100 & this.bitField0_) == 256)
          k += CodedOutputStream.computeEnumSize(9, this.status_.getNumber());
        if ((0x200 & this.bitField0_) == 512)
          k += CodedOutputStream.computeInt64Size(10, this.nameTagCreatorGaiaId_);
        if ((0x800 & this.bitField0_) == 2048)
          k += CodedOutputStream.computeMessageSize(11, this.normalizedBounds_);
        if ((0x80 & this.bitField0_) == 128)
          k += CodedOutputStream.computeBytesSize(12, getFocusObfuscatedSubjectIdBytes());
        if ((0x400 & this.bitField0_) == 1024)
          k += CodedOutputStream.computeBytesSize(13, getFocusObfuscatedNameTagCreatorIdBytes());
        this.memoizedSerializedSize = k;
      }
    }

    public final Status getStatus()
    {
      return this.status_;
    }

    public final long getSubjectGaiaId()
    {
      return this.subjectGaiaId_;
    }

    public final Data.PersonSuggestion getSuggestion(int paramInt)
    {
      return (Data.PersonSuggestion)this.suggestion_.get(paramInt);
    }

    public final int getSuggestionCount()
    {
      return this.suggestion_.size();
    }

    public final List<Data.PersonSuggestion> getSuggestionList()
    {
      return this.suggestion_;
    }

    public final Data.PersonSuggestionOrBuilder getSuggestionOrBuilder(int paramInt)
    {
      return (Data.PersonSuggestionOrBuilder)this.suggestion_.get(paramInt);
    }

    public final List<? extends Data.PersonSuggestionOrBuilder> getSuggestionOrBuilderList()
    {
      return this.suggestion_;
    }

    @Deprecated
    public final int getUpperLeftX()
    {
      return this.upperLeftX_;
    }

    @Deprecated
    public final int getUpperLeftY()
    {
      return this.upperLeftY_;
    }

    public final boolean hasFocusObfuscatedNameTagCreatorId()
    {
      if ((0x400 & this.bitField0_) == 1024);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasFocusObfuscatedSubjectId()
    {
      if ((0x80 & this.bitField0_) == 128);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasId()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    @Deprecated
    public final boolean hasLowerRightX()
    {
      if ((0x8 & this.bitField0_) == 8);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    @Deprecated
    public final boolean hasLowerRightY()
    {
      if ((0x10 & this.bitField0_) == 16);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasNameTagCreatorGaiaId()
    {
      if ((0x200 & this.bitField0_) == 512);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasNormalizedBounds()
    {
      if ((0x800 & this.bitField0_) == 2048);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasPhotoActionState()
    {
      if ((0x20 & this.bitField0_) == 32);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasStatus()
    {
      if ((0x100 & this.bitField0_) == 256);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasSubjectGaiaId()
    {
      if ((0x40 & this.bitField0_) == 64);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    @Deprecated
    public final boolean hasUpperLeftX()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    @Deprecated
    public final boolean hasUpperLeftY()
    {
      if ((0x4 & this.bitField0_) == 4);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        if ((hasNormalizedBounds()) && (!getNormalizedBounds().isInitialized()))
        {
          this.memoizedIsInitialized = 0;
          i = 0;
        }
        else
        {
          this.memoizedIsInitialized = i;
        }
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeInt64(1, this.id_);
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeFixed32(2, this.upperLeftX_);
      if ((0x4 & this.bitField0_) == 4)
        paramCodedOutputStream.writeFixed32(3, this.upperLeftY_);
      if ((0x8 & this.bitField0_) == 8)
        paramCodedOutputStream.writeFixed32(4, this.lowerRightX_);
      if ((0x10 & this.bitField0_) == 16)
        paramCodedOutputStream.writeFixed32(5, this.lowerRightY_);
      if ((0x20 & this.bitField0_) == 32)
        paramCodedOutputStream.writeMessage(6, this.photoActionState_);
      if ((0x40 & this.bitField0_) == 64)
        paramCodedOutputStream.writeInt64(7, this.subjectGaiaId_);
      for (int i = 0; i < this.suggestion_.size(); i++)
        paramCodedOutputStream.writeMessage(8, (MessageLite)this.suggestion_.get(i));
      if ((0x100 & this.bitField0_) == 256)
        paramCodedOutputStream.writeEnum(9, this.status_.getNumber());
      if ((0x200 & this.bitField0_) == 512)
        paramCodedOutputStream.writeInt64(10, this.nameTagCreatorGaiaId_);
      if ((0x800 & this.bitField0_) == 2048)
        paramCodedOutputStream.writeMessage(11, this.normalizedBounds_);
      if ((0x80 & this.bitField0_) == 128)
        paramCodedOutputStream.writeBytes(12, getFocusObfuscatedSubjectIdBytes());
      if ((0x400 & this.bitField0_) == 1024)
        paramCodedOutputStream.writeBytes(13, getFocusObfuscatedNameTagCreatorIdBytes());
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Data.MobileShape, Builder>
      implements Data.MobileShapeOrBuilder
    {
      private int bitField0_;
      private Object focusObfuscatedNameTagCreatorId_ = "";
      private Object focusObfuscatedSubjectId_ = "";
      private long id_;
      private int lowerRightX_;
      private int lowerRightY_;
      private long nameTagCreatorGaiaId_;
      private Data.MobileShape.Rect normalizedBounds_ = Data.MobileShape.Rect.getDefaultInstance();
      private Data.PhotoActionState photoActionState_ = Data.PhotoActionState.getDefaultInstance();
      private Data.MobileShape.Status status_ = Data.MobileShape.Status.UNNAMED;
      private long subjectGaiaId_;
      private List<Data.PersonSuggestion> suggestion_ = Collections.emptyList();
      private int upperLeftX_;
      private int upperLeftY_;

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private void ensureSuggestionIsMutable()
      {
        if ((0x100 & this.bitField0_) != 256)
        {
          this.suggestion_ = new ArrayList(this.suggestion_);
          this.bitField0_ = (0x100 | this.bitField0_);
        }
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 8:
            this.bitField0_ = (0x1 | this.bitField0_);
            this.id_ = paramCodedInputStream.readInt64();
            break;
          case 21:
            this.bitField0_ = (0x2 | this.bitField0_);
            this.upperLeftX_ = paramCodedInputStream.readFixed32();
            break;
          case 29:
            this.bitField0_ = (0x4 | this.bitField0_);
            this.upperLeftY_ = paramCodedInputStream.readFixed32();
            break;
          case 37:
            this.bitField0_ = (0x8 | this.bitField0_);
            this.lowerRightX_ = paramCodedInputStream.readFixed32();
            break;
          case 45:
            this.bitField0_ = (0x10 | this.bitField0_);
            this.lowerRightY_ = paramCodedInputStream.readFixed32();
            break;
          case 50:
            Data.PhotoActionState.Builder localBuilder2 = Data.PhotoActionState.newBuilder();
            if (hasPhotoActionState())
              localBuilder2.mergeFrom(getPhotoActionState());
            paramCodedInputStream.readMessage(localBuilder2, paramExtensionRegistryLite);
            setPhotoActionState(localBuilder2.buildPartial());
            break;
          case 56:
            this.bitField0_ = (0x40 | this.bitField0_);
            this.subjectGaiaId_ = paramCodedInputStream.readInt64();
            break;
          case 66:
            Data.PersonSuggestion.Builder localBuilder1 = Data.PersonSuggestion.newBuilder();
            paramCodedInputStream.readMessage(localBuilder1, paramExtensionRegistryLite);
            addSuggestion(localBuilder1.buildPartial());
            break;
          case 72:
            Data.MobileShape.Status localStatus = Data.MobileShape.Status.valueOf(paramCodedInputStream.readEnum());
            if (localStatus == null)
              continue;
            this.bitField0_ = (0x200 | this.bitField0_);
            this.status_ = localStatus;
            break;
          case 80:
            this.bitField0_ = (0x400 | this.bitField0_);
            this.nameTagCreatorGaiaId_ = paramCodedInputStream.readInt64();
            break;
          case 90:
            Data.MobileShape.Rect.Builder localBuilder = Data.MobileShape.Rect.newBuilder();
            if (hasNormalizedBounds())
              localBuilder.mergeFrom(getNormalizedBounds());
            paramCodedInputStream.readMessage(localBuilder, paramExtensionRegistryLite);
            setNormalizedBounds(localBuilder.buildPartial());
            break;
          case 98:
            this.bitField0_ = (0x80 | this.bitField0_);
            this.focusObfuscatedSubjectId_ = paramCodedInputStream.readBytes();
            break;
          case 106:
          }
          this.bitField0_ = (0x800 | this.bitField0_);
          this.focusObfuscatedNameTagCreatorId_ = paramCodedInputStream.readBytes();
        }
      }

      public final Builder addAllSuggestion(Iterable<? extends Data.PersonSuggestion> paramIterable)
      {
        ensureSuggestionIsMutable();
        GeneratedMessageLite.Builder.addAll(paramIterable, this.suggestion_);
        return this;
      }

      public final Builder addSuggestion(int paramInt, Data.PersonSuggestion.Builder paramBuilder)
      {
        ensureSuggestionIsMutable();
        this.suggestion_.add(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder addSuggestion(int paramInt, Data.PersonSuggestion paramPersonSuggestion)
      {
        if (paramPersonSuggestion == null)
          throw new NullPointerException();
        ensureSuggestionIsMutable();
        this.suggestion_.add(paramInt, paramPersonSuggestion);
        return this;
      }

      public final Builder addSuggestion(Data.PersonSuggestion.Builder paramBuilder)
      {
        ensureSuggestionIsMutable();
        this.suggestion_.add(paramBuilder.build());
        return this;
      }

      public final Builder addSuggestion(Data.PersonSuggestion paramPersonSuggestion)
      {
        if (paramPersonSuggestion == null)
          throw new NullPointerException();
        ensureSuggestionIsMutable();
        this.suggestion_.add(paramPersonSuggestion);
        return this;
      }

      public final Data.MobileShape build()
      {
        Data.MobileShape localMobileShape = buildPartial();
        if (!localMobileShape.isInitialized())
          throw new UninitializedMessageException();
        return localMobileShape;
      }

      public final Data.MobileShape buildPartial()
      {
        Data.MobileShape localMobileShape = new Data.MobileShape(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Data.MobileShape.access$27402(localMobileShape, this.id_);
        if ((i & 0x2) == 2)
          k |= 2;
        Data.MobileShape.access$27502(localMobileShape, this.upperLeftX_);
        if ((i & 0x4) == 4)
          k |= 4;
        Data.MobileShape.access$27602(localMobileShape, this.upperLeftY_);
        if ((i & 0x8) == 8)
          k |= 8;
        Data.MobileShape.access$27702(localMobileShape, this.lowerRightX_);
        if ((i & 0x10) == 16)
          k |= 16;
        Data.MobileShape.access$27802(localMobileShape, this.lowerRightY_);
        if ((i & 0x20) == 32)
          k |= 32;
        Data.MobileShape.access$27902(localMobileShape, this.photoActionState_);
        if ((i & 0x40) == 64)
          k |= 64;
        Data.MobileShape.access$28002(localMobileShape, this.subjectGaiaId_);
        if ((i & 0x80) == 128)
          k |= 128;
        Data.MobileShape.access$28102(localMobileShape, this.focusObfuscatedSubjectId_);
        if ((0x100 & this.bitField0_) == 256)
        {
          this.suggestion_ = Collections.unmodifiableList(this.suggestion_);
          this.bitField0_ = (0xFFFFFEFF & this.bitField0_);
        }
        Data.MobileShape.access$28202(localMobileShape, this.suggestion_);
        if ((i & 0x200) == 512)
          k |= 256;
        Data.MobileShape.access$28302(localMobileShape, this.status_);
        if ((i & 0x400) == 1024)
          k |= 512;
        Data.MobileShape.access$28402(localMobileShape, this.nameTagCreatorGaiaId_);
        if ((i & 0x800) == 2048)
          k |= 1024;
        Data.MobileShape.access$28502(localMobileShape, this.focusObfuscatedNameTagCreatorId_);
        if ((i & 0x1000) == 4096)
          k |= 2048;
        Data.MobileShape.access$28602(localMobileShape, this.normalizedBounds_);
        Data.MobileShape.access$28702(localMobileShape, k);
        return localMobileShape;
      }

      public final Builder clear()
      {
        super.clear();
        this.id_ = 0L;
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.upperLeftX_ = 0;
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.upperLeftY_ = 0;
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.lowerRightX_ = 0;
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        this.lowerRightY_ = 0;
        this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        this.photoActionState_ = Data.PhotoActionState.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFDF & this.bitField0_);
        this.subjectGaiaId_ = 0L;
        this.bitField0_ = (0xFFFFFFBF & this.bitField0_);
        this.focusObfuscatedSubjectId_ = "";
        this.bitField0_ = (0xFFFFFF7F & this.bitField0_);
        this.suggestion_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFEFF & this.bitField0_);
        this.status_ = Data.MobileShape.Status.UNNAMED;
        this.bitField0_ = (0xFFFFFDFF & this.bitField0_);
        this.nameTagCreatorGaiaId_ = 0L;
        this.bitField0_ = (0xFFFFFBFF & this.bitField0_);
        this.focusObfuscatedNameTagCreatorId_ = "";
        this.bitField0_ = (0xFFFFF7FF & this.bitField0_);
        this.normalizedBounds_ = Data.MobileShape.Rect.getDefaultInstance();
        this.bitField0_ = (0xFFFFEFFF & this.bitField0_);
        return this;
      }

      public final Builder clearFocusObfuscatedNameTagCreatorId()
      {
        this.bitField0_ = (0xFFFFF7FF & this.bitField0_);
        this.focusObfuscatedNameTagCreatorId_ = Data.MobileShape.getDefaultInstance().getFocusObfuscatedNameTagCreatorId();
        return this;
      }

      public final Builder clearFocusObfuscatedSubjectId()
      {
        this.bitField0_ = (0xFFFFFF7F & this.bitField0_);
        this.focusObfuscatedSubjectId_ = Data.MobileShape.getDefaultInstance().getFocusObfuscatedSubjectId();
        return this;
      }

      public final Builder clearId()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.id_ = 0L;
        return this;
      }

      @Deprecated
      public final Builder clearLowerRightX()
      {
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        this.lowerRightX_ = 0;
        return this;
      }

      @Deprecated
      public final Builder clearLowerRightY()
      {
        this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        this.lowerRightY_ = 0;
        return this;
      }

      public final Builder clearNameTagCreatorGaiaId()
      {
        this.bitField0_ = (0xFFFFFBFF & this.bitField0_);
        this.nameTagCreatorGaiaId_ = 0L;
        return this;
      }

      public final Builder clearNormalizedBounds()
      {
        this.normalizedBounds_ = Data.MobileShape.Rect.getDefaultInstance();
        this.bitField0_ = (0xFFFFEFFF & this.bitField0_);
        return this;
      }

      public final Builder clearPhotoActionState()
      {
        this.photoActionState_ = Data.PhotoActionState.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFDF & this.bitField0_);
        return this;
      }

      public final Builder clearStatus()
      {
        this.bitField0_ = (0xFFFFFDFF & this.bitField0_);
        this.status_ = Data.MobileShape.Status.UNNAMED;
        return this;
      }

      public final Builder clearSubjectGaiaId()
      {
        this.bitField0_ = (0xFFFFFFBF & this.bitField0_);
        this.subjectGaiaId_ = 0L;
        return this;
      }

      public final Builder clearSuggestion()
      {
        this.suggestion_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFEFF & this.bitField0_);
        return this;
      }

      @Deprecated
      public final Builder clearUpperLeftX()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.upperLeftX_ = 0;
        return this;
      }

      @Deprecated
      public final Builder clearUpperLeftY()
      {
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.upperLeftY_ = 0;
        return this;
      }

      public final Data.MobileShape getDefaultInstanceForType()
      {
        return Data.MobileShape.getDefaultInstance();
      }

      public final String getFocusObfuscatedNameTagCreatorId()
      {
        Object localObject = this.focusObfuscatedNameTagCreatorId_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.focusObfuscatedNameTagCreatorId_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final String getFocusObfuscatedSubjectId()
      {
        Object localObject = this.focusObfuscatedSubjectId_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.focusObfuscatedSubjectId_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final long getId()
      {
        return this.id_;
      }

      @Deprecated
      public final int getLowerRightX()
      {
        return this.lowerRightX_;
      }

      @Deprecated
      public final int getLowerRightY()
      {
        return this.lowerRightY_;
      }

      public final long getNameTagCreatorGaiaId()
      {
        return this.nameTagCreatorGaiaId_;
      }

      public final Data.MobileShape.Rect getNormalizedBounds()
      {
        return this.normalizedBounds_;
      }

      public final Data.PhotoActionState getPhotoActionState()
      {
        return this.photoActionState_;
      }

      public final Data.MobileShape.Status getStatus()
      {
        return this.status_;
      }

      public final long getSubjectGaiaId()
      {
        return this.subjectGaiaId_;
      }

      public final Data.PersonSuggestion getSuggestion(int paramInt)
      {
        return (Data.PersonSuggestion)this.suggestion_.get(paramInt);
      }

      public final int getSuggestionCount()
      {
        return this.suggestion_.size();
      }

      public final List<Data.PersonSuggestion> getSuggestionList()
      {
        return Collections.unmodifiableList(this.suggestion_);
      }

      @Deprecated
      public final int getUpperLeftX()
      {
        return this.upperLeftX_;
      }

      @Deprecated
      public final int getUpperLeftY()
      {
        return this.upperLeftY_;
      }

      public final boolean hasFocusObfuscatedNameTagCreatorId()
      {
        if ((0x800 & this.bitField0_) == 2048);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasFocusObfuscatedSubjectId()
      {
        if ((0x80 & this.bitField0_) == 128);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasId()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      @Deprecated
      public final boolean hasLowerRightX()
      {
        if ((0x8 & this.bitField0_) == 8);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      @Deprecated
      public final boolean hasLowerRightY()
      {
        if ((0x10 & this.bitField0_) == 16);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasNameTagCreatorGaiaId()
      {
        if ((0x400 & this.bitField0_) == 1024);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasNormalizedBounds()
      {
        if ((0x1000 & this.bitField0_) == 4096);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasPhotoActionState()
      {
        if ((0x20 & this.bitField0_) == 32);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasStatus()
      {
        if ((0x200 & this.bitField0_) == 512);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasSubjectGaiaId()
      {
        if ((0x40 & this.bitField0_) == 64);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      @Deprecated
      public final boolean hasUpperLeftX()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      @Deprecated
      public final boolean hasUpperLeftY()
      {
        if ((0x4 & this.bitField0_) == 4);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean isInitialized()
      {
        if ((hasNormalizedBounds()) && (!getNormalizedBounds().isInitialized()));
        for (boolean bool = false; ; bool = true)
          return bool;
      }

      public final Builder mergeFrom(Data.MobileShape paramMobileShape)
      {
        if (paramMobileShape == Data.MobileShape.getDefaultInstance());
        Data.PhotoActionState localPhotoActionState;
        label143: label230: 
        do
        {
          return this;
          if (paramMobileShape.hasId())
            setId(paramMobileShape.getId());
          if (paramMobileShape.hasUpperLeftX())
            setUpperLeftX(paramMobileShape.getUpperLeftX());
          if (paramMobileShape.hasUpperLeftY())
            setUpperLeftY(paramMobileShape.getUpperLeftY());
          if (paramMobileShape.hasLowerRightX())
            setLowerRightX(paramMobileShape.getLowerRightX());
          if (paramMobileShape.hasLowerRightY())
            setLowerRightY(paramMobileShape.getLowerRightY());
          if (paramMobileShape.hasPhotoActionState())
          {
            localPhotoActionState = paramMobileShape.getPhotoActionState();
            if (((0x20 & this.bitField0_) != 32) || (this.photoActionState_ == Data.PhotoActionState.getDefaultInstance()))
              break;
            this.photoActionState_ = Data.PhotoActionState.newBuilder(this.photoActionState_).mergeFrom(localPhotoActionState).buildPartial();
            this.bitField0_ = (0x20 | this.bitField0_);
          }
          if (paramMobileShape.hasSubjectGaiaId())
            setSubjectGaiaId(paramMobileShape.getSubjectGaiaId());
          if (paramMobileShape.hasFocusObfuscatedSubjectId())
            setFocusObfuscatedSubjectId(paramMobileShape.getFocusObfuscatedSubjectId());
          if (!paramMobileShape.suggestion_.isEmpty())
          {
            if (!this.suggestion_.isEmpty())
              break label356;
            this.suggestion_ = paramMobileShape.suggestion_;
            this.bitField0_ = (0xFFFFFEFF & this.bitField0_);
          }
          if (paramMobileShape.hasStatus())
            setStatus(paramMobileShape.getStatus());
          if (paramMobileShape.hasNameTagCreatorGaiaId())
            setNameTagCreatorGaiaId(paramMobileShape.getNameTagCreatorGaiaId());
          if (paramMobileShape.hasFocusObfuscatedNameTagCreatorId())
            setFocusObfuscatedNameTagCreatorId(paramMobileShape.getFocusObfuscatedNameTagCreatorId());
        }
        while (!paramMobileShape.hasNormalizedBounds());
        Data.MobileShape.Rect localRect = paramMobileShape.getNormalizedBounds();
        if (((0x1000 & this.bitField0_) == 4096) && (this.normalizedBounds_ != Data.MobileShape.Rect.getDefaultInstance()));
        for (this.normalizedBounds_ = Data.MobileShape.Rect.newBuilder(this.normalizedBounds_).mergeFrom(localRect).buildPartial(); ; this.normalizedBounds_ = localRect)
        {
          this.bitField0_ = (0x1000 | this.bitField0_);
          break;
          this.photoActionState_ = localPhotoActionState;
          break label143;
          label356: ensureSuggestionIsMutable();
          this.suggestion_.addAll(paramMobileShape.suggestion_);
          break label230;
        }
      }

      public final Builder setFocusObfuscatedNameTagCreatorId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x800 | this.bitField0_);
        this.focusObfuscatedNameTagCreatorId_ = paramString;
        return this;
      }

      public final Builder setFocusObfuscatedSubjectId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x80 | this.bitField0_);
        this.focusObfuscatedSubjectId_ = paramString;
        return this;
      }

      public final Builder setId(long paramLong)
      {
        this.bitField0_ = (0x1 | this.bitField0_);
        this.id_ = paramLong;
        return this;
      }

      @Deprecated
      public final Builder setLowerRightX(int paramInt)
      {
        this.bitField0_ = (0x8 | this.bitField0_);
        this.lowerRightX_ = paramInt;
        return this;
      }

      @Deprecated
      public final Builder setLowerRightY(int paramInt)
      {
        this.bitField0_ = (0x10 | this.bitField0_);
        this.lowerRightY_ = paramInt;
        return this;
      }

      public final Builder setNameTagCreatorGaiaId(long paramLong)
      {
        this.bitField0_ = (0x400 | this.bitField0_);
        this.nameTagCreatorGaiaId_ = paramLong;
        return this;
      }

      public final Builder setNormalizedBounds(Data.MobileShape.Rect.Builder paramBuilder)
      {
        this.normalizedBounds_ = paramBuilder.build();
        this.bitField0_ = (0x1000 | this.bitField0_);
        return this;
      }

      public final Builder setNormalizedBounds(Data.MobileShape.Rect paramRect)
      {
        if (paramRect == null)
          throw new NullPointerException();
        this.normalizedBounds_ = paramRect;
        this.bitField0_ = (0x1000 | this.bitField0_);
        return this;
      }

      public final Builder setPhotoActionState(Data.PhotoActionState.Builder paramBuilder)
      {
        this.photoActionState_ = paramBuilder.build();
        this.bitField0_ = (0x20 | this.bitField0_);
        return this;
      }

      public final Builder setPhotoActionState(Data.PhotoActionState paramPhotoActionState)
      {
        if (paramPhotoActionState == null)
          throw new NullPointerException();
        this.photoActionState_ = paramPhotoActionState;
        this.bitField0_ = (0x20 | this.bitField0_);
        return this;
      }

      public final Builder setStatus(Data.MobileShape.Status paramStatus)
      {
        if (paramStatus == null)
          throw new NullPointerException();
        this.bitField0_ = (0x200 | this.bitField0_);
        this.status_ = paramStatus;
        return this;
      }

      public final Builder setSubjectGaiaId(long paramLong)
      {
        this.bitField0_ = (0x40 | this.bitField0_);
        this.subjectGaiaId_ = paramLong;
        return this;
      }

      public final Builder setSuggestion(int paramInt, Data.PersonSuggestion.Builder paramBuilder)
      {
        ensureSuggestionIsMutable();
        this.suggestion_.set(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder setSuggestion(int paramInt, Data.PersonSuggestion paramPersonSuggestion)
      {
        if (paramPersonSuggestion == null)
          throw new NullPointerException();
        ensureSuggestionIsMutable();
        this.suggestion_.set(paramInt, paramPersonSuggestion);
        return this;
      }

      @Deprecated
      public final Builder setUpperLeftX(int paramInt)
      {
        this.bitField0_ = (0x2 | this.bitField0_);
        this.upperLeftX_ = paramInt;
        return this;
      }

      @Deprecated
      public final Builder setUpperLeftY(int paramInt)
      {
        this.bitField0_ = (0x4 | this.bitField0_);
        this.upperLeftY_ = paramInt;
        return this;
      }
    }

    public static final class Rect extends GeneratedMessageLite
      implements Data.MobileShape.RectOrBuilder
    {
      private static final Rect defaultInstance;
      private static final long serialVersionUID;
      private int bitField0_;
      private double bottom_;
      private double left_;
      private byte memoizedIsInitialized = -1;
      private int memoizedSerializedSize = -1;
      private double right_;
      private double top_;

      static
      {
        Rect localRect = new Rect();
        defaultInstance = localRect;
        localRect.left_ = 0.0D;
        localRect.top_ = 0.0D;
        localRect.right_ = 0.0D;
        localRect.bottom_ = 0.0D;
      }

      private Rect()
      {
      }

      private Rect(Builder paramBuilder)
      {
        super();
      }

      public static Rect getDefaultInstance()
      {
        return defaultInstance;
      }

      public static Builder newBuilder()
      {
        return Builder.access$26400();
      }

      public static Builder newBuilder(Rect paramRect)
      {
        return Builder.access$26400().mergeFrom(paramRect);
      }

      public final double getBottom()
      {
        return this.bottom_;
      }

      public final Rect getDefaultInstanceForType()
      {
        return defaultInstance;
      }

      public final double getLeft()
      {
        return this.left_;
      }

      public final double getRight()
      {
        return this.right_;
      }

      public final int getSerializedSize()
      {
        int i = this.memoizedSerializedSize;
        if (i != -1);
        int k;
        for (int m = i; ; m = k)
        {
          return m;
          int j = 0x1 & this.bitField0_;
          k = 0;
          if (j == 1)
            k = 0 + CodedOutputStream.computeDoubleSize(1, this.left_);
          if ((0x2 & this.bitField0_) == 2)
            k += CodedOutputStream.computeDoubleSize(2, this.top_);
          if ((0x4 & this.bitField0_) == 4)
            k += CodedOutputStream.computeDoubleSize(3, this.right_);
          if ((0x8 & this.bitField0_) == 8)
            k += CodedOutputStream.computeDoubleSize(4, this.bottom_);
          this.memoizedSerializedSize = k;
        }
      }

      public final double getTop()
      {
        return this.top_;
      }

      public final boolean hasBottom()
      {
        if ((0x8 & this.bitField0_) == 8);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasLeft()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean hasRight()
      {
        if ((0x4 & this.bitField0_) == 4);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasTop()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean isInitialized()
      {
        int i = 1;
        int j = this.memoizedIsInitialized;
        if (j != -1)
          if (j != i);
        while (true)
        {
          return i;
          i = 0;
          continue;
          if (!hasLeft())
          {
            this.memoizedIsInitialized = 0;
            i = 0;
          }
          else if (!hasTop())
          {
            this.memoizedIsInitialized = 0;
            i = 0;
          }
          else if (!hasRight())
          {
            this.memoizedIsInitialized = 0;
            i = 0;
          }
          else if (!hasBottom())
          {
            this.memoizedIsInitialized = 0;
            i = 0;
          }
          else
          {
            this.memoizedIsInitialized = i;
          }
        }
      }

      protected final Object writeReplace()
        throws ObjectStreamException
      {
        return super.writeReplace();
      }

      public final void writeTo(CodedOutputStream paramCodedOutputStream)
        throws IOException
      {
        getSerializedSize();
        if ((0x1 & this.bitField0_) == 1)
          paramCodedOutputStream.writeDouble(1, this.left_);
        if ((0x2 & this.bitField0_) == 2)
          paramCodedOutputStream.writeDouble(2, this.top_);
        if ((0x4 & this.bitField0_) == 4)
          paramCodedOutputStream.writeDouble(3, this.right_);
        if ((0x8 & this.bitField0_) == 8)
          paramCodedOutputStream.writeDouble(4, this.bottom_);
      }

      public static final class Builder extends GeneratedMessageLite.Builder<Data.MobileShape.Rect, Builder>
        implements Data.MobileShape.RectOrBuilder
      {
        private int bitField0_;
        private double bottom_;
        private double left_;
        private double right_;
        private double top_;

        private Builder clone()
        {
          return new Builder().mergeFrom(buildPartial());
        }

        private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
          throws IOException
        {
          while (true)
          {
            int i = paramCodedInputStream.readTag();
            switch (i)
            {
            default:
              if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
                continue;
            case 0:
              return this;
            case 9:
              this.bitField0_ = (0x1 | this.bitField0_);
              this.left_ = paramCodedInputStream.readDouble();
              break;
            case 17:
              this.bitField0_ = (0x2 | this.bitField0_);
              this.top_ = paramCodedInputStream.readDouble();
              break;
            case 25:
              this.bitField0_ = (0x4 | this.bitField0_);
              this.right_ = paramCodedInputStream.readDouble();
              break;
            case 33:
            }
            this.bitField0_ = (0x8 | this.bitField0_);
            this.bottom_ = paramCodedInputStream.readDouble();
          }
        }

        public final Data.MobileShape.Rect build()
        {
          Data.MobileShape.Rect localRect = buildPartial();
          if (!localRect.isInitialized())
            throw new UninitializedMessageException();
          return localRect;
        }

        public final Data.MobileShape.Rect buildPartial()
        {
          Data.MobileShape.Rect localRect = new Data.MobileShape.Rect(this, (byte)0);
          int i = this.bitField0_;
          int j = i & 0x1;
          int k = 0;
          if (j == 1)
            k = 1;
          Data.MobileShape.Rect.access$26602(localRect, this.left_);
          if ((i & 0x2) == 2)
            k |= 2;
          Data.MobileShape.Rect.access$26702(localRect, this.top_);
          if ((i & 0x4) == 4)
            k |= 4;
          Data.MobileShape.Rect.access$26802(localRect, this.right_);
          if ((i & 0x8) == 8)
            k |= 8;
          Data.MobileShape.Rect.access$26902(localRect, this.bottom_);
          Data.MobileShape.Rect.access$27002(localRect, k);
          return localRect;
        }

        public final Builder clear()
        {
          super.clear();
          this.left_ = 0.0D;
          this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
          this.top_ = 0.0D;
          this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
          this.right_ = 0.0D;
          this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
          this.bottom_ = 0.0D;
          this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
          return this;
        }

        public final Builder clearBottom()
        {
          this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
          this.bottom_ = 0.0D;
          return this;
        }

        public final Builder clearLeft()
        {
          this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
          this.left_ = 0.0D;
          return this;
        }

        public final Builder clearRight()
        {
          this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
          this.right_ = 0.0D;
          return this;
        }

        public final Builder clearTop()
        {
          this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
          this.top_ = 0.0D;
          return this;
        }

        public final double getBottom()
        {
          return this.bottom_;
        }

        public final Data.MobileShape.Rect getDefaultInstanceForType()
        {
          return Data.MobileShape.Rect.getDefaultInstance();
        }

        public final double getLeft()
        {
          return this.left_;
        }

        public final double getRight()
        {
          return this.right_;
        }

        public final double getTop()
        {
          return this.top_;
        }

        public final boolean hasBottom()
        {
          if ((0x8 & this.bitField0_) == 8);
          for (boolean bool = true; ; bool = false)
            return bool;
        }

        public final boolean hasLeft()
        {
          int i = 1;
          if ((0x1 & this.bitField0_) == i);
          while (true)
          {
            return i;
            int j = 0;
          }
        }

        public final boolean hasRight()
        {
          if ((0x4 & this.bitField0_) == 4);
          for (boolean bool = true; ; bool = false)
            return bool;
        }

        public final boolean hasTop()
        {
          if ((0x2 & this.bitField0_) == 2);
          for (boolean bool = true; ; bool = false)
            return bool;
        }

        public final boolean isInitialized()
        {
          boolean bool1 = hasLeft();
          boolean bool2 = false;
          if (!bool1);
          while (true)
          {
            return bool2;
            boolean bool3 = hasTop();
            bool2 = false;
            if (bool3)
            {
              boolean bool4 = hasRight();
              bool2 = false;
              if (bool4)
              {
                boolean bool5 = hasBottom();
                bool2 = false;
                if (bool5)
                  bool2 = true;
              }
            }
          }
        }

        public final Builder mergeFrom(Data.MobileShape.Rect paramRect)
        {
          if (paramRect == Data.MobileShape.Rect.getDefaultInstance());
          while (true)
          {
            return this;
            if (paramRect.hasLeft())
              setLeft(paramRect.getLeft());
            if (paramRect.hasTop())
              setTop(paramRect.getTop());
            if (paramRect.hasRight())
              setRight(paramRect.getRight());
            if (paramRect.hasBottom())
              setBottom(paramRect.getBottom());
          }
        }

        public final Builder setBottom(double paramDouble)
        {
          this.bitField0_ = (0x8 | this.bitField0_);
          this.bottom_ = paramDouble;
          return this;
        }

        public final Builder setLeft(double paramDouble)
        {
          this.bitField0_ = (0x1 | this.bitField0_);
          this.left_ = paramDouble;
          return this;
        }

        public final Builder setRight(double paramDouble)
        {
          this.bitField0_ = (0x4 | this.bitField0_);
          this.right_ = paramDouble;
          return this;
        }

        public final Builder setTop(double paramDouble)
        {
          this.bitField0_ = (0x2 | this.bitField0_);
          this.top_ = paramDouble;
          return this;
        }
      }
    }

    public static abstract interface RectOrBuilder extends MessageLiteOrBuilder
    {
      public abstract double getBottom();

      public abstract double getLeft();

      public abstract double getRight();

      public abstract double getTop();

      public abstract boolean hasBottom();

      public abstract boolean hasLeft();

      public abstract boolean hasRight();

      public abstract boolean hasTop();
    }

    public static enum Status
      implements Internal.EnumLite
    {
      private static Internal.EnumLiteMap<Status> internalValueMap = new Internal.EnumLiteMap()
      {
      };
      private final int value;

      static
      {
        NAMED = new Status("NAMED", 1, 1);
        IGNORE = new Status("IGNORE", 2, 2);
        INCORRECT = new Status("INCORRECT", 3, 3);
        PENDING = new Status("PENDING", 4, 4);
        NAMED_PUBLIC = new Status("NAMED_PUBLIC", 5, 5);
        REJECTED = new Status("REJECTED", 6, 6);
        Status[] arrayOfStatus = new Status[7];
        arrayOfStatus[0] = UNNAMED;
        arrayOfStatus[1] = NAMED;
        arrayOfStatus[2] = IGNORE;
        arrayOfStatus[3] = INCORRECT;
        arrayOfStatus[4] = PENDING;
        arrayOfStatus[5] = NAMED_PUBLIC;
        arrayOfStatus[6] = REJECTED;
      }

      private Status(int paramInt1, int paramInt2)
      {
        this.value = paramInt1;
      }

      public static Status valueOf(int paramInt)
      {
        Status localStatus;
        switch (paramInt)
        {
        default:
          localStatus = null;
        case 0:
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
        case 6:
        }
        while (true)
        {
          return localStatus;
          localStatus = UNNAMED;
          continue;
          localStatus = NAMED;
          continue;
          localStatus = IGNORE;
          continue;
          localStatus = INCORRECT;
          continue;
          localStatus = PENDING;
          continue;
          localStatus = NAMED_PUBLIC;
          continue;
          localStatus = REJECTED;
        }
      }

      public final int getNumber()
      {
        return this.value;
      }
    }
  }

  public static abstract interface MobileShapeOrBuilder extends MessageLiteOrBuilder
  {
    public abstract String getFocusObfuscatedNameTagCreatorId();

    public abstract String getFocusObfuscatedSubjectId();

    public abstract long getId();

    @Deprecated
    public abstract int getLowerRightX();

    @Deprecated
    public abstract int getLowerRightY();

    public abstract long getNameTagCreatorGaiaId();

    public abstract Data.MobileShape.Rect getNormalizedBounds();

    public abstract Data.PhotoActionState getPhotoActionState();

    public abstract Data.MobileShape.Status getStatus();

    public abstract long getSubjectGaiaId();

    public abstract Data.PersonSuggestion getSuggestion(int paramInt);

    public abstract int getSuggestionCount();

    public abstract List<Data.PersonSuggestion> getSuggestionList();

    @Deprecated
    public abstract int getUpperLeftX();

    @Deprecated
    public abstract int getUpperLeftY();

    public abstract boolean hasFocusObfuscatedNameTagCreatorId();

    public abstract boolean hasFocusObfuscatedSubjectId();

    public abstract boolean hasId();

    @Deprecated
    public abstract boolean hasLowerRightX();

    @Deprecated
    public abstract boolean hasLowerRightY();

    public abstract boolean hasNameTagCreatorGaiaId();

    public abstract boolean hasNormalizedBounds();

    public abstract boolean hasPhotoActionState();

    public abstract boolean hasStatus();

    public abstract boolean hasSubjectGaiaId();

    @Deprecated
    public abstract boolean hasUpperLeftX();

    @Deprecated
    public abstract boolean hasUpperLeftY();
  }

  public static enum NotificationChannel
    implements Internal.EnumLite
  {
    private static Internal.EnumLiteMap<NotificationChannel> internalValueMap = new Internal.EnumLiteMap()
    {
    };
    private final int value;

    static
    {
      ANDROID_PUSH = new NotificationChannel("ANDROID_PUSH", 1, 1);
      SMS = new NotificationChannel("SMS", 2, 2);
      EMAIL = new NotificationChannel("EMAIL", 3, 3);
      NotificationChannel[] arrayOfNotificationChannel = new NotificationChannel[4];
      arrayOfNotificationChannel[0] = IPHONE_PUSH;
      arrayOfNotificationChannel[1] = ANDROID_PUSH;
      arrayOfNotificationChannel[2] = SMS;
      arrayOfNotificationChannel[3] = EMAIL;
    }

    private NotificationChannel(int paramInt1, int paramInt2)
    {
      this.value = paramInt1;
    }

    public static NotificationChannel valueOf(int paramInt)
    {
      NotificationChannel localNotificationChannel;
      switch (paramInt)
      {
      default:
        localNotificationChannel = null;
      case 0:
      case 1:
      case 2:
      case 3:
      }
      while (true)
      {
        return localNotificationChannel;
        localNotificationChannel = IPHONE_PUSH;
        continue;
        localNotificationChannel = ANDROID_PUSH;
        continue;
        localNotificationChannel = SMS;
        continue;
        localNotificationChannel = EMAIL;
      }
    }

    public final int getNumber()
    {
      return this.value;
    }
  }

  public static final class NotificationSettings extends GeneratedMessageLite
    implements Data.NotificationSettingsOrBuilder
  {
    private static final NotificationSettings defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private List<Category> categories_;
    private Object emailAddress_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;

    static
    {
      NotificationSettings localNotificationSettings = new NotificationSettings();
      defaultInstance = localNotificationSettings;
      localNotificationSettings.categories_ = Collections.emptyList();
      localNotificationSettings.emailAddress_ = "";
    }

    private NotificationSettings()
    {
    }

    private NotificationSettings(Builder paramBuilder)
    {
      super();
    }

    public static NotificationSettings getDefaultInstance()
    {
      return defaultInstance;
    }

    private ByteString getEmailAddressBytes()
    {
      Object localObject = this.emailAddress_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.emailAddress_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static Builder newBuilder()
    {
      return Builder.access$51100();
    }

    public static Builder newBuilder(NotificationSettings paramNotificationSettings)
    {
      return Builder.access$51100().mergeFrom(paramNotificationSettings);
    }

    public final Category getCategories(int paramInt)
    {
      return (Category)this.categories_.get(paramInt);
    }

    public final int getCategoriesCount()
    {
      return this.categories_.size();
    }

    public final List<Category> getCategoriesList()
    {
      return this.categories_;
    }

    public final CategoryOrBuilder getCategoriesOrBuilder(int paramInt)
    {
      return (CategoryOrBuilder)this.categories_.get(paramInt);
    }

    public final List<? extends CategoryOrBuilder> getCategoriesOrBuilderList()
    {
      return this.categories_;
    }

    public final NotificationSettings getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final String getEmailAddress()
    {
      Object localObject1 = this.emailAddress_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.emailAddress_ = str;
      }
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int j;
      for (int m = i; ; m = j)
      {
        return m;
        j = 0;
        for (int k = 0; k < this.categories_.size(); k++)
          j += CodedOutputStream.computeMessageSize(1, (MessageLite)this.categories_.get(k));
        if ((0x1 & this.bitField0_) == 1)
          j += CodedOutputStream.computeBytesSize(2, getEmailAddressBytes());
        this.memoizedSerializedSize = j;
      }
    }

    public final boolean hasEmailAddress()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      for (int i = 0; i < this.categories_.size(); i++)
        paramCodedOutputStream.writeMessage(1, (MessageLite)this.categories_.get(i));
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeBytes(2, getEmailAddressBytes());
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Data.NotificationSettings, Builder>
      implements Data.NotificationSettingsOrBuilder
    {
      private int bitField0_;
      private List<Data.NotificationSettings.Category> categories_ = Collections.emptyList();
      private Object emailAddress_ = "";

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private void ensureCategoriesIsMutable()
      {
        if ((0x1 & this.bitField0_) != 1)
        {
          this.categories_ = new ArrayList(this.categories_);
          this.bitField0_ = (0x1 | this.bitField0_);
        }
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 10:
            Data.NotificationSettings.Category.Builder localBuilder = Data.NotificationSettings.Category.newBuilder();
            paramCodedInputStream.readMessage(localBuilder, paramExtensionRegistryLite);
            addCategories(localBuilder.buildPartial());
            break;
          case 18:
          }
          this.bitField0_ = (0x2 | this.bitField0_);
          this.emailAddress_ = paramCodedInputStream.readBytes();
        }
      }

      public final Builder addAllCategories(Iterable<? extends Data.NotificationSettings.Category> paramIterable)
      {
        ensureCategoriesIsMutable();
        GeneratedMessageLite.Builder.addAll(paramIterable, this.categories_);
        return this;
      }

      public final Builder addCategories(int paramInt, Data.NotificationSettings.Category.Builder paramBuilder)
      {
        ensureCategoriesIsMutable();
        this.categories_.add(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder addCategories(int paramInt, Data.NotificationSettings.Category paramCategory)
      {
        if (paramCategory == null)
          throw new NullPointerException();
        ensureCategoriesIsMutable();
        this.categories_.add(paramInt, paramCategory);
        return this;
      }

      public final Builder addCategories(Data.NotificationSettings.Category.Builder paramBuilder)
      {
        ensureCategoriesIsMutable();
        this.categories_.add(paramBuilder.build());
        return this;
      }

      public final Builder addCategories(Data.NotificationSettings.Category paramCategory)
      {
        if (paramCategory == null)
          throw new NullPointerException();
        ensureCategoriesIsMutable();
        this.categories_.add(paramCategory);
        return this;
      }

      public final Data.NotificationSettings build()
      {
        Data.NotificationSettings localNotificationSettings = buildPartial();
        if (!localNotificationSettings.isInitialized())
          throw new UninitializedMessageException();
        return localNotificationSettings;
      }

      public final Data.NotificationSettings buildPartial()
      {
        Data.NotificationSettings localNotificationSettings = new Data.NotificationSettings(this, (byte)0);
        int i = this.bitField0_;
        if ((0x1 & this.bitField0_) == 1)
        {
          this.categories_ = Collections.unmodifiableList(this.categories_);
          this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        }
        Data.NotificationSettings.access$51302(localNotificationSettings, this.categories_);
        int j = i & 0x2;
        int k = 0;
        if (j == 2)
          k = 1;
        Data.NotificationSettings.access$51402(localNotificationSettings, this.emailAddress_);
        Data.NotificationSettings.access$51502(localNotificationSettings, k);
        return localNotificationSettings;
      }

      public final Builder clear()
      {
        super.clear();
        this.categories_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.emailAddress_ = "";
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        return this;
      }

      public final Builder clearCategories()
      {
        this.categories_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        return this;
      }

      public final Builder clearEmailAddress()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.emailAddress_ = Data.NotificationSettings.getDefaultInstance().getEmailAddress();
        return this;
      }

      public final Data.NotificationSettings.Category getCategories(int paramInt)
      {
        return (Data.NotificationSettings.Category)this.categories_.get(paramInt);
      }

      public final int getCategoriesCount()
      {
        return this.categories_.size();
      }

      public final List<Data.NotificationSettings.Category> getCategoriesList()
      {
        return Collections.unmodifiableList(this.categories_);
      }

      public final Data.NotificationSettings getDefaultInstanceForType()
      {
        return Data.NotificationSettings.getDefaultInstance();
      }

      public final String getEmailAddress()
      {
        Object localObject = this.emailAddress_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.emailAddress_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final boolean hasEmailAddress()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Data.NotificationSettings paramNotificationSettings)
      {
        if (paramNotificationSettings == Data.NotificationSettings.getDefaultInstance());
        label71: label90: 
        while (true)
        {
          return this;
          if (!paramNotificationSettings.categories_.isEmpty())
          {
            if (!this.categories_.isEmpty())
              break label71;
            this.categories_ = paramNotificationSettings.categories_;
            this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
          }
          while (true)
          {
            if (!paramNotificationSettings.hasEmailAddress())
              break label90;
            setEmailAddress(paramNotificationSettings.getEmailAddress());
            break;
            ensureCategoriesIsMutable();
            this.categories_.addAll(paramNotificationSettings.categories_);
          }
        }
      }

      public final Builder setCategories(int paramInt, Data.NotificationSettings.Category.Builder paramBuilder)
      {
        ensureCategoriesIsMutable();
        this.categories_.set(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder setCategories(int paramInt, Data.NotificationSettings.Category paramCategory)
      {
        if (paramCategory == null)
          throw new NullPointerException();
        ensureCategoriesIsMutable();
        this.categories_.set(paramInt, paramCategory);
        return this;
      }

      public final Builder setEmailAddress(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x2 | this.bitField0_);
        this.emailAddress_ = paramString;
        return this;
      }
    }

    public static final class Category extends GeneratedMessageLite
      implements Data.NotificationSettings.CategoryOrBuilder
    {
      private static final Category defaultInstance;
      private static final long serialVersionUID;
      private int bitField0_;
      private Object description_;
      private byte memoizedIsInitialized = -1;
      private int memoizedSerializedSize = -1;
      private List<Data.NotificationSettings.Setting> settings_;

      static
      {
        Category localCategory = new Category();
        defaultInstance = localCategory;
        localCategory.description_ = "";
        localCategory.settings_ = Collections.emptyList();
      }

      private Category()
      {
      }

      private Category(Builder paramBuilder)
      {
        super();
      }

      public static Category getDefaultInstance()
      {
        return defaultInstance;
      }

      private ByteString getDescriptionBytes()
      {
        Object localObject = this.description_;
        ByteString localByteString;
        if ((localObject instanceof String))
        {
          localByteString = ByteString.copyFromUtf8((String)localObject);
          this.description_ = localByteString;
        }
        while (true)
        {
          return localByteString;
          localByteString = (ByteString)localObject;
        }
      }

      public static Builder newBuilder()
      {
        return Builder.access$50500();
      }

      public final Category getDefaultInstanceForType()
      {
        return defaultInstance;
      }

      public final String getDescription()
      {
        Object localObject1 = this.description_;
        if ((localObject1 instanceof String));
        String str;
        for (Object localObject2 = (String)localObject1; ; localObject2 = str)
        {
          return localObject2;
          ByteString localByteString = (ByteString)localObject1;
          str = localByteString.toStringUtf8();
          if (Internal.isValidUtf8(localByteString))
            this.description_ = str;
        }
      }

      public final int getSerializedSize()
      {
        int i = this.memoizedSerializedSize;
        if (i != -1);
        int k;
        for (int n = i; ; n = k)
        {
          return n;
          int j = 0x1 & this.bitField0_;
          k = 0;
          if (j == 1)
            k = 0 + CodedOutputStream.computeBytesSize(1, getDescriptionBytes());
          for (int m = 0; m < this.settings_.size(); m++)
            k += CodedOutputStream.computeMessageSize(2, (MessageLite)this.settings_.get(m));
          this.memoizedSerializedSize = k;
        }
      }

      public final Data.NotificationSettings.Setting getSettings(int paramInt)
      {
        return (Data.NotificationSettings.Setting)this.settings_.get(paramInt);
      }

      public final int getSettingsCount()
      {
        return this.settings_.size();
      }

      public final List<Data.NotificationSettings.Setting> getSettingsList()
      {
        return this.settings_;
      }

      public final Data.NotificationSettings.SettingOrBuilder getSettingsOrBuilder(int paramInt)
      {
        return (Data.NotificationSettings.SettingOrBuilder)this.settings_.get(paramInt);
      }

      public final List<? extends Data.NotificationSettings.SettingOrBuilder> getSettingsOrBuilderList()
      {
        return this.settings_;
      }

      public final boolean hasDescription()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean isInitialized()
      {
        int i = 1;
        int j = this.memoizedIsInitialized;
        if (j != -1)
          if (j != i);
        while (true)
        {
          return i;
          i = 0;
          continue;
          this.memoizedIsInitialized = i;
        }
      }

      protected final Object writeReplace()
        throws ObjectStreamException
      {
        return super.writeReplace();
      }

      public final void writeTo(CodedOutputStream paramCodedOutputStream)
        throws IOException
      {
        getSerializedSize();
        if ((0x1 & this.bitField0_) == 1)
          paramCodedOutputStream.writeBytes(1, getDescriptionBytes());
        for (int i = 0; i < this.settings_.size(); i++)
          paramCodedOutputStream.writeMessage(2, (MessageLite)this.settings_.get(i));
      }

      public static final class Builder extends GeneratedMessageLite.Builder<Data.NotificationSettings.Category, Builder>
        implements Data.NotificationSettings.CategoryOrBuilder
      {
        private int bitField0_;
        private Object description_ = "";
        private List<Data.NotificationSettings.Setting> settings_ = Collections.emptyList();

        private Builder clone()
        {
          return new Builder().mergeFrom(buildPartial());
        }

        private void ensureSettingsIsMutable()
        {
          if ((0x2 & this.bitField0_) != 2)
          {
            this.settings_ = new ArrayList(this.settings_);
            this.bitField0_ = (0x2 | this.bitField0_);
          }
        }

        private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
          throws IOException
        {
          while (true)
          {
            int i = paramCodedInputStream.readTag();
            switch (i)
            {
            default:
              if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
                continue;
            case 0:
              return this;
            case 10:
              this.bitField0_ = (0x1 | this.bitField0_);
              this.description_ = paramCodedInputStream.readBytes();
              break;
            case 18:
            }
            Data.NotificationSettings.Setting.Builder localBuilder = Data.NotificationSettings.Setting.newBuilder();
            paramCodedInputStream.readMessage(localBuilder, paramExtensionRegistryLite);
            addSettings(localBuilder.buildPartial());
          }
        }

        public final Builder addAllSettings(Iterable<? extends Data.NotificationSettings.Setting> paramIterable)
        {
          ensureSettingsIsMutable();
          GeneratedMessageLite.Builder.addAll(paramIterable, this.settings_);
          return this;
        }

        public final Builder addSettings(int paramInt, Data.NotificationSettings.Setting.Builder paramBuilder)
        {
          ensureSettingsIsMutable();
          this.settings_.add(paramInt, paramBuilder.build());
          return this;
        }

        public final Builder addSettings(int paramInt, Data.NotificationSettings.Setting paramSetting)
        {
          if (paramSetting == null)
            throw new NullPointerException();
          ensureSettingsIsMutable();
          this.settings_.add(paramInt, paramSetting);
          return this;
        }

        public final Builder addSettings(Data.NotificationSettings.Setting.Builder paramBuilder)
        {
          ensureSettingsIsMutable();
          this.settings_.add(paramBuilder.build());
          return this;
        }

        public final Builder addSettings(Data.NotificationSettings.Setting paramSetting)
        {
          if (paramSetting == null)
            throw new NullPointerException();
          ensureSettingsIsMutable();
          this.settings_.add(paramSetting);
          return this;
        }

        public final Data.NotificationSettings.Category build()
        {
          Data.NotificationSettings.Category localCategory = buildPartial();
          if (!localCategory.isInitialized())
            throw new UninitializedMessageException();
          return localCategory;
        }

        public final Data.NotificationSettings.Category buildPartial()
        {
          Data.NotificationSettings.Category localCategory = new Data.NotificationSettings.Category(this, (byte)0);
          int i = 0x1 & this.bitField0_;
          int j = 0;
          if (i == 1)
            j = 1;
          Data.NotificationSettings.Category.access$50702(localCategory, this.description_);
          if ((0x2 & this.bitField0_) == 2)
          {
            this.settings_ = Collections.unmodifiableList(this.settings_);
            this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
          }
          Data.NotificationSettings.Category.access$50802(localCategory, this.settings_);
          Data.NotificationSettings.Category.access$50902(localCategory, j);
          return localCategory;
        }

        public final Builder clear()
        {
          super.clear();
          this.description_ = "";
          this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
          this.settings_ = Collections.emptyList();
          this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
          return this;
        }

        public final Builder clearDescription()
        {
          this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
          this.description_ = Data.NotificationSettings.Category.getDefaultInstance().getDescription();
          return this;
        }

        public final Builder clearSettings()
        {
          this.settings_ = Collections.emptyList();
          this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
          return this;
        }

        public final Data.NotificationSettings.Category getDefaultInstanceForType()
        {
          return Data.NotificationSettings.Category.getDefaultInstance();
        }

        public final String getDescription()
        {
          Object localObject = this.description_;
          String str;
          if (!(localObject instanceof String))
          {
            str = ((ByteString)localObject).toStringUtf8();
            this.description_ = str;
          }
          while (true)
          {
            return str;
            str = (String)localObject;
          }
        }

        public final Data.NotificationSettings.Setting getSettings(int paramInt)
        {
          return (Data.NotificationSettings.Setting)this.settings_.get(paramInt);
        }

        public final int getSettingsCount()
        {
          return this.settings_.size();
        }

        public final List<Data.NotificationSettings.Setting> getSettingsList()
        {
          return Collections.unmodifiableList(this.settings_);
        }

        public final boolean hasDescription()
        {
          int i = 1;
          if ((0x1 & this.bitField0_) == i);
          while (true)
          {
            return i;
            int j = 0;
          }
        }

        public final boolean isInitialized()
        {
          return true;
        }

        public final Builder mergeFrom(Data.NotificationSettings.Category paramCategory)
        {
          if (paramCategory == Data.NotificationSettings.Category.getDefaultInstance());
          while (true)
          {
            return this;
            if (paramCategory.hasDescription())
              setDescription(paramCategory.getDescription());
            if (!paramCategory.settings_.isEmpty())
              if (this.settings_.isEmpty())
              {
                this.settings_ = paramCategory.settings_;
                this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
              }
              else
              {
                ensureSettingsIsMutable();
                this.settings_.addAll(paramCategory.settings_);
              }
          }
        }

        public final Builder setDescription(String paramString)
        {
          if (paramString == null)
            throw new NullPointerException();
          this.bitField0_ = (0x1 | this.bitField0_);
          this.description_ = paramString;
          return this;
        }

        public final Builder setSettings(int paramInt, Data.NotificationSettings.Setting.Builder paramBuilder)
        {
          ensureSettingsIsMutable();
          this.settings_.set(paramInt, paramBuilder.build());
          return this;
        }

        public final Builder setSettings(int paramInt, Data.NotificationSettings.Setting paramSetting)
        {
          if (paramSetting == null)
            throw new NullPointerException();
          ensureSettingsIsMutable();
          this.settings_.set(paramInt, paramSetting);
          return this;
        }
      }
    }

    public static abstract interface CategoryOrBuilder extends MessageLiteOrBuilder
    {
      public abstract String getDescription();

      public abstract Data.NotificationSettings.Setting getSettings(int paramInt);

      public abstract int getSettingsCount();

      public abstract List<Data.NotificationSettings.Setting> getSettingsList();

      public abstract boolean hasDescription();
    }

    public static final class Setting extends GeneratedMessageLite
      implements Data.NotificationSettings.SettingOrBuilder
    {
      private static final Setting defaultInstance;
      private static final long serialVersionUID;
      private int bitField0_;
      private Object description_;
      private boolean emailEnabled_;
      private boolean enabled_;
      private byte memoizedIsInitialized = -1;
      private int memoizedSerializedSize = -1;
      private Object type_;

      static
      {
        Setting localSetting = new Setting();
        defaultInstance = localSetting;
        localSetting.type_ = "";
        localSetting.description_ = "";
        localSetting.emailEnabled_ = false;
        localSetting.enabled_ = false;
      }

      private Setting()
      {
      }

      private Setting(Builder paramBuilder)
      {
        super();
      }

      public static Setting getDefaultInstance()
      {
        return defaultInstance;
      }

      private ByteString getDescriptionBytes()
      {
        Object localObject = this.description_;
        ByteString localByteString;
        if ((localObject instanceof String))
        {
          localByteString = ByteString.copyFromUtf8((String)localObject);
          this.description_ = localByteString;
        }
        while (true)
        {
          return localByteString;
          localByteString = (ByteString)localObject;
        }
      }

      private ByteString getTypeBytes()
      {
        Object localObject = this.type_;
        ByteString localByteString;
        if ((localObject instanceof String))
        {
          localByteString = ByteString.copyFromUtf8((String)localObject);
          this.type_ = localByteString;
        }
        while (true)
        {
          return localByteString;
          localByteString = (ByteString)localObject;
        }
      }

      public static Builder newBuilder()
      {
        return Builder.access$49700();
      }

      public final Setting getDefaultInstanceForType()
      {
        return defaultInstance;
      }

      public final String getDescription()
      {
        Object localObject1 = this.description_;
        if ((localObject1 instanceof String));
        String str;
        for (Object localObject2 = (String)localObject1; ; localObject2 = str)
        {
          return localObject2;
          ByteString localByteString = (ByteString)localObject1;
          str = localByteString.toStringUtf8();
          if (Internal.isValidUtf8(localByteString))
            this.description_ = str;
        }
      }

      @Deprecated
      public final boolean getEmailEnabled()
      {
        return this.emailEnabled_;
      }

      public final boolean getEnabled()
      {
        return this.enabled_;
      }

      public final int getSerializedSize()
      {
        int i = this.memoizedSerializedSize;
        if (i != -1);
        int k;
        for (int m = i; ; m = k)
        {
          return m;
          int j = 0x1 & this.bitField0_;
          k = 0;
          if (j == 1)
            k = 0 + CodedOutputStream.computeBytesSize(1, getTypeBytes());
          if ((0x2 & this.bitField0_) == 2)
            k += CodedOutputStream.computeBytesSize(2, getDescriptionBytes());
          if ((0x4 & this.bitField0_) == 4)
            k += CodedOutputStream.computeBoolSize(3, this.emailEnabled_);
          if ((0x8 & this.bitField0_) == 8)
            k += CodedOutputStream.computeBoolSize(4, this.enabled_);
          this.memoizedSerializedSize = k;
        }
      }

      public final String getType()
      {
        Object localObject1 = this.type_;
        if ((localObject1 instanceof String));
        String str;
        for (Object localObject2 = (String)localObject1; ; localObject2 = str)
        {
          return localObject2;
          ByteString localByteString = (ByteString)localObject1;
          str = localByteString.toStringUtf8();
          if (Internal.isValidUtf8(localByteString))
            this.type_ = str;
        }
      }

      public final boolean hasDescription()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      @Deprecated
      public final boolean hasEmailEnabled()
      {
        if ((0x4 & this.bitField0_) == 4);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasEnabled()
      {
        if ((0x8 & this.bitField0_) == 8);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasType()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean isInitialized()
      {
        int i = 1;
        int j = this.memoizedIsInitialized;
        if (j != -1)
          if (j != i);
        while (true)
        {
          return i;
          i = 0;
          continue;
          this.memoizedIsInitialized = i;
        }
      }

      protected final Object writeReplace()
        throws ObjectStreamException
      {
        return super.writeReplace();
      }

      public final void writeTo(CodedOutputStream paramCodedOutputStream)
        throws IOException
      {
        getSerializedSize();
        if ((0x1 & this.bitField0_) == 1)
          paramCodedOutputStream.writeBytes(1, getTypeBytes());
        if ((0x2 & this.bitField0_) == 2)
          paramCodedOutputStream.writeBytes(2, getDescriptionBytes());
        if ((0x4 & this.bitField0_) == 4)
          paramCodedOutputStream.writeBool(3, this.emailEnabled_);
        if ((0x8 & this.bitField0_) == 8)
          paramCodedOutputStream.writeBool(4, this.enabled_);
      }

      public static final class Builder extends GeneratedMessageLite.Builder<Data.NotificationSettings.Setting, Builder>
        implements Data.NotificationSettings.SettingOrBuilder
      {
        private int bitField0_;
        private Object description_ = "";
        private boolean emailEnabled_;
        private boolean enabled_;
        private Object type_ = "";

        private Builder clone()
        {
          return new Builder().mergeFrom(buildPartial());
        }

        private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
          throws IOException
        {
          while (true)
          {
            int i = paramCodedInputStream.readTag();
            switch (i)
            {
            default:
              if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
                continue;
            case 0:
              return this;
            case 10:
              this.bitField0_ = (0x1 | this.bitField0_);
              this.type_ = paramCodedInputStream.readBytes();
              break;
            case 18:
              this.bitField0_ = (0x2 | this.bitField0_);
              this.description_ = paramCodedInputStream.readBytes();
              break;
            case 24:
              this.bitField0_ = (0x4 | this.bitField0_);
              this.emailEnabled_ = paramCodedInputStream.readBool();
              break;
            case 32:
            }
            this.bitField0_ = (0x8 | this.bitField0_);
            this.enabled_ = paramCodedInputStream.readBool();
          }
        }

        public final Data.NotificationSettings.Setting build()
        {
          Data.NotificationSettings.Setting localSetting = buildPartial();
          if (!localSetting.isInitialized())
            throw new UninitializedMessageException();
          return localSetting;
        }

        public final Data.NotificationSettings.Setting buildPartial()
        {
          Data.NotificationSettings.Setting localSetting = new Data.NotificationSettings.Setting(this, (byte)0);
          int i = this.bitField0_;
          int j = i & 0x1;
          int k = 0;
          if (j == 1)
            k = 1;
          Data.NotificationSettings.Setting.access$49902(localSetting, this.type_);
          if ((i & 0x2) == 2)
            k |= 2;
          Data.NotificationSettings.Setting.access$50002(localSetting, this.description_);
          if ((i & 0x4) == 4)
            k |= 4;
          Data.NotificationSettings.Setting.access$50102(localSetting, this.emailEnabled_);
          if ((i & 0x8) == 8)
            k |= 8;
          Data.NotificationSettings.Setting.access$50202(localSetting, this.enabled_);
          Data.NotificationSettings.Setting.access$50302(localSetting, k);
          return localSetting;
        }

        public final Builder clear()
        {
          super.clear();
          this.type_ = "";
          this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
          this.description_ = "";
          this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
          this.emailEnabled_ = false;
          this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
          this.enabled_ = false;
          this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
          return this;
        }

        public final Builder clearDescription()
        {
          this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
          this.description_ = Data.NotificationSettings.Setting.getDefaultInstance().getDescription();
          return this;
        }

        @Deprecated
        public final Builder clearEmailEnabled()
        {
          this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
          this.emailEnabled_ = false;
          return this;
        }

        public final Builder clearEnabled()
        {
          this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
          this.enabled_ = false;
          return this;
        }

        public final Builder clearType()
        {
          this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
          this.type_ = Data.NotificationSettings.Setting.getDefaultInstance().getType();
          return this;
        }

        public final Data.NotificationSettings.Setting getDefaultInstanceForType()
        {
          return Data.NotificationSettings.Setting.getDefaultInstance();
        }

        public final String getDescription()
        {
          Object localObject = this.description_;
          String str;
          if (!(localObject instanceof String))
          {
            str = ((ByteString)localObject).toStringUtf8();
            this.description_ = str;
          }
          while (true)
          {
            return str;
            str = (String)localObject;
          }
        }

        @Deprecated
        public final boolean getEmailEnabled()
        {
          return this.emailEnabled_;
        }

        public final boolean getEnabled()
        {
          return this.enabled_;
        }

        public final String getType()
        {
          Object localObject = this.type_;
          String str;
          if (!(localObject instanceof String))
          {
            str = ((ByteString)localObject).toStringUtf8();
            this.type_ = str;
          }
          while (true)
          {
            return str;
            str = (String)localObject;
          }
        }

        public final boolean hasDescription()
        {
          if ((0x2 & this.bitField0_) == 2);
          for (boolean bool = true; ; bool = false)
            return bool;
        }

        @Deprecated
        public final boolean hasEmailEnabled()
        {
          if ((0x4 & this.bitField0_) == 4);
          for (boolean bool = true; ; bool = false)
            return bool;
        }

        public final boolean hasEnabled()
        {
          if ((0x8 & this.bitField0_) == 8);
          for (boolean bool = true; ; bool = false)
            return bool;
        }

        public final boolean hasType()
        {
          int i = 1;
          if ((0x1 & this.bitField0_) == i);
          while (true)
          {
            return i;
            int j = 0;
          }
        }

        public final boolean isInitialized()
        {
          return true;
        }

        public final Builder mergeFrom(Data.NotificationSettings.Setting paramSetting)
        {
          if (paramSetting == Data.NotificationSettings.Setting.getDefaultInstance());
          while (true)
          {
            return this;
            if (paramSetting.hasType())
              setType(paramSetting.getType());
            if (paramSetting.hasDescription())
              setDescription(paramSetting.getDescription());
            if (paramSetting.hasEmailEnabled())
              setEmailEnabled(paramSetting.getEmailEnabled());
            if (paramSetting.hasEnabled())
              setEnabled(paramSetting.getEnabled());
          }
        }

        public final Builder setDescription(String paramString)
        {
          if (paramString == null)
            throw new NullPointerException();
          this.bitField0_ = (0x2 | this.bitField0_);
          this.description_ = paramString;
          return this;
        }

        @Deprecated
        public final Builder setEmailEnabled(boolean paramBoolean)
        {
          this.bitField0_ = (0x4 | this.bitField0_);
          this.emailEnabled_ = paramBoolean;
          return this;
        }

        public final Builder setEnabled(boolean paramBoolean)
        {
          this.bitField0_ = (0x8 | this.bitField0_);
          this.enabled_ = paramBoolean;
          return this;
        }

        public final Builder setType(String paramString)
        {
          if (paramString == null)
            throw new NullPointerException();
          this.bitField0_ = (0x1 | this.bitField0_);
          this.type_ = paramString;
          return this;
        }
      }
    }

    public static abstract interface SettingOrBuilder extends MessageLiteOrBuilder
    {
      public abstract String getDescription();

      @Deprecated
      public abstract boolean getEmailEnabled();

      public abstract boolean getEnabled();

      public abstract String getType();

      public abstract boolean hasDescription();

      @Deprecated
      public abstract boolean hasEmailEnabled();

      public abstract boolean hasEnabled();

      public abstract boolean hasType();
    }
  }

  public static abstract interface NotificationSettingsOrBuilder extends MessageLiteOrBuilder
  {
    public abstract Data.NotificationSettings.Category getCategories(int paramInt);

    public abstract int getCategoriesCount();

    public abstract List<Data.NotificationSettings.Category> getCategoriesList();

    public abstract String getEmailAddress();

    public abstract boolean hasEmailAddress();
  }

  public static final class OutOfBoxAction extends GeneratedMessageLite
    implements Data.OutOfBoxActionOrBuilder
  {
    private static final OutOfBoxAction defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private int displayDelayMs_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private Object text_;
    private Type type_;
    private Object url_;

    static
    {
      OutOfBoxAction localOutOfBoxAction = new OutOfBoxAction();
      defaultInstance = localOutOfBoxAction;
      localOutOfBoxAction.type_ = Type.CHANGE_PHONE_NUMBER;
      localOutOfBoxAction.text_ = "";
      localOutOfBoxAction.url_ = "";
      localOutOfBoxAction.displayDelayMs_ = 0;
    }

    private OutOfBoxAction()
    {
    }

    private OutOfBoxAction(Builder paramBuilder)
    {
      super();
    }

    public static OutOfBoxAction getDefaultInstance()
    {
      return defaultInstance;
    }

    private ByteString getTextBytes()
    {
      Object localObject = this.text_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.text_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    private ByteString getUrlBytes()
    {
      Object localObject = this.url_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.url_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static Builder newBuilder()
    {
      return Builder.access$48900();
    }

    public static Builder newBuilder(OutOfBoxAction paramOutOfBoxAction)
    {
      return Builder.access$48900().mergeFrom(paramOutOfBoxAction);
    }

    public final OutOfBoxAction getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final int getDisplayDelayMs()
    {
      return this.displayDelayMs_;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeEnumSize(1, this.type_.getNumber());
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeBytesSize(2, getTextBytes());
        if ((0x4 & this.bitField0_) == 4)
          k += CodedOutputStream.computeBytesSize(3, getUrlBytes());
        if ((0x8 & this.bitField0_) == 8)
          k += CodedOutputStream.computeInt32Size(4, this.displayDelayMs_);
        this.memoizedSerializedSize = k;
      }
    }

    public final String getText()
    {
      Object localObject1 = this.text_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.text_ = str;
      }
    }

    public final Type getType()
    {
      return this.type_;
    }

    public final String getUrl()
    {
      Object localObject1 = this.url_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.url_ = str;
      }
    }

    public final boolean hasDisplayDelayMs()
    {
      if ((0x8 & this.bitField0_) == 8);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasText()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasType()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean hasUrl()
    {
      if ((0x4 & this.bitField0_) == 4);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeEnum(1, this.type_.getNumber());
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeBytes(2, getTextBytes());
      if ((0x4 & this.bitField0_) == 4)
        paramCodedOutputStream.writeBytes(3, getUrlBytes());
      if ((0x8 & this.bitField0_) == 8)
        paramCodedOutputStream.writeInt32(4, this.displayDelayMs_);
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Data.OutOfBoxAction, Builder>
      implements Data.OutOfBoxActionOrBuilder
    {
      private int bitField0_;
      private int displayDelayMs_;
      private Object text_ = "";
      private Data.OutOfBoxAction.Type type_ = Data.OutOfBoxAction.Type.CHANGE_PHONE_NUMBER;
      private Object url_ = "";

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 8:
            Data.OutOfBoxAction.Type localType = Data.OutOfBoxAction.Type.valueOf(paramCodedInputStream.readEnum());
            if (localType == null)
              continue;
            this.bitField0_ = (0x1 | this.bitField0_);
            this.type_ = localType;
            break;
          case 18:
            this.bitField0_ = (0x2 | this.bitField0_);
            this.text_ = paramCodedInputStream.readBytes();
            break;
          case 26:
            this.bitField0_ = (0x4 | this.bitField0_);
            this.url_ = paramCodedInputStream.readBytes();
            break;
          case 32:
          }
          this.bitField0_ = (0x8 | this.bitField0_);
          this.displayDelayMs_ = paramCodedInputStream.readInt32();
        }
      }

      public final Data.OutOfBoxAction build()
      {
        Data.OutOfBoxAction localOutOfBoxAction = buildPartial();
        if (!localOutOfBoxAction.isInitialized())
          throw new UninitializedMessageException();
        return localOutOfBoxAction;
      }

      public final Data.OutOfBoxAction buildPartial()
      {
        Data.OutOfBoxAction localOutOfBoxAction = new Data.OutOfBoxAction(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Data.OutOfBoxAction.access$49102(localOutOfBoxAction, this.type_);
        if ((i & 0x2) == 2)
          k |= 2;
        Data.OutOfBoxAction.access$49202(localOutOfBoxAction, this.text_);
        if ((i & 0x4) == 4)
          k |= 4;
        Data.OutOfBoxAction.access$49302(localOutOfBoxAction, this.url_);
        if ((i & 0x8) == 8)
          k |= 8;
        Data.OutOfBoxAction.access$49402(localOutOfBoxAction, this.displayDelayMs_);
        Data.OutOfBoxAction.access$49502(localOutOfBoxAction, k);
        return localOutOfBoxAction;
      }

      public final Builder clear()
      {
        super.clear();
        this.type_ = Data.OutOfBoxAction.Type.CHANGE_PHONE_NUMBER;
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.text_ = "";
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.url_ = "";
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.displayDelayMs_ = 0;
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        return this;
      }

      public final Builder clearDisplayDelayMs()
      {
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        this.displayDelayMs_ = 0;
        return this;
      }

      public final Builder clearText()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.text_ = Data.OutOfBoxAction.getDefaultInstance().getText();
        return this;
      }

      public final Builder clearType()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.type_ = Data.OutOfBoxAction.Type.CHANGE_PHONE_NUMBER;
        return this;
      }

      public final Builder clearUrl()
      {
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.url_ = Data.OutOfBoxAction.getDefaultInstance().getUrl();
        return this;
      }

      public final Data.OutOfBoxAction getDefaultInstanceForType()
      {
        return Data.OutOfBoxAction.getDefaultInstance();
      }

      public final int getDisplayDelayMs()
      {
        return this.displayDelayMs_;
      }

      public final String getText()
      {
        Object localObject = this.text_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.text_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final Data.OutOfBoxAction.Type getType()
      {
        return this.type_;
      }

      public final String getUrl()
      {
        Object localObject = this.url_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.url_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final boolean hasDisplayDelayMs()
      {
        if ((0x8 & this.bitField0_) == 8);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasText()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasType()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean hasUrl()
      {
        if ((0x4 & this.bitField0_) == 4);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Data.OutOfBoxAction paramOutOfBoxAction)
      {
        if (paramOutOfBoxAction == Data.OutOfBoxAction.getDefaultInstance());
        while (true)
        {
          return this;
          if (paramOutOfBoxAction.hasType())
            setType(paramOutOfBoxAction.getType());
          if (paramOutOfBoxAction.hasText())
            setText(paramOutOfBoxAction.getText());
          if (paramOutOfBoxAction.hasUrl())
            setUrl(paramOutOfBoxAction.getUrl());
          if (paramOutOfBoxAction.hasDisplayDelayMs())
            setDisplayDelayMs(paramOutOfBoxAction.getDisplayDelayMs());
        }
      }

      public final Builder setDisplayDelayMs(int paramInt)
      {
        this.bitField0_ = (0x8 | this.bitField0_);
        this.displayDelayMs_ = paramInt;
        return this;
      }

      public final Builder setText(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x2 | this.bitField0_);
        this.text_ = paramString;
        return this;
      }

      public final Builder setType(Data.OutOfBoxAction.Type paramType)
      {
        if (paramType == null)
          throw new NullPointerException();
        this.bitField0_ = (0x1 | this.bitField0_);
        this.type_ = paramType;
        return this;
      }

      public final Builder setUrl(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x4 | this.bitField0_);
        this.url_ = paramString;
        return this;
      }
    }

    public static enum Type
      implements Internal.EnumLite
    {
      private static Internal.EnumLiteMap<Type> internalValueMap = new Internal.EnumLiteMap()
      {
      };
      private final int value;

      static
      {
        EDIT_NAME = new Type("EDIT_NAME", 5, 6);
        URL = new Type("URL", 6, 7);
        BACK = new Type("BACK", 7, 8);
        CAMERASYNC = new Type("CAMERASYNC", 8, 9);
        Type[] arrayOfType = new Type[9];
        arrayOfType[0] = CHANGE_PHONE_NUMBER;
        arrayOfType[1] = CLOSE;
        arrayOfType[2] = CONTINUE;
        arrayOfType[3] = CREATE;
        arrayOfType[4] = SKIP_PHONE_VERIFICATION;
        arrayOfType[5] = EDIT_NAME;
        arrayOfType[6] = URL;
        arrayOfType[7] = BACK;
        arrayOfType[8] = CAMERASYNC;
      }

      private Type(int paramInt1, int paramInt2)
      {
        this.value = paramInt1;
      }

      public static Type valueOf(int paramInt)
      {
        Type localType;
        switch (paramInt)
        {
        default:
          localType = null;
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
        case 6:
        case 7:
        case 8:
        case 9:
        }
        while (true)
        {
          return localType;
          localType = CHANGE_PHONE_NUMBER;
          continue;
          localType = CLOSE;
          continue;
          localType = CONTINUE;
          continue;
          localType = CREATE;
          continue;
          localType = SKIP_PHONE_VERIFICATION;
          continue;
          localType = EDIT_NAME;
          continue;
          localType = URL;
          continue;
          localType = BACK;
          continue;
          localType = CAMERASYNC;
        }
      }

      public final int getNumber()
      {
        return this.value;
      }
    }
  }

  public static abstract interface OutOfBoxActionOrBuilder extends MessageLiteOrBuilder
  {
    public abstract int getDisplayDelayMs();

    public abstract String getText();

    public abstract Data.OutOfBoxAction.Type getType();

    public abstract String getUrl();

    public abstract boolean hasDisplayDelayMs();

    public abstract boolean hasText();

    public abstract boolean hasType();

    public abstract boolean hasUrl();
  }

  public static final class OutOfBoxDialog extends GeneratedMessageLite
    implements Data.OutOfBoxDialogOrBuilder
  {
    private static final OutOfBoxDialog defaultInstance;
    private static final long serialVersionUID;
    private List<Data.OutOfBoxAction> action_;
    private int bitField0_;
    private Data.OutOfBoxError error_;
    private Object header_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private Object text_;

    static
    {
      OutOfBoxDialog localOutOfBoxDialog = new OutOfBoxDialog();
      defaultInstance = localOutOfBoxDialog;
      localOutOfBoxDialog.action_ = Collections.emptyList();
      localOutOfBoxDialog.header_ = "";
      localOutOfBoxDialog.text_ = "";
      localOutOfBoxDialog.error_ = Data.OutOfBoxError.getDefaultInstance();
    }

    private OutOfBoxDialog()
    {
    }

    private OutOfBoxDialog(Builder paramBuilder)
    {
      super();
    }

    public static OutOfBoxDialog getDefaultInstance()
    {
      return defaultInstance;
    }

    private ByteString getHeaderBytes()
    {
      Object localObject = this.header_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.header_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    private ByteString getTextBytes()
    {
      Object localObject = this.text_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.text_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static Builder newBuilder()
    {
      return Builder.access$48100();
    }

    public static Builder newBuilder(OutOfBoxDialog paramOutOfBoxDialog)
    {
      return Builder.access$48100().mergeFrom(paramOutOfBoxDialog);
    }

    public final Data.OutOfBoxAction getAction(int paramInt)
    {
      return (Data.OutOfBoxAction)this.action_.get(paramInt);
    }

    public final int getActionCount()
    {
      return this.action_.size();
    }

    public final List<Data.OutOfBoxAction> getActionList()
    {
      return this.action_;
    }

    public final Data.OutOfBoxActionOrBuilder getActionOrBuilder(int paramInt)
    {
      return (Data.OutOfBoxActionOrBuilder)this.action_.get(paramInt);
    }

    public final List<? extends Data.OutOfBoxActionOrBuilder> getActionOrBuilderList()
    {
      return this.action_;
    }

    public final OutOfBoxDialog getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final Data.OutOfBoxError getError()
    {
      return this.error_;
    }

    public final String getHeader()
    {
      Object localObject1 = this.header_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.header_ = str;
      }
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int j;
      for (int m = i; ; m = j)
      {
        return m;
        j = 0;
        for (int k = 0; k < this.action_.size(); k++)
          j += CodedOutputStream.computeMessageSize(1, (MessageLite)this.action_.get(k));
        if ((0x1 & this.bitField0_) == 1)
          j += CodedOutputStream.computeBytesSize(2, getHeaderBytes());
        if ((0x2 & this.bitField0_) == 2)
          j += CodedOutputStream.computeBytesSize(3, getTextBytes());
        if ((0x4 & this.bitField0_) == 4)
          j += CodedOutputStream.computeMessageSize(4, this.error_);
        this.memoizedSerializedSize = j;
      }
    }

    public final String getText()
    {
      Object localObject1 = this.text_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.text_ = str;
      }
    }

    public final boolean hasError()
    {
      if ((0x4 & this.bitField0_) == 4);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasHeader()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean hasText()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      for (int i = 0; i < this.action_.size(); i++)
        paramCodedOutputStream.writeMessage(1, (MessageLite)this.action_.get(i));
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeBytes(2, getHeaderBytes());
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeBytes(3, getTextBytes());
      if ((0x4 & this.bitField0_) == 4)
        paramCodedOutputStream.writeMessage(4, this.error_);
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Data.OutOfBoxDialog, Builder>
      implements Data.OutOfBoxDialogOrBuilder
    {
      private List<Data.OutOfBoxAction> action_ = Collections.emptyList();
      private int bitField0_;
      private Data.OutOfBoxError error_ = Data.OutOfBoxError.getDefaultInstance();
      private Object header_ = "";
      private Object text_ = "";

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private void ensureActionIsMutable()
      {
        if ((0x1 & this.bitField0_) != 1)
        {
          this.action_ = new ArrayList(this.action_);
          this.bitField0_ = (0x1 | this.bitField0_);
        }
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 10:
            Data.OutOfBoxAction.Builder localBuilder1 = Data.OutOfBoxAction.newBuilder();
            paramCodedInputStream.readMessage(localBuilder1, paramExtensionRegistryLite);
            addAction(localBuilder1.buildPartial());
            break;
          case 18:
            this.bitField0_ = (0x2 | this.bitField0_);
            this.header_ = paramCodedInputStream.readBytes();
            break;
          case 26:
            this.bitField0_ = (0x4 | this.bitField0_);
            this.text_ = paramCodedInputStream.readBytes();
            break;
          case 34:
          }
          Data.OutOfBoxError.Builder localBuilder = Data.OutOfBoxError.newBuilder();
          if (hasError())
            localBuilder.mergeFrom(getError());
          paramCodedInputStream.readMessage(localBuilder, paramExtensionRegistryLite);
          setError(localBuilder.buildPartial());
        }
      }

      public final Builder addAction(int paramInt, Data.OutOfBoxAction.Builder paramBuilder)
      {
        ensureActionIsMutable();
        this.action_.add(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder addAction(int paramInt, Data.OutOfBoxAction paramOutOfBoxAction)
      {
        if (paramOutOfBoxAction == null)
          throw new NullPointerException();
        ensureActionIsMutable();
        this.action_.add(paramInt, paramOutOfBoxAction);
        return this;
      }

      public final Builder addAction(Data.OutOfBoxAction.Builder paramBuilder)
      {
        ensureActionIsMutable();
        this.action_.add(paramBuilder.build());
        return this;
      }

      public final Builder addAction(Data.OutOfBoxAction paramOutOfBoxAction)
      {
        if (paramOutOfBoxAction == null)
          throw new NullPointerException();
        ensureActionIsMutable();
        this.action_.add(paramOutOfBoxAction);
        return this;
      }

      public final Builder addAllAction(Iterable<? extends Data.OutOfBoxAction> paramIterable)
      {
        ensureActionIsMutable();
        GeneratedMessageLite.Builder.addAll(paramIterable, this.action_);
        return this;
      }

      public final Data.OutOfBoxDialog build()
      {
        Data.OutOfBoxDialog localOutOfBoxDialog = buildPartial();
        if (!localOutOfBoxDialog.isInitialized())
          throw new UninitializedMessageException();
        return localOutOfBoxDialog;
      }

      public final Data.OutOfBoxDialog buildPartial()
      {
        Data.OutOfBoxDialog localOutOfBoxDialog = new Data.OutOfBoxDialog(this, (byte)0);
        int i = this.bitField0_;
        if ((0x1 & this.bitField0_) == 1)
        {
          this.action_ = Collections.unmodifiableList(this.action_);
          this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        }
        Data.OutOfBoxDialog.access$48302(localOutOfBoxDialog, this.action_);
        int j = i & 0x2;
        int k = 0;
        if (j == 2)
          k = 1;
        Data.OutOfBoxDialog.access$48402(localOutOfBoxDialog, this.header_);
        if ((i & 0x4) == 4)
          k |= 2;
        Data.OutOfBoxDialog.access$48502(localOutOfBoxDialog, this.text_);
        if ((i & 0x8) == 8)
          k |= 4;
        Data.OutOfBoxDialog.access$48602(localOutOfBoxDialog, this.error_);
        Data.OutOfBoxDialog.access$48702(localOutOfBoxDialog, k);
        return localOutOfBoxDialog;
      }

      public final Builder clear()
      {
        super.clear();
        this.action_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.header_ = "";
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.text_ = "";
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.error_ = Data.OutOfBoxError.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        return this;
      }

      public final Builder clearAction()
      {
        this.action_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        return this;
      }

      public final Builder clearError()
      {
        this.error_ = Data.OutOfBoxError.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        return this;
      }

      public final Builder clearHeader()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.header_ = Data.OutOfBoxDialog.getDefaultInstance().getHeader();
        return this;
      }

      public final Builder clearText()
      {
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.text_ = Data.OutOfBoxDialog.getDefaultInstance().getText();
        return this;
      }

      public final Data.OutOfBoxAction getAction(int paramInt)
      {
        return (Data.OutOfBoxAction)this.action_.get(paramInt);
      }

      public final int getActionCount()
      {
        return this.action_.size();
      }

      public final List<Data.OutOfBoxAction> getActionList()
      {
        return Collections.unmodifiableList(this.action_);
      }

      public final Data.OutOfBoxDialog getDefaultInstanceForType()
      {
        return Data.OutOfBoxDialog.getDefaultInstance();
      }

      public final Data.OutOfBoxError getError()
      {
        return this.error_;
      }

      public final String getHeader()
      {
        Object localObject = this.header_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.header_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final String getText()
      {
        Object localObject = this.text_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.text_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final boolean hasError()
      {
        if ((0x8 & this.bitField0_) == 8);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasHeader()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasText()
      {
        if ((0x4 & this.bitField0_) == 4);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Data.OutOfBoxDialog paramOutOfBoxDialog)
      {
        if (paramOutOfBoxDialog == Data.OutOfBoxDialog.getDefaultInstance());
        label52: 
        do
        {
          return this;
          if (!paramOutOfBoxDialog.action_.isEmpty())
          {
            if (!this.action_.isEmpty())
              break;
            this.action_ = paramOutOfBoxDialog.action_;
            this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
          }
          if (paramOutOfBoxDialog.hasHeader())
            setHeader(paramOutOfBoxDialog.getHeader());
          if (paramOutOfBoxDialog.hasText())
            setText(paramOutOfBoxDialog.getText());
        }
        while (!paramOutOfBoxDialog.hasError());
        Data.OutOfBoxError localOutOfBoxError = paramOutOfBoxDialog.getError();
        if (((0x8 & this.bitField0_) == 8) && (this.error_ != Data.OutOfBoxError.getDefaultInstance()));
        for (this.error_ = Data.OutOfBoxError.newBuilder(this.error_).mergeFrom(localOutOfBoxError).buildPartial(); ; this.error_ = localOutOfBoxError)
        {
          this.bitField0_ = (0x8 | this.bitField0_);
          break;
          ensureActionIsMutable();
          this.action_.addAll(paramOutOfBoxDialog.action_);
          break label52;
        }
      }

      public final Builder setAction(int paramInt, Data.OutOfBoxAction.Builder paramBuilder)
      {
        ensureActionIsMutable();
        this.action_.set(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder setAction(int paramInt, Data.OutOfBoxAction paramOutOfBoxAction)
      {
        if (paramOutOfBoxAction == null)
          throw new NullPointerException();
        ensureActionIsMutable();
        this.action_.set(paramInt, paramOutOfBoxAction);
        return this;
      }

      public final Builder setError(Data.OutOfBoxError.Builder paramBuilder)
      {
        this.error_ = paramBuilder.build();
        this.bitField0_ = (0x8 | this.bitField0_);
        return this;
      }

      public final Builder setError(Data.OutOfBoxError paramOutOfBoxError)
      {
        if (paramOutOfBoxError == null)
          throw new NullPointerException();
        this.error_ = paramOutOfBoxError;
        this.bitField0_ = (0x8 | this.bitField0_);
        return this;
      }

      public final Builder setHeader(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x2 | this.bitField0_);
        this.header_ = paramString;
        return this;
      }

      public final Builder setText(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x4 | this.bitField0_);
        this.text_ = paramString;
        return this;
      }
    }
  }

  public static abstract interface OutOfBoxDialogOrBuilder extends MessageLiteOrBuilder
  {
    public abstract Data.OutOfBoxAction getAction(int paramInt);

    public abstract int getActionCount();

    public abstract List<Data.OutOfBoxAction> getActionList();

    public abstract Data.OutOfBoxError getError();

    public abstract String getHeader();

    public abstract String getText();

    public abstract boolean hasError();

    public abstract boolean hasHeader();

    public abstract boolean hasText();
  }

  public static final class OutOfBoxError extends GeneratedMessageLite
    implements Data.OutOfBoxErrorOrBuilder
  {
    private static final OutOfBoxError defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private Object text_;
    private Type type_;

    static
    {
      OutOfBoxError localOutOfBoxError = new OutOfBoxError();
      defaultInstance = localOutOfBoxError;
      localOutOfBoxError.type_ = Type.NO_AGE;
      localOutOfBoxError.text_ = "";
    }

    private OutOfBoxError()
    {
    }

    private OutOfBoxError(Builder paramBuilder)
    {
      super();
    }

    public static OutOfBoxError getDefaultInstance()
    {
      return defaultInstance;
    }

    private ByteString getTextBytes()
    {
      Object localObject = this.text_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.text_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static Builder newBuilder()
    {
      return Builder.access$47500();
    }

    public static Builder newBuilder(OutOfBoxError paramOutOfBoxError)
    {
      return Builder.access$47500().mergeFrom(paramOutOfBoxError);
    }

    public final OutOfBoxError getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeEnumSize(1, this.type_.getNumber());
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeBytesSize(2, getTextBytes());
        this.memoizedSerializedSize = k;
      }
    }

    public final String getText()
    {
      Object localObject1 = this.text_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.text_ = str;
      }
    }

    public final Type getType()
    {
      return this.type_;
    }

    public final boolean hasText()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasType()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeEnum(1, this.type_.getNumber());
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeBytes(2, getTextBytes());
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Data.OutOfBoxError, Builder>
      implements Data.OutOfBoxErrorOrBuilder
    {
      private int bitField0_;
      private Object text_ = "";
      private Data.OutOfBoxError.Type type_ = Data.OutOfBoxError.Type.NO_AGE;

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 8:
            Data.OutOfBoxError.Type localType = Data.OutOfBoxError.Type.valueOf(paramCodedInputStream.readEnum());
            if (localType == null)
              continue;
            this.bitField0_ = (0x1 | this.bitField0_);
            this.type_ = localType;
            break;
          case 18:
          }
          this.bitField0_ = (0x2 | this.bitField0_);
          this.text_ = paramCodedInputStream.readBytes();
        }
      }

      public final Data.OutOfBoxError build()
      {
        Data.OutOfBoxError localOutOfBoxError = buildPartial();
        if (!localOutOfBoxError.isInitialized())
          throw new UninitializedMessageException();
        return localOutOfBoxError;
      }

      public final Data.OutOfBoxError buildPartial()
      {
        Data.OutOfBoxError localOutOfBoxError = new Data.OutOfBoxError(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Data.OutOfBoxError.access$47702(localOutOfBoxError, this.type_);
        if ((i & 0x2) == 2)
          k |= 2;
        Data.OutOfBoxError.access$47802(localOutOfBoxError, this.text_);
        Data.OutOfBoxError.access$47902(localOutOfBoxError, k);
        return localOutOfBoxError;
      }

      public final Builder clear()
      {
        super.clear();
        this.type_ = Data.OutOfBoxError.Type.NO_AGE;
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.text_ = "";
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        return this;
      }

      public final Builder clearText()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.text_ = Data.OutOfBoxError.getDefaultInstance().getText();
        return this;
      }

      public final Builder clearType()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.type_ = Data.OutOfBoxError.Type.NO_AGE;
        return this;
      }

      public final Data.OutOfBoxError getDefaultInstanceForType()
      {
        return Data.OutOfBoxError.getDefaultInstance();
      }

      public final String getText()
      {
        Object localObject = this.text_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.text_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final Data.OutOfBoxError.Type getType()
      {
        return this.type_;
      }

      public final boolean hasText()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasType()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Data.OutOfBoxError paramOutOfBoxError)
      {
        if (paramOutOfBoxError == Data.OutOfBoxError.getDefaultInstance());
        while (true)
        {
          return this;
          if (paramOutOfBoxError.hasType())
            setType(paramOutOfBoxError.getType());
          if (paramOutOfBoxError.hasText())
            setText(paramOutOfBoxError.getText());
        }
      }

      public final Builder setText(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x2 | this.bitField0_);
        this.text_ = paramString;
        return this;
      }

      public final Builder setType(Data.OutOfBoxError.Type paramType)
      {
        if (paramType == null)
          throw new NullPointerException();
        this.bitField0_ = (0x1 | this.bitField0_);
        this.type_ = paramType;
        return this;
      }
    }

    public static enum Type
      implements Internal.EnumLite
    {
      public static final Type NAME_NOT_PUBLIC = BAD_NAME;
      private static Internal.EnumLiteMap<Type> internalValueMap = new Internal.EnumLiteMap()
      {
      };
      private final int value;

      static
      {
        BAD_BIRTHDAY = new Type("BAD_BIRTHDAY", 2, 3);
        NO_NAME = new Type("NO_NAME", 3, 4);
        BAD_NAME = new Type("BAD_NAME", 4, 5);
        DASHER_ADMIN_DISABLED = new Type("DASHER_ADMIN_DISABLED", 5, 6);
        NON_GA_PLUS_DASHER = new Type("NON_GA_PLUS_DASHER", 6, 7);
        PROFILE_BLOCKED = new Type("PROFILE_BLOCKED", 7, 8);
        BAD_PHONE_NUMBER = new Type("BAD_PHONE_NUMBER", 8, 9);
        CANT_VERIFY_PHONE_NUMBER = new Type("CANT_VERIFY_PHONE_NUMBER", 9, 10);
        PHONE_VERIFICATION_FAILED = new Type("PHONE_VERIFICATION_FAILED", 10, 11);
        SIGNUPS_DISABLED = new Type("SIGNUPS_DISABLED", 11, 12);
        OTHER = new Type("OTHER", 12, 13);
        REQUIRES_VERIFICATION = new Type("REQUIRES_VERIFICATION", 13, 14);
        UNDERAGE_BLOCKED = new Type("UNDERAGE_BLOCKED", 14, 15);
        Type[] arrayOfType = new Type[15];
        arrayOfType[0] = NO_AGE;
        arrayOfType[1] = UNDER_AGE;
        arrayOfType[2] = BAD_BIRTHDAY;
        arrayOfType[3] = NO_NAME;
        arrayOfType[4] = BAD_NAME;
        arrayOfType[5] = DASHER_ADMIN_DISABLED;
        arrayOfType[6] = NON_GA_PLUS_DASHER;
        arrayOfType[7] = PROFILE_BLOCKED;
        arrayOfType[8] = BAD_PHONE_NUMBER;
        arrayOfType[9] = CANT_VERIFY_PHONE_NUMBER;
        arrayOfType[10] = PHONE_VERIFICATION_FAILED;
        arrayOfType[11] = SIGNUPS_DISABLED;
        arrayOfType[12] = OTHER;
        arrayOfType[13] = REQUIRES_VERIFICATION;
        arrayOfType[14] = UNDERAGE_BLOCKED;
      }

      private Type(int paramInt1, int paramInt2)
      {
        this.value = paramInt1;
      }

      public static Type valueOf(int paramInt)
      {
        Type localType;
        switch (paramInt)
        {
        default:
          localType = null;
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
        case 6:
        case 7:
        case 8:
        case 9:
        case 10:
        case 11:
        case 12:
        case 13:
        case 14:
        case 15:
        }
        while (true)
        {
          return localType;
          localType = NO_AGE;
          continue;
          localType = UNDER_AGE;
          continue;
          localType = BAD_BIRTHDAY;
          continue;
          localType = NO_NAME;
          continue;
          localType = BAD_NAME;
          continue;
          localType = DASHER_ADMIN_DISABLED;
          continue;
          localType = NON_GA_PLUS_DASHER;
          continue;
          localType = PROFILE_BLOCKED;
          continue;
          localType = BAD_PHONE_NUMBER;
          continue;
          localType = CANT_VERIFY_PHONE_NUMBER;
          continue;
          localType = PHONE_VERIFICATION_FAILED;
          continue;
          localType = SIGNUPS_DISABLED;
          continue;
          localType = OTHER;
          continue;
          localType = REQUIRES_VERIFICATION;
          continue;
          localType = UNDERAGE_BLOCKED;
        }
      }

      public final int getNumber()
      {
        return this.value;
      }
    }
  }

  public static abstract interface OutOfBoxErrorOrBuilder extends MessageLiteOrBuilder
  {
    public abstract String getText();

    public abstract Data.OutOfBoxError.Type getType();

    public abstract boolean hasText();

    public abstract boolean hasType();
  }

  public static final class OutOfBoxField extends GeneratedMessageLite
    implements Data.OutOfBoxFieldOrBuilder
  {
    private static final OutOfBoxField defaultInstance;
    private static final long serialVersionUID;
    private Data.OutOfBoxAction action_;
    private int bitField0_;
    private Data.OutOfBoxError error_;
    private Data.OutOfBoxImageField image_;
    private Data.OutOfBoxInputField input_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private Data.OutOfBoxTextField text_;

    static
    {
      OutOfBoxField localOutOfBoxField = new OutOfBoxField();
      defaultInstance = localOutOfBoxField;
      localOutOfBoxField.text_ = Data.OutOfBoxTextField.getDefaultInstance();
      localOutOfBoxField.input_ = Data.OutOfBoxInputField.getDefaultInstance();
      localOutOfBoxField.error_ = Data.OutOfBoxError.getDefaultInstance();
      localOutOfBoxField.action_ = Data.OutOfBoxAction.getDefaultInstance();
      localOutOfBoxField.image_ = Data.OutOfBoxImageField.getDefaultInstance();
    }

    private OutOfBoxField()
    {
    }

    private OutOfBoxField(Builder paramBuilder)
    {
      super();
    }

    public static OutOfBoxField getDefaultInstance()
    {
      return defaultInstance;
    }

    public static Builder newBuilder()
    {
      return Builder.access$42600();
    }

    public final Data.OutOfBoxAction getAction()
    {
      return this.action_;
    }

    public final OutOfBoxField getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final Data.OutOfBoxError getError()
    {
      return this.error_;
    }

    public final Data.OutOfBoxImageField getImage()
    {
      return this.image_;
    }

    public final Data.OutOfBoxInputField getInput()
    {
      return this.input_;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeMessageSize(1, this.text_);
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeMessageSize(2, this.input_);
        if ((0x4 & this.bitField0_) == 4)
          k += CodedOutputStream.computeMessageSize(3, this.error_);
        if ((0x8 & this.bitField0_) == 8)
          k += CodedOutputStream.computeMessageSize(4, this.action_);
        if ((0x10 & this.bitField0_) == 16)
          k += CodedOutputStream.computeMessageSize(5, this.image_);
        this.memoizedSerializedSize = k;
      }
    }

    public final Data.OutOfBoxTextField getText()
    {
      return this.text_;
    }

    public final boolean hasAction()
    {
      if ((0x8 & this.bitField0_) == 8);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasError()
    {
      if ((0x4 & this.bitField0_) == 4);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasImage()
    {
      if ((0x10 & this.bitField0_) == 16);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasInput()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasText()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeMessage(1, this.text_);
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeMessage(2, this.input_);
      if ((0x4 & this.bitField0_) == 4)
        paramCodedOutputStream.writeMessage(3, this.error_);
      if ((0x8 & this.bitField0_) == 8)
        paramCodedOutputStream.writeMessage(4, this.action_);
      if ((0x10 & this.bitField0_) == 16)
        paramCodedOutputStream.writeMessage(5, this.image_);
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Data.OutOfBoxField, Builder>
      implements Data.OutOfBoxFieldOrBuilder
    {
      private Data.OutOfBoxAction action_ = Data.OutOfBoxAction.getDefaultInstance();
      private int bitField0_;
      private Data.OutOfBoxError error_ = Data.OutOfBoxError.getDefaultInstance();
      private Data.OutOfBoxImageField image_ = Data.OutOfBoxImageField.getDefaultInstance();
      private Data.OutOfBoxInputField input_ = Data.OutOfBoxInputField.getDefaultInstance();
      private Data.OutOfBoxTextField text_ = Data.OutOfBoxTextField.getDefaultInstance();

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 10:
            Data.OutOfBoxTextField.Builder localBuilder4 = Data.OutOfBoxTextField.newBuilder();
            if (hasText())
              localBuilder4.mergeFrom(getText());
            paramCodedInputStream.readMessage(localBuilder4, paramExtensionRegistryLite);
            setText(localBuilder4.buildPartial());
            break;
          case 18:
            Data.OutOfBoxInputField.Builder localBuilder3 = Data.OutOfBoxInputField.newBuilder();
            if (hasInput())
              localBuilder3.mergeFrom(getInput());
            paramCodedInputStream.readMessage(localBuilder3, paramExtensionRegistryLite);
            setInput(localBuilder3.buildPartial());
            break;
          case 26:
            Data.OutOfBoxError.Builder localBuilder2 = Data.OutOfBoxError.newBuilder();
            if (hasError())
              localBuilder2.mergeFrom(getError());
            paramCodedInputStream.readMessage(localBuilder2, paramExtensionRegistryLite);
            setError(localBuilder2.buildPartial());
            break;
          case 34:
            Data.OutOfBoxAction.Builder localBuilder1 = Data.OutOfBoxAction.newBuilder();
            if (hasAction())
              localBuilder1.mergeFrom(getAction());
            paramCodedInputStream.readMessage(localBuilder1, paramExtensionRegistryLite);
            setAction(localBuilder1.buildPartial());
            break;
          case 42:
          }
          Data.OutOfBoxImageField.Builder localBuilder = Data.OutOfBoxImageField.newBuilder();
          if (hasImage())
            localBuilder.mergeFrom(getImage());
          paramCodedInputStream.readMessage(localBuilder, paramExtensionRegistryLite);
          setImage(localBuilder.buildPartial());
        }
      }

      public final Data.OutOfBoxField build()
      {
        Data.OutOfBoxField localOutOfBoxField = buildPartial();
        if (!localOutOfBoxField.isInitialized())
          throw new UninitializedMessageException();
        return localOutOfBoxField;
      }

      public final Data.OutOfBoxField buildPartial()
      {
        Data.OutOfBoxField localOutOfBoxField = new Data.OutOfBoxField(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Data.OutOfBoxField.access$42802(localOutOfBoxField, this.text_);
        if ((i & 0x2) == 2)
          k |= 2;
        Data.OutOfBoxField.access$42902(localOutOfBoxField, this.input_);
        if ((i & 0x4) == 4)
          k |= 4;
        Data.OutOfBoxField.access$43002(localOutOfBoxField, this.error_);
        if ((i & 0x8) == 8)
          k |= 8;
        Data.OutOfBoxField.access$43102(localOutOfBoxField, this.action_);
        if ((i & 0x10) == 16)
          k |= 16;
        Data.OutOfBoxField.access$43202(localOutOfBoxField, this.image_);
        Data.OutOfBoxField.access$43302(localOutOfBoxField, k);
        return localOutOfBoxField;
      }

      public final Builder clear()
      {
        super.clear();
        this.text_ = Data.OutOfBoxTextField.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.input_ = Data.OutOfBoxInputField.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.error_ = Data.OutOfBoxError.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.action_ = Data.OutOfBoxAction.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        this.image_ = Data.OutOfBoxImageField.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        return this;
      }

      public final Builder clearAction()
      {
        this.action_ = Data.OutOfBoxAction.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        return this;
      }

      public final Builder clearError()
      {
        this.error_ = Data.OutOfBoxError.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        return this;
      }

      public final Builder clearImage()
      {
        this.image_ = Data.OutOfBoxImageField.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        return this;
      }

      public final Builder clearInput()
      {
        this.input_ = Data.OutOfBoxInputField.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        return this;
      }

      public final Builder clearText()
      {
        this.text_ = Data.OutOfBoxTextField.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        return this;
      }

      public final Data.OutOfBoxAction getAction()
      {
        return this.action_;
      }

      public final Data.OutOfBoxField getDefaultInstanceForType()
      {
        return Data.OutOfBoxField.getDefaultInstance();
      }

      public final Data.OutOfBoxError getError()
      {
        return this.error_;
      }

      public final Data.OutOfBoxImageField getImage()
      {
        return this.image_;
      }

      public final Data.OutOfBoxInputField getInput()
      {
        return this.input_;
      }

      public final Data.OutOfBoxTextField getText()
      {
        return this.text_;
      }

      public final boolean hasAction()
      {
        if ((0x8 & this.bitField0_) == 8);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasError()
      {
        if ((0x4 & this.bitField0_) == 4);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasImage()
      {
        if ((0x10 & this.bitField0_) == 16);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasInput()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasText()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Data.OutOfBoxField paramOutOfBoxField)
      {
        if (paramOutOfBoxField == Data.OutOfBoxField.getDefaultInstance());
        Data.OutOfBoxTextField localOutOfBoxTextField;
        label61: Data.OutOfBoxInputField localOutOfBoxInputField;
        label123: Data.OutOfBoxError localOutOfBoxError;
        label185: Data.OutOfBoxAction localOutOfBoxAction;
        label247: 
        do
        {
          return this;
          if (paramOutOfBoxField.hasText())
          {
            localOutOfBoxTextField = paramOutOfBoxField.getText();
            if (((0x1 & this.bitField0_) != 1) || (this.text_ == Data.OutOfBoxTextField.getDefaultInstance()))
              break;
            this.text_ = Data.OutOfBoxTextField.newBuilder(this.text_).mergeFrom(localOutOfBoxTextField).buildPartial();
            this.bitField0_ = (0x1 | this.bitField0_);
          }
          if (paramOutOfBoxField.hasInput())
          {
            localOutOfBoxInputField = paramOutOfBoxField.getInput();
            if (((0x2 & this.bitField0_) != 2) || (this.input_ == Data.OutOfBoxInputField.getDefaultInstance()))
              break label333;
            this.input_ = Data.OutOfBoxInputField.newBuilder(this.input_).mergeFrom(localOutOfBoxInputField).buildPartial();
            this.bitField0_ = (0x2 | this.bitField0_);
          }
          if (paramOutOfBoxField.hasError())
          {
            localOutOfBoxError = paramOutOfBoxField.getError();
            if (((0x4 & this.bitField0_) != 4) || (this.error_ == Data.OutOfBoxError.getDefaultInstance()))
              break label342;
            this.error_ = Data.OutOfBoxError.newBuilder(this.error_).mergeFrom(localOutOfBoxError).buildPartial();
            this.bitField0_ = (0x4 | this.bitField0_);
          }
          if (paramOutOfBoxField.hasAction())
          {
            localOutOfBoxAction = paramOutOfBoxField.getAction();
            if (((0x8 & this.bitField0_) != 8) || (this.action_ == Data.OutOfBoxAction.getDefaultInstance()))
              break label351;
            this.action_ = Data.OutOfBoxAction.newBuilder(this.action_).mergeFrom(localOutOfBoxAction).buildPartial();
            this.bitField0_ = (0x8 | this.bitField0_);
          }
        }
        while (!paramOutOfBoxField.hasImage());
        Data.OutOfBoxImageField localOutOfBoxImageField = paramOutOfBoxField.getImage();
        if (((0x10 & this.bitField0_) == 16) && (this.image_ != Data.OutOfBoxImageField.getDefaultInstance()));
        for (this.image_ = Data.OutOfBoxImageField.newBuilder(this.image_).mergeFrom(localOutOfBoxImageField).buildPartial(); ; this.image_ = localOutOfBoxImageField)
        {
          this.bitField0_ = (0x10 | this.bitField0_);
          break;
          this.text_ = localOutOfBoxTextField;
          break label61;
          label333: this.input_ = localOutOfBoxInputField;
          break label123;
          label342: this.error_ = localOutOfBoxError;
          break label185;
          label351: this.action_ = localOutOfBoxAction;
          break label247;
        }
      }

      public final Builder setAction(Data.OutOfBoxAction.Builder paramBuilder)
      {
        this.action_ = paramBuilder.build();
        this.bitField0_ = (0x8 | this.bitField0_);
        return this;
      }

      public final Builder setAction(Data.OutOfBoxAction paramOutOfBoxAction)
      {
        if (paramOutOfBoxAction == null)
          throw new NullPointerException();
        this.action_ = paramOutOfBoxAction;
        this.bitField0_ = (0x8 | this.bitField0_);
        return this;
      }

      public final Builder setError(Data.OutOfBoxError.Builder paramBuilder)
      {
        this.error_ = paramBuilder.build();
        this.bitField0_ = (0x4 | this.bitField0_);
        return this;
      }

      public final Builder setError(Data.OutOfBoxError paramOutOfBoxError)
      {
        if (paramOutOfBoxError == null)
          throw new NullPointerException();
        this.error_ = paramOutOfBoxError;
        this.bitField0_ = (0x4 | this.bitField0_);
        return this;
      }

      public final Builder setImage(Data.OutOfBoxImageField.Builder paramBuilder)
      {
        this.image_ = paramBuilder.build();
        this.bitField0_ = (0x10 | this.bitField0_);
        return this;
      }

      public final Builder setImage(Data.OutOfBoxImageField paramOutOfBoxImageField)
      {
        if (paramOutOfBoxImageField == null)
          throw new NullPointerException();
        this.image_ = paramOutOfBoxImageField;
        this.bitField0_ = (0x10 | this.bitField0_);
        return this;
      }

      public final Builder setInput(Data.OutOfBoxInputField.Builder paramBuilder)
      {
        this.input_ = paramBuilder.build();
        this.bitField0_ = (0x2 | this.bitField0_);
        return this;
      }

      public final Builder setInput(Data.OutOfBoxInputField paramOutOfBoxInputField)
      {
        if (paramOutOfBoxInputField == null)
          throw new NullPointerException();
        this.input_ = paramOutOfBoxInputField;
        this.bitField0_ = (0x2 | this.bitField0_);
        return this;
      }

      public final Builder setText(Data.OutOfBoxTextField.Builder paramBuilder)
      {
        this.text_ = paramBuilder.build();
        this.bitField0_ = (0x1 | this.bitField0_);
        return this;
      }

      public final Builder setText(Data.OutOfBoxTextField paramOutOfBoxTextField)
      {
        if (paramOutOfBoxTextField == null)
          throw new NullPointerException();
        this.text_ = paramOutOfBoxTextField;
        this.bitField0_ = (0x1 | this.bitField0_);
        return this;
      }
    }
  }

  public static final class OutOfBoxFieldOption extends GeneratedMessageLite
    implements Data.OutOfBoxFieldOptionOrBuilder
  {
    private static final OutOfBoxFieldOption defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private Object label_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private Data.OutOfBoxFieldValue value_;

    static
    {
      OutOfBoxFieldOption localOutOfBoxFieldOption = new OutOfBoxFieldOption();
      defaultInstance = localOutOfBoxFieldOption;
      localOutOfBoxFieldOption.value_ = Data.OutOfBoxFieldValue.getDefaultInstance();
      localOutOfBoxFieldOption.label_ = "";
    }

    private OutOfBoxFieldOption()
    {
    }

    private OutOfBoxFieldOption(Builder paramBuilder)
    {
      super();
    }

    public static OutOfBoxFieldOption getDefaultInstance()
    {
      return defaultInstance;
    }

    private ByteString getLabelBytes()
    {
      Object localObject = this.label_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.label_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static Builder newBuilder()
    {
      return Builder.access$46900();
    }

    public final OutOfBoxFieldOption getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final String getLabel()
    {
      Object localObject1 = this.label_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.label_ = str;
      }
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeMessageSize(1, this.value_);
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeBytesSize(2, getLabelBytes());
        this.memoizedSerializedSize = k;
      }
    }

    public final Data.OutOfBoxFieldValue getValue()
    {
      return this.value_;
    }

    public final boolean hasLabel()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasValue()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeMessage(1, this.value_);
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeBytes(2, getLabelBytes());
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Data.OutOfBoxFieldOption, Builder>
      implements Data.OutOfBoxFieldOptionOrBuilder
    {
      private int bitField0_;
      private Object label_ = "";
      private Data.OutOfBoxFieldValue value_ = Data.OutOfBoxFieldValue.getDefaultInstance();

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 10:
            Data.OutOfBoxFieldValue.Builder localBuilder = Data.OutOfBoxFieldValue.newBuilder();
            if (hasValue())
              localBuilder.mergeFrom(getValue());
            paramCodedInputStream.readMessage(localBuilder, paramExtensionRegistryLite);
            setValue(localBuilder.buildPartial());
            break;
          case 18:
          }
          this.bitField0_ = (0x2 | this.bitField0_);
          this.label_ = paramCodedInputStream.readBytes();
        }
      }

      public final Data.OutOfBoxFieldOption build()
      {
        Data.OutOfBoxFieldOption localOutOfBoxFieldOption = buildPartial();
        if (!localOutOfBoxFieldOption.isInitialized())
          throw new UninitializedMessageException();
        return localOutOfBoxFieldOption;
      }

      public final Data.OutOfBoxFieldOption buildPartial()
      {
        Data.OutOfBoxFieldOption localOutOfBoxFieldOption = new Data.OutOfBoxFieldOption(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Data.OutOfBoxFieldOption.access$47102(localOutOfBoxFieldOption, this.value_);
        if ((i & 0x2) == 2)
          k |= 2;
        Data.OutOfBoxFieldOption.access$47202(localOutOfBoxFieldOption, this.label_);
        Data.OutOfBoxFieldOption.access$47302(localOutOfBoxFieldOption, k);
        return localOutOfBoxFieldOption;
      }

      public final Builder clear()
      {
        super.clear();
        this.value_ = Data.OutOfBoxFieldValue.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.label_ = "";
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        return this;
      }

      public final Builder clearLabel()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.label_ = Data.OutOfBoxFieldOption.getDefaultInstance().getLabel();
        return this;
      }

      public final Builder clearValue()
      {
        this.value_ = Data.OutOfBoxFieldValue.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        return this;
      }

      public final Data.OutOfBoxFieldOption getDefaultInstanceForType()
      {
        return Data.OutOfBoxFieldOption.getDefaultInstance();
      }

      public final String getLabel()
      {
        Object localObject = this.label_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.label_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final Data.OutOfBoxFieldValue getValue()
      {
        return this.value_;
      }

      public final boolean hasLabel()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasValue()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Data.OutOfBoxFieldOption paramOutOfBoxFieldOption)
      {
        if (paramOutOfBoxFieldOption == Data.OutOfBoxFieldOption.getDefaultInstance())
          return this;
        Data.OutOfBoxFieldValue localOutOfBoxFieldValue;
        if (paramOutOfBoxFieldOption.hasValue())
        {
          localOutOfBoxFieldValue = paramOutOfBoxFieldOption.getValue();
          if (((0x1 & this.bitField0_) != 1) || (this.value_ == Data.OutOfBoxFieldValue.getDefaultInstance()))
            break label88;
        }
        label88: for (this.value_ = Data.OutOfBoxFieldValue.newBuilder(this.value_).mergeFrom(localOutOfBoxFieldValue).buildPartial(); ; this.value_ = localOutOfBoxFieldValue)
        {
          this.bitField0_ = (0x1 | this.bitField0_);
          if (!paramOutOfBoxFieldOption.hasLabel())
            break;
          setLabel(paramOutOfBoxFieldOption.getLabel());
          break;
        }
      }

      public final Builder setLabel(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x2 | this.bitField0_);
        this.label_ = paramString;
        return this;
      }

      public final Builder setValue(Data.OutOfBoxFieldValue.Builder paramBuilder)
      {
        this.value_ = paramBuilder.build();
        this.bitField0_ = (0x1 | this.bitField0_);
        return this;
      }

      public final Builder setValue(Data.OutOfBoxFieldValue paramOutOfBoxFieldValue)
      {
        if (paramOutOfBoxFieldValue == null)
          throw new NullPointerException();
        this.value_ = paramOutOfBoxFieldValue;
        this.bitField0_ = (0x1 | this.bitField0_);
        return this;
      }
    }
  }

  public static abstract interface OutOfBoxFieldOptionOrBuilder extends MessageLiteOrBuilder
  {
    public abstract String getLabel();

    public abstract Data.OutOfBoxFieldValue getValue();

    public abstract boolean hasLabel();

    public abstract boolean hasValue();
  }

  public static abstract interface OutOfBoxFieldOrBuilder extends MessageLiteOrBuilder
  {
    public abstract Data.OutOfBoxAction getAction();

    public abstract Data.OutOfBoxError getError();

    public abstract Data.OutOfBoxImageField getImage();

    public abstract Data.OutOfBoxInputField getInput();

    public abstract Data.OutOfBoxTextField getText();

    public abstract boolean hasAction();

    public abstract boolean hasError();

    public abstract boolean hasImage();

    public abstract boolean hasInput();

    public abstract boolean hasText();
  }

  public static final class OutOfBoxFieldValue extends GeneratedMessageLite
    implements Data.OutOfBoxFieldValueOrBuilder
  {
    private static final OutOfBoxFieldValue defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private boolean boolValue_;
    private Data.CoarseDate dateValue_;
    private Data.Gender gender_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private Object stringValue_;

    static
    {
      OutOfBoxFieldValue localOutOfBoxFieldValue = new OutOfBoxFieldValue();
      defaultInstance = localOutOfBoxFieldValue;
      localOutOfBoxFieldValue.stringValue_ = "";
      localOutOfBoxFieldValue.boolValue_ = false;
      localOutOfBoxFieldValue.dateValue_ = Data.CoarseDate.getDefaultInstance();
      localOutOfBoxFieldValue.gender_ = Data.Gender.getDefaultInstance();
    }

    private OutOfBoxFieldValue()
    {
    }

    private OutOfBoxFieldValue(Builder paramBuilder)
    {
      super();
    }

    public static OutOfBoxFieldValue getDefaultInstance()
    {
      return defaultInstance;
    }

    private ByteString getStringValueBytes()
    {
      Object localObject = this.stringValue_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.stringValue_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static Builder newBuilder()
    {
      return Builder.access$46100();
    }

    public static Builder newBuilder(OutOfBoxFieldValue paramOutOfBoxFieldValue)
    {
      return Builder.access$46100().mergeFrom(paramOutOfBoxFieldValue);
    }

    public final boolean getBoolValue()
    {
      return this.boolValue_;
    }

    public final Data.CoarseDate getDateValue()
    {
      return this.dateValue_;
    }

    public final OutOfBoxFieldValue getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final Data.Gender getGender()
    {
      return this.gender_;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeBytesSize(1, getStringValueBytes());
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeBoolSize(2, this.boolValue_);
        if ((0x4 & this.bitField0_) == 4)
          k += CodedOutputStream.computeMessageSize(3, this.dateValue_);
        if ((0x8 & this.bitField0_) == 8)
          k += CodedOutputStream.computeMessageSize(4, this.gender_);
        this.memoizedSerializedSize = k;
      }
    }

    public final String getStringValue()
    {
      Object localObject1 = this.stringValue_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.stringValue_ = str;
      }
    }

    public final boolean hasBoolValue()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasDateValue()
    {
      if ((0x4 & this.bitField0_) == 4);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasGender()
    {
      if ((0x8 & this.bitField0_) == 8);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasStringValue()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeBytes(1, getStringValueBytes());
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeBool(2, this.boolValue_);
      if ((0x4 & this.bitField0_) == 4)
        paramCodedOutputStream.writeMessage(3, this.dateValue_);
      if ((0x8 & this.bitField0_) == 8)
        paramCodedOutputStream.writeMessage(4, this.gender_);
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Data.OutOfBoxFieldValue, Builder>
      implements Data.OutOfBoxFieldValueOrBuilder
    {
      private int bitField0_;
      private boolean boolValue_;
      private Data.CoarseDate dateValue_ = Data.CoarseDate.getDefaultInstance();
      private Data.Gender gender_ = Data.Gender.getDefaultInstance();
      private Object stringValue_ = "";

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 10:
            this.bitField0_ = (0x1 | this.bitField0_);
            this.stringValue_ = paramCodedInputStream.readBytes();
            break;
          case 16:
            this.bitField0_ = (0x2 | this.bitField0_);
            this.boolValue_ = paramCodedInputStream.readBool();
            break;
          case 26:
            Data.CoarseDate.Builder localBuilder1 = Data.CoarseDate.newBuilder();
            if (hasDateValue())
              localBuilder1.mergeFrom(getDateValue());
            paramCodedInputStream.readMessage(localBuilder1, paramExtensionRegistryLite);
            setDateValue(localBuilder1.buildPartial());
            break;
          case 34:
          }
          Data.Gender.Builder localBuilder = Data.Gender.newBuilder();
          if (hasGender())
            localBuilder.mergeFrom(getGender());
          paramCodedInputStream.readMessage(localBuilder, paramExtensionRegistryLite);
          setGender(localBuilder.buildPartial());
        }
      }

      public final Data.OutOfBoxFieldValue build()
      {
        Data.OutOfBoxFieldValue localOutOfBoxFieldValue = buildPartial();
        if (!localOutOfBoxFieldValue.isInitialized())
          throw new UninitializedMessageException();
        return localOutOfBoxFieldValue;
      }

      public final Data.OutOfBoxFieldValue buildPartial()
      {
        Data.OutOfBoxFieldValue localOutOfBoxFieldValue = new Data.OutOfBoxFieldValue(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Data.OutOfBoxFieldValue.access$46302(localOutOfBoxFieldValue, this.stringValue_);
        if ((i & 0x2) == 2)
          k |= 2;
        Data.OutOfBoxFieldValue.access$46402(localOutOfBoxFieldValue, this.boolValue_);
        if ((i & 0x4) == 4)
          k |= 4;
        Data.OutOfBoxFieldValue.access$46502(localOutOfBoxFieldValue, this.dateValue_);
        if ((i & 0x8) == 8)
          k |= 8;
        Data.OutOfBoxFieldValue.access$46602(localOutOfBoxFieldValue, this.gender_);
        Data.OutOfBoxFieldValue.access$46702(localOutOfBoxFieldValue, k);
        return localOutOfBoxFieldValue;
      }

      public final Builder clear()
      {
        super.clear();
        this.stringValue_ = "";
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.boolValue_ = false;
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.dateValue_ = Data.CoarseDate.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.gender_ = Data.Gender.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        return this;
      }

      public final Builder clearBoolValue()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.boolValue_ = false;
        return this;
      }

      public final Builder clearDateValue()
      {
        this.dateValue_ = Data.CoarseDate.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        return this;
      }

      public final Builder clearGender()
      {
        this.gender_ = Data.Gender.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        return this;
      }

      public final Builder clearStringValue()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.stringValue_ = Data.OutOfBoxFieldValue.getDefaultInstance().getStringValue();
        return this;
      }

      public final boolean getBoolValue()
      {
        return this.boolValue_;
      }

      public final Data.CoarseDate getDateValue()
      {
        return this.dateValue_;
      }

      public final Data.OutOfBoxFieldValue getDefaultInstanceForType()
      {
        return Data.OutOfBoxFieldValue.getDefaultInstance();
      }

      public final Data.Gender getGender()
      {
        return this.gender_;
      }

      public final String getStringValue()
      {
        Object localObject = this.stringValue_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.stringValue_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final boolean hasBoolValue()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasDateValue()
      {
        if ((0x4 & this.bitField0_) == 4);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasGender()
      {
        if ((0x8 & this.bitField0_) == 8);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasStringValue()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Data.OutOfBoxFieldValue paramOutOfBoxFieldValue)
      {
        if (paramOutOfBoxFieldValue == Data.OutOfBoxFieldValue.getDefaultInstance());
        Data.CoarseDate localCoarseDate;
        label91: 
        do
        {
          return this;
          if (paramOutOfBoxFieldValue.hasStringValue())
            setStringValue(paramOutOfBoxFieldValue.getStringValue());
          if (paramOutOfBoxFieldValue.hasBoolValue())
            setBoolValue(paramOutOfBoxFieldValue.getBoolValue());
          if (paramOutOfBoxFieldValue.hasDateValue())
          {
            localCoarseDate = paramOutOfBoxFieldValue.getDateValue();
            if (((0x4 & this.bitField0_) != 4) || (this.dateValue_ == Data.CoarseDate.getDefaultInstance()))
              break;
            this.dateValue_ = Data.CoarseDate.newBuilder(this.dateValue_).mergeFrom(localCoarseDate).buildPartial();
            this.bitField0_ = (0x4 | this.bitField0_);
          }
        }
        while (!paramOutOfBoxFieldValue.hasGender());
        Data.Gender localGender = paramOutOfBoxFieldValue.getGender();
        if (((0x8 & this.bitField0_) == 8) && (this.gender_ != Data.Gender.getDefaultInstance()));
        for (this.gender_ = Data.Gender.newBuilder(this.gender_).mergeFrom(localGender).buildPartial(); ; this.gender_ = localGender)
        {
          this.bitField0_ = (0x8 | this.bitField0_);
          break;
          this.dateValue_ = localCoarseDate;
          break label91;
        }
      }

      public final Builder setBoolValue(boolean paramBoolean)
      {
        this.bitField0_ = (0x2 | this.bitField0_);
        this.boolValue_ = paramBoolean;
        return this;
      }

      public final Builder setDateValue(Data.CoarseDate.Builder paramBuilder)
      {
        this.dateValue_ = paramBuilder.build();
        this.bitField0_ = (0x4 | this.bitField0_);
        return this;
      }

      public final Builder setDateValue(Data.CoarseDate paramCoarseDate)
      {
        if (paramCoarseDate == null)
          throw new NullPointerException();
        this.dateValue_ = paramCoarseDate;
        this.bitField0_ = (0x4 | this.bitField0_);
        return this;
      }

      public final Builder setGender(Data.Gender.Builder paramBuilder)
      {
        this.gender_ = paramBuilder.build();
        this.bitField0_ = (0x8 | this.bitField0_);
        return this;
      }

      public final Builder setGender(Data.Gender paramGender)
      {
        if (paramGender == null)
          throw new NullPointerException();
        this.gender_ = paramGender;
        this.bitField0_ = (0x8 | this.bitField0_);
        return this;
      }

      public final Builder setStringValue(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x1 | this.bitField0_);
        this.stringValue_ = paramString;
        return this;
      }
    }
  }

  public static abstract interface OutOfBoxFieldValueOrBuilder extends MessageLiteOrBuilder
  {
    public abstract boolean getBoolValue();

    public abstract Data.CoarseDate getDateValue();

    public abstract Data.Gender getGender();

    public abstract String getStringValue();

    public abstract boolean hasBoolValue();

    public abstract boolean hasDateValue();

    public abstract boolean hasGender();

    public abstract boolean hasStringValue();
  }

  public static final class OutOfBoxImageField extends GeneratedMessageLite
    implements Data.OutOfBoxImageFieldOrBuilder
  {
    private static final OutOfBoxImageField defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private boolean centered_;
    private Data.OutOfBoxTextField coverText_;
    private Data.OutOfBoxTextField descriptiveText_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private Type type_;

    static
    {
      OutOfBoxImageField localOutOfBoxImageField = new OutOfBoxImageField();
      defaultInstance = localOutOfBoxImageField;
      localOutOfBoxImageField.type_ = Type.PICASA;
      localOutOfBoxImageField.centered_ = false;
      localOutOfBoxImageField.coverText_ = Data.OutOfBoxTextField.getDefaultInstance();
      localOutOfBoxImageField.descriptiveText_ = Data.OutOfBoxTextField.getDefaultInstance();
    }

    private OutOfBoxImageField()
    {
    }

    private OutOfBoxImageField(Builder paramBuilder)
    {
      super();
    }

    public static OutOfBoxImageField getDefaultInstance()
    {
      return defaultInstance;
    }

    public static Builder newBuilder()
    {
      return Builder.access$44100();
    }

    public static Builder newBuilder(OutOfBoxImageField paramOutOfBoxImageField)
    {
      return Builder.access$44100().mergeFrom(paramOutOfBoxImageField);
    }

    public final boolean getCentered()
    {
      return this.centered_;
    }

    public final Data.OutOfBoxTextField getCoverText()
    {
      return this.coverText_;
    }

    public final OutOfBoxImageField getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final Data.OutOfBoxTextField getDescriptiveText()
    {
      return this.descriptiveText_;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeEnumSize(1, this.type_.getNumber());
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeBoolSize(2, this.centered_);
        if ((0x4 & this.bitField0_) == 4)
          k += CodedOutputStream.computeMessageSize(3, this.coverText_);
        if ((0x8 & this.bitField0_) == 8)
          k += CodedOutputStream.computeMessageSize(4, this.descriptiveText_);
        this.memoizedSerializedSize = k;
      }
    }

    public final Type getType()
    {
      return this.type_;
    }

    public final boolean hasCentered()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasCoverText()
    {
      if ((0x4 & this.bitField0_) == 4);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasDescriptiveText()
    {
      if ((0x8 & this.bitField0_) == 8);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasType()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeEnum(1, this.type_.getNumber());
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeBool(2, this.centered_);
      if ((0x4 & this.bitField0_) == 4)
        paramCodedOutputStream.writeMessage(3, this.coverText_);
      if ((0x8 & this.bitField0_) == 8)
        paramCodedOutputStream.writeMessage(4, this.descriptiveText_);
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Data.OutOfBoxImageField, Builder>
      implements Data.OutOfBoxImageFieldOrBuilder
    {
      private int bitField0_;
      private boolean centered_;
      private Data.OutOfBoxTextField coverText_ = Data.OutOfBoxTextField.getDefaultInstance();
      private Data.OutOfBoxTextField descriptiveText_ = Data.OutOfBoxTextField.getDefaultInstance();
      private Data.OutOfBoxImageField.Type type_ = Data.OutOfBoxImageField.Type.PICASA;

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 8:
            Data.OutOfBoxImageField.Type localType = Data.OutOfBoxImageField.Type.valueOf(paramCodedInputStream.readEnum());
            if (localType == null)
              continue;
            this.bitField0_ = (0x1 | this.bitField0_);
            this.type_ = localType;
            break;
          case 16:
            this.bitField0_ = (0x2 | this.bitField0_);
            this.centered_ = paramCodedInputStream.readBool();
            break;
          case 26:
            Data.OutOfBoxTextField.Builder localBuilder2 = Data.OutOfBoxTextField.newBuilder();
            if (hasCoverText())
              localBuilder2.mergeFrom(getCoverText());
            paramCodedInputStream.readMessage(localBuilder2, paramExtensionRegistryLite);
            setCoverText(localBuilder2.buildPartial());
            break;
          case 34:
          }
          Data.OutOfBoxTextField.Builder localBuilder1 = Data.OutOfBoxTextField.newBuilder();
          if (hasDescriptiveText())
            localBuilder1.mergeFrom(getDescriptiveText());
          paramCodedInputStream.readMessage(localBuilder1, paramExtensionRegistryLite);
          setDescriptiveText(localBuilder1.buildPartial());
        }
      }

      public final Data.OutOfBoxImageField build()
      {
        Data.OutOfBoxImageField localOutOfBoxImageField = buildPartial();
        if (!localOutOfBoxImageField.isInitialized())
          throw new UninitializedMessageException();
        return localOutOfBoxImageField;
      }

      public final Data.OutOfBoxImageField buildPartial()
      {
        Data.OutOfBoxImageField localOutOfBoxImageField = new Data.OutOfBoxImageField(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Data.OutOfBoxImageField.access$44302(localOutOfBoxImageField, this.type_);
        if ((i & 0x2) == 2)
          k |= 2;
        Data.OutOfBoxImageField.access$44402(localOutOfBoxImageField, this.centered_);
        if ((i & 0x4) == 4)
          k |= 4;
        Data.OutOfBoxImageField.access$44502(localOutOfBoxImageField, this.coverText_);
        if ((i & 0x8) == 8)
          k |= 8;
        Data.OutOfBoxImageField.access$44602(localOutOfBoxImageField, this.descriptiveText_);
        Data.OutOfBoxImageField.access$44702(localOutOfBoxImageField, k);
        return localOutOfBoxImageField;
      }

      public final Builder clear()
      {
        super.clear();
        this.type_ = Data.OutOfBoxImageField.Type.PICASA;
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.centered_ = false;
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.coverText_ = Data.OutOfBoxTextField.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.descriptiveText_ = Data.OutOfBoxTextField.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        return this;
      }

      public final Builder clearCentered()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.centered_ = false;
        return this;
      }

      public final Builder clearCoverText()
      {
        this.coverText_ = Data.OutOfBoxTextField.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        return this;
      }

      public final Builder clearDescriptiveText()
      {
        this.descriptiveText_ = Data.OutOfBoxTextField.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        return this;
      }

      public final Builder clearType()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.type_ = Data.OutOfBoxImageField.Type.PICASA;
        return this;
      }

      public final boolean getCentered()
      {
        return this.centered_;
      }

      public final Data.OutOfBoxTextField getCoverText()
      {
        return this.coverText_;
      }

      public final Data.OutOfBoxImageField getDefaultInstanceForType()
      {
        return Data.OutOfBoxImageField.getDefaultInstance();
      }

      public final Data.OutOfBoxTextField getDescriptiveText()
      {
        return this.descriptiveText_;
      }

      public final Data.OutOfBoxImageField.Type getType()
      {
        return this.type_;
      }

      public final boolean hasCentered()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasCoverText()
      {
        if ((0x4 & this.bitField0_) == 4);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasDescriptiveText()
      {
        if ((0x8 & this.bitField0_) == 8);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasType()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Data.OutOfBoxImageField paramOutOfBoxImageField)
      {
        if (paramOutOfBoxImageField == Data.OutOfBoxImageField.getDefaultInstance());
        Data.OutOfBoxTextField localOutOfBoxTextField2;
        label91: 
        do
        {
          return this;
          if (paramOutOfBoxImageField.hasType())
            setType(paramOutOfBoxImageField.getType());
          if (paramOutOfBoxImageField.hasCentered())
            setCentered(paramOutOfBoxImageField.getCentered());
          if (paramOutOfBoxImageField.hasCoverText())
          {
            localOutOfBoxTextField2 = paramOutOfBoxImageField.getCoverText();
            if (((0x4 & this.bitField0_) != 4) || (this.coverText_ == Data.OutOfBoxTextField.getDefaultInstance()))
              break;
            this.coverText_ = Data.OutOfBoxTextField.newBuilder(this.coverText_).mergeFrom(localOutOfBoxTextField2).buildPartial();
            this.bitField0_ = (0x4 | this.bitField0_);
          }
        }
        while (!paramOutOfBoxImageField.hasDescriptiveText());
        Data.OutOfBoxTextField localOutOfBoxTextField1 = paramOutOfBoxImageField.getDescriptiveText();
        if (((0x8 & this.bitField0_) == 8) && (this.descriptiveText_ != Data.OutOfBoxTextField.getDefaultInstance()));
        for (this.descriptiveText_ = Data.OutOfBoxTextField.newBuilder(this.descriptiveText_).mergeFrom(localOutOfBoxTextField1).buildPartial(); ; this.descriptiveText_ = localOutOfBoxTextField1)
        {
          this.bitField0_ = (0x8 | this.bitField0_);
          break;
          this.coverText_ = localOutOfBoxTextField2;
          break label91;
        }
      }

      public final Builder setCentered(boolean paramBoolean)
      {
        this.bitField0_ = (0x2 | this.bitField0_);
        this.centered_ = paramBoolean;
        return this;
      }

      public final Builder setCoverText(Data.OutOfBoxTextField.Builder paramBuilder)
      {
        this.coverText_ = paramBuilder.build();
        this.bitField0_ = (0x4 | this.bitField0_);
        return this;
      }

      public final Builder setCoverText(Data.OutOfBoxTextField paramOutOfBoxTextField)
      {
        if (paramOutOfBoxTextField == null)
          throw new NullPointerException();
        this.coverText_ = paramOutOfBoxTextField;
        this.bitField0_ = (0x4 | this.bitField0_);
        return this;
      }

      public final Builder setDescriptiveText(Data.OutOfBoxTextField.Builder paramBuilder)
      {
        this.descriptiveText_ = paramBuilder.build();
        this.bitField0_ = (0x8 | this.bitField0_);
        return this;
      }

      public final Builder setDescriptiveText(Data.OutOfBoxTextField paramOutOfBoxTextField)
      {
        if (paramOutOfBoxTextField == null)
          throw new NullPointerException();
        this.descriptiveText_ = paramOutOfBoxTextField;
        this.bitField0_ = (0x8 | this.bitField0_);
        return this;
      }

      public final Builder setType(Data.OutOfBoxImageField.Type paramType)
      {
        if (paramType == null)
          throw new NullPointerException();
        this.bitField0_ = (0x1 | this.bitField0_);
        this.type_ = paramType;
        return this;
      }
    }

    public static enum Type
      implements Internal.EnumLite
    {
      private static Internal.EnumLiteMap<Type> internalValueMap = new Internal.EnumLiteMap()
      {
      };
      private final int value;

      static
      {
        ANDROID_MARKET_LOGO = new Type("ANDROID_MARKET_LOGO", 1, 2);
        APP_STORE_LOGO = new Type("APP_STORE_LOGO", 2, 3);
        PLUSONE_WIDGET = new Type("PLUSONE_WIDGET", 3, 4);
        INSTANT_UPLOAD = new Type("INSTANT_UPLOAD", 4, 5);
        Type[] arrayOfType = new Type[5];
        arrayOfType[0] = PICASA;
        arrayOfType[1] = ANDROID_MARKET_LOGO;
        arrayOfType[2] = APP_STORE_LOGO;
        arrayOfType[3] = PLUSONE_WIDGET;
        arrayOfType[4] = INSTANT_UPLOAD;
      }

      private Type(int paramInt1, int paramInt2)
      {
        this.value = paramInt1;
      }

      public static Type valueOf(int paramInt)
      {
        Type localType;
        switch (paramInt)
        {
        default:
          localType = null;
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
        }
        while (true)
        {
          return localType;
          localType = PICASA;
          continue;
          localType = ANDROID_MARKET_LOGO;
          continue;
          localType = APP_STORE_LOGO;
          continue;
          localType = PLUSONE_WIDGET;
          continue;
          localType = INSTANT_UPLOAD;
        }
      }

      public final int getNumber()
      {
        return this.value;
      }
    }
  }

  public static abstract interface OutOfBoxImageFieldOrBuilder extends MessageLiteOrBuilder
  {
    public abstract boolean getCentered();

    public abstract Data.OutOfBoxTextField getCoverText();

    public abstract Data.OutOfBoxTextField getDescriptiveText();

    public abstract Data.OutOfBoxImageField.Type getType();

    public abstract boolean hasCentered();

    public abstract boolean hasCoverText();

    public abstract boolean hasDescriptiveText();

    public abstract boolean hasType();
  }

  public static final class OutOfBoxInputField extends GeneratedMessageLite
    implements Data.OutOfBoxInputFieldOrBuilder
  {
    private static final OutOfBoxInputField defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private boolean hasError_;
    private Object helpText_;
    private Id id_;
    private Object label_;
    private boolean mandatory_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private Type type_;
    private List<Data.OutOfBoxFieldOption> valueOption_;
    private Data.OutOfBoxFieldValue value_;

    static
    {
      OutOfBoxInputField localOutOfBoxInputField = new OutOfBoxInputField();
      defaultInstance = localOutOfBoxInputField;
      localOutOfBoxInputField.id_ = Id.FIRST_NAME;
      localOutOfBoxInputField.type_ = Type.TEXT_INPUT;
      localOutOfBoxInputField.label_ = "";
      localOutOfBoxInputField.value_ = Data.OutOfBoxFieldValue.getDefaultInstance();
      localOutOfBoxInputField.mandatory_ = false;
      localOutOfBoxInputField.hasError_ = false;
      localOutOfBoxInputField.valueOption_ = Collections.emptyList();
      localOutOfBoxInputField.helpText_ = "";
    }

    private OutOfBoxInputField()
    {
    }

    private OutOfBoxInputField(Builder paramBuilder)
    {
      super();
    }

    public static OutOfBoxInputField getDefaultInstance()
    {
      return defaultInstance;
    }

    private ByteString getHelpTextBytes()
    {
      Object localObject = this.helpText_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.helpText_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    private ByteString getLabelBytes()
    {
      Object localObject = this.label_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.label_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static Builder newBuilder()
    {
      return Builder.access$44900();
    }

    public static Builder newBuilder(OutOfBoxInputField paramOutOfBoxInputField)
    {
      return Builder.access$44900().mergeFrom(paramOutOfBoxInputField);
    }

    public final OutOfBoxInputField getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final boolean getHasError()
    {
      return this.hasError_;
    }

    public final String getHelpText()
    {
      Object localObject1 = this.helpText_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.helpText_ = str;
      }
    }

    public final Id getId()
    {
      return this.id_;
    }

    public final String getLabel()
    {
      Object localObject1 = this.label_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.label_ = str;
      }
    }

    public final boolean getMandatory()
    {
      return this.mandatory_;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int n = i; ; n = k)
      {
        return n;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeEnumSize(1, this.id_.getNumber());
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeEnumSize(2, this.type_.getNumber());
        if ((0x4 & this.bitField0_) == 4)
          k += CodedOutputStream.computeBytesSize(3, getLabelBytes());
        if ((0x8 & this.bitField0_) == 8)
          k += CodedOutputStream.computeMessageSize(4, this.value_);
        if ((0x10 & this.bitField0_) == 16)
          k += CodedOutputStream.computeBoolSize(5, this.mandatory_);
        if ((0x20 & this.bitField0_) == 32)
          k += CodedOutputStream.computeBoolSize(6, this.hasError_);
        for (int m = 0; m < this.valueOption_.size(); m++)
          k += CodedOutputStream.computeMessageSize(7, (MessageLite)this.valueOption_.get(m));
        if ((0x40 & this.bitField0_) == 64)
          k += CodedOutputStream.computeBytesSize(8, getHelpTextBytes());
        this.memoizedSerializedSize = k;
      }
    }

    public final Type getType()
    {
      return this.type_;
    }

    public final Data.OutOfBoxFieldValue getValue()
    {
      return this.value_;
    }

    public final Data.OutOfBoxFieldOption getValueOption(int paramInt)
    {
      return (Data.OutOfBoxFieldOption)this.valueOption_.get(paramInt);
    }

    public final int getValueOptionCount()
    {
      return this.valueOption_.size();
    }

    public final List<Data.OutOfBoxFieldOption> getValueOptionList()
    {
      return this.valueOption_;
    }

    public final Data.OutOfBoxFieldOptionOrBuilder getValueOptionOrBuilder(int paramInt)
    {
      return (Data.OutOfBoxFieldOptionOrBuilder)this.valueOption_.get(paramInt);
    }

    public final List<? extends Data.OutOfBoxFieldOptionOrBuilder> getValueOptionOrBuilderList()
    {
      return this.valueOption_;
    }

    public final boolean hasHasError()
    {
      if ((0x20 & this.bitField0_) == 32);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasHelpText()
    {
      if ((0x40 & this.bitField0_) == 64);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasId()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean hasLabel()
    {
      if ((0x4 & this.bitField0_) == 4);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasMandatory()
    {
      if ((0x10 & this.bitField0_) == 16);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasType()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasValue()
    {
      if ((0x8 & this.bitField0_) == 8);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeEnum(1, this.id_.getNumber());
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeEnum(2, this.type_.getNumber());
      if ((0x4 & this.bitField0_) == 4)
        paramCodedOutputStream.writeBytes(3, getLabelBytes());
      if ((0x8 & this.bitField0_) == 8)
        paramCodedOutputStream.writeMessage(4, this.value_);
      if ((0x10 & this.bitField0_) == 16)
        paramCodedOutputStream.writeBool(5, this.mandatory_);
      if ((0x20 & this.bitField0_) == 32)
        paramCodedOutputStream.writeBool(6, this.hasError_);
      for (int i = 0; i < this.valueOption_.size(); i++)
        paramCodedOutputStream.writeMessage(7, (MessageLite)this.valueOption_.get(i));
      if ((0x40 & this.bitField0_) == 64)
        paramCodedOutputStream.writeBytes(8, getHelpTextBytes());
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Data.OutOfBoxInputField, Builder>
      implements Data.OutOfBoxInputFieldOrBuilder
    {
      private int bitField0_;
      private boolean hasError_;
      private Object helpText_ = "";
      private Data.OutOfBoxInputField.Id id_ = Data.OutOfBoxInputField.Id.FIRST_NAME;
      private Object label_ = "";
      private boolean mandatory_;
      private Data.OutOfBoxInputField.Type type_ = Data.OutOfBoxInputField.Type.TEXT_INPUT;
      private List<Data.OutOfBoxFieldOption> valueOption_ = Collections.emptyList();
      private Data.OutOfBoxFieldValue value_ = Data.OutOfBoxFieldValue.getDefaultInstance();

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private void ensureValueOptionIsMutable()
      {
        if ((0x40 & this.bitField0_) != 64)
        {
          this.valueOption_ = new ArrayList(this.valueOption_);
          this.bitField0_ = (0x40 | this.bitField0_);
        }
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 8:
            Data.OutOfBoxInputField.Id localId = Data.OutOfBoxInputField.Id.valueOf(paramCodedInputStream.readEnum());
            if (localId == null)
              continue;
            this.bitField0_ = (0x1 | this.bitField0_);
            this.id_ = localId;
            break;
          case 16:
            Data.OutOfBoxInputField.Type localType = Data.OutOfBoxInputField.Type.valueOf(paramCodedInputStream.readEnum());
            if (localType == null)
              continue;
            this.bitField0_ = (0x2 | this.bitField0_);
            this.type_ = localType;
            break;
          case 26:
            this.bitField0_ = (0x4 | this.bitField0_);
            this.label_ = paramCodedInputStream.readBytes();
            break;
          case 34:
            Data.OutOfBoxFieldValue.Builder localBuilder1 = Data.OutOfBoxFieldValue.newBuilder();
            if (hasValue())
              localBuilder1.mergeFrom(getValue());
            paramCodedInputStream.readMessage(localBuilder1, paramExtensionRegistryLite);
            setValue(localBuilder1.buildPartial());
            break;
          case 40:
            this.bitField0_ = (0x10 | this.bitField0_);
            this.mandatory_ = paramCodedInputStream.readBool();
            break;
          case 48:
            this.bitField0_ = (0x20 | this.bitField0_);
            this.hasError_ = paramCodedInputStream.readBool();
            break;
          case 58:
            Data.OutOfBoxFieldOption.Builder localBuilder = Data.OutOfBoxFieldOption.newBuilder();
            paramCodedInputStream.readMessage(localBuilder, paramExtensionRegistryLite);
            addValueOption(localBuilder.buildPartial());
            break;
          case 66:
          }
          this.bitField0_ = (0x80 | this.bitField0_);
          this.helpText_ = paramCodedInputStream.readBytes();
        }
      }

      public final Builder addAllValueOption(Iterable<? extends Data.OutOfBoxFieldOption> paramIterable)
      {
        ensureValueOptionIsMutable();
        GeneratedMessageLite.Builder.addAll(paramIterable, this.valueOption_);
        return this;
      }

      public final Builder addValueOption(int paramInt, Data.OutOfBoxFieldOption.Builder paramBuilder)
      {
        ensureValueOptionIsMutable();
        this.valueOption_.add(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder addValueOption(int paramInt, Data.OutOfBoxFieldOption paramOutOfBoxFieldOption)
      {
        if (paramOutOfBoxFieldOption == null)
          throw new NullPointerException();
        ensureValueOptionIsMutable();
        this.valueOption_.add(paramInt, paramOutOfBoxFieldOption);
        return this;
      }

      public final Builder addValueOption(Data.OutOfBoxFieldOption.Builder paramBuilder)
      {
        ensureValueOptionIsMutable();
        this.valueOption_.add(paramBuilder.build());
        return this;
      }

      public final Builder addValueOption(Data.OutOfBoxFieldOption paramOutOfBoxFieldOption)
      {
        if (paramOutOfBoxFieldOption == null)
          throw new NullPointerException();
        ensureValueOptionIsMutable();
        this.valueOption_.add(paramOutOfBoxFieldOption);
        return this;
      }

      public final Data.OutOfBoxInputField build()
      {
        Data.OutOfBoxInputField localOutOfBoxInputField = buildPartial();
        if (!localOutOfBoxInputField.isInitialized())
          throw new UninitializedMessageException();
        return localOutOfBoxInputField;
      }

      public final Data.OutOfBoxInputField buildPartial()
      {
        Data.OutOfBoxInputField localOutOfBoxInputField = new Data.OutOfBoxInputField(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Data.OutOfBoxInputField.access$45102(localOutOfBoxInputField, this.id_);
        if ((i & 0x2) == 2)
          k |= 2;
        Data.OutOfBoxInputField.access$45202(localOutOfBoxInputField, this.type_);
        if ((i & 0x4) == 4)
          k |= 4;
        Data.OutOfBoxInputField.access$45302(localOutOfBoxInputField, this.label_);
        if ((i & 0x8) == 8)
          k |= 8;
        Data.OutOfBoxInputField.access$45402(localOutOfBoxInputField, this.value_);
        if ((i & 0x10) == 16)
          k |= 16;
        Data.OutOfBoxInputField.access$45502(localOutOfBoxInputField, this.mandatory_);
        if ((i & 0x20) == 32)
          k |= 32;
        Data.OutOfBoxInputField.access$45602(localOutOfBoxInputField, this.hasError_);
        if ((0x40 & this.bitField0_) == 64)
        {
          this.valueOption_ = Collections.unmodifiableList(this.valueOption_);
          this.bitField0_ = (0xFFFFFFBF & this.bitField0_);
        }
        Data.OutOfBoxInputField.access$45702(localOutOfBoxInputField, this.valueOption_);
        if ((i & 0x80) == 128)
          k |= 64;
        Data.OutOfBoxInputField.access$45802(localOutOfBoxInputField, this.helpText_);
        Data.OutOfBoxInputField.access$45902(localOutOfBoxInputField, k);
        return localOutOfBoxInputField;
      }

      public final Builder clear()
      {
        super.clear();
        this.id_ = Data.OutOfBoxInputField.Id.FIRST_NAME;
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.type_ = Data.OutOfBoxInputField.Type.TEXT_INPUT;
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.label_ = "";
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.value_ = Data.OutOfBoxFieldValue.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        this.mandatory_ = false;
        this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        this.hasError_ = false;
        this.bitField0_ = (0xFFFFFFDF & this.bitField0_);
        this.valueOption_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFBF & this.bitField0_);
        this.helpText_ = "";
        this.bitField0_ = (0xFFFFFF7F & this.bitField0_);
        return this;
      }

      public final Builder clearHasError()
      {
        this.bitField0_ = (0xFFFFFFDF & this.bitField0_);
        this.hasError_ = false;
        return this;
      }

      public final Builder clearHelpText()
      {
        this.bitField0_ = (0xFFFFFF7F & this.bitField0_);
        this.helpText_ = Data.OutOfBoxInputField.getDefaultInstance().getHelpText();
        return this;
      }

      public final Builder clearId()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.id_ = Data.OutOfBoxInputField.Id.FIRST_NAME;
        return this;
      }

      public final Builder clearLabel()
      {
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.label_ = Data.OutOfBoxInputField.getDefaultInstance().getLabel();
        return this;
      }

      public final Builder clearMandatory()
      {
        this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        this.mandatory_ = false;
        return this;
      }

      public final Builder clearType()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.type_ = Data.OutOfBoxInputField.Type.TEXT_INPUT;
        return this;
      }

      public final Builder clearValue()
      {
        this.value_ = Data.OutOfBoxFieldValue.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        return this;
      }

      public final Builder clearValueOption()
      {
        this.valueOption_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFBF & this.bitField0_);
        return this;
      }

      public final Data.OutOfBoxInputField getDefaultInstanceForType()
      {
        return Data.OutOfBoxInputField.getDefaultInstance();
      }

      public final boolean getHasError()
      {
        return this.hasError_;
      }

      public final String getHelpText()
      {
        Object localObject = this.helpText_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.helpText_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final Data.OutOfBoxInputField.Id getId()
      {
        return this.id_;
      }

      public final String getLabel()
      {
        Object localObject = this.label_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.label_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final boolean getMandatory()
      {
        return this.mandatory_;
      }

      public final Data.OutOfBoxInputField.Type getType()
      {
        return this.type_;
      }

      public final Data.OutOfBoxFieldValue getValue()
      {
        return this.value_;
      }

      public final Data.OutOfBoxFieldOption getValueOption(int paramInt)
      {
        return (Data.OutOfBoxFieldOption)this.valueOption_.get(paramInt);
      }

      public final int getValueOptionCount()
      {
        return this.valueOption_.size();
      }

      public final List<Data.OutOfBoxFieldOption> getValueOptionList()
      {
        return Collections.unmodifiableList(this.valueOption_);
      }

      public final boolean hasHasError()
      {
        if ((0x20 & this.bitField0_) == 32);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasHelpText()
      {
        if ((0x80 & this.bitField0_) == 128);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasId()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean hasLabel()
      {
        if ((0x4 & this.bitField0_) == 4);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasMandatory()
      {
        if ((0x10 & this.bitField0_) == 16);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasType()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasValue()
      {
        if ((0x8 & this.bitField0_) == 8);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Data.OutOfBoxInputField paramOutOfBoxInputField)
      {
        if (paramOutOfBoxInputField == Data.OutOfBoxInputField.getDefaultInstance());
        label111: label244: 
        while (true)
        {
          return this;
          if (paramOutOfBoxInputField.hasId())
            setId(paramOutOfBoxInputField.getId());
          if (paramOutOfBoxInputField.hasType())
            setType(paramOutOfBoxInputField.getType());
          if (paramOutOfBoxInputField.hasLabel())
            setLabel(paramOutOfBoxInputField.getLabel());
          Data.OutOfBoxFieldValue localOutOfBoxFieldValue;
          if (paramOutOfBoxInputField.hasValue())
          {
            localOutOfBoxFieldValue = paramOutOfBoxInputField.getValue();
            if (((0x8 & this.bitField0_) == 8) && (this.value_ != Data.OutOfBoxFieldValue.getDefaultInstance()))
            {
              this.value_ = Data.OutOfBoxFieldValue.newBuilder(this.value_).mergeFrom(localOutOfBoxFieldValue).buildPartial();
              this.bitField0_ = (0x8 | this.bitField0_);
            }
          }
          else
          {
            if (paramOutOfBoxInputField.hasMandatory())
              setMandatory(paramOutOfBoxInputField.getMandatory());
            if (paramOutOfBoxInputField.hasHasError())
              setHasError(paramOutOfBoxInputField.getHasError());
            if (!paramOutOfBoxInputField.valueOption_.isEmpty())
            {
              if (!this.valueOption_.isEmpty())
                break label225;
              this.valueOption_ = paramOutOfBoxInputField.valueOption_;
              this.bitField0_ = (0xFFFFFFBF & this.bitField0_);
            }
          }
          while (true)
          {
            if (!paramOutOfBoxInputField.hasHelpText())
              break label244;
            setHelpText(paramOutOfBoxInputField.getHelpText());
            break;
            this.value_ = localOutOfBoxFieldValue;
            break label111;
            ensureValueOptionIsMutable();
            this.valueOption_.addAll(paramOutOfBoxInputField.valueOption_);
          }
        }
      }

      public final Builder setHasError(boolean paramBoolean)
      {
        this.bitField0_ = (0x20 | this.bitField0_);
        this.hasError_ = paramBoolean;
        return this;
      }

      public final Builder setHelpText(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x80 | this.bitField0_);
        this.helpText_ = paramString;
        return this;
      }

      public final Builder setId(Data.OutOfBoxInputField.Id paramId)
      {
        if (paramId == null)
          throw new NullPointerException();
        this.bitField0_ = (0x1 | this.bitField0_);
        this.id_ = paramId;
        return this;
      }

      public final Builder setLabel(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x4 | this.bitField0_);
        this.label_ = paramString;
        return this;
      }

      public final Builder setMandatory(boolean paramBoolean)
      {
        this.bitField0_ = (0x10 | this.bitField0_);
        this.mandatory_ = paramBoolean;
        return this;
      }

      public final Builder setType(Data.OutOfBoxInputField.Type paramType)
      {
        if (paramType == null)
          throw new NullPointerException();
        this.bitField0_ = (0x2 | this.bitField0_);
        this.type_ = paramType;
        return this;
      }

      public final Builder setValue(Data.OutOfBoxFieldValue.Builder paramBuilder)
      {
        this.value_ = paramBuilder.build();
        this.bitField0_ = (0x8 | this.bitField0_);
        return this;
      }

      public final Builder setValue(Data.OutOfBoxFieldValue paramOutOfBoxFieldValue)
      {
        if (paramOutOfBoxFieldValue == null)
          throw new NullPointerException();
        this.value_ = paramOutOfBoxFieldValue;
        this.bitField0_ = (0x8 | this.bitField0_);
        return this;
      }

      public final Builder setValueOption(int paramInt, Data.OutOfBoxFieldOption.Builder paramBuilder)
      {
        ensureValueOptionIsMutable();
        this.valueOption_.set(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder setValueOption(int paramInt, Data.OutOfBoxFieldOption paramOutOfBoxFieldOption)
      {
        if (paramOutOfBoxFieldOption == null)
          throw new NullPointerException();
        ensureValueOptionIsMutable();
        this.valueOption_.set(paramInt, paramOutOfBoxFieldOption);
        return this;
      }
    }

    public static enum Id
      implements Internal.EnumLite
    {
      private static Internal.EnumLiteMap<Id> internalValueMap = new Internal.EnumLiteMap()
      {
      };
      private final int value;

      static
      {
        BIRTHDAY = new Id("BIRTHDAY", 2, 3);
        GENDER = new Id("GENDER", 3, 4);
        DORITOS = new Id("DORITOS", 4, 5);
        UNACCEPTABLE_NAME_TERMS_ACCEPTED = new Id("UNACCEPTABLE_NAME_TERMS_ACCEPTED", 5, 6);
        COUNTRY = new Id("COUNTRY", 6, 7);
        PHONE_NUMBER = new Id("PHONE_NUMBER", 7, 8);
        IDV_REQUEST = new Id("IDV_REQUEST", 8, 9);
        IDV_PIN = new Id("IDV_PIN", 9, 10);
        IDV_OBFUSCATED_GAIA_ID = new Id("IDV_OBFUSCATED_GAIA_ID", 10, 11);
        PICASA_NAME = new Id("PICASA_NAME", 11, 12);
        ORIGINAL_FIRST_NAME = new Id("ORIGINAL_FIRST_NAME", 12, 13);
        ORIGINAL_LAST_NAME = new Id("ORIGINAL_LAST_NAME", 13, 14);
        INVITATION_TOKEN = new Id("INVITATION_TOKEN", 14, 15);
        ENABLE_CAMERASYNC = new Id("ENABLE_CAMERASYNC", 15, 16);
        PICASA_LINKED = new Id("PICASA_LINKED", 16, 17);
        ENABLE_WIFI_CAMERASYNC = new Id("ENABLE_WIFI_CAMERASYNC", 17, 18);
        DISABLE_CAMERASYNC = new Id("DISABLE_CAMERASYNC", 18, 19);
        DASHER_LEGAL_WARNING_BEEN_SHOWN = new Id("DASHER_LEGAL_WARNING_BEEN_SHOWN", 19, 20);
        Id[] arrayOfId = new Id[20];
        arrayOfId[0] = FIRST_NAME;
        arrayOfId[1] = LAST_NAME;
        arrayOfId[2] = BIRTHDAY;
        arrayOfId[3] = GENDER;
        arrayOfId[4] = DORITOS;
        arrayOfId[5] = UNACCEPTABLE_NAME_TERMS_ACCEPTED;
        arrayOfId[6] = COUNTRY;
        arrayOfId[7] = PHONE_NUMBER;
        arrayOfId[8] = IDV_REQUEST;
        arrayOfId[9] = IDV_PIN;
        arrayOfId[10] = IDV_OBFUSCATED_GAIA_ID;
        arrayOfId[11] = PICASA_NAME;
        arrayOfId[12] = ORIGINAL_FIRST_NAME;
        arrayOfId[13] = ORIGINAL_LAST_NAME;
        arrayOfId[14] = INVITATION_TOKEN;
        arrayOfId[15] = ENABLE_CAMERASYNC;
        arrayOfId[16] = PICASA_LINKED;
        arrayOfId[17] = ENABLE_WIFI_CAMERASYNC;
        arrayOfId[18] = DISABLE_CAMERASYNC;
        arrayOfId[19] = DASHER_LEGAL_WARNING_BEEN_SHOWN;
      }

      private Id(int paramInt1, int paramInt2)
      {
        this.value = paramInt1;
      }

      public static Id valueOf(int paramInt)
      {
        Id localId;
        switch (paramInt)
        {
        default:
          localId = null;
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
        case 6:
        case 7:
        case 8:
        case 9:
        case 10:
        case 11:
        case 12:
        case 13:
        case 14:
        case 15:
        case 16:
        case 17:
        case 18:
        case 19:
        case 20:
        }
        while (true)
        {
          return localId;
          localId = FIRST_NAME;
          continue;
          localId = LAST_NAME;
          continue;
          localId = BIRTHDAY;
          continue;
          localId = GENDER;
          continue;
          localId = DORITOS;
          continue;
          localId = UNACCEPTABLE_NAME_TERMS_ACCEPTED;
          continue;
          localId = COUNTRY;
          continue;
          localId = PHONE_NUMBER;
          continue;
          localId = IDV_REQUEST;
          continue;
          localId = IDV_PIN;
          continue;
          localId = IDV_OBFUSCATED_GAIA_ID;
          continue;
          localId = PICASA_NAME;
          continue;
          localId = ORIGINAL_FIRST_NAME;
          continue;
          localId = ORIGINAL_LAST_NAME;
          continue;
          localId = INVITATION_TOKEN;
          continue;
          localId = ENABLE_CAMERASYNC;
          continue;
          localId = PICASA_LINKED;
          continue;
          localId = ENABLE_WIFI_CAMERASYNC;
          continue;
          localId = DISABLE_CAMERASYNC;
          continue;
          localId = DASHER_LEGAL_WARNING_BEEN_SHOWN;
        }
      }

      public final int getNumber()
      {
        return this.value;
      }
    }

    public static enum Type
      implements Internal.EnumLite
    {
      private static Internal.EnumLiteMap<Type> internalValueMap = new Internal.EnumLiteMap()
      {
      };
      private final int value;

      static
      {
        CHECKBOX = new Type("CHECKBOX", 1, 2);
        DROPDOWN = new Type("DROPDOWN", 2, 3);
        BIRTHDAY_INPUT = new Type("BIRTHDAY_INPUT", 3, 4);
        HIDDEN = new Type("HIDDEN", 4, 5);
        RADIO_GROUP = new Type("RADIO_GROUP", 5, 6);
        RADIO_BUTTON = new Type("RADIO_BUTTON", 6, 7);
        Type[] arrayOfType = new Type[7];
        arrayOfType[0] = TEXT_INPUT;
        arrayOfType[1] = CHECKBOX;
        arrayOfType[2] = DROPDOWN;
        arrayOfType[3] = BIRTHDAY_INPUT;
        arrayOfType[4] = HIDDEN;
        arrayOfType[5] = RADIO_GROUP;
        arrayOfType[6] = RADIO_BUTTON;
      }

      private Type(int paramInt1, int paramInt2)
      {
        this.value = paramInt1;
      }

      public static Type valueOf(int paramInt)
      {
        Type localType;
        switch (paramInt)
        {
        default:
          localType = null;
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
        case 6:
        case 7:
        }
        while (true)
        {
          return localType;
          localType = TEXT_INPUT;
          continue;
          localType = CHECKBOX;
          continue;
          localType = DROPDOWN;
          continue;
          localType = BIRTHDAY_INPUT;
          continue;
          localType = HIDDEN;
          continue;
          localType = RADIO_GROUP;
          continue;
          localType = RADIO_BUTTON;
        }
      }

      public final int getNumber()
      {
        return this.value;
      }
    }
  }

  public static abstract interface OutOfBoxInputFieldOrBuilder extends MessageLiteOrBuilder
  {
    public abstract boolean getHasError();

    public abstract String getHelpText();

    public abstract Data.OutOfBoxInputField.Id getId();

    public abstract String getLabel();

    public abstract boolean getMandatory();

    public abstract Data.OutOfBoxInputField.Type getType();

    public abstract Data.OutOfBoxFieldValue getValue();

    public abstract Data.OutOfBoxFieldOption getValueOption(int paramInt);

    public abstract int getValueOptionCount();

    public abstract List<Data.OutOfBoxFieldOption> getValueOptionList();

    public abstract boolean hasHasError();

    public abstract boolean hasHelpText();

    public abstract boolean hasId();

    public abstract boolean hasLabel();

    public abstract boolean hasMandatory();

    public abstract boolean hasType();

    public abstract boolean hasValue();
  }

  public static final class OutOfBoxTextField extends GeneratedMessageLite
    implements Data.OutOfBoxTextFieldOrBuilder
  {
    private static final OutOfBoxTextField defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private TextAlignment textAlign_;
    private Object text_;

    static
    {
      OutOfBoxTextField localOutOfBoxTextField = new OutOfBoxTextField();
      defaultInstance = localOutOfBoxTextField;
      localOutOfBoxTextField.text_ = "";
      localOutOfBoxTextField.textAlign_ = TextAlignment.CENTER;
    }

    private OutOfBoxTextField()
    {
    }

    private OutOfBoxTextField(Builder paramBuilder)
    {
      super();
    }

    public static OutOfBoxTextField getDefaultInstance()
    {
      return defaultInstance;
    }

    private ByteString getTextBytes()
    {
      Object localObject = this.text_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.text_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static Builder newBuilder()
    {
      return Builder.access$43500();
    }

    public static Builder newBuilder(OutOfBoxTextField paramOutOfBoxTextField)
    {
      return Builder.access$43500().mergeFrom(paramOutOfBoxTextField);
    }

    public final OutOfBoxTextField getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeBytesSize(1, getTextBytes());
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeEnumSize(4, this.textAlign_.getNumber());
        this.memoizedSerializedSize = k;
      }
    }

    public final String getText()
    {
      Object localObject1 = this.text_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.text_ = str;
      }
    }

    public final TextAlignment getTextAlign()
    {
      return this.textAlign_;
    }

    public final boolean hasText()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean hasTextAlign()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeBytes(1, getTextBytes());
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeEnum(4, this.textAlign_.getNumber());
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Data.OutOfBoxTextField, Builder>
      implements Data.OutOfBoxTextFieldOrBuilder
    {
      private int bitField0_;
      private Data.OutOfBoxTextField.TextAlignment textAlign_ = Data.OutOfBoxTextField.TextAlignment.CENTER;
      private Object text_ = "";

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 10:
            this.bitField0_ = (0x1 | this.bitField0_);
            this.text_ = paramCodedInputStream.readBytes();
            break;
          case 32:
          }
          Data.OutOfBoxTextField.TextAlignment localTextAlignment = Data.OutOfBoxTextField.TextAlignment.valueOf(paramCodedInputStream.readEnum());
          if (localTextAlignment != null)
          {
            this.bitField0_ = (0x2 | this.bitField0_);
            this.textAlign_ = localTextAlignment;
          }
        }
      }

      public final Data.OutOfBoxTextField build()
      {
        Data.OutOfBoxTextField localOutOfBoxTextField = buildPartial();
        if (!localOutOfBoxTextField.isInitialized())
          throw new UninitializedMessageException();
        return localOutOfBoxTextField;
      }

      public final Data.OutOfBoxTextField buildPartial()
      {
        Data.OutOfBoxTextField localOutOfBoxTextField = new Data.OutOfBoxTextField(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Data.OutOfBoxTextField.access$43702(localOutOfBoxTextField, this.text_);
        if ((i & 0x2) == 2)
          k |= 2;
        Data.OutOfBoxTextField.access$43802(localOutOfBoxTextField, this.textAlign_);
        Data.OutOfBoxTextField.access$43902(localOutOfBoxTextField, k);
        return localOutOfBoxTextField;
      }

      public final Builder clear()
      {
        super.clear();
        this.text_ = "";
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.textAlign_ = Data.OutOfBoxTextField.TextAlignment.CENTER;
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        return this;
      }

      public final Builder clearText()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.text_ = Data.OutOfBoxTextField.getDefaultInstance().getText();
        return this;
      }

      public final Builder clearTextAlign()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.textAlign_ = Data.OutOfBoxTextField.TextAlignment.CENTER;
        return this;
      }

      public final Data.OutOfBoxTextField getDefaultInstanceForType()
      {
        return Data.OutOfBoxTextField.getDefaultInstance();
      }

      public final String getText()
      {
        Object localObject = this.text_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.text_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final Data.OutOfBoxTextField.TextAlignment getTextAlign()
      {
        return this.textAlign_;
      }

      public final boolean hasText()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean hasTextAlign()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Data.OutOfBoxTextField paramOutOfBoxTextField)
      {
        if (paramOutOfBoxTextField == Data.OutOfBoxTextField.getDefaultInstance());
        while (true)
        {
          return this;
          if (paramOutOfBoxTextField.hasText())
            setText(paramOutOfBoxTextField.getText());
          if (paramOutOfBoxTextField.hasTextAlign())
            setTextAlign(paramOutOfBoxTextField.getTextAlign());
        }
      }

      public final Builder setText(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x1 | this.bitField0_);
        this.text_ = paramString;
        return this;
      }

      public final Builder setTextAlign(Data.OutOfBoxTextField.TextAlignment paramTextAlignment)
      {
        if (paramTextAlignment == null)
          throw new NullPointerException();
        this.bitField0_ = (0x2 | this.bitField0_);
        this.textAlign_ = paramTextAlignment;
        return this;
      }
    }

    public static enum TextAlignment
      implements Internal.EnumLite
    {
      private static Internal.EnumLiteMap<TextAlignment> internalValueMap = new Internal.EnumLiteMap()
      {
      };
      private final int value;

      static
      {
        TextAlignment[] arrayOfTextAlignment = new TextAlignment[3];
        arrayOfTextAlignment[0] = CENTER;
        arrayOfTextAlignment[1] = LEFT;
        arrayOfTextAlignment[2] = RIGHT;
      }

      private TextAlignment(int paramInt1, int paramInt2)
      {
        this.value = paramInt1;
      }

      public static TextAlignment valueOf(int paramInt)
      {
        TextAlignment localTextAlignment;
        switch (paramInt)
        {
        default:
          localTextAlignment = null;
        case 1:
        case 2:
        case 3:
        }
        while (true)
        {
          return localTextAlignment;
          localTextAlignment = CENTER;
          continue;
          localTextAlignment = LEFT;
          continue;
          localTextAlignment = RIGHT;
        }
      }

      public final int getNumber()
      {
        return this.value;
      }
    }
  }

  public static abstract interface OutOfBoxTextFieldOrBuilder extends MessageLiteOrBuilder
  {
    public abstract String getText();

    public abstract Data.OutOfBoxTextField.TextAlignment getTextAlign();

    public abstract boolean hasText();

    public abstract boolean hasTextAlign();
  }

  public static final class OutOfBoxView extends GeneratedMessageLite
    implements Data.OutOfBoxViewOrBuilder
  {
    private static final OutOfBoxView defaultInstance;
    private static final long serialVersionUID;
    private List<Data.OutOfBoxAction> action_;
    private int bitField0_;
    private Data.OutOfBoxDialog dialog_;
    private List<Data.OutOfBoxField> field_;
    private Object header_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private Object title_;

    static
    {
      OutOfBoxView localOutOfBoxView = new OutOfBoxView();
      defaultInstance = localOutOfBoxView;
      localOutOfBoxView.dialog_ = Data.OutOfBoxDialog.getDefaultInstance();
      localOutOfBoxView.field_ = Collections.emptyList();
      localOutOfBoxView.action_ = Collections.emptyList();
      localOutOfBoxView.title_ = "";
      localOutOfBoxView.header_ = "";
    }

    private OutOfBoxView()
    {
    }

    private OutOfBoxView(Builder paramBuilder)
    {
      super();
    }

    public static OutOfBoxView getDefaultInstance()
    {
      return defaultInstance;
    }

    private ByteString getHeaderBytes()
    {
      Object localObject = this.header_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.header_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    private ByteString getTitleBytes()
    {
      Object localObject = this.title_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.title_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static Builder newBuilder()
    {
      return Builder.access$41700();
    }

    public static Builder newBuilder(OutOfBoxView paramOutOfBoxView)
    {
      return Builder.access$41700().mergeFrom(paramOutOfBoxView);
    }

    public final Data.OutOfBoxAction getAction(int paramInt)
    {
      return (Data.OutOfBoxAction)this.action_.get(paramInt);
    }

    public final int getActionCount()
    {
      return this.action_.size();
    }

    public final List<Data.OutOfBoxAction> getActionList()
    {
      return this.action_;
    }

    public final Data.OutOfBoxActionOrBuilder getActionOrBuilder(int paramInt)
    {
      return (Data.OutOfBoxActionOrBuilder)this.action_.get(paramInt);
    }

    public final List<? extends Data.OutOfBoxActionOrBuilder> getActionOrBuilderList()
    {
      return this.action_;
    }

    public final OutOfBoxView getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final Data.OutOfBoxDialog getDialog()
    {
      return this.dialog_;
    }

    public final Data.OutOfBoxField getField(int paramInt)
    {
      return (Data.OutOfBoxField)this.field_.get(paramInt);
    }

    public final int getFieldCount()
    {
      return this.field_.size();
    }

    public final List<Data.OutOfBoxField> getFieldList()
    {
      return this.field_;
    }

    public final Data.OutOfBoxFieldOrBuilder getFieldOrBuilder(int paramInt)
    {
      return (Data.OutOfBoxFieldOrBuilder)this.field_.get(paramInt);
    }

    public final List<? extends Data.OutOfBoxFieldOrBuilder> getFieldOrBuilderList()
    {
      return this.field_;
    }

    public final String getHeader()
    {
      Object localObject1 = this.header_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.header_ = str;
      }
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int i1 = i; ; i1 = k)
      {
        return i1;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeMessageSize(1, this.dialog_);
        for (int m = 0; m < this.field_.size(); m++)
          k += CodedOutputStream.computeMessageSize(2, (MessageLite)this.field_.get(m));
        for (int n = 0; n < this.action_.size(); n++)
          k += CodedOutputStream.computeMessageSize(3, (MessageLite)this.action_.get(n));
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeBytesSize(4, getTitleBytes());
        if ((0x4 & this.bitField0_) == 4)
          k += CodedOutputStream.computeBytesSize(5, getHeaderBytes());
        this.memoizedSerializedSize = k;
      }
    }

    public final String getTitle()
    {
      Object localObject1 = this.title_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.title_ = str;
      }
    }

    public final boolean hasDialog()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean hasHeader()
    {
      if ((0x4 & this.bitField0_) == 4);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasTitle()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeMessage(1, this.dialog_);
      for (int i = 0; i < this.field_.size(); i++)
        paramCodedOutputStream.writeMessage(2, (MessageLite)this.field_.get(i));
      for (int j = 0; j < this.action_.size(); j++)
        paramCodedOutputStream.writeMessage(3, (MessageLite)this.action_.get(j));
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeBytes(4, getTitleBytes());
      if ((0x4 & this.bitField0_) == 4)
        paramCodedOutputStream.writeBytes(5, getHeaderBytes());
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Data.OutOfBoxView, Builder>
      implements Data.OutOfBoxViewOrBuilder
    {
      private List<Data.OutOfBoxAction> action_ = Collections.emptyList();
      private int bitField0_;
      private Data.OutOfBoxDialog dialog_ = Data.OutOfBoxDialog.getDefaultInstance();
      private List<Data.OutOfBoxField> field_ = Collections.emptyList();
      private Object header_ = "";
      private Object title_ = "";

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private void ensureActionIsMutable()
      {
        if ((0x4 & this.bitField0_) != 4)
        {
          this.action_ = new ArrayList(this.action_);
          this.bitField0_ = (0x4 | this.bitField0_);
        }
      }

      private void ensureFieldIsMutable()
      {
        if ((0x2 & this.bitField0_) != 2)
        {
          this.field_ = new ArrayList(this.field_);
          this.bitField0_ = (0x2 | this.bitField0_);
        }
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 10:
            Data.OutOfBoxDialog.Builder localBuilder2 = Data.OutOfBoxDialog.newBuilder();
            if (hasDialog())
              localBuilder2.mergeFrom(getDialog());
            paramCodedInputStream.readMessage(localBuilder2, paramExtensionRegistryLite);
            setDialog(localBuilder2.buildPartial());
            break;
          case 18:
            Data.OutOfBoxField.Builder localBuilder1 = Data.OutOfBoxField.newBuilder();
            paramCodedInputStream.readMessage(localBuilder1, paramExtensionRegistryLite);
            addField(localBuilder1.buildPartial());
            break;
          case 26:
            Data.OutOfBoxAction.Builder localBuilder = Data.OutOfBoxAction.newBuilder();
            paramCodedInputStream.readMessage(localBuilder, paramExtensionRegistryLite);
            addAction(localBuilder.buildPartial());
            break;
          case 34:
            this.bitField0_ = (0x8 | this.bitField0_);
            this.title_ = paramCodedInputStream.readBytes();
            break;
          case 42:
          }
          this.bitField0_ = (0x10 | this.bitField0_);
          this.header_ = paramCodedInputStream.readBytes();
        }
      }

      public final Builder addAction(int paramInt, Data.OutOfBoxAction.Builder paramBuilder)
      {
        ensureActionIsMutable();
        this.action_.add(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder addAction(int paramInt, Data.OutOfBoxAction paramOutOfBoxAction)
      {
        if (paramOutOfBoxAction == null)
          throw new NullPointerException();
        ensureActionIsMutable();
        this.action_.add(paramInt, paramOutOfBoxAction);
        return this;
      }

      public final Builder addAction(Data.OutOfBoxAction.Builder paramBuilder)
      {
        ensureActionIsMutable();
        this.action_.add(paramBuilder.build());
        return this;
      }

      public final Builder addAction(Data.OutOfBoxAction paramOutOfBoxAction)
      {
        if (paramOutOfBoxAction == null)
          throw new NullPointerException();
        ensureActionIsMutable();
        this.action_.add(paramOutOfBoxAction);
        return this;
      }

      public final Builder addAllAction(Iterable<? extends Data.OutOfBoxAction> paramIterable)
      {
        ensureActionIsMutable();
        GeneratedMessageLite.Builder.addAll(paramIterable, this.action_);
        return this;
      }

      public final Builder addAllField(Iterable<? extends Data.OutOfBoxField> paramIterable)
      {
        ensureFieldIsMutable();
        GeneratedMessageLite.Builder.addAll(paramIterable, this.field_);
        return this;
      }

      public final Builder addField(int paramInt, Data.OutOfBoxField.Builder paramBuilder)
      {
        ensureFieldIsMutable();
        this.field_.add(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder addField(int paramInt, Data.OutOfBoxField paramOutOfBoxField)
      {
        if (paramOutOfBoxField == null)
          throw new NullPointerException();
        ensureFieldIsMutable();
        this.field_.add(paramInt, paramOutOfBoxField);
        return this;
      }

      public final Builder addField(Data.OutOfBoxField.Builder paramBuilder)
      {
        ensureFieldIsMutable();
        this.field_.add(paramBuilder.build());
        return this;
      }

      public final Builder addField(Data.OutOfBoxField paramOutOfBoxField)
      {
        if (paramOutOfBoxField == null)
          throw new NullPointerException();
        ensureFieldIsMutable();
        this.field_.add(paramOutOfBoxField);
        return this;
      }

      public final Data.OutOfBoxView build()
      {
        Data.OutOfBoxView localOutOfBoxView = buildPartial();
        if (!localOutOfBoxView.isInitialized())
          throw new UninitializedMessageException();
        return localOutOfBoxView;
      }

      public final Data.OutOfBoxView buildPartial()
      {
        Data.OutOfBoxView localOutOfBoxView = new Data.OutOfBoxView(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Data.OutOfBoxView.access$41902(localOutOfBoxView, this.dialog_);
        if ((0x2 & this.bitField0_) == 2)
        {
          this.field_ = Collections.unmodifiableList(this.field_);
          this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        }
        Data.OutOfBoxView.access$42002(localOutOfBoxView, this.field_);
        if ((0x4 & this.bitField0_) == 4)
        {
          this.action_ = Collections.unmodifiableList(this.action_);
          this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        }
        Data.OutOfBoxView.access$42102(localOutOfBoxView, this.action_);
        if ((i & 0x8) == 8)
          k |= 2;
        Data.OutOfBoxView.access$42202(localOutOfBoxView, this.title_);
        if ((i & 0x10) == 16)
          k |= 4;
        Data.OutOfBoxView.access$42302(localOutOfBoxView, this.header_);
        Data.OutOfBoxView.access$42402(localOutOfBoxView, k);
        return localOutOfBoxView;
      }

      public final Builder clear()
      {
        super.clear();
        this.dialog_ = Data.OutOfBoxDialog.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.field_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.action_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.title_ = "";
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        this.header_ = "";
        this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        return this;
      }

      public final Builder clearAction()
      {
        this.action_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        return this;
      }

      public final Builder clearDialog()
      {
        this.dialog_ = Data.OutOfBoxDialog.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        return this;
      }

      public final Builder clearField()
      {
        this.field_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        return this;
      }

      public final Builder clearHeader()
      {
        this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        this.header_ = Data.OutOfBoxView.getDefaultInstance().getHeader();
        return this;
      }

      public final Builder clearTitle()
      {
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        this.title_ = Data.OutOfBoxView.getDefaultInstance().getTitle();
        return this;
      }

      public final Data.OutOfBoxAction getAction(int paramInt)
      {
        return (Data.OutOfBoxAction)this.action_.get(paramInt);
      }

      public final int getActionCount()
      {
        return this.action_.size();
      }

      public final List<Data.OutOfBoxAction> getActionList()
      {
        return Collections.unmodifiableList(this.action_);
      }

      public final Data.OutOfBoxView getDefaultInstanceForType()
      {
        return Data.OutOfBoxView.getDefaultInstance();
      }

      public final Data.OutOfBoxDialog getDialog()
      {
        return this.dialog_;
      }

      public final Data.OutOfBoxField getField(int paramInt)
      {
        return (Data.OutOfBoxField)this.field_.get(paramInt);
      }

      public final int getFieldCount()
      {
        return this.field_.size();
      }

      public final List<Data.OutOfBoxField> getFieldList()
      {
        return Collections.unmodifiableList(this.field_);
      }

      public final String getHeader()
      {
        Object localObject = this.header_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.header_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final String getTitle()
      {
        Object localObject = this.title_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.title_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final boolean hasDialog()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean hasHeader()
      {
        if ((0x10 & this.bitField0_) == 16);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasTitle()
      {
        if ((0x8 & this.bitField0_) == 8);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Data.OutOfBoxView paramOutOfBoxView)
      {
        if (paramOutOfBoxView == Data.OutOfBoxView.getDefaultInstance())
          return this;
        Data.OutOfBoxDialog localOutOfBoxDialog;
        if (paramOutOfBoxView.hasDialog())
        {
          localOutOfBoxDialog = paramOutOfBoxView.getDialog();
          if (((0x1 & this.bitField0_) == 1) && (this.dialog_ != Data.OutOfBoxDialog.getDefaultInstance()))
          {
            this.dialog_ = Data.OutOfBoxDialog.newBuilder(this.dialog_).mergeFrom(localOutOfBoxDialog).buildPartial();
            label61: this.bitField0_ = (0x1 | this.bitField0_);
          }
        }
        else
        {
          if (!paramOutOfBoxView.field_.isEmpty())
          {
            if (!this.field_.isEmpty())
              break label201;
            this.field_ = paramOutOfBoxView.field_;
            this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
          }
          label114: if (!paramOutOfBoxView.action_.isEmpty())
          {
            if (!this.action_.isEmpty())
              break label222;
            this.action_ = paramOutOfBoxView.action_;
            this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
          }
        }
        while (true)
        {
          if (paramOutOfBoxView.hasTitle())
            setTitle(paramOutOfBoxView.getTitle());
          if (!paramOutOfBoxView.hasHeader())
            break;
          setHeader(paramOutOfBoxView.getHeader());
          break;
          this.dialog_ = localOutOfBoxDialog;
          break label61;
          label201: ensureFieldIsMutable();
          this.field_.addAll(paramOutOfBoxView.field_);
          break label114;
          label222: ensureActionIsMutable();
          this.action_.addAll(paramOutOfBoxView.action_);
        }
      }

      public final Builder setAction(int paramInt, Data.OutOfBoxAction.Builder paramBuilder)
      {
        ensureActionIsMutable();
        this.action_.set(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder setAction(int paramInt, Data.OutOfBoxAction paramOutOfBoxAction)
      {
        if (paramOutOfBoxAction == null)
          throw new NullPointerException();
        ensureActionIsMutable();
        this.action_.set(paramInt, paramOutOfBoxAction);
        return this;
      }

      public final Builder setDialog(Data.OutOfBoxDialog.Builder paramBuilder)
      {
        this.dialog_ = paramBuilder.build();
        this.bitField0_ = (0x1 | this.bitField0_);
        return this;
      }

      public final Builder setDialog(Data.OutOfBoxDialog paramOutOfBoxDialog)
      {
        if (paramOutOfBoxDialog == null)
          throw new NullPointerException();
        this.dialog_ = paramOutOfBoxDialog;
        this.bitField0_ = (0x1 | this.bitField0_);
        return this;
      }

      public final Builder setField(int paramInt, Data.OutOfBoxField.Builder paramBuilder)
      {
        ensureFieldIsMutable();
        this.field_.set(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder setField(int paramInt, Data.OutOfBoxField paramOutOfBoxField)
      {
        if (paramOutOfBoxField == null)
          throw new NullPointerException();
        ensureFieldIsMutable();
        this.field_.set(paramInt, paramOutOfBoxField);
        return this;
      }

      public final Builder setHeader(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x10 | this.bitField0_);
        this.header_ = paramString;
        return this;
      }

      public final Builder setTitle(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x8 | this.bitField0_);
        this.title_ = paramString;
        return this;
      }
    }
  }

  public static abstract interface OutOfBoxViewOrBuilder extends MessageLiteOrBuilder
  {
    public abstract Data.OutOfBoxAction getAction(int paramInt);

    public abstract int getActionCount();

    public abstract List<Data.OutOfBoxAction> getActionList();

    public abstract Data.OutOfBoxDialog getDialog();

    public abstract Data.OutOfBoxField getField(int paramInt);

    public abstract int getFieldCount();

    public abstract List<Data.OutOfBoxField> getFieldList();

    public abstract String getHeader();

    public abstract String getTitle();

    public abstract boolean hasDialog();

    public abstract boolean hasHeader();

    public abstract boolean hasTitle();
  }

  public static final class PeopleRequestData extends GeneratedMessageLite
    implements Data.PeopleRequestDataOrBuilder
  {
    private static final PeopleRequestData defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private boolean includePlusPages_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private Object shownPeopleBlob_;

    static
    {
      PeopleRequestData localPeopleRequestData = new PeopleRequestData();
      defaultInstance = localPeopleRequestData;
      localPeopleRequestData.shownPeopleBlob_ = "";
      localPeopleRequestData.includePlusPages_ = false;
    }

    private PeopleRequestData()
    {
    }

    private PeopleRequestData(Builder paramBuilder)
    {
      super();
    }

    public static PeopleRequestData getDefaultInstance()
    {
      return defaultInstance;
    }

    private ByteString getShownPeopleBlobBytes()
    {
      Object localObject = this.shownPeopleBlob_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.shownPeopleBlob_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static Builder newBuilder()
    {
      return Builder.access$54800();
    }

    public static Builder newBuilder(PeopleRequestData paramPeopleRequestData)
    {
      return Builder.access$54800().mergeFrom(paramPeopleRequestData);
    }

    public final PeopleRequestData getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final boolean getIncludePlusPages()
    {
      return this.includePlusPages_;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeBytesSize(1, getShownPeopleBlobBytes());
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeBoolSize(2, this.includePlusPages_);
        this.memoizedSerializedSize = k;
      }
    }

    public final String getShownPeopleBlob()
    {
      Object localObject1 = this.shownPeopleBlob_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.shownPeopleBlob_ = str;
      }
    }

    public final boolean hasIncludePlusPages()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasShownPeopleBlob()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeBytes(1, getShownPeopleBlobBytes());
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeBool(2, this.includePlusPages_);
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Data.PeopleRequestData, Builder>
      implements Data.PeopleRequestDataOrBuilder
    {
      private int bitField0_;
      private boolean includePlusPages_;
      private Object shownPeopleBlob_ = "";

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 10:
            this.bitField0_ = (0x1 | this.bitField0_);
            this.shownPeopleBlob_ = paramCodedInputStream.readBytes();
            break;
          case 16:
          }
          this.bitField0_ = (0x2 | this.bitField0_);
          this.includePlusPages_ = paramCodedInputStream.readBool();
        }
      }

      public final Data.PeopleRequestData build()
      {
        Data.PeopleRequestData localPeopleRequestData = buildPartial();
        if (!localPeopleRequestData.isInitialized())
          throw new UninitializedMessageException();
        return localPeopleRequestData;
      }

      public final Data.PeopleRequestData buildPartial()
      {
        Data.PeopleRequestData localPeopleRequestData = new Data.PeopleRequestData(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Data.PeopleRequestData.access$55002(localPeopleRequestData, this.shownPeopleBlob_);
        if ((i & 0x2) == 2)
          k |= 2;
        Data.PeopleRequestData.access$55102(localPeopleRequestData, this.includePlusPages_);
        Data.PeopleRequestData.access$55202(localPeopleRequestData, k);
        return localPeopleRequestData;
      }

      public final Builder clear()
      {
        super.clear();
        this.shownPeopleBlob_ = "";
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.includePlusPages_ = false;
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        return this;
      }

      public final Builder clearIncludePlusPages()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.includePlusPages_ = false;
        return this;
      }

      public final Builder clearShownPeopleBlob()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.shownPeopleBlob_ = Data.PeopleRequestData.getDefaultInstance().getShownPeopleBlob();
        return this;
      }

      public final Data.PeopleRequestData getDefaultInstanceForType()
      {
        return Data.PeopleRequestData.getDefaultInstance();
      }

      public final boolean getIncludePlusPages()
      {
        return this.includePlusPages_;
      }

      public final String getShownPeopleBlob()
      {
        Object localObject = this.shownPeopleBlob_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.shownPeopleBlob_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final boolean hasIncludePlusPages()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasShownPeopleBlob()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Data.PeopleRequestData paramPeopleRequestData)
      {
        if (paramPeopleRequestData == Data.PeopleRequestData.getDefaultInstance());
        while (true)
        {
          return this;
          if (paramPeopleRequestData.hasShownPeopleBlob())
            setShownPeopleBlob(paramPeopleRequestData.getShownPeopleBlob());
          if (paramPeopleRequestData.hasIncludePlusPages())
            setIncludePlusPages(paramPeopleRequestData.getIncludePlusPages());
        }
      }

      public final Builder setIncludePlusPages(boolean paramBoolean)
      {
        this.bitField0_ = (0x2 | this.bitField0_);
        this.includePlusPages_ = paramBoolean;
        return this;
      }

      public final Builder setShownPeopleBlob(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x1 | this.bitField0_);
        this.shownPeopleBlob_ = paramString;
        return this;
      }
    }
  }

  public static abstract interface PeopleRequestDataOrBuilder extends MessageLiteOrBuilder
  {
    public abstract boolean getIncludePlusPages();

    public abstract String getShownPeopleBlob();

    public abstract boolean hasIncludePlusPages();

    public abstract boolean hasShownPeopleBlob();
  }

  public static final class PeopleResult extends GeneratedMessageLite
    implements Data.PeopleResultOrBuilder
  {
    private static final PeopleResult defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private boolean dominant_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private Data.Person person_;
    private Object snippetHtml_;

    static
    {
      PeopleResult localPeopleResult = new PeopleResult();
      defaultInstance = localPeopleResult;
      localPeopleResult.person_ = Data.Person.getDefaultInstance();
      localPeopleResult.snippetHtml_ = "";
      localPeopleResult.dominant_ = false;
    }

    private PeopleResult()
    {
    }

    private PeopleResult(Builder paramBuilder)
    {
      super();
    }

    public static PeopleResult getDefaultInstance()
    {
      return defaultInstance;
    }

    private ByteString getSnippetHtmlBytes()
    {
      Object localObject = this.snippetHtml_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.snippetHtml_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static Builder newBuilder()
    {
      return Builder.access$56700();
    }

    public final PeopleResult getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final boolean getDominant()
    {
      return this.dominant_;
    }

    public final Data.Person getPerson()
    {
      return this.person_;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeMessageSize(1, this.person_);
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeBytesSize(2, getSnippetHtmlBytes());
        if ((0x4 & this.bitField0_) == 4)
          k += CodedOutputStream.computeBoolSize(3, this.dominant_);
        this.memoizedSerializedSize = k;
      }
    }

    public final String getSnippetHtml()
    {
      Object localObject1 = this.snippetHtml_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.snippetHtml_ = str;
      }
    }

    public final boolean hasDominant()
    {
      if ((0x4 & this.bitField0_) == 4);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasPerson()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean hasSnippetHtml()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeMessage(1, this.person_);
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeBytes(2, getSnippetHtmlBytes());
      if ((0x4 & this.bitField0_) == 4)
        paramCodedOutputStream.writeBool(3, this.dominant_);
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Data.PeopleResult, Builder>
      implements Data.PeopleResultOrBuilder
    {
      private int bitField0_;
      private boolean dominant_;
      private Data.Person person_ = Data.Person.getDefaultInstance();
      private Object snippetHtml_ = "";

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 10:
            Data.Person.Builder localBuilder = Data.Person.newBuilder();
            if (hasPerson())
              localBuilder.mergeFrom(getPerson());
            paramCodedInputStream.readMessage(localBuilder, paramExtensionRegistryLite);
            setPerson(localBuilder.buildPartial());
            break;
          case 18:
            this.bitField0_ = (0x2 | this.bitField0_);
            this.snippetHtml_ = paramCodedInputStream.readBytes();
            break;
          case 24:
          }
          this.bitField0_ = (0x4 | this.bitField0_);
          this.dominant_ = paramCodedInputStream.readBool();
        }
      }

      public final Data.PeopleResult build()
      {
        Data.PeopleResult localPeopleResult = buildPartial();
        if (!localPeopleResult.isInitialized())
          throw new UninitializedMessageException();
        return localPeopleResult;
      }

      public final Data.PeopleResult buildPartial()
      {
        Data.PeopleResult localPeopleResult = new Data.PeopleResult(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Data.PeopleResult.access$56902(localPeopleResult, this.person_);
        if ((i & 0x2) == 2)
          k |= 2;
        Data.PeopleResult.access$57002(localPeopleResult, this.snippetHtml_);
        if ((i & 0x4) == 4)
          k |= 4;
        Data.PeopleResult.access$57102(localPeopleResult, this.dominant_);
        Data.PeopleResult.access$57202(localPeopleResult, k);
        return localPeopleResult;
      }

      public final Builder clear()
      {
        super.clear();
        this.person_ = Data.Person.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.snippetHtml_ = "";
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.dominant_ = false;
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        return this;
      }

      public final Builder clearDominant()
      {
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.dominant_ = false;
        return this;
      }

      public final Builder clearPerson()
      {
        this.person_ = Data.Person.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        return this;
      }

      public final Builder clearSnippetHtml()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.snippetHtml_ = Data.PeopleResult.getDefaultInstance().getSnippetHtml();
        return this;
      }

      public final Data.PeopleResult getDefaultInstanceForType()
      {
        return Data.PeopleResult.getDefaultInstance();
      }

      public final boolean getDominant()
      {
        return this.dominant_;
      }

      public final Data.Person getPerson()
      {
        return this.person_;
      }

      public final String getSnippetHtml()
      {
        Object localObject = this.snippetHtml_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.snippetHtml_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final boolean hasDominant()
      {
        if ((0x4 & this.bitField0_) == 4);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasPerson()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean hasSnippetHtml()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Data.PeopleResult paramPeopleResult)
      {
        if (paramPeopleResult == Data.PeopleResult.getDefaultInstance())
          return this;
        Data.Person localPerson;
        if (paramPeopleResult.hasPerson())
        {
          localPerson = paramPeopleResult.getPerson();
          if (((0x1 & this.bitField0_) != 1) || (this.person_ == Data.Person.getDefaultInstance()))
            break label106;
        }
        label106: for (this.person_ = Data.Person.newBuilder(this.person_).mergeFrom(localPerson).buildPartial(); ; this.person_ = localPerson)
        {
          this.bitField0_ = (0x1 | this.bitField0_);
          if (paramPeopleResult.hasSnippetHtml())
            setSnippetHtml(paramPeopleResult.getSnippetHtml());
          if (!paramPeopleResult.hasDominant())
            break;
          setDominant(paramPeopleResult.getDominant());
          break;
        }
      }

      public final Builder setDominant(boolean paramBoolean)
      {
        this.bitField0_ = (0x4 | this.bitField0_);
        this.dominant_ = paramBoolean;
        return this;
      }

      public final Builder setPerson(Data.Person.Builder paramBuilder)
      {
        this.person_ = paramBuilder.build();
        this.bitField0_ = (0x1 | this.bitField0_);
        return this;
      }

      public final Builder setPerson(Data.Person paramPerson)
      {
        if (paramPerson == null)
          throw new NullPointerException();
        this.person_ = paramPerson;
        this.bitField0_ = (0x1 | this.bitField0_);
        return this;
      }

      public final Builder setSnippetHtml(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x2 | this.bitField0_);
        this.snippetHtml_ = paramString;
        return this;
      }
    }
  }

  public static abstract interface PeopleResultOrBuilder extends MessageLiteOrBuilder
  {
    public abstract boolean getDominant();

    public abstract Data.Person getPerson();

    public abstract String getSnippetHtml();

    public abstract boolean hasDominant();

    public abstract boolean hasPerson();

    public abstract boolean hasSnippetHtml();
  }

  public static final class PeopleResults extends GeneratedMessageLite
    implements Data.PeopleResultsOrBuilder
  {
    private static final PeopleResults defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private List<Data.PeopleResult> peopleResult_;
    private Object shownPeopleBlob_;

    static
    {
      PeopleResults localPeopleResults = new PeopleResults();
      defaultInstance = localPeopleResults;
      localPeopleResults.peopleResult_ = Collections.emptyList();
      localPeopleResults.shownPeopleBlob_ = "";
    }

    private PeopleResults()
    {
    }

    private PeopleResults(Builder paramBuilder)
    {
      super();
    }

    public static PeopleResults getDefaultInstance()
    {
      return defaultInstance;
    }

    private ByteString getShownPeopleBlobBytes()
    {
      Object localObject = this.shownPeopleBlob_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.shownPeopleBlob_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static Builder newBuilder()
    {
      return Builder.access$56100();
    }

    public static Builder newBuilder(PeopleResults paramPeopleResults)
    {
      return Builder.access$56100().mergeFrom(paramPeopleResults);
    }

    public final PeopleResults getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final Data.PeopleResult getPeopleResult(int paramInt)
    {
      return (Data.PeopleResult)this.peopleResult_.get(paramInt);
    }

    public final int getPeopleResultCount()
    {
      return this.peopleResult_.size();
    }

    public final List<Data.PeopleResult> getPeopleResultList()
    {
      return this.peopleResult_;
    }

    public final Data.PeopleResultOrBuilder getPeopleResultOrBuilder(int paramInt)
    {
      return (Data.PeopleResultOrBuilder)this.peopleResult_.get(paramInt);
    }

    public final List<? extends Data.PeopleResultOrBuilder> getPeopleResultOrBuilderList()
    {
      return this.peopleResult_;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int j;
      for (int m = i; ; m = j)
      {
        return m;
        j = 0;
        for (int k = 0; k < this.peopleResult_.size(); k++)
          j += CodedOutputStream.computeMessageSize(1, (MessageLite)this.peopleResult_.get(k));
        if ((0x1 & this.bitField0_) == 1)
          j += CodedOutputStream.computeBytesSize(2, getShownPeopleBlobBytes());
        this.memoizedSerializedSize = j;
      }
    }

    public final String getShownPeopleBlob()
    {
      Object localObject1 = this.shownPeopleBlob_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.shownPeopleBlob_ = str;
      }
    }

    public final boolean hasShownPeopleBlob()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      for (int i = 0; i < this.peopleResult_.size(); i++)
        paramCodedOutputStream.writeMessage(1, (MessageLite)this.peopleResult_.get(i));
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeBytes(2, getShownPeopleBlobBytes());
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Data.PeopleResults, Builder>
      implements Data.PeopleResultsOrBuilder
    {
      private int bitField0_;
      private List<Data.PeopleResult> peopleResult_ = Collections.emptyList();
      private Object shownPeopleBlob_ = "";

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private void ensurePeopleResultIsMutable()
      {
        if ((0x1 & this.bitField0_) != 1)
        {
          this.peopleResult_ = new ArrayList(this.peopleResult_);
          this.bitField0_ = (0x1 | this.bitField0_);
        }
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 10:
            Data.PeopleResult.Builder localBuilder = Data.PeopleResult.newBuilder();
            paramCodedInputStream.readMessage(localBuilder, paramExtensionRegistryLite);
            addPeopleResult(localBuilder.buildPartial());
            break;
          case 18:
          }
          this.bitField0_ = (0x2 | this.bitField0_);
          this.shownPeopleBlob_ = paramCodedInputStream.readBytes();
        }
      }

      public final Builder addAllPeopleResult(Iterable<? extends Data.PeopleResult> paramIterable)
      {
        ensurePeopleResultIsMutable();
        GeneratedMessageLite.Builder.addAll(paramIterable, this.peopleResult_);
        return this;
      }

      public final Builder addPeopleResult(int paramInt, Data.PeopleResult.Builder paramBuilder)
      {
        ensurePeopleResultIsMutable();
        this.peopleResult_.add(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder addPeopleResult(int paramInt, Data.PeopleResult paramPeopleResult)
      {
        if (paramPeopleResult == null)
          throw new NullPointerException();
        ensurePeopleResultIsMutable();
        this.peopleResult_.add(paramInt, paramPeopleResult);
        return this;
      }

      public final Builder addPeopleResult(Data.PeopleResult.Builder paramBuilder)
      {
        ensurePeopleResultIsMutable();
        this.peopleResult_.add(paramBuilder.build());
        return this;
      }

      public final Builder addPeopleResult(Data.PeopleResult paramPeopleResult)
      {
        if (paramPeopleResult == null)
          throw new NullPointerException();
        ensurePeopleResultIsMutable();
        this.peopleResult_.add(paramPeopleResult);
        return this;
      }

      public final Data.PeopleResults build()
      {
        Data.PeopleResults localPeopleResults = buildPartial();
        if (!localPeopleResults.isInitialized())
          throw new UninitializedMessageException();
        return localPeopleResults;
      }

      public final Data.PeopleResults buildPartial()
      {
        Data.PeopleResults localPeopleResults = new Data.PeopleResults(this, (byte)0);
        int i = this.bitField0_;
        if ((0x1 & this.bitField0_) == 1)
        {
          this.peopleResult_ = Collections.unmodifiableList(this.peopleResult_);
          this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        }
        Data.PeopleResults.access$56302(localPeopleResults, this.peopleResult_);
        int j = i & 0x2;
        int k = 0;
        if (j == 2)
          k = 1;
        Data.PeopleResults.access$56402(localPeopleResults, this.shownPeopleBlob_);
        Data.PeopleResults.access$56502(localPeopleResults, k);
        return localPeopleResults;
      }

      public final Builder clear()
      {
        super.clear();
        this.peopleResult_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.shownPeopleBlob_ = "";
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        return this;
      }

      public final Builder clearPeopleResult()
      {
        this.peopleResult_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        return this;
      }

      public final Builder clearShownPeopleBlob()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.shownPeopleBlob_ = Data.PeopleResults.getDefaultInstance().getShownPeopleBlob();
        return this;
      }

      public final Data.PeopleResults getDefaultInstanceForType()
      {
        return Data.PeopleResults.getDefaultInstance();
      }

      public final Data.PeopleResult getPeopleResult(int paramInt)
      {
        return (Data.PeopleResult)this.peopleResult_.get(paramInt);
      }

      public final int getPeopleResultCount()
      {
        return this.peopleResult_.size();
      }

      public final List<Data.PeopleResult> getPeopleResultList()
      {
        return Collections.unmodifiableList(this.peopleResult_);
      }

      public final String getShownPeopleBlob()
      {
        Object localObject = this.shownPeopleBlob_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.shownPeopleBlob_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final boolean hasShownPeopleBlob()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Data.PeopleResults paramPeopleResults)
      {
        if (paramPeopleResults == Data.PeopleResults.getDefaultInstance());
        label71: label90: 
        while (true)
        {
          return this;
          if (!paramPeopleResults.peopleResult_.isEmpty())
          {
            if (!this.peopleResult_.isEmpty())
              break label71;
            this.peopleResult_ = paramPeopleResults.peopleResult_;
            this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
          }
          while (true)
          {
            if (!paramPeopleResults.hasShownPeopleBlob())
              break label90;
            setShownPeopleBlob(paramPeopleResults.getShownPeopleBlob());
            break;
            ensurePeopleResultIsMutable();
            this.peopleResult_.addAll(paramPeopleResults.peopleResult_);
          }
        }
      }

      public final Builder setPeopleResult(int paramInt, Data.PeopleResult.Builder paramBuilder)
      {
        ensurePeopleResultIsMutable();
        this.peopleResult_.set(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder setPeopleResult(int paramInt, Data.PeopleResult paramPeopleResult)
      {
        if (paramPeopleResult == null)
          throw new NullPointerException();
        ensurePeopleResultIsMutable();
        this.peopleResult_.set(paramInt, paramPeopleResult);
        return this;
      }

      public final Builder setShownPeopleBlob(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x2 | this.bitField0_);
        this.shownPeopleBlob_ = paramString;
        return this;
      }
    }
  }

  public static abstract interface PeopleResultsOrBuilder extends MessageLiteOrBuilder
  {
    public abstract Data.PeopleResult getPeopleResult(int paramInt);

    public abstract int getPeopleResultCount();

    public abstract List<Data.PeopleResult> getPeopleResultList();

    public abstract String getShownPeopleBlob();

    public abstract boolean hasShownPeopleBlob();
  }

  public static final class PerfectStreamActivity extends GeneratedMessageLite
    implements Data.PerfectStreamActivityOrBuilder
  {
    private static final PerfectStreamActivity defaultInstance;
    private static final long serialVersionUID;
    private A2a.HangoutData a2AHangoutData_;
    private Data.ActionState actionState_;
    private Object activityId_;
    private long authorGaiaId_;
    private int bitField0_;
    private Data.CollapsedData collapsedData_;
    private Object creationSource_;
    private EmbedClient.EmbedClientItem embedClientItem_;
    private Object embedClientJspb_;
    private Data.ExpandedData expandedData_;
    private List<Data.Explanation> explanation_;
    private Object focusObfuscatedAuthorId_;
    private Data.HangoutData hangoutData_;
    private boolean isPopularPost_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private Data.PlusOneData plusoneData_;
    private Data.Source source_;

    static
    {
      PerfectStreamActivity localPerfectStreamActivity = new PerfectStreamActivity();
      defaultInstance = localPerfectStreamActivity;
      localPerfectStreamActivity.activityId_ = "";
      localPerfectStreamActivity.source_ = Data.Source.getDefaultInstance();
      localPerfectStreamActivity.explanation_ = Collections.emptyList();
      localPerfectStreamActivity.collapsedData_ = Data.CollapsedData.getDefaultInstance();
      localPerfectStreamActivity.expandedData_ = Data.ExpandedData.getDefaultInstance();
      localPerfectStreamActivity.authorGaiaId_ = 0L;
      localPerfectStreamActivity.focusObfuscatedAuthorId_ = "";
      localPerfectStreamActivity.actionState_ = Data.ActionState.getDefaultInstance();
      localPerfectStreamActivity.plusoneData_ = Data.PlusOneData.getDefaultInstance();
      localPerfectStreamActivity.creationSource_ = "";
      localPerfectStreamActivity.hangoutData_ = Data.HangoutData.getDefaultInstance();
      localPerfectStreamActivity.a2AHangoutData_ = A2a.HangoutData.getDefaultInstance();
      localPerfectStreamActivity.embedClientItem_ = EmbedClient.EmbedClientItem.getDefaultInstance();
      localPerfectStreamActivity.embedClientJspb_ = "";
      localPerfectStreamActivity.isPopularPost_ = false;
    }

    private PerfectStreamActivity()
    {
    }

    private PerfectStreamActivity(Builder paramBuilder)
    {
      super();
    }

    private ByteString getActivityIdBytes()
    {
      Object localObject = this.activityId_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.activityId_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    private ByteString getCreationSourceBytes()
    {
      Object localObject = this.creationSource_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.creationSource_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static PerfectStreamActivity getDefaultInstance()
    {
      return defaultInstance;
    }

    private ByteString getEmbedClientJspbBytes()
    {
      Object localObject = this.embedClientJspb_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.embedClientJspb_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    private ByteString getFocusObfuscatedAuthorIdBytes()
    {
      Object localObject = this.focusObfuscatedAuthorId_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.focusObfuscatedAuthorId_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static Builder newBuilder()
    {
      return Builder.access$100();
    }

    public static Builder newBuilder(PerfectStreamActivity paramPerfectStreamActivity)
    {
      return Builder.access$100().mergeFrom(paramPerfectStreamActivity);
    }

    public final A2a.HangoutData getA2AHangoutData()
    {
      return this.a2AHangoutData_;
    }

    public final Data.ActionState getActionState()
    {
      return this.actionState_;
    }

    public final String getActivityId()
    {
      Object localObject1 = this.activityId_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.activityId_ = str;
      }
    }

    public final long getAuthorGaiaId()
    {
      return this.authorGaiaId_;
    }

    public final Data.CollapsedData getCollapsedData()
    {
      return this.collapsedData_;
    }

    public final String getCreationSource()
    {
      Object localObject1 = this.creationSource_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.creationSource_ = str;
      }
    }

    public final PerfectStreamActivity getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final EmbedClient.EmbedClientItem getEmbedClientItem()
    {
      return this.embedClientItem_;
    }

    public final String getEmbedClientJspb()
    {
      Object localObject1 = this.embedClientJspb_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.embedClientJspb_ = str;
      }
    }

    public final Data.ExpandedData getExpandedData()
    {
      return this.expandedData_;
    }

    public final Data.Explanation getExplanation(int paramInt)
    {
      return (Data.Explanation)this.explanation_.get(paramInt);
    }

    public final int getExplanationCount()
    {
      return this.explanation_.size();
    }

    public final List<Data.Explanation> getExplanationList()
    {
      return this.explanation_;
    }

    public final Data.ExplanationOrBuilder getExplanationOrBuilder(int paramInt)
    {
      return (Data.ExplanationOrBuilder)this.explanation_.get(paramInt);
    }

    public final List<? extends Data.ExplanationOrBuilder> getExplanationOrBuilderList()
    {
      return this.explanation_;
    }

    public final String getFocusObfuscatedAuthorId()
    {
      Object localObject1 = this.focusObfuscatedAuthorId_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.focusObfuscatedAuthorId_ = str;
      }
    }

    @Deprecated
    public final Data.HangoutData getHangoutData()
    {
      return this.hangoutData_;
    }

    public final boolean getIsPopularPost()
    {
      return this.isPopularPost_;
    }

    public final Data.PlusOneData getPlusoneData()
    {
      return this.plusoneData_;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int n = i; ; n = k)
      {
        return n;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeBytesSize(1, getActivityIdBytes());
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeMessageSize(2, this.source_);
        for (int m = 0; m < this.explanation_.size(); m++)
          k += CodedOutputStream.computeMessageSize(3, (MessageLite)this.explanation_.get(m));
        if ((0x4 & this.bitField0_) == 4)
          k += CodedOutputStream.computeMessageSize(4, this.collapsedData_);
        if ((0x8 & this.bitField0_) == 8)
          k += CodedOutputStream.computeMessageSize(5, this.expandedData_);
        if ((0x10 & this.bitField0_) == 16)
          k += CodedOutputStream.computeInt64Size(6, this.authorGaiaId_);
        if ((0x40 & this.bitField0_) == 64)
          k += CodedOutputStream.computeMessageSize(7, this.actionState_);
        if ((0x80 & this.bitField0_) == 128)
          k += CodedOutputStream.computeMessageSize(8, this.plusoneData_);
        if ((0x100 & this.bitField0_) == 256)
          k += CodedOutputStream.computeBytesSize(9, getCreationSourceBytes());
        if ((0x200 & this.bitField0_) == 512)
          k += CodedOutputStream.computeMessageSize(10, this.hangoutData_);
        if ((0x20 & this.bitField0_) == 32)
          k += CodedOutputStream.computeBytesSize(11, getFocusObfuscatedAuthorIdBytes());
        if ((0x800 & this.bitField0_) == 2048)
          k += CodedOutputStream.computeMessageSize(12, this.embedClientItem_);
        if ((0x1000 & this.bitField0_) == 4096)
          k += CodedOutputStream.computeBytesSize(13, getEmbedClientJspbBytes());
        if ((0x400 & this.bitField0_) == 1024)
          k += CodedOutputStream.computeMessageSize(14, this.a2AHangoutData_);
        if ((0x2000 & this.bitField0_) == 8192)
          k += CodedOutputStream.computeBoolSize(15, this.isPopularPost_);
        this.memoizedSerializedSize = k;
      }
    }

    public final Data.Source getSource()
    {
      return this.source_;
    }

    public final boolean hasA2AHangoutData()
    {
      if ((0x400 & this.bitField0_) == 1024);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasActionState()
    {
      if ((0x40 & this.bitField0_) == 64);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasActivityId()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean hasAuthorGaiaId()
    {
      if ((0x10 & this.bitField0_) == 16);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasCollapsedData()
    {
      if ((0x4 & this.bitField0_) == 4);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasCreationSource()
    {
      if ((0x100 & this.bitField0_) == 256);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasEmbedClientItem()
    {
      if ((0x800 & this.bitField0_) == 2048);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasEmbedClientJspb()
    {
      if ((0x1000 & this.bitField0_) == 4096);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasExpandedData()
    {
      if ((0x8 & this.bitField0_) == 8);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasFocusObfuscatedAuthorId()
    {
      if ((0x20 & this.bitField0_) == 32);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    @Deprecated
    public final boolean hasHangoutData()
    {
      if ((0x200 & this.bitField0_) == 512);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasIsPopularPost()
    {
      if ((0x2000 & this.bitField0_) == 8192);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasPlusoneData()
    {
      if ((0x80 & this.bitField0_) == 128);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasSource()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        if ((hasExpandedData()) && (!getExpandedData().isInitialized()))
        {
          this.memoizedIsInitialized = 0;
          i = 0;
        }
        else if ((hasA2AHangoutData()) && (!getA2AHangoutData().isInitialized()))
        {
          this.memoizedIsInitialized = 0;
          i = 0;
        }
        else if ((hasEmbedClientItem()) && (!getEmbedClientItem().isInitialized()))
        {
          this.memoizedIsInitialized = 0;
          i = 0;
        }
        else
        {
          this.memoizedIsInitialized = i;
        }
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeBytes(1, getActivityIdBytes());
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeMessage(2, this.source_);
      for (int i = 0; i < this.explanation_.size(); i++)
        paramCodedOutputStream.writeMessage(3, (MessageLite)this.explanation_.get(i));
      if ((0x4 & this.bitField0_) == 4)
        paramCodedOutputStream.writeMessage(4, this.collapsedData_);
      if ((0x8 & this.bitField0_) == 8)
        paramCodedOutputStream.writeMessage(5, this.expandedData_);
      if ((0x10 & this.bitField0_) == 16)
        paramCodedOutputStream.writeInt64(6, this.authorGaiaId_);
      if ((0x40 & this.bitField0_) == 64)
        paramCodedOutputStream.writeMessage(7, this.actionState_);
      if ((0x80 & this.bitField0_) == 128)
        paramCodedOutputStream.writeMessage(8, this.plusoneData_);
      if ((0x100 & this.bitField0_) == 256)
        paramCodedOutputStream.writeBytes(9, getCreationSourceBytes());
      if ((0x200 & this.bitField0_) == 512)
        paramCodedOutputStream.writeMessage(10, this.hangoutData_);
      if ((0x20 & this.bitField0_) == 32)
        paramCodedOutputStream.writeBytes(11, getFocusObfuscatedAuthorIdBytes());
      if ((0x800 & this.bitField0_) == 2048)
        paramCodedOutputStream.writeMessage(12, this.embedClientItem_);
      if ((0x1000 & this.bitField0_) == 4096)
        paramCodedOutputStream.writeBytes(13, getEmbedClientJspbBytes());
      if ((0x400 & this.bitField0_) == 1024)
        paramCodedOutputStream.writeMessage(14, this.a2AHangoutData_);
      if ((0x2000 & this.bitField0_) == 8192)
        paramCodedOutputStream.writeBool(15, this.isPopularPost_);
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Data.PerfectStreamActivity, Builder>
      implements Data.PerfectStreamActivityOrBuilder
    {
      private A2a.HangoutData a2AHangoutData_ = A2a.HangoutData.getDefaultInstance();
      private Data.ActionState actionState_ = Data.ActionState.getDefaultInstance();
      private Object activityId_ = "";
      private long authorGaiaId_;
      private int bitField0_;
      private Data.CollapsedData collapsedData_ = Data.CollapsedData.getDefaultInstance();
      private Object creationSource_ = "";
      private EmbedClient.EmbedClientItem embedClientItem_ = EmbedClient.EmbedClientItem.getDefaultInstance();
      private Object embedClientJspb_ = "";
      private Data.ExpandedData expandedData_ = Data.ExpandedData.getDefaultInstance();
      private List<Data.Explanation> explanation_ = Collections.emptyList();
      private Object focusObfuscatedAuthorId_ = "";
      private Data.HangoutData hangoutData_ = Data.HangoutData.getDefaultInstance();
      private boolean isPopularPost_;
      private Data.PlusOneData plusoneData_ = Data.PlusOneData.getDefaultInstance();
      private Data.Source source_ = Data.Source.getDefaultInstance();

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private void ensureExplanationIsMutable()
      {
        if ((0x4 & this.bitField0_) != 4)
        {
          this.explanation_ = new ArrayList(this.explanation_);
          this.bitField0_ = (0x4 | this.bitField0_);
        }
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 10:
            this.bitField0_ = (0x1 | this.bitField0_);
            this.activityId_ = paramCodedInputStream.readBytes();
            break;
          case 18:
            Data.Source.Builder localBuilder8 = Data.Source.newBuilder();
            if (hasSource())
              localBuilder8.mergeFrom(getSource());
            paramCodedInputStream.readMessage(localBuilder8, paramExtensionRegistryLite);
            setSource(localBuilder8.buildPartial());
            break;
          case 26:
            Data.Explanation.Builder localBuilder7 = Data.Explanation.newBuilder();
            paramCodedInputStream.readMessage(localBuilder7, paramExtensionRegistryLite);
            addExplanation(localBuilder7.buildPartial());
            break;
          case 34:
            Data.CollapsedData.Builder localBuilder6 = Data.CollapsedData.newBuilder();
            if (hasCollapsedData())
              localBuilder6.mergeFrom(getCollapsedData());
            paramCodedInputStream.readMessage(localBuilder6, paramExtensionRegistryLite);
            setCollapsedData(localBuilder6.buildPartial());
            break;
          case 42:
            Data.ExpandedData.Builder localBuilder5 = Data.ExpandedData.newBuilder();
            if (hasExpandedData())
              localBuilder5.mergeFrom(getExpandedData());
            paramCodedInputStream.readMessage(localBuilder5, paramExtensionRegistryLite);
            setExpandedData(localBuilder5.buildPartial());
            break;
          case 48:
            this.bitField0_ = (0x20 | this.bitField0_);
            this.authorGaiaId_ = paramCodedInputStream.readInt64();
            break;
          case 58:
            Data.ActionState.Builder localBuilder4 = Data.ActionState.newBuilder();
            if (hasActionState())
              localBuilder4.mergeFrom(getActionState());
            paramCodedInputStream.readMessage(localBuilder4, paramExtensionRegistryLite);
            setActionState(localBuilder4.buildPartial());
            break;
          case 66:
            Data.PlusOneData.Builder localBuilder3 = Data.PlusOneData.newBuilder();
            if (hasPlusoneData())
              localBuilder3.mergeFrom(getPlusoneData());
            paramCodedInputStream.readMessage(localBuilder3, paramExtensionRegistryLite);
            setPlusoneData(localBuilder3.buildPartial());
            break;
          case 74:
            this.bitField0_ = (0x200 | this.bitField0_);
            this.creationSource_ = paramCodedInputStream.readBytes();
            break;
          case 82:
            Data.HangoutData.Builder localBuilder2 = Data.HangoutData.newBuilder();
            if (hasHangoutData())
              localBuilder2.mergeFrom(getHangoutData());
            paramCodedInputStream.readMessage(localBuilder2, paramExtensionRegistryLite);
            setHangoutData(localBuilder2.buildPartial());
            break;
          case 90:
            this.bitField0_ = (0x40 | this.bitField0_);
            this.focusObfuscatedAuthorId_ = paramCodedInputStream.readBytes();
            break;
          case 98:
            EmbedClient.EmbedClientItem.Builder localBuilder1 = EmbedClient.EmbedClientItem.newBuilder();
            if (hasEmbedClientItem())
              localBuilder1.mergeFrom(getEmbedClientItem());
            paramCodedInputStream.readMessage(localBuilder1, paramExtensionRegistryLite);
            setEmbedClientItem(localBuilder1.buildPartial());
            break;
          case 106:
            this.bitField0_ = (0x2000 | this.bitField0_);
            this.embedClientJspb_ = paramCodedInputStream.readBytes();
            break;
          case 114:
            A2a.HangoutData.Builder localBuilder = A2a.HangoutData.newBuilder();
            if (hasA2AHangoutData())
              localBuilder.mergeFrom(getA2AHangoutData());
            paramCodedInputStream.readMessage(localBuilder, paramExtensionRegistryLite);
            setA2AHangoutData(localBuilder.buildPartial());
            break;
          case 120:
          }
          this.bitField0_ = (0x4000 | this.bitField0_);
          this.isPopularPost_ = paramCodedInputStream.readBool();
        }
      }

      public final Builder addAllExplanation(Iterable<? extends Data.Explanation> paramIterable)
      {
        ensureExplanationIsMutable();
        GeneratedMessageLite.Builder.addAll(paramIterable, this.explanation_);
        return this;
      }

      public final Builder addExplanation(int paramInt, Data.Explanation.Builder paramBuilder)
      {
        ensureExplanationIsMutable();
        this.explanation_.add(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder addExplanation(int paramInt, Data.Explanation paramExplanation)
      {
        if (paramExplanation == null)
          throw new NullPointerException();
        ensureExplanationIsMutable();
        this.explanation_.add(paramInt, paramExplanation);
        return this;
      }

      public final Builder addExplanation(Data.Explanation.Builder paramBuilder)
      {
        ensureExplanationIsMutable();
        this.explanation_.add(paramBuilder.build());
        return this;
      }

      public final Builder addExplanation(Data.Explanation paramExplanation)
      {
        if (paramExplanation == null)
          throw new NullPointerException();
        ensureExplanationIsMutable();
        this.explanation_.add(paramExplanation);
        return this;
      }

      public final Data.PerfectStreamActivity build()
      {
        Data.PerfectStreamActivity localPerfectStreamActivity = buildPartial();
        if (!localPerfectStreamActivity.isInitialized())
          throw new UninitializedMessageException();
        return localPerfectStreamActivity;
      }

      public final Data.PerfectStreamActivity buildPartial()
      {
        Data.PerfectStreamActivity localPerfectStreamActivity = new Data.PerfectStreamActivity(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Data.PerfectStreamActivity.access$302(localPerfectStreamActivity, this.activityId_);
        if ((i & 0x2) == 2)
          k |= 2;
        Data.PerfectStreamActivity.access$402(localPerfectStreamActivity, this.source_);
        if ((0x4 & this.bitField0_) == 4)
        {
          this.explanation_ = Collections.unmodifiableList(this.explanation_);
          this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        }
        Data.PerfectStreamActivity.access$502(localPerfectStreamActivity, this.explanation_);
        if ((i & 0x8) == 8)
          k |= 4;
        Data.PerfectStreamActivity.access$602(localPerfectStreamActivity, this.collapsedData_);
        if ((i & 0x10) == 16)
          k |= 8;
        Data.PerfectStreamActivity.access$702(localPerfectStreamActivity, this.expandedData_);
        if ((i & 0x20) == 32)
          k |= 16;
        Data.PerfectStreamActivity.access$802(localPerfectStreamActivity, this.authorGaiaId_);
        if ((i & 0x40) == 64)
          k |= 32;
        Data.PerfectStreamActivity.access$902(localPerfectStreamActivity, this.focusObfuscatedAuthorId_);
        if ((i & 0x80) == 128)
          k |= 64;
        Data.PerfectStreamActivity.access$1002(localPerfectStreamActivity, this.actionState_);
        if ((i & 0x100) == 256)
          k |= 128;
        Data.PerfectStreamActivity.access$1102(localPerfectStreamActivity, this.plusoneData_);
        if ((i & 0x200) == 512)
          k |= 256;
        Data.PerfectStreamActivity.access$1202(localPerfectStreamActivity, this.creationSource_);
        if ((i & 0x400) == 1024)
          k |= 512;
        Data.PerfectStreamActivity.access$1302(localPerfectStreamActivity, this.hangoutData_);
        if ((i & 0x800) == 2048)
          k |= 1024;
        Data.PerfectStreamActivity.access$1402(localPerfectStreamActivity, this.a2AHangoutData_);
        if ((i & 0x1000) == 4096)
          k |= 2048;
        Data.PerfectStreamActivity.access$1502(localPerfectStreamActivity, this.embedClientItem_);
        if ((i & 0x2000) == 8192)
          k |= 4096;
        Data.PerfectStreamActivity.access$1602(localPerfectStreamActivity, this.embedClientJspb_);
        if ((i & 0x4000) == 16384)
          k |= 8192;
        Data.PerfectStreamActivity.access$1702(localPerfectStreamActivity, this.isPopularPost_);
        Data.PerfectStreamActivity.access$1802(localPerfectStreamActivity, k);
        return localPerfectStreamActivity;
      }

      public final Builder clear()
      {
        super.clear();
        this.activityId_ = "";
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.source_ = Data.Source.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.explanation_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.collapsedData_ = Data.CollapsedData.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        this.expandedData_ = Data.ExpandedData.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        this.authorGaiaId_ = 0L;
        this.bitField0_ = (0xFFFFFFDF & this.bitField0_);
        this.focusObfuscatedAuthorId_ = "";
        this.bitField0_ = (0xFFFFFFBF & this.bitField0_);
        this.actionState_ = Data.ActionState.getDefaultInstance();
        this.bitField0_ = (0xFFFFFF7F & this.bitField0_);
        this.plusoneData_ = Data.PlusOneData.getDefaultInstance();
        this.bitField0_ = (0xFFFFFEFF & this.bitField0_);
        this.creationSource_ = "";
        this.bitField0_ = (0xFFFFFDFF & this.bitField0_);
        this.hangoutData_ = Data.HangoutData.getDefaultInstance();
        this.bitField0_ = (0xFFFFFBFF & this.bitField0_);
        this.a2AHangoutData_ = A2a.HangoutData.getDefaultInstance();
        this.bitField0_ = (0xFFFFF7FF & this.bitField0_);
        this.embedClientItem_ = EmbedClient.EmbedClientItem.getDefaultInstance();
        this.bitField0_ = (0xFFFFEFFF & this.bitField0_);
        this.embedClientJspb_ = "";
        this.bitField0_ = (0xFFFFDFFF & this.bitField0_);
        this.isPopularPost_ = false;
        this.bitField0_ = (0xFFFFBFFF & this.bitField0_);
        return this;
      }

      public final Builder clearA2AHangoutData()
      {
        this.a2AHangoutData_ = A2a.HangoutData.getDefaultInstance();
        this.bitField0_ = (0xFFFFF7FF & this.bitField0_);
        return this;
      }

      public final Builder clearActionState()
      {
        this.actionState_ = Data.ActionState.getDefaultInstance();
        this.bitField0_ = (0xFFFFFF7F & this.bitField0_);
        return this;
      }

      public final Builder clearActivityId()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.activityId_ = Data.PerfectStreamActivity.getDefaultInstance().getActivityId();
        return this;
      }

      public final Builder clearAuthorGaiaId()
      {
        this.bitField0_ = (0xFFFFFFDF & this.bitField0_);
        this.authorGaiaId_ = 0L;
        return this;
      }

      public final Builder clearCollapsedData()
      {
        this.collapsedData_ = Data.CollapsedData.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        return this;
      }

      public final Builder clearCreationSource()
      {
        this.bitField0_ = (0xFFFFFDFF & this.bitField0_);
        this.creationSource_ = Data.PerfectStreamActivity.getDefaultInstance().getCreationSource();
        return this;
      }

      public final Builder clearEmbedClientItem()
      {
        this.embedClientItem_ = EmbedClient.EmbedClientItem.getDefaultInstance();
        this.bitField0_ = (0xFFFFEFFF & this.bitField0_);
        return this;
      }

      public final Builder clearEmbedClientJspb()
      {
        this.bitField0_ = (0xFFFFDFFF & this.bitField0_);
        this.embedClientJspb_ = Data.PerfectStreamActivity.getDefaultInstance().getEmbedClientJspb();
        return this;
      }

      public final Builder clearExpandedData()
      {
        this.expandedData_ = Data.ExpandedData.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        return this;
      }

      public final Builder clearExplanation()
      {
        this.explanation_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        return this;
      }

      public final Builder clearFocusObfuscatedAuthorId()
      {
        this.bitField0_ = (0xFFFFFFBF & this.bitField0_);
        this.focusObfuscatedAuthorId_ = Data.PerfectStreamActivity.getDefaultInstance().getFocusObfuscatedAuthorId();
        return this;
      }

      @Deprecated
      public final Builder clearHangoutData()
      {
        this.hangoutData_ = Data.HangoutData.getDefaultInstance();
        this.bitField0_ = (0xFFFFFBFF & this.bitField0_);
        return this;
      }

      public final Builder clearIsPopularPost()
      {
        this.bitField0_ = (0xFFFFBFFF & this.bitField0_);
        this.isPopularPost_ = false;
        return this;
      }

      public final Builder clearPlusoneData()
      {
        this.plusoneData_ = Data.PlusOneData.getDefaultInstance();
        this.bitField0_ = (0xFFFFFEFF & this.bitField0_);
        return this;
      }

      public final Builder clearSource()
      {
        this.source_ = Data.Source.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        return this;
      }

      public final A2a.HangoutData getA2AHangoutData()
      {
        return this.a2AHangoutData_;
      }

      public final Data.ActionState getActionState()
      {
        return this.actionState_;
      }

      public final String getActivityId()
      {
        Object localObject = this.activityId_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.activityId_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final long getAuthorGaiaId()
      {
        return this.authorGaiaId_;
      }

      public final Data.CollapsedData getCollapsedData()
      {
        return this.collapsedData_;
      }

      public final String getCreationSource()
      {
        Object localObject = this.creationSource_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.creationSource_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final Data.PerfectStreamActivity getDefaultInstanceForType()
      {
        return Data.PerfectStreamActivity.getDefaultInstance();
      }

      public final EmbedClient.EmbedClientItem getEmbedClientItem()
      {
        return this.embedClientItem_;
      }

      public final String getEmbedClientJspb()
      {
        Object localObject = this.embedClientJspb_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.embedClientJspb_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final Data.ExpandedData getExpandedData()
      {
        return this.expandedData_;
      }

      public final Data.Explanation getExplanation(int paramInt)
      {
        return (Data.Explanation)this.explanation_.get(paramInt);
      }

      public final int getExplanationCount()
      {
        return this.explanation_.size();
      }

      public final List<Data.Explanation> getExplanationList()
      {
        return Collections.unmodifiableList(this.explanation_);
      }

      public final String getFocusObfuscatedAuthorId()
      {
        Object localObject = this.focusObfuscatedAuthorId_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.focusObfuscatedAuthorId_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      @Deprecated
      public final Data.HangoutData getHangoutData()
      {
        return this.hangoutData_;
      }

      public final boolean getIsPopularPost()
      {
        return this.isPopularPost_;
      }

      public final Data.PlusOneData getPlusoneData()
      {
        return this.plusoneData_;
      }

      public final Data.Source getSource()
      {
        return this.source_;
      }

      public final boolean hasA2AHangoutData()
      {
        if ((0x800 & this.bitField0_) == 2048);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasActionState()
      {
        if ((0x80 & this.bitField0_) == 128);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasActivityId()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean hasAuthorGaiaId()
      {
        if ((0x20 & this.bitField0_) == 32);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasCollapsedData()
      {
        if ((0x8 & this.bitField0_) == 8);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasCreationSource()
      {
        if ((0x200 & this.bitField0_) == 512);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasEmbedClientItem()
      {
        if ((0x1000 & this.bitField0_) == 4096);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasEmbedClientJspb()
      {
        if ((0x2000 & this.bitField0_) == 8192);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasExpandedData()
      {
        if ((0x10 & this.bitField0_) == 16);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasFocusObfuscatedAuthorId()
      {
        if ((0x40 & this.bitField0_) == 64);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      @Deprecated
      public final boolean hasHangoutData()
      {
        if ((0x400 & this.bitField0_) == 1024);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasIsPopularPost()
      {
        if ((0x4000 & this.bitField0_) == 16384);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasPlusoneData()
      {
        if ((0x100 & this.bitField0_) == 256);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasSource()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean isInitialized()
      {
        boolean bool1;
        if (hasExpandedData())
        {
          boolean bool4 = getExpandedData().isInitialized();
          bool1 = false;
          if (bool4);
        }
        while (true)
        {
          return bool1;
          if (hasA2AHangoutData())
          {
            boolean bool3 = getA2AHangoutData().isInitialized();
            bool1 = false;
            if (!bool3);
          }
          else if (hasEmbedClientItem())
          {
            boolean bool2 = getEmbedClientItem().isInitialized();
            bool1 = false;
            if (!bool2);
          }
          else
          {
            bool1 = true;
          }
        }
      }

      public final Builder mergeFrom(Data.PerfectStreamActivity paramPerfectStreamActivity)
      {
        if (paramPerfectStreamActivity == Data.PerfectStreamActivity.getDefaultInstance())
          return this;
        if (paramPerfectStreamActivity.hasActivityId())
          setActivityId(paramPerfectStreamActivity.getActivityId());
        Data.Source localSource;
        label77: Data.CollapsedData localCollapsedData;
        label130: label184: Data.ExpandedData localExpandedData;
        label249: Data.ActionState localActionState;
        label348: Data.PlusOneData localPlusOneData;
        label416: Data.HangoutData localHangoutData1;
        label500: A2a.HangoutData localHangoutData;
        label568: EmbedClient.EmbedClientItem localEmbedClientItem;
        if (paramPerfectStreamActivity.hasSource())
        {
          localSource = paramPerfectStreamActivity.getSource();
          if (((0x2 & this.bitField0_) == 2) && (this.source_ != Data.Source.getDefaultInstance()))
          {
            this.source_ = Data.Source.newBuilder(this.source_).mergeFrom(localSource).buildPartial();
            this.bitField0_ = (0x2 | this.bitField0_);
          }
        }
        else
        {
          if (!paramPerfectStreamActivity.explanation_.isEmpty())
          {
            if (!this.explanation_.isEmpty())
              break label692;
            this.explanation_ = paramPerfectStreamActivity.explanation_;
            this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
          }
          if (paramPerfectStreamActivity.hasCollapsedData())
          {
            localCollapsedData = paramPerfectStreamActivity.getCollapsedData();
            if (((0x8 & this.bitField0_) != 8) || (this.collapsedData_ == Data.CollapsedData.getDefaultInstance()))
              break label713;
            this.collapsedData_ = Data.CollapsedData.newBuilder(this.collapsedData_).mergeFrom(localCollapsedData).buildPartial();
            this.bitField0_ = (0x8 | this.bitField0_);
          }
          if (paramPerfectStreamActivity.hasExpandedData())
          {
            localExpandedData = paramPerfectStreamActivity.getExpandedData();
            if (((0x10 & this.bitField0_) != 16) || (this.expandedData_ == Data.ExpandedData.getDefaultInstance()))
              break label722;
            this.expandedData_ = Data.ExpandedData.newBuilder(this.expandedData_).mergeFrom(localExpandedData).buildPartial();
            this.bitField0_ = (0x10 | this.bitField0_);
          }
          if (paramPerfectStreamActivity.hasAuthorGaiaId())
            setAuthorGaiaId(paramPerfectStreamActivity.getAuthorGaiaId());
          if (paramPerfectStreamActivity.hasFocusObfuscatedAuthorId())
            setFocusObfuscatedAuthorId(paramPerfectStreamActivity.getFocusObfuscatedAuthorId());
          if (paramPerfectStreamActivity.hasActionState())
          {
            localActionState = paramPerfectStreamActivity.getActionState();
            if (((0x80 & this.bitField0_) != 128) || (this.actionState_ == Data.ActionState.getDefaultInstance()))
              break label731;
            this.actionState_ = Data.ActionState.newBuilder(this.actionState_).mergeFrom(localActionState).buildPartial();
            this.bitField0_ = (0x80 | this.bitField0_);
          }
          if (paramPerfectStreamActivity.hasPlusoneData())
          {
            localPlusOneData = paramPerfectStreamActivity.getPlusoneData();
            if (((0x100 & this.bitField0_) != 256) || (this.plusoneData_ == Data.PlusOneData.getDefaultInstance()))
              break label740;
            this.plusoneData_ = Data.PlusOneData.newBuilder(this.plusoneData_).mergeFrom(localPlusOneData).buildPartial();
            this.bitField0_ = (0x100 | this.bitField0_);
          }
          if (paramPerfectStreamActivity.hasCreationSource())
            setCreationSource(paramPerfectStreamActivity.getCreationSource());
          if (paramPerfectStreamActivity.hasHangoutData())
          {
            localHangoutData1 = paramPerfectStreamActivity.getHangoutData();
            if (((0x400 & this.bitField0_) != 1024) || (this.hangoutData_ == Data.HangoutData.getDefaultInstance()))
              break label749;
            this.hangoutData_ = Data.HangoutData.newBuilder(this.hangoutData_).mergeFrom(localHangoutData1).buildPartial();
            this.bitField0_ = (0x400 | this.bitField0_);
          }
          if (paramPerfectStreamActivity.hasA2AHangoutData())
          {
            localHangoutData = paramPerfectStreamActivity.getA2AHangoutData();
            if (((0x800 & this.bitField0_) != 2048) || (this.a2AHangoutData_ == A2a.HangoutData.getDefaultInstance()))
              break label758;
            this.a2AHangoutData_ = A2a.HangoutData.newBuilder(this.a2AHangoutData_).mergeFrom(localHangoutData).buildPartial();
            this.bitField0_ = (0x800 | this.bitField0_);
          }
          if (paramPerfectStreamActivity.hasEmbedClientItem())
          {
            localEmbedClientItem = paramPerfectStreamActivity.getEmbedClientItem();
            if (((0x1000 & this.bitField0_) != 4096) || (this.embedClientItem_ == EmbedClient.EmbedClientItem.getDefaultInstance()))
              break label767;
          }
        }
        label692: label713: label722: label731: label740: label749: label758: label767: for (this.embedClientItem_ = EmbedClient.EmbedClientItem.newBuilder(this.embedClientItem_).mergeFrom(localEmbedClientItem).buildPartial(); ; this.embedClientItem_ = localEmbedClientItem)
        {
          this.bitField0_ = (0x1000 | this.bitField0_);
          if (paramPerfectStreamActivity.hasEmbedClientJspb())
            setEmbedClientJspb(paramPerfectStreamActivity.getEmbedClientJspb());
          if (!paramPerfectStreamActivity.hasIsPopularPost())
            break;
          setIsPopularPost(paramPerfectStreamActivity.getIsPopularPost());
          break;
          this.source_ = localSource;
          break label77;
          ensureExplanationIsMutable();
          this.explanation_.addAll(paramPerfectStreamActivity.explanation_);
          break label130;
          this.collapsedData_ = localCollapsedData;
          break label184;
          this.expandedData_ = localExpandedData;
          break label249;
          this.actionState_ = localActionState;
          break label348;
          this.plusoneData_ = localPlusOneData;
          break label416;
          this.hangoutData_ = localHangoutData1;
          break label500;
          this.a2AHangoutData_ = localHangoutData;
          break label568;
        }
      }

      public final Builder setA2AHangoutData(A2a.HangoutData.Builder paramBuilder)
      {
        this.a2AHangoutData_ = paramBuilder.build();
        this.bitField0_ = (0x800 | this.bitField0_);
        return this;
      }

      public final Builder setA2AHangoutData(A2a.HangoutData paramHangoutData)
      {
        if (paramHangoutData == null)
          throw new NullPointerException();
        this.a2AHangoutData_ = paramHangoutData;
        this.bitField0_ = (0x800 | this.bitField0_);
        return this;
      }

      public final Builder setActionState(Data.ActionState.Builder paramBuilder)
      {
        this.actionState_ = paramBuilder.build();
        this.bitField0_ = (0x80 | this.bitField0_);
        return this;
      }

      public final Builder setActionState(Data.ActionState paramActionState)
      {
        if (paramActionState == null)
          throw new NullPointerException();
        this.actionState_ = paramActionState;
        this.bitField0_ = (0x80 | this.bitField0_);
        return this;
      }

      public final Builder setActivityId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x1 | this.bitField0_);
        this.activityId_ = paramString;
        return this;
      }

      public final Builder setAuthorGaiaId(long paramLong)
      {
        this.bitField0_ = (0x20 | this.bitField0_);
        this.authorGaiaId_ = paramLong;
        return this;
      }

      public final Builder setCollapsedData(Data.CollapsedData.Builder paramBuilder)
      {
        this.collapsedData_ = paramBuilder.build();
        this.bitField0_ = (0x8 | this.bitField0_);
        return this;
      }

      public final Builder setCollapsedData(Data.CollapsedData paramCollapsedData)
      {
        if (paramCollapsedData == null)
          throw new NullPointerException();
        this.collapsedData_ = paramCollapsedData;
        this.bitField0_ = (0x8 | this.bitField0_);
        return this;
      }

      public final Builder setCreationSource(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x200 | this.bitField0_);
        this.creationSource_ = paramString;
        return this;
      }

      public final Builder setEmbedClientItem(EmbedClient.EmbedClientItem.Builder paramBuilder)
      {
        this.embedClientItem_ = paramBuilder.build();
        this.bitField0_ = (0x1000 | this.bitField0_);
        return this;
      }

      public final Builder setEmbedClientItem(EmbedClient.EmbedClientItem paramEmbedClientItem)
      {
        if (paramEmbedClientItem == null)
          throw new NullPointerException();
        this.embedClientItem_ = paramEmbedClientItem;
        this.bitField0_ = (0x1000 | this.bitField0_);
        return this;
      }

      public final Builder setEmbedClientJspb(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x2000 | this.bitField0_);
        this.embedClientJspb_ = paramString;
        return this;
      }

      public final Builder setExpandedData(Data.ExpandedData.Builder paramBuilder)
      {
        this.expandedData_ = paramBuilder.build();
        this.bitField0_ = (0x10 | this.bitField0_);
        return this;
      }

      public final Builder setExpandedData(Data.ExpandedData paramExpandedData)
      {
        if (paramExpandedData == null)
          throw new NullPointerException();
        this.expandedData_ = paramExpandedData;
        this.bitField0_ = (0x10 | this.bitField0_);
        return this;
      }

      public final Builder setExplanation(int paramInt, Data.Explanation.Builder paramBuilder)
      {
        ensureExplanationIsMutable();
        this.explanation_.set(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder setExplanation(int paramInt, Data.Explanation paramExplanation)
      {
        if (paramExplanation == null)
          throw new NullPointerException();
        ensureExplanationIsMutable();
        this.explanation_.set(paramInt, paramExplanation);
        return this;
      }

      public final Builder setFocusObfuscatedAuthorId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x40 | this.bitField0_);
        this.focusObfuscatedAuthorId_ = paramString;
        return this;
      }

      @Deprecated
      public final Builder setHangoutData(Data.HangoutData.Builder paramBuilder)
      {
        this.hangoutData_ = paramBuilder.build();
        this.bitField0_ = (0x400 | this.bitField0_);
        return this;
      }

      @Deprecated
      public final Builder setHangoutData(Data.HangoutData paramHangoutData)
      {
        if (paramHangoutData == null)
          throw new NullPointerException();
        this.hangoutData_ = paramHangoutData;
        this.bitField0_ = (0x400 | this.bitField0_);
        return this;
      }

      public final Builder setIsPopularPost(boolean paramBoolean)
      {
        this.bitField0_ = (0x4000 | this.bitField0_);
        this.isPopularPost_ = paramBoolean;
        return this;
      }

      public final Builder setPlusoneData(Data.PlusOneData.Builder paramBuilder)
      {
        this.plusoneData_ = paramBuilder.build();
        this.bitField0_ = (0x100 | this.bitField0_);
        return this;
      }

      public final Builder setPlusoneData(Data.PlusOneData paramPlusOneData)
      {
        if (paramPlusOneData == null)
          throw new NullPointerException();
        this.plusoneData_ = paramPlusOneData;
        this.bitField0_ = (0x100 | this.bitField0_);
        return this;
      }

      public final Builder setSource(Data.Source.Builder paramBuilder)
      {
        this.source_ = paramBuilder.build();
        this.bitField0_ = (0x2 | this.bitField0_);
        return this;
      }

      public final Builder setSource(Data.Source paramSource)
      {
        if (paramSource == null)
          throw new NullPointerException();
        this.source_ = paramSource;
        this.bitField0_ = (0x2 | this.bitField0_);
        return this;
      }
    }
  }

  public static abstract interface PerfectStreamActivityOrBuilder extends MessageLiteOrBuilder
  {
    public abstract A2a.HangoutData getA2AHangoutData();

    public abstract Data.ActionState getActionState();

    public abstract String getActivityId();

    public abstract long getAuthorGaiaId();

    public abstract Data.CollapsedData getCollapsedData();

    public abstract String getCreationSource();

    public abstract EmbedClient.EmbedClientItem getEmbedClientItem();

    public abstract String getEmbedClientJspb();

    public abstract Data.ExpandedData getExpandedData();

    public abstract Data.Explanation getExplanation(int paramInt);

    public abstract int getExplanationCount();

    public abstract List<Data.Explanation> getExplanationList();

    public abstract String getFocusObfuscatedAuthorId();

    @Deprecated
    public abstract Data.HangoutData getHangoutData();

    public abstract boolean getIsPopularPost();

    public abstract Data.PlusOneData getPlusoneData();

    public abstract Data.Source getSource();

    public abstract boolean hasA2AHangoutData();

    public abstract boolean hasActionState();

    public abstract boolean hasActivityId();

    public abstract boolean hasAuthorGaiaId();

    public abstract boolean hasCollapsedData();

    public abstract boolean hasCreationSource();

    public abstract boolean hasEmbedClientItem();

    public abstract boolean hasEmbedClientJspb();

    public abstract boolean hasExpandedData();

    public abstract boolean hasFocusObfuscatedAuthorId();

    @Deprecated
    public abstract boolean hasHangoutData();

    public abstract boolean hasIsPopularPost();

    public abstract boolean hasPlusoneData();

    public abstract boolean hasSource();
  }

  public static final class Person extends GeneratedMessageLite
    implements Data.PersonOrBuilder
  {
    private static final Person defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private Object email_;
    private Object focusObfuscatedId_;
    private long gaiaId_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private Object name_;
    private Object profilePhotoUrl_;

    static
    {
      Person localPerson = new Person();
      defaultInstance = localPerson;
      localPerson.gaiaId_ = 0L;
      localPerson.focusObfuscatedId_ = "";
      localPerson.name_ = "";
      localPerson.email_ = "";
      localPerson.profilePhotoUrl_ = "";
    }

    private Person()
    {
    }

    private Person(Builder paramBuilder)
    {
      super();
    }

    public static Person getDefaultInstance()
    {
      return defaultInstance;
    }

    private ByteString getEmailBytes()
    {
      Object localObject = this.email_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.email_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    private ByteString getFocusObfuscatedIdBytes()
    {
      Object localObject = this.focusObfuscatedId_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.focusObfuscatedId_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    private ByteString getNameBytes()
    {
      Object localObject = this.name_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.name_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    private ByteString getProfilePhotoUrlBytes()
    {
      Object localObject = this.profilePhotoUrl_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.profilePhotoUrl_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static Builder newBuilder()
    {
      return Builder.access$14700();
    }

    public static Builder newBuilder(Person paramPerson)
    {
      return Builder.access$14700().mergeFrom(paramPerson);
    }

    public final Person getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final String getEmail()
    {
      Object localObject1 = this.email_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.email_ = str;
      }
    }

    public final String getFocusObfuscatedId()
    {
      Object localObject1 = this.focusObfuscatedId_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.focusObfuscatedId_ = str;
      }
    }

    public final long getGaiaId()
    {
      return this.gaiaId_;
    }

    public final String getName()
    {
      Object localObject1 = this.name_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.name_ = str;
      }
    }

    public final String getProfilePhotoUrl()
    {
      Object localObject1 = this.profilePhotoUrl_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.profilePhotoUrl_ = str;
      }
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeInt64Size(1, this.gaiaId_);
        if ((0x4 & this.bitField0_) == 4)
          k += CodedOutputStream.computeBytesSize(2, getNameBytes());
        if ((0x8 & this.bitField0_) == 8)
          k += CodedOutputStream.computeBytesSize(3, getEmailBytes());
        if ((0x10 & this.bitField0_) == 16)
          k += CodedOutputStream.computeBytesSize(4, getProfilePhotoUrlBytes());
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeBytesSize(5, getFocusObfuscatedIdBytes());
        this.memoizedSerializedSize = k;
      }
    }

    public final boolean hasEmail()
    {
      if ((0x8 & this.bitField0_) == 8);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasFocusObfuscatedId()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasGaiaId()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean hasName()
    {
      if ((0x4 & this.bitField0_) == 4);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasProfilePhotoUrl()
    {
      if ((0x10 & this.bitField0_) == 16);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeInt64(1, this.gaiaId_);
      if ((0x4 & this.bitField0_) == 4)
        paramCodedOutputStream.writeBytes(2, getNameBytes());
      if ((0x8 & this.bitField0_) == 8)
        paramCodedOutputStream.writeBytes(3, getEmailBytes());
      if ((0x10 & this.bitField0_) == 16)
        paramCodedOutputStream.writeBytes(4, getProfilePhotoUrlBytes());
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeBytes(5, getFocusObfuscatedIdBytes());
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Data.Person, Builder>
      implements Data.PersonOrBuilder
    {
      private int bitField0_;
      private Object email_ = "";
      private Object focusObfuscatedId_ = "";
      private long gaiaId_;
      private Object name_ = "";
      private Object profilePhotoUrl_ = "";

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 8:
            this.bitField0_ = (0x1 | this.bitField0_);
            this.gaiaId_ = paramCodedInputStream.readInt64();
            break;
          case 18:
            this.bitField0_ = (0x4 | this.bitField0_);
            this.name_ = paramCodedInputStream.readBytes();
            break;
          case 26:
            this.bitField0_ = (0x8 | this.bitField0_);
            this.email_ = paramCodedInputStream.readBytes();
            break;
          case 34:
            this.bitField0_ = (0x10 | this.bitField0_);
            this.profilePhotoUrl_ = paramCodedInputStream.readBytes();
            break;
          case 42:
          }
          this.bitField0_ = (0x2 | this.bitField0_);
          this.focusObfuscatedId_ = paramCodedInputStream.readBytes();
        }
      }

      public final Data.Person build()
      {
        Data.Person localPerson = buildPartial();
        if (!localPerson.isInitialized())
          throw new UninitializedMessageException();
        return localPerson;
      }

      public final Data.Person buildPartial()
      {
        Data.Person localPerson = new Data.Person(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Data.Person.access$14902(localPerson, this.gaiaId_);
        if ((i & 0x2) == 2)
          k |= 2;
        Data.Person.access$15002(localPerson, this.focusObfuscatedId_);
        if ((i & 0x4) == 4)
          k |= 4;
        Data.Person.access$15102(localPerson, this.name_);
        if ((i & 0x8) == 8)
          k |= 8;
        Data.Person.access$15202(localPerson, this.email_);
        if ((i & 0x10) == 16)
          k |= 16;
        Data.Person.access$15302(localPerson, this.profilePhotoUrl_);
        Data.Person.access$15402(localPerson, k);
        return localPerson;
      }

      public final Builder clear()
      {
        super.clear();
        this.gaiaId_ = 0L;
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.focusObfuscatedId_ = "";
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.name_ = "";
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.email_ = "";
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        this.profilePhotoUrl_ = "";
        this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        return this;
      }

      public final Builder clearEmail()
      {
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        this.email_ = Data.Person.getDefaultInstance().getEmail();
        return this;
      }

      public final Builder clearFocusObfuscatedId()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.focusObfuscatedId_ = Data.Person.getDefaultInstance().getFocusObfuscatedId();
        return this;
      }

      public final Builder clearGaiaId()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.gaiaId_ = 0L;
        return this;
      }

      public final Builder clearName()
      {
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.name_ = Data.Person.getDefaultInstance().getName();
        return this;
      }

      public final Builder clearProfilePhotoUrl()
      {
        this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        this.profilePhotoUrl_ = Data.Person.getDefaultInstance().getProfilePhotoUrl();
        return this;
      }

      public final Data.Person getDefaultInstanceForType()
      {
        return Data.Person.getDefaultInstance();
      }

      public final String getEmail()
      {
        Object localObject = this.email_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.email_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final String getFocusObfuscatedId()
      {
        Object localObject = this.focusObfuscatedId_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.focusObfuscatedId_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final long getGaiaId()
      {
        return this.gaiaId_;
      }

      public final String getName()
      {
        Object localObject = this.name_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.name_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final String getProfilePhotoUrl()
      {
        Object localObject = this.profilePhotoUrl_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.profilePhotoUrl_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final boolean hasEmail()
      {
        if ((0x8 & this.bitField0_) == 8);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasFocusObfuscatedId()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasGaiaId()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean hasName()
      {
        if ((0x4 & this.bitField0_) == 4);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasProfilePhotoUrl()
      {
        if ((0x10 & this.bitField0_) == 16);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Data.Person paramPerson)
      {
        if (paramPerson == Data.Person.getDefaultInstance());
        while (true)
        {
          return this;
          if (paramPerson.hasGaiaId())
            setGaiaId(paramPerson.getGaiaId());
          if (paramPerson.hasFocusObfuscatedId())
            setFocusObfuscatedId(paramPerson.getFocusObfuscatedId());
          if (paramPerson.hasName())
            setName(paramPerson.getName());
          if (paramPerson.hasEmail())
            setEmail(paramPerson.getEmail());
          if (paramPerson.hasProfilePhotoUrl())
            setProfilePhotoUrl(paramPerson.getProfilePhotoUrl());
        }
      }

      public final Builder setEmail(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x8 | this.bitField0_);
        this.email_ = paramString;
        return this;
      }

      public final Builder setFocusObfuscatedId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x2 | this.bitField0_);
        this.focusObfuscatedId_ = paramString;
        return this;
      }

      public final Builder setGaiaId(long paramLong)
      {
        this.bitField0_ = (0x1 | this.bitField0_);
        this.gaiaId_ = paramLong;
        return this;
      }

      public final Builder setName(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x4 | this.bitField0_);
        this.name_ = paramString;
        return this;
      }

      public final Builder setProfilePhotoUrl(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x10 | this.bitField0_);
        this.profilePhotoUrl_ = paramString;
        return this;
      }
    }
  }

  public static abstract interface PersonOrBuilder extends MessageLiteOrBuilder
  {
    public abstract String getEmail();

    public abstract String getFocusObfuscatedId();

    public abstract long getGaiaId();

    public abstract String getName();

    public abstract String getProfilePhotoUrl();

    public abstract boolean hasEmail();

    public abstract boolean hasFocusObfuscatedId();

    public abstract boolean hasGaiaId();

    public abstract boolean hasName();

    public abstract boolean hasProfilePhotoUrl();
  }

  public static final class PersonSuggestion extends GeneratedMessageLite
    implements Data.PersonSuggestionOrBuilder
  {
    private static final PersonSuggestion defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private float confidenceScore_;
    private Object focusObfuscatedId_;
    private long gaiaId_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;

    static
    {
      PersonSuggestion localPersonSuggestion = new PersonSuggestion();
      defaultInstance = localPersonSuggestion;
      localPersonSuggestion.gaiaId_ = 0L;
      localPersonSuggestion.focusObfuscatedId_ = "";
      localPersonSuggestion.confidenceScore_ = 0.0F;
    }

    private PersonSuggestion()
    {
    }

    private PersonSuggestion(Builder paramBuilder)
    {
      super();
    }

    public static PersonSuggestion getDefaultInstance()
    {
      return defaultInstance;
    }

    private ByteString getFocusObfuscatedIdBytes()
    {
      Object localObject = this.focusObfuscatedId_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.focusObfuscatedId_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static Builder newBuilder()
    {
      return Builder.access$28900();
    }

    public final float getConfidenceScore()
    {
      return this.confidenceScore_;
    }

    public final PersonSuggestion getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final String getFocusObfuscatedId()
    {
      Object localObject1 = this.focusObfuscatedId_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.focusObfuscatedId_ = str;
      }
    }

    public final long getGaiaId()
    {
      return this.gaiaId_;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeInt64Size(1, this.gaiaId_);
        if ((0x4 & this.bitField0_) == 4)
          k += CodedOutputStream.computeFloatSize(2, this.confidenceScore_);
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeBytesSize(3, getFocusObfuscatedIdBytes());
        this.memoizedSerializedSize = k;
      }
    }

    public final boolean hasConfidenceScore()
    {
      if ((0x4 & this.bitField0_) == 4);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasFocusObfuscatedId()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasGaiaId()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeInt64(1, this.gaiaId_);
      if ((0x4 & this.bitField0_) == 4)
        paramCodedOutputStream.writeFloat(2, this.confidenceScore_);
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeBytes(3, getFocusObfuscatedIdBytes());
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Data.PersonSuggestion, Builder>
      implements Data.PersonSuggestionOrBuilder
    {
      private int bitField0_;
      private float confidenceScore_;
      private Object focusObfuscatedId_ = "";
      private long gaiaId_;

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 8:
            this.bitField0_ = (0x1 | this.bitField0_);
            this.gaiaId_ = paramCodedInputStream.readInt64();
            break;
          case 21:
            this.bitField0_ = (0x4 | this.bitField0_);
            this.confidenceScore_ = paramCodedInputStream.readFloat();
            break;
          case 26:
          }
          this.bitField0_ = (0x2 | this.bitField0_);
          this.focusObfuscatedId_ = paramCodedInputStream.readBytes();
        }
      }

      public final Data.PersonSuggestion build()
      {
        Data.PersonSuggestion localPersonSuggestion = buildPartial();
        if (!localPersonSuggestion.isInitialized())
          throw new UninitializedMessageException();
        return localPersonSuggestion;
      }

      public final Data.PersonSuggestion buildPartial()
      {
        Data.PersonSuggestion localPersonSuggestion = new Data.PersonSuggestion(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Data.PersonSuggestion.access$29102(localPersonSuggestion, this.gaiaId_);
        if ((i & 0x2) == 2)
          k |= 2;
        Data.PersonSuggestion.access$29202(localPersonSuggestion, this.focusObfuscatedId_);
        if ((i & 0x4) == 4)
          k |= 4;
        Data.PersonSuggestion.access$29302(localPersonSuggestion, this.confidenceScore_);
        Data.PersonSuggestion.access$29402(localPersonSuggestion, k);
        return localPersonSuggestion;
      }

      public final Builder clear()
      {
        super.clear();
        this.gaiaId_ = 0L;
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.focusObfuscatedId_ = "";
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.confidenceScore_ = 0.0F;
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        return this;
      }

      public final Builder clearConfidenceScore()
      {
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.confidenceScore_ = 0.0F;
        return this;
      }

      public final Builder clearFocusObfuscatedId()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.focusObfuscatedId_ = Data.PersonSuggestion.getDefaultInstance().getFocusObfuscatedId();
        return this;
      }

      public final Builder clearGaiaId()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.gaiaId_ = 0L;
        return this;
      }

      public final float getConfidenceScore()
      {
        return this.confidenceScore_;
      }

      public final Data.PersonSuggestion getDefaultInstanceForType()
      {
        return Data.PersonSuggestion.getDefaultInstance();
      }

      public final String getFocusObfuscatedId()
      {
        Object localObject = this.focusObfuscatedId_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.focusObfuscatedId_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final long getGaiaId()
      {
        return this.gaiaId_;
      }

      public final boolean hasConfidenceScore()
      {
        if ((0x4 & this.bitField0_) == 4);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasFocusObfuscatedId()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasGaiaId()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Data.PersonSuggestion paramPersonSuggestion)
      {
        if (paramPersonSuggestion == Data.PersonSuggestion.getDefaultInstance());
        while (true)
        {
          return this;
          if (paramPersonSuggestion.hasGaiaId())
            setGaiaId(paramPersonSuggestion.getGaiaId());
          if (paramPersonSuggestion.hasFocusObfuscatedId())
            setFocusObfuscatedId(paramPersonSuggestion.getFocusObfuscatedId());
          if (paramPersonSuggestion.hasConfidenceScore())
            setConfidenceScore(paramPersonSuggestion.getConfidenceScore());
        }
      }

      public final Builder setConfidenceScore(float paramFloat)
      {
        this.bitField0_ = (0x4 | this.bitField0_);
        this.confidenceScore_ = paramFloat;
        return this;
      }

      public final Builder setFocusObfuscatedId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x2 | this.bitField0_);
        this.focusObfuscatedId_ = paramString;
        return this;
      }

      public final Builder setGaiaId(long paramLong)
      {
        this.bitField0_ = (0x1 | this.bitField0_);
        this.gaiaId_ = paramLong;
        return this;
      }
    }
  }

  public static abstract interface PersonSuggestionOrBuilder extends MessageLiteOrBuilder
  {
    public abstract float getConfidenceScore();

    public abstract String getFocusObfuscatedId();

    public abstract long getGaiaId();

    public abstract boolean hasConfidenceScore();

    public abstract boolean hasFocusObfuscatedId();

    public abstract boolean hasGaiaId();
  }

  public static final class Phone extends GeneratedMessageLite
    implements Data.PhoneOrBuilder
  {
    private static final Phone defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private Data.Country country_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private boolean needsVerification_;
    private Object phoneNumber_;

    static
    {
      Phone localPhone = new Phone();
      defaultInstance = localPhone;
      localPhone.country_ = Data.Country.getDefaultInstance();
      localPhone.phoneNumber_ = "";
      localPhone.needsVerification_ = true;
    }

    private Phone()
    {
    }

    private Phone(Builder paramBuilder)
    {
      super();
    }

    public static Phone getDefaultInstance()
    {
      return defaultInstance;
    }

    private ByteString getPhoneNumberBytes()
    {
      Object localObject = this.phoneNumber_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.phoneNumber_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static Builder newBuilder()
    {
      return Builder.access$59400();
    }

    public static Builder newBuilder(Phone paramPhone)
    {
      return Builder.access$59400().mergeFrom(paramPhone);
    }

    public final Data.Country getCountry()
    {
      return this.country_;
    }

    public final Phone getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final boolean getNeedsVerification()
    {
      return this.needsVerification_;
    }

    public final String getPhoneNumber()
    {
      Object localObject1 = this.phoneNumber_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.phoneNumber_ = str;
      }
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeMessageSize(1, this.country_);
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeBytesSize(2, getPhoneNumberBytes());
        if ((0x4 & this.bitField0_) == 4)
          k += CodedOutputStream.computeBoolSize(3, this.needsVerification_);
        this.memoizedSerializedSize = k;
      }
    }

    public final boolean hasCountry()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean hasNeedsVerification()
    {
      if ((0x4 & this.bitField0_) == 4);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasPhoneNumber()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeMessage(1, this.country_);
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeBytes(2, getPhoneNumberBytes());
      if ((0x4 & this.bitField0_) == 4)
        paramCodedOutputStream.writeBool(3, this.needsVerification_);
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Data.Phone, Builder>
      implements Data.PhoneOrBuilder
    {
      private int bitField0_;
      private Data.Country country_ = Data.Country.getDefaultInstance();
      private boolean needsVerification_ = true;
      private Object phoneNumber_ = "";

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 10:
            Data.Country.Builder localBuilder = Data.Country.newBuilder();
            if (hasCountry())
              localBuilder.mergeFrom(getCountry());
            paramCodedInputStream.readMessage(localBuilder, paramExtensionRegistryLite);
            setCountry(localBuilder.buildPartial());
            break;
          case 18:
            this.bitField0_ = (0x2 | this.bitField0_);
            this.phoneNumber_ = paramCodedInputStream.readBytes();
            break;
          case 24:
          }
          this.bitField0_ = (0x4 | this.bitField0_);
          this.needsVerification_ = paramCodedInputStream.readBool();
        }
      }

      public final Data.Phone build()
      {
        Data.Phone localPhone = buildPartial();
        if (!localPhone.isInitialized())
          throw new UninitializedMessageException();
        return localPhone;
      }

      public final Data.Phone buildPartial()
      {
        Data.Phone localPhone = new Data.Phone(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Data.Phone.access$59602(localPhone, this.country_);
        if ((i & 0x2) == 2)
          k |= 2;
        Data.Phone.access$59702(localPhone, this.phoneNumber_);
        if ((i & 0x4) == 4)
          k |= 4;
        Data.Phone.access$59802(localPhone, this.needsVerification_);
        Data.Phone.access$59902(localPhone, k);
        return localPhone;
      }

      public final Builder clear()
      {
        super.clear();
        this.country_ = Data.Country.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.phoneNumber_ = "";
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.needsVerification_ = true;
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        return this;
      }

      public final Builder clearCountry()
      {
        this.country_ = Data.Country.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        return this;
      }

      public final Builder clearNeedsVerification()
      {
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.needsVerification_ = true;
        return this;
      }

      public final Builder clearPhoneNumber()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.phoneNumber_ = Data.Phone.getDefaultInstance().getPhoneNumber();
        return this;
      }

      public final Data.Country getCountry()
      {
        return this.country_;
      }

      public final Data.Phone getDefaultInstanceForType()
      {
        return Data.Phone.getDefaultInstance();
      }

      public final boolean getNeedsVerification()
      {
        return this.needsVerification_;
      }

      public final String getPhoneNumber()
      {
        Object localObject = this.phoneNumber_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.phoneNumber_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final boolean hasCountry()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean hasNeedsVerification()
      {
        if ((0x4 & this.bitField0_) == 4);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasPhoneNumber()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Data.Phone paramPhone)
      {
        if (paramPhone == Data.Phone.getDefaultInstance())
          return this;
        Data.Country localCountry;
        if (paramPhone.hasCountry())
        {
          localCountry = paramPhone.getCountry();
          if (((0x1 & this.bitField0_) != 1) || (this.country_ == Data.Country.getDefaultInstance()))
            break label106;
        }
        label106: for (this.country_ = Data.Country.newBuilder(this.country_).mergeFrom(localCountry).buildPartial(); ; this.country_ = localCountry)
        {
          this.bitField0_ = (0x1 | this.bitField0_);
          if (paramPhone.hasPhoneNumber())
            setPhoneNumber(paramPhone.getPhoneNumber());
          if (!paramPhone.hasNeedsVerification())
            break;
          setNeedsVerification(paramPhone.getNeedsVerification());
          break;
        }
      }

      public final Builder setCountry(Data.Country.Builder paramBuilder)
      {
        this.country_ = paramBuilder.build();
        this.bitField0_ = (0x1 | this.bitField0_);
        return this;
      }

      public final Builder setCountry(Data.Country paramCountry)
      {
        if (paramCountry == null)
          throw new NullPointerException();
        this.country_ = paramCountry;
        this.bitField0_ = (0x1 | this.bitField0_);
        return this;
      }

      public final Builder setNeedsVerification(boolean paramBoolean)
      {
        this.bitField0_ = (0x4 | this.bitField0_);
        this.needsVerification_ = paramBoolean;
        return this;
      }

      public final Builder setPhoneNumber(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x2 | this.bitField0_);
        this.phoneNumber_ = paramString;
        return this;
      }
    }
  }

  public static abstract interface PhoneOrBuilder extends MessageLiteOrBuilder
  {
    public abstract Data.Country getCountry();

    public abstract boolean getNeedsVerification();

    public abstract String getPhoneNumber();

    public abstract boolean hasCountry();

    public abstract boolean hasNeedsVerification();

    public abstract boolean hasPhoneNumber();
  }

  public static final class PhotoActionData extends GeneratedMessageLite
    implements Data.PhotoActionDataOrBuilder
  {
    private static final PhotoActionData defaultInstance;
    private static final long serialVersionUID;
    private Object albumId_;
    private int bitField0_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private Object personId_;
    private Object photoId_;

    static
    {
      PhotoActionData localPhotoActionData = new PhotoActionData();
      defaultInstance = localPhotoActionData;
      localPhotoActionData.personId_ = "";
      localPhotoActionData.albumId_ = "";
      localPhotoActionData.photoId_ = "";
    }

    private PhotoActionData()
    {
    }

    private PhotoActionData(Builder paramBuilder)
    {
      super();
    }

    private ByteString getAlbumIdBytes()
    {
      Object localObject = this.albumId_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.albumId_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static PhotoActionData getDefaultInstance()
    {
      return defaultInstance;
    }

    private ByteString getPersonIdBytes()
    {
      Object localObject = this.personId_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.personId_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    private ByteString getPhotoIdBytes()
    {
      Object localObject = this.photoId_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.photoId_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static Builder newBuilder()
    {
      return Builder.access$36400();
    }

    public static Builder newBuilder(PhotoActionData paramPhotoActionData)
    {
      return Builder.access$36400().mergeFrom(paramPhotoActionData);
    }

    public final String getAlbumId()
    {
      Object localObject1 = this.albumId_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.albumId_ = str;
      }
    }

    public final PhotoActionData getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final String getPersonId()
    {
      Object localObject1 = this.personId_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.personId_ = str;
      }
    }

    public final String getPhotoId()
    {
      Object localObject1 = this.photoId_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.photoId_ = str;
      }
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeBytesSize(1, getPersonIdBytes());
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeBytesSize(2, getAlbumIdBytes());
        if ((0x4 & this.bitField0_) == 4)
          k += CodedOutputStream.computeBytesSize(3, getPhotoIdBytes());
        this.memoizedSerializedSize = k;
      }
    }

    public final boolean hasAlbumId()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasPersonId()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean hasPhotoId()
    {
      if ((0x4 & this.bitField0_) == 4);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeBytes(1, getPersonIdBytes());
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeBytes(2, getAlbumIdBytes());
      if ((0x4 & this.bitField0_) == 4)
        paramCodedOutputStream.writeBytes(3, getPhotoIdBytes());
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Data.PhotoActionData, Builder>
      implements Data.PhotoActionDataOrBuilder
    {
      private Object albumId_ = "";
      private int bitField0_;
      private Object personId_ = "";
      private Object photoId_ = "";

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 10:
            this.bitField0_ = (0x1 | this.bitField0_);
            this.personId_ = paramCodedInputStream.readBytes();
            break;
          case 18:
            this.bitField0_ = (0x2 | this.bitField0_);
            this.albumId_ = paramCodedInputStream.readBytes();
            break;
          case 26:
          }
          this.bitField0_ = (0x4 | this.bitField0_);
          this.photoId_ = paramCodedInputStream.readBytes();
        }
      }

      public final Data.PhotoActionData build()
      {
        Data.PhotoActionData localPhotoActionData = buildPartial();
        if (!localPhotoActionData.isInitialized())
          throw new UninitializedMessageException();
        return localPhotoActionData;
      }

      public final Data.PhotoActionData buildPartial()
      {
        Data.PhotoActionData localPhotoActionData = new Data.PhotoActionData(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Data.PhotoActionData.access$36602(localPhotoActionData, this.personId_);
        if ((i & 0x2) == 2)
          k |= 2;
        Data.PhotoActionData.access$36702(localPhotoActionData, this.albumId_);
        if ((i & 0x4) == 4)
          k |= 4;
        Data.PhotoActionData.access$36802(localPhotoActionData, this.photoId_);
        Data.PhotoActionData.access$36902(localPhotoActionData, k);
        return localPhotoActionData;
      }

      public final Builder clear()
      {
        super.clear();
        this.personId_ = "";
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.albumId_ = "";
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.photoId_ = "";
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        return this;
      }

      public final Builder clearAlbumId()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.albumId_ = Data.PhotoActionData.getDefaultInstance().getAlbumId();
        return this;
      }

      public final Builder clearPersonId()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.personId_ = Data.PhotoActionData.getDefaultInstance().getPersonId();
        return this;
      }

      public final Builder clearPhotoId()
      {
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.photoId_ = Data.PhotoActionData.getDefaultInstance().getPhotoId();
        return this;
      }

      public final String getAlbumId()
      {
        Object localObject = this.albumId_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.albumId_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final Data.PhotoActionData getDefaultInstanceForType()
      {
        return Data.PhotoActionData.getDefaultInstance();
      }

      public final String getPersonId()
      {
        Object localObject = this.personId_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.personId_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final String getPhotoId()
      {
        Object localObject = this.photoId_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.photoId_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final boolean hasAlbumId()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasPersonId()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean hasPhotoId()
      {
        if ((0x4 & this.bitField0_) == 4);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Data.PhotoActionData paramPhotoActionData)
      {
        if (paramPhotoActionData == Data.PhotoActionData.getDefaultInstance());
        while (true)
        {
          return this;
          if (paramPhotoActionData.hasPersonId())
            setPersonId(paramPhotoActionData.getPersonId());
          if (paramPhotoActionData.hasAlbumId())
            setAlbumId(paramPhotoActionData.getAlbumId());
          if (paramPhotoActionData.hasPhotoId())
            setPhotoId(paramPhotoActionData.getPhotoId());
        }
      }

      public final Builder setAlbumId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x2 | this.bitField0_);
        this.albumId_ = paramString;
        return this;
      }

      public final Builder setPersonId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x1 | this.bitField0_);
        this.personId_ = paramString;
        return this;
      }

      public final Builder setPhotoId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x4 | this.bitField0_);
        this.photoId_ = paramString;
        return this;
      }
    }
  }

  public static abstract interface PhotoActionDataOrBuilder extends MessageLiteOrBuilder
  {
    public abstract String getAlbumId();

    public abstract String getPersonId();

    public abstract String getPhotoId();

    public abstract boolean hasAlbumId();

    public abstract boolean hasPersonId();

    public abstract boolean hasPhotoId();
  }

  public static final class PhotoActionState extends GeneratedMessageLite
    implements Data.PhotoActionStateOrBuilder
  {
    private static final PhotoActionState defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private boolean viewerCanApprove_;
    private boolean viewerCanComment_;
    private boolean viewerCanEdit_;
    private boolean viewerCanTag_;

    static
    {
      PhotoActionState localPhotoActionState = new PhotoActionState();
      defaultInstance = localPhotoActionState;
      localPhotoActionState.viewerCanComment_ = false;
      localPhotoActionState.viewerCanTag_ = false;
      localPhotoActionState.viewerCanEdit_ = false;
      localPhotoActionState.viewerCanApprove_ = false;
    }

    private PhotoActionState()
    {
    }

    private PhotoActionState(Builder paramBuilder)
    {
      super();
    }

    public static PhotoActionState getDefaultInstance()
    {
      return defaultInstance;
    }

    public static Builder newBuilder()
    {
      return Builder.access$17500();
    }

    public static Builder newBuilder(PhotoActionState paramPhotoActionState)
    {
      return Builder.access$17500().mergeFrom(paramPhotoActionState);
    }

    public final PhotoActionState getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeBoolSize(1, this.viewerCanComment_);
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeBoolSize(2, this.viewerCanTag_);
        if ((0x4 & this.bitField0_) == 4)
          k += CodedOutputStream.computeBoolSize(3, this.viewerCanEdit_);
        if ((0x8 & this.bitField0_) == 8)
          k += CodedOutputStream.computeBoolSize(4, this.viewerCanApprove_);
        this.memoizedSerializedSize = k;
      }
    }

    public final boolean getViewerCanApprove()
    {
      return this.viewerCanApprove_;
    }

    public final boolean getViewerCanComment()
    {
      return this.viewerCanComment_;
    }

    public final boolean getViewerCanEdit()
    {
      return this.viewerCanEdit_;
    }

    public final boolean getViewerCanTag()
    {
      return this.viewerCanTag_;
    }

    public final boolean hasViewerCanApprove()
    {
      if ((0x8 & this.bitField0_) == 8);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasViewerCanComment()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean hasViewerCanEdit()
    {
      if ((0x4 & this.bitField0_) == 4);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasViewerCanTag()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeBool(1, this.viewerCanComment_);
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeBool(2, this.viewerCanTag_);
      if ((0x4 & this.bitField0_) == 4)
        paramCodedOutputStream.writeBool(3, this.viewerCanEdit_);
      if ((0x8 & this.bitField0_) == 8)
        paramCodedOutputStream.writeBool(4, this.viewerCanApprove_);
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Data.PhotoActionState, Builder>
      implements Data.PhotoActionStateOrBuilder
    {
      private int bitField0_;
      private boolean viewerCanApprove_;
      private boolean viewerCanComment_;
      private boolean viewerCanEdit_;
      private boolean viewerCanTag_;

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 8:
            this.bitField0_ = (0x1 | this.bitField0_);
            this.viewerCanComment_ = paramCodedInputStream.readBool();
            break;
          case 16:
            this.bitField0_ = (0x2 | this.bitField0_);
            this.viewerCanTag_ = paramCodedInputStream.readBool();
            break;
          case 24:
            this.bitField0_ = (0x4 | this.bitField0_);
            this.viewerCanEdit_ = paramCodedInputStream.readBool();
            break;
          case 32:
          }
          this.bitField0_ = (0x8 | this.bitField0_);
          this.viewerCanApprove_ = paramCodedInputStream.readBool();
        }
      }

      public final Data.PhotoActionState build()
      {
        Data.PhotoActionState localPhotoActionState = buildPartial();
        if (!localPhotoActionState.isInitialized())
          throw new UninitializedMessageException();
        return localPhotoActionState;
      }

      public final Data.PhotoActionState buildPartial()
      {
        Data.PhotoActionState localPhotoActionState = new Data.PhotoActionState(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Data.PhotoActionState.access$17702(localPhotoActionState, this.viewerCanComment_);
        if ((i & 0x2) == 2)
          k |= 2;
        Data.PhotoActionState.access$17802(localPhotoActionState, this.viewerCanTag_);
        if ((i & 0x4) == 4)
          k |= 4;
        Data.PhotoActionState.access$17902(localPhotoActionState, this.viewerCanEdit_);
        if ((i & 0x8) == 8)
          k |= 8;
        Data.PhotoActionState.access$18002(localPhotoActionState, this.viewerCanApprove_);
        Data.PhotoActionState.access$18102(localPhotoActionState, k);
        return localPhotoActionState;
      }

      public final Builder clear()
      {
        super.clear();
        this.viewerCanComment_ = false;
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.viewerCanTag_ = false;
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.viewerCanEdit_ = false;
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.viewerCanApprove_ = false;
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        return this;
      }

      public final Builder clearViewerCanApprove()
      {
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        this.viewerCanApprove_ = false;
        return this;
      }

      public final Builder clearViewerCanComment()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.viewerCanComment_ = false;
        return this;
      }

      public final Builder clearViewerCanEdit()
      {
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.viewerCanEdit_ = false;
        return this;
      }

      public final Builder clearViewerCanTag()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.viewerCanTag_ = false;
        return this;
      }

      public final Data.PhotoActionState getDefaultInstanceForType()
      {
        return Data.PhotoActionState.getDefaultInstance();
      }

      public final boolean getViewerCanApprove()
      {
        return this.viewerCanApprove_;
      }

      public final boolean getViewerCanComment()
      {
        return this.viewerCanComment_;
      }

      public final boolean getViewerCanEdit()
      {
        return this.viewerCanEdit_;
      }

      public final boolean getViewerCanTag()
      {
        return this.viewerCanTag_;
      }

      public final boolean hasViewerCanApprove()
      {
        if ((0x8 & this.bitField0_) == 8);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasViewerCanComment()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean hasViewerCanEdit()
      {
        if ((0x4 & this.bitField0_) == 4);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasViewerCanTag()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Data.PhotoActionState paramPhotoActionState)
      {
        if (paramPhotoActionState == Data.PhotoActionState.getDefaultInstance());
        while (true)
        {
          return this;
          if (paramPhotoActionState.hasViewerCanComment())
            setViewerCanComment(paramPhotoActionState.getViewerCanComment());
          if (paramPhotoActionState.hasViewerCanTag())
            setViewerCanTag(paramPhotoActionState.getViewerCanTag());
          if (paramPhotoActionState.hasViewerCanEdit())
            setViewerCanEdit(paramPhotoActionState.getViewerCanEdit());
          if (paramPhotoActionState.hasViewerCanApprove())
            setViewerCanApprove(paramPhotoActionState.getViewerCanApprove());
        }
      }

      public final Builder setViewerCanApprove(boolean paramBoolean)
      {
        this.bitField0_ = (0x8 | this.bitField0_);
        this.viewerCanApprove_ = paramBoolean;
        return this;
      }

      public final Builder setViewerCanComment(boolean paramBoolean)
      {
        this.bitField0_ = (0x1 | this.bitField0_);
        this.viewerCanComment_ = paramBoolean;
        return this;
      }

      public final Builder setViewerCanEdit(boolean paramBoolean)
      {
        this.bitField0_ = (0x4 | this.bitField0_);
        this.viewerCanEdit_ = paramBoolean;
        return this;
      }

      public final Builder setViewerCanTag(boolean paramBoolean)
      {
        this.bitField0_ = (0x2 | this.bitField0_);
        this.viewerCanTag_ = paramBoolean;
        return this;
      }
    }
  }

  public static abstract interface PhotoActionStateOrBuilder extends MessageLiteOrBuilder
  {
    public abstract boolean getViewerCanApprove();

    public abstract boolean getViewerCanComment();

    public abstract boolean getViewerCanEdit();

    public abstract boolean getViewerCanTag();

    public abstract boolean hasViewerCanApprove();

    public abstract boolean hasViewerCanComment();

    public abstract boolean hasViewerCanEdit();

    public abstract boolean hasViewerCanTag();
  }

  public static final class PhotoAlbum extends GeneratedMessageLite
    implements Data.PhotoAlbumOrBuilder
  {
    private static final PhotoAlbum defaultInstance;
    private static final long serialVersionUID;
    private Data.Audience audience_;
    private int bitField0_;
    private Data.MobilePhoto cover_;
    private long entityVersion_;
    private List<EventIdentifier> eventIdentifier_;
    private Object focusObfuscatedOwnerId_;
    private long id_;
    private Data.AlbumIdentifier identifier_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private long ownerGaiaId_;
    private List<Data.MobilePhoto> preview_;
    private Object privateInviteToken_;
    private Object streamId_;
    private long timestampMsec_;
    private Object title_;
    private int totalPhotos_;

    static
    {
      PhotoAlbum localPhotoAlbum = new PhotoAlbum();
      defaultInstance = localPhotoAlbum;
      localPhotoAlbum.id_ = 0L;
      localPhotoAlbum.title_ = "";
      localPhotoAlbum.totalPhotos_ = 0;
      localPhotoAlbum.ownerGaiaId_ = 0L;
      localPhotoAlbum.focusObfuscatedOwnerId_ = "";
      localPhotoAlbum.cover_ = Data.MobilePhoto.getDefaultInstance();
      localPhotoAlbum.timestampMsec_ = 0L;
      localPhotoAlbum.streamId_ = "";
      localPhotoAlbum.audience_ = Data.Audience.getDefaultInstance();
      localPhotoAlbum.preview_ = Collections.emptyList();
      localPhotoAlbum.identifier_ = Data.AlbumIdentifier.getDefaultInstance();
      localPhotoAlbum.entityVersion_ = 0L;
      localPhotoAlbum.privateInviteToken_ = "";
      localPhotoAlbum.eventIdentifier_ = Collections.emptyList();
    }

    private PhotoAlbum()
    {
    }

    private PhotoAlbum(Builder paramBuilder)
    {
      super();
    }

    public static PhotoAlbum getDefaultInstance()
    {
      return defaultInstance;
    }

    private ByteString getFocusObfuscatedOwnerIdBytes()
    {
      Object localObject = this.focusObfuscatedOwnerId_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.focusObfuscatedOwnerId_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    private ByteString getPrivateInviteTokenBytes()
    {
      Object localObject = this.privateInviteToken_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.privateInviteToken_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    private ByteString getStreamIdBytes()
    {
      Object localObject = this.streamId_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.streamId_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    private ByteString getTitleBytes()
    {
      Object localObject = this.title_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.title_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static Builder newBuilder()
    {
      return Builder.access$19600();
    }

    public static Builder newBuilder(PhotoAlbum paramPhotoAlbum)
    {
      return Builder.access$19600().mergeFrom(paramPhotoAlbum);
    }

    public final Data.Audience getAudience()
    {
      return this.audience_;
    }

    public final Data.MobilePhoto getCover()
    {
      return this.cover_;
    }

    public final PhotoAlbum getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final long getEntityVersion()
    {
      return this.entityVersion_;
    }

    public final EventIdentifier getEventIdentifier(int paramInt)
    {
      return (EventIdentifier)this.eventIdentifier_.get(paramInt);
    }

    public final int getEventIdentifierCount()
    {
      return this.eventIdentifier_.size();
    }

    public final List<EventIdentifier> getEventIdentifierList()
    {
      return this.eventIdentifier_;
    }

    public final EventIdentifierOrBuilder getEventIdentifierOrBuilder(int paramInt)
    {
      return (EventIdentifierOrBuilder)this.eventIdentifier_.get(paramInt);
    }

    public final List<? extends EventIdentifierOrBuilder> getEventIdentifierOrBuilderList()
    {
      return this.eventIdentifier_;
    }

    public final String getFocusObfuscatedOwnerId()
    {
      Object localObject1 = this.focusObfuscatedOwnerId_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.focusObfuscatedOwnerId_ = str;
      }
    }

    public final long getId()
    {
      return this.id_;
    }

    public final Data.AlbumIdentifier getIdentifier()
    {
      return this.identifier_;
    }

    public final long getOwnerGaiaId()
    {
      return this.ownerGaiaId_;
    }

    public final Data.MobilePhoto getPreview(int paramInt)
    {
      return (Data.MobilePhoto)this.preview_.get(paramInt);
    }

    public final int getPreviewCount()
    {
      return this.preview_.size();
    }

    public final List<Data.MobilePhoto> getPreviewList()
    {
      return this.preview_;
    }

    public final Data.MobilePhotoOrBuilder getPreviewOrBuilder(int paramInt)
    {
      return (Data.MobilePhotoOrBuilder)this.preview_.get(paramInt);
    }

    public final List<? extends Data.MobilePhotoOrBuilder> getPreviewOrBuilderList()
    {
      return this.preview_;
    }

    public final String getPrivateInviteToken()
    {
      Object localObject1 = this.privateInviteToken_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.privateInviteToken_ = str;
      }
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int i1 = i; ; i1 = k)
      {
        return i1;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeInt64Size(1, this.id_);
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeBytesSize(2, getTitleBytes());
        if ((0x4 & this.bitField0_) == 4)
          k += CodedOutputStream.computeInt32Size(3, this.totalPhotos_);
        if ((0x8 & this.bitField0_) == 8)
          k += CodedOutputStream.computeInt64Size(4, this.ownerGaiaId_);
        if ((0x20 & this.bitField0_) == 32)
          k += CodedOutputStream.computeMessageSize(5, this.cover_);
        if ((0x40 & this.bitField0_) == 64)
          k += CodedOutputStream.computeInt64Size(6, this.timestampMsec_);
        if ((0x80 & this.bitField0_) == 128)
          k += CodedOutputStream.computeBytesSize(7, getStreamIdBytes());
        if ((0x100 & this.bitField0_) == 256)
          k += CodedOutputStream.computeMessageSize(8, this.audience_);
        for (int m = 0; m < this.preview_.size(); m++)
          k += CodedOutputStream.computeMessageSize(9, (MessageLite)this.preview_.get(m));
        if ((0x10 & this.bitField0_) == 16)
          k += CodedOutputStream.computeBytesSize(10, getFocusObfuscatedOwnerIdBytes());
        if ((0x200 & this.bitField0_) == 512)
          k += CodedOutputStream.computeMessageSize(11, this.identifier_);
        if ((0x400 & this.bitField0_) == 1024)
          k += CodedOutputStream.computeInt64Size(12, this.entityVersion_);
        if ((0x800 & this.bitField0_) == 2048)
          k += CodedOutputStream.computeBytesSize(13, getPrivateInviteTokenBytes());
        for (int n = 0; n < this.eventIdentifier_.size(); n++)
          k += CodedOutputStream.computeMessageSize(14, (MessageLite)this.eventIdentifier_.get(n));
        this.memoizedSerializedSize = k;
      }
    }

    public final String getStreamId()
    {
      Object localObject1 = this.streamId_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.streamId_ = str;
      }
    }

    public final long getTimestampMsec()
    {
      return this.timestampMsec_;
    }

    public final String getTitle()
    {
      Object localObject1 = this.title_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.title_ = str;
      }
    }

    public final int getTotalPhotos()
    {
      return this.totalPhotos_;
    }

    public final boolean hasAudience()
    {
      if ((0x100 & this.bitField0_) == 256);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasCover()
    {
      if ((0x20 & this.bitField0_) == 32);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasEntityVersion()
    {
      if ((0x400 & this.bitField0_) == 1024);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasFocusObfuscatedOwnerId()
    {
      if ((0x10 & this.bitField0_) == 16);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasId()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean hasIdentifier()
    {
      if ((0x200 & this.bitField0_) == 512);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasOwnerGaiaId()
    {
      if ((0x8 & this.bitField0_) == 8);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasPrivateInviteToken()
    {
      if ((0x800 & this.bitField0_) == 2048);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasStreamId()
    {
      if ((0x80 & this.bitField0_) == 128);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasTimestampMsec()
    {
      if ((0x40 & this.bitField0_) == 64);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasTitle()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasTotalPhotos()
    {
      if ((0x4 & this.bitField0_) == 4);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        if ((hasCover()) && (!getCover().isInitialized()))
        {
          this.memoizedIsInitialized = 0;
          i = 0;
        }
        else
        {
          for (int k = 0; ; k++)
          {
            if (k >= getPreviewCount())
              break label88;
            if (!getPreview(k).isInitialized())
            {
              this.memoizedIsInitialized = 0;
              i = 0;
              break;
            }
          }
          label88: this.memoizedIsInitialized = i;
        }
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeInt64(1, this.id_);
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeBytes(2, getTitleBytes());
      if ((0x4 & this.bitField0_) == 4)
        paramCodedOutputStream.writeInt32(3, this.totalPhotos_);
      if ((0x8 & this.bitField0_) == 8)
        paramCodedOutputStream.writeInt64(4, this.ownerGaiaId_);
      if ((0x20 & this.bitField0_) == 32)
        paramCodedOutputStream.writeMessage(5, this.cover_);
      if ((0x40 & this.bitField0_) == 64)
        paramCodedOutputStream.writeInt64(6, this.timestampMsec_);
      if ((0x80 & this.bitField0_) == 128)
        paramCodedOutputStream.writeBytes(7, getStreamIdBytes());
      if ((0x100 & this.bitField0_) == 256)
        paramCodedOutputStream.writeMessage(8, this.audience_);
      for (int i = 0; i < this.preview_.size(); i++)
        paramCodedOutputStream.writeMessage(9, (MessageLite)this.preview_.get(i));
      if ((0x10 & this.bitField0_) == 16)
        paramCodedOutputStream.writeBytes(10, getFocusObfuscatedOwnerIdBytes());
      if ((0x200 & this.bitField0_) == 512)
        paramCodedOutputStream.writeMessage(11, this.identifier_);
      if ((0x400 & this.bitField0_) == 1024)
        paramCodedOutputStream.writeInt64(12, this.entityVersion_);
      if ((0x800 & this.bitField0_) == 2048)
        paramCodedOutputStream.writeBytes(13, getPrivateInviteTokenBytes());
      for (int j = 0; j < this.eventIdentifier_.size(); j++)
        paramCodedOutputStream.writeMessage(14, (MessageLite)this.eventIdentifier_.get(j));
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Data.PhotoAlbum, Builder>
      implements Data.PhotoAlbumOrBuilder
    {
      private Data.Audience audience_ = Data.Audience.getDefaultInstance();
      private int bitField0_;
      private Data.MobilePhoto cover_ = Data.MobilePhoto.getDefaultInstance();
      private long entityVersion_;
      private List<Data.PhotoAlbum.EventIdentifier> eventIdentifier_ = Collections.emptyList();
      private Object focusObfuscatedOwnerId_ = "";
      private long id_;
      private Data.AlbumIdentifier identifier_ = Data.AlbumIdentifier.getDefaultInstance();
      private long ownerGaiaId_;
      private List<Data.MobilePhoto> preview_ = Collections.emptyList();
      private Object privateInviteToken_ = "";
      private Object streamId_ = "";
      private long timestampMsec_;
      private Object title_ = "";
      private int totalPhotos_;

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private void ensureEventIdentifierIsMutable()
      {
        if ((0x2000 & this.bitField0_) != 8192)
        {
          this.eventIdentifier_ = new ArrayList(this.eventIdentifier_);
          this.bitField0_ = (0x2000 | this.bitField0_);
        }
      }

      private void ensurePreviewIsMutable()
      {
        if ((0x200 & this.bitField0_) != 512)
        {
          this.preview_ = new ArrayList(this.preview_);
          this.bitField0_ = (0x200 | this.bitField0_);
        }
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 8:
            this.bitField0_ = (0x1 | this.bitField0_);
            this.id_ = paramCodedInputStream.readInt64();
            break;
          case 18:
            this.bitField0_ = (0x2 | this.bitField0_);
            this.title_ = paramCodedInputStream.readBytes();
            break;
          case 24:
            this.bitField0_ = (0x4 | this.bitField0_);
            this.totalPhotos_ = paramCodedInputStream.readInt32();
            break;
          case 32:
            this.bitField0_ = (0x8 | this.bitField0_);
            this.ownerGaiaId_ = paramCodedInputStream.readInt64();
            break;
          case 42:
            Data.MobilePhoto.Builder localBuilder4 = Data.MobilePhoto.newBuilder();
            if (hasCover())
              localBuilder4.mergeFrom(getCover());
            paramCodedInputStream.readMessage(localBuilder4, paramExtensionRegistryLite);
            setCover(localBuilder4.buildPartial());
            break;
          case 48:
            this.bitField0_ = (0x40 | this.bitField0_);
            this.timestampMsec_ = paramCodedInputStream.readInt64();
            break;
          case 58:
            this.bitField0_ = (0x80 | this.bitField0_);
            this.streamId_ = paramCodedInputStream.readBytes();
            break;
          case 66:
            Data.Audience.Builder localBuilder3 = Data.Audience.newBuilder();
            if (hasAudience())
              localBuilder3.mergeFrom(getAudience());
            paramCodedInputStream.readMessage(localBuilder3, paramExtensionRegistryLite);
            setAudience(localBuilder3.buildPartial());
            break;
          case 74:
            Data.MobilePhoto.Builder localBuilder2 = Data.MobilePhoto.newBuilder();
            paramCodedInputStream.readMessage(localBuilder2, paramExtensionRegistryLite);
            addPreview(localBuilder2.buildPartial());
            break;
          case 82:
            this.bitField0_ = (0x10 | this.bitField0_);
            this.focusObfuscatedOwnerId_ = paramCodedInputStream.readBytes();
            break;
          case 90:
            Data.AlbumIdentifier.Builder localBuilder1 = Data.AlbumIdentifier.newBuilder();
            if (hasIdentifier())
              localBuilder1.mergeFrom(getIdentifier());
            paramCodedInputStream.readMessage(localBuilder1, paramExtensionRegistryLite);
            setIdentifier(localBuilder1.buildPartial());
            break;
          case 96:
            this.bitField0_ = (0x800 | this.bitField0_);
            this.entityVersion_ = paramCodedInputStream.readInt64();
            break;
          case 106:
            this.bitField0_ = (0x1000 | this.bitField0_);
            this.privateInviteToken_ = paramCodedInputStream.readBytes();
            break;
          case 114:
          }
          Data.PhotoAlbum.EventIdentifier.Builder localBuilder = Data.PhotoAlbum.EventIdentifier.newBuilder();
          paramCodedInputStream.readMessage(localBuilder, paramExtensionRegistryLite);
          addEventIdentifier(localBuilder.buildPartial());
        }
      }

      public final Builder addAllEventIdentifier(Iterable<? extends Data.PhotoAlbum.EventIdentifier> paramIterable)
      {
        ensureEventIdentifierIsMutable();
        GeneratedMessageLite.Builder.addAll(paramIterable, this.eventIdentifier_);
        return this;
      }

      public final Builder addAllPreview(Iterable<? extends Data.MobilePhoto> paramIterable)
      {
        ensurePreviewIsMutable();
        GeneratedMessageLite.Builder.addAll(paramIterable, this.preview_);
        return this;
      }

      public final Builder addEventIdentifier(int paramInt, Data.PhotoAlbum.EventIdentifier.Builder paramBuilder)
      {
        ensureEventIdentifierIsMutable();
        this.eventIdentifier_.add(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder addEventIdentifier(int paramInt, Data.PhotoAlbum.EventIdentifier paramEventIdentifier)
      {
        if (paramEventIdentifier == null)
          throw new NullPointerException();
        ensureEventIdentifierIsMutable();
        this.eventIdentifier_.add(paramInt, paramEventIdentifier);
        return this;
      }

      public final Builder addEventIdentifier(Data.PhotoAlbum.EventIdentifier.Builder paramBuilder)
      {
        ensureEventIdentifierIsMutable();
        this.eventIdentifier_.add(paramBuilder.build());
        return this;
      }

      public final Builder addEventIdentifier(Data.PhotoAlbum.EventIdentifier paramEventIdentifier)
      {
        if (paramEventIdentifier == null)
          throw new NullPointerException();
        ensureEventIdentifierIsMutable();
        this.eventIdentifier_.add(paramEventIdentifier);
        return this;
      }

      public final Builder addPreview(int paramInt, Data.MobilePhoto.Builder paramBuilder)
      {
        ensurePreviewIsMutable();
        this.preview_.add(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder addPreview(int paramInt, Data.MobilePhoto paramMobilePhoto)
      {
        if (paramMobilePhoto == null)
          throw new NullPointerException();
        ensurePreviewIsMutable();
        this.preview_.add(paramInt, paramMobilePhoto);
        return this;
      }

      public final Builder addPreview(Data.MobilePhoto.Builder paramBuilder)
      {
        ensurePreviewIsMutable();
        this.preview_.add(paramBuilder.build());
        return this;
      }

      public final Builder addPreview(Data.MobilePhoto paramMobilePhoto)
      {
        if (paramMobilePhoto == null)
          throw new NullPointerException();
        ensurePreviewIsMutable();
        this.preview_.add(paramMobilePhoto);
        return this;
      }

      public final Data.PhotoAlbum build()
      {
        Data.PhotoAlbum localPhotoAlbum = buildPartial();
        if (!localPhotoAlbum.isInitialized())
          throw new UninitializedMessageException();
        return localPhotoAlbum;
      }

      public final Data.PhotoAlbum buildPartial()
      {
        Data.PhotoAlbum localPhotoAlbum = new Data.PhotoAlbum(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Data.PhotoAlbum.access$19802(localPhotoAlbum, this.id_);
        if ((i & 0x2) == 2)
          k |= 2;
        Data.PhotoAlbum.access$19902(localPhotoAlbum, this.title_);
        if ((i & 0x4) == 4)
          k |= 4;
        Data.PhotoAlbum.access$20002(localPhotoAlbum, this.totalPhotos_);
        if ((i & 0x8) == 8)
          k |= 8;
        Data.PhotoAlbum.access$20102(localPhotoAlbum, this.ownerGaiaId_);
        if ((i & 0x10) == 16)
          k |= 16;
        Data.PhotoAlbum.access$20202(localPhotoAlbum, this.focusObfuscatedOwnerId_);
        if ((i & 0x20) == 32)
          k |= 32;
        Data.PhotoAlbum.access$20302(localPhotoAlbum, this.cover_);
        if ((i & 0x40) == 64)
          k |= 64;
        Data.PhotoAlbum.access$20402(localPhotoAlbum, this.timestampMsec_);
        if ((i & 0x80) == 128)
          k |= 128;
        Data.PhotoAlbum.access$20502(localPhotoAlbum, this.streamId_);
        if ((i & 0x100) == 256)
          k |= 256;
        Data.PhotoAlbum.access$20602(localPhotoAlbum, this.audience_);
        if ((0x200 & this.bitField0_) == 512)
        {
          this.preview_ = Collections.unmodifiableList(this.preview_);
          this.bitField0_ = (0xFFFFFDFF & this.bitField0_);
        }
        Data.PhotoAlbum.access$20702(localPhotoAlbum, this.preview_);
        if ((i & 0x400) == 1024)
          k |= 512;
        Data.PhotoAlbum.access$20802(localPhotoAlbum, this.identifier_);
        if ((i & 0x800) == 2048)
          k |= 1024;
        Data.PhotoAlbum.access$20902(localPhotoAlbum, this.entityVersion_);
        if ((i & 0x1000) == 4096)
          k |= 2048;
        Data.PhotoAlbum.access$21002(localPhotoAlbum, this.privateInviteToken_);
        if ((0x2000 & this.bitField0_) == 8192)
        {
          this.eventIdentifier_ = Collections.unmodifiableList(this.eventIdentifier_);
          this.bitField0_ = (0xFFFFDFFF & this.bitField0_);
        }
        Data.PhotoAlbum.access$21102(localPhotoAlbum, this.eventIdentifier_);
        Data.PhotoAlbum.access$21202(localPhotoAlbum, k);
        return localPhotoAlbum;
      }

      public final Builder clear()
      {
        super.clear();
        this.id_ = 0L;
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.title_ = "";
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.totalPhotos_ = 0;
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.ownerGaiaId_ = 0L;
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        this.focusObfuscatedOwnerId_ = "";
        this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        this.cover_ = Data.MobilePhoto.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFDF & this.bitField0_);
        this.timestampMsec_ = 0L;
        this.bitField0_ = (0xFFFFFFBF & this.bitField0_);
        this.streamId_ = "";
        this.bitField0_ = (0xFFFFFF7F & this.bitField0_);
        this.audience_ = Data.Audience.getDefaultInstance();
        this.bitField0_ = (0xFFFFFEFF & this.bitField0_);
        this.preview_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFDFF & this.bitField0_);
        this.identifier_ = Data.AlbumIdentifier.getDefaultInstance();
        this.bitField0_ = (0xFFFFFBFF & this.bitField0_);
        this.entityVersion_ = 0L;
        this.bitField0_ = (0xFFFFF7FF & this.bitField0_);
        this.privateInviteToken_ = "";
        this.bitField0_ = (0xFFFFEFFF & this.bitField0_);
        this.eventIdentifier_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFDFFF & this.bitField0_);
        return this;
      }

      public final Builder clearAudience()
      {
        this.audience_ = Data.Audience.getDefaultInstance();
        this.bitField0_ = (0xFFFFFEFF & this.bitField0_);
        return this;
      }

      public final Builder clearCover()
      {
        this.cover_ = Data.MobilePhoto.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFDF & this.bitField0_);
        return this;
      }

      public final Builder clearEntityVersion()
      {
        this.bitField0_ = (0xFFFFF7FF & this.bitField0_);
        this.entityVersion_ = 0L;
        return this;
      }

      public final Builder clearEventIdentifier()
      {
        this.eventIdentifier_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFDFFF & this.bitField0_);
        return this;
      }

      public final Builder clearFocusObfuscatedOwnerId()
      {
        this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        this.focusObfuscatedOwnerId_ = Data.PhotoAlbum.getDefaultInstance().getFocusObfuscatedOwnerId();
        return this;
      }

      public final Builder clearId()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.id_ = 0L;
        return this;
      }

      public final Builder clearIdentifier()
      {
        this.identifier_ = Data.AlbumIdentifier.getDefaultInstance();
        this.bitField0_ = (0xFFFFFBFF & this.bitField0_);
        return this;
      }

      public final Builder clearOwnerGaiaId()
      {
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        this.ownerGaiaId_ = 0L;
        return this;
      }

      public final Builder clearPreview()
      {
        this.preview_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFDFF & this.bitField0_);
        return this;
      }

      public final Builder clearPrivateInviteToken()
      {
        this.bitField0_ = (0xFFFFEFFF & this.bitField0_);
        this.privateInviteToken_ = Data.PhotoAlbum.getDefaultInstance().getPrivateInviteToken();
        return this;
      }

      public final Builder clearStreamId()
      {
        this.bitField0_ = (0xFFFFFF7F & this.bitField0_);
        this.streamId_ = Data.PhotoAlbum.getDefaultInstance().getStreamId();
        return this;
      }

      public final Builder clearTimestampMsec()
      {
        this.bitField0_ = (0xFFFFFFBF & this.bitField0_);
        this.timestampMsec_ = 0L;
        return this;
      }

      public final Builder clearTitle()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.title_ = Data.PhotoAlbum.getDefaultInstance().getTitle();
        return this;
      }

      public final Builder clearTotalPhotos()
      {
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.totalPhotos_ = 0;
        return this;
      }

      public final Data.Audience getAudience()
      {
        return this.audience_;
      }

      public final Data.MobilePhoto getCover()
      {
        return this.cover_;
      }

      public final Data.PhotoAlbum getDefaultInstanceForType()
      {
        return Data.PhotoAlbum.getDefaultInstance();
      }

      public final long getEntityVersion()
      {
        return this.entityVersion_;
      }

      public final Data.PhotoAlbum.EventIdentifier getEventIdentifier(int paramInt)
      {
        return (Data.PhotoAlbum.EventIdentifier)this.eventIdentifier_.get(paramInt);
      }

      public final int getEventIdentifierCount()
      {
        return this.eventIdentifier_.size();
      }

      public final List<Data.PhotoAlbum.EventIdentifier> getEventIdentifierList()
      {
        return Collections.unmodifiableList(this.eventIdentifier_);
      }

      public final String getFocusObfuscatedOwnerId()
      {
        Object localObject = this.focusObfuscatedOwnerId_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.focusObfuscatedOwnerId_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final long getId()
      {
        return this.id_;
      }

      public final Data.AlbumIdentifier getIdentifier()
      {
        return this.identifier_;
      }

      public final long getOwnerGaiaId()
      {
        return this.ownerGaiaId_;
      }

      public final Data.MobilePhoto getPreview(int paramInt)
      {
        return (Data.MobilePhoto)this.preview_.get(paramInt);
      }

      public final int getPreviewCount()
      {
        return this.preview_.size();
      }

      public final List<Data.MobilePhoto> getPreviewList()
      {
        return Collections.unmodifiableList(this.preview_);
      }

      public final String getPrivateInviteToken()
      {
        Object localObject = this.privateInviteToken_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.privateInviteToken_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final String getStreamId()
      {
        Object localObject = this.streamId_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.streamId_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final long getTimestampMsec()
      {
        return this.timestampMsec_;
      }

      public final String getTitle()
      {
        Object localObject = this.title_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.title_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final int getTotalPhotos()
      {
        return this.totalPhotos_;
      }

      public final boolean hasAudience()
      {
        if ((0x100 & this.bitField0_) == 256);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasCover()
      {
        if ((0x20 & this.bitField0_) == 32);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasEntityVersion()
      {
        if ((0x800 & this.bitField0_) == 2048);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasFocusObfuscatedOwnerId()
      {
        if ((0x10 & this.bitField0_) == 16);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasId()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean hasIdentifier()
      {
        if ((0x400 & this.bitField0_) == 1024);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasOwnerGaiaId()
      {
        if ((0x8 & this.bitField0_) == 8);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasPrivateInviteToken()
      {
        if ((0x1000 & this.bitField0_) == 4096);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasStreamId()
      {
        if ((0x80 & this.bitField0_) == 128);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasTimestampMsec()
      {
        if ((0x40 & this.bitField0_) == 64);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasTitle()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasTotalPhotos()
      {
        if ((0x4 & this.bitField0_) == 4);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean isInitialized()
      {
        boolean bool1;
        if (hasCover())
        {
          boolean bool3 = getCover().isInitialized();
          bool1 = false;
          if (bool3);
        }
        while (true)
        {
          return bool1;
          for (int i = 0; ; i++)
          {
            if (i >= getPreviewCount())
              break label56;
            boolean bool2 = getPreview(i).isInitialized();
            bool1 = false;
            if (!bool2)
              break;
          }
          label56: bool1 = true;
        }
      }

      public final Builder mergeFrom(Data.PhotoAlbum paramPhotoAlbum)
      {
        if (paramPhotoAlbum == Data.PhotoAlbum.getDefaultInstance());
        while (true)
        {
          return this;
          if (paramPhotoAlbum.hasId())
            setId(paramPhotoAlbum.getId());
          if (paramPhotoAlbum.hasTitle())
            setTitle(paramPhotoAlbum.getTitle());
          if (paramPhotoAlbum.hasTotalPhotos())
            setTotalPhotos(paramPhotoAlbum.getTotalPhotos());
          if (paramPhotoAlbum.hasOwnerGaiaId())
            setOwnerGaiaId(paramPhotoAlbum.getOwnerGaiaId());
          if (paramPhotoAlbum.hasFocusObfuscatedOwnerId())
            setFocusObfuscatedOwnerId(paramPhotoAlbum.getFocusObfuscatedOwnerId());
          Data.MobilePhoto localMobilePhoto;
          label143: Data.Audience localAudience;
          label242: Data.AlbumIdentifier localAlbumIdentifier;
          if (paramPhotoAlbum.hasCover())
          {
            localMobilePhoto = paramPhotoAlbum.getCover();
            if (((0x20 & this.bitField0_) == 32) && (this.cover_ != Data.MobilePhoto.getDefaultInstance()))
            {
              this.cover_ = Data.MobilePhoto.newBuilder(this.cover_).mergeFrom(localMobilePhoto).buildPartial();
              this.bitField0_ = (0x20 | this.bitField0_);
            }
          }
          else
          {
            if (paramPhotoAlbum.hasTimestampMsec())
              setTimestampMsec(paramPhotoAlbum.getTimestampMsec());
            if (paramPhotoAlbum.hasStreamId())
              setStreamId(paramPhotoAlbum.getStreamId());
            if (paramPhotoAlbum.hasAudience())
            {
              localAudience = paramPhotoAlbum.getAudience();
              if (((0x100 & this.bitField0_) != 256) || (this.audience_ == Data.Audience.getDefaultInstance()))
                break label454;
              this.audience_ = Data.Audience.newBuilder(this.audience_).mergeFrom(localAudience).buildPartial();
              this.bitField0_ = (0x100 | this.bitField0_);
            }
            if (!paramPhotoAlbum.preview_.isEmpty())
            {
              if (!this.preview_.isEmpty())
                break label463;
              this.preview_ = paramPhotoAlbum.preview_;
              this.bitField0_ = (0xFFFFFDFF & this.bitField0_);
            }
            label298: if (paramPhotoAlbum.hasIdentifier())
            {
              localAlbumIdentifier = paramPhotoAlbum.getIdentifier();
              if (((0x400 & this.bitField0_) != 1024) || (this.identifier_ == Data.AlbumIdentifier.getDefaultInstance()))
                break label484;
            }
          }
          label454: label463: label484: for (this.identifier_ = Data.AlbumIdentifier.newBuilder(this.identifier_).mergeFrom(localAlbumIdentifier).buildPartial(); ; this.identifier_ = localAlbumIdentifier)
          {
            this.bitField0_ = (0x400 | this.bitField0_);
            if (paramPhotoAlbum.hasEntityVersion())
              setEntityVersion(paramPhotoAlbum.getEntityVersion());
            if (paramPhotoAlbum.hasPrivateInviteToken())
              setPrivateInviteToken(paramPhotoAlbum.getPrivateInviteToken());
            if (paramPhotoAlbum.eventIdentifier_.isEmpty())
              break;
            if (!this.eventIdentifier_.isEmpty())
              break label493;
            this.eventIdentifier_ = paramPhotoAlbum.eventIdentifier_;
            this.bitField0_ = (0xFFFFDFFF & this.bitField0_);
            break;
            this.cover_ = localMobilePhoto;
            break label143;
            this.audience_ = localAudience;
            break label242;
            ensurePreviewIsMutable();
            this.preview_.addAll(paramPhotoAlbum.preview_);
            break label298;
          }
          label493: ensureEventIdentifierIsMutable();
          this.eventIdentifier_.addAll(paramPhotoAlbum.eventIdentifier_);
        }
      }

      public final Builder setAudience(Data.Audience.Builder paramBuilder)
      {
        this.audience_ = paramBuilder.build();
        this.bitField0_ = (0x100 | this.bitField0_);
        return this;
      }

      public final Builder setAudience(Data.Audience paramAudience)
      {
        if (paramAudience == null)
          throw new NullPointerException();
        this.audience_ = paramAudience;
        this.bitField0_ = (0x100 | this.bitField0_);
        return this;
      }

      public final Builder setCover(Data.MobilePhoto.Builder paramBuilder)
      {
        this.cover_ = paramBuilder.build();
        this.bitField0_ = (0x20 | this.bitField0_);
        return this;
      }

      public final Builder setCover(Data.MobilePhoto paramMobilePhoto)
      {
        if (paramMobilePhoto == null)
          throw new NullPointerException();
        this.cover_ = paramMobilePhoto;
        this.bitField0_ = (0x20 | this.bitField0_);
        return this;
      }

      public final Builder setEntityVersion(long paramLong)
      {
        this.bitField0_ = (0x800 | this.bitField0_);
        this.entityVersion_ = paramLong;
        return this;
      }

      public final Builder setEventIdentifier(int paramInt, Data.PhotoAlbum.EventIdentifier.Builder paramBuilder)
      {
        ensureEventIdentifierIsMutable();
        this.eventIdentifier_.set(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder setEventIdentifier(int paramInt, Data.PhotoAlbum.EventIdentifier paramEventIdentifier)
      {
        if (paramEventIdentifier == null)
          throw new NullPointerException();
        ensureEventIdentifierIsMutable();
        this.eventIdentifier_.set(paramInt, paramEventIdentifier);
        return this;
      }

      public final Builder setFocusObfuscatedOwnerId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x10 | this.bitField0_);
        this.focusObfuscatedOwnerId_ = paramString;
        return this;
      }

      public final Builder setId(long paramLong)
      {
        this.bitField0_ = (0x1 | this.bitField0_);
        this.id_ = paramLong;
        return this;
      }

      public final Builder setIdentifier(Data.AlbumIdentifier.Builder paramBuilder)
      {
        this.identifier_ = paramBuilder.build();
        this.bitField0_ = (0x400 | this.bitField0_);
        return this;
      }

      public final Builder setIdentifier(Data.AlbumIdentifier paramAlbumIdentifier)
      {
        if (paramAlbumIdentifier == null)
          throw new NullPointerException();
        this.identifier_ = paramAlbumIdentifier;
        this.bitField0_ = (0x400 | this.bitField0_);
        return this;
      }

      public final Builder setOwnerGaiaId(long paramLong)
      {
        this.bitField0_ = (0x8 | this.bitField0_);
        this.ownerGaiaId_ = paramLong;
        return this;
      }

      public final Builder setPreview(int paramInt, Data.MobilePhoto.Builder paramBuilder)
      {
        ensurePreviewIsMutable();
        this.preview_.set(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder setPreview(int paramInt, Data.MobilePhoto paramMobilePhoto)
      {
        if (paramMobilePhoto == null)
          throw new NullPointerException();
        ensurePreviewIsMutable();
        this.preview_.set(paramInt, paramMobilePhoto);
        return this;
      }

      public final Builder setPrivateInviteToken(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x1000 | this.bitField0_);
        this.privateInviteToken_ = paramString;
        return this;
      }

      public final Builder setStreamId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x80 | this.bitField0_);
        this.streamId_ = paramString;
        return this;
      }

      public final Builder setTimestampMsec(long paramLong)
      {
        this.bitField0_ = (0x40 | this.bitField0_);
        this.timestampMsec_ = paramLong;
        return this;
      }

      public final Builder setTitle(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x2 | this.bitField0_);
        this.title_ = paramString;
        return this;
      }

      public final Builder setTotalPhotos(int paramInt)
      {
        this.bitField0_ = (0x4 | this.bitField0_);
        this.totalPhotos_ = paramInt;
        return this;
      }
    }

    public static final class EventIdentifier extends GeneratedMessageLite
      implements Data.PhotoAlbum.EventIdentifierOrBuilder
    {
      private static final EventIdentifier defaultInstance;
      private static final long serialVersionUID;
      private int bitField0_;
      private Object eventCreatorId_;
      private Object eventId_;
      private byte memoizedIsInitialized = -1;
      private int memoizedSerializedSize = -1;

      static
      {
        EventIdentifier localEventIdentifier = new EventIdentifier();
        defaultInstance = localEventIdentifier;
        localEventIdentifier.eventId_ = "";
        localEventIdentifier.eventCreatorId_ = "";
      }

      private EventIdentifier()
      {
      }

      private EventIdentifier(Builder paramBuilder)
      {
        super();
      }

      public static EventIdentifier getDefaultInstance()
      {
        return defaultInstance;
      }

      private ByteString getEventCreatorIdBytes()
      {
        Object localObject = this.eventCreatorId_;
        ByteString localByteString;
        if ((localObject instanceof String))
        {
          localByteString = ByteString.copyFromUtf8((String)localObject);
          this.eventCreatorId_ = localByteString;
        }
        while (true)
        {
          return localByteString;
          localByteString = (ByteString)localObject;
        }
      }

      private ByteString getEventIdBytes()
      {
        Object localObject = this.eventId_;
        ByteString localByteString;
        if ((localObject instanceof String))
        {
          localByteString = ByteString.copyFromUtf8((String)localObject);
          this.eventId_ = localByteString;
        }
        while (true)
        {
          return localByteString;
          localByteString = (ByteString)localObject;
        }
      }

      public static Builder newBuilder()
      {
        return Builder.access$19000();
      }

      public final EventIdentifier getDefaultInstanceForType()
      {
        return defaultInstance;
      }

      public final String getEventCreatorId()
      {
        Object localObject1 = this.eventCreatorId_;
        if ((localObject1 instanceof String));
        String str;
        for (Object localObject2 = (String)localObject1; ; localObject2 = str)
        {
          return localObject2;
          ByteString localByteString = (ByteString)localObject1;
          str = localByteString.toStringUtf8();
          if (Internal.isValidUtf8(localByteString))
            this.eventCreatorId_ = str;
        }
      }

      public final String getEventId()
      {
        Object localObject1 = this.eventId_;
        if ((localObject1 instanceof String));
        String str;
        for (Object localObject2 = (String)localObject1; ; localObject2 = str)
        {
          return localObject2;
          ByteString localByteString = (ByteString)localObject1;
          str = localByteString.toStringUtf8();
          if (Internal.isValidUtf8(localByteString))
            this.eventId_ = str;
        }
      }

      public final int getSerializedSize()
      {
        int i = this.memoizedSerializedSize;
        if (i != -1);
        int k;
        for (int m = i; ; m = k)
        {
          return m;
          int j = 0x1 & this.bitField0_;
          k = 0;
          if (j == 1)
            k = 0 + CodedOutputStream.computeBytesSize(1, getEventIdBytes());
          if ((0x2 & this.bitField0_) == 2)
            k += CodedOutputStream.computeBytesSize(2, getEventCreatorIdBytes());
          this.memoizedSerializedSize = k;
        }
      }

      public final boolean hasEventCreatorId()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasEventId()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean isInitialized()
      {
        int i = 1;
        int j = this.memoizedIsInitialized;
        if (j != -1)
          if (j != i);
        while (true)
        {
          return i;
          i = 0;
          continue;
          this.memoizedIsInitialized = i;
        }
      }

      protected final Object writeReplace()
        throws ObjectStreamException
      {
        return super.writeReplace();
      }

      public final void writeTo(CodedOutputStream paramCodedOutputStream)
        throws IOException
      {
        getSerializedSize();
        if ((0x1 & this.bitField0_) == 1)
          paramCodedOutputStream.writeBytes(1, getEventIdBytes());
        if ((0x2 & this.bitField0_) == 2)
          paramCodedOutputStream.writeBytes(2, getEventCreatorIdBytes());
      }

      public static final class Builder extends GeneratedMessageLite.Builder<Data.PhotoAlbum.EventIdentifier, Builder>
        implements Data.PhotoAlbum.EventIdentifierOrBuilder
      {
        private int bitField0_;
        private Object eventCreatorId_ = "";
        private Object eventId_ = "";

        private Builder clone()
        {
          return new Builder().mergeFrom(buildPartial());
        }

        private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
          throws IOException
        {
          while (true)
          {
            int i = paramCodedInputStream.readTag();
            switch (i)
            {
            default:
              if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
                continue;
            case 0:
              return this;
            case 10:
              this.bitField0_ = (0x1 | this.bitField0_);
              this.eventId_ = paramCodedInputStream.readBytes();
              break;
            case 18:
            }
            this.bitField0_ = (0x2 | this.bitField0_);
            this.eventCreatorId_ = paramCodedInputStream.readBytes();
          }
        }

        public final Data.PhotoAlbum.EventIdentifier build()
        {
          Data.PhotoAlbum.EventIdentifier localEventIdentifier = buildPartial();
          if (!localEventIdentifier.isInitialized())
            throw new UninitializedMessageException();
          return localEventIdentifier;
        }

        public final Data.PhotoAlbum.EventIdentifier buildPartial()
        {
          Data.PhotoAlbum.EventIdentifier localEventIdentifier = new Data.PhotoAlbum.EventIdentifier(this, (byte)0);
          int i = this.bitField0_;
          int j = i & 0x1;
          int k = 0;
          if (j == 1)
            k = 1;
          Data.PhotoAlbum.EventIdentifier.access$19202(localEventIdentifier, this.eventId_);
          if ((i & 0x2) == 2)
            k |= 2;
          Data.PhotoAlbum.EventIdentifier.access$19302(localEventIdentifier, this.eventCreatorId_);
          Data.PhotoAlbum.EventIdentifier.access$19402(localEventIdentifier, k);
          return localEventIdentifier;
        }

        public final Builder clear()
        {
          super.clear();
          this.eventId_ = "";
          this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
          this.eventCreatorId_ = "";
          this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
          return this;
        }

        public final Builder clearEventCreatorId()
        {
          this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
          this.eventCreatorId_ = Data.PhotoAlbum.EventIdentifier.getDefaultInstance().getEventCreatorId();
          return this;
        }

        public final Builder clearEventId()
        {
          this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
          this.eventId_ = Data.PhotoAlbum.EventIdentifier.getDefaultInstance().getEventId();
          return this;
        }

        public final Data.PhotoAlbum.EventIdentifier getDefaultInstanceForType()
        {
          return Data.PhotoAlbum.EventIdentifier.getDefaultInstance();
        }

        public final String getEventCreatorId()
        {
          Object localObject = this.eventCreatorId_;
          String str;
          if (!(localObject instanceof String))
          {
            str = ((ByteString)localObject).toStringUtf8();
            this.eventCreatorId_ = str;
          }
          while (true)
          {
            return str;
            str = (String)localObject;
          }
        }

        public final String getEventId()
        {
          Object localObject = this.eventId_;
          String str;
          if (!(localObject instanceof String))
          {
            str = ((ByteString)localObject).toStringUtf8();
            this.eventId_ = str;
          }
          while (true)
          {
            return str;
            str = (String)localObject;
          }
        }

        public final boolean hasEventCreatorId()
        {
          if ((0x2 & this.bitField0_) == 2);
          for (boolean bool = true; ; bool = false)
            return bool;
        }

        public final boolean hasEventId()
        {
          int i = 1;
          if ((0x1 & this.bitField0_) == i);
          while (true)
          {
            return i;
            int j = 0;
          }
        }

        public final boolean isInitialized()
        {
          return true;
        }

        public final Builder mergeFrom(Data.PhotoAlbum.EventIdentifier paramEventIdentifier)
        {
          if (paramEventIdentifier == Data.PhotoAlbum.EventIdentifier.getDefaultInstance());
          while (true)
          {
            return this;
            if (paramEventIdentifier.hasEventId())
              setEventId(paramEventIdentifier.getEventId());
            if (paramEventIdentifier.hasEventCreatorId())
              setEventCreatorId(paramEventIdentifier.getEventCreatorId());
          }
        }

        public final Builder setEventCreatorId(String paramString)
        {
          if (paramString == null)
            throw new NullPointerException();
          this.bitField0_ = (0x2 | this.bitField0_);
          this.eventCreatorId_ = paramString;
          return this;
        }

        public final Builder setEventId(String paramString)
        {
          if (paramString == null)
            throw new NullPointerException();
          this.bitField0_ = (0x1 | this.bitField0_);
          this.eventId_ = paramString;
          return this;
        }
      }
    }

    public static abstract interface EventIdentifierOrBuilder extends MessageLiteOrBuilder
    {
      public abstract String getEventCreatorId();

      public abstract String getEventId();

      public abstract boolean hasEventCreatorId();

      public abstract boolean hasEventId();
    }
  }

  public static abstract interface PhotoAlbumOrBuilder extends MessageLiteOrBuilder
  {
    public abstract Data.Audience getAudience();

    public abstract Data.MobilePhoto getCover();

    public abstract long getEntityVersion();

    public abstract Data.PhotoAlbum.EventIdentifier getEventIdentifier(int paramInt);

    public abstract int getEventIdentifierCount();

    public abstract List<Data.PhotoAlbum.EventIdentifier> getEventIdentifierList();

    public abstract String getFocusObfuscatedOwnerId();

    public abstract long getId();

    public abstract Data.AlbumIdentifier getIdentifier();

    public abstract long getOwnerGaiaId();

    public abstract Data.MobilePhoto getPreview(int paramInt);

    public abstract int getPreviewCount();

    public abstract List<Data.MobilePhoto> getPreviewList();

    public abstract String getPrivateInviteToken();

    public abstract String getStreamId();

    public abstract long getTimestampMsec();

    public abstract String getTitle();

    public abstract int getTotalPhotos();

    public abstract boolean hasAudience();

    public abstract boolean hasCover();

    public abstract boolean hasEntityVersion();

    public abstract boolean hasFocusObfuscatedOwnerId();

    public abstract boolean hasId();

    public abstract boolean hasIdentifier();

    public abstract boolean hasOwnerGaiaId();

    public abstract boolean hasPrivateInviteToken();

    public abstract boolean hasStreamId();

    public abstract boolean hasTimestampMsec();

    public abstract boolean hasTitle();

    public abstract boolean hasTotalPhotos();
  }

  public static final class PhotoMediaDisplay extends GeneratedMessageLite
    implements Data.PhotoMediaDisplayOrBuilder
  {
    private static final PhotoMediaDisplay defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private Object data_;
    private DisplayFormat format_;
    private boolean isPwa_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;

    static
    {
      PhotoMediaDisplay localPhotoMediaDisplay = new PhotoMediaDisplay();
      defaultInstance = localPhotoMediaDisplay;
      localPhotoMediaDisplay.format_ = DisplayFormat.LINKED_THUMBS;
      localPhotoMediaDisplay.data_ = "";
      localPhotoMediaDisplay.isPwa_ = false;
    }

    private PhotoMediaDisplay()
    {
    }

    private PhotoMediaDisplay(Builder paramBuilder)
    {
      super();
    }

    private ByteString getDataBytes()
    {
      Object localObject = this.data_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.data_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static PhotoMediaDisplay getDefaultInstance()
    {
      return defaultInstance;
    }

    public static Builder newBuilder()
    {
      return Builder.access$10900();
    }

    public static Builder newBuilder(PhotoMediaDisplay paramPhotoMediaDisplay)
    {
      return Builder.access$10900().mergeFrom(paramPhotoMediaDisplay);
    }

    public final String getData()
    {
      Object localObject1 = this.data_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.data_ = str;
      }
    }

    public final PhotoMediaDisplay getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final DisplayFormat getFormat()
    {
      return this.format_;
    }

    public final boolean getIsPwa()
    {
      return this.isPwa_;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeEnumSize(1, this.format_.getNumber());
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeBytesSize(2, getDataBytes());
        if ((0x4 & this.bitField0_) == 4)
          k += CodedOutputStream.computeBoolSize(3, this.isPwa_);
        this.memoizedSerializedSize = k;
      }
    }

    public final boolean hasData()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasFormat()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean hasIsPwa()
    {
      if ((0x4 & this.bitField0_) == 4);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeEnum(1, this.format_.getNumber());
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeBytes(2, getDataBytes());
      if ((0x4 & this.bitField0_) == 4)
        paramCodedOutputStream.writeBool(3, this.isPwa_);
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Data.PhotoMediaDisplay, Builder>
      implements Data.PhotoMediaDisplayOrBuilder
    {
      private int bitField0_;
      private Object data_ = "";
      private Data.PhotoMediaDisplay.DisplayFormat format_ = Data.PhotoMediaDisplay.DisplayFormat.LINKED_THUMBS;
      private boolean isPwa_;

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 8:
            Data.PhotoMediaDisplay.DisplayFormat localDisplayFormat = Data.PhotoMediaDisplay.DisplayFormat.valueOf(paramCodedInputStream.readEnum());
            if (localDisplayFormat == null)
              continue;
            this.bitField0_ = (0x1 | this.bitField0_);
            this.format_ = localDisplayFormat;
            break;
          case 18:
            this.bitField0_ = (0x2 | this.bitField0_);
            this.data_ = paramCodedInputStream.readBytes();
            break;
          case 24:
          }
          this.bitField0_ = (0x4 | this.bitField0_);
          this.isPwa_ = paramCodedInputStream.readBool();
        }
      }

      public final Data.PhotoMediaDisplay build()
      {
        Data.PhotoMediaDisplay localPhotoMediaDisplay = buildPartial();
        if (!localPhotoMediaDisplay.isInitialized())
          throw new UninitializedMessageException();
        return localPhotoMediaDisplay;
      }

      public final Data.PhotoMediaDisplay buildPartial()
      {
        Data.PhotoMediaDisplay localPhotoMediaDisplay = new Data.PhotoMediaDisplay(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Data.PhotoMediaDisplay.access$11102(localPhotoMediaDisplay, this.format_);
        if ((i & 0x2) == 2)
          k |= 2;
        Data.PhotoMediaDisplay.access$11202(localPhotoMediaDisplay, this.data_);
        if ((i & 0x4) == 4)
          k |= 4;
        Data.PhotoMediaDisplay.access$11302(localPhotoMediaDisplay, this.isPwa_);
        Data.PhotoMediaDisplay.access$11402(localPhotoMediaDisplay, k);
        return localPhotoMediaDisplay;
      }

      public final Builder clear()
      {
        super.clear();
        this.format_ = Data.PhotoMediaDisplay.DisplayFormat.LINKED_THUMBS;
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.data_ = "";
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.isPwa_ = false;
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        return this;
      }

      public final Builder clearData()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.data_ = Data.PhotoMediaDisplay.getDefaultInstance().getData();
        return this;
      }

      public final Builder clearFormat()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.format_ = Data.PhotoMediaDisplay.DisplayFormat.LINKED_THUMBS;
        return this;
      }

      public final Builder clearIsPwa()
      {
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.isPwa_ = false;
        return this;
      }

      public final String getData()
      {
        Object localObject = this.data_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.data_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final Data.PhotoMediaDisplay getDefaultInstanceForType()
      {
        return Data.PhotoMediaDisplay.getDefaultInstance();
      }

      public final Data.PhotoMediaDisplay.DisplayFormat getFormat()
      {
        return this.format_;
      }

      public final boolean getIsPwa()
      {
        return this.isPwa_;
      }

      public final boolean hasData()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasFormat()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean hasIsPwa()
      {
        if ((0x4 & this.bitField0_) == 4);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Data.PhotoMediaDisplay paramPhotoMediaDisplay)
      {
        if (paramPhotoMediaDisplay == Data.PhotoMediaDisplay.getDefaultInstance());
        while (true)
        {
          return this;
          if (paramPhotoMediaDisplay.hasFormat())
            setFormat(paramPhotoMediaDisplay.getFormat());
          if (paramPhotoMediaDisplay.hasData())
            setData(paramPhotoMediaDisplay.getData());
          if (paramPhotoMediaDisplay.hasIsPwa())
            setIsPwa(paramPhotoMediaDisplay.getIsPwa());
        }
      }

      public final Builder setData(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x2 | this.bitField0_);
        this.data_ = paramString;
        return this;
      }

      public final Builder setFormat(Data.PhotoMediaDisplay.DisplayFormat paramDisplayFormat)
      {
        if (paramDisplayFormat == null)
          throw new NullPointerException();
        this.bitField0_ = (0x1 | this.bitField0_);
        this.format_ = paramDisplayFormat;
        return this;
      }

      public final Builder setIsPwa(boolean paramBoolean)
      {
        this.bitField0_ = (0x4 | this.bitField0_);
        this.isPwa_ = paramBoolean;
        return this;
      }
    }

    public static enum DisplayFormat
      implements Internal.EnumLite
    {
      private static Internal.EnumLiteMap<DisplayFormat> internalValueMap = new Internal.EnumLiteMap()
      {
      };
      private final int value;

      static
      {
        LIGHTBOX = new DisplayFormat("LIGHTBOX", 1, 2);
        DisplayFormat[] arrayOfDisplayFormat = new DisplayFormat[2];
        arrayOfDisplayFormat[0] = LINKED_THUMBS;
        arrayOfDisplayFormat[1] = LIGHTBOX;
      }

      private DisplayFormat(int paramInt1, int paramInt2)
      {
        this.value = paramInt1;
      }

      public static DisplayFormat valueOf(int paramInt)
      {
        DisplayFormat localDisplayFormat;
        switch (paramInt)
        {
        default:
          localDisplayFormat = null;
        case 1:
        case 2:
        }
        while (true)
        {
          return localDisplayFormat;
          localDisplayFormat = LINKED_THUMBS;
          continue;
          localDisplayFormat = LIGHTBOX;
        }
      }

      public final int getNumber()
      {
        return this.value;
      }
    }
  }

  public static abstract interface PhotoMediaDisplayOrBuilder extends MessageLiteOrBuilder
  {
    public abstract String getData();

    public abstract Data.PhotoMediaDisplay.DisplayFormat getFormat();

    public abstract boolean getIsPwa();

    public abstract boolean hasData();

    public abstract boolean hasFormat();

    public abstract boolean hasIsPwa();
  }

  public static final class PlaceSearchEvent extends GeneratedMessageLite
    implements Data.PlaceSearchEventOrBuilder
  {
    private static final PlaceSearchEvent defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private Object processId_;
    private Object serverIp_;
    private Object signature_;
    private Object timestamp_;

    static
    {
      PlaceSearchEvent localPlaceSearchEvent = new PlaceSearchEvent();
      defaultInstance = localPlaceSearchEvent;
      localPlaceSearchEvent.timestamp_ = "";
      localPlaceSearchEvent.serverIp_ = "";
      localPlaceSearchEvent.processId_ = "";
      localPlaceSearchEvent.signature_ = "";
    }

    private PlaceSearchEvent()
    {
    }

    private PlaceSearchEvent(Builder paramBuilder)
    {
      super();
    }

    public static PlaceSearchEvent getDefaultInstance()
    {
      return defaultInstance;
    }

    private ByteString getProcessIdBytes()
    {
      Object localObject = this.processId_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.processId_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    private ByteString getServerIpBytes()
    {
      Object localObject = this.serverIp_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.serverIp_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    private ByteString getSignatureBytes()
    {
      Object localObject = this.signature_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.signature_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    private ByteString getTimestampBytes()
    {
      Object localObject = this.timestamp_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.timestamp_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static Builder newBuilder()
    {
      return Builder.access$29600();
    }

    public static Builder newBuilder(PlaceSearchEvent paramPlaceSearchEvent)
    {
      return Builder.access$29600().mergeFrom(paramPlaceSearchEvent);
    }

    public final PlaceSearchEvent getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final String getProcessId()
    {
      Object localObject1 = this.processId_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.processId_ = str;
      }
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeBytesSize(1, getTimestampBytes());
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeBytesSize(2, getServerIpBytes());
        if ((0x4 & this.bitField0_) == 4)
          k += CodedOutputStream.computeBytesSize(3, getProcessIdBytes());
        if ((0x8 & this.bitField0_) == 8)
          k += CodedOutputStream.computeBytesSize(4, getSignatureBytes());
        this.memoizedSerializedSize = k;
      }
    }

    public final String getServerIp()
    {
      Object localObject1 = this.serverIp_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.serverIp_ = str;
      }
    }

    public final String getSignature()
    {
      Object localObject1 = this.signature_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.signature_ = str;
      }
    }

    public final String getTimestamp()
    {
      Object localObject1 = this.timestamp_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.timestamp_ = str;
      }
    }

    public final boolean hasProcessId()
    {
      if ((0x4 & this.bitField0_) == 4);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasServerIp()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasSignature()
    {
      if ((0x8 & this.bitField0_) == 8);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasTimestamp()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeBytes(1, getTimestampBytes());
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeBytes(2, getServerIpBytes());
      if ((0x4 & this.bitField0_) == 4)
        paramCodedOutputStream.writeBytes(3, getProcessIdBytes());
      if ((0x8 & this.bitField0_) == 8)
        paramCodedOutputStream.writeBytes(4, getSignatureBytes());
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Data.PlaceSearchEvent, Builder>
      implements Data.PlaceSearchEventOrBuilder
    {
      private int bitField0_;
      private Object processId_ = "";
      private Object serverIp_ = "";
      private Object signature_ = "";
      private Object timestamp_ = "";

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 10:
            this.bitField0_ = (0x1 | this.bitField0_);
            this.timestamp_ = paramCodedInputStream.readBytes();
            break;
          case 18:
            this.bitField0_ = (0x2 | this.bitField0_);
            this.serverIp_ = paramCodedInputStream.readBytes();
            break;
          case 26:
            this.bitField0_ = (0x4 | this.bitField0_);
            this.processId_ = paramCodedInputStream.readBytes();
            break;
          case 34:
          }
          this.bitField0_ = (0x8 | this.bitField0_);
          this.signature_ = paramCodedInputStream.readBytes();
        }
      }

      public final Data.PlaceSearchEvent build()
      {
        Data.PlaceSearchEvent localPlaceSearchEvent = buildPartial();
        if (!localPlaceSearchEvent.isInitialized())
          throw new UninitializedMessageException();
        return localPlaceSearchEvent;
      }

      public final Data.PlaceSearchEvent buildPartial()
      {
        Data.PlaceSearchEvent localPlaceSearchEvent = new Data.PlaceSearchEvent(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Data.PlaceSearchEvent.access$29802(localPlaceSearchEvent, this.timestamp_);
        if ((i & 0x2) == 2)
          k |= 2;
        Data.PlaceSearchEvent.access$29902(localPlaceSearchEvent, this.serverIp_);
        if ((i & 0x4) == 4)
          k |= 4;
        Data.PlaceSearchEvent.access$30002(localPlaceSearchEvent, this.processId_);
        if ((i & 0x8) == 8)
          k |= 8;
        Data.PlaceSearchEvent.access$30102(localPlaceSearchEvent, this.signature_);
        Data.PlaceSearchEvent.access$30202(localPlaceSearchEvent, k);
        return localPlaceSearchEvent;
      }

      public final Builder clear()
      {
        super.clear();
        this.timestamp_ = "";
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.serverIp_ = "";
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.processId_ = "";
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.signature_ = "";
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        return this;
      }

      public final Builder clearProcessId()
      {
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.processId_ = Data.PlaceSearchEvent.getDefaultInstance().getProcessId();
        return this;
      }

      public final Builder clearServerIp()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.serverIp_ = Data.PlaceSearchEvent.getDefaultInstance().getServerIp();
        return this;
      }

      public final Builder clearSignature()
      {
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        this.signature_ = Data.PlaceSearchEvent.getDefaultInstance().getSignature();
        return this;
      }

      public final Builder clearTimestamp()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.timestamp_ = Data.PlaceSearchEvent.getDefaultInstance().getTimestamp();
        return this;
      }

      public final Data.PlaceSearchEvent getDefaultInstanceForType()
      {
        return Data.PlaceSearchEvent.getDefaultInstance();
      }

      public final String getProcessId()
      {
        Object localObject = this.processId_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.processId_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final String getServerIp()
      {
        Object localObject = this.serverIp_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.serverIp_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final String getSignature()
      {
        Object localObject = this.signature_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.signature_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final String getTimestamp()
      {
        Object localObject = this.timestamp_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.timestamp_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final boolean hasProcessId()
      {
        if ((0x4 & this.bitField0_) == 4);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasServerIp()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasSignature()
      {
        if ((0x8 & this.bitField0_) == 8);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasTimestamp()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Data.PlaceSearchEvent paramPlaceSearchEvent)
      {
        if (paramPlaceSearchEvent == Data.PlaceSearchEvent.getDefaultInstance());
        while (true)
        {
          return this;
          if (paramPlaceSearchEvent.hasTimestamp())
            setTimestamp(paramPlaceSearchEvent.getTimestamp());
          if (paramPlaceSearchEvent.hasServerIp())
            setServerIp(paramPlaceSearchEvent.getServerIp());
          if (paramPlaceSearchEvent.hasProcessId())
            setProcessId(paramPlaceSearchEvent.getProcessId());
          if (paramPlaceSearchEvent.hasSignature())
            setSignature(paramPlaceSearchEvent.getSignature());
        }
      }

      public final Builder setProcessId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x4 | this.bitField0_);
        this.processId_ = paramString;
        return this;
      }

      public final Builder setServerIp(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x2 | this.bitField0_);
        this.serverIp_ = paramString;
        return this;
      }

      public final Builder setSignature(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x8 | this.bitField0_);
        this.signature_ = paramString;
        return this;
      }

      public final Builder setTimestamp(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x1 | this.bitField0_);
        this.timestamp_ = paramString;
        return this;
      }
    }
  }

  public static abstract interface PlaceSearchEventOrBuilder extends MessageLiteOrBuilder
  {
    public abstract String getProcessId();

    public abstract String getServerIp();

    public abstract String getSignature();

    public abstract String getTimestamp();

    public abstract boolean hasProcessId();

    public abstract boolean hasServerIp();

    public abstract boolean hasSignature();

    public abstract boolean hasTimestamp();
  }

  public static final class PlusOneData extends GeneratedMessageLite
    implements Data.PlusOneDataOrBuilder
  {
    private static final PlusOneData defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private List<CountData> countData_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private Object plusoneId_;
    private boolean plusonedByViewer_;
    private int totalPlusoneCount_;

    static
    {
      PlusOneData localPlusOneData = new PlusOneData();
      defaultInstance = localPlusOneData;
      localPlusOneData.plusonedByViewer_ = false;
      localPlusOneData.totalPlusoneCount_ = 0;
      localPlusOneData.countData_ = Collections.emptyList();
      localPlusOneData.plusoneId_ = "";
    }

    private PlusOneData()
    {
    }

    private PlusOneData(Builder paramBuilder)
    {
      super();
    }

    public static PlusOneData getDefaultInstance()
    {
      return defaultInstance;
    }

    private ByteString getPlusoneIdBytes()
    {
      Object localObject = this.plusoneId_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.plusoneId_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static Builder newBuilder()
    {
      return Builder.access$13200();
    }

    public static Builder newBuilder(PlusOneData paramPlusOneData)
    {
      return Builder.access$13200().mergeFrom(paramPlusOneData);
    }

    public final CountData getCountData(int paramInt)
    {
      return (CountData)this.countData_.get(paramInt);
    }

    public final int getCountDataCount()
    {
      return this.countData_.size();
    }

    public final List<CountData> getCountDataList()
    {
      return this.countData_;
    }

    public final CountDataOrBuilder getCountDataOrBuilder(int paramInt)
    {
      return (CountDataOrBuilder)this.countData_.get(paramInt);
    }

    public final List<? extends CountDataOrBuilder> getCountDataOrBuilderList()
    {
      return this.countData_;
    }

    public final PlusOneData getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final String getPlusoneId()
    {
      Object localObject1 = this.plusoneId_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.plusoneId_ = str;
      }
    }

    public final boolean getPlusonedByViewer()
    {
      return this.plusonedByViewer_;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int n = i; ; n = k)
      {
        return n;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeBoolSize(1, this.plusonedByViewer_);
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeInt32Size(2, this.totalPlusoneCount_);
        for (int m = 0; m < this.countData_.size(); m++)
          k += CodedOutputStream.computeMessageSize(3, (MessageLite)this.countData_.get(m));
        if ((0x4 & this.bitField0_) == 4)
          k += CodedOutputStream.computeBytesSize(4, getPlusoneIdBytes());
        this.memoizedSerializedSize = k;
      }
    }

    public final int getTotalPlusoneCount()
    {
      return this.totalPlusoneCount_;
    }

    public final boolean hasPlusoneId()
    {
      if ((0x4 & this.bitField0_) == 4);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasPlusonedByViewer()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean hasTotalPlusoneCount()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeBool(1, this.plusonedByViewer_);
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeInt32(2, this.totalPlusoneCount_);
      for (int i = 0; i < this.countData_.size(); i++)
        paramCodedOutputStream.writeMessage(3, (MessageLite)this.countData_.get(i));
      if ((0x4 & this.bitField0_) == 4)
        paramCodedOutputStream.writeBytes(4, getPlusoneIdBytes());
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Data.PlusOneData, Builder>
      implements Data.PlusOneDataOrBuilder
    {
      private int bitField0_;
      private List<Data.PlusOneData.CountData> countData_ = Collections.emptyList();
      private Object plusoneId_ = "";
      private boolean plusonedByViewer_;
      private int totalPlusoneCount_;

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private void ensureCountDataIsMutable()
      {
        if ((0x4 & this.bitField0_) != 4)
        {
          this.countData_ = new ArrayList(this.countData_);
          this.bitField0_ = (0x4 | this.bitField0_);
        }
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 8:
            this.bitField0_ = (0x1 | this.bitField0_);
            this.plusonedByViewer_ = paramCodedInputStream.readBool();
            break;
          case 16:
            this.bitField0_ = (0x2 | this.bitField0_);
            this.totalPlusoneCount_ = paramCodedInputStream.readInt32();
            break;
          case 26:
            Data.PlusOneData.CountData.Builder localBuilder = Data.PlusOneData.CountData.newBuilder();
            paramCodedInputStream.readMessage(localBuilder, paramExtensionRegistryLite);
            addCountData(localBuilder.buildPartial());
            break;
          case 34:
          }
          this.bitField0_ = (0x8 | this.bitField0_);
          this.plusoneId_ = paramCodedInputStream.readBytes();
        }
      }

      public final Builder addAllCountData(Iterable<? extends Data.PlusOneData.CountData> paramIterable)
      {
        ensureCountDataIsMutable();
        GeneratedMessageLite.Builder.addAll(paramIterable, this.countData_);
        return this;
      }

      public final Builder addCountData(int paramInt, Data.PlusOneData.CountData.Builder paramBuilder)
      {
        ensureCountDataIsMutable();
        this.countData_.add(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder addCountData(int paramInt, Data.PlusOneData.CountData paramCountData)
      {
        if (paramCountData == null)
          throw new NullPointerException();
        ensureCountDataIsMutable();
        this.countData_.add(paramInt, paramCountData);
        return this;
      }

      public final Builder addCountData(Data.PlusOneData.CountData.Builder paramBuilder)
      {
        ensureCountDataIsMutable();
        this.countData_.add(paramBuilder.build());
        return this;
      }

      public final Builder addCountData(Data.PlusOneData.CountData paramCountData)
      {
        if (paramCountData == null)
          throw new NullPointerException();
        ensureCountDataIsMutable();
        this.countData_.add(paramCountData);
        return this;
      }

      public final Data.PlusOneData build()
      {
        Data.PlusOneData localPlusOneData = buildPartial();
        if (!localPlusOneData.isInitialized())
          throw new UninitializedMessageException();
        return localPlusOneData;
      }

      public final Data.PlusOneData buildPartial()
      {
        Data.PlusOneData localPlusOneData = new Data.PlusOneData(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Data.PlusOneData.access$13402(localPlusOneData, this.plusonedByViewer_);
        if ((i & 0x2) == 2)
          k |= 2;
        Data.PlusOneData.access$13502(localPlusOneData, this.totalPlusoneCount_);
        if ((0x4 & this.bitField0_) == 4)
        {
          this.countData_ = Collections.unmodifiableList(this.countData_);
          this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        }
        Data.PlusOneData.access$13602(localPlusOneData, this.countData_);
        if ((i & 0x8) == 8)
          k |= 4;
        Data.PlusOneData.access$13702(localPlusOneData, this.plusoneId_);
        Data.PlusOneData.access$13802(localPlusOneData, k);
        return localPlusOneData;
      }

      public final Builder clear()
      {
        super.clear();
        this.plusonedByViewer_ = false;
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.totalPlusoneCount_ = 0;
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.countData_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.plusoneId_ = "";
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        return this;
      }

      public final Builder clearCountData()
      {
        this.countData_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        return this;
      }

      public final Builder clearPlusoneId()
      {
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        this.plusoneId_ = Data.PlusOneData.getDefaultInstance().getPlusoneId();
        return this;
      }

      public final Builder clearPlusonedByViewer()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.plusonedByViewer_ = false;
        return this;
      }

      public final Builder clearTotalPlusoneCount()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.totalPlusoneCount_ = 0;
        return this;
      }

      public final Data.PlusOneData.CountData getCountData(int paramInt)
      {
        return (Data.PlusOneData.CountData)this.countData_.get(paramInt);
      }

      public final int getCountDataCount()
      {
        return this.countData_.size();
      }

      public final List<Data.PlusOneData.CountData> getCountDataList()
      {
        return Collections.unmodifiableList(this.countData_);
      }

      public final Data.PlusOneData getDefaultInstanceForType()
      {
        return Data.PlusOneData.getDefaultInstance();
      }

      public final String getPlusoneId()
      {
        Object localObject = this.plusoneId_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.plusoneId_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final boolean getPlusonedByViewer()
      {
        return this.plusonedByViewer_;
      }

      public final int getTotalPlusoneCount()
      {
        return this.totalPlusoneCount_;
      }

      public final boolean hasPlusoneId()
      {
        if ((0x8 & this.bitField0_) == 8);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasPlusonedByViewer()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean hasTotalPlusoneCount()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Data.PlusOneData paramPlusOneData)
      {
        if (paramPlusOneData == Data.PlusOneData.getDefaultInstance());
        label103: label122: 
        while (true)
        {
          return this;
          if (paramPlusOneData.hasPlusonedByViewer())
            setPlusonedByViewer(paramPlusOneData.getPlusonedByViewer());
          if (paramPlusOneData.hasTotalPlusoneCount())
            setTotalPlusoneCount(paramPlusOneData.getTotalPlusoneCount());
          if (!paramPlusOneData.countData_.isEmpty())
          {
            if (!this.countData_.isEmpty())
              break label103;
            this.countData_ = paramPlusOneData.countData_;
            this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
          }
          while (true)
          {
            if (!paramPlusOneData.hasPlusoneId())
              break label122;
            setPlusoneId(paramPlusOneData.getPlusoneId());
            break;
            ensureCountDataIsMutable();
            this.countData_.addAll(paramPlusOneData.countData_);
          }
        }
      }

      public final Builder setCountData(int paramInt, Data.PlusOneData.CountData.Builder paramBuilder)
      {
        ensureCountDataIsMutable();
        this.countData_.set(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder setCountData(int paramInt, Data.PlusOneData.CountData paramCountData)
      {
        if (paramCountData == null)
          throw new NullPointerException();
        ensureCountDataIsMutable();
        this.countData_.set(paramInt, paramCountData);
        return this;
      }

      public final Builder setPlusoneId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x8 | this.bitField0_);
        this.plusoneId_ = paramString;
        return this;
      }

      public final Builder setPlusonedByViewer(boolean paramBoolean)
      {
        this.bitField0_ = (0x1 | this.bitField0_);
        this.plusonedByViewer_ = paramBoolean;
        return this;
      }

      public final Builder setTotalPlusoneCount(int paramInt)
      {
        this.bitField0_ = (0x2 | this.bitField0_);
        this.totalPlusoneCount_ = paramInt;
        return this;
      }
    }

    public static final class CountData extends GeneratedMessageLite
      implements Data.PlusOneData.CountDataOrBuilder
    {
      private static final CountData defaultInstance;
      private static final long serialVersionUID;
      private int bitField0_;
      private Object circleName_;
      private int count_;
      private LazyStringList focusObfuscatedPersonId_;
      private byte memoizedIsInitialized = -1;
      private int memoizedSerializedSize = -1;
      private LazyStringList personFirstName_;
      private List<Long> personId_;

      static
      {
        CountData localCountData = new CountData();
        defaultInstance = localCountData;
        localCountData.count_ = 0;
        localCountData.personId_ = Collections.emptyList();
        localCountData.focusObfuscatedPersonId_ = LazyStringArrayList.EMPTY;
        localCountData.circleName_ = "";
        localCountData.personFirstName_ = LazyStringArrayList.EMPTY;
      }

      private CountData()
      {
      }

      private CountData(Builder paramBuilder)
      {
        super();
      }

      private ByteString getCircleNameBytes()
      {
        Object localObject = this.circleName_;
        ByteString localByteString;
        if ((localObject instanceof String))
        {
          localByteString = ByteString.copyFromUtf8((String)localObject);
          this.circleName_ = localByteString;
        }
        while (true)
        {
          return localByteString;
          localByteString = (ByteString)localObject;
        }
      }

      public static CountData getDefaultInstance()
      {
        return defaultInstance;
      }

      public static Builder newBuilder()
      {
        return Builder.access$12300();
      }

      public final String getCircleName()
      {
        Object localObject1 = this.circleName_;
        if ((localObject1 instanceof String));
        String str;
        for (Object localObject2 = (String)localObject1; ; localObject2 = str)
        {
          return localObject2;
          ByteString localByteString = (ByteString)localObject1;
          str = localByteString.toStringUtf8();
          if (Internal.isValidUtf8(localByteString))
            this.circleName_ = str;
        }
      }

      public final int getCount()
      {
        return this.count_;
      }

      public final CountData getDefaultInstanceForType()
      {
        return defaultInstance;
      }

      public final String getFocusObfuscatedPersonId(int paramInt)
      {
        return (String)this.focusObfuscatedPersonId_.get(paramInt);
      }

      public final int getFocusObfuscatedPersonIdCount()
      {
        return this.focusObfuscatedPersonId_.size();
      }

      public final List<String> getFocusObfuscatedPersonIdList()
      {
        return this.focusObfuscatedPersonId_;
      }

      public final String getPersonFirstName(int paramInt)
      {
        return (String)this.personFirstName_.get(paramInt);
      }

      public final int getPersonFirstNameCount()
      {
        return this.personFirstName_.size();
      }

      public final List<String> getPersonFirstNameList()
      {
        return this.personFirstName_;
      }

      public final long getPersonId(int paramInt)
      {
        return ((Long)this.personId_.get(paramInt)).longValue();
      }

      public final int getPersonIdCount()
      {
        return this.personId_.size();
      }

      public final List<Long> getPersonIdList()
      {
        return this.personId_;
      }

      public final int getSerializedSize()
      {
        int i = this.memoizedSerializedSize;
        if (i != -1);
        int i7;
        for (int i8 = i; ; i8 = i7)
        {
          return i8;
          int j = 0x1 & this.bitField0_;
          int k = 0;
          if (j == 1)
            k = 0 + CodedOutputStream.computeInt32Size(1, this.count_);
          int m = 0;
          for (int n = 0; n < this.personId_.size(); n++)
            m += CodedOutputStream.computeRawVarint64Size(((Long)this.personId_.get(n)).longValue());
          int i1 = k + m + 1 * getPersonIdList().size();
          if ((0x2 & this.bitField0_) == 2)
            i1 += CodedOutputStream.computeBytesSize(3, getCircleNameBytes());
          int i2 = 0;
          for (int i3 = 0; i3 < this.personFirstName_.size(); i3++)
            i2 += CodedOutputStream.computeBytesSizeNoTag(this.personFirstName_.getByteString(i3));
          int i4 = i1 + i2 + 1 * getPersonFirstNameList().size();
          int i5 = 0;
          for (int i6 = 0; i6 < this.focusObfuscatedPersonId_.size(); i6++)
            i5 += CodedOutputStream.computeBytesSizeNoTag(this.focusObfuscatedPersonId_.getByteString(i6));
          i7 = i4 + i5 + 1 * getFocusObfuscatedPersonIdList().size();
          this.memoizedSerializedSize = i7;
        }
      }

      public final boolean hasCircleName()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasCount()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean isInitialized()
      {
        int i = 1;
        int j = this.memoizedIsInitialized;
        if (j != -1)
          if (j != i);
        while (true)
        {
          return i;
          i = 0;
          continue;
          this.memoizedIsInitialized = i;
        }
      }

      protected final Object writeReplace()
        throws ObjectStreamException
      {
        return super.writeReplace();
      }

      public final void writeTo(CodedOutputStream paramCodedOutputStream)
        throws IOException
      {
        getSerializedSize();
        if ((0x1 & this.bitField0_) == 1)
          paramCodedOutputStream.writeInt32(1, this.count_);
        for (int i = 0; i < this.personId_.size(); i++)
          paramCodedOutputStream.writeInt64(2, ((Long)this.personId_.get(i)).longValue());
        if ((0x2 & this.bitField0_) == 2)
          paramCodedOutputStream.writeBytes(3, getCircleNameBytes());
        for (int j = 0; j < this.personFirstName_.size(); j++)
          paramCodedOutputStream.writeBytes(4, this.personFirstName_.getByteString(j));
        for (int k = 0; k < this.focusObfuscatedPersonId_.size(); k++)
          paramCodedOutputStream.writeBytes(5, this.focusObfuscatedPersonId_.getByteString(k));
      }

      public static final class Builder extends GeneratedMessageLite.Builder<Data.PlusOneData.CountData, Builder>
        implements Data.PlusOneData.CountDataOrBuilder
      {
        private int bitField0_;
        private Object circleName_ = "";
        private int count_;
        private LazyStringList focusObfuscatedPersonId_ = LazyStringArrayList.EMPTY;
        private LazyStringList personFirstName_ = LazyStringArrayList.EMPTY;
        private List<Long> personId_ = Collections.emptyList();

        private Builder clone()
        {
          return new Builder().mergeFrom(buildPartial());
        }

        private void ensureFocusObfuscatedPersonIdIsMutable()
        {
          if ((0x4 & this.bitField0_) != 4)
          {
            this.focusObfuscatedPersonId_ = new LazyStringArrayList(this.focusObfuscatedPersonId_);
            this.bitField0_ = (0x4 | this.bitField0_);
          }
        }

        private void ensurePersonFirstNameIsMutable()
        {
          if ((0x10 & this.bitField0_) != 16)
          {
            this.personFirstName_ = new LazyStringArrayList(this.personFirstName_);
            this.bitField0_ = (0x10 | this.bitField0_);
          }
        }

        private void ensurePersonIdIsMutable()
        {
          if ((0x2 & this.bitField0_) != 2)
          {
            this.personId_ = new ArrayList(this.personId_);
            this.bitField0_ = (0x2 | this.bitField0_);
          }
        }

        private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
          throws IOException
        {
          while (true)
          {
            int i = paramCodedInputStream.readTag();
            switch (i)
            {
            default:
              if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
                continue;
            case 0:
              return this;
            case 8:
              this.bitField0_ = (0x1 | this.bitField0_);
              this.count_ = paramCodedInputStream.readInt32();
              break;
            case 16:
              ensurePersonIdIsMutable();
              this.personId_.add(Long.valueOf(paramCodedInputStream.readInt64()));
              break;
            case 18:
              int j = paramCodedInputStream.pushLimit(paramCodedInputStream.readRawVarint32());
              while (paramCodedInputStream.getBytesUntilLimit() > 0)
                addPersonId(paramCodedInputStream.readInt64());
              paramCodedInputStream.popLimit(j);
              break;
            case 26:
              this.bitField0_ = (0x8 | this.bitField0_);
              this.circleName_ = paramCodedInputStream.readBytes();
              break;
            case 34:
              ensurePersonFirstNameIsMutable();
              this.personFirstName_.add(paramCodedInputStream.readBytes());
              break;
            case 42:
            }
            ensureFocusObfuscatedPersonIdIsMutable();
            this.focusObfuscatedPersonId_.add(paramCodedInputStream.readBytes());
          }
        }

        public final Builder addAllFocusObfuscatedPersonId(Iterable<String> paramIterable)
        {
          ensureFocusObfuscatedPersonIdIsMutable();
          GeneratedMessageLite.Builder.addAll(paramIterable, this.focusObfuscatedPersonId_);
          return this;
        }

        public final Builder addAllPersonFirstName(Iterable<String> paramIterable)
        {
          ensurePersonFirstNameIsMutable();
          GeneratedMessageLite.Builder.addAll(paramIterable, this.personFirstName_);
          return this;
        }

        public final Builder addAllPersonId(Iterable<? extends Long> paramIterable)
        {
          ensurePersonIdIsMutable();
          GeneratedMessageLite.Builder.addAll(paramIterable, this.personId_);
          return this;
        }

        public final Builder addFocusObfuscatedPersonId(String paramString)
        {
          if (paramString == null)
            throw new NullPointerException();
          ensureFocusObfuscatedPersonIdIsMutable();
          this.focusObfuscatedPersonId_.add(paramString);
          return this;
        }

        public final Builder addPersonFirstName(String paramString)
        {
          if (paramString == null)
            throw new NullPointerException();
          ensurePersonFirstNameIsMutable();
          this.personFirstName_.add(paramString);
          return this;
        }

        public final Builder addPersonId(long paramLong)
        {
          ensurePersonIdIsMutable();
          this.personId_.add(Long.valueOf(paramLong));
          return this;
        }

        public final Data.PlusOneData.CountData build()
        {
          Data.PlusOneData.CountData localCountData = buildPartial();
          if (!localCountData.isInitialized())
            throw new UninitializedMessageException();
          return localCountData;
        }

        public final Data.PlusOneData.CountData buildPartial()
        {
          Data.PlusOneData.CountData localCountData = new Data.PlusOneData.CountData(this, (byte)0);
          int i = this.bitField0_;
          int j = i & 0x1;
          int k = 0;
          if (j == 1)
            k = 1;
          Data.PlusOneData.CountData.access$12502(localCountData, this.count_);
          if ((0x2 & this.bitField0_) == 2)
          {
            this.personId_ = Collections.unmodifiableList(this.personId_);
            this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
          }
          Data.PlusOneData.CountData.access$12602(localCountData, this.personId_);
          if ((0x4 & this.bitField0_) == 4)
          {
            this.focusObfuscatedPersonId_ = new UnmodifiableLazyStringList(this.focusObfuscatedPersonId_);
            this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
          }
          Data.PlusOneData.CountData.access$12702(localCountData, this.focusObfuscatedPersonId_);
          if ((i & 0x8) == 8)
            k |= 2;
          Data.PlusOneData.CountData.access$12802(localCountData, this.circleName_);
          if ((0x10 & this.bitField0_) == 16)
          {
            this.personFirstName_ = new UnmodifiableLazyStringList(this.personFirstName_);
            this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
          }
          Data.PlusOneData.CountData.access$12902(localCountData, this.personFirstName_);
          Data.PlusOneData.CountData.access$13002(localCountData, k);
          return localCountData;
        }

        public final Builder clear()
        {
          super.clear();
          this.count_ = 0;
          this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
          this.personId_ = Collections.emptyList();
          this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
          this.focusObfuscatedPersonId_ = LazyStringArrayList.EMPTY;
          this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
          this.circleName_ = "";
          this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
          this.personFirstName_ = LazyStringArrayList.EMPTY;
          this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
          return this;
        }

        public final Builder clearCircleName()
        {
          this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
          this.circleName_ = Data.PlusOneData.CountData.getDefaultInstance().getCircleName();
          return this;
        }

        public final Builder clearCount()
        {
          this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
          this.count_ = 0;
          return this;
        }

        public final Builder clearFocusObfuscatedPersonId()
        {
          this.focusObfuscatedPersonId_ = LazyStringArrayList.EMPTY;
          this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
          return this;
        }

        public final Builder clearPersonFirstName()
        {
          this.personFirstName_ = LazyStringArrayList.EMPTY;
          this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
          return this;
        }

        public final Builder clearPersonId()
        {
          this.personId_ = Collections.emptyList();
          this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
          return this;
        }

        public final String getCircleName()
        {
          Object localObject = this.circleName_;
          String str;
          if (!(localObject instanceof String))
          {
            str = ((ByteString)localObject).toStringUtf8();
            this.circleName_ = str;
          }
          while (true)
          {
            return str;
            str = (String)localObject;
          }
        }

        public final int getCount()
        {
          return this.count_;
        }

        public final Data.PlusOneData.CountData getDefaultInstanceForType()
        {
          return Data.PlusOneData.CountData.getDefaultInstance();
        }

        public final String getFocusObfuscatedPersonId(int paramInt)
        {
          return (String)this.focusObfuscatedPersonId_.get(paramInt);
        }

        public final int getFocusObfuscatedPersonIdCount()
        {
          return this.focusObfuscatedPersonId_.size();
        }

        public final List<String> getFocusObfuscatedPersonIdList()
        {
          return Collections.unmodifiableList(this.focusObfuscatedPersonId_);
        }

        public final String getPersonFirstName(int paramInt)
        {
          return (String)this.personFirstName_.get(paramInt);
        }

        public final int getPersonFirstNameCount()
        {
          return this.personFirstName_.size();
        }

        public final List<String> getPersonFirstNameList()
        {
          return Collections.unmodifiableList(this.personFirstName_);
        }

        public final long getPersonId(int paramInt)
        {
          return ((Long)this.personId_.get(paramInt)).longValue();
        }

        public final int getPersonIdCount()
        {
          return this.personId_.size();
        }

        public final List<Long> getPersonIdList()
        {
          return Collections.unmodifiableList(this.personId_);
        }

        public final boolean hasCircleName()
        {
          if ((0x8 & this.bitField0_) == 8);
          for (boolean bool = true; ; bool = false)
            return bool;
        }

        public final boolean hasCount()
        {
          int i = 1;
          if ((0x1 & this.bitField0_) == i);
          while (true)
          {
            return i;
            int j = 0;
          }
        }

        public final boolean isInitialized()
        {
          return true;
        }

        public final Builder mergeFrom(Data.PlusOneData.CountData paramCountData)
        {
          if (paramCountData == Data.PlusOneData.CountData.getDefaultInstance());
          while (true)
          {
            return this;
            if (paramCountData.hasCount())
              setCount(paramCountData.getCount());
            if (!paramCountData.personId_.isEmpty())
            {
              if (this.personId_.isEmpty())
              {
                this.personId_ = paramCountData.personId_;
                this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
              }
            }
            else
              label68: if (!paramCountData.focusObfuscatedPersonId_.isEmpty())
              {
                if (!this.focusObfuscatedPersonId_.isEmpty())
                  break label194;
                this.focusObfuscatedPersonId_ = paramCountData.focusObfuscatedPersonId_;
                this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
              }
            while (true)
            {
              if (paramCountData.hasCircleName())
                setCircleName(paramCountData.getCircleName());
              if (paramCountData.personFirstName_.isEmpty())
                break;
              if (!this.personFirstName_.isEmpty())
                break label215;
              this.personFirstName_ = paramCountData.personFirstName_;
              this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
              break;
              ensurePersonIdIsMutable();
              this.personId_.addAll(paramCountData.personId_);
              break label68;
              label194: ensureFocusObfuscatedPersonIdIsMutable();
              this.focusObfuscatedPersonId_.addAll(paramCountData.focusObfuscatedPersonId_);
            }
            label215: ensurePersonFirstNameIsMutable();
            this.personFirstName_.addAll(paramCountData.personFirstName_);
          }
        }

        public final Builder setCircleName(String paramString)
        {
          if (paramString == null)
            throw new NullPointerException();
          this.bitField0_ = (0x8 | this.bitField0_);
          this.circleName_ = paramString;
          return this;
        }

        public final Builder setCount(int paramInt)
        {
          this.bitField0_ = (0x1 | this.bitField0_);
          this.count_ = paramInt;
          return this;
        }

        public final Builder setFocusObfuscatedPersonId(int paramInt, String paramString)
        {
          if (paramString == null)
            throw new NullPointerException();
          ensureFocusObfuscatedPersonIdIsMutable();
          this.focusObfuscatedPersonId_.set(paramInt, paramString);
          return this;
        }

        public final Builder setPersonFirstName(int paramInt, String paramString)
        {
          if (paramString == null)
            throw new NullPointerException();
          ensurePersonFirstNameIsMutable();
          this.personFirstName_.set(paramInt, paramString);
          return this;
        }

        public final Builder setPersonId(int paramInt, long paramLong)
        {
          ensurePersonIdIsMutable();
          this.personId_.set(paramInt, Long.valueOf(paramLong));
          return this;
        }
      }
    }

    public static abstract interface CountDataOrBuilder extends MessageLiteOrBuilder
    {
      public abstract String getCircleName();

      public abstract int getCount();

      public abstract String getFocusObfuscatedPersonId(int paramInt);

      public abstract int getFocusObfuscatedPersonIdCount();

      public abstract List<String> getFocusObfuscatedPersonIdList();

      public abstract String getPersonFirstName(int paramInt);

      public abstract int getPersonFirstNameCount();

      public abstract List<String> getPersonFirstNameList();

      public abstract long getPersonId(int paramInt);

      public abstract int getPersonIdCount();

      public abstract List<Long> getPersonIdList();

      public abstract boolean hasCircleName();

      public abstract boolean hasCount();
    }
  }

  public static abstract interface PlusOneDataOrBuilder extends MessageLiteOrBuilder
  {
    public abstract Data.PlusOneData.CountData getCountData(int paramInt);

    public abstract int getCountDataCount();

    public abstract List<Data.PlusOneData.CountData> getCountDataList();

    public abstract String getPlusoneId();

    public abstract boolean getPlusonedByViewer();

    public abstract int getTotalPlusoneCount();

    public abstract boolean hasPlusoneId();

    public abstract boolean hasPlusonedByViewer();

    public abstract boolean hasTotalPlusoneCount();
  }

  public static final class Point extends GeneratedMessageLite
    implements Data.PointOrBuilder
  {
    private static final Point defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private int latitudeE7_;
    private int longitudeE7_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;

    static
    {
      Point localPoint = new Point();
      defaultInstance = localPoint;
      localPoint.latitudeE7_ = 0;
      localPoint.longitudeE7_ = 0;
    }

    private Point()
    {
    }

    private Point(Builder paramBuilder)
    {
      super();
    }

    public static Point getDefaultInstance()
    {
      return defaultInstance;
    }

    public static Builder newBuilder()
    {
      return Builder.access$32000();
    }

    public static Builder newBuilder(Point paramPoint)
    {
      return Builder.access$32000().mergeFrom(paramPoint);
    }

    public final Point getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final int getLatitudeE7()
    {
      return this.latitudeE7_;
    }

    public final int getLongitudeE7()
    {
      return this.longitudeE7_;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeInt32Size(1, this.latitudeE7_);
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeInt32Size(2, this.longitudeE7_);
        this.memoizedSerializedSize = k;
      }
    }

    public final boolean hasLatitudeE7()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean hasLongitudeE7()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        if (!hasLatitudeE7())
        {
          this.memoizedIsInitialized = 0;
          i = 0;
        }
        else if (!hasLongitudeE7())
        {
          this.memoizedIsInitialized = 0;
          i = 0;
        }
        else
        {
          this.memoizedIsInitialized = i;
        }
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeInt32(1, this.latitudeE7_);
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeInt32(2, this.longitudeE7_);
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Data.Point, Builder>
      implements Data.PointOrBuilder
    {
      private int bitField0_;
      private int latitudeE7_;
      private int longitudeE7_;

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 8:
            this.bitField0_ = (0x1 | this.bitField0_);
            this.latitudeE7_ = paramCodedInputStream.readInt32();
            break;
          case 16:
          }
          this.bitField0_ = (0x2 | this.bitField0_);
          this.longitudeE7_ = paramCodedInputStream.readInt32();
        }
      }

      public final Data.Point build()
      {
        Data.Point localPoint = buildPartial();
        if (!localPoint.isInitialized())
          throw new UninitializedMessageException();
        return localPoint;
      }

      public final Data.Point buildPartial()
      {
        Data.Point localPoint = new Data.Point(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Data.Point.access$32202(localPoint, this.latitudeE7_);
        if ((i & 0x2) == 2)
          k |= 2;
        Data.Point.access$32302(localPoint, this.longitudeE7_);
        Data.Point.access$32402(localPoint, k);
        return localPoint;
      }

      public final Builder clear()
      {
        super.clear();
        this.latitudeE7_ = 0;
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.longitudeE7_ = 0;
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        return this;
      }

      public final Builder clearLatitudeE7()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.latitudeE7_ = 0;
        return this;
      }

      public final Builder clearLongitudeE7()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.longitudeE7_ = 0;
        return this;
      }

      public final Data.Point getDefaultInstanceForType()
      {
        return Data.Point.getDefaultInstance();
      }

      public final int getLatitudeE7()
      {
        return this.latitudeE7_;
      }

      public final int getLongitudeE7()
      {
        return this.longitudeE7_;
      }

      public final boolean hasLatitudeE7()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean hasLongitudeE7()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean isInitialized()
      {
        boolean bool1 = hasLatitudeE7();
        boolean bool2 = false;
        if (!bool1);
        while (true)
        {
          return bool2;
          boolean bool3 = hasLongitudeE7();
          bool2 = false;
          if (bool3)
            bool2 = true;
        }
      }

      public final Builder mergeFrom(Data.Point paramPoint)
      {
        if (paramPoint == Data.Point.getDefaultInstance());
        while (true)
        {
          return this;
          if (paramPoint.hasLatitudeE7())
            setLatitudeE7(paramPoint.getLatitudeE7());
          if (paramPoint.hasLongitudeE7())
            setLongitudeE7(paramPoint.getLongitudeE7());
        }
      }

      public final Builder setLatitudeE7(int paramInt)
      {
        this.bitField0_ = (0x1 | this.bitField0_);
        this.latitudeE7_ = paramInt;
        return this;
      }

      public final Builder setLongitudeE7(int paramInt)
      {
        this.bitField0_ = (0x2 | this.bitField0_);
        this.longitudeE7_ = paramInt;
        return this;
      }
    }
  }

  public static abstract interface PointOrBuilder extends MessageLiteOrBuilder
  {
    public abstract int getLatitudeE7();

    public abstract int getLongitudeE7();

    public abstract boolean hasLatitudeE7();

    public abstract boolean hasLongitudeE7();
  }

  public static final class Promo extends GeneratedMessageLite
    implements Data.PromoOrBuilder
  {
    private static final Promo defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private long nativeAndroidAppPromoDismissTimestampMsec_;
    private long nativeIphoneAppPromoDismissTimestampMsec_;
    private long wagonPhoneVerificationPromoTimestampMsec_;
    private long wagonPhotoUploadPromoTimestampMsec_;
    private long wagonWhatsHotPromoTimestampMsec_;
    private long whatsHotPromoTimestampMsec_;
    private long wwMainFlowAckTimestampMsec_;

    static
    {
      Promo localPromo = new Promo();
      defaultInstance = localPromo;
      localPromo.nativeAndroidAppPromoDismissTimestampMsec_ = 0L;
      localPromo.nativeIphoneAppPromoDismissTimestampMsec_ = 0L;
      localPromo.wwMainFlowAckTimestampMsec_ = 0L;
      localPromo.wagonWhatsHotPromoTimestampMsec_ = 0L;
      localPromo.whatsHotPromoTimestampMsec_ = 0L;
      localPromo.wagonPhotoUploadPromoTimestampMsec_ = 0L;
      localPromo.wagonPhoneVerificationPromoTimestampMsec_ = 0L;
    }

    private Promo()
    {
    }

    private Promo(Builder paramBuilder)
    {
      super();
    }

    public static Promo getDefaultInstance()
    {
      return defaultInstance;
    }

    public static Builder newBuilder()
    {
      return Builder.access$39400();
    }

    public static Builder newBuilder(Promo paramPromo)
    {
      return Builder.access$39400().mergeFrom(paramPromo);
    }

    public final Promo getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final long getNativeAndroidAppPromoDismissTimestampMsec()
    {
      return this.nativeAndroidAppPromoDismissTimestampMsec_;
    }

    public final long getNativeIphoneAppPromoDismissTimestampMsec()
    {
      return this.nativeIphoneAppPromoDismissTimestampMsec_;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeInt64Size(1, this.nativeAndroidAppPromoDismissTimestampMsec_);
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeInt64Size(2, this.nativeIphoneAppPromoDismissTimestampMsec_);
        if ((0x4 & this.bitField0_) == 4)
          k += CodedOutputStream.computeInt64Size(3, this.wwMainFlowAckTimestampMsec_);
        if ((0x8 & this.bitField0_) == 8)
          k += CodedOutputStream.computeInt64Size(4, this.wagonWhatsHotPromoTimestampMsec_);
        if ((0x10 & this.bitField0_) == 16)
          k += CodedOutputStream.computeInt64Size(5, this.whatsHotPromoTimestampMsec_);
        if ((0x20 & this.bitField0_) == 32)
          k += CodedOutputStream.computeInt64Size(6, this.wagonPhotoUploadPromoTimestampMsec_);
        if ((0x40 & this.bitField0_) == 64)
          k += CodedOutputStream.computeInt64Size(7, this.wagonPhoneVerificationPromoTimestampMsec_);
        this.memoizedSerializedSize = k;
      }
    }

    public final long getWagonPhoneVerificationPromoTimestampMsec()
    {
      return this.wagonPhoneVerificationPromoTimestampMsec_;
    }

    @Deprecated
    public final long getWagonPhotoUploadPromoTimestampMsec()
    {
      return this.wagonPhotoUploadPromoTimestampMsec_;
    }

    @Deprecated
    public final long getWagonWhatsHotPromoTimestampMsec()
    {
      return this.wagonWhatsHotPromoTimestampMsec_;
    }

    public final long getWhatsHotPromoTimestampMsec()
    {
      return this.whatsHotPromoTimestampMsec_;
    }

    public final long getWwMainFlowAckTimestampMsec()
    {
      return this.wwMainFlowAckTimestampMsec_;
    }

    public final boolean hasNativeAndroidAppPromoDismissTimestampMsec()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean hasNativeIphoneAppPromoDismissTimestampMsec()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasWagonPhoneVerificationPromoTimestampMsec()
    {
      if ((0x40 & this.bitField0_) == 64);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    @Deprecated
    public final boolean hasWagonPhotoUploadPromoTimestampMsec()
    {
      if ((0x20 & this.bitField0_) == 32);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    @Deprecated
    public final boolean hasWagonWhatsHotPromoTimestampMsec()
    {
      if ((0x8 & this.bitField0_) == 8);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasWhatsHotPromoTimestampMsec()
    {
      if ((0x10 & this.bitField0_) == 16);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasWwMainFlowAckTimestampMsec()
    {
      if ((0x4 & this.bitField0_) == 4);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeInt64(1, this.nativeAndroidAppPromoDismissTimestampMsec_);
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeInt64(2, this.nativeIphoneAppPromoDismissTimestampMsec_);
      if ((0x4 & this.bitField0_) == 4)
        paramCodedOutputStream.writeInt64(3, this.wwMainFlowAckTimestampMsec_);
      if ((0x8 & this.bitField0_) == 8)
        paramCodedOutputStream.writeInt64(4, this.wagonWhatsHotPromoTimestampMsec_);
      if ((0x10 & this.bitField0_) == 16)
        paramCodedOutputStream.writeInt64(5, this.whatsHotPromoTimestampMsec_);
      if ((0x20 & this.bitField0_) == 32)
        paramCodedOutputStream.writeInt64(6, this.wagonPhotoUploadPromoTimestampMsec_);
      if ((0x40 & this.bitField0_) == 64)
        paramCodedOutputStream.writeInt64(7, this.wagonPhoneVerificationPromoTimestampMsec_);
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Data.Promo, Builder>
      implements Data.PromoOrBuilder
    {
      private int bitField0_;
      private long nativeAndroidAppPromoDismissTimestampMsec_;
      private long nativeIphoneAppPromoDismissTimestampMsec_;
      private long wagonPhoneVerificationPromoTimestampMsec_;
      private long wagonPhotoUploadPromoTimestampMsec_;
      private long wagonWhatsHotPromoTimestampMsec_;
      private long whatsHotPromoTimestampMsec_;
      private long wwMainFlowAckTimestampMsec_;

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 8:
            this.bitField0_ = (0x1 | this.bitField0_);
            this.nativeAndroidAppPromoDismissTimestampMsec_ = paramCodedInputStream.readInt64();
            break;
          case 16:
            this.bitField0_ = (0x2 | this.bitField0_);
            this.nativeIphoneAppPromoDismissTimestampMsec_ = paramCodedInputStream.readInt64();
            break;
          case 24:
            this.bitField0_ = (0x4 | this.bitField0_);
            this.wwMainFlowAckTimestampMsec_ = paramCodedInputStream.readInt64();
            break;
          case 32:
            this.bitField0_ = (0x8 | this.bitField0_);
            this.wagonWhatsHotPromoTimestampMsec_ = paramCodedInputStream.readInt64();
            break;
          case 40:
            this.bitField0_ = (0x10 | this.bitField0_);
            this.whatsHotPromoTimestampMsec_ = paramCodedInputStream.readInt64();
            break;
          case 48:
            this.bitField0_ = (0x20 | this.bitField0_);
            this.wagonPhotoUploadPromoTimestampMsec_ = paramCodedInputStream.readInt64();
            break;
          case 56:
          }
          this.bitField0_ = (0x40 | this.bitField0_);
          this.wagonPhoneVerificationPromoTimestampMsec_ = paramCodedInputStream.readInt64();
        }
      }

      public final Data.Promo build()
      {
        Data.Promo localPromo = buildPartial();
        if (!localPromo.isInitialized())
          throw new UninitializedMessageException();
        return localPromo;
      }

      public final Data.Promo buildPartial()
      {
        Data.Promo localPromo = new Data.Promo(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Data.Promo.access$39602(localPromo, this.nativeAndroidAppPromoDismissTimestampMsec_);
        if ((i & 0x2) == 2)
          k |= 2;
        Data.Promo.access$39702(localPromo, this.nativeIphoneAppPromoDismissTimestampMsec_);
        if ((i & 0x4) == 4)
          k |= 4;
        Data.Promo.access$39802(localPromo, this.wwMainFlowAckTimestampMsec_);
        if ((i & 0x8) == 8)
          k |= 8;
        Data.Promo.access$39902(localPromo, this.wagonWhatsHotPromoTimestampMsec_);
        if ((i & 0x10) == 16)
          k |= 16;
        Data.Promo.access$40002(localPromo, this.whatsHotPromoTimestampMsec_);
        if ((i & 0x20) == 32)
          k |= 32;
        Data.Promo.access$40102(localPromo, this.wagonPhotoUploadPromoTimestampMsec_);
        if ((i & 0x40) == 64)
          k |= 64;
        Data.Promo.access$40202(localPromo, this.wagonPhoneVerificationPromoTimestampMsec_);
        Data.Promo.access$40302(localPromo, k);
        return localPromo;
      }

      public final Builder clear()
      {
        super.clear();
        this.nativeAndroidAppPromoDismissTimestampMsec_ = 0L;
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.nativeIphoneAppPromoDismissTimestampMsec_ = 0L;
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.wwMainFlowAckTimestampMsec_ = 0L;
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.wagonWhatsHotPromoTimestampMsec_ = 0L;
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        this.whatsHotPromoTimestampMsec_ = 0L;
        this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        this.wagonPhotoUploadPromoTimestampMsec_ = 0L;
        this.bitField0_ = (0xFFFFFFDF & this.bitField0_);
        this.wagonPhoneVerificationPromoTimestampMsec_ = 0L;
        this.bitField0_ = (0xFFFFFFBF & this.bitField0_);
        return this;
      }

      public final Builder clearNativeAndroidAppPromoDismissTimestampMsec()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.nativeAndroidAppPromoDismissTimestampMsec_ = 0L;
        return this;
      }

      public final Builder clearNativeIphoneAppPromoDismissTimestampMsec()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.nativeIphoneAppPromoDismissTimestampMsec_ = 0L;
        return this;
      }

      public final Builder clearWagonPhoneVerificationPromoTimestampMsec()
      {
        this.bitField0_ = (0xFFFFFFBF & this.bitField0_);
        this.wagonPhoneVerificationPromoTimestampMsec_ = 0L;
        return this;
      }

      @Deprecated
      public final Builder clearWagonPhotoUploadPromoTimestampMsec()
      {
        this.bitField0_ = (0xFFFFFFDF & this.bitField0_);
        this.wagonPhotoUploadPromoTimestampMsec_ = 0L;
        return this;
      }

      @Deprecated
      public final Builder clearWagonWhatsHotPromoTimestampMsec()
      {
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        this.wagonWhatsHotPromoTimestampMsec_ = 0L;
        return this;
      }

      public final Builder clearWhatsHotPromoTimestampMsec()
      {
        this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        this.whatsHotPromoTimestampMsec_ = 0L;
        return this;
      }

      public final Builder clearWwMainFlowAckTimestampMsec()
      {
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.wwMainFlowAckTimestampMsec_ = 0L;
        return this;
      }

      public final Data.Promo getDefaultInstanceForType()
      {
        return Data.Promo.getDefaultInstance();
      }

      public final long getNativeAndroidAppPromoDismissTimestampMsec()
      {
        return this.nativeAndroidAppPromoDismissTimestampMsec_;
      }

      public final long getNativeIphoneAppPromoDismissTimestampMsec()
      {
        return this.nativeIphoneAppPromoDismissTimestampMsec_;
      }

      public final long getWagonPhoneVerificationPromoTimestampMsec()
      {
        return this.wagonPhoneVerificationPromoTimestampMsec_;
      }

      @Deprecated
      public final long getWagonPhotoUploadPromoTimestampMsec()
      {
        return this.wagonPhotoUploadPromoTimestampMsec_;
      }

      @Deprecated
      public final long getWagonWhatsHotPromoTimestampMsec()
      {
        return this.wagonWhatsHotPromoTimestampMsec_;
      }

      public final long getWhatsHotPromoTimestampMsec()
      {
        return this.whatsHotPromoTimestampMsec_;
      }

      public final long getWwMainFlowAckTimestampMsec()
      {
        return this.wwMainFlowAckTimestampMsec_;
      }

      public final boolean hasNativeAndroidAppPromoDismissTimestampMsec()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean hasNativeIphoneAppPromoDismissTimestampMsec()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasWagonPhoneVerificationPromoTimestampMsec()
      {
        if ((0x40 & this.bitField0_) == 64);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      @Deprecated
      public final boolean hasWagonPhotoUploadPromoTimestampMsec()
      {
        if ((0x20 & this.bitField0_) == 32);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      @Deprecated
      public final boolean hasWagonWhatsHotPromoTimestampMsec()
      {
        if ((0x8 & this.bitField0_) == 8);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasWhatsHotPromoTimestampMsec()
      {
        if ((0x10 & this.bitField0_) == 16);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasWwMainFlowAckTimestampMsec()
      {
        if ((0x4 & this.bitField0_) == 4);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Data.Promo paramPromo)
      {
        if (paramPromo == Data.Promo.getDefaultInstance());
        while (true)
        {
          return this;
          if (paramPromo.hasNativeAndroidAppPromoDismissTimestampMsec())
            setNativeAndroidAppPromoDismissTimestampMsec(paramPromo.getNativeAndroidAppPromoDismissTimestampMsec());
          if (paramPromo.hasNativeIphoneAppPromoDismissTimestampMsec())
            setNativeIphoneAppPromoDismissTimestampMsec(paramPromo.getNativeIphoneAppPromoDismissTimestampMsec());
          if (paramPromo.hasWwMainFlowAckTimestampMsec())
            setWwMainFlowAckTimestampMsec(paramPromo.getWwMainFlowAckTimestampMsec());
          if (paramPromo.hasWagonWhatsHotPromoTimestampMsec())
            setWagonWhatsHotPromoTimestampMsec(paramPromo.getWagonWhatsHotPromoTimestampMsec());
          if (paramPromo.hasWhatsHotPromoTimestampMsec())
            setWhatsHotPromoTimestampMsec(paramPromo.getWhatsHotPromoTimestampMsec());
          if (paramPromo.hasWagonPhotoUploadPromoTimestampMsec())
            setWagonPhotoUploadPromoTimestampMsec(paramPromo.getWagonPhotoUploadPromoTimestampMsec());
          if (paramPromo.hasWagonPhoneVerificationPromoTimestampMsec())
            setWagonPhoneVerificationPromoTimestampMsec(paramPromo.getWagonPhoneVerificationPromoTimestampMsec());
        }
      }

      public final Builder setNativeAndroidAppPromoDismissTimestampMsec(long paramLong)
      {
        this.bitField0_ = (0x1 | this.bitField0_);
        this.nativeAndroidAppPromoDismissTimestampMsec_ = paramLong;
        return this;
      }

      public final Builder setNativeIphoneAppPromoDismissTimestampMsec(long paramLong)
      {
        this.bitField0_ = (0x2 | this.bitField0_);
        this.nativeIphoneAppPromoDismissTimestampMsec_ = paramLong;
        return this;
      }

      public final Builder setWagonPhoneVerificationPromoTimestampMsec(long paramLong)
      {
        this.bitField0_ = (0x40 | this.bitField0_);
        this.wagonPhoneVerificationPromoTimestampMsec_ = paramLong;
        return this;
      }

      @Deprecated
      public final Builder setWagonPhotoUploadPromoTimestampMsec(long paramLong)
      {
        this.bitField0_ = (0x20 | this.bitField0_);
        this.wagonPhotoUploadPromoTimestampMsec_ = paramLong;
        return this;
      }

      @Deprecated
      public final Builder setWagonWhatsHotPromoTimestampMsec(long paramLong)
      {
        this.bitField0_ = (0x8 | this.bitField0_);
        this.wagonWhatsHotPromoTimestampMsec_ = paramLong;
        return this;
      }

      public final Builder setWhatsHotPromoTimestampMsec(long paramLong)
      {
        this.bitField0_ = (0x10 | this.bitField0_);
        this.whatsHotPromoTimestampMsec_ = paramLong;
        return this;
      }

      public final Builder setWwMainFlowAckTimestampMsec(long paramLong)
      {
        this.bitField0_ = (0x4 | this.bitField0_);
        this.wwMainFlowAckTimestampMsec_ = paramLong;
        return this;
      }
    }
  }

  public static abstract interface PromoOrBuilder extends MessageLiteOrBuilder
  {
    public abstract long getNativeAndroidAppPromoDismissTimestampMsec();

    public abstract long getNativeIphoneAppPromoDismissTimestampMsec();

    public abstract long getWagonPhoneVerificationPromoTimestampMsec();

    @Deprecated
    public abstract long getWagonPhotoUploadPromoTimestampMsec();

    @Deprecated
    public abstract long getWagonWhatsHotPromoTimestampMsec();

    public abstract long getWhatsHotPromoTimestampMsec();

    public abstract long getWwMainFlowAckTimestampMsec();

    public abstract boolean hasNativeAndroidAppPromoDismissTimestampMsec();

    public abstract boolean hasNativeIphoneAppPromoDismissTimestampMsec();

    public abstract boolean hasWagonPhoneVerificationPromoTimestampMsec();

    @Deprecated
    public abstract boolean hasWagonPhotoUploadPromoTimestampMsec();

    @Deprecated
    public abstract boolean hasWagonWhatsHotPromoTimestampMsec();

    public abstract boolean hasWhatsHotPromoTimestampMsec();

    public abstract boolean hasWwMainFlowAckTimestampMsec();
  }

  public static final class ReshareData extends GeneratedMessageLite
    implements Data.ReshareDataOrBuilder
  {
    private static final ReshareData defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private Object originalActivityId_;
    private long originalAuthorGaiaId_;
    private List<Long> resharingUserId_;

    static
    {
      ReshareData localReshareData = new ReshareData();
      defaultInstance = localReshareData;
      localReshareData.originalActivityId_ = "";
      localReshareData.originalAuthorGaiaId_ = 0L;
      localReshareData.resharingUserId_ = Collections.emptyList();
    }

    private ReshareData()
    {
    }

    private ReshareData(Builder paramBuilder)
    {
      super();
    }

    public static ReshareData getDefaultInstance()
    {
      return defaultInstance;
    }

    private ByteString getOriginalActivityIdBytes()
    {
      Object localObject = this.originalActivityId_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.originalActivityId_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static Builder newBuilder()
    {
      return Builder.access$11600();
    }

    public static Builder newBuilder(ReshareData paramReshareData)
    {
      return Builder.access$11600().mergeFrom(paramReshareData);
    }

    public final ReshareData getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final String getOriginalActivityId()
    {
      Object localObject1 = this.originalActivityId_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.originalActivityId_ = str;
      }
    }

    public final long getOriginalAuthorGaiaId()
    {
      return this.originalAuthorGaiaId_;
    }

    public final long getResharingUserId(int paramInt)
    {
      return ((Long)this.resharingUserId_.get(paramInt)).longValue();
    }

    public final int getResharingUserIdCount()
    {
      return this.resharingUserId_.size();
    }

    public final List<Long> getResharingUserIdList()
    {
      return this.resharingUserId_;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int i1;
      for (int i2 = i; ; i2 = i1)
      {
        return i2;
        int j = 0x1 & this.bitField0_;
        int k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeBytesSize(1, getOriginalActivityIdBytes());
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeInt64Size(2, this.originalAuthorGaiaId_);
        int m = 0;
        for (int n = 0; n < this.resharingUserId_.size(); n++)
          m += CodedOutputStream.computeRawVarint64Size(((Long)this.resharingUserId_.get(n)).longValue());
        i1 = k + m + 1 * getResharingUserIdList().size();
        this.memoizedSerializedSize = i1;
      }
    }

    public final boolean hasOriginalActivityId()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean hasOriginalAuthorGaiaId()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeBytes(1, getOriginalActivityIdBytes());
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeInt64(2, this.originalAuthorGaiaId_);
      for (int i = 0; i < this.resharingUserId_.size(); i++)
        paramCodedOutputStream.writeInt64(3, ((Long)this.resharingUserId_.get(i)).longValue());
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Data.ReshareData, Builder>
      implements Data.ReshareDataOrBuilder
    {
      private int bitField0_;
      private Object originalActivityId_ = "";
      private long originalAuthorGaiaId_;
      private List<Long> resharingUserId_ = Collections.emptyList();

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private void ensureResharingUserIdIsMutable()
      {
        if ((0x4 & this.bitField0_) != 4)
        {
          this.resharingUserId_ = new ArrayList(this.resharingUserId_);
          this.bitField0_ = (0x4 | this.bitField0_);
        }
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 10:
            this.bitField0_ = (0x1 | this.bitField0_);
            this.originalActivityId_ = paramCodedInputStream.readBytes();
            break;
          case 16:
            this.bitField0_ = (0x2 | this.bitField0_);
            this.originalAuthorGaiaId_ = paramCodedInputStream.readInt64();
            break;
          case 24:
            ensureResharingUserIdIsMutable();
            this.resharingUserId_.add(Long.valueOf(paramCodedInputStream.readInt64()));
            break;
          case 26:
          }
          int j = paramCodedInputStream.pushLimit(paramCodedInputStream.readRawVarint32());
          while (paramCodedInputStream.getBytesUntilLimit() > 0)
            addResharingUserId(paramCodedInputStream.readInt64());
          paramCodedInputStream.popLimit(j);
        }
      }

      public final Builder addAllResharingUserId(Iterable<? extends Long> paramIterable)
      {
        ensureResharingUserIdIsMutable();
        GeneratedMessageLite.Builder.addAll(paramIterable, this.resharingUserId_);
        return this;
      }

      public final Builder addResharingUserId(long paramLong)
      {
        ensureResharingUserIdIsMutable();
        this.resharingUserId_.add(Long.valueOf(paramLong));
        return this;
      }

      public final Data.ReshareData build()
      {
        Data.ReshareData localReshareData = buildPartial();
        if (!localReshareData.isInitialized())
          throw new UninitializedMessageException();
        return localReshareData;
      }

      public final Data.ReshareData buildPartial()
      {
        Data.ReshareData localReshareData = new Data.ReshareData(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Data.ReshareData.access$11802(localReshareData, this.originalActivityId_);
        if ((i & 0x2) == 2)
          k |= 2;
        Data.ReshareData.access$11902(localReshareData, this.originalAuthorGaiaId_);
        if ((0x4 & this.bitField0_) == 4)
        {
          this.resharingUserId_ = Collections.unmodifiableList(this.resharingUserId_);
          this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        }
        Data.ReshareData.access$12002(localReshareData, this.resharingUserId_);
        Data.ReshareData.access$12102(localReshareData, k);
        return localReshareData;
      }

      public final Builder clear()
      {
        super.clear();
        this.originalActivityId_ = "";
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.originalAuthorGaiaId_ = 0L;
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.resharingUserId_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        return this;
      }

      public final Builder clearOriginalActivityId()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.originalActivityId_ = Data.ReshareData.getDefaultInstance().getOriginalActivityId();
        return this;
      }

      public final Builder clearOriginalAuthorGaiaId()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.originalAuthorGaiaId_ = 0L;
        return this;
      }

      public final Builder clearResharingUserId()
      {
        this.resharingUserId_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        return this;
      }

      public final Data.ReshareData getDefaultInstanceForType()
      {
        return Data.ReshareData.getDefaultInstance();
      }

      public final String getOriginalActivityId()
      {
        Object localObject = this.originalActivityId_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.originalActivityId_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final long getOriginalAuthorGaiaId()
      {
        return this.originalAuthorGaiaId_;
      }

      public final long getResharingUserId(int paramInt)
      {
        return ((Long)this.resharingUserId_.get(paramInt)).longValue();
      }

      public final int getResharingUserIdCount()
      {
        return this.resharingUserId_.size();
      }

      public final List<Long> getResharingUserIdList()
      {
        return Collections.unmodifiableList(this.resharingUserId_);
      }

      public final boolean hasOriginalActivityId()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean hasOriginalAuthorGaiaId()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Data.ReshareData paramReshareData)
      {
        if (paramReshareData == Data.ReshareData.getDefaultInstance());
        while (true)
        {
          return this;
          if (paramReshareData.hasOriginalActivityId())
            setOriginalActivityId(paramReshareData.getOriginalActivityId());
          if (paramReshareData.hasOriginalAuthorGaiaId())
            setOriginalAuthorGaiaId(paramReshareData.getOriginalAuthorGaiaId());
          if (!paramReshareData.resharingUserId_.isEmpty())
            if (this.resharingUserId_.isEmpty())
            {
              this.resharingUserId_ = paramReshareData.resharingUserId_;
              this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
            }
            else
            {
              ensureResharingUserIdIsMutable();
              this.resharingUserId_.addAll(paramReshareData.resharingUserId_);
            }
        }
      }

      public final Builder setOriginalActivityId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x1 | this.bitField0_);
        this.originalActivityId_ = paramString;
        return this;
      }

      public final Builder setOriginalAuthorGaiaId(long paramLong)
      {
        this.bitField0_ = (0x2 | this.bitField0_);
        this.originalAuthorGaiaId_ = paramLong;
        return this;
      }

      public final Builder setResharingUserId(int paramInt, long paramLong)
      {
        ensureResharingUserIdIsMutable();
        this.resharingUserId_.set(paramInt, Long.valueOf(paramLong));
        return this;
      }
    }
  }

  public static abstract interface ReshareDataOrBuilder extends MessageLiteOrBuilder
  {
    public abstract String getOriginalActivityId();

    public abstract long getOriginalAuthorGaiaId();

    public abstract long getResharingUserId(int paramInt);

    public abstract int getResharingUserIdCount();

    public abstract List<Long> getResharingUserIdList();

    public abstract boolean hasOriginalActivityId();

    public abstract boolean hasOriginalAuthorGaiaId();
  }

  public static final class ReverseGeocode extends GeneratedMessageLite
    implements Data.ReverseGeocodeOrBuilder
  {
    private static final ReverseGeocode defaultInstance;
    private static final long serialVersionUID;
    private Object address_;
    private int bitField0_;
    private GranularityEnum granularity_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;

    static
    {
      ReverseGeocode localReverseGeocode = new ReverseGeocode();
      defaultInstance = localReverseGeocode;
      localReverseGeocode.address_ = "";
      localReverseGeocode.granularity_ = GranularityEnum.FINEST;
    }

    private ReverseGeocode()
    {
    }

    private ReverseGeocode(Builder paramBuilder)
    {
      super();
    }

    private ByteString getAddressBytes()
    {
      Object localObject = this.address_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.address_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static ReverseGeocode getDefaultInstance()
    {
      return defaultInstance;
    }

    public static Builder newBuilder()
    {
      return Builder.access$32600();
    }

    public static Builder newBuilder(ReverseGeocode paramReverseGeocode)
    {
      return Builder.access$32600().mergeFrom(paramReverseGeocode);
    }

    public final String getAddress()
    {
      Object localObject1 = this.address_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.address_ = str;
      }
    }

    public final ReverseGeocode getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final GranularityEnum getGranularity()
    {
      return this.granularity_;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeBytesSize(1, getAddressBytes());
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeEnumSize(2, this.granularity_.getNumber());
        this.memoizedSerializedSize = k;
      }
    }

    public final boolean hasAddress()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean hasGranularity()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeBytes(1, getAddressBytes());
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeEnum(2, this.granularity_.getNumber());
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Data.ReverseGeocode, Builder>
      implements Data.ReverseGeocodeOrBuilder
    {
      private Object address_ = "";
      private int bitField0_;
      private Data.ReverseGeocode.GranularityEnum granularity_ = Data.ReverseGeocode.GranularityEnum.FINEST;

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 10:
            this.bitField0_ = (0x1 | this.bitField0_);
            this.address_ = paramCodedInputStream.readBytes();
            break;
          case 16:
          }
          Data.ReverseGeocode.GranularityEnum localGranularityEnum = Data.ReverseGeocode.GranularityEnum.valueOf(paramCodedInputStream.readEnum());
          if (localGranularityEnum != null)
          {
            this.bitField0_ = (0x2 | this.bitField0_);
            this.granularity_ = localGranularityEnum;
          }
        }
      }

      public final Data.ReverseGeocode build()
      {
        Data.ReverseGeocode localReverseGeocode = buildPartial();
        if (!localReverseGeocode.isInitialized())
          throw new UninitializedMessageException();
        return localReverseGeocode;
      }

      public final Data.ReverseGeocode buildPartial()
      {
        Data.ReverseGeocode localReverseGeocode = new Data.ReverseGeocode(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Data.ReverseGeocode.access$32802(localReverseGeocode, this.address_);
        if ((i & 0x2) == 2)
          k |= 2;
        Data.ReverseGeocode.access$32902(localReverseGeocode, this.granularity_);
        Data.ReverseGeocode.access$33002(localReverseGeocode, k);
        return localReverseGeocode;
      }

      public final Builder clear()
      {
        super.clear();
        this.address_ = "";
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.granularity_ = Data.ReverseGeocode.GranularityEnum.FINEST;
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        return this;
      }

      public final Builder clearAddress()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.address_ = Data.ReverseGeocode.getDefaultInstance().getAddress();
        return this;
      }

      public final Builder clearGranularity()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.granularity_ = Data.ReverseGeocode.GranularityEnum.FINEST;
        return this;
      }

      public final String getAddress()
      {
        Object localObject = this.address_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.address_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final Data.ReverseGeocode getDefaultInstanceForType()
      {
        return Data.ReverseGeocode.getDefaultInstance();
      }

      public final Data.ReverseGeocode.GranularityEnum getGranularity()
      {
        return this.granularity_;
      }

      public final boolean hasAddress()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean hasGranularity()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Data.ReverseGeocode paramReverseGeocode)
      {
        if (paramReverseGeocode == Data.ReverseGeocode.getDefaultInstance());
        while (true)
        {
          return this;
          if (paramReverseGeocode.hasAddress())
            setAddress(paramReverseGeocode.getAddress());
          if (paramReverseGeocode.hasGranularity())
            setGranularity(paramReverseGeocode.getGranularity());
        }
      }

      public final Builder setAddress(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x1 | this.bitField0_);
        this.address_ = paramString;
        return this;
      }

      public final Builder setGranularity(Data.ReverseGeocode.GranularityEnum paramGranularityEnum)
      {
        if (paramGranularityEnum == null)
          throw new NullPointerException();
        this.bitField0_ = (0x2 | this.bitField0_);
        this.granularity_ = paramGranularityEnum;
        return this;
      }
    }

    public static enum GranularityEnum
      implements Internal.EnumLite
    {
      private static Internal.EnumLiteMap<GranularityEnum> internalValueMap = new Internal.EnumLiteMap()
      {
      };
      private final int value;

      static
      {
        GranularityEnum[] arrayOfGranularityEnum = new GranularityEnum[2];
        arrayOfGranularityEnum[0] = FINEST;
        arrayOfGranularityEnum[1] = LOCALITY;
      }

      private GranularityEnum(int paramInt1, int paramInt2)
      {
        this.value = paramInt1;
      }

      public static GranularityEnum valueOf(int paramInt)
      {
        GranularityEnum localGranularityEnum;
        switch (paramInt)
        {
        default:
          localGranularityEnum = null;
        case 1:
        case 2:
        }
        while (true)
        {
          return localGranularityEnum;
          localGranularityEnum = FINEST;
          continue;
          localGranularityEnum = LOCALITY;
        }
      }

      public final int getNumber()
      {
        return this.value;
      }
    }
  }

  public static abstract interface ReverseGeocodeOrBuilder extends MessageLiteOrBuilder
  {
    public abstract String getAddress();

    public abstract Data.ReverseGeocode.GranularityEnum getGranularity();

    public abstract boolean hasAddress();

    public abstract boolean hasGranularity();
  }

  public static final class SearchQuery extends GeneratedMessageLite
    implements Data.SearchQueryOrBuilder
  {
    private static final SearchQuery defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private List<Filter> filter_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private Data.Point position_;
    private Object queryText_;
    private int searchRadiusMeters_;
    private Sort sort_;

    static
    {
      SearchQuery localSearchQuery = new SearchQuery();
      defaultInstance = localSearchQuery;
      localSearchQuery.queryText_ = "";
      localSearchQuery.filter_ = Collections.emptyList();
      localSearchQuery.sort_ = Sort.BEST;
      localSearchQuery.position_ = Data.Point.getDefaultInstance();
      localSearchQuery.searchRadiusMeters_ = 10000;
    }

    private SearchQuery()
    {
    }

    private SearchQuery(Builder paramBuilder)
    {
      super();
    }

    public static SearchQuery getDefaultInstance()
    {
      return defaultInstance;
    }

    private ByteString getQueryTextBytes()
    {
      Object localObject = this.queryText_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.queryText_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static Builder newBuilder()
    {
      return Builder.access$53900();
    }

    public static Builder newBuilder(SearchQuery paramSearchQuery)
    {
      return Builder.access$53900().mergeFrom(paramSearchQuery);
    }

    public final SearchQuery getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final Filter getFilter(int paramInt)
    {
      return (Filter)this.filter_.get(paramInt);
    }

    public final int getFilterCount()
    {
      return this.filter_.size();
    }

    public final List<Filter> getFilterList()
    {
      return this.filter_;
    }

    public final Data.Point getPosition()
    {
      return this.position_;
    }

    public final String getQueryText()
    {
      Object localObject1 = this.queryText_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.queryText_ = str;
      }
    }

    public final int getSearchRadiusMeters()
    {
      return this.searchRadiusMeters_;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int i1;
      for (int i2 = i; ; i2 = i1)
      {
        return i2;
        int j = 0x1 & this.bitField0_;
        int k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeBytesSize(1, getQueryTextBytes());
        int m = 0;
        for (int n = 0; n < this.filter_.size(); n++)
          m += CodedOutputStream.computeInt32SizeNoTag(((Filter)this.filter_.get(n)).getNumber());
        i1 = k + m + 1 * this.filter_.size();
        if ((0x2 & this.bitField0_) == 2)
          i1 += CodedOutputStream.computeEnumSize(3, this.sort_.getNumber());
        if ((0x4 & this.bitField0_) == 4)
          i1 += CodedOutputStream.computeMessageSize(4, this.position_);
        if ((0x8 & this.bitField0_) == 8)
          i1 += CodedOutputStream.computeInt32Size(5, this.searchRadiusMeters_);
        this.memoizedSerializedSize = i1;
      }
    }

    public final Sort getSort()
    {
      return this.sort_;
    }

    public final boolean hasPosition()
    {
      if ((0x4 & this.bitField0_) == 4);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasQueryText()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean hasSearchRadiusMeters()
    {
      if ((0x8 & this.bitField0_) == 8);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasSort()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        if ((hasPosition()) && (!getPosition().isInitialized()))
        {
          this.memoizedIsInitialized = 0;
          i = 0;
        }
        else
        {
          this.memoizedIsInitialized = i;
        }
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeBytes(1, getQueryTextBytes());
      for (int i = 0; i < this.filter_.size(); i++)
        paramCodedOutputStream.writeEnum(2, ((Filter)this.filter_.get(i)).getNumber());
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeEnum(3, this.sort_.getNumber());
      if ((0x4 & this.bitField0_) == 4)
        paramCodedOutputStream.writeMessage(4, this.position_);
      if ((0x8 & this.bitField0_) == 8)
        paramCodedOutputStream.writeInt32(5, this.searchRadiusMeters_);
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Data.SearchQuery, Builder>
      implements Data.SearchQueryOrBuilder
    {
      private int bitField0_;
      private List<Data.SearchQuery.Filter> filter_ = Collections.emptyList();
      private Data.Point position_ = Data.Point.getDefaultInstance();
      private Object queryText_ = "";
      private int searchRadiusMeters_ = 10000;
      private Data.SearchQuery.Sort sort_ = Data.SearchQuery.Sort.BEST;

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private void ensureFilterIsMutable()
      {
        if ((0x2 & this.bitField0_) != 2)
        {
          this.filter_ = new ArrayList(this.filter_);
          this.bitField0_ = (0x2 | this.bitField0_);
        }
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 10:
            this.bitField0_ = (0x1 | this.bitField0_);
            this.queryText_ = paramCodedInputStream.readBytes();
            break;
          case 16:
            Data.SearchQuery.Filter localFilter2 = Data.SearchQuery.Filter.valueOf(paramCodedInputStream.readEnum());
            if (localFilter2 == null)
              continue;
            addFilter(localFilter2);
            break;
          case 18:
            int j = paramCodedInputStream.pushLimit(paramCodedInputStream.readRawVarint32());
            while (paramCodedInputStream.getBytesUntilLimit() > 0)
            {
              Data.SearchQuery.Filter localFilter1 = Data.SearchQuery.Filter.valueOf(paramCodedInputStream.readEnum());
              if (localFilter1 != null)
                addFilter(localFilter1);
            }
            paramCodedInputStream.popLimit(j);
            break;
          case 24:
            Data.SearchQuery.Sort localSort = Data.SearchQuery.Sort.valueOf(paramCodedInputStream.readEnum());
            if (localSort == null)
              continue;
            this.bitField0_ = (0x4 | this.bitField0_);
            this.sort_ = localSort;
            break;
          case 34:
            Data.Point.Builder localBuilder = Data.Point.newBuilder();
            if (hasPosition())
              localBuilder.mergeFrom(getPosition());
            paramCodedInputStream.readMessage(localBuilder, paramExtensionRegistryLite);
            setPosition(localBuilder.buildPartial());
            break;
          case 40:
          }
          this.bitField0_ = (0x10 | this.bitField0_);
          this.searchRadiusMeters_ = paramCodedInputStream.readInt32();
        }
      }

      public final Builder addAllFilter(Iterable<? extends Data.SearchQuery.Filter> paramIterable)
      {
        ensureFilterIsMutable();
        GeneratedMessageLite.Builder.addAll(paramIterable, this.filter_);
        return this;
      }

      public final Builder addFilter(Data.SearchQuery.Filter paramFilter)
      {
        if (paramFilter == null)
          throw new NullPointerException();
        ensureFilterIsMutable();
        this.filter_.add(paramFilter);
        return this;
      }

      public final Data.SearchQuery build()
      {
        Data.SearchQuery localSearchQuery = buildPartial();
        if (!localSearchQuery.isInitialized())
          throw new UninitializedMessageException();
        return localSearchQuery;
      }

      public final Data.SearchQuery buildPartial()
      {
        Data.SearchQuery localSearchQuery = new Data.SearchQuery(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Data.SearchQuery.access$54102(localSearchQuery, this.queryText_);
        if ((0x2 & this.bitField0_) == 2)
        {
          this.filter_ = Collections.unmodifiableList(this.filter_);
          this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        }
        Data.SearchQuery.access$54202(localSearchQuery, this.filter_);
        if ((i & 0x4) == 4)
          k |= 2;
        Data.SearchQuery.access$54302(localSearchQuery, this.sort_);
        if ((i & 0x8) == 8)
          k |= 4;
        Data.SearchQuery.access$54402(localSearchQuery, this.position_);
        if ((i & 0x10) == 16)
          k |= 8;
        Data.SearchQuery.access$54502(localSearchQuery, this.searchRadiusMeters_);
        Data.SearchQuery.access$54602(localSearchQuery, k);
        return localSearchQuery;
      }

      public final Builder clear()
      {
        super.clear();
        this.queryText_ = "";
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.filter_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.sort_ = Data.SearchQuery.Sort.BEST;
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.position_ = Data.Point.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        this.searchRadiusMeters_ = 10000;
        this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        return this;
      }

      public final Builder clearFilter()
      {
        this.filter_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        return this;
      }

      public final Builder clearPosition()
      {
        this.position_ = Data.Point.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        return this;
      }

      public final Builder clearQueryText()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.queryText_ = Data.SearchQuery.getDefaultInstance().getQueryText();
        return this;
      }

      public final Builder clearSearchRadiusMeters()
      {
        this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        this.searchRadiusMeters_ = 10000;
        return this;
      }

      public final Builder clearSort()
      {
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.sort_ = Data.SearchQuery.Sort.BEST;
        return this;
      }

      public final Data.SearchQuery getDefaultInstanceForType()
      {
        return Data.SearchQuery.getDefaultInstance();
      }

      public final Data.SearchQuery.Filter getFilter(int paramInt)
      {
        return (Data.SearchQuery.Filter)this.filter_.get(paramInt);
      }

      public final int getFilterCount()
      {
        return this.filter_.size();
      }

      public final List<Data.SearchQuery.Filter> getFilterList()
      {
        return Collections.unmodifiableList(this.filter_);
      }

      public final Data.Point getPosition()
      {
        return this.position_;
      }

      public final String getQueryText()
      {
        Object localObject = this.queryText_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.queryText_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final int getSearchRadiusMeters()
      {
        return this.searchRadiusMeters_;
      }

      public final Data.SearchQuery.Sort getSort()
      {
        return this.sort_;
      }

      public final boolean hasPosition()
      {
        if ((0x8 & this.bitField0_) == 8);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasQueryText()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean hasSearchRadiusMeters()
      {
        if ((0x10 & this.bitField0_) == 16);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasSort()
      {
        if ((0x4 & this.bitField0_) == 4);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean isInitialized()
      {
        if ((hasPosition()) && (!getPosition().isInitialized()));
        for (boolean bool = false; ; bool = true)
          return bool;
      }

      public final Builder mergeFrom(Data.SearchQuery paramSearchQuery)
      {
        if (paramSearchQuery == Data.SearchQuery.getDefaultInstance())
          return this;
        if (paramSearchQuery.hasQueryText())
          setQueryText(paramSearchQuery.getQueryText());
        label68: Data.Point localPoint;
        if (!paramSearchQuery.filter_.isEmpty())
        {
          if (this.filter_.isEmpty())
          {
            this.filter_ = paramSearchQuery.filter_;
            this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
          }
        }
        else
        {
          if (paramSearchQuery.hasSort())
            setSort(paramSearchQuery.getSort());
          if (paramSearchQuery.hasPosition())
          {
            localPoint = paramSearchQuery.getPosition();
            if (((0x8 & this.bitField0_) != 8) || (this.position_ == Data.Point.getDefaultInstance()))
              break label187;
          }
        }
        label187: for (this.position_ = Data.Point.newBuilder(this.position_).mergeFrom(localPoint).buildPartial(); ; this.position_ = localPoint)
        {
          this.bitField0_ = (0x8 | this.bitField0_);
          if (!paramSearchQuery.hasSearchRadiusMeters())
            break;
          setSearchRadiusMeters(paramSearchQuery.getSearchRadiusMeters());
          break;
          ensureFilterIsMutable();
          this.filter_.addAll(paramSearchQuery.filter_);
          break label68;
        }
      }

      public final Builder setFilter(int paramInt, Data.SearchQuery.Filter paramFilter)
      {
        if (paramFilter == null)
          throw new NullPointerException();
        ensureFilterIsMutable();
        this.filter_.set(paramInt, paramFilter);
        return this;
      }

      public final Builder setPosition(Data.Point.Builder paramBuilder)
      {
        this.position_ = paramBuilder.build();
        this.bitField0_ = (0x8 | this.bitField0_);
        return this;
      }

      public final Builder setPosition(Data.Point paramPoint)
      {
        if (paramPoint == null)
          throw new NullPointerException();
        this.position_ = paramPoint;
        this.bitField0_ = (0x8 | this.bitField0_);
        return this;
      }

      public final Builder setQueryText(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x1 | this.bitField0_);
        this.queryText_ = paramString;
        return this;
      }

      public final Builder setSearchRadiusMeters(int paramInt)
      {
        this.bitField0_ = (0x10 | this.bitField0_);
        this.searchRadiusMeters_ = paramInt;
        return this;
      }

      public final Builder setSort(Data.SearchQuery.Sort paramSort)
      {
        if (paramSort == null)
          throw new NullPointerException();
        this.bitField0_ = (0x4 | this.bitField0_);
        this.sort_ = paramSort;
        return this;
      }
    }

    public static enum Filter
      implements Internal.EnumLite
    {
      private static Internal.EnumLiteMap<Filter> internalValueMap = new Internal.EnumLiteMap()
      {
      };
      private final int value;

      static
      {
        Filter[] arrayOfFilter = new Filter[4];
        arrayOfFilter[0] = ALL;
        arrayOfFilter[1] = PEOPLE;
        arrayOfFilter[2] = TACOS;
        arrayOfFilter[3] = TORTILLAS;
      }

      private Filter(int paramInt1, int paramInt2)
      {
        this.value = paramInt1;
      }

      public static Filter valueOf(int paramInt)
      {
        Filter localFilter;
        switch (paramInt)
        {
        default:
          localFilter = null;
        case 1:
        case 2:
        case 3:
        case 4:
        }
        while (true)
        {
          return localFilter;
          localFilter = ALL;
          continue;
          localFilter = PEOPLE;
          continue;
          localFilter = TACOS;
          continue;
          localFilter = TORTILLAS;
        }
      }

      public final int getNumber()
      {
        return this.value;
      }
    }

    public static enum Sort
      implements Internal.EnumLite
    {
      private static Internal.EnumLiteMap<Sort> internalValueMap = new Internal.EnumLiteMap()
      {
      };
      private final int value;

      static
      {
        Sort[] arrayOfSort = new Sort[2];
        arrayOfSort[0] = BEST;
        arrayOfSort[1] = RECENT;
      }

      private Sort(int paramInt1, int paramInt2)
      {
        this.value = paramInt1;
      }

      public static Sort valueOf(int paramInt)
      {
        Sort localSort;
        switch (paramInt)
        {
        default:
          localSort = null;
        case 1:
        case 2:
        }
        while (true)
        {
          return localSort;
          localSort = BEST;
          continue;
          localSort = RECENT;
        }
      }

      public final int getNumber()
      {
        return this.value;
      }
    }
  }

  public static abstract interface SearchQueryOrBuilder extends MessageLiteOrBuilder
  {
    public abstract Data.SearchQuery.Filter getFilter(int paramInt);

    public abstract int getFilterCount();

    public abstract List<Data.SearchQuery.Filter> getFilterList();

    public abstract Data.Point getPosition();

    public abstract String getQueryText();

    public abstract int getSearchRadiusMeters();

    public abstract Data.SearchQuery.Sort getSort();

    public abstract boolean hasPosition();

    public abstract boolean hasQueryText();

    public abstract boolean hasSearchRadiusMeters();

    public abstract boolean hasSort();
  }

  public static final class Source extends GeneratedMessageLite
    implements Data.SourceOrBuilder
  {
    private static final Source defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private Object name_;
    private Type type_;
    private Object url_;

    static
    {
      Source localSource = new Source();
      defaultInstance = localSource;
      localSource.type_ = Type.NEWS;
      localSource.name_ = "";
      localSource.url_ = "";
    }

    private Source()
    {
    }

    private Source(Builder paramBuilder)
    {
      super();
    }

    public static Source getDefaultInstance()
    {
      return defaultInstance;
    }

    private ByteString getNameBytes()
    {
      Object localObject = this.name_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.name_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    private ByteString getUrlBytes()
    {
      Object localObject = this.url_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.url_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static Builder newBuilder()
    {
      return Builder.access$2000();
    }

    public static Builder newBuilder(Source paramSource)
    {
      return Builder.access$2000().mergeFrom(paramSource);
    }

    public final Source getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final String getName()
    {
      Object localObject1 = this.name_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.name_ = str;
      }
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeEnumSize(1, this.type_.getNumber());
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeBytesSize(2, getNameBytes());
        if ((0x4 & this.bitField0_) == 4)
          k += CodedOutputStream.computeBytesSize(3, getUrlBytes());
        this.memoizedSerializedSize = k;
      }
    }

    public final Type getType()
    {
      return this.type_;
    }

    public final String getUrl()
    {
      Object localObject1 = this.url_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.url_ = str;
      }
    }

    public final boolean hasName()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasType()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean hasUrl()
    {
      if ((0x4 & this.bitField0_) == 4);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeEnum(1, this.type_.getNumber());
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeBytes(2, getNameBytes());
      if ((0x4 & this.bitField0_) == 4)
        paramCodedOutputStream.writeBytes(3, getUrlBytes());
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Data.Source, Builder>
      implements Data.SourceOrBuilder
    {
      private int bitField0_;
      private Object name_ = "";
      private Data.Source.Type type_ = Data.Source.Type.NEWS;
      private Object url_ = "";

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 8:
            Data.Source.Type localType = Data.Source.Type.valueOf(paramCodedInputStream.readEnum());
            if (localType == null)
              continue;
            this.bitField0_ = (0x1 | this.bitField0_);
            this.type_ = localType;
            break;
          case 18:
            this.bitField0_ = (0x2 | this.bitField0_);
            this.name_ = paramCodedInputStream.readBytes();
            break;
          case 26:
          }
          this.bitField0_ = (0x4 | this.bitField0_);
          this.url_ = paramCodedInputStream.readBytes();
        }
      }

      public final Data.Source build()
      {
        Data.Source localSource = buildPartial();
        if (!localSource.isInitialized())
          throw new UninitializedMessageException();
        return localSource;
      }

      public final Data.Source buildPartial()
      {
        Data.Source localSource = new Data.Source(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Data.Source.access$2202(localSource, this.type_);
        if ((i & 0x2) == 2)
          k |= 2;
        Data.Source.access$2302(localSource, this.name_);
        if ((i & 0x4) == 4)
          k |= 4;
        Data.Source.access$2402(localSource, this.url_);
        Data.Source.access$2502(localSource, k);
        return localSource;
      }

      public final Builder clear()
      {
        super.clear();
        this.type_ = Data.Source.Type.NEWS;
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.name_ = "";
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.url_ = "";
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        return this;
      }

      public final Builder clearName()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.name_ = Data.Source.getDefaultInstance().getName();
        return this;
      }

      public final Builder clearType()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.type_ = Data.Source.Type.NEWS;
        return this;
      }

      public final Builder clearUrl()
      {
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.url_ = Data.Source.getDefaultInstance().getUrl();
        return this;
      }

      public final Data.Source getDefaultInstanceForType()
      {
        return Data.Source.getDefaultInstance();
      }

      public final String getName()
      {
        Object localObject = this.name_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.name_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final Data.Source.Type getType()
      {
        return this.type_;
      }

      public final String getUrl()
      {
        Object localObject = this.url_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.url_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final boolean hasName()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasType()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean hasUrl()
      {
        if ((0x4 & this.bitField0_) == 4);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Data.Source paramSource)
      {
        if (paramSource == Data.Source.getDefaultInstance());
        while (true)
        {
          return this;
          if (paramSource.hasType())
            setType(paramSource.getType());
          if (paramSource.hasName())
            setName(paramSource.getName());
          if (paramSource.hasUrl())
            setUrl(paramSource.getUrl());
        }
      }

      public final Builder setName(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x2 | this.bitField0_);
        this.name_ = paramString;
        return this;
      }

      public final Builder setType(Data.Source.Type paramType)
      {
        if (paramType == null)
          throw new NullPointerException();
        this.bitField0_ = (0x1 | this.bitField0_);
        this.type_ = paramType;
        return this;
      }

      public final Builder setUrl(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x4 | this.bitField0_);
        this.url_ = paramString;
        return this;
      }
    }

    public static enum Type
      implements Internal.EnumLite
    {
      private static Internal.EnumLiteMap<Type> internalValueMap = new Internal.EnumLiteMap()
      {
      };
      private final int value;

      static
      {
        FEEDS = new Type("FEEDS", 2, 2);
        TWITTER = new Type("TWITTER", 3, 3);
        BUZZ = new Type("BUZZ", 4, 4);
        BLOGGER = new Type("BLOGGER", 5, 5);
        PLACE = new Type("PLACE", 6, 6);
        Type[] arrayOfType = new Type[7];
        arrayOfType[0] = NEWS;
        arrayOfType[1] = YOUTUBE;
        arrayOfType[2] = FEEDS;
        arrayOfType[3] = TWITTER;
        arrayOfType[4] = BUZZ;
        arrayOfType[5] = BLOGGER;
        arrayOfType[6] = PLACE;
      }

      private Type(int paramInt1, int paramInt2)
      {
        this.value = paramInt1;
      }

      public static Type valueOf(int paramInt)
      {
        Type localType;
        switch (paramInt)
        {
        default:
          localType = null;
        case 0:
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
        case 6:
        }
        while (true)
        {
          return localType;
          localType = NEWS;
          continue;
          localType = YOUTUBE;
          continue;
          localType = FEEDS;
          continue;
          localType = TWITTER;
          continue;
          localType = BUZZ;
          continue;
          localType = BLOGGER;
          continue;
          localType = PLACE;
        }
      }

      public final int getNumber()
      {
        return this.value;
      }
    }
  }

  public static abstract interface SourceOrBuilder extends MessageLiteOrBuilder
  {
    public abstract String getName();

    public abstract Data.Source.Type getType();

    public abstract String getUrl();

    public abstract boolean hasName();

    public abstract boolean hasType();

    public abstract boolean hasUrl();
  }

  public static final class StreamActionData extends GeneratedMessageLite
    implements Data.StreamActionDataOrBuilder
  {
    private static final StreamActionData defaultInstance;
    private static final long serialVersionUID;
    private Object activityId_;
    private int bitField0_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private Data.StreamViewType streamView_;

    static
    {
      StreamActionData localStreamActionData = new StreamActionData();
      defaultInstance = localStreamActionData;
      localStreamActionData.activityId_ = "";
      localStreamActionData.streamView_ = Data.StreamViewType.getDefaultInstance();
    }

    private StreamActionData()
    {
    }

    private StreamActionData(Builder paramBuilder)
    {
      super();
    }

    private ByteString getActivityIdBytes()
    {
      Object localObject = this.activityId_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.activityId_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static StreamActionData getDefaultInstance()
    {
      return defaultInstance;
    }

    public static Builder newBuilder()
    {
      return Builder.access$35800();
    }

    public static Builder newBuilder(StreamActionData paramStreamActionData)
    {
      return Builder.access$35800().mergeFrom(paramStreamActionData);
    }

    public final String getActivityId()
    {
      Object localObject1 = this.activityId_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.activityId_ = str;
      }
    }

    public final StreamActionData getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeBytesSize(1, getActivityIdBytes());
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeMessageSize(2, this.streamView_);
        this.memoizedSerializedSize = k;
      }
    }

    public final Data.StreamViewType getStreamView()
    {
      return this.streamView_;
    }

    public final boolean hasActivityId()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean hasStreamView()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeBytes(1, getActivityIdBytes());
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeMessage(2, this.streamView_);
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Data.StreamActionData, Builder>
      implements Data.StreamActionDataOrBuilder
    {
      private Object activityId_ = "";
      private int bitField0_;
      private Data.StreamViewType streamView_ = Data.StreamViewType.getDefaultInstance();

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 10:
            this.bitField0_ = (0x1 | this.bitField0_);
            this.activityId_ = paramCodedInputStream.readBytes();
            break;
          case 18:
          }
          Data.StreamViewType.Builder localBuilder = Data.StreamViewType.newBuilder();
          if (hasStreamView())
            localBuilder.mergeFrom(getStreamView());
          paramCodedInputStream.readMessage(localBuilder, paramExtensionRegistryLite);
          setStreamView(localBuilder.buildPartial());
        }
      }

      public final Data.StreamActionData build()
      {
        Data.StreamActionData localStreamActionData = buildPartial();
        if (!localStreamActionData.isInitialized())
          throw new UninitializedMessageException();
        return localStreamActionData;
      }

      public final Data.StreamActionData buildPartial()
      {
        Data.StreamActionData localStreamActionData = new Data.StreamActionData(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Data.StreamActionData.access$36002(localStreamActionData, this.activityId_);
        if ((i & 0x2) == 2)
          k |= 2;
        Data.StreamActionData.access$36102(localStreamActionData, this.streamView_);
        Data.StreamActionData.access$36202(localStreamActionData, k);
        return localStreamActionData;
      }

      public final Builder clear()
      {
        super.clear();
        this.activityId_ = "";
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.streamView_ = Data.StreamViewType.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        return this;
      }

      public final Builder clearActivityId()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.activityId_ = Data.StreamActionData.getDefaultInstance().getActivityId();
        return this;
      }

      public final Builder clearStreamView()
      {
        this.streamView_ = Data.StreamViewType.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        return this;
      }

      public final String getActivityId()
      {
        Object localObject = this.activityId_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.activityId_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final Data.StreamActionData getDefaultInstanceForType()
      {
        return Data.StreamActionData.getDefaultInstance();
      }

      public final Data.StreamViewType getStreamView()
      {
        return this.streamView_;
      }

      public final boolean hasActivityId()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean hasStreamView()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Data.StreamActionData paramStreamActionData)
      {
        if (paramStreamActionData == Data.StreamActionData.getDefaultInstance());
        do
        {
          return this;
          if (paramStreamActionData.hasActivityId())
            setActivityId(paramStreamActionData.getActivityId());
        }
        while (!paramStreamActionData.hasStreamView());
        Data.StreamViewType localStreamViewType = paramStreamActionData.getStreamView();
        if (((0x2 & this.bitField0_) == 2) && (this.streamView_ != Data.StreamViewType.getDefaultInstance()));
        for (this.streamView_ = Data.StreamViewType.newBuilder(this.streamView_).mergeFrom(localStreamViewType).buildPartial(); ; this.streamView_ = localStreamViewType)
        {
          this.bitField0_ = (0x2 | this.bitField0_);
          break;
        }
      }

      public final Builder setActivityId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x1 | this.bitField0_);
        this.activityId_ = paramString;
        return this;
      }

      public final Builder setStreamView(Data.StreamViewType.Builder paramBuilder)
      {
        this.streamView_ = paramBuilder.build();
        this.bitField0_ = (0x2 | this.bitField0_);
        return this;
      }

      public final Builder setStreamView(Data.StreamViewType paramStreamViewType)
      {
        if (paramStreamViewType == null)
          throw new NullPointerException();
        this.streamView_ = paramStreamViewType;
        this.bitField0_ = (0x2 | this.bitField0_);
        return this;
      }
    }
  }

  public static abstract interface StreamActionDataOrBuilder extends MessageLiteOrBuilder
  {
    public abstract String getActivityId();

    public abstract Data.StreamViewType getStreamView();

    public abstract boolean hasActivityId();

    public abstract boolean hasStreamView();
  }

  public static final class StreamViewType extends GeneratedMessageLite
    implements Data.StreamViewTypeOrBuilder
  {
    private static final StreamViewType defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private Object circleId_;
    private Object focusObfuscatedId_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private Type type_;
    private long userGaiaId_;

    static
    {
      StreamViewType localStreamViewType = new StreamViewType();
      defaultInstance = localStreamViewType;
      localStreamViewType.type_ = Type.PERSON;
      localStreamViewType.userGaiaId_ = 0L;
      localStreamViewType.focusObfuscatedId_ = "";
      localStreamViewType.circleId_ = "";
    }

    private StreamViewType()
    {
    }

    private StreamViewType(Builder paramBuilder)
    {
      super();
    }

    private ByteString getCircleIdBytes()
    {
      Object localObject = this.circleId_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.circleId_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static StreamViewType getDefaultInstance()
    {
      return defaultInstance;
    }

    private ByteString getFocusObfuscatedIdBytes()
    {
      Object localObject = this.focusObfuscatedId_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.focusObfuscatedId_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static Builder newBuilder()
    {
      return Builder.access$58600();
    }

    public static Builder newBuilder(StreamViewType paramStreamViewType)
    {
      return Builder.access$58600().mergeFrom(paramStreamViewType);
    }

    public final String getCircleId()
    {
      Object localObject1 = this.circleId_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.circleId_ = str;
      }
    }

    public final StreamViewType getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final String getFocusObfuscatedId()
    {
      Object localObject1 = this.focusObfuscatedId_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.focusObfuscatedId_ = str;
      }
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeEnumSize(1, this.type_.getNumber());
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeInt64Size(2, this.userGaiaId_);
        if ((0x8 & this.bitField0_) == 8)
          k += CodedOutputStream.computeBytesSize(3, getCircleIdBytes());
        if ((0x4 & this.bitField0_) == 4)
          k += CodedOutputStream.computeBytesSize(4, getFocusObfuscatedIdBytes());
        this.memoizedSerializedSize = k;
      }
    }

    public final Type getType()
    {
      return this.type_;
    }

    public final long getUserGaiaId()
    {
      return this.userGaiaId_;
    }

    public final boolean hasCircleId()
    {
      if ((0x8 & this.bitField0_) == 8);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasFocusObfuscatedId()
    {
      if ((0x4 & this.bitField0_) == 4);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasType()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean hasUserGaiaId()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeEnum(1, this.type_.getNumber());
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeInt64(2, this.userGaiaId_);
      if ((0x8 & this.bitField0_) == 8)
        paramCodedOutputStream.writeBytes(3, getCircleIdBytes());
      if ((0x4 & this.bitField0_) == 4)
        paramCodedOutputStream.writeBytes(4, getFocusObfuscatedIdBytes());
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Data.StreamViewType, Builder>
      implements Data.StreamViewTypeOrBuilder
    {
      private int bitField0_;
      private Object circleId_ = "";
      private Object focusObfuscatedId_ = "";
      private Data.StreamViewType.Type type_ = Data.StreamViewType.Type.PERSON;
      private long userGaiaId_;

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 8:
            Data.StreamViewType.Type localType = Data.StreamViewType.Type.valueOf(paramCodedInputStream.readEnum());
            if (localType == null)
              continue;
            this.bitField0_ = (0x1 | this.bitField0_);
            this.type_ = localType;
            break;
          case 16:
            this.bitField0_ = (0x2 | this.bitField0_);
            this.userGaiaId_ = paramCodedInputStream.readInt64();
            break;
          case 26:
            this.bitField0_ = (0x8 | this.bitField0_);
            this.circleId_ = paramCodedInputStream.readBytes();
            break;
          case 34:
          }
          this.bitField0_ = (0x4 | this.bitField0_);
          this.focusObfuscatedId_ = paramCodedInputStream.readBytes();
        }
      }

      public final Data.StreamViewType build()
      {
        Data.StreamViewType localStreamViewType = buildPartial();
        if (!localStreamViewType.isInitialized())
          throw new UninitializedMessageException();
        return localStreamViewType;
      }

      public final Data.StreamViewType buildPartial()
      {
        Data.StreamViewType localStreamViewType = new Data.StreamViewType(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Data.StreamViewType.access$58802(localStreamViewType, this.type_);
        if ((i & 0x2) == 2)
          k |= 2;
        Data.StreamViewType.access$58902(localStreamViewType, this.userGaiaId_);
        if ((i & 0x4) == 4)
          k |= 4;
        Data.StreamViewType.access$59002(localStreamViewType, this.focusObfuscatedId_);
        if ((i & 0x8) == 8)
          k |= 8;
        Data.StreamViewType.access$59102(localStreamViewType, this.circleId_);
        Data.StreamViewType.access$59202(localStreamViewType, k);
        return localStreamViewType;
      }

      public final Builder clear()
      {
        super.clear();
        this.type_ = Data.StreamViewType.Type.PERSON;
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.userGaiaId_ = 0L;
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.focusObfuscatedId_ = "";
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.circleId_ = "";
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        return this;
      }

      public final Builder clearCircleId()
      {
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        this.circleId_ = Data.StreamViewType.getDefaultInstance().getCircleId();
        return this;
      }

      public final Builder clearFocusObfuscatedId()
      {
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.focusObfuscatedId_ = Data.StreamViewType.getDefaultInstance().getFocusObfuscatedId();
        return this;
      }

      public final Builder clearType()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.type_ = Data.StreamViewType.Type.PERSON;
        return this;
      }

      public final Builder clearUserGaiaId()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.userGaiaId_ = 0L;
        return this;
      }

      public final String getCircleId()
      {
        Object localObject = this.circleId_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.circleId_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final Data.StreamViewType getDefaultInstanceForType()
      {
        return Data.StreamViewType.getDefaultInstance();
      }

      public final String getFocusObfuscatedId()
      {
        Object localObject = this.focusObfuscatedId_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.focusObfuscatedId_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final Data.StreamViewType.Type getType()
      {
        return this.type_;
      }

      public final long getUserGaiaId()
      {
        return this.userGaiaId_;
      }

      public final boolean hasCircleId()
      {
        if ((0x8 & this.bitField0_) == 8);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasFocusObfuscatedId()
      {
        if ((0x4 & this.bitField0_) == 4);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasType()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean hasUserGaiaId()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Data.StreamViewType paramStreamViewType)
      {
        if (paramStreamViewType == Data.StreamViewType.getDefaultInstance());
        while (true)
        {
          return this;
          if (paramStreamViewType.hasType())
            setType(paramStreamViewType.getType());
          if (paramStreamViewType.hasUserGaiaId())
            setUserGaiaId(paramStreamViewType.getUserGaiaId());
          if (paramStreamViewType.hasFocusObfuscatedId())
            setFocusObfuscatedId(paramStreamViewType.getFocusObfuscatedId());
          if (paramStreamViewType.hasCircleId())
            setCircleId(paramStreamViewType.getCircleId());
        }
      }

      public final Builder setCircleId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x8 | this.bitField0_);
        this.circleId_ = paramString;
        return this;
      }

      public final Builder setFocusObfuscatedId(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x4 | this.bitField0_);
        this.focusObfuscatedId_ = paramString;
        return this;
      }

      public final Builder setType(Data.StreamViewType.Type paramType)
      {
        if (paramType == null)
          throw new NullPointerException();
        this.bitField0_ = (0x1 | this.bitField0_);
        this.type_ = paramType;
        return this;
      }

      public final Builder setUserGaiaId(long paramLong)
      {
        this.bitField0_ = (0x2 | this.bitField0_);
        this.userGaiaId_ = paramLong;
        return this;
      }
    }

    public static enum Type
      implements Internal.EnumLite
    {
      private static Internal.EnumLiteMap<Type> internalValueMap = new Internal.EnumLiteMap()
      {
      };
      private final int value;

      static
      {
        CIRCLE = new Type("CIRCLE", 1, 2);
        NEARBY = new Type("NEARBY", 2, 3);
        ALL_CIRCLES = new Type("ALL_CIRCLES", 3, 4);
        INCOMING = new Type("INCOMING", 4, 5);
        WHATS_HOT = new Type("WHATS_HOT", 5, 6);
        Type[] arrayOfType = new Type[6];
        arrayOfType[0] = PERSON;
        arrayOfType[1] = CIRCLE;
        arrayOfType[2] = NEARBY;
        arrayOfType[3] = ALL_CIRCLES;
        arrayOfType[4] = INCOMING;
        arrayOfType[5] = WHATS_HOT;
      }

      private Type(int paramInt1, int paramInt2)
      {
        this.value = paramInt1;
      }

      public static Type valueOf(int paramInt)
      {
        Type localType;
        switch (paramInt)
        {
        default:
          localType = null;
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
        case 6:
        }
        while (true)
        {
          return localType;
          localType = PERSON;
          continue;
          localType = CIRCLE;
          continue;
          localType = NEARBY;
          continue;
          localType = ALL_CIRCLES;
          continue;
          localType = INCOMING;
          continue;
          localType = WHATS_HOT;
        }
      }

      public final int getNumber()
      {
        return this.value;
      }
    }
  }

  public static abstract interface StreamViewTypeOrBuilder extends MessageLiteOrBuilder
  {
    public abstract String getCircleId();

    public abstract String getFocusObfuscatedId();

    public abstract Data.StreamViewType.Type getType();

    public abstract long getUserGaiaId();

    public abstract boolean hasCircleId();

    public abstract boolean hasFocusObfuscatedId();

    public abstract boolean hasType();

    public abstract boolean hasUserGaiaId();
  }

  public static final class UserPreferences extends GeneratedMessageLite
    implements Data.UserPreferencesOrBuilder
  {
    private static final UserPreferences defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private boolean cityLevelLocation_;
    private Data.Audience defaultPostAudience_;
    private boolean hideLocation_;
    private long locationSpeedbumpAcceptedDate_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private Data.Promo promoData_;
    private List<Data.StreamViewType> streamViewType_;

    static
    {
      UserPreferences localUserPreferences = new UserPreferences();
      defaultInstance = localUserPreferences;
      localUserPreferences.hideLocation_ = false;
      localUserPreferences.cityLevelLocation_ = false;
      localUserPreferences.locationSpeedbumpAcceptedDate_ = 0L;
      localUserPreferences.defaultPostAudience_ = Data.Audience.getDefaultInstance();
      localUserPreferences.streamViewType_ = Collections.emptyList();
      localUserPreferences.promoData_ = Data.Promo.getDefaultInstance();
    }

    private UserPreferences()
    {
    }

    private UserPreferences(Builder paramBuilder)
    {
      super();
    }

    public static UserPreferences getDefaultInstance()
    {
      return defaultInstance;
    }

    public static Builder newBuilder()
    {
      return Builder.access$38400();
    }

    public static Builder newBuilder(UserPreferences paramUserPreferences)
    {
      return Builder.access$38400().mergeFrom(paramUserPreferences);
    }

    public final boolean getCityLevelLocation()
    {
      return this.cityLevelLocation_;
    }

    public final UserPreferences getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final Data.Audience getDefaultPostAudience()
    {
      return this.defaultPostAudience_;
    }

    public final boolean getHideLocation()
    {
      return this.hideLocation_;
    }

    public final long getLocationSpeedbumpAcceptedDate()
    {
      return this.locationSpeedbumpAcceptedDate_;
    }

    public final Data.Promo getPromoData()
    {
      return this.promoData_;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int n = i; ; n = k)
      {
        return n;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeBoolSize(1, this.hideLocation_);
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeBoolSize(2, this.cityLevelLocation_);
        if ((0x4 & this.bitField0_) == 4)
          k += CodedOutputStream.computeInt64Size(3, this.locationSpeedbumpAcceptedDate_);
        if ((0x8 & this.bitField0_) == 8)
          k += CodedOutputStream.computeMessageSize(4, this.defaultPostAudience_);
        for (int m = 0; m < this.streamViewType_.size(); m++)
          k += CodedOutputStream.computeMessageSize(5, (MessageLite)this.streamViewType_.get(m));
        if ((0x10 & this.bitField0_) == 16)
          k += CodedOutputStream.computeMessageSize(6, this.promoData_);
        this.memoizedSerializedSize = k;
      }
    }

    public final Data.StreamViewType getStreamViewType(int paramInt)
    {
      return (Data.StreamViewType)this.streamViewType_.get(paramInt);
    }

    public final int getStreamViewTypeCount()
    {
      return this.streamViewType_.size();
    }

    public final List<Data.StreamViewType> getStreamViewTypeList()
    {
      return this.streamViewType_;
    }

    public final Data.StreamViewTypeOrBuilder getStreamViewTypeOrBuilder(int paramInt)
    {
      return (Data.StreamViewTypeOrBuilder)this.streamViewType_.get(paramInt);
    }

    public final List<? extends Data.StreamViewTypeOrBuilder> getStreamViewTypeOrBuilderList()
    {
      return this.streamViewType_;
    }

    public final boolean hasCityLevelLocation()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasDefaultPostAudience()
    {
      if ((0x8 & this.bitField0_) == 8);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasHideLocation()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean hasLocationSpeedbumpAcceptedDate()
    {
      if ((0x4 & this.bitField0_) == 4);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasPromoData()
    {
      if ((0x10 & this.bitField0_) == 16);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeBool(1, this.hideLocation_);
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeBool(2, this.cityLevelLocation_);
      if ((0x4 & this.bitField0_) == 4)
        paramCodedOutputStream.writeInt64(3, this.locationSpeedbumpAcceptedDate_);
      if ((0x8 & this.bitField0_) == 8)
        paramCodedOutputStream.writeMessage(4, this.defaultPostAudience_);
      for (int i = 0; i < this.streamViewType_.size(); i++)
        paramCodedOutputStream.writeMessage(5, (MessageLite)this.streamViewType_.get(i));
      if ((0x10 & this.bitField0_) == 16)
        paramCodedOutputStream.writeMessage(6, this.promoData_);
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Data.UserPreferences, Builder>
      implements Data.UserPreferencesOrBuilder
    {
      private int bitField0_;
      private boolean cityLevelLocation_;
      private Data.Audience defaultPostAudience_ = Data.Audience.getDefaultInstance();
      private boolean hideLocation_;
      private long locationSpeedbumpAcceptedDate_;
      private Data.Promo promoData_ = Data.Promo.getDefaultInstance();
      private List<Data.StreamViewType> streamViewType_ = Collections.emptyList();

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private void ensureStreamViewTypeIsMutable()
      {
        if ((0x10 & this.bitField0_) != 16)
        {
          this.streamViewType_ = new ArrayList(this.streamViewType_);
          this.bitField0_ = (0x10 | this.bitField0_);
        }
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 8:
            this.bitField0_ = (0x1 | this.bitField0_);
            this.hideLocation_ = paramCodedInputStream.readBool();
            break;
          case 16:
            this.bitField0_ = (0x2 | this.bitField0_);
            this.cityLevelLocation_ = paramCodedInputStream.readBool();
            break;
          case 24:
            this.bitField0_ = (0x4 | this.bitField0_);
            this.locationSpeedbumpAcceptedDate_ = paramCodedInputStream.readInt64();
            break;
          case 34:
            Data.Audience.Builder localBuilder2 = Data.Audience.newBuilder();
            if (hasDefaultPostAudience())
              localBuilder2.mergeFrom(getDefaultPostAudience());
            paramCodedInputStream.readMessage(localBuilder2, paramExtensionRegistryLite);
            setDefaultPostAudience(localBuilder2.buildPartial());
            break;
          case 42:
            Data.StreamViewType.Builder localBuilder1 = Data.StreamViewType.newBuilder();
            paramCodedInputStream.readMessage(localBuilder1, paramExtensionRegistryLite);
            addStreamViewType(localBuilder1.buildPartial());
            break;
          case 50:
          }
          Data.Promo.Builder localBuilder = Data.Promo.newBuilder();
          if (hasPromoData())
            localBuilder.mergeFrom(getPromoData());
          paramCodedInputStream.readMessage(localBuilder, paramExtensionRegistryLite);
          setPromoData(localBuilder.buildPartial());
        }
      }

      public final Builder addAllStreamViewType(Iterable<? extends Data.StreamViewType> paramIterable)
      {
        ensureStreamViewTypeIsMutable();
        GeneratedMessageLite.Builder.addAll(paramIterable, this.streamViewType_);
        return this;
      }

      public final Builder addStreamViewType(int paramInt, Data.StreamViewType.Builder paramBuilder)
      {
        ensureStreamViewTypeIsMutable();
        this.streamViewType_.add(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder addStreamViewType(int paramInt, Data.StreamViewType paramStreamViewType)
      {
        if (paramStreamViewType == null)
          throw new NullPointerException();
        ensureStreamViewTypeIsMutable();
        this.streamViewType_.add(paramInt, paramStreamViewType);
        return this;
      }

      public final Builder addStreamViewType(Data.StreamViewType.Builder paramBuilder)
      {
        ensureStreamViewTypeIsMutable();
        this.streamViewType_.add(paramBuilder.build());
        return this;
      }

      public final Builder addStreamViewType(Data.StreamViewType paramStreamViewType)
      {
        if (paramStreamViewType == null)
          throw new NullPointerException();
        ensureStreamViewTypeIsMutable();
        this.streamViewType_.add(paramStreamViewType);
        return this;
      }

      public final Data.UserPreferences build()
      {
        Data.UserPreferences localUserPreferences = buildPartial();
        if (!localUserPreferences.isInitialized())
          throw new UninitializedMessageException();
        return localUserPreferences;
      }

      public final Data.UserPreferences buildPartial()
      {
        Data.UserPreferences localUserPreferences = new Data.UserPreferences(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Data.UserPreferences.access$38602(localUserPreferences, this.hideLocation_);
        if ((i & 0x2) == 2)
          k |= 2;
        Data.UserPreferences.access$38702(localUserPreferences, this.cityLevelLocation_);
        if ((i & 0x4) == 4)
          k |= 4;
        Data.UserPreferences.access$38802(localUserPreferences, this.locationSpeedbumpAcceptedDate_);
        if ((i & 0x8) == 8)
          k |= 8;
        Data.UserPreferences.access$38902(localUserPreferences, this.defaultPostAudience_);
        if ((0x10 & this.bitField0_) == 16)
        {
          this.streamViewType_ = Collections.unmodifiableList(this.streamViewType_);
          this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        }
        Data.UserPreferences.access$39002(localUserPreferences, this.streamViewType_);
        if ((i & 0x20) == 32)
          k |= 16;
        Data.UserPreferences.access$39102(localUserPreferences, this.promoData_);
        Data.UserPreferences.access$39202(localUserPreferences, k);
        return localUserPreferences;
      }

      public final Builder clear()
      {
        super.clear();
        this.hideLocation_ = false;
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.cityLevelLocation_ = false;
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.locationSpeedbumpAcceptedDate_ = 0L;
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.defaultPostAudience_ = Data.Audience.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        this.streamViewType_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        this.promoData_ = Data.Promo.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFDF & this.bitField0_);
        return this;
      }

      public final Builder clearCityLevelLocation()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.cityLevelLocation_ = false;
        return this;
      }

      public final Builder clearDefaultPostAudience()
      {
        this.defaultPostAudience_ = Data.Audience.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        return this;
      }

      public final Builder clearHideLocation()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.hideLocation_ = false;
        return this;
      }

      public final Builder clearLocationSpeedbumpAcceptedDate()
      {
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.locationSpeedbumpAcceptedDate_ = 0L;
        return this;
      }

      public final Builder clearPromoData()
      {
        this.promoData_ = Data.Promo.getDefaultInstance();
        this.bitField0_ = (0xFFFFFFDF & this.bitField0_);
        return this;
      }

      public final Builder clearStreamViewType()
      {
        this.streamViewType_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
        return this;
      }

      public final boolean getCityLevelLocation()
      {
        return this.cityLevelLocation_;
      }

      public final Data.UserPreferences getDefaultInstanceForType()
      {
        return Data.UserPreferences.getDefaultInstance();
      }

      public final Data.Audience getDefaultPostAudience()
      {
        return this.defaultPostAudience_;
      }

      public final boolean getHideLocation()
      {
        return this.hideLocation_;
      }

      public final long getLocationSpeedbumpAcceptedDate()
      {
        return this.locationSpeedbumpAcceptedDate_;
      }

      public final Data.Promo getPromoData()
      {
        return this.promoData_;
      }

      public final Data.StreamViewType getStreamViewType(int paramInt)
      {
        return (Data.StreamViewType)this.streamViewType_.get(paramInt);
      }

      public final int getStreamViewTypeCount()
      {
        return this.streamViewType_.size();
      }

      public final List<Data.StreamViewType> getStreamViewTypeList()
      {
        return Collections.unmodifiableList(this.streamViewType_);
      }

      public final boolean hasCityLevelLocation()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasDefaultPostAudience()
      {
        if ((0x8 & this.bitField0_) == 8);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasHideLocation()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean hasLocationSpeedbumpAcceptedDate()
      {
        if ((0x4 & this.bitField0_) == 4);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasPromoData()
      {
        if ((0x20 & this.bitField0_) == 32);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Data.UserPreferences paramUserPreferences)
      {
        if (paramUserPreferences == Data.UserPreferences.getDefaultInstance())
          return this;
        if (paramUserPreferences.hasHideLocation())
          setHideLocation(paramUserPreferences.getHideLocation());
        if (paramUserPreferences.hasCityLevelLocation())
          setCityLevelLocation(paramUserPreferences.getCityLevelLocation());
        if (paramUserPreferences.hasLocationSpeedbumpAcceptedDate())
          setLocationSpeedbumpAcceptedDate(paramUserPreferences.getLocationSpeedbumpAcceptedDate());
        Data.Audience localAudience;
        label111: Data.Promo localPromo;
        if (paramUserPreferences.hasDefaultPostAudience())
        {
          localAudience = paramUserPreferences.getDefaultPostAudience();
          if (((0x8 & this.bitField0_) == 8) && (this.defaultPostAudience_ != Data.Audience.getDefaultInstance()))
          {
            this.defaultPostAudience_ = Data.Audience.newBuilder(this.defaultPostAudience_).mergeFrom(localAudience).buildPartial();
            this.bitField0_ = (0x8 | this.bitField0_);
          }
        }
        else
        {
          if (!paramUserPreferences.streamViewType_.isEmpty())
          {
            if (!this.streamViewType_.isEmpty())
              break label240;
            this.streamViewType_ = paramUserPreferences.streamViewType_;
            this.bitField0_ = (0xFFFFFFEF & this.bitField0_);
          }
          label165: if (!paramUserPreferences.hasPromoData())
            break label259;
          localPromo = paramUserPreferences.getPromoData();
          if (((0x20 & this.bitField0_) != 32) || (this.promoData_ == Data.Promo.getDefaultInstance()))
            break label261;
        }
        label259: label261: for (this.promoData_ = Data.Promo.newBuilder(this.promoData_).mergeFrom(localPromo).buildPartial(); ; this.promoData_ = localPromo)
        {
          this.bitField0_ = (0x20 | this.bitField0_);
          break;
          this.defaultPostAudience_ = localAudience;
          break label111;
          label240: ensureStreamViewTypeIsMutable();
          this.streamViewType_.addAll(paramUserPreferences.streamViewType_);
          break label165;
          break;
        }
      }

      public final Builder setCityLevelLocation(boolean paramBoolean)
      {
        this.bitField0_ = (0x2 | this.bitField0_);
        this.cityLevelLocation_ = paramBoolean;
        return this;
      }

      public final Builder setDefaultPostAudience(Data.Audience.Builder paramBuilder)
      {
        this.defaultPostAudience_ = paramBuilder.build();
        this.bitField0_ = (0x8 | this.bitField0_);
        return this;
      }

      public final Builder setDefaultPostAudience(Data.Audience paramAudience)
      {
        if (paramAudience == null)
          throw new NullPointerException();
        this.defaultPostAudience_ = paramAudience;
        this.bitField0_ = (0x8 | this.bitField0_);
        return this;
      }

      public final Builder setHideLocation(boolean paramBoolean)
      {
        this.bitField0_ = (0x1 | this.bitField0_);
        this.hideLocation_ = paramBoolean;
        return this;
      }

      public final Builder setLocationSpeedbumpAcceptedDate(long paramLong)
      {
        this.bitField0_ = (0x4 | this.bitField0_);
        this.locationSpeedbumpAcceptedDate_ = paramLong;
        return this;
      }

      public final Builder setPromoData(Data.Promo.Builder paramBuilder)
      {
        this.promoData_ = paramBuilder.build();
        this.bitField0_ = (0x20 | this.bitField0_);
        return this;
      }

      public final Builder setPromoData(Data.Promo paramPromo)
      {
        if (paramPromo == null)
          throw new NullPointerException();
        this.promoData_ = paramPromo;
        this.bitField0_ = (0x20 | this.bitField0_);
        return this;
      }

      public final Builder setStreamViewType(int paramInt, Data.StreamViewType.Builder paramBuilder)
      {
        ensureStreamViewTypeIsMutable();
        this.streamViewType_.set(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder setStreamViewType(int paramInt, Data.StreamViewType paramStreamViewType)
      {
        if (paramStreamViewType == null)
          throw new NullPointerException();
        ensureStreamViewTypeIsMutable();
        this.streamViewType_.set(paramInt, paramStreamViewType);
        return this;
      }
    }
  }

  public static abstract interface UserPreferencesOrBuilder extends MessageLiteOrBuilder
  {
    public abstract boolean getCityLevelLocation();

    public abstract Data.Audience getDefaultPostAudience();

    public abstract boolean getHideLocation();

    public abstract long getLocationSpeedbumpAcceptedDate();

    public abstract Data.Promo getPromoData();

    public abstract Data.StreamViewType getStreamViewType(int paramInt);

    public abstract int getStreamViewTypeCount();

    public abstract List<Data.StreamViewType> getStreamViewTypeList();

    public abstract boolean hasCityLevelLocation();

    public abstract boolean hasDefaultPostAudience();

    public abstract boolean hasHideLocation();

    public abstract boolean hasLocationSpeedbumpAcceptedDate();

    public abstract boolean hasPromoData();
  }

  public static final class VideoData extends GeneratedMessageLite
    implements Data.VideoDataOrBuilder
  {
    private static final VideoData defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private long duration_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private VideoStatus status_;
    private List<Data.VideoStream> stream_;

    static
    {
      VideoData localVideoData = new VideoData();
      defaultInstance = localVideoData;
      localVideoData.status_ = VideoStatus.PENDING;
      localVideoData.stream_ = Collections.emptyList();
      localVideoData.duration_ = 0L;
    }

    private VideoData()
    {
    }

    private VideoData(Builder paramBuilder)
    {
      super();
    }

    public static VideoData getDefaultInstance()
    {
      return defaultInstance;
    }

    public static Builder newBuilder()
    {
      return Builder.access$22200();
    }

    public static Builder newBuilder(VideoData paramVideoData)
    {
      return Builder.access$22200().mergeFrom(paramVideoData);
    }

    public final VideoData getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final long getDuration()
    {
      return this.duration_;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int n = i; ; n = k)
      {
        return n;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeEnumSize(1, this.status_.getNumber());
        for (int m = 0; m < this.stream_.size(); m++)
          k += CodedOutputStream.computeMessageSize(2, (MessageLite)this.stream_.get(m));
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeInt64Size(3, this.duration_);
        this.memoizedSerializedSize = k;
      }
    }

    public final VideoStatus getStatus()
    {
      return this.status_;
    }

    public final Data.VideoStream getStream(int paramInt)
    {
      return (Data.VideoStream)this.stream_.get(paramInt);
    }

    public final int getStreamCount()
    {
      return this.stream_.size();
    }

    public final List<Data.VideoStream> getStreamList()
    {
      return this.stream_;
    }

    public final Data.VideoStreamOrBuilder getStreamOrBuilder(int paramInt)
    {
      return (Data.VideoStreamOrBuilder)this.stream_.get(paramInt);
    }

    public final List<? extends Data.VideoStreamOrBuilder> getStreamOrBuilderList()
    {
      return this.stream_;
    }

    public final boolean hasDuration()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasStatus()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeEnum(1, this.status_.getNumber());
      for (int i = 0; i < this.stream_.size(); i++)
        paramCodedOutputStream.writeMessage(2, (MessageLite)this.stream_.get(i));
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeInt64(3, this.duration_);
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Data.VideoData, Builder>
      implements Data.VideoDataOrBuilder
    {
      private int bitField0_;
      private long duration_;
      private Data.VideoData.VideoStatus status_ = Data.VideoData.VideoStatus.PENDING;
      private List<Data.VideoStream> stream_ = Collections.emptyList();

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private void ensureStreamIsMutable()
      {
        if ((0x2 & this.bitField0_) != 2)
        {
          this.stream_ = new ArrayList(this.stream_);
          this.bitField0_ = (0x2 | this.bitField0_);
        }
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 8:
            Data.VideoData.VideoStatus localVideoStatus = Data.VideoData.VideoStatus.valueOf(paramCodedInputStream.readEnum());
            if (localVideoStatus == null)
              continue;
            this.bitField0_ = (0x1 | this.bitField0_);
            this.status_ = localVideoStatus;
            break;
          case 18:
            Data.VideoStream.Builder localBuilder = Data.VideoStream.newBuilder();
            paramCodedInputStream.readMessage(localBuilder, paramExtensionRegistryLite);
            addStream(localBuilder.buildPartial());
            break;
          case 24:
          }
          this.bitField0_ = (0x4 | this.bitField0_);
          this.duration_ = paramCodedInputStream.readInt64();
        }
      }

      public final Builder addAllStream(Iterable<? extends Data.VideoStream> paramIterable)
      {
        ensureStreamIsMutable();
        GeneratedMessageLite.Builder.addAll(paramIterable, this.stream_);
        return this;
      }

      public final Builder addStream(int paramInt, Data.VideoStream.Builder paramBuilder)
      {
        ensureStreamIsMutable();
        this.stream_.add(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder addStream(int paramInt, Data.VideoStream paramVideoStream)
      {
        if (paramVideoStream == null)
          throw new NullPointerException();
        ensureStreamIsMutable();
        this.stream_.add(paramInt, paramVideoStream);
        return this;
      }

      public final Builder addStream(Data.VideoStream.Builder paramBuilder)
      {
        ensureStreamIsMutable();
        this.stream_.add(paramBuilder.build());
        return this;
      }

      public final Builder addStream(Data.VideoStream paramVideoStream)
      {
        if (paramVideoStream == null)
          throw new NullPointerException();
        ensureStreamIsMutable();
        this.stream_.add(paramVideoStream);
        return this;
      }

      public final Data.VideoData build()
      {
        Data.VideoData localVideoData = buildPartial();
        if (!localVideoData.isInitialized())
          throw new UninitializedMessageException();
        return localVideoData;
      }

      public final Data.VideoData buildPartial()
      {
        Data.VideoData localVideoData = new Data.VideoData(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Data.VideoData.access$22402(localVideoData, this.status_);
        if ((0x2 & this.bitField0_) == 2)
        {
          this.stream_ = Collections.unmodifiableList(this.stream_);
          this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        }
        Data.VideoData.access$22502(localVideoData, this.stream_);
        if ((i & 0x4) == 4)
          k |= 2;
        Data.VideoData.access$22602(localVideoData, this.duration_);
        Data.VideoData.access$22702(localVideoData, k);
        return localVideoData;
      }

      public final Builder clear()
      {
        super.clear();
        this.status_ = Data.VideoData.VideoStatus.PENDING;
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.stream_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.duration_ = 0L;
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        return this;
      }

      public final Builder clearDuration()
      {
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.duration_ = 0L;
        return this;
      }

      public final Builder clearStatus()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.status_ = Data.VideoData.VideoStatus.PENDING;
        return this;
      }

      public final Builder clearStream()
      {
        this.stream_ = Collections.emptyList();
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        return this;
      }

      public final Data.VideoData getDefaultInstanceForType()
      {
        return Data.VideoData.getDefaultInstance();
      }

      public final long getDuration()
      {
        return this.duration_;
      }

      public final Data.VideoData.VideoStatus getStatus()
      {
        return this.status_;
      }

      public final Data.VideoStream getStream(int paramInt)
      {
        return (Data.VideoStream)this.stream_.get(paramInt);
      }

      public final int getStreamCount()
      {
        return this.stream_.size();
      }

      public final List<Data.VideoStream> getStreamList()
      {
        return Collections.unmodifiableList(this.stream_);
      }

      public final boolean hasDuration()
      {
        if ((0x4 & this.bitField0_) == 4);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasStatus()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Data.VideoData paramVideoData)
      {
        if (paramVideoData == Data.VideoData.getDefaultInstance());
        label87: label106: 
        while (true)
        {
          return this;
          if (paramVideoData.hasStatus())
            setStatus(paramVideoData.getStatus());
          if (!paramVideoData.stream_.isEmpty())
          {
            if (!this.stream_.isEmpty())
              break label87;
            this.stream_ = paramVideoData.stream_;
            this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
          }
          while (true)
          {
            if (!paramVideoData.hasDuration())
              break label106;
            setDuration(paramVideoData.getDuration());
            break;
            ensureStreamIsMutable();
            this.stream_.addAll(paramVideoData.stream_);
          }
        }
      }

      public final Builder setDuration(long paramLong)
      {
        this.bitField0_ = (0x4 | this.bitField0_);
        this.duration_ = paramLong;
        return this;
      }

      public final Builder setStatus(Data.VideoData.VideoStatus paramVideoStatus)
      {
        if (paramVideoStatus == null)
          throw new NullPointerException();
        this.bitField0_ = (0x1 | this.bitField0_);
        this.status_ = paramVideoStatus;
        return this;
      }

      public final Builder setStream(int paramInt, Data.VideoStream.Builder paramBuilder)
      {
        ensureStreamIsMutable();
        this.stream_.set(paramInt, paramBuilder.build());
        return this;
      }

      public final Builder setStream(int paramInt, Data.VideoStream paramVideoStream)
      {
        if (paramVideoStream == null)
          throw new NullPointerException();
        ensureStreamIsMutable();
        this.stream_.set(paramInt, paramVideoStream);
        return this;
      }
    }

    public static enum VideoStatus
      implements Internal.EnumLite
    {
      private static Internal.EnumLiteMap<VideoStatus> internalValueMap = new Internal.EnumLiteMap()
      {
      };
      private final int value;

      static
      {
        FAILED = new VideoStatus("FAILED", 1, 1);
        READY = new VideoStatus("READY", 2, 2);
        FINAL = new VideoStatus("FINAL", 3, 3);
        VideoStatus[] arrayOfVideoStatus = new VideoStatus[4];
        arrayOfVideoStatus[0] = PENDING;
        arrayOfVideoStatus[1] = FAILED;
        arrayOfVideoStatus[2] = READY;
        arrayOfVideoStatus[3] = FINAL;
      }

      private VideoStatus(int paramInt1, int paramInt2)
      {
        this.value = paramInt1;
      }

      public static VideoStatus valueOf(int paramInt)
      {
        VideoStatus localVideoStatus;
        switch (paramInt)
        {
        default:
          localVideoStatus = null;
        case 0:
        case 1:
        case 2:
        case 3:
        }
        while (true)
        {
          return localVideoStatus;
          localVideoStatus = PENDING;
          continue;
          localVideoStatus = FAILED;
          continue;
          localVideoStatus = READY;
          continue;
          localVideoStatus = FINAL;
        }
      }

      public final int getNumber()
      {
        return this.value;
      }
    }
  }

  public static abstract interface VideoDataOrBuilder extends MessageLiteOrBuilder
  {
    public abstract long getDuration();

    public abstract Data.VideoData.VideoStatus getStatus();

    public abstract Data.VideoStream getStream(int paramInt);

    public abstract int getStreamCount();

    public abstract List<Data.VideoStream> getStreamList();

    public abstract boolean hasDuration();

    public abstract boolean hasStatus();
  }

  public static final class VideoStream extends GeneratedMessageLite
    implements Data.VideoStreamOrBuilder
  {
    private static final VideoStream defaultInstance;
    private static final long serialVersionUID;
    private int bitField0_;
    private int formatId_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    private Object streamUrl_;
    private int videoHeight_;
    private int videoWidth_;

    static
    {
      VideoStream localVideoStream = new VideoStream();
      defaultInstance = localVideoStream;
      localVideoStream.streamUrl_ = "";
      localVideoStream.videoWidth_ = 0;
      localVideoStream.videoHeight_ = 0;
      localVideoStream.formatId_ = 0;
    }

    private VideoStream()
    {
    }

    private VideoStream(Builder paramBuilder)
    {
      super();
    }

    public static VideoStream getDefaultInstance()
    {
      return defaultInstance;
    }

    private ByteString getStreamUrlBytes()
    {
      Object localObject = this.streamUrl_;
      ByteString localByteString;
      if ((localObject instanceof String))
      {
        localByteString = ByteString.copyFromUtf8((String)localObject);
        this.streamUrl_ = localByteString;
      }
      while (true)
      {
        return localByteString;
        localByteString = (ByteString)localObject;
      }
    }

    public static Builder newBuilder()
    {
      return Builder.access$21400();
    }

    public final VideoStream getDefaultInstanceForType()
    {
      return defaultInstance;
    }

    public final int getFormatId()
    {
      return this.formatId_;
    }

    public final int getSerializedSize()
    {
      int i = this.memoizedSerializedSize;
      if (i != -1);
      int k;
      for (int m = i; ; m = k)
      {
        return m;
        int j = 0x1 & this.bitField0_;
        k = 0;
        if (j == 1)
          k = 0 + CodedOutputStream.computeBytesSize(1, getStreamUrlBytes());
        if ((0x2 & this.bitField0_) == 2)
          k += CodedOutputStream.computeInt32Size(2, this.videoWidth_);
        if ((0x4 & this.bitField0_) == 4)
          k += CodedOutputStream.computeInt32Size(3, this.videoHeight_);
        if ((0x8 & this.bitField0_) == 8)
          k += CodedOutputStream.computeInt32Size(4, this.formatId_);
        this.memoizedSerializedSize = k;
      }
    }

    public final String getStreamUrl()
    {
      Object localObject1 = this.streamUrl_;
      if ((localObject1 instanceof String));
      String str;
      for (Object localObject2 = (String)localObject1; ; localObject2 = str)
      {
        return localObject2;
        ByteString localByteString = (ByteString)localObject1;
        str = localByteString.toStringUtf8();
        if (Internal.isValidUtf8(localByteString))
          this.streamUrl_ = str;
      }
    }

    public final int getVideoHeight()
    {
      return this.videoHeight_;
    }

    public final int getVideoWidth()
    {
      return this.videoWidth_;
    }

    public final boolean hasFormatId()
    {
      if ((0x8 & this.bitField0_) == 8);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasStreamUrl()
    {
      int i = 1;
      if ((0x1 & this.bitField0_) == i);
      while (true)
      {
        return i;
        int j = 0;
      }
    }

    public final boolean hasVideoHeight()
    {
      if ((0x4 & this.bitField0_) == 4);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean hasVideoWidth()
    {
      if ((0x2 & this.bitField0_) == 2);
      for (boolean bool = true; ; bool = false)
        return bool;
    }

    public final boolean isInitialized()
    {
      int i = 1;
      int j = this.memoizedIsInitialized;
      if (j != -1)
        if (j != i);
      while (true)
      {
        return i;
        i = 0;
        continue;
        this.memoizedIsInitialized = i;
      }
    }

    protected final Object writeReplace()
      throws ObjectStreamException
    {
      return super.writeReplace();
    }

    public final void writeTo(CodedOutputStream paramCodedOutputStream)
      throws IOException
    {
      getSerializedSize();
      if ((0x1 & this.bitField0_) == 1)
        paramCodedOutputStream.writeBytes(1, getStreamUrlBytes());
      if ((0x2 & this.bitField0_) == 2)
        paramCodedOutputStream.writeInt32(2, this.videoWidth_);
      if ((0x4 & this.bitField0_) == 4)
        paramCodedOutputStream.writeInt32(3, this.videoHeight_);
      if ((0x8 & this.bitField0_) == 8)
        paramCodedOutputStream.writeInt32(4, this.formatId_);
    }

    public static final class Builder extends GeneratedMessageLite.Builder<Data.VideoStream, Builder>
      implements Data.VideoStreamOrBuilder
    {
      private int bitField0_;
      private int formatId_;
      private Object streamUrl_ = "";
      private int videoHeight_;
      private int videoWidth_;

      private Builder clone()
      {
        return new Builder().mergeFrom(buildPartial());
      }

      private Builder mergeFrom(CodedInputStream paramCodedInputStream, ExtensionRegistryLite paramExtensionRegistryLite)
        throws IOException
      {
        while (true)
        {
          int i = paramCodedInputStream.readTag();
          switch (i)
          {
          default:
            if (parseUnknownField(paramCodedInputStream, paramExtensionRegistryLite, i))
              continue;
          case 0:
            return this;
          case 10:
            this.bitField0_ = (0x1 | this.bitField0_);
            this.streamUrl_ = paramCodedInputStream.readBytes();
            break;
          case 16:
            this.bitField0_ = (0x2 | this.bitField0_);
            this.videoWidth_ = paramCodedInputStream.readInt32();
            break;
          case 24:
            this.bitField0_ = (0x4 | this.bitField0_);
            this.videoHeight_ = paramCodedInputStream.readInt32();
            break;
          case 32:
          }
          this.bitField0_ = (0x8 | this.bitField0_);
          this.formatId_ = paramCodedInputStream.readInt32();
        }
      }

      public final Data.VideoStream build()
      {
        Data.VideoStream localVideoStream = buildPartial();
        if (!localVideoStream.isInitialized())
          throw new UninitializedMessageException();
        return localVideoStream;
      }

      public final Data.VideoStream buildPartial()
      {
        Data.VideoStream localVideoStream = new Data.VideoStream(this, (byte)0);
        int i = this.bitField0_;
        int j = i & 0x1;
        int k = 0;
        if (j == 1)
          k = 1;
        Data.VideoStream.access$21602(localVideoStream, this.streamUrl_);
        if ((i & 0x2) == 2)
          k |= 2;
        Data.VideoStream.access$21702(localVideoStream, this.videoWidth_);
        if ((i & 0x4) == 4)
          k |= 4;
        Data.VideoStream.access$21802(localVideoStream, this.videoHeight_);
        if ((i & 0x8) == 8)
          k |= 8;
        Data.VideoStream.access$21902(localVideoStream, this.formatId_);
        Data.VideoStream.access$22002(localVideoStream, k);
        return localVideoStream;
      }

      public final Builder clear()
      {
        super.clear();
        this.streamUrl_ = "";
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.videoWidth_ = 0;
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.videoHeight_ = 0;
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.formatId_ = 0;
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        return this;
      }

      public final Builder clearFormatId()
      {
        this.bitField0_ = (0xFFFFFFF7 & this.bitField0_);
        this.formatId_ = 0;
        return this;
      }

      public final Builder clearStreamUrl()
      {
        this.bitField0_ = (0xFFFFFFFE & this.bitField0_);
        this.streamUrl_ = Data.VideoStream.getDefaultInstance().getStreamUrl();
        return this;
      }

      public final Builder clearVideoHeight()
      {
        this.bitField0_ = (0xFFFFFFFB & this.bitField0_);
        this.videoHeight_ = 0;
        return this;
      }

      public final Builder clearVideoWidth()
      {
        this.bitField0_ = (0xFFFFFFFD & this.bitField0_);
        this.videoWidth_ = 0;
        return this;
      }

      public final Data.VideoStream getDefaultInstanceForType()
      {
        return Data.VideoStream.getDefaultInstance();
      }

      public final int getFormatId()
      {
        return this.formatId_;
      }

      public final String getStreamUrl()
      {
        Object localObject = this.streamUrl_;
        String str;
        if (!(localObject instanceof String))
        {
          str = ((ByteString)localObject).toStringUtf8();
          this.streamUrl_ = str;
        }
        while (true)
        {
          return str;
          str = (String)localObject;
        }
      }

      public final int getVideoHeight()
      {
        return this.videoHeight_;
      }

      public final int getVideoWidth()
      {
        return this.videoWidth_;
      }

      public final boolean hasFormatId()
      {
        if ((0x8 & this.bitField0_) == 8);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasStreamUrl()
      {
        int i = 1;
        if ((0x1 & this.bitField0_) == i);
        while (true)
        {
          return i;
          int j = 0;
        }
      }

      public final boolean hasVideoHeight()
      {
        if ((0x4 & this.bitField0_) == 4);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean hasVideoWidth()
      {
        if ((0x2 & this.bitField0_) == 2);
        for (boolean bool = true; ; bool = false)
          return bool;
      }

      public final boolean isInitialized()
      {
        return true;
      }

      public final Builder mergeFrom(Data.VideoStream paramVideoStream)
      {
        if (paramVideoStream == Data.VideoStream.getDefaultInstance());
        while (true)
        {
          return this;
          if (paramVideoStream.hasStreamUrl())
            setStreamUrl(paramVideoStream.getStreamUrl());
          if (paramVideoStream.hasVideoWidth())
            setVideoWidth(paramVideoStream.getVideoWidth());
          if (paramVideoStream.hasVideoHeight())
            setVideoHeight(paramVideoStream.getVideoHeight());
          if (paramVideoStream.hasFormatId())
            setFormatId(paramVideoStream.getFormatId());
        }
      }

      public final Builder setFormatId(int paramInt)
      {
        this.bitField0_ = (0x8 | this.bitField0_);
        this.formatId_ = paramInt;
        return this;
      }

      public final Builder setStreamUrl(String paramString)
      {
        if (paramString == null)
          throw new NullPointerException();
        this.bitField0_ = (0x1 | this.bitField0_);
        this.streamUrl_ = paramString;
        return this;
      }

      public final Builder setVideoHeight(int paramInt)
      {
        this.bitField0_ = (0x4 | this.bitField0_);
        this.videoHeight_ = paramInt;
        return this;
      }

      public final Builder setVideoWidth(int paramInt)
      {
        this.bitField0_ = (0x2 | this.bitField0_);
        this.videoWidth_ = paramInt;
        return this;
      }
    }

    public static enum VideoFormatId
      implements Internal.EnumLite
    {
      private static Internal.EnumLiteMap<VideoFormatId> internalValueMap = new Internal.EnumLiteMap()
      {
      };
      private final int value;

      static
      {
        MP4_AVC720P_AAC = new VideoFormatId("MP4_AVC720P_AAC", 2, 22);
        FLV_H264_AAC_MED = new VideoFormatId("FLV_H264_AAC_MED", 3, 34);
        FLV_H264_AAC_HIGH = new VideoFormatId("FLV_H264_AAC_HIGH", 4, 35);
        THREEGPP_MPEG4SP_AAC_HIGH = new VideoFormatId("THREEGPP_MPEG4SP_AAC_HIGH", 5, 36);
        MP4_H264_AAC_1080P = new VideoFormatId("MP4_H264_AAC_1080P", 6, 37);
        VideoFormatId[] arrayOfVideoFormatId = new VideoFormatId[7];
        arrayOfVideoFormatId[0] = FLV320;
        arrayOfVideoFormatId[1] = MP4_AVCBASE640_AAC;
        arrayOfVideoFormatId[2] = MP4_AVC720P_AAC;
        arrayOfVideoFormatId[3] = FLV_H264_AAC_MED;
        arrayOfVideoFormatId[4] = FLV_H264_AAC_HIGH;
        arrayOfVideoFormatId[5] = THREEGPP_MPEG4SP_AAC_HIGH;
        arrayOfVideoFormatId[6] = MP4_H264_AAC_1080P;
      }

      private VideoFormatId(int paramInt1, int paramInt2)
      {
        this.value = paramInt1;
      }

      public static VideoFormatId valueOf(int paramInt)
      {
        VideoFormatId localVideoFormatId;
        switch (paramInt)
        {
        default:
          localVideoFormatId = null;
        case 5:
        case 18:
        case 22:
        case 34:
        case 35:
        case 36:
        case 37:
        }
        while (true)
        {
          return localVideoFormatId;
          localVideoFormatId = FLV320;
          continue;
          localVideoFormatId = MP4_AVCBASE640_AAC;
          continue;
          localVideoFormatId = MP4_AVC720P_AAC;
          continue;
          localVideoFormatId = FLV_H264_AAC_MED;
          continue;
          localVideoFormatId = FLV_H264_AAC_HIGH;
          continue;
          localVideoFormatId = THREEGPP_MPEG4SP_AAC_HIGH;
          continue;
          localVideoFormatId = MP4_H264_AAC_1080P;
        }
      }

      public final int getNumber()
      {
        return this.value;
      }
    }
  }

  public static abstract interface VideoStreamOrBuilder extends MessageLiteOrBuilder
  {
    public abstract int getFormatId();

    public abstract String getStreamUrl();

    public abstract int getVideoHeight();

    public abstract int getVideoWidth();

    public abstract boolean hasFormatId();

    public abstract boolean hasStreamUrl();

    public abstract boolean hasVideoHeight();

    public abstract boolean hasVideoWidth();
  }
}

/* Location:           C:\Dev\Java\android\adt-bundle-windows\workspace\googleplus\classes_dex2jar.jar
 * Qualified Name:     com.google.wireless.tacotruck.proto.Data
 * JD-Core Version:    0.6.2
 */